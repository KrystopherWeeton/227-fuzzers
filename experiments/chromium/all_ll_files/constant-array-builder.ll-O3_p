; ModuleID = '../../v8/src/interpreter/constant-array-builder.cc'
source_filename = "../../v8/src/interpreter/constant-array-builder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice" = type { i64, i64, i64, i8, %"class.v8::internal::ZoneVector" }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"*, %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"*, %"class.std::__1::__compressed_pair.24" }
%"class.v8::internal::interpreter::ConstantArrayBuilder::Entry" = type <{ %union.anon, i8, [7 x i8] }>
%union.anon = type { %"class.v8::internal::Handle" }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25", %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.4" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set", %"class.std::__1::set.13" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { i64 }
%"class.std::__1::set.13" = type { %"class.std::__1::__tree.14" }
%"class.std::__1::__tree.14" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::interpreter::ConstantArrayBuilder" = type { [3 x %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*], %"class.v8::base::TemplateHashMapImpl.27", %"class.v8::internal::ZoneMap", %"class.v8::internal::ZoneVector.36", %"class.v8::internal::ZoneMap.43", i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.v8::base::TemplateHashMapImpl.27" = type { %"struct.v8::base::TemplateHashMapImpl<long, unsigned int, v8::base::KeyEqualityMatcher<long>, v8::internal::ZoneAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<long, unsigned int, v8::base::KeyEqualityMatcher<long>, v8::internal::ZoneAllocationPolicy>::Impl" = type { %"class.v8::internal::ZoneAllocationPolicy", %"struct.v8::base::TemplateHashMapEntry.29"*, i32, i32 }
%"class.v8::internal::ZoneAllocationPolicy" = type { %"class.v8::internal::Zone"* }
%"struct.v8::base::TemplateHashMapEntry.29" = type <{ i64, i32, i32, i8, [7 x i8] }>
%"class.v8::internal::ZoneMap" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.30" }
%"class.std::__1::__tree.30" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.8", %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.v8::internal::ZoneAllocator.33" }
%"class.v8::internal::ZoneAllocator.33" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.v8::internal::ZoneVector.36" = type { %"class.std::__1::vector.37" }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.39" }
%"struct.std::__1::pair" = type <{ %"class.v8::internal::Smi", i32, [4 x i8] }>
%"class.v8::internal::Smi" = type { %"class.v8::internal::Object" }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40", %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.v8::internal::ZoneAllocator.42" }
%"class.v8::internal::ZoneAllocator.42" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneMap.43" = type { %"class.std::__1::map.44" }
%"class.std::__1::map.44" = type { %"class.std::__1::__tree.45" }
%"class.std::__1::__tree.45" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.46", %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.8", %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.v8::internal::ZoneAllocator.48" }
%"class.v8::internal::ZoneAllocator.48" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.60", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.692", %"class.std::__1::unique_ptr.713", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.723", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.858", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.871", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.881", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.892", %"struct.std::__1::atomic.217", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.967", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.1012"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1021", i32, i8, i8, i32, i32, %"class.std::__1::vector.1027", %"class.std::__1::vector.1027", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1034", i64, %"class.std::__1::unordered_map.1035", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.588", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.225", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1091", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1129", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1163", %"class.std::__1::vector.1167", %"class.std::__1::vector.1167", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.54", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.54" = type { %"struct.std::__1::__atomic_base.55" }
%"struct.std::__1::__atomic_base.55" = type { %"struct.std::__1::__cxx_atomic_impl.56" }
%"struct.std::__1::__cxx_atomic_impl.56" = type { %"struct.std::__1::__cxx_atomic_base_impl.57" }
%"struct.std::__1::__cxx_atomic_base_impl.57" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.58", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.58" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.90", %"class.std::__1::vector.94", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.211", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.226", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.230", %"class.std::__1::vector.230", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.237", %"class.std::__1::unique_ptr.243", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.373", %"class.std::__1::unique_ptr.379", %"class.std::__1::unique_ptr.385", %"class.std::__1::unique_ptr.424", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.493", %"class.std::__1::unique_ptr.499", %"class.std::__1::unique_ptr.509", %"class.std::__1::unique_ptr.515", %"class.std::__1::unique_ptr.515", %"class.std::__1::unique_ptr.521", %"class.std::__1::unique_ptr.527", %"class.std::__1::unique_ptr.527", %"class.std::__1::unique_ptr.533", %"class.std::__1::unique_ptr.539", %"class.std::__1::shared_ptr.545", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.550", %"class.std::__1::unique_ptr.576", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.582", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.595", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.395", i8, [7 x i8], %"class.std::__1::unordered_map.601", %"class.std::__1::unordered_map.627", %"class.std::__1::unordered_map.601", %"class.std::__1::unordered_map.651", %"class.std::__1::vector.679", i8, %"class.std::__1::unique_ptr.686", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.66", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68", %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.85", %"struct.std::__1::atomic.85", %"struct.std::__1::atomic.85" }
%"struct.std::__1::atomic.85" = type { %"struct.std::__1::__atomic_base.86" }
%"struct.std::__1::__atomic_base.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i64 }
%"struct.std::__1::atomic.90" = type { %"struct.std::__1::__atomic_base.91" }
%"struct.std::__1::__atomic_base.91" = type { %"struct.std::__1::__cxx_atomic_impl.92" }
%"struct.std::__1::__cxx_atomic_impl.92" = type { %"struct.std::__1::__cxx_atomic_base_impl.93" }
%"struct.std::__1::__cxx_atomic_base_impl.93" = type { i32 }
%"class.std::__1::vector.94" = type { %"class.std::__1::__vector_base.95" }
%"class.std::__1::__vector_base.95" = type { %"struct.std::__1::pair.96"*, %"struct.std::__1::pair.96"*, %"class.std::__1::__compressed_pair.97" }
%"struct.std::__1::pair.96" = type opaque
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.std::__1::pair.96"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.168" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.162" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.102", %"class.std::__1::vector.102", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.102" = type { %"class.std::__1::__vector_base.103" }
%"class.std::__1::__vector_base.103" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.104" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.109" }
%"class.std::__1::__hash_table.109" = type <{ %"class.std::__1::unique_ptr.110", %"class.std::__1::__compressed_pair.120", %"class.std::__1::__compressed_pair.125", %"class.std::__1::__compressed_pair.127", [4 x i8] }>
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112", %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"struct.std::__1::__hash_node_base.113"** }
%"struct.std::__1::__hash_node_base.113" = type { %"struct.std::__1::__hash_node_base.113"* }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.std::__1::__bucket_list_deallocator.115" }
%"class.std::__1::__bucket_list_deallocator.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"struct.std::__1::__hash_node_base.113" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.85", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set.143"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.151", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.85", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.85", %"struct.std::__1::atomic.132", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.132" = type { %"struct.std::__1::__atomic_base.133" }
%"struct.std::__1::__atomic_base.133" = type { %"struct.std::__1::__cxx_atomic_impl.134" }
%"struct.std::__1::__cxx_atomic_impl.134" = type { %"struct.std::__1::__cxx_atomic_base_impl.135" }
%"struct.std::__1::__cxx_atomic_base_impl.135" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.136" }
%"class.std::__1::vector.136" = type { %"class.std::__1::__vector_base.137" }
%"class.std::__1::__vector_base.137" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.138" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set.143" = type { %"class.std::__1::__tree.144" }
%"class.std::__1::__tree.144" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.145", %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::atomic.151" = type { %"struct.std::__1::__atomic_base.152" }
%"struct.std::__1::__atomic_base.152" = type { %"struct.std::__1::__cxx_atomic_impl.153" }
%"struct.std::__1::__cxx_atomic_impl.153" = type { %"struct.std::__1::__cxx_atomic_base_impl.154" }
%"struct.std::__1::__cxx_atomic_base_impl.154" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.155", i8, [7 x i8] }>
%"class.std::__1::vector.155" = type { %"class.std::__1::__vector_base.156" }
%"class.std::__1::__vector_base.156" = type { i64*, i64*, %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.168" = type { %"class.std::__1::__vector_base.169" }
%"class.std::__1::__vector_base.169" = type { %"struct.std::__1::pair.170"*, %"struct.std::__1::pair.170"*, %"class.std::__1::__compressed_pair.171" }
%"struct.std::__1::pair.170" = type { i32, i64 }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"struct.std::__1::pair.170"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic", i64, %"struct.std::__1::atomic" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic", i32, %"struct.std::__1::atomic", %"class.v8::base::Mutex", %"struct.std::__1::atomic" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.176" }
%"class.std::__1::unordered_map.176" = type { %"class.std::__1::__hash_table.177" }
%"class.std::__1::__hash_table.177" = type <{ %"class.std::__1::unique_ptr.178", %"class.std::__1::__compressed_pair.188", %"class.std::__1::__compressed_pair.193", %"class.std::__1::__compressed_pair.198", [4 x i8] }>
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180", %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"struct.std::__1::__hash_node_base.181"** }
%"struct.std::__1::__hash_node_base.181" = type { %"struct.std::__1::__hash_node_base.181"* }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.std::__1::__bucket_list_deallocator.183" }
%"class.std::__1::__bucket_list_deallocator.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"struct.std::__1::__hash_node_base.181" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.204", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.204" = type { %"class.std::__1::__vector_base.205" }
%"class.std::__1::__vector_base.205" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.206" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1096", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1100", %"class.std::__1::unique_ptr.1106", %"class.std::__1::unique_ptr.539", %"class.std::__1::vector.1112", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1096" = type { %"struct.std::__1::__atomic_base.1097" }
%"struct.std::__1::__atomic_base.1097" = type { %"struct.std::__1::__cxx_atomic_impl.1098" }
%"struct.std::__1::__cxx_atomic_impl.1098" = type { %"struct.std::__1::__cxx_atomic_base_impl.1099" }
%"struct.std::__1::__cxx_atomic_base_impl.1099" = type { i32 }
%"class.std::__1::unique_ptr.1100" = type { %"class.std::__1::__compressed_pair.1101" }
%"class.std::__1::__compressed_pair.1101" = type { %"struct.std::__1::__compressed_pair_elem.1102" }
%"struct.std::__1::__compressed_pair_elem.1102" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.851" }
%"class.std::__1::vector.851" = type { %"class.std::__1::__vector_base.852" }
%"class.std::__1::__vector_base.852" = type { i64**, i64**, %"class.std::__1::__compressed_pair.853" }
%"class.std::__1::__compressed_pair.853" = type { %"struct.std::__1::__compressed_pair_elem.854" }
%"struct.std::__1::__compressed_pair_elem.854" = type { i64** }
%"class.std::__1::unique_ptr.1106" = type { %"class.std::__1::__compressed_pair.1107" }
%"class.std::__1::__compressed_pair.1107" = type { %"struct.std::__1::__compressed_pair_elem.1108" }
%"struct.std::__1::__compressed_pair_elem.1108" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.851", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1112" = type { %"class.std::__1::__vector_base.1113" }
%"class.std::__1::__vector_base.1113" = type { %"struct.std::__1::pair.1114"*, %"struct.std::__1::pair.1114"*, %"class.std::__1::__compressed_pair.1115" }
%"struct.std::__1::pair.1114" = type opaque
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.1116" }
%"struct.std::__1::__compressed_pair_elem.1116" = type { %"struct.std::__1::pair.1114"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.217", %"struct.std::__1::atomic.221", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.221" = type { %"struct.std::__1::__atomic_base.222" }
%"struct.std::__1::__atomic_base.222" = type { %"struct.std::__1::__cxx_atomic_impl.223" }
%"struct.std::__1::__cxx_atomic_impl.223" = type { %"struct.std::__1::__cxx_atomic_base_impl.224" }
%"struct.std::__1::__cxx_atomic_base_impl.224" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.225" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.226" = type { %"struct.std::__1::__atomic_base.227" }
%"struct.std::__1::__atomic_base.227" = type { %"struct.std::__1::__cxx_atomic_impl.228" }
%"struct.std::__1::__cxx_atomic_impl.228" = type { %"struct.std::__1::__cxx_atomic_base_impl.229" }
%"struct.std::__1::__cxx_atomic_base_impl.229" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.std::__1::vector.230" = type { %"class.std::__1::__vector_base.231" }
%"class.std::__1::__vector_base.231" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.232" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.285", %"class.std::__1::unique_ptr.291", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.345", %"class.std::__1::vector.345", %"class.std::__1::vector.345", %"class.std::__1::vector.352", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.246", %"class.std::__1::vector.247", %"class.std::__1::vector.254", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.246" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.247" = type { %"class.std::__1::__vector_base.248" }
%"class.std::__1::__vector_base.248" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.249" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.254" = type { %"class.std::__1::__vector_base.255" }
%"class.std::__1::__vector_base.255" = type { %"class.std::__1::unique_ptr.256"*, %"class.std::__1::unique_ptr.256"*, %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::unique_ptr.256" = type opaque
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.std::__1::unique_ptr.256"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.262", %"class.v8::internal::Worklist.264", %"class.v8::internal::Worklist.264", %"class.v8::internal::Worklist.264", %"class.v8::internal::Worklist.266", %"class.v8::internal::Worklist.268", %"class.v8::internal::Worklist.270", %"class.v8::internal::Worklist.272", %"class.v8::internal::Worklist.274", %"class.v8::internal::Worklist.276" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.262" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.264" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.266" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.268" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.270" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.272" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.274" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.276" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.278", i8, i64 }
%"class.std::__1::vector.278" = type { %"class.std::__1::__vector_base.279" }
%"class.std::__1::__vector_base.279" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.294" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.246"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.294" = type { %"class.std::__1::__hash_table.295" }
%"class.std::__1::__hash_table.295" = type <{ %"class.std::__1::unique_ptr.296", %"class.std::__1::__compressed_pair.306", %"class.std::__1::__compressed_pair.311", %"class.std::__1::__compressed_pair.314", [4 x i8] }>
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298", %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"struct.std::__1::__hash_node_base.299"** }
%"struct.std::__1::__hash_node_base.299" = type { %"struct.std::__1::__hash_node_base.299"* }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.std::__1::__bucket_list_deallocator.301" }
%"class.std::__1::__bucket_list_deallocator.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"struct.std::__1::__hash_node_base.299" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.321" }
%"class.std::__1::unordered_map.321" = type { %"class.std::__1::__hash_table.322" }
%"class.std::__1::__hash_table.322" = type <{ %"class.std::__1::unique_ptr.323", %"class.std::__1::__compressed_pair.333", %"class.std::__1::__compressed_pair.338", %"class.std::__1::__compressed_pair.341", [4 x i8] }>
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325", %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"struct.std::__1::__hash_node_base.326"** }
%"struct.std::__1::__hash_node_base.326" = type { %"struct.std::__1::__hash_node_base.326"* }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.std::__1::__bucket_list_deallocator.328" }
%"class.std::__1::__bucket_list_deallocator.328" = type { %"class.std::__1::__compressed_pair.329" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.std::__1::__hash_node_base.326" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.345" = type { %"class.std::__1::__vector_base.346" }
%"class.std::__1::__vector_base.346" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.352" = type { %"class.std::__1::__vector_base.353" }
%"class.std::__1::__vector_base.353" = type { %"struct.std::__1::pair.354"*, %"struct.std::__1::pair.354"*, %"class.std::__1::__compressed_pair.355" }
%"struct.std::__1::pair.354" = type opaque
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.356" }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"struct.std::__1::pair.354"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.360", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.345"], [3 x %"class.std::__1::vector.345"], i8, %"struct.std::__1::atomic.217", [6 x i8], %"class.std::__1::vector.345", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.370"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.345", %"class.std::__1::vector.345", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.370" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.385" = type { %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.395", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.388"], %"class.std::__1::unique_ptr.360" }
%"class.std::__1::vector.388" = type { %"class.std::__1::__vector_base.389" }
%"class.std::__1::__vector_base.389" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.390" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.424" = type { %"class.std::__1::__compressed_pair.425" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.426" }
%"struct.std::__1::__compressed_pair_elem.426" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.427", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.431", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.436" }
%"struct.std::__1::atomic.427" = type { %"struct.std::__1::__atomic_base.428" }
%"struct.std::__1::__atomic_base.428" = type { %"struct.std::__1::__cxx_atomic_impl.429" }
%"struct.std::__1::__cxx_atomic_impl.429" = type { %"struct.std::__1::__cxx_atomic_base_impl.430" }
%"struct.std::__1::__cxx_atomic_base_impl.430" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.431" = type { %"struct.std::__1::__atomic_base.432" }
%"struct.std::__1::__atomic_base.432" = type { %"struct.std::__1::__cxx_atomic_impl.433" }
%"struct.std::__1::__cxx_atomic_impl.433" = type { %"struct.std::__1::__cxx_atomic_base_impl.434" }
%"struct.std::__1::__cxx_atomic_base_impl.434" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.436" = type { %"class.std::__1::__hash_table.437" }
%"class.std::__1::__hash_table.437" = type <{ %"class.std::__1::unique_ptr.438", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.456", [4 x i8] }>
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440", %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::__hash_node_base.441"** }
%"struct.std::__1::__hash_node_base.441" = type { %"struct.std::__1::__hash_node_base.441"* }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.std::__1::__bucket_list_deallocator.443" }
%"class.std::__1::__bucket_list_deallocator.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::__hash_node_base.441" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.360", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic", %"struct.std::__1::atomic.217", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.466", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.466" = type { %"class.std::__1::__hash_table.467" }
%"class.std::__1::__hash_table.467" = type <{ %"class.std::__1::unique_ptr.468", %"class.std::__1::__compressed_pair.478", %"class.std::__1::__compressed_pair.483", %"class.std::__1::__compressed_pair.486", [4 x i8] }>
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470", %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"struct.std::__1::__hash_node_base.471"** }
%"struct.std::__1::__hash_node_base.471" = type { %"struct.std::__1::__hash_node_base.471"* }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"class.std::__1::__bucket_list_deallocator.473" }
%"class.std::__1::__bucket_list_deallocator.473" = type { %"class.std::__1::__compressed_pair.474" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.478" = type { %"struct.std::__1::__compressed_pair_elem.479" }
%"struct.std::__1::__compressed_pair_elem.479" = type { %"struct.std::__1::__hash_node_base.471" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.493" = type { %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"struct.std::__1::__compressed_pair_elem.495" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.499" = type { %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.502" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.515" = type { %"class.std::__1::__compressed_pair.516" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.517" }
%"struct.std::__1::__compressed_pair_elem.517" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.521" = type { %"class.std::__1::__compressed_pair.522" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.523" }
%"struct.std::__1::__compressed_pair_elem.523" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.527" = type { %"class.std::__1::__compressed_pair.528" }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.529" }
%"struct.std::__1::__compressed_pair_elem.529" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.539" = type { %"class.std::__1::__compressed_pair.540" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.541" }
%"struct.std::__1::__compressed_pair_elem.541" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.545" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.546", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.4", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.546" = type { %"struct.std::__1::__atomic_base.547" }
%"struct.std::__1::__atomic_base.547" = type { %"struct.std::__1::__cxx_atomic_impl.548" }
%"struct.std::__1::__cxx_atomic_impl.548" = type { %"struct.std::__1::__cxx_atomic_base_impl.549" }
%"struct.std::__1::__cxx_atomic_base_impl.549" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.550" = type { %"class.std::__1::__hash_table.551" }
%"class.std::__1::__hash_table.551" = type <{ %"class.std::__1::unique_ptr.552", %"class.std::__1::__compressed_pair.562", %"class.std::__1::__compressed_pair.567", %"class.std::__1::__compressed_pair.570", [4 x i8] }>
%"class.std::__1::unique_ptr.552" = type { %"class.std::__1::__compressed_pair.553" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.554", %"struct.std::__1::__compressed_pair_elem.556" }
%"struct.std::__1::__compressed_pair_elem.554" = type { %"struct.std::__1::__hash_node_base.555"** }
%"struct.std::__1::__hash_node_base.555" = type { %"struct.std::__1::__hash_node_base.555"* }
%"struct.std::__1::__compressed_pair_elem.556" = type { %"class.std::__1::__bucket_list_deallocator.557" }
%"class.std::__1::__bucket_list_deallocator.557" = type { %"class.std::__1::__compressed_pair.558" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.563" }
%"struct.std::__1::__compressed_pair_elem.563" = type { %"struct.std::__1::__hash_node_base.555" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.570" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.576" = type { %"class.std::__1::__compressed_pair.577" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.578" }
%"struct.std::__1::__compressed_pair_elem.578" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.588", %"class.std::__1::vector.588" }
%"class.std::__1::unique_ptr.595" = type { %"class.std::__1::__compressed_pair.596" }
%"class.std::__1::__compressed_pair.596" = type { %"struct.std::__1::__compressed_pair_elem.597" }
%"struct.std::__1::__compressed_pair_elem.597" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.395" = type { %"class.std::__1::__hash_table.396" }
%"class.std::__1::__hash_table.396" = type <{ %"class.std::__1::unique_ptr.397", %"class.std::__1::__compressed_pair.407", %"class.std::__1::__compressed_pair.412", %"class.std::__1::__compressed_pair.416", [4 x i8] }>
%"class.std::__1::unique_ptr.397" = type { %"class.std::__1::__compressed_pair.398" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.399", %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.399" = type { %"struct.std::__1::__hash_node_base.400"** }
%"struct.std::__1::__hash_node_base.400" = type { %"struct.std::__1::__hash_node_base.400"* }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.std::__1::__bucket_list_deallocator.402" }
%"class.std::__1::__bucket_list_deallocator.402" = type { %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"struct.std::__1::__hash_node_base.400" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.627" = type { %"class.std::__1::__hash_table.628" }
%"class.std::__1::__hash_table.628" = type <{ %"class.std::__1::unique_ptr.629", %"class.std::__1::__compressed_pair.639", %"class.std::__1::__compressed_pair.644", %"class.std::__1::__compressed_pair.647", [4 x i8] }>
%"class.std::__1::unique_ptr.629" = type { %"class.std::__1::__compressed_pair.630" }
%"class.std::__1::__compressed_pair.630" = type { %"struct.std::__1::__compressed_pair_elem.631", %"struct.std::__1::__compressed_pair_elem.633" }
%"struct.std::__1::__compressed_pair_elem.631" = type { %"struct.std::__1::__hash_node_base.632"** }
%"struct.std::__1::__hash_node_base.632" = type { %"struct.std::__1::__hash_node_base.632"* }
%"struct.std::__1::__compressed_pair_elem.633" = type { %"class.std::__1::__bucket_list_deallocator.634" }
%"class.std::__1::__bucket_list_deallocator.634" = type { %"class.std::__1::__compressed_pair.635" }
%"class.std::__1::__compressed_pair.635" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"struct.std::__1::__hash_node_base.632" }
%"class.std::__1::__compressed_pair.644" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.601" = type { %"class.std::__1::__hash_table.602" }
%"class.std::__1::__hash_table.602" = type <{ %"class.std::__1::unique_ptr.603", %"class.std::__1::__compressed_pair.613", %"class.std::__1::__compressed_pair.618", %"class.std::__1::__compressed_pair.621", [4 x i8] }>
%"class.std::__1::unique_ptr.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.605", %"struct.std::__1::__compressed_pair_elem.607" }
%"struct.std::__1::__compressed_pair_elem.605" = type { %"struct.std::__1::__hash_node_base.606"** }
%"struct.std::__1::__hash_node_base.606" = type { %"struct.std::__1::__hash_node_base.606"* }
%"struct.std::__1::__compressed_pair_elem.607" = type { %"class.std::__1::__bucket_list_deallocator.608" }
%"class.std::__1::__bucket_list_deallocator.608" = type { %"class.std::__1::__compressed_pair.609" }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.614" }
%"struct.std::__1::__compressed_pair_elem.614" = type { %"struct.std::__1::__hash_node_base.606" }
%"class.std::__1::__compressed_pair.618" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.651" = type { %"class.std::__1::__hash_table.652" }
%"class.std::__1::__hash_table.652" = type <{ %"class.std::__1::unique_ptr.653", %"class.std::__1::__compressed_pair.663", %"class.std::__1::__compressed_pair.668", %"class.std::__1::__compressed_pair.673", [4 x i8] }>
%"class.std::__1::unique_ptr.653" = type { %"class.std::__1::__compressed_pair.654" }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.655", %"struct.std::__1::__compressed_pair_elem.657" }
%"struct.std::__1::__compressed_pair_elem.655" = type { %"struct.std::__1::__hash_node_base.656"** }
%"struct.std::__1::__hash_node_base.656" = type { %"struct.std::__1::__hash_node_base.656"* }
%"struct.std::__1::__compressed_pair_elem.657" = type { %"class.std::__1::__bucket_list_deallocator.658" }
%"class.std::__1::__bucket_list_deallocator.658" = type { %"class.std::__1::__compressed_pair.659" }
%"class.std::__1::__compressed_pair.659" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.663" = type { %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"struct.std::__1::__hash_node_base.656" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.673" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.679" = type { %"class.std::__1::__vector_base.680" }
%"class.std::__1::__vector_base.680" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.681" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.588" }
%"class.std::__1::shared_ptr.692" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.204", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.693", %"class.std::__1::unique_ptr.707" }
%"class.std::__1::unique_ptr.693" = type { %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.696" }
%"class.std::__1::vector.696" = type { %"class.std::__1::__vector_base.697" }
%"class.std::__1::__vector_base.697" = type { %"class.std::__1::unique_ptr.698"*, %"class.std::__1::unique_ptr.698"*, %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.1195" }
%"class.std::__1::__compressed_pair.1195" = type { %"struct.std::__1::__compressed_pair_elem.1196" }
%"struct.std::__1::__compressed_pair_elem.1196" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.std::__1::unique_ptr.698"* }
%"class.std::__1::unique_ptr.707" = type { %"class.std::__1::__compressed_pair.708" }
%"class.std::__1::__compressed_pair.708" = type { %"struct.std::__1::__compressed_pair_elem.709" }
%"struct.std::__1::__compressed_pair_elem.709" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.713" = type { %"class.std::__1::__compressed_pair.714" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.715" }
%"struct.std::__1::__compressed_pair_elem.715" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.716", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.716" = type { %"struct.std::__1::__atomic_base.717" }
%"struct.std::__1::__atomic_base.717" = type { %"struct.std::__1::__cxx_atomic_impl.718" }
%"struct.std::__1::__cxx_atomic_impl.718" = type { %"struct.std::__1::__cxx_atomic_base_impl.719" }
%"struct.std::__1::__cxx_atomic_base_impl.719" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.723" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.724", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.724" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.725", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.725" = type { %"class.std::__1::__vector_base.726" }
%"class.std::__1::__vector_base.726" = type { %"class.std::__1::unique_ptr.727"*, %"class.std::__1::unique_ptr.727"*, %"class.std::__1::__compressed_pair.728" }
%"class.std::__1::unique_ptr.727" = type opaque
%"class.std::__1::__compressed_pair.728" = type { %"struct.std::__1::__compressed_pair_elem.729" }
%"struct.std::__1::__compressed_pair_elem.729" = type { %"class.std::__1::unique_ptr.727"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon.733 }
%union.anon.733 = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.734", %"class.std::__1::unique_ptr.740", %"struct.std::__1::atomic.217", %"class.std::__1::unique_ptr.746", %"class.std::__1::unique_ptr.752", %"class.std::__1::unique_ptr.758", %"class.std::__1::unique_ptr.764", %"class.std::__1::unique_ptr.770", %"class.std::__1::set.776", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.736" }
%"struct.std::__1::__compressed_pair_elem.736" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.740" = type { %"class.std::__1::__compressed_pair.741" }
%"class.std::__1::__compressed_pair.741" = type { %"struct.std::__1::__compressed_pair_elem.742" }
%"struct.std::__1::__compressed_pair_elem.742" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.746" = type { %"class.std::__1::__compressed_pair.747" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.748" }
%"struct.std::__1::__compressed_pair_elem.748" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.758" = type { %"class.std::__1::__compressed_pair.759" }
%"class.std::__1::__compressed_pair.759" = type { %"struct.std::__1::__compressed_pair_elem.760" }
%"struct.std::__1::__compressed_pair_elem.760" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.764" = type { %"class.std::__1::__compressed_pair.765" }
%"class.std::__1::__compressed_pair.765" = type { %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.776" = type { %"class.std::__1::__tree.777" }
%"class.std::__1::__tree.777" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.778", %"class.std::__1::__compressed_pair.782" }
%"class.std::__1::__compressed_pair.778" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.782" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.786" }
%"class.v8::internal::TaggedImpl.786" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.785" }
%"class.v8::internal::TaggedImpl.785" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.787", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.787" = type { %"class.std::__1::__compressed_pair.788" }
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.793", %"class.v8::internal::DetachableVector.794", %"class.v8::internal::DetachableVector.793", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.794" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.793" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.795", %"class.std::__1::vector.801", %"class.std::__1::unique_ptr.808", %"class.std::__1::vector.815", %"class.std::__1::unique_ptr.822", i64, %"class.std::__1::vector.828", %"class.std::__1::vector.836", %"class.std::__1::vector.844", i8, i8, i32 }
%"class.std::__1::unique_ptr.795" = type { %"class.std::__1::__compressed_pair.796" }
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.801" = type { %"class.std::__1::__vector_base.802" }
%"class.std::__1::__vector_base.802" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.803" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.808" = type { %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.v8::internal::GlobalHandles::NodeSpace.811"* }
%"class.v8::internal::GlobalHandles::NodeSpace.811" = type opaque
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.817" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.828" = type { %"class.std::__1::__vector_base.829" }
%"class.std::__1::__vector_base.829" = type { %"struct.std::__1::pair.830"*, %"struct.std::__1::pair.830"*, %"class.std::__1::__compressed_pair.831" }
%"struct.std::__1::pair.830" = type opaque
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"struct.std::__1::pair.830"* }
%"class.std::__1::vector.836" = type { %"class.std::__1::__vector_base.837" }
%"class.std::__1::__vector_base.837" = type { %"struct.std::__1::pair.838"*, %"struct.std::__1::pair.838"*, %"class.std::__1::__compressed_pair.839" }
%"struct.std::__1::pair.838" = type opaque
%"class.std::__1::__compressed_pair.839" = type { %"struct.std::__1::__compressed_pair_elem.840" }
%"struct.std::__1::__compressed_pair_elem.840" = type { %"struct.std::__1::pair.838"* }
%"class.std::__1::vector.844" = type { %"class.std::__1::__vector_base.845" }
%"class.std::__1::__vector_base.845" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.846" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.847" }
%"struct.std::__1::__compressed_pair_elem.847" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.851", %"class.std::__1::vector.858" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.865" }
%"class.std::__1::unique_ptr.865" = type { %"class.std::__1::__compressed_pair.866" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.867" }
%"struct.std::__1::__compressed_pair_elem.867" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.858" = type { %"class.std::__1::__vector_base.859" }
%"class.std::__1::__vector_base.859" = type { i32*, i32*, %"class.std::__1::__compressed_pair.860" }
%"class.std::__1::__compressed_pair.860" = type { %"struct.std::__1::__compressed_pair_elem.861" }
%"struct.std::__1::__compressed_pair_elem.861" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.871" = type { %"struct.std::__1::__atomic_base.872" }
%"struct.std::__1::__atomic_base.872" = type { %"struct.std::__1::__cxx_atomic_impl.873" }
%"struct.std::__1::__cxx_atomic_impl.873" = type { %"struct.std::__1::__cxx_atomic_base_impl.874" }
%"struct.std::__1::__cxx_atomic_base_impl.874" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.881" = type { %"struct.std::__1::__atomic_base.882" }
%"struct.std::__1::__atomic_base.882" = type { %"struct.std::__1::__cxx_atomic_impl.883" }
%"struct.std::__1::__cxx_atomic_impl.883" = type { %"struct.std::__1::__cxx_atomic_base_impl.884" }
%"struct.std::__1::__cxx_atomic_base_impl.884" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.886" }
%"class.std::__1::__compressed_pair.886" = type { %"struct.std::__1::__compressed_pair_elem.887" }
%"struct.std::__1::__compressed_pair_elem.887" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.888 }
%union.anon.888 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.892" = type { %"class.std::__1::__hash_table.893" }
%"class.std::__1::__hash_table.893" = type <{ %"class.std::__1::unique_ptr.894", %"class.std::__1::__compressed_pair.904", %"class.std::__1::__compressed_pair.909", %"class.std::__1::__compressed_pair.912", [4 x i8] }>
%"class.std::__1::unique_ptr.894" = type { %"class.std::__1::__compressed_pair.895" }
%"class.std::__1::__compressed_pair.895" = type { %"struct.std::__1::__compressed_pair_elem.896", %"struct.std::__1::__compressed_pair_elem.898" }
%"struct.std::__1::__compressed_pair_elem.896" = type { %"struct.std::__1::__hash_node_base.897"** }
%"struct.std::__1::__hash_node_base.897" = type { %"struct.std::__1::__hash_node_base.897"* }
%"struct.std::__1::__compressed_pair_elem.898" = type { %"class.std::__1::__bucket_list_deallocator.899" }
%"class.std::__1::__bucket_list_deallocator.899" = type { %"class.std::__1::__compressed_pair.900" }
%"class.std::__1::__compressed_pair.900" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"struct.std::__1::__hash_node_base.897" }
%"class.std::__1::__compressed_pair.909" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.912" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::atomic.217" = type { %"struct.std::__1::__atomic_base.218" }
%"struct.std::__1::__atomic_base.218" = type { %"struct.std::__1::__cxx_atomic_impl.219" }
%"struct.std::__1::__cxx_atomic_impl.219" = type { %"struct.std::__1::__cxx_atomic_base_impl.220" }
%"struct.std::__1::__cxx_atomic_base_impl.220" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.918", %"class.v8::internal::Handle.924", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.925", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.918" = type { %"class.std::__1::__compressed_pair.919" }
%"class.std::__1::__compressed_pair.919" = type { %"struct.std::__1::__compressed_pair_elem.920" }
%"struct.std::__1::__compressed_pair_elem.920" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.924" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.925" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.926", %"class.std::__1::vector.932", %"class.std::__1::unique_ptr.940", %"class.std::__1::unique_ptr.946", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.952", %"class.std::__1::vector.958", %"struct.std::__1::pair.966" }
%"class.std::__1::unique_ptr.926" = type { %"class.std::__1::__compressed_pair.927" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.928" }
%"struct.std::__1::__compressed_pair_elem.928" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.932" = type { %"class.std::__1::__vector_base.933" }
%"class.std::__1::__vector_base.933" = type { %"class.std::__1::unique_ptr.934"*, %"class.std::__1::unique_ptr.934"*, %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::unique_ptr.934" = type opaque
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.936" }
%"struct.std::__1::__compressed_pair_elem.936" = type { %"class.std::__1::unique_ptr.934"* }
%"class.std::__1::unique_ptr.940" = type { %"class.std::__1::__compressed_pair.941" }
%"class.std::__1::__compressed_pair.941" = type { %"struct.std::__1::__compressed_pair_elem.942" }
%"struct.std::__1::__compressed_pair_elem.942" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.946" = type { %"class.std::__1::__compressed_pair.947" }
%"class.std::__1::__compressed_pair.947" = type { %"struct.std::__1::__compressed_pair_elem.948" }
%"struct.std::__1::__compressed_pair_elem.948" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.952" = type { %"class.std::__1::__compressed_pair.953" }
%"class.std::__1::__compressed_pair.953" = type { %"struct.std::__1::__compressed_pair_elem.954" }
%"struct.std::__1::__compressed_pair_elem.954" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.958" = type { %"class.std::__1::__vector_base.959" }
%"class.std::__1::__vector_base.959" = type { %"struct.std::__1::pair.960"*, %"struct.std::__1::pair.960"*, %"class.std::__1::__compressed_pair.961" }
%"struct.std::__1::pair.960" = type opaque
%"class.std::__1::__compressed_pair.961" = type { %"struct.std::__1::__compressed_pair_elem.962" }
%"struct.std::__1::__compressed_pair_elem.962" = type { %"struct.std::__1::pair.960"* }
%"struct.std::__1::pair.966" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.59"*, i16, i8*)*, i8* }
%"class.v8::Local.59" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.967" = type { %"class.std::__1::__compressed_pair.968" }
%"class.std::__1::__compressed_pair.968" = type { %"struct.std::__1::__compressed_pair_elem.969" }
%"struct.std::__1::__compressed_pair_elem.969" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.970", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.970" = type { %"class.std::__1::__hash_table.971" }
%"class.std::__1::__hash_table.971" = type <{ %"class.std::__1::unique_ptr.972", %"class.std::__1::__compressed_pair.982", %"class.std::__1::__compressed_pair.987", %"class.std::__1::__compressed_pair.991", [4 x i8] }>
%"class.std::__1::unique_ptr.972" = type { %"class.std::__1::__compressed_pair.973" }
%"class.std::__1::__compressed_pair.973" = type { %"struct.std::__1::__compressed_pair_elem.974", %"struct.std::__1::__compressed_pair_elem.976" }
%"struct.std::__1::__compressed_pair_elem.974" = type { %"struct.std::__1::__hash_node_base.975"** }
%"struct.std::__1::__hash_node_base.975" = type { %"struct.std::__1::__hash_node_base.975"* }
%"struct.std::__1::__compressed_pair_elem.976" = type { %"class.std::__1::__bucket_list_deallocator.977" }
%"class.std::__1::__bucket_list_deallocator.977" = type { %"class.std::__1::__compressed_pair.978" }
%"class.std::__1::__compressed_pair.978" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.982" = type { %"struct.std::__1::__compressed_pair_elem.983" }
%"struct.std::__1::__compressed_pair_elem.983" = type { %"struct.std::__1::__hash_node_base.975" }
%"class.std::__1::__compressed_pair.987" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.991" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.v8::internal::AstStringConstants" = type { %"class.v8::internal::Zone", %"class.v8::base::TemplateHashMapImpl.999", i64, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"* }
%"class.v8::base::TemplateHashMapImpl.999" = type { %"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::TemplateHashMapEntry.1000"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry.1000" = type <{ %union.anon.1193, i32, [4 x i8] }>
%union.anon.1193 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::AstRawString" = type <{ %union.anon.0, %"class.v8::internal::Vector", i32, i8, [3 x i8] }>
%union.anon.0 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::Vector" = type { i8*, i64 }
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.1007" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.1001"**, %"struct.std::__1::pair.1001"**, %"struct.std::__1::pair.1001"**, %"class.std::__1::__compressed_pair.1002" }
%"struct.std::__1::pair.1001" = type opaque
%"class.std::__1::__compressed_pair.1002" = type { %"struct.std::__1::__compressed_pair_elem.1003" }
%"struct.std::__1::__compressed_pair_elem.1003" = type { %"struct.std::__1::pair.1001"** }
%"class.std::__1::__compressed_pair.1007" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.1012" = type { %"class.std::__1::__vector_base.1013" }
%"class.std::__1::__vector_base.1013" = type { %"class.v8::internal::Handle.1014"*, %"class.v8::internal::Handle.1014"*, %"class.std::__1::__compressed_pair.1015" }
%"class.v8::internal::Handle.1014" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1015" = type { %"struct.std::__1::__compressed_pair_elem.1016" }
%"struct.std::__1::__compressed_pair_elem.1016" = type { %"class.v8::internal::Handle.1014"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector.1020", [128 x i8] }
%"class.v8::internal::Vector.1020" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.876", i32, %"class.v8::Local.59" }
%"class.v8::Local.876" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1021" = type { %"class.std::__1::__compressed_pair.1022" }
%"class.std::__1::__compressed_pair.1022" = type { %"struct.std::__1::__compressed_pair_elem.1023" }
%"struct.std::__1::__compressed_pair_elem.1023" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1027" = type { %"class.std::__1::__vector_base.1028" }
%"class.std::__1::__vector_base.1028" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1029" }
%"class.std::__1::__compressed_pair.1029" = type { %"struct.std::__1::__compressed_pair_elem.1030" }
%"struct.std::__1::__compressed_pair_elem.1030" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1034" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1035" = type { %"class.std::__1::__hash_table.1036" }
%"class.std::__1::__hash_table.1036" = type <{ %"class.std::__1::unique_ptr.1037", %"class.std::__1::__compressed_pair.1047", %"class.std::__1::__compressed_pair.1052", %"class.std::__1::__compressed_pair.1055", [4 x i8] }>
%"class.std::__1::unique_ptr.1037" = type { %"class.std::__1::__compressed_pair.1038" }
%"class.std::__1::__compressed_pair.1038" = type { %"struct.std::__1::__compressed_pair_elem.1039", %"struct.std::__1::__compressed_pair_elem.1041" }
%"struct.std::__1::__compressed_pair_elem.1039" = type { %"struct.std::__1::__hash_node_base.1040"** }
%"struct.std::__1::__hash_node_base.1040" = type { %"struct.std::__1::__hash_node_base.1040"* }
%"struct.std::__1::__compressed_pair_elem.1041" = type { %"class.std::__1::__bucket_list_deallocator.1042" }
%"class.std::__1::__bucket_list_deallocator.1042" = type { %"class.std::__1::__compressed_pair.1043" }
%"class.std::__1::__compressed_pair.1043" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.1047" = type { %"struct.std::__1::__compressed_pair_elem.1048" }
%"struct.std::__1::__compressed_pair_elem.1048" = type { %"struct.std::__1::__hash_node_base.1040" }
%"class.std::__1::__compressed_pair.1052" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.588" = type { %"class.std::__1::__vector_base.589" }
%"class.std::__1::__vector_base.589" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.590" }
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.591" }
%"struct.std::__1::__compressed_pair_elem.591" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.225" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1059", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1088", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1089", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1059" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1084, %union.anon.1086, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1084 = type { i64 }
%union.anon.1086 = type { i64 }
%"class.std::__1::weak_ptr.1088" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1089" = type { %"class.v8::PersistentBase.1090" }
%"class.v8::PersistentBase.1090" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1060", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1060" = type { %"class.std::__1::__hash_table.1061" }
%"class.std::__1::__hash_table.1061" = type <{ %"class.std::__1::unique_ptr.1062", %"class.std::__1::__compressed_pair.1072", %"class.std::__1::__compressed_pair.1077", %"class.std::__1::__compressed_pair.1080", [4 x i8] }>
%"class.std::__1::unique_ptr.1062" = type { %"class.std::__1::__compressed_pair.1063" }
%"class.std::__1::__compressed_pair.1063" = type { %"struct.std::__1::__compressed_pair_elem.1064", %"struct.std::__1::__compressed_pair_elem.1066" }
%"struct.std::__1::__compressed_pair_elem.1064" = type { %"struct.std::__1::__hash_node_base.1065"** }
%"struct.std::__1::__hash_node_base.1065" = type { %"struct.std::__1::__hash_node_base.1065"* }
%"struct.std::__1::__compressed_pair_elem.1066" = type { %"class.std::__1::__bucket_list_deallocator.1067" }
%"class.std::__1::__bucket_list_deallocator.1067" = type { %"class.std::__1::__compressed_pair.1068" }
%"class.std::__1::__compressed_pair.1068" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.1072" = type { %"struct.std::__1::__compressed_pair_elem.1073" }
%"struct.std::__1::__compressed_pair_elem.1073" = type { %"struct.std::__1::__hash_node_base.1065" }
%"class.std::__1::__compressed_pair.1077" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.1080" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1091" = type { %"class.std::__1::__compressed_pair.1092" }
%"class.std::__1::__compressed_pair.1092" = type { %"struct.std::__1::__compressed_pair_elem.1093" }
%"struct.std::__1::__compressed_pair_elem.1093" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1120", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1120" = type { %"class.std::__1::__compressed_pair.1121" }
%"class.std::__1::__compressed_pair.1121" = type { %"struct.std::__1::__compressed_pair_elem.1122" }
%"struct.std::__1::__compressed_pair_elem.1122" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1129" = type { %"class.std::__1::__compressed_pair.1130" }
%"class.std::__1::__compressed_pair.1130" = type { %"struct.std::__1::__compressed_pair_elem.1131" }
%"struct.std::__1::__compressed_pair_elem.1131" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.877", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.877" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1137" }
%"class.std::__1::unordered_map.1137" = type { %"class.std::__1::__hash_table.1138" }
%"class.std::__1::__hash_table.1138" = type <{ %"class.std::__1::unique_ptr.1139", %"class.std::__1::__compressed_pair.1149", %"class.std::__1::__compressed_pair.1154", %"class.std::__1::__compressed_pair.1157", [4 x i8] }>
%"class.std::__1::unique_ptr.1139" = type { %"class.std::__1::__compressed_pair.1140" }
%"class.std::__1::__compressed_pair.1140" = type { %"struct.std::__1::__compressed_pair_elem.1141", %"struct.std::__1::__compressed_pair_elem.1143" }
%"struct.std::__1::__compressed_pair_elem.1141" = type { %"struct.std::__1::__hash_node_base.1142"** }
%"struct.std::__1::__hash_node_base.1142" = type { %"struct.std::__1::__hash_node_base.1142"* }
%"struct.std::__1::__compressed_pair_elem.1143" = type { %"class.std::__1::__bucket_list_deallocator.1144" }
%"class.std::__1::__bucket_list_deallocator.1144" = type { %"class.std::__1::__compressed_pair.1145" }
%"class.std::__1::__compressed_pair.1145" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.1149" = type { %"struct.std::__1::__compressed_pair_elem.1150" }
%"struct.std::__1::__compressed_pair_elem.1150" = type { %"struct.std::__1::__hash_node_base.1142" }
%"class.std::__1::__compressed_pair.1154" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.std::__1::__compressed_pair.1157" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::atomic.1163" = type { %"struct.std::__1::__atomic_base.1164" }
%"struct.std::__1::__atomic_base.1164" = type { %"struct.std::__1::__cxx_atomic_impl.1165" }
%"struct.std::__1::__cxx_atomic_impl.1165" = type { %"struct.std::__1::__cxx_atomic_base_impl.1166" }
%"struct.std::__1::__cxx_atomic_base_impl.1166" = type { %"class.std::__1::vector.1167"* }
%"class.std::__1::vector.1167" = type { %"class.std::__1::__vector_base.1168" }
%"class.std::__1::__vector_base.1168" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1169" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1169" = type { %"struct.std::__1::__compressed_pair_elem.1170" }
%"struct.std::__1::__compressed_pair_elem.1170" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::FactoryBase" = type { i8 }
%"class.v8::internal::Scope" = type <{ %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"*, %"class.v8::internal::VariableMap", %"class.v8::base::ThreadedListBase", %"class.v8::base::ThreadedListBase.20", %"class.v8::base::ThreadedListBase.22", %"class.v8::internal::Handle.23", i32, i32, i32, i32, i8, i16, [5 x i8] }>
%"class.v8::internal::VariableMap" = type { %"class.v8::base::PointerTemplateHashMapImpl" }
%"class.v8::base::PointerTemplateHashMapImpl" = type { %"class.v8::base::TemplateHashMapImpl" }
%"class.v8::base::TemplateHashMapImpl" = type { %"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::KeyEqualityMatcher<void *>, v8::internal::ZoneAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::KeyEqualityMatcher<void *>, v8::internal::ZoneAllocationPolicy>::Impl" = type { %"class.v8::internal::ZoneAllocationPolicy", %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry" = type <{ i8*, i8*, i32, [4 x i8] }>
%"class.v8::base::ThreadedListBase" = type { %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"** }
%"class.v8::internal::Variable" = type <{ %"class.v8::internal::Scope"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::Variable"*, %"class.v8::internal::Variable"*, i32, i32, i16, [6 x i8] }>
%"class.v8::base::ThreadedListBase.20" = type { %"class.v8::internal::VariableProxy"*, %"class.v8::internal::VariableProxy"** }
%"class.v8::internal::VariableProxy" = type { %"class.v8::internal::Expression", %union.anon.21, %"class.v8::internal::VariableProxy"* }
%"class.v8::internal::Expression" = type { %"class.v8::internal::AstNode" }
%"class.v8::internal::AstNode" = type { i32, i32 }
%union.anon.21 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::base::ThreadedListBase.22" = type { %"class.v8::internal::Declaration"*, %"class.v8::internal::Declaration"** }
%"class.v8::internal::Declaration" = type { %"class.v8::internal::AstNode", %"class.v8::internal::Variable"*, %"class.v8::internal::Declaration"* }
%"class.v8::internal::Handle.23" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FactoryBase.1094" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.1184" }
%"struct.std::__1::pair.1184" = type <{ %"class.v8::internal::Smi", i32, [4 x i8] }>
%"class.std::__1::__tree_node.1220" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type.1221" }
%"struct.std::__1::__value_type.1221" = type { %"struct.std::__1::pair.1187" }
%"struct.std::__1::pair.1187" = type <{ double, i32, [4 x i8] }>

$_ZNK2v88internal11interpreter20ConstantArrayBuilder2AtINS0_7IsolateEEENS0_11MaybeHandleINS0_6ObjectEEEmPT_ = comdat any

$_ZNK2v88internal11interpreter20ConstantArrayBuilder5Entry8ToHandleINS0_7IsolateEEENS0_6HandleINS0_6ObjectEEEPT_ = comdat any

$_ZNK2v88internal11interpreter20ConstantArrayBuilder2AtINS0_12LocalIsolateEEENS0_11MaybeHandleINS0_6ObjectEEEmPT_ = comdat any

$_ZNK2v88internal11interpreter20ConstantArrayBuilder5Entry8ToHandleINS0_12LocalIsolateEEENS0_6HandleINS0_6ObjectEEEPT_ = comdat any

$_ZN2v88internal11interpreter20ConstantArrayBuilder12ToFixedArrayINS0_7IsolateEEENS0_6HandleINS0_10FixedArrayEEEPT_ = comdat any

$_ZN2v88internal11interpreter20ConstantArrayBuilder12ToFixedArrayINS0_12LocalIsolateEEENS0_6HandleINS0_10FixedArrayEEEPT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN2v84base19TemplateHashMapImplIljNS0_18KeyEqualityMatcherIlEENS_8internal20ZoneAllocationPolicyEE6ResizeEv = comdat any

@.str = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@_ZN2v88internal11interpreter20ConstantArrayBuilder13k8BitCapacityE = hidden local_unnamed_addr constant i64 256, align 8
@_ZN2v88internal11interpreter20ConstantArrayBuilder14k16BitCapacityE = hidden local_unnamed_addr constant i64 65280, align 8
@_ZN2v88internal11interpreter20ConstantArrayBuilder14k32BitCapacityE = hidden local_unnamed_addr constant i64 4294901760, align 8
@.str.1 = private unnamed_addr constant [35 x i8] c"Out of memory: HashMap::Initialize\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"(location_) != nullptr\00", align 1

@_ZN2v88internal11interpreter20ConstantArrayBuilder18ConstantArraySliceC1EPNS0_4ZoneEmmNS1_11OperandSizeE = hidden unnamed_addr alias void (%"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"class.v8::internal::Zone"*, i64, i64, i8), void (%"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"class.v8::internal::Zone"*, i64, i64, i8)* @_ZN2v88internal11interpreter20ConstantArrayBuilder18ConstantArraySliceC2EPNS0_4ZoneEmmNS1_11OperandSizeE
@_ZN2v88internal11interpreter20ConstantArrayBuilderC1EPNS0_4ZoneE = hidden unnamed_addr alias void (%"class.v8::internal::interpreter::ConstantArrayBuilder"*, %"class.v8::internal::Zone"*), void (%"class.v8::internal::interpreter::ConstantArrayBuilder"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal11interpreter20ConstantArrayBuilderC2EPNS0_4ZoneE

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZNK2v88internal11interpreter20ConstantArrayBuilder2AtINS0_7IsolateEEENS0_11MaybeHandleINS0_6ObjectEEEmPT_(%"class.v8::internal::interpreter::ConstantArrayBuilder"*, i64, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  %5 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %4, align 8
  %6 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %5, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %5, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %7, -1
  %11 = add i64 %10, %9
  %12 = icmp ult i64 %11, %1
  br i1 %12, label %13, label %34

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 1
  %15 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %14, align 8
  %16 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %15, i64 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %15, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %17, -1
  %21 = add i64 %20, %19
  %22 = icmp ult i64 %21, %1
  br i1 %22, label %23, label %34

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 2
  %25 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %24, align 8
  %26 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %25, i64 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %25, i64 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %27, -1
  %31 = add i64 %30, %29
  %32 = icmp ult i64 %31, %1
  br i1 %32, label %33, label %34

33:                                               ; preds = %23
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #6
  unreachable

34:                                               ; preds = %3, %13, %23
  %35 = phi i64 [ %7, %3 ], [ %17, %13 ], [ %27, %23 ]
  %36 = phi %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* [ %5, %3 ], [ %15, %13 ], [ %25, %23 ]
  %37 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %36, i64 0, i32 4, i32 0
  %38 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %36, i64 0, i32 4, i32 0, i32 0, i32 1
  %39 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.std::__1::vector"* %37 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = ashr exact i64 %43, 4
  %45 = add i64 %44, %35
  %46 = icmp ugt i64 %45, %1
  %47 = inttoptr i64 %42 to %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"*
  br i1 %46, label %48, label %56

48:                                               ; preds = %34
  %49 = sub i64 %1, %35
  %50 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %47, i64 %49, i32 1
  %51 = load i8, i8* %50, align 8
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %47, i64 %49
  %55 = tail call i64* @_ZNK2v88internal11interpreter20ConstantArrayBuilder5Entry8ToHandleINS0_7IsolateEEENS0_6HandleINS0_6ObjectEEEPT_(%"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %54, %"class.v8::internal::Isolate"* %2)
  br label %56

56:                                               ; preds = %34, %48, %53
  %57 = phi i64* [ %55, %53 ], [ null, %48 ], [ null, %34 ]
  ret i64* %57
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* @_ZNK2v88internal11interpreter20ConstantArrayBuilder12IndexToSliceEm(%"class.v8::internal::interpreter::ConstantArrayBuilder"* readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  %4 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %3, align 8
  %5 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %4, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %4, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %6, -1
  %10 = add i64 %9, %8
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %12, label %22

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 1
  %14 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %13, align 8
  %15 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %14, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %14, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %16, -1
  %20 = add i64 %19, %18
  %21 = icmp ult i64 %20, %1
  br i1 %21, label %24, label %22

22:                                               ; preds = %24, %12, %2
  %23 = phi %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* [ %4, %2 ], [ %14, %12 ], [ %26, %24 ]
  ret %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %23

24:                                               ; preds = %12
  %25 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 2
  %26 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %25, align 8
  %27 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %26, i64 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %26, i64 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %28, -1
  %32 = add i64 %31, %30
  %33 = icmp ult i64 %32, %1
  br i1 %33, label %34, label %22

34:                                               ; preds = %24
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #6
  unreachable
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(16) %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* @_ZNK2v88internal11interpreter20ConstantArrayBuilder18ConstantArraySlice2AtEm(%"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* nocapture readonly, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = sub i64 %1, %4
  %6 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %7 = load %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"*, %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %7, i64 %5
  ret %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %8
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZNK2v88internal11interpreter20ConstantArrayBuilder5Entry8ToHandleINS0_7IsolateEEENS0_6HandleINS0_6ObjectEEEPT_(%"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8
  switch i8 %4, label %119 [
    i8 0, label %5
    i8 1, label %6
    i8 2, label %9
    i8 8, label %9
    i8 7, label %31
    i8 3, label %34
    i8 4, label %38
    i8 5, label %81
    i8 6, label %89
    i8 9, label %95
    i8 10, label %98
    i8 11, label %101
    i8 12, label %104
    i8 13, label %107
    i8 14, label %110
    i8 15, label %113
    i8 16, label %116
  ]

5:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #6
  unreachable

6:                                                ; preds = %2
  %7 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  br label %120

9:                                                ; preds = %2, %2
  %10 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 4
  %13 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %12, align 8
  %14 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %9
  %16 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %13, i64 %11) #7
  %17 = ptrtoint i64* %16 to i64
  br label %120

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %22 = load i64*, i64** %21, align 8
  %23 = icmp eq i64* %20, %22
  br i1 %23, label %24, label %26

24:                                               ; preds = %18
  %25 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #7
  br label %26

26:                                               ; preds = %24, %18
  %27 = phi i64* [ %25, %24 ], [ %20, %18 ]
  %28 = ptrtoint i64* %27 to i64
  %29 = add i64 %28, 8
  %30 = inttoptr i64 %29 to i64*
  store i64* %30, i64** %19, align 8
  store i64 %11, i64* %27, align 8
  br label %120

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 5
  %33 = ptrtoint i64* %32 to i64
  br label %120

34:                                               ; preds = %2
  %35 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i64*, i64** %35, align 8
  %37 = load i64, i64* %36, align 8
  br label %120

38:                                               ; preds = %2
  %39 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::FactoryBase"*
  %40 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %0 to double*
  %41 = load double, double* %40, align 8
  %42 = fcmp ult double %41, 0xC1D0000000000000
  %43 = fcmp ugt double %41, 0x41CFFFFFFF800000
  %44 = or i1 %43, %42
  %45 = bitcast double %41 to i64
  %46 = icmp eq i64 %45, -9223372036854775808
  %47 = or i1 %44, %46
  br i1 %47, label %73, label %48

48:                                               ; preds = %38
  %49 = fptosi double %41 to i32
  %50 = sitofp i32 %49 to double
  %51 = fcmp oeq double %41, %50
  br i1 %51, label %52, label %73

52:                                               ; preds = %48
  %53 = sext i32 %49 to i64
  %54 = shl nsw i64 %53, 1
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 4
  %56 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %55, align 8
  %57 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %52
  %59 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %56, i64 %54) #7
  br label %78

60:                                               ; preds = %52
  %61 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %62 = load i64*, i64** %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %64 = load i64*, i64** %63, align 8
  %65 = icmp eq i64* %62, %64
  br i1 %65, label %66, label %68

66:                                               ; preds = %60
  %67 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #7
  br label %68

68:                                               ; preds = %66, %60
  %69 = phi i64* [ %67, %66 ], [ %62, %60 ]
  %70 = ptrtoint i64* %69 to i64
  %71 = add i64 %70, 8
  %72 = inttoptr i64 %71 to i64*
  store i64* %72, i64** %61, align 8
  store i64 %54, i64* %69, align 8
  br label %78

73:                                               ; preds = %48, %38
  %74 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE1EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %39) #7
  %75 = load i64, i64* %74, align 8
  %76 = add i64 %75, 3
  %77 = inttoptr i64 %76 to double*
  store double %41, double* %77, align 1
  br label %78

78:                                               ; preds = %58, %68, %73
  %79 = phi i64* [ %74, %73 ], [ %59, %58 ], [ %69, %68 ]
  %80 = ptrtoint i64* %79 to i64
  br label %120

81:                                               ; preds = %2
  %82 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %0 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = tail call i64* @_ZN2v88internal13BigIntLiteralINS0_7IsolateEEENS0_11MaybeHandleINS0_6BigIntEEEPT_PKc(%"class.v8::internal::Isolate"* %1, i8* %83) #7
  %85 = icmp eq i64* %84, null
  br i1 %85, label %86, label %87, !prof !2

86:                                               ; preds = %81
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0)) #6
  unreachable

87:                                               ; preds = %81
  %88 = ptrtoint i64* %84 to i64
  br label %120

89:                                               ; preds = %2
  %90 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %0 to %"class.v8::internal::Scope"**
  %91 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %91, i64 0, i32 7, i32 0, i32 0
  %93 = bitcast i64** %92 to i64*
  %94 = load i64, i64* %93, align 8
  br label %120

95:                                               ; preds = %2
  %96 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 509
  %97 = ptrtoint i64* %96 to i64
  br label %120

98:                                               ; preds = %2
  %99 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 478
  %100 = ptrtoint i64* %99 to i64
  br label %120

101:                                              ; preds = %2
  %102 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 108
  %103 = ptrtoint i64* %102 to i64
  br label %120

104:                                              ; preds = %2
  %105 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 109
  %106 = ptrtoint i64* %105 to i64
  br label %120

107:                                              ; preds = %2
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 29
  %109 = ptrtoint i64* %108 to i64
  br label %120

110:                                              ; preds = %2
  %111 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 510
  %112 = ptrtoint i64* %111 to i64
  br label %120

113:                                              ; preds = %2
  %114 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 486
  %115 = ptrtoint i64* %114 to i64
  br label %120

116:                                              ; preds = %2
  %117 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 121
  %118 = ptrtoint i64* %117 to i64
  br label %120

119:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #6
  unreachable

120:                                              ; preds = %26, %15, %116, %113, %110, %107, %104, %101, %98, %95, %89, %87, %78, %34, %31, %6
  %121 = phi i64 [ %118, %116 ], [ %115, %113 ], [ %112, %110 ], [ %109, %107 ], [ %106, %104 ], [ %103, %101 ], [ %100, %98 ], [ %97, %95 ], [ %94, %89 ], [ %88, %87 ], [ %80, %78 ], [ %37, %34 ], [ %33, %31 ], [ %8, %6 ], [ %17, %15 ], [ %28, %26 ]
  %122 = inttoptr i64 %121 to i64*
  ret i64* %122
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZNK2v88internal11interpreter20ConstantArrayBuilder2AtINS0_12LocalIsolateEEENS0_11MaybeHandleINS0_6ObjectEEEmPT_(%"class.v8::internal::interpreter::ConstantArrayBuilder"*, i64, %"class.v8::internal::LocalIsolate"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  %5 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %4, align 8
  %6 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %5, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %5, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %7, -1
  %11 = add i64 %10, %9
  %12 = icmp ult i64 %11, %1
  br i1 %12, label %13, label %34

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 1
  %15 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %14, align 8
  %16 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %15, i64 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %15, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %17, -1
  %21 = add i64 %20, %19
  %22 = icmp ult i64 %21, %1
  br i1 %22, label %23, label %34

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 2
  %25 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %24, align 8
  %26 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %25, i64 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %25, i64 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %27, -1
  %31 = add i64 %30, %29
  %32 = icmp ult i64 %31, %1
  br i1 %32, label %33, label %34

33:                                               ; preds = %23
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #6
  unreachable

34:                                               ; preds = %3, %13, %23
  %35 = phi i64 [ %7, %3 ], [ %17, %13 ], [ %27, %23 ]
  %36 = phi %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* [ %5, %3 ], [ %15, %13 ], [ %25, %23 ]
  %37 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %36, i64 0, i32 4, i32 0
  %38 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %36, i64 0, i32 4, i32 0, i32 0, i32 1
  %39 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.std::__1::vector"* %37 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = ashr exact i64 %43, 4
  %45 = add i64 %44, %35
  %46 = icmp ugt i64 %45, %1
  %47 = inttoptr i64 %42 to %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"*
  br i1 %46, label %48, label %56

48:                                               ; preds = %34
  %49 = sub i64 %1, %35
  %50 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %47, i64 %49, i32 1
  %51 = load i8, i8* %50, align 8
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %47, i64 %49
  %55 = tail call i64* @_ZNK2v88internal11interpreter20ConstantArrayBuilder5Entry8ToHandleINS0_12LocalIsolateEEENS0_6HandleINS0_6ObjectEEEPT_(%"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %54, %"class.v8::internal::LocalIsolate"* %2)
  br label %56

56:                                               ; preds = %34, %48, %53
  %57 = phi i64* [ %55, %53 ], [ null, %48 ], [ null, %34 ]
  ret i64* %57
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZNK2v88internal11interpreter20ConstantArrayBuilder5Entry8ToHandleINS0_12LocalIsolateEEENS0_6HandleINS0_6ObjectEEEPT_(%"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"*, %"class.v8::internal::LocalIsolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8
  switch i8 %4, label %145 [
    i8 0, label %5
    i8 1, label %6
    i8 2, label %9
    i8 8, label %9
    i8 7, label %36
    i8 3, label %41
    i8 4, label %45
    i8 5, label %91
    i8 6, label %99
    i8 9, label %105
    i8 10, label %110
    i8 11, label %115
    i8 12, label %120
    i8 13, label %125
    i8 14, label %130
    i8 15, label %135
    i8 16, label %140
  ]

5:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #6
  unreachable

6:                                                ; preds = %2
  %7 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  br label %146

9:                                                ; preds = %2, %2
  %10 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 8, !range !3
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1
  %17 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %16, i64 %11) #7
  br label %33

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1, i32 7, i32 0, i32 0, i32 0
  %20 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %20, i64 0, i32 0, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %20, i64 0, i32 0, i32 1
  %24 = load i64*, i64** %23, align 8
  %25 = icmp eq i64* %22, %24
  br i1 %25, label %26, label %29

26:                                               ; preds = %18
  %27 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %20) #7
  %28 = load i64*, i64** %21, align 8
  br label %29

29:                                               ; preds = %26, %18
  %30 = phi i64* [ %28, %26 ], [ %22, %18 ]
  %31 = phi i64* [ %27, %26 ], [ %22, %18 ]
  %32 = getelementptr inbounds i64, i64* %30, i64 1
  store i64* %32, i64** %21, align 8
  store i64 %11, i64* %31, align 8
  br label %33

33:                                               ; preds = %15, %29
  %34 = phi i64* [ %17, %15 ], [ %31, %29 ]
  %35 = ptrtoint i64* %34 to i64
  br label %146

36:                                               ; preds = %2
  %37 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i64*, i64** %37, align 8
  %39 = getelementptr inbounds i64, i64* %38, i64 5
  %40 = ptrtoint i64* %39 to i64
  br label %146

41:                                               ; preds = %2
  %42 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i64*, i64** %42, align 8
  %44 = load i64, i64* %43, align 8
  br label %146

45:                                               ; preds = %2
  %46 = bitcast %"class.v8::internal::LocalIsolate"* %1 to %"class.v8::internal::FactoryBase.1094"*
  %47 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %0 to double*
  %48 = load double, double* %47, align 8
  %49 = fcmp ult double %48, 0xC1D0000000000000
  %50 = fcmp ugt double %48, 0x41CFFFFFFF800000
  %51 = or i1 %50, %49
  %52 = bitcast double %48 to i64
  %53 = icmp eq i64 %52, -9223372036854775808
  %54 = or i1 %51, %53
  br i1 %54, label %83, label %55

55:                                               ; preds = %45
  %56 = fptosi double %48 to i32
  %57 = sitofp i32 %56 to double
  %58 = fcmp oeq double %48, %57
  br i1 %58, label %59, label %83

59:                                               ; preds = %55
  %60 = sext i32 %56 to i64
  %61 = shl nsw i64 %60, 1
  %62 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1, i32 1
  %63 = load i8, i8* %62, align 8, !range !3
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %68, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1
  %67 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %66, i64 %61) #7
  br label %88

68:                                               ; preds = %59
  %69 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1, i32 7, i32 0, i32 0, i32 0
  %70 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %70, i64 0, i32 0, i32 0
  %72 = load i64*, i64** %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %70, i64 0, i32 0, i32 1
  %74 = load i64*, i64** %73, align 8
  %75 = icmp eq i64* %72, %74
  br i1 %75, label %76, label %79

76:                                               ; preds = %68
  %77 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %70) #7
  %78 = load i64*, i64** %71, align 8
  br label %79

79:                                               ; preds = %76, %68
  %80 = phi i64* [ %78, %76 ], [ %72, %68 ]
  %81 = phi i64* [ %77, %76 ], [ %72, %68 ]
  %82 = getelementptr inbounds i64, i64* %80, i64 1
  store i64* %82, i64** %71, align 8
  store i64 %61, i64* %81, align 8
  br label %88

83:                                               ; preds = %55, %45
  %84 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE13NewHeapNumberILNS0_14AllocationTypeE1EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase.1094"* %46) #7
  %85 = load i64, i64* %84, align 8
  %86 = add i64 %85, 3
  %87 = inttoptr i64 %86 to double*
  store double %48, double* %87, align 1
  br label %88

88:                                               ; preds = %65, %79, %83
  %89 = phi i64* [ %84, %83 ], [ %67, %65 ], [ %81, %79 ]
  %90 = ptrtoint i64* %89 to i64
  br label %146

91:                                               ; preds = %2
  %92 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %0 to i8**
  %93 = load i8*, i8** %92, align 8
  %94 = tail call i64* @_ZN2v88internal13BigIntLiteralINS0_12LocalIsolateEEENS0_11MaybeHandleINS0_6BigIntEEEPT_PKc(%"class.v8::internal::LocalIsolate"* %1, i8* %93) #7
  %95 = icmp eq i64* %94, null
  br i1 %95, label %96, label %97, !prof !2

96:                                               ; preds = %91
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0)) #6
  unreachable

97:                                               ; preds = %91
  %98 = ptrtoint i64* %94 to i64
  br label %146

99:                                               ; preds = %2
  %100 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %0 to %"class.v8::internal::Scope"**
  %101 = load %"class.v8::internal::Scope"*, %"class.v8::internal::Scope"** %100, align 8
  %102 = getelementptr inbounds %"class.v8::internal::Scope", %"class.v8::internal::Scope"* %101, i64 0, i32 7, i32 0, i32 0
  %103 = bitcast i64** %102 to i64*
  %104 = load i64, i64* %103, align 8
  br label %146

105:                                              ; preds = %2
  %106 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i64*, i64** %106, align 8
  %108 = getelementptr inbounds i64, i64* %107, i64 509
  %109 = ptrtoint i64* %108 to i64
  br label %146

110:                                              ; preds = %2
  %111 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %112 = load i64*, i64** %111, align 8
  %113 = getelementptr inbounds i64, i64* %112, i64 478
  %114 = ptrtoint i64* %113 to i64
  br label %146

115:                                              ; preds = %2
  %116 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %117 = load i64*, i64** %116, align 8
  %118 = getelementptr inbounds i64, i64* %117, i64 108
  %119 = ptrtoint i64* %118 to i64
  br label %146

120:                                              ; preds = %2
  %121 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %122 = load i64*, i64** %121, align 8
  %123 = getelementptr inbounds i64, i64* %122, i64 109
  %124 = ptrtoint i64* %123 to i64
  br label %146

125:                                              ; preds = %2
  %126 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %127 = load i64*, i64** %126, align 8
  %128 = getelementptr inbounds i64, i64* %127, i64 29
  %129 = ptrtoint i64* %128 to i64
  br label %146

130:                                              ; preds = %2
  %131 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %132 = load i64*, i64** %131, align 8
  %133 = getelementptr inbounds i64, i64* %132, i64 510
  %134 = ptrtoint i64* %133 to i64
  br label %146

135:                                              ; preds = %2
  %136 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %137 = load i64*, i64** %136, align 8
  %138 = getelementptr inbounds i64, i64* %137, i64 486
  %139 = ptrtoint i64* %138 to i64
  br label %146

140:                                              ; preds = %2
  %141 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %142 = load i64*, i64** %141, align 8
  %143 = getelementptr inbounds i64, i64* %142, i64 121
  %144 = ptrtoint i64* %143 to i64
  br label %146

145:                                              ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #6
  unreachable

146:                                              ; preds = %140, %135, %130, %125, %120, %115, %110, %105, %99, %97, %88, %41, %36, %33, %6
  %147 = phi i64 [ %144, %140 ], [ %139, %135 ], [ %134, %130 ], [ %129, %125 ], [ %124, %120 ], [ %119, %115 ], [ %114, %110 ], [ %109, %105 ], [ %104, %99 ], [ %98, %97 ], [ %90, %88 ], [ %44, %41 ], [ %40, %36 ], [ %35, %33 ], [ %8, %6 ]
  %148 = inttoptr i64 %147 to i64*
  ret i64* %148
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11interpreter20ConstantArrayBuilder12ToFixedArrayINS0_7IsolateEEENS0_6HandleINS0_10FixedArrayEEEPT_(%"class.v8::internal::interpreter::ConstantArrayBuilder"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::FactoryBase"*
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 2
  %5 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %4, align 8
  %6 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %5, i64 0, i32 4, i32 0
  %7 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %5, i64 0, i32 4, i32 0, i32 0, i32 1
  %8 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %243, label %14

14:                                               ; preds = %254, %243, %2
  %15 = phi %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* [ %5, %2 ], [ %245, %243 ], [ %256, %254 ]
  %16 = phi i64 [ %12, %2 ], [ %252, %243 ], [ %263, %254 ]
  %17 = ashr exact i64 %16, 4
  %18 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %15, i64 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, %17
  br label %21

21:                                               ; preds = %14, %265
  %22 = phi i64 [ %275, %265 ], [ %20, %14 ]
  %23 = trunc i64 %22 to i32
  %24 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE22NewFixedArrayWithHolesEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %3, i32 %23, i8 zeroext 1) #7
  %25 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  %26 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %25, align 8
  %27 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %26, i64 0, i32 4, i32 0
  %28 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %26, i64 0, i32 4, i32 0, i32 0, i32 1
  %29 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.std::__1::vector"* %27 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %30, %32
  br i1 %33, label %36, label %50

34:                                               ; preds = %92
  %35 = trunc i64 %58 to i32
  br label %36

36:                                               ; preds = %34, %21
  %37 = phi i32 [ 0, %21 ], [ %35, %34 ]
  %38 = phi i64 [ 0, %21 ], [ %97, %34 ]
  %39 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %26, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %40, %38
  %42 = load i64, i64* %24, align 8
  %43 = add i64 %42, 3
  %44 = inttoptr i64 %43 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = ashr i32 %45, 1
  %47 = sub nsw i32 %46, %37
  %48 = sext i32 %47 to i64
  %49 = icmp ult i64 %41, %48
  br i1 %49, label %99, label %111

50:                                               ; preds = %21, %92
  %51 = phi i64 [ %95, %92 ], [ %32, %21 ]
  %52 = phi i64 [ %58, %92 ], [ 0, %21 ]
  %53 = phi i64 [ %93, %92 ], [ 0, %21 ]
  %54 = inttoptr i64 %51 to %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"*
  %55 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %54, i64 %53
  %56 = tail call i64* @_ZNK2v88internal11interpreter20ConstantArrayBuilder5Entry8ToHandleINS0_7IsolateEEENS0_6HandleINS0_6ObjectEEEPT_(%"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %55, %"class.v8::internal::Isolate"* %1)
  %57 = load i64, i64* %24, align 8
  %58 = add i64 %52, 1
  %59 = load i64, i64* %56, align 8
  %60 = trunc i64 %52 to i32
  %61 = shl i32 %60, 2
  %62 = sext i32 %61 to i64
  %63 = add nsw i64 %62, 7
  %64 = add i64 %63, %57
  %65 = inttoptr i64 %64 to i32*
  %66 = trunc i64 %59 to i32
  store atomic volatile i32 %66, i32* %65 monotonic, align 4
  %67 = and i64 %59, 1
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %92, label %69

69:                                               ; preds = %50
  %70 = and i64 %57, -262144
  %71 = or i64 %70, 8
  %72 = inttoptr i64 %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = and i64 %73, 262144
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %80, label %76

76:                                               ; preds = %69
  %77 = or i64 %70, 16
  %78 = inttoptr i64 %77 to %"class.v8::internal::Heap"**
  %79 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %78, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %79, i64 %57, i64 %64, i64 %59) #7
  br label %80

80:                                               ; preds = %76, %69
  %81 = and i64 %59, -262144
  %82 = or i64 %81, 8
  %83 = inttoptr i64 %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = and i64 %84, 24
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %92, label %87

87:                                               ; preds = %80
  %88 = load i64, i64* %72, align 8
  %89 = and i64 %88, 24
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %87
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %57, i64 %64, i64 %59) #7
  br label %92

92:                                               ; preds = %50, %80, %87, %91
  %93 = add nuw i64 %53, 1
  %94 = load i64, i64* %29, align 8
  %95 = load i64, i64* %31, align 8
  %96 = sub i64 %94, %95
  %97 = ashr exact i64 %96, 4
  %98 = icmp ult i64 %93, %97
  br i1 %98, label %50, label %34

99:                                               ; preds = %36
  %100 = trunc i64 %41 to i32
  %101 = add i32 %37, %100
  %102 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 1
  %103 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %102, align 8
  %104 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %103, i64 0, i32 4, i32 0
  %105 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %103, i64 0, i32 4, i32 0, i32 0, i32 1
  %106 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.std::__1::vector"* %104 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = icmp eq i64 %107, %109
  br i1 %110, label %168, label %112

111:                                              ; preds = %236, %180, %168, %36
  ret i64* %24

112:                                              ; preds = %99
  %113 = sext i32 %101 to i64
  br label %114

114:                                              ; preds = %156, %112
  %115 = phi i64 [ %109, %112 ], [ %159, %156 ]
  %116 = phi i64 [ %113, %112 ], [ %122, %156 ]
  %117 = phi i64 [ 0, %112 ], [ %157, %156 ]
  %118 = inttoptr i64 %115 to %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"*
  %119 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %118, i64 %117
  %120 = tail call i64* @_ZNK2v88internal11interpreter20ConstantArrayBuilder5Entry8ToHandleINS0_7IsolateEEENS0_6HandleINS0_6ObjectEEEPT_(%"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %119, %"class.v8::internal::Isolate"* %1)
  %121 = load i64, i64* %24, align 8
  %122 = add i64 %116, 1
  %123 = load i64, i64* %120, align 8
  %124 = trunc i64 %116 to i32
  %125 = shl i32 %124, 2
  %126 = sext i32 %125 to i64
  %127 = add nsw i64 %126, 7
  %128 = add i64 %127, %121
  %129 = inttoptr i64 %128 to i32*
  %130 = trunc i64 %123 to i32
  store atomic volatile i32 %130, i32* %129 monotonic, align 4
  %131 = and i64 %123, 1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %156, label %133

133:                                              ; preds = %114
  %134 = and i64 %121, -262144
  %135 = or i64 %134, 8
  %136 = inttoptr i64 %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, 262144
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %144, label %140

140:                                              ; preds = %133
  %141 = or i64 %134, 16
  %142 = inttoptr i64 %141 to %"class.v8::internal::Heap"**
  %143 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %142, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %143, i64 %121, i64 %128, i64 %123) #7
  br label %144

144:                                              ; preds = %140, %133
  %145 = and i64 %123, -262144
  %146 = or i64 %145, 8
  %147 = inttoptr i64 %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = and i64 %148, 24
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %156, label %151

151:                                              ; preds = %144
  %152 = load i64, i64* %136, align 8
  %153 = and i64 %152, 24
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %151
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %121, i64 %128, i64 %123) #7
  br label %156

156:                                              ; preds = %155, %151, %144, %114
  %157 = add nuw i64 %117, 1
  %158 = load i64, i64* %106, align 8
  %159 = load i64, i64* %108, align 8
  %160 = sub i64 %158, %159
  %161 = ashr exact i64 %160, 4
  %162 = icmp ult i64 %157, %161
  br i1 %162, label %114, label %163

163:                                              ; preds = %156
  %164 = trunc i64 %122 to i32
  %165 = load i64, i64* %24, align 8
  %166 = add i64 %165, 3
  %167 = inttoptr i64 %166 to i32*
  br label %168

168:                                              ; preds = %163, %99
  %169 = phi i32* [ %167, %163 ], [ %44, %99 ]
  %170 = phi i32 [ %164, %163 ], [ %101, %99 ]
  %171 = phi i64 [ %161, %163 ], [ 0, %99 ]
  %172 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %103, i64 0, i32 1
  %173 = load i64, i64* %172, align 8
  %174 = sub i64 %173, %171
  %175 = load i32, i32* %169, align 4
  %176 = ashr i32 %175, 1
  %177 = sub nsw i32 %176, %170
  %178 = sext i32 %177 to i64
  %179 = icmp ult i64 %174, %178
  br i1 %179, label %180, label %111

180:                                              ; preds = %168
  %181 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 2
  %182 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %181, align 8
  %183 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %182, i64 0, i32 4, i32 0
  %184 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %182, i64 0, i32 4, i32 0, i32 0, i32 1
  %185 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %184 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = bitcast %"class.std::__1::vector"* %183 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = icmp eq i64 %186, %188
  br i1 %189, label %111, label %190

190:                                              ; preds = %180
  %191 = trunc i64 %174 to i32
  %192 = add i32 %170, %191
  %193 = sext i32 %192 to i64
  br label %194

194:                                              ; preds = %236, %190
  %195 = phi i64 [ %188, %190 ], [ %239, %236 ]
  %196 = phi i64 [ %193, %190 ], [ %202, %236 ]
  %197 = phi i64 [ 0, %190 ], [ %237, %236 ]
  %198 = inttoptr i64 %195 to %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"*
  %199 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %198, i64 %197
  %200 = tail call i64* @_ZNK2v88internal11interpreter20ConstantArrayBuilder5Entry8ToHandleINS0_7IsolateEEENS0_6HandleINS0_6ObjectEEEPT_(%"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %199, %"class.v8::internal::Isolate"* %1)
  %201 = load i64, i64* %24, align 8
  %202 = add i64 %196, 1
  %203 = load i64, i64* %200, align 8
  %204 = trunc i64 %196 to i32
  %205 = shl i32 %204, 2
  %206 = sext i32 %205 to i64
  %207 = add nsw i64 %206, 7
  %208 = add i64 %207, %201
  %209 = inttoptr i64 %208 to i32*
  %210 = trunc i64 %203 to i32
  store atomic volatile i32 %210, i32* %209 monotonic, align 4
  %211 = and i64 %203, 1
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %236, label %213

213:                                              ; preds = %194
  %214 = and i64 %201, -262144
  %215 = or i64 %214, 8
  %216 = inttoptr i64 %215 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = and i64 %217, 262144
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %224, label %220

220:                                              ; preds = %213
  %221 = or i64 %214, 16
  %222 = inttoptr i64 %221 to %"class.v8::internal::Heap"**
  %223 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %222, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %223, i64 %201, i64 %208, i64 %203) #7
  br label %224

224:                                              ; preds = %220, %213
  %225 = and i64 %203, -262144
  %226 = or i64 %225, 8
  %227 = inttoptr i64 %226 to i64*
  %228 = load i64, i64* %227, align 8
  %229 = and i64 %228, 24
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %236, label %231

231:                                              ; preds = %224
  %232 = load i64, i64* %216, align 8
  %233 = and i64 %232, 24
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %231
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %201, i64 %208, i64 %203) #7
  br label %236

236:                                              ; preds = %235, %231, %224, %194
  %237 = add nuw i64 %197, 1
  %238 = load i64, i64* %185, align 8
  %239 = load i64, i64* %187, align 8
  %240 = sub i64 %238, %239
  %241 = ashr exact i64 %240, 4
  %242 = icmp ult i64 %237, %241
  br i1 %242, label %194, label %111

243:                                              ; preds = %2
  %244 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 1
  %245 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %244, align 8
  %246 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %245, i64 0, i32 4, i32 0
  %247 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %245, i64 0, i32 4, i32 0, i32 0, i32 1
  %248 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %247 to i64*
  %249 = load i64, i64* %248, align 8
  %250 = bitcast %"class.std::__1::vector"* %246 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = sub i64 %249, %251
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %254, label %14

254:                                              ; preds = %243
  %255 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  %256 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %255, align 8
  %257 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %256, i64 0, i32 4, i32 0
  %258 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %256, i64 0, i32 4, i32 0, i32 0, i32 1
  %259 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %258 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = bitcast %"class.std::__1::vector"* %257 to i64*
  %262 = load i64, i64* %261, align 8
  %263 = sub i64 %260, %262
  %264 = icmp eq i64 %263, 0
  br i1 %264, label %265, label %14

265:                                              ; preds = %254
  %266 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  %267 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %266, align 8
  %268 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %267, i64 0, i32 4, i32 0
  %269 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %267, i64 0, i32 4, i32 0, i32 0, i32 1
  %270 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %269 to i64*
  %271 = load i64, i64* %270, align 8
  %272 = bitcast %"class.std::__1::vector"* %268 to i64*
  %273 = load i64, i64* %272, align 8
  %274 = sub i64 %271, %273
  %275 = ashr exact i64 %274, 4
  br label %21
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE22NewFixedArrayWithHolesEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2v88internal11interpreter20ConstantArrayBuilder4sizeEv(%"class.v8::internal::interpreter::ConstantArrayBuilder"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 2
  %3 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %2, align 8
  %4 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %3, i64 0, i32 4, i32 0
  %5 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %3, i64 0, i32 4, i32 0, i32 0, i32 1
  %6 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %21, label %12

12:                                               ; preds = %32, %21, %1
  %13 = phi %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* [ %3, %1 ], [ %23, %21 ], [ %34, %32 ]
  %14 = phi i64 [ %10, %1 ], [ %30, %21 ], [ %41, %32 ]
  %15 = ashr exact i64 %14, 4
  %16 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %13, i64 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, %15
  br label %19

19:                                               ; preds = %12, %43
  %20 = phi i64 [ %53, %43 ], [ %18, %12 ]
  ret i64 %20

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 1
  %23 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %22, align 8
  %24 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %23, i64 0, i32 4, i32 0
  %25 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %23, i64 0, i32 4, i32 0, i32 0, i32 1
  %26 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::vector"* %24 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %27, %29
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %12

32:                                               ; preds = %21
  %33 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  %34 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %33, align 8
  %35 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %34, i64 0, i32 4, i32 0
  %36 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %34, i64 0, i32 4, i32 0, i32 0, i32 1
  %37 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::vector"* %35 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %12

43:                                               ; preds = %32
  %44 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  %45 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %44, align 8
  %46 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %45, i64 0, i32 4, i32 0
  %47 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %45, i64 0, i32 4, i32 0, i32 0, i32 1
  %48 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.std::__1::vector"* %46 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = sub i64 %49, %51
  %53 = ashr exact i64 %52, 4
  br label %19
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZN2v88internal11interpreter20ConstantArrayBuilder12ToFixedArrayINS0_12LocalIsolateEEENS0_6HandleINS0_10FixedArrayEEEPT_(%"class.v8::internal::interpreter::ConstantArrayBuilder"*, %"class.v8::internal::LocalIsolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.v8::internal::LocalIsolate"* %1 to %"class.v8::internal::FactoryBase.1094"*
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 2
  %5 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %4, align 8
  %6 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %5, i64 0, i32 4, i32 0
  %7 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %5, i64 0, i32 4, i32 0, i32 0, i32 1
  %8 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %243, label %14

14:                                               ; preds = %254, %243, %2
  %15 = phi %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* [ %5, %2 ], [ %245, %243 ], [ %256, %254 ]
  %16 = phi i64 [ %12, %2 ], [ %252, %243 ], [ %263, %254 ]
  %17 = ashr exact i64 %16, 4
  %18 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %15, i64 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, %17
  br label %21

21:                                               ; preds = %14, %265
  %22 = phi i64 [ %275, %265 ], [ %20, %14 ]
  %23 = trunc i64 %22 to i32
  %24 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE22NewFixedArrayWithHolesEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1094"* %3, i32 %23, i8 zeroext 1) #7
  %25 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  %26 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %25, align 8
  %27 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %26, i64 0, i32 4, i32 0
  %28 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %26, i64 0, i32 4, i32 0, i32 0, i32 1
  %29 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.std::__1::vector"* %27 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %30, %32
  br i1 %33, label %36, label %50

34:                                               ; preds = %92
  %35 = trunc i64 %58 to i32
  br label %36

36:                                               ; preds = %34, %21
  %37 = phi i32 [ 0, %21 ], [ %35, %34 ]
  %38 = phi i64 [ 0, %21 ], [ %97, %34 ]
  %39 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %26, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %40, %38
  %42 = load i64, i64* %24, align 8
  %43 = add i64 %42, 3
  %44 = inttoptr i64 %43 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = ashr i32 %45, 1
  %47 = sub nsw i32 %46, %37
  %48 = sext i32 %47 to i64
  %49 = icmp ult i64 %41, %48
  br i1 %49, label %99, label %111

50:                                               ; preds = %21, %92
  %51 = phi i64 [ %95, %92 ], [ %32, %21 ]
  %52 = phi i64 [ %58, %92 ], [ 0, %21 ]
  %53 = phi i64 [ %93, %92 ], [ 0, %21 ]
  %54 = inttoptr i64 %51 to %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"*
  %55 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %54, i64 %53
  %56 = tail call i64* @_ZNK2v88internal11interpreter20ConstantArrayBuilder5Entry8ToHandleINS0_12LocalIsolateEEENS0_6HandleINS0_6ObjectEEEPT_(%"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %55, %"class.v8::internal::LocalIsolate"* %1)
  %57 = load i64, i64* %24, align 8
  %58 = add i64 %52, 1
  %59 = load i64, i64* %56, align 8
  %60 = trunc i64 %52 to i32
  %61 = shl i32 %60, 2
  %62 = sext i32 %61 to i64
  %63 = add nsw i64 %62, 7
  %64 = add i64 %63, %57
  %65 = inttoptr i64 %64 to i32*
  %66 = trunc i64 %59 to i32
  store atomic volatile i32 %66, i32* %65 monotonic, align 4
  %67 = and i64 %59, 1
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %92, label %69

69:                                               ; preds = %50
  %70 = and i64 %57, -262144
  %71 = or i64 %70, 8
  %72 = inttoptr i64 %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = and i64 %73, 262144
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %80, label %76

76:                                               ; preds = %69
  %77 = or i64 %70, 16
  %78 = inttoptr i64 %77 to %"class.v8::internal::Heap"**
  %79 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %78, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %79, i64 %57, i64 %64, i64 %59) #7
  br label %80

80:                                               ; preds = %76, %69
  %81 = and i64 %59, -262144
  %82 = or i64 %81, 8
  %83 = inttoptr i64 %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = and i64 %84, 24
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %92, label %87

87:                                               ; preds = %80
  %88 = load i64, i64* %72, align 8
  %89 = and i64 %88, 24
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %87
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %57, i64 %64, i64 %59) #7
  br label %92

92:                                               ; preds = %50, %80, %87, %91
  %93 = add nuw i64 %53, 1
  %94 = load i64, i64* %29, align 8
  %95 = load i64, i64* %31, align 8
  %96 = sub i64 %94, %95
  %97 = ashr exact i64 %96, 4
  %98 = icmp ult i64 %93, %97
  br i1 %98, label %50, label %34

99:                                               ; preds = %36
  %100 = trunc i64 %41 to i32
  %101 = add i32 %37, %100
  %102 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 1
  %103 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %102, align 8
  %104 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %103, i64 0, i32 4, i32 0
  %105 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %103, i64 0, i32 4, i32 0, i32 0, i32 1
  %106 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.std::__1::vector"* %104 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = icmp eq i64 %107, %109
  br i1 %110, label %168, label %112

111:                                              ; preds = %236, %180, %168, %36
  ret i64* %24

112:                                              ; preds = %99
  %113 = sext i32 %101 to i64
  br label %114

114:                                              ; preds = %156, %112
  %115 = phi i64 [ %109, %112 ], [ %159, %156 ]
  %116 = phi i64 [ %113, %112 ], [ %122, %156 ]
  %117 = phi i64 [ 0, %112 ], [ %157, %156 ]
  %118 = inttoptr i64 %115 to %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"*
  %119 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %118, i64 %117
  %120 = tail call i64* @_ZNK2v88internal11interpreter20ConstantArrayBuilder5Entry8ToHandleINS0_12LocalIsolateEEENS0_6HandleINS0_6ObjectEEEPT_(%"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %119, %"class.v8::internal::LocalIsolate"* %1)
  %121 = load i64, i64* %24, align 8
  %122 = add i64 %116, 1
  %123 = load i64, i64* %120, align 8
  %124 = trunc i64 %116 to i32
  %125 = shl i32 %124, 2
  %126 = sext i32 %125 to i64
  %127 = add nsw i64 %126, 7
  %128 = add i64 %127, %121
  %129 = inttoptr i64 %128 to i32*
  %130 = trunc i64 %123 to i32
  store atomic volatile i32 %130, i32* %129 monotonic, align 4
  %131 = and i64 %123, 1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %156, label %133

133:                                              ; preds = %114
  %134 = and i64 %121, -262144
  %135 = or i64 %134, 8
  %136 = inttoptr i64 %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, 262144
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %144, label %140

140:                                              ; preds = %133
  %141 = or i64 %134, 16
  %142 = inttoptr i64 %141 to %"class.v8::internal::Heap"**
  %143 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %142, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %143, i64 %121, i64 %128, i64 %123) #7
  br label %144

144:                                              ; preds = %140, %133
  %145 = and i64 %123, -262144
  %146 = or i64 %145, 8
  %147 = inttoptr i64 %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = and i64 %148, 24
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %156, label %151

151:                                              ; preds = %144
  %152 = load i64, i64* %136, align 8
  %153 = and i64 %152, 24
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %151
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %121, i64 %128, i64 %123) #7
  br label %156

156:                                              ; preds = %155, %151, %144, %114
  %157 = add nuw i64 %117, 1
  %158 = load i64, i64* %106, align 8
  %159 = load i64, i64* %108, align 8
  %160 = sub i64 %158, %159
  %161 = ashr exact i64 %160, 4
  %162 = icmp ult i64 %157, %161
  br i1 %162, label %114, label %163

163:                                              ; preds = %156
  %164 = trunc i64 %122 to i32
  %165 = load i64, i64* %24, align 8
  %166 = add i64 %165, 3
  %167 = inttoptr i64 %166 to i32*
  br label %168

168:                                              ; preds = %163, %99
  %169 = phi i32* [ %167, %163 ], [ %44, %99 ]
  %170 = phi i32 [ %164, %163 ], [ %101, %99 ]
  %171 = phi i64 [ %161, %163 ], [ 0, %99 ]
  %172 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %103, i64 0, i32 1
  %173 = load i64, i64* %172, align 8
  %174 = sub i64 %173, %171
  %175 = load i32, i32* %169, align 4
  %176 = ashr i32 %175, 1
  %177 = sub nsw i32 %176, %170
  %178 = sext i32 %177 to i64
  %179 = icmp ult i64 %174, %178
  br i1 %179, label %180, label %111

180:                                              ; preds = %168
  %181 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 2
  %182 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %181, align 8
  %183 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %182, i64 0, i32 4, i32 0
  %184 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %182, i64 0, i32 4, i32 0, i32 0, i32 1
  %185 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %184 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = bitcast %"class.std::__1::vector"* %183 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = icmp eq i64 %186, %188
  br i1 %189, label %111, label %190

190:                                              ; preds = %180
  %191 = trunc i64 %174 to i32
  %192 = add i32 %170, %191
  %193 = sext i32 %192 to i64
  br label %194

194:                                              ; preds = %236, %190
  %195 = phi i64 [ %188, %190 ], [ %239, %236 ]
  %196 = phi i64 [ %193, %190 ], [ %202, %236 ]
  %197 = phi i64 [ 0, %190 ], [ %237, %236 ]
  %198 = inttoptr i64 %195 to %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"*
  %199 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %198, i64 %197
  %200 = tail call i64* @_ZNK2v88internal11interpreter20ConstantArrayBuilder5Entry8ToHandleINS0_12LocalIsolateEEENS0_6HandleINS0_6ObjectEEEPT_(%"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %199, %"class.v8::internal::LocalIsolate"* %1)
  %201 = load i64, i64* %24, align 8
  %202 = add i64 %196, 1
  %203 = load i64, i64* %200, align 8
  %204 = trunc i64 %196 to i32
  %205 = shl i32 %204, 2
  %206 = sext i32 %205 to i64
  %207 = add nsw i64 %206, 7
  %208 = add i64 %207, %201
  %209 = inttoptr i64 %208 to i32*
  %210 = trunc i64 %203 to i32
  store atomic volatile i32 %210, i32* %209 monotonic, align 4
  %211 = and i64 %203, 1
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %236, label %213

213:                                              ; preds = %194
  %214 = and i64 %201, -262144
  %215 = or i64 %214, 8
  %216 = inttoptr i64 %215 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = and i64 %217, 262144
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %224, label %220

220:                                              ; preds = %213
  %221 = or i64 %214, 16
  %222 = inttoptr i64 %221 to %"class.v8::internal::Heap"**
  %223 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %222, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %223, i64 %201, i64 %208, i64 %203) #7
  br label %224

224:                                              ; preds = %220, %213
  %225 = and i64 %203, -262144
  %226 = or i64 %225, 8
  %227 = inttoptr i64 %226 to i64*
  %228 = load i64, i64* %227, align 8
  %229 = and i64 %228, 24
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %236, label %231

231:                                              ; preds = %224
  %232 = load i64, i64* %216, align 8
  %233 = and i64 %232, 24
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %231
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %201, i64 %208, i64 %203) #7
  br label %236

236:                                              ; preds = %235, %231, %224, %194
  %237 = add nuw i64 %197, 1
  %238 = load i64, i64* %185, align 8
  %239 = load i64, i64* %187, align 8
  %240 = sub i64 %238, %239
  %241 = ashr exact i64 %240, 4
  %242 = icmp ult i64 %237, %241
  br i1 %242, label %194, label %111

243:                                              ; preds = %2
  %244 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 1
  %245 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %244, align 8
  %246 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %245, i64 0, i32 4, i32 0
  %247 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %245, i64 0, i32 4, i32 0, i32 0, i32 1
  %248 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %247 to i64*
  %249 = load i64, i64* %248, align 8
  %250 = bitcast %"class.std::__1::vector"* %246 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = sub i64 %249, %251
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %254, label %14

254:                                              ; preds = %243
  %255 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  %256 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %255, align 8
  %257 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %256, i64 0, i32 4, i32 0
  %258 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %256, i64 0, i32 4, i32 0, i32 0, i32 1
  %259 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %258 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = bitcast %"class.std::__1::vector"* %257 to i64*
  %262 = load i64, i64* %261, align 8
  %263 = sub i64 %260, %262
  %264 = icmp eq i64 %263, 0
  br i1 %264, label %265, label %14

265:                                              ; preds = %254
  %266 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  %267 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %266, align 8
  %268 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %267, i64 0, i32 4, i32 0
  %269 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %267, i64 0, i32 4, i32 0, i32 0, i32 1
  %270 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %269 to i64*
  %271 = load i64, i64* %270, align 8
  %272 = bitcast %"class.std::__1::vector"* %268 to i64*
  %273 = load i64, i64* %272, align 8
  %274 = sub i64 %271, %273
  %275 = ashr exact i64 %274, 4
  br label %21
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE22NewFixedArrayWithHolesEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase.1094"*, i32, i8 zeroext) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare i64* @_ZN2v88internal13BigIntLiteralINS0_7IsolateEEENS0_11MaybeHandleINS0_6BigIntEEEPT_PKc(%"class.v8::internal::Isolate"*, i8*) local_unnamed_addr #3

declare i64* @_ZN2v88internal13BigIntLiteralINS0_12LocalIsolateEEENS0_11MaybeHandleINS0_6BigIntEEEPT_PKc(%"class.v8::internal::LocalIsolate"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter20ConstantArrayBuilder18ConstantArraySliceC2EPNS0_4ZoneEmmNS1_11OperandSizeE(%"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* nocapture, %"class.v8::internal::Zone"*, i64, i64, i8 zeroext) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %0, i64 0, i32 0
  store i64 %2, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %0, i64 0, i32 1
  store i64 %3, i64* %7, align 8
  %8 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %0, i64 0, i32 2
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %0, i64 0, i32 3
  store i8 %4, i8* %9, align 8
  %10 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %0, i64 0, i32 4
  %11 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %12 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %13 = bitcast %"struct.std::__1::__compressed_pair_elem.26"* %12 to i64*
  %14 = bitcast %"class.v8::internal::ZoneVector"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #7
  store i64 %11, i64* %13, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter20ConstantArrayBuilder18ConstantArraySlice7ReserveEv(%"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 1
  store i64 %4, i64* %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter20ConstantArrayBuilder18ConstantArraySlice9UnreserveEv(%"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, -1
  store i64 %4, i64* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal11interpreter20ConstantArrayBuilder18ConstantArraySlice8AllocateENS2_5EntryEm(%"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, i64*, i8, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca [7 x i8], align 1
  %6 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %0, i64 0, i32 4, i32 0
  %7 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %8 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 4
  %14 = icmp eq i64 %3, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %4
  %16 = inttoptr i64 %9 to %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"*
  %17 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %18 = getelementptr inbounds [7 x i8], [7 x i8]* %5, i64 0, i64 0
  %19 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %17 to i64*
  %20 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  br label %26

22:                                               ; preds = %131, %4
  %23 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %0, i64 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, %13
  ret i64 %25

26:                                               ; preds = %131, %15
  %27 = phi %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* [ %16, %15 ], [ %132, %131 ]
  %28 = phi i64 [ 0, %15 ], [ %133, %131 ]
  %29 = load %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"*, %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %17, align 8
  %30 = icmp eq %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %27, %29
  br i1 %30, label %37, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64* %1, i64** %32, align 8
  %33 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %27, i64 0, i32 1
  store i8 %2, i8* %33, align 8
  %34 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %27, i64 0, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %34, i8* nonnull align 1 %18, i64 7, i1 false)
  %35 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %27, i64 1
  %36 = ptrtoint %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %35 to i64
  store i64 %36, i64* %8, align 8
  br label %131

37:                                               ; preds = %26
  %38 = ptrtoint %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %29 to i64
  %39 = load i64, i64* %10, align 8
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 4
  %42 = add nsw i64 %41, 1
  %43 = icmp ugt i64 %42, 134217727
  br i1 %43, label %44, label %46

44:                                               ; preds = %37
  %45 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %45) #6
  unreachable

46:                                               ; preds = %37
  %47 = icmp ult i64 %41, 67108863
  br i1 %47, label %48, label %53

48:                                               ; preds = %46
  %49 = ashr exact i64 %40, 3
  %50 = icmp ult i64 %49, %42
  %51 = select i1 %50, i64 %42, i64 %49
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %70, label %53

53:                                               ; preds = %48, %46
  %54 = phi i64 [ %51, %48 ], [ 134217727, %46 ]
  %55 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %20, align 8
  %56 = shl i64 %54, 4
  %57 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %55, i64 0, i32 2
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %55, i64 0, i32 3
  %60 = load i64, i64* %59, align 8
  %61 = sub i64 %60, %58
  %62 = icmp ugt i64 %56, %61
  br i1 %62, label %63, label %65, !prof !2

63:                                               ; preds = %53
  %64 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %55, i64 %56) #7
  br label %67

65:                                               ; preds = %53
  %66 = add i64 %58, %56
  store i64 %66, i64* %57, align 8
  br label %67

67:                                               ; preds = %65, %63
  %68 = phi i64 [ %64, %63 ], [ %58, %65 ]
  %69 = inttoptr i64 %68 to %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"*
  br label %70

70:                                               ; preds = %67, %48
  %71 = phi i64 [ %54, %67 ], [ 0, %48 ]
  %72 = phi %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* [ %69, %67 ], [ null, %48 ]
  %73 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %72, i64 %41
  %74 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %72, i64 %71
  %75 = ptrtoint %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %74 to i64
  %76 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64* %1, i64** %76, align 8
  %77 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %72, i64 %41, i32 1
  store i8 %2, i8* %77, align 8
  %78 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %72, i64 %41, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %78, i8* nonnull align 1 %18, i64 7, i1 false)
  %79 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %73, i64 1
  %80 = ptrtoint %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %79 to i64
  %81 = load %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"*, %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %21, align 8
  %82 = load %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"*, %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %7, align 8
  %83 = icmp eq %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %82, %81
  br i1 %83, label %128, label %84

84:                                               ; preds = %70
  %85 = ptrtoint %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %81 to i64
  %86 = getelementptr %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %82, i64 -1
  %87 = ptrtoint %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %86 to i64
  %88 = sub i64 %87, %85
  %89 = lshr i64 %88, 4
  %90 = add nuw nsw i64 %89, 1
  %91 = and i64 %90, 3
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %103, label %93

93:                                               ; preds = %84, %93
  %94 = phi %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* [ %97, %93 ], [ %73, %84 ]
  %95 = phi %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* [ %98, %93 ], [ %82, %84 ]
  %96 = phi i64 [ %101, %93 ], [ %91, %84 ]
  %97 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %94, i64 -1
  %98 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %95, i64 -1
  %99 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %97 to i8*
  %100 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %98 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 16, i1 false) #7
  %101 = add i64 %96, -1
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %103, label %93, !llvm.loop !4

103:                                              ; preds = %93, %84
  %104 = phi %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* [ undef, %84 ], [ %97, %93 ]
  %105 = phi %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* [ %73, %84 ], [ %97, %93 ]
  %106 = phi %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* [ %82, %84 ], [ %98, %93 ]
  %107 = icmp ult i64 %88, 48
  br i1 %107, label %128, label %108

108:                                              ; preds = %103, %108
  %109 = phi %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* [ %123, %108 ], [ %105, %103 ]
  %110 = phi %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* [ %124, %108 ], [ %106, %103 ]
  %111 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %109, i64 -1
  %112 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %110, i64 -1
  %113 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %111 to i8*
  %114 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %112 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 16, i1 false) #7
  %115 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %109, i64 -2
  %116 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %110, i64 -2
  %117 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %115 to i8*
  %118 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %116 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %118, i64 16, i1 false) #7
  %119 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %109, i64 -3
  %120 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %110, i64 -3
  %121 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %119 to i8*
  %122 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %120 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 8 %122, i64 16, i1 false) #7
  %123 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %109, i64 -4
  %124 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %110, i64 -4
  %125 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %123 to i8*
  %126 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %124 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* align 8 %126, i64 16, i1 false) #7
  %127 = icmp eq %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %124, %81
  br i1 %127, label %128, label %108

128:                                              ; preds = %103, %108, %70
  %129 = phi %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* [ %73, %70 ], [ %104, %103 ], [ %123, %108 ]
  %130 = ptrtoint %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %129 to i64
  store i64 %130, i64* %10, align 8
  store i64 %80, i64* %8, align 8
  store i64 %75, i64* %19, align 8
  br label %131

131:                                              ; preds = %31, %128
  %132 = phi %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* [ %35, %31 ], [ %79, %128 ]
  %133 = add nuw i64 %28, 1
  %134 = icmp eq i64 %133, %3
  br i1 %134, label %22, label %26
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(16) %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* @_ZN2v88internal11interpreter20ConstantArrayBuilder18ConstantArraySlice2AtEm(%"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* nocapture readonly, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = sub i64 %1, %4
  %6 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %7 = load %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"*, %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %7, i64 %5
  ret %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter20ConstantArrayBuilderC2EPNS0_4ZoneE(%"class.v8::internal::interpreter::ConstantArrayBuilder"*, %"class.v8::internal::Zone"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 1
  %5 = bitcast %"class.v8::base::TemplateHashMapImpl.27"* %4 to i64*
  store i64 %3, i64* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 1, i32 0, i32 1
  %7 = bitcast %"struct.v8::base::TemplateHashMapEntry.29"** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #7
  %8 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %11, %9
  %13 = icmp ult i64 %12, 384
  br i1 %13, label %14, label %16, !prof !2

14:                                               ; preds = %2
  %15 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 384) #7
  br label %18

16:                                               ; preds = %2
  %17 = add i64 %9, 384
  store i64 %17, i64* %8, align 8
  br label %18

18:                                               ; preds = %16, %14
  %19 = phi i64 [ %15, %14 ], [ %9, %16 ]
  %20 = inttoptr i64 %19 to %"struct.v8::base::TemplateHashMapEntry.29"*
  store %"struct.v8::base::TemplateHashMapEntry.29"* %20, %"struct.v8::base::TemplateHashMapEntry.29"** %6, align 8
  %21 = icmp eq i64 %19, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %18
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0)) #6
  unreachable

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 1, i32 0, i32 2
  store i32 16, i32* %24, align 8
  %25 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %20, i64 0, i32 3
  store i8 0, i8* %25, align 8
  %26 = load i32, i32* %24, align 8
  %27 = icmp ugt i32 %26, 1
  br i1 %27, label %28, label %36

28:                                               ; preds = %23, %28
  %29 = phi i64 [ %32, %28 ], [ 1, %23 ]
  %30 = load %"struct.v8::base::TemplateHashMapEntry.29"*, %"struct.v8::base::TemplateHashMapEntry.29"** %6, align 8
  %31 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %30, i64 %29, i32 3
  store i8 0, i8* %31, align 8
  %32 = add nuw nsw i64 %29, 1
  %33 = load i32, i32* %24, align 8
  %34 = zext i32 %33 to i64
  %35 = icmp ult i64 %32, %34
  br i1 %35, label %28, label %36

36:                                               ; preds = %28, %23
  %37 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 1, i32 0, i32 3
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 1
  %40 = bitcast %"struct.std::__1::__compressed_pair_elem.32"* %39 to i64*
  %41 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %42 = bitcast %"class.std::__1::__compressed_pair.31"* %41 to i64*
  store i64 0, i64* %42, align 8
  store i64 %3, i64* %40, align 8
  %43 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %44, %"class.std::__1::__tree_end_node"** %38, align 8
  %45 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 3
  %46 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 3, i32 0, i32 0, i32 2, i32 1
  %47 = bitcast %"struct.std::__1::__compressed_pair_elem.41"* %46 to i64*
  %48 = bitcast %"class.v8::internal::ZoneVector.36"* %45 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 24, i1 false) #7
  store i64 %3, i64* %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 1, i32 1
  %51 = bitcast %"struct.std::__1::__compressed_pair_elem.47"* %50 to i64*
  %52 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %53 = bitcast %"class.std::__1::__compressed_pair.46"* %52 to i64*
  store i64 0, i64* %53, align 8
  store i64 %3, i64* %51, align 8
  %54 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %55, %"class.std::__1::__tree_end_node"** %49, align 8
  %56 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 5
  %57 = bitcast i32* %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 -1, i64 32, i1 false)
  %58 = load i64, i64* %8, align 8
  %59 = load i64, i64* %10, align 8
  %60 = sub i64 %59, %58
  %61 = icmp ult i64 %60, 64
  br i1 %61, label %62, label %64, !prof !2

62:                                               ; preds = %36
  %63 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 64) #7
  br label %66

64:                                               ; preds = %36
  %65 = add i64 %58, 64
  store i64 %65, i64* %8, align 8
  br label %66

66:                                               ; preds = %62, %64
  %67 = phi i64 [ %63, %62 ], [ %58, %64 ]
  %68 = inttoptr i64 %67 to %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*
  %69 = inttoptr i64 %67 to <2 x i64>*
  store <2 x i64> <i64 0, i64 256>, <2 x i64>* %69, align 8
  %70 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %68, i64 0, i32 2
  store i64 0, i64* %70, align 8
  %71 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %68, i64 0, i32 3
  store i8 1, i8* %71, align 8
  %72 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %68, i64 0, i32 4
  %73 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %68, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %74 = bitcast %"struct.std::__1::__compressed_pair_elem.26"* %73 to i64*
  %75 = bitcast %"class.v8::internal::ZoneVector"* %72 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 24, i1 false) #7
  store i64 %3, i64* %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  store %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %68, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %76, align 8
  %77 = load i64, i64* %8, align 8
  %78 = load i64, i64* %10, align 8
  %79 = sub i64 %78, %77
  %80 = icmp ult i64 %79, 64
  br i1 %80, label %81, label %83, !prof !2

81:                                               ; preds = %66
  %82 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 64) #7
  br label %85

83:                                               ; preds = %66
  %84 = add i64 %77, 64
  store i64 %84, i64* %8, align 8
  br label %85

85:                                               ; preds = %81, %83
  %86 = phi i64 [ %82, %81 ], [ %77, %83 ]
  %87 = inttoptr i64 %86 to %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*
  %88 = inttoptr i64 %86 to <2 x i64>*
  store <2 x i64> <i64 256, i64 65280>, <2 x i64>* %88, align 8
  %89 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %87, i64 0, i32 2
  store i64 0, i64* %89, align 8
  %90 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %87, i64 0, i32 3
  store i8 2, i8* %90, align 8
  %91 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %87, i64 0, i32 4
  %92 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %87, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %93 = bitcast %"struct.std::__1::__compressed_pair_elem.26"* %92 to i64*
  %94 = bitcast %"class.v8::internal::ZoneVector"* %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 24, i1 false) #7
  store i64 %3, i64* %93, align 8
  %95 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 1
  store %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %87, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %95, align 8
  %96 = load i64, i64* %8, align 8
  %97 = load i64, i64* %10, align 8
  %98 = sub i64 %97, %96
  %99 = icmp ult i64 %98, 64
  br i1 %99, label %100, label %102, !prof !2

100:                                              ; preds = %85
  %101 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 64) #7
  br label %104

102:                                              ; preds = %85
  %103 = add i64 %96, 64
  store i64 %103, i64* %8, align 8
  br label %104

104:                                              ; preds = %100, %102
  %105 = phi i64 [ %101, %100 ], [ %96, %102 ]
  %106 = inttoptr i64 %105 to %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*
  %107 = inttoptr i64 %105 to <2 x i64>*
  store <2 x i64> <i64 65536, i64 4294901760>, <2 x i64>* %107, align 8
  %108 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %106, i64 0, i32 2
  store i64 0, i64* %108, align 8
  %109 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %106, i64 0, i32 3
  store i8 4, i8* %109, align 8
  %110 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %106, i64 0, i32 4
  %111 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %106, i64 0, i32 4, i32 0, i32 0, i32 2, i32 1
  %112 = bitcast %"struct.std::__1::__compressed_pair_elem.26"* %111 to i64*
  %113 = bitcast %"class.v8::internal::ZoneVector"* %110 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 0, i64 24, i1 false) #7
  store i64 %3, i64* %112, align 8
  %114 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 2
  store %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %106, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %114, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal11interpreter20ConstantArrayBuilder6InsertENS0_3SmiE(%"class.v8::internal::interpreter::ConstantArrayBuilder"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %32, label %7

7:                                                ; preds = %2
  %8 = trunc i64 %1 to i32
  br label %9

9:                                                ; preds = %9, %7
  %10 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %21, %9 ]
  %11 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %22, %9 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = trunc i64 %13 to i32
  %15 = icmp ult i32 %14, %8
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::__tree_node_base"** %16 to %"class.std::__1::__tree_node"**
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  %19 = bitcast %"class.std::__1::__tree_node"* %11 to %"class.std::__1::__tree_node"**
  %20 = select i1 %15, %"class.std::__1::__tree_node"** %17, %"class.std::__1::__tree_node"** %19
  %21 = select i1 %15, %"class.std::__1::__tree_end_node"* %10, %"class.std::__1::__tree_end_node"* %18
  %22 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %20, align 8
  %23 = icmp eq %"class.std::__1::__tree_node"* %22, null
  br i1 %23, label %24, label %9

24:                                               ; preds = %9
  %25 = icmp eq %"class.std::__1::__tree_end_node"* %21, %3
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 4
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = trunc i64 %29 to i32
  %31 = icmp ult i32 %8, %30
  br i1 %31, label %32, label %34

32:                                               ; preds = %26, %24, %2
  %33 = tail call i32 @_ZN2v88internal11interpreter20ConstantArrayBuilder21AllocateReservedEntryENS0_3SmiE(%"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 %1)
  br label %38

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 5
  %36 = bitcast %"class.std::__1::__tree_end_node"* %35 to i32*
  %37 = load i32, i32* %36, align 8
  br label %38

38:                                               ; preds = %34, %32
  %39 = phi i32 [ %33, %32 ], [ %37, %34 ]
  %40 = zext i32 %39 to i64
  ret i64 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal11interpreter20ConstantArrayBuilder21AllocateReservedEntryENS0_3SmiE(%"class.v8::internal::interpreter::ConstantArrayBuilder"*, i64) local_unnamed_addr #0 align 2 {
  %3 = inttoptr i64 %1 to i64*
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  %5 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %4, align 8
  %6 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %5, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %5, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %5, i64 0, i32 4, i32 0
  %12 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %5, i64 0, i32 4, i32 0, i32 0, i32 1
  %13 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = ashr exact i64 %17, 4
  %19 = icmp eq i64 %10, %18
  br i1 %19, label %20, label %55

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 1
  %22 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %21, align 8
  %23 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %22, i64 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %22, i64 0, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %24, %26
  %28 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %22, i64 0, i32 4, i32 0
  %29 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %22, i64 0, i32 4, i32 0, i32 0, i32 1
  %30 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector"* %28 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 4
  %36 = icmp eq i64 %27, %35
  br i1 %36, label %37, label %55

37:                                               ; preds = %20
  %38 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 2
  %39 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %38, align 8
  %40 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %39, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %39, i64 0, i32 2
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %41, %43
  %45 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %39, i64 0, i32 4, i32 0
  %46 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %39, i64 0, i32 4, i32 0, i32 0, i32 1
  %47 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.std::__1::vector"* %45 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %48, %50
  %52 = ashr exact i64 %51, 4
  %53 = icmp eq i64 %44, %52
  br i1 %53, label %54, label %55

54:                                               ; preds = %37
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #6
  unreachable

55:                                               ; preds = %2, %20, %37
  %56 = phi %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* [ %5, %2 ], [ %22, %20 ], [ %39, %37 ]
  %57 = tail call i64 @_ZN2v88internal11interpreter20ConstantArrayBuilder18ConstantArraySlice8AllocateENS2_5EntryEm(%"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %56, i64* %3, i8 2, i64 1) #7
  %58 = trunc i64 %57 to i32
  %59 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 2, i32 0
  %60 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"class.std::__1::__tree_node"**
  %62 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node"* %62, null
  br i1 %63, label %94, label %64

64:                                               ; preds = %55
  %65 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %66 = trunc i64 %1 to i32
  br label %67

67:                                               ; preds = %90, %64
  %68 = phi %"class.std::__1::__tree_node"* [ %93, %90 ], [ %62, %64 ]
  %69 = phi %"class.std::__1::__tree_node_base"** [ %92, %90 ], [ %65, %64 ]
  %70 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i64, i64* %70, align 8
  %72 = trunc i64 %71 to i32
  %73 = icmp ult i32 %66, %72
  br i1 %73, label %74, label %80

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %68, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %75, align 8
  %77 = icmp eq %"class.std::__1::__tree_node_base"* %76, null
  br i1 %77, label %78, label %90

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %68, i64 0, i32 0, i32 0
  br label %96

80:                                               ; preds = %67
  %81 = icmp ult i32 %72, %66
  br i1 %81, label %82, label %88

82:                                               ; preds = %80
  %83 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %68, i64 0, i32 0, i32 1
  %84 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %83, align 8
  %85 = icmp eq %"class.std::__1::__tree_node_base"* %84, null
  br i1 %85, label %86, label %90

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %68, i64 0, i32 0, i32 0
  br label %96

88:                                               ; preds = %80
  %89 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %68, i64 0, i32 0, i32 0
  br label %96

90:                                               ; preds = %82, %74
  %91 = phi %"class.std::__1::__tree_node_base"* [ %76, %74 ], [ %84, %82 ]
  %92 = phi %"class.std::__1::__tree_node_base"** [ %75, %74 ], [ %83, %82 ]
  %93 = bitcast %"class.std::__1::__tree_node_base"* %91 to %"class.std::__1::__tree_node"*
  br label %67

94:                                               ; preds = %55
  %95 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 0, i32 0
  br label %96

96:                                               ; preds = %94, %88, %86, %78
  %97 = phi %"class.std::__1::__tree_end_node"* [ %60, %94 ], [ %79, %78 ], [ %87, %86 ], [ %89, %88 ]
  %98 = phi %"class.std::__1::__tree_node_base"** [ %95, %94 ], [ %75, %78 ], [ %83, %86 ], [ %69, %88 ]
  %99 = bitcast %"class.std::__1::__tree_node_base"** %98 to %"class.std::__1::__tree_node"**
  %100 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %99, align 8
  %101 = icmp eq %"class.std::__1::__tree_node"* %100, null
  br i1 %101, label %102, label %139

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %104 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %103, align 8, !noalias !6
  %105 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %104, i64 0, i32 2
  %106 = load i64, i64* %105, align 8, !noalias !6
  %107 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %104, i64 0, i32 3
  %108 = load i64, i64* %107, align 8, !noalias !6
  %109 = sub i64 %108, %106
  %110 = icmp ult i64 %109, 48
  br i1 %110, label %111, label %113, !prof !2

111:                                              ; preds = %102
  %112 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %104, i64 48) #7, !noalias !6
  br label %115

113:                                              ; preds = %102
  %114 = add i64 %106, 48
  store i64 %114, i64* %105, align 8, !noalias !6
  br label %115

115:                                              ; preds = %113, %111
  %116 = phi i64 [ %112, %111 ], [ %106, %113 ]
  %117 = inttoptr i64 %116 to %"class.std::__1::__tree_node"*
  %118 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %118, align 8, !noalias !6
  %119 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %117, i64 0, i32 2, i32 0, i32 1
  store i32 0, i32* %119, align 8, !noalias !6
  %120 = inttoptr i64 %116 to %"class.std::__1::__tree_node_base"*
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %120, i64 0, i32 2
  %122 = inttoptr i64 %116 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %122, i8 0, i64 16, i1 false) #7
  store %"class.std::__1::__tree_end_node"* %97, %"class.std::__1::__tree_end_node"** %121, align 8
  store %"class.std::__1::__tree_node_base"* %120, %"class.std::__1::__tree_node_base"** %98, align 8
  %123 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %59, i64 0, i32 0, i32 0
  %124 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %125 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %124, i64 0, i32 0
  %126 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %125, align 8
  %127 = icmp eq %"class.std::__1::__tree_node_base"* %126, null
  br i1 %127, label %132, label %128

128:                                              ; preds = %115
  %129 = ptrtoint %"class.std::__1::__tree_node_base"* %126 to i64
  %130 = bitcast %"class.std::__1::map"* %59 to i64*
  store i64 %129, i64* %130, align 8
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %98, align 8
  br label %132

132:                                              ; preds = %128, %115
  %133 = phi %"class.std::__1::__tree_node_base"* [ %120, %115 ], [ %131, %128 ]
  %134 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %135 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %134, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %135, %"class.std::__1::__tree_node_base"* %133) #7
  %136 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %137 = load i64, i64* %136, align 8
  %138 = add i64 %137, 1
  store i64 %138, i64* %136, align 8
  br label %139

139:                                              ; preds = %96, %132
  %140 = phi %"class.std::__1::__tree_node"* [ %117, %132 ], [ %100, %96 ]
  %141 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %140, i64 0, i32 2, i32 0, i32 1
  store i32 %58, i32* %141, align 4
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal11interpreter20ConstantArrayBuilder6InsertEd(%"class.v8::internal::interpreter::ConstantArrayBuilder"*, double) local_unnamed_addr #0 align 2 {
  %3 = fcmp uno double %1, 0.000000e+00
  br i1 %3, label %4, label %67

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 12
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %8, label %64

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  %10 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %9, align 8
  %11 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %10, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %10, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %10, i64 0, i32 4, i32 0
  %17 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %10, i64 0, i32 4, i32 0, i32 0, i32 1
  %18 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector"* %16 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = ashr exact i64 %22, 4
  %24 = icmp eq i64 %15, %23
  br i1 %24, label %25, label %60

25:                                               ; preds = %8
  %26 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 1
  %27 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %26, align 8
  %28 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %27, i64 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %27, i64 0, i32 2
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %29, %31
  %33 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %27, i64 0, i32 4, i32 0
  %34 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %27, i64 0, i32 4, i32 0, i32 0, i32 1
  %35 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.std::__1::vector"* %33 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = ashr exact i64 %39, 4
  %41 = icmp eq i64 %32, %40
  br i1 %41, label %42, label %60

42:                                               ; preds = %25
  %43 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 2
  %44 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %43, align 8
  %45 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %44, i64 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %44, i64 0, i32 2
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %46, %48
  %50 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %44, i64 0, i32 4, i32 0
  %51 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %44, i64 0, i32 4, i32 0, i32 0, i32 1
  %52 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.std::__1::vector"* %50 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = sub i64 %53, %55
  %57 = ashr exact i64 %56, 4
  %58 = icmp eq i64 %49, %57
  br i1 %58, label %59, label %60

59:                                               ; preds = %42
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #6
  unreachable

60:                                               ; preds = %42, %25, %8
  %61 = phi %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* [ %10, %8 ], [ %27, %25 ], [ %44, %42 ]
  %62 = tail call i64 @_ZN2v88internal11interpreter20ConstantArrayBuilder18ConstantArraySlice8AllocateENS2_5EntryEm(%"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %61, i64* undef, i8 16, i64 1) #7
  %63 = trunc i64 %62 to i32
  store i32 %63, i32* %5, align 4
  br label %64

64:                                               ; preds = %4, %60
  %65 = phi i32 [ %63, %60 ], [ %6, %4 ]
  %66 = sext i32 %65 to i64
  br label %237

67:                                               ; preds = %2
  %68 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 4, i32 0
  %69 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 1, i32 0, i32 0
  %70 = bitcast %"class.std::__1::__tree_end_node"* %69 to %"class.std::__1::__tree_node.1220"**
  %71 = load %"class.std::__1::__tree_node.1220"*, %"class.std::__1::__tree_node.1220"** %70, align 8
  %72 = icmp eq %"class.std::__1::__tree_node.1220"* %71, null
  br i1 %72, label %94, label %73

73:                                               ; preds = %67, %73
  %74 = phi %"class.std::__1::__tree_end_node"* [ %84, %73 ], [ %69, %67 ]
  %75 = phi %"class.std::__1::__tree_node.1220"* [ %85, %73 ], [ %71, %67 ]
  %76 = getelementptr inbounds %"class.std::__1::__tree_node.1220", %"class.std::__1::__tree_node.1220"* %75, i64 0, i32 2, i32 0, i32 0
  %77 = load double, double* %76, align 8
  %78 = fcmp olt double %77, %1
  %79 = getelementptr inbounds %"class.std::__1::__tree_node.1220", %"class.std::__1::__tree_node.1220"* %75, i64 0, i32 0, i32 1
  %80 = bitcast %"class.std::__1::__tree_node_base"** %79 to %"class.std::__1::__tree_node.1220"**
  %81 = getelementptr inbounds %"class.std::__1::__tree_node.1220", %"class.std::__1::__tree_node.1220"* %75, i64 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::__tree_node.1220"* %75 to %"class.std::__1::__tree_node.1220"**
  %83 = select i1 %78, %"class.std::__1::__tree_node.1220"** %80, %"class.std::__1::__tree_node.1220"** %82
  %84 = select i1 %78, %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"* %81
  %85 = load %"class.std::__1::__tree_node.1220"*, %"class.std::__1::__tree_node.1220"** %83, align 8
  %86 = icmp eq %"class.std::__1::__tree_node.1220"* %85, null
  br i1 %86, label %87, label %73

87:                                               ; preds = %73
  %88 = icmp eq %"class.std::__1::__tree_end_node"* %84, %69
  br i1 %88, label %94, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 4
  %91 = bitcast %"class.std::__1::__tree_end_node"* %90 to double*
  %92 = load double, double* %91, align 8
  %93 = fcmp ogt double %92, %1
  br i1 %93, label %94, label %230

94:                                               ; preds = %89, %87, %67
  %95 = bitcast double %1 to i64
  %96 = inttoptr i64 %95 to i64*
  %97 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  %98 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %97, align 8
  %99 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %98, i64 0, i32 1
  %100 = load i64, i64* %99, align 8
  %101 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %98, i64 0, i32 2
  %102 = load i64, i64* %101, align 8
  %103 = sub i64 %100, %102
  %104 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %98, i64 0, i32 4, i32 0
  %105 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %98, i64 0, i32 4, i32 0, i32 0, i32 1
  %106 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.std::__1::vector"* %104 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = sub i64 %107, %109
  %111 = ashr exact i64 %110, 4
  %112 = icmp eq i64 %103, %111
  br i1 %112, label %113, label %148

113:                                              ; preds = %94
  %114 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 1
  %115 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %114, align 8
  %116 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %115, i64 0, i32 1
  %117 = load i64, i64* %116, align 8
  %118 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %115, i64 0, i32 2
  %119 = load i64, i64* %118, align 8
  %120 = sub i64 %117, %119
  %121 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %115, i64 0, i32 4, i32 0
  %122 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %115, i64 0, i32 4, i32 0, i32 0, i32 1
  %123 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.std::__1::vector"* %121 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = sub i64 %124, %126
  %128 = ashr exact i64 %127, 4
  %129 = icmp eq i64 %120, %128
  br i1 %129, label %130, label %148

130:                                              ; preds = %113
  %131 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 2
  %132 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %131, align 8
  %133 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %132, i64 0, i32 1
  %134 = load i64, i64* %133, align 8
  %135 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %132, i64 0, i32 2
  %136 = load i64, i64* %135, align 8
  %137 = sub i64 %134, %136
  %138 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %132, i64 0, i32 4, i32 0
  %139 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %132, i64 0, i32 4, i32 0, i32 0, i32 1
  %140 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %"class.std::__1::vector"* %138 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = sub i64 %141, %143
  %145 = ashr exact i64 %144, 4
  %146 = icmp eq i64 %137, %145
  br i1 %146, label %147, label %148

147:                                              ; preds = %130
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #6
  unreachable

148:                                              ; preds = %94, %113, %130
  %149 = phi %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* [ %98, %94 ], [ %115, %113 ], [ %132, %130 ]
  %150 = tail call i64 @_ZN2v88internal11interpreter20ConstantArrayBuilder18ConstantArraySlice8AllocateENS2_5EntryEm(%"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %149, i64* %96, i8 4, i64 1) #7
  %151 = trunc i64 %150 to i32
  %152 = load %"class.std::__1::__tree_node.1220"*, %"class.std::__1::__tree_node.1220"** %70, align 8
  %153 = icmp eq %"class.std::__1::__tree_node.1220"* %152, null
  br i1 %153, label %182, label %154

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %156

156:                                              ; preds = %178, %154
  %157 = phi %"class.std::__1::__tree_node.1220"* [ %181, %178 ], [ %152, %154 ]
  %158 = phi %"class.std::__1::__tree_node_base"** [ %180, %178 ], [ %155, %154 ]
  %159 = getelementptr inbounds %"class.std::__1::__tree_node.1220", %"class.std::__1::__tree_node.1220"* %157, i64 0, i32 2, i32 0, i32 0
  %160 = load double, double* %159, align 8
  %161 = fcmp ogt double %160, %1
  br i1 %161, label %162, label %168

162:                                              ; preds = %156
  %163 = getelementptr inbounds %"class.std::__1::__tree_node.1220", %"class.std::__1::__tree_node.1220"* %157, i64 0, i32 0, i32 0, i32 0
  %164 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %163, align 8
  %165 = icmp eq %"class.std::__1::__tree_node_base"* %164, null
  br i1 %165, label %166, label %178

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"class.std::__1::__tree_node.1220", %"class.std::__1::__tree_node.1220"* %157, i64 0, i32 0, i32 0
  br label %184

168:                                              ; preds = %156
  %169 = fcmp olt double %160, %1
  br i1 %169, label %170, label %176

170:                                              ; preds = %168
  %171 = getelementptr inbounds %"class.std::__1::__tree_node.1220", %"class.std::__1::__tree_node.1220"* %157, i64 0, i32 0, i32 1
  %172 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %171, align 8
  %173 = icmp eq %"class.std::__1::__tree_node_base"* %172, null
  br i1 %173, label %174, label %178

174:                                              ; preds = %170
  %175 = getelementptr inbounds %"class.std::__1::__tree_node.1220", %"class.std::__1::__tree_node.1220"* %157, i64 0, i32 0, i32 0
  br label %184

176:                                              ; preds = %168
  %177 = getelementptr inbounds %"class.std::__1::__tree_node.1220", %"class.std::__1::__tree_node.1220"* %157, i64 0, i32 0, i32 0
  br label %184

178:                                              ; preds = %170, %162
  %179 = phi %"class.std::__1::__tree_node_base"* [ %164, %162 ], [ %172, %170 ]
  %180 = phi %"class.std::__1::__tree_node_base"** [ %163, %162 ], [ %171, %170 ]
  %181 = bitcast %"class.std::__1::__tree_node_base"* %179 to %"class.std::__1::__tree_node.1220"*
  br label %156

182:                                              ; preds = %148
  %183 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %69, i64 0, i32 0
  br label %184

184:                                              ; preds = %182, %176, %174, %166
  %185 = phi %"class.std::__1::__tree_end_node"* [ %69, %182 ], [ %167, %166 ], [ %175, %174 ], [ %177, %176 ]
  %186 = phi %"class.std::__1::__tree_node_base"** [ %183, %182 ], [ %163, %166 ], [ %171, %174 ], [ %158, %176 ]
  %187 = bitcast %"class.std::__1::__tree_node_base"** %186 to %"class.std::__1::__tree_node.1220"**
  %188 = load %"class.std::__1::__tree_node.1220"*, %"class.std::__1::__tree_node.1220"** %187, align 8
  %189 = icmp eq %"class.std::__1::__tree_node.1220"* %188, null
  br i1 %189, label %190, label %227

190:                                              ; preds = %184
  %191 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %192 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %191, align 8, !noalias !9
  %193 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %192, i64 0, i32 2
  %194 = load i64, i64* %193, align 8, !noalias !9
  %195 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %192, i64 0, i32 3
  %196 = load i64, i64* %195, align 8, !noalias !9
  %197 = sub i64 %196, %194
  %198 = icmp ult i64 %197, 48
  br i1 %198, label %199, label %201, !prof !2

199:                                              ; preds = %190
  %200 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %192, i64 48) #7, !noalias !9
  br label %203

201:                                              ; preds = %190
  %202 = add i64 %194, 48
  store i64 %202, i64* %193, align 8, !noalias !9
  br label %203

203:                                              ; preds = %201, %199
  %204 = phi i64 [ %200, %199 ], [ %194, %201 ]
  %205 = inttoptr i64 %204 to %"class.std::__1::__tree_node.1220"*
  %206 = getelementptr inbounds %"class.std::__1::__tree_node.1220", %"class.std::__1::__tree_node.1220"* %205, i64 0, i32 2, i32 0, i32 0
  store double %1, double* %206, align 8, !noalias !9
  %207 = getelementptr inbounds %"class.std::__1::__tree_node.1220", %"class.std::__1::__tree_node.1220"* %205, i64 0, i32 2, i32 0, i32 1
  store i32 0, i32* %207, align 8, !noalias !9
  %208 = inttoptr i64 %204 to %"class.std::__1::__tree_node_base"*
  %209 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %208, i64 0, i32 2
  %210 = inttoptr i64 %204 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %210, i8 0, i64 16, i1 false) #7
  store %"class.std::__1::__tree_end_node"* %185, %"class.std::__1::__tree_end_node"** %209, align 8
  store %"class.std::__1::__tree_node_base"* %208, %"class.std::__1::__tree_node_base"** %186, align 8
  %211 = getelementptr inbounds %"class.std::__1::map.44", %"class.std::__1::map.44"* %68, i64 0, i32 0, i32 0
  %212 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %211, align 8
  %213 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %212, i64 0, i32 0
  %214 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %213, align 8
  %215 = icmp eq %"class.std::__1::__tree_node_base"* %214, null
  br i1 %215, label %220, label %216

216:                                              ; preds = %203
  %217 = ptrtoint %"class.std::__1::__tree_node_base"* %214 to i64
  %218 = bitcast %"class.std::__1::map.44"* %68 to i64*
  store i64 %217, i64* %218, align 8
  %219 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  br label %220

220:                                              ; preds = %216, %203
  %221 = phi %"class.std::__1::__tree_node_base"* [ %208, %203 ], [ %219, %216 ]
  %222 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %223 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %222, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %223, %"class.std::__1::__tree_node_base"* %221) #7
  %224 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %225 = load i64, i64* %224, align 8
  %226 = add i64 %225, 1
  store i64 %226, i64* %224, align 8
  br label %227

227:                                              ; preds = %184, %220
  %228 = phi %"class.std::__1::__tree_node.1220"* [ %205, %220 ], [ %188, %184 ]
  %229 = getelementptr inbounds %"class.std::__1::__tree_node.1220", %"class.std::__1::__tree_node.1220"* %228, i64 0, i32 2, i32 0, i32 1
  store i32 %151, i32* %229, align 4
  br label %234

230:                                              ; preds = %89
  %231 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 5
  %232 = bitcast %"class.std::__1::__tree_end_node"* %231 to i32*
  %233 = load i32, i32* %232, align 8
  br label %234

234:                                              ; preds = %230, %227
  %235 = phi i32 [ %151, %227 ], [ %233, %230 ]
  %236 = zext i32 %235 to i64
  br label %237

237:                                              ; preds = %234, %64
  %238 = phi i64 [ %66, %64 ], [ %236, %234 ]
  ret i64 %238
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal11interpreter20ConstantArrayBuilder9InsertNaNEv(%"class.v8::internal::interpreter::ConstantArrayBuilder"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 12
  %3 = load i32, i32* %2, align 4
  %4 = icmp slt i32 %3, 0
  br i1 %4, label %5, label %61

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  %7 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %6, align 8
  %8 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %7, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %7, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %7, i64 0, i32 4, i32 0
  %14 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %7, i64 0, i32 4, i32 0, i32 0, i32 1
  %15 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 4
  %21 = icmp eq i64 %12, %20
  br i1 %21, label %22, label %57

22:                                               ; preds = %5
  %23 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 1
  %24 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %23, align 8
  %25 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %24, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %24, i64 0, i32 2
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %26, %28
  %30 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %24, i64 0, i32 4, i32 0
  %31 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %24, i64 0, i32 4, i32 0, i32 0, i32 1
  %32 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.std::__1::vector"* %30 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %33, %35
  %37 = ashr exact i64 %36, 4
  %38 = icmp eq i64 %29, %37
  br i1 %38, label %39, label %57

39:                                               ; preds = %22
  %40 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 2
  %41 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %40, align 8
  %42 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 2
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 4, i32 0
  %48 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 4, i32 0, i32 0, i32 1
  %49 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.std::__1::vector"* %47 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %50, %52
  %54 = ashr exact i64 %53, 4
  %55 = icmp eq i64 %46, %54
  br i1 %55, label %56, label %57

56:                                               ; preds = %39
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #6
  unreachable

57:                                               ; preds = %5, %22, %39
  %58 = phi %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* [ %7, %5 ], [ %24, %22 ], [ %41, %39 ]
  %59 = tail call i64 @_ZN2v88internal11interpreter20ConstantArrayBuilder18ConstantArraySlice8AllocateENS2_5EntryEm(%"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %58, i64* undef, i8 16, i64 1) #7
  %60 = trunc i64 %59 to i32
  store i32 %60, i32* %2, align 4
  br label %61

61:                                               ; preds = %57, %1
  %62 = phi i32 [ %60, %57 ], [ %3, %1 ]
  %63 = sext i32 %62 to i64
  ret i64 %63
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal11interpreter20ConstantArrayBuilder13AllocateIndexENS2_5EntryE(%"class.v8::internal::interpreter::ConstantArrayBuilder"* nocapture readonly, i64*, i8) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  %5 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %4, align 8
  %6 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %5, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %5, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %5, i64 0, i32 4, i32 0
  %12 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %5, i64 0, i32 4, i32 0, i32 0, i32 1
  %13 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = ashr exact i64 %17, 4
  %19 = icmp eq i64 %10, %18
  br i1 %19, label %20, label %55

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 1
  %22 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %21, align 8
  %23 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %22, i64 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %22, i64 0, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %24, %26
  %28 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %22, i64 0, i32 4, i32 0
  %29 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %22, i64 0, i32 4, i32 0, i32 0, i32 1
  %30 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector"* %28 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 4
  %36 = icmp eq i64 %27, %35
  br i1 %36, label %37, label %55

37:                                               ; preds = %20
  %38 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 2
  %39 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %38, align 8
  %40 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %39, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %39, i64 0, i32 2
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %41, %43
  %45 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %39, i64 0, i32 4, i32 0
  %46 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %39, i64 0, i32 4, i32 0, i32 0, i32 1
  %47 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.std::__1::vector"* %45 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %48, %50
  %52 = ashr exact i64 %51, 4
  %53 = icmp eq i64 %44, %52
  br i1 %53, label %54, label %55

54:                                               ; preds = %37
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #6
  unreachable

55:                                               ; preds = %3, %20, %37
  %56 = phi %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* [ %5, %3 ], [ %22, %20 ], [ %39, %37 ]
  %57 = tail call i64 @_ZN2v88internal11interpreter20ConstantArrayBuilder18ConstantArraySlice8AllocateENS2_5EntryEm(%"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %56, i64* %1, i8 %2, i64 1) #7
  %58 = trunc i64 %57 to i32
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal11interpreter20ConstantArrayBuilder6InsertEPKNS0_12AstRawStringE(%"class.v8::internal::interpreter::ConstantArrayBuilder"*, %"class.v8::internal::AstRawString"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 1
  %4 = ptrtoint %"class.v8::internal::AstRawString"* %1 to i64
  %5 = getelementptr inbounds %"class.v8::internal::AstRawString", %"class.v8::internal::AstRawString"* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = lshr i32 %6, 2
  %8 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 1, i32 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, -1
  %11 = and i32 %10, %7
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 1, i32 0, i32 1
  %14 = load %"struct.v8::base::TemplateHashMapEntry.29"*, %"struct.v8::base::TemplateHashMapEntry.29"** %13, align 8
  %15 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %14, i64 %12
  %16 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %14, i64 %12, i32 3
  %17 = load i8, i8* %16, align 8, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %34, label %19

19:                                               ; preds = %2
  %20 = zext i32 %10 to i64
  br label %21

21:                                               ; preds = %27, %19
  %22 = phi %"struct.v8::base::TemplateHashMapEntry.29"* [ %15, %19 ], [ %30, %27 ]
  %23 = phi i64 [ %12, %19 ], [ %29, %27 ]
  %24 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %22, i64 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, %4
  br i1 %26, label %34, label %27

27:                                               ; preds = %21
  %28 = add nuw nsw i64 %23, 1
  %29 = and i64 %28, %20
  %30 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %14, i64 %29
  %31 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %14, i64 %29, i32 3
  %32 = load i8, i8* %31, align 8, !range !3
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %21

34:                                               ; preds = %27, %21, %2
  %35 = phi %"struct.v8::base::TemplateHashMapEntry.29"* [ %15, %2 ], [ %22, %21 ], [ %30, %27 ]
  %36 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %35, i64 0, i32 3
  %37 = load i8, i8* %36, align 8, !range !3
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %131

39:                                               ; preds = %34
  %40 = bitcast %"class.v8::internal::AstRawString"* %1 to i64*
  %41 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  %42 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %41, align 8
  %43 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %42, i64 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %42, i64 0, i32 2
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %44, %46
  %48 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %42, i64 0, i32 4, i32 0
  %49 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %42, i64 0, i32 4, i32 0, i32 0, i32 1
  %50 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.std::__1::vector"* %48 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = sub i64 %51, %53
  %55 = ashr exact i64 %54, 4
  %56 = icmp eq i64 %47, %55
  br i1 %56, label %57, label %92

57:                                               ; preds = %39
  %58 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 1
  %59 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %58, align 8
  %60 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %59, i64 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %59, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = sub i64 %61, %63
  %65 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %59, i64 0, i32 4, i32 0
  %66 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %59, i64 0, i32 4, i32 0, i32 0, i32 1
  %67 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"class.std::__1::vector"* %65 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = sub i64 %68, %70
  %72 = ashr exact i64 %71, 4
  %73 = icmp eq i64 %64, %72
  br i1 %73, label %74, label %92

74:                                               ; preds = %57
  %75 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 2
  %76 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %75, align 8
  %77 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %76, i64 0, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %76, i64 0, i32 2
  %80 = load i64, i64* %79, align 8
  %81 = sub i64 %78, %80
  %82 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %76, i64 0, i32 4, i32 0
  %83 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %76, i64 0, i32 4, i32 0, i32 0, i32 1
  %84 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.std::__1::vector"* %82 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = sub i64 %85, %87
  %89 = ashr exact i64 %88, 4
  %90 = icmp eq i64 %81, %89
  br i1 %90, label %91, label %92

91:                                               ; preds = %74
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #6
  unreachable

92:                                               ; preds = %74, %57, %39
  %93 = phi %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* [ %42, %39 ], [ %59, %57 ], [ %76, %74 ]
  %94 = tail call i64 @_ZN2v88internal11interpreter20ConstantArrayBuilder18ConstantArraySlice8AllocateENS2_5EntryEm(%"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %93, i64* %40, i8 3, i64 1) #7
  %95 = trunc i64 %94 to i32
  %96 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %35, i64 0, i32 0
  store i64 %4, i64* %96, align 8
  %97 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %35, i64 0, i32 1
  store i32 %95, i32* %97, align 8
  %98 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %35, i64 0, i32 2
  store i32 %7, i32* %98, align 4
  store i8 1, i8* %36, align 8
  %99 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 1, i32 0, i32 3
  %100 = load i32, i32* %99, align 4
  %101 = add i32 %100, 1
  store i32 %101, i32* %99, align 4
  %102 = lshr i32 %101, 2
  %103 = add i32 %102, %101
  %104 = load i32, i32* %8, align 8
  %105 = icmp ult i32 %103, %104
  br i1 %105, label %131, label %106

106:                                              ; preds = %92
  tail call void @_ZN2v84base19TemplateHashMapImplIljNS0_18KeyEqualityMatcherIlEENS_8internal20ZoneAllocationPolicyEE6ResizeEv(%"class.v8::base::TemplateHashMapImpl.27"* %3) #7
  %107 = load i32, i32* %8, align 8
  %108 = add i32 %107, -1
  %109 = and i32 %108, %7
  %110 = zext i32 %109 to i64
  %111 = load %"struct.v8::base::TemplateHashMapEntry.29"*, %"struct.v8::base::TemplateHashMapEntry.29"** %13, align 8
  %112 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %111, i64 %110
  %113 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %111, i64 %110, i32 3
  %114 = load i8, i8* %113, align 8, !range !3
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %131, label %116

116:                                              ; preds = %106
  %117 = zext i32 %108 to i64
  br label %118

118:                                              ; preds = %124, %116
  %119 = phi %"struct.v8::base::TemplateHashMapEntry.29"* [ %112, %116 ], [ %127, %124 ]
  %120 = phi i64 [ %110, %116 ], [ %126, %124 ]
  %121 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %119, i64 0, i32 0
  %122 = load i64, i64* %121, align 8
  %123 = icmp eq i64 %122, %4
  br i1 %123, label %131, label %124

124:                                              ; preds = %118
  %125 = add nuw nsw i64 %120, 1
  %126 = and i64 %125, %117
  %127 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %111, i64 %126
  %128 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %111, i64 %126, i32 3
  %129 = load i8, i8* %128, align 8, !range !3
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %131, label %118

131:                                              ; preds = %118, %124, %34, %92, %106
  %132 = phi %"struct.v8::base::TemplateHashMapEntry.29"* [ %35, %34 ], [ %35, %92 ], [ %112, %106 ], [ %127, %124 ], [ %119, %118 ]
  %133 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %132, i64 0, i32 1
  %134 = load i32, i32* %133, align 8
  %135 = zext i32 %134 to i64
  ret i64 %135
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal11interpreter20ConstantArrayBuilder6InsertENS0_9AstBigIntE(%"class.v8::internal::interpreter::ConstantArrayBuilder"*, i8*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 1
  %4 = ptrtoint i8* %1 to i64
  %5 = tail call i64 @_ZN2v84base10hash_valueEm(i64 %4) #7
  %6 = trunc i64 %5 to i32
  %7 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 1, i32 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = and i32 %9, %6
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 1, i32 0, i32 1
  %13 = load %"struct.v8::base::TemplateHashMapEntry.29"*, %"struct.v8::base::TemplateHashMapEntry.29"** %12, align 8
  %14 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %13, i64 %11
  %15 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %13, i64 %11, i32 3
  %16 = load i8, i8* %15, align 8, !range !3
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %33, label %18

18:                                               ; preds = %2
  %19 = zext i32 %9 to i64
  br label %20

20:                                               ; preds = %26, %18
  %21 = phi %"struct.v8::base::TemplateHashMapEntry.29"* [ %14, %18 ], [ %29, %26 ]
  %22 = phi i64 [ %11, %18 ], [ %28, %26 ]
  %23 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %21, i64 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, %4
  br i1 %25, label %33, label %26

26:                                               ; preds = %20
  %27 = add nuw nsw i64 %22, 1
  %28 = and i64 %27, %19
  %29 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %13, i64 %28
  %30 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %13, i64 %28, i32 3
  %31 = load i8, i8* %30, align 8, !range !3
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %20

33:                                               ; preds = %26, %20, %2
  %34 = phi %"struct.v8::base::TemplateHashMapEntry.29"* [ %14, %2 ], [ %21, %20 ], [ %29, %26 ]
  %35 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %34, i64 0, i32 3
  %36 = load i8, i8* %35, align 8, !range !3
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %130

38:                                               ; preds = %33
  %39 = bitcast i8* %1 to i64*
  %40 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  %41 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %40, align 8
  %42 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 2
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 4, i32 0
  %48 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 4, i32 0, i32 0, i32 1
  %49 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.std::__1::vector"* %47 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %50, %52
  %54 = ashr exact i64 %53, 4
  %55 = icmp eq i64 %46, %54
  br i1 %55, label %56, label %91

56:                                               ; preds = %38
  %57 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 1
  %58 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %57, align 8
  %59 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %58, i64 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %58, i64 0, i32 2
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %60, %62
  %64 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %58, i64 0, i32 4, i32 0
  %65 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %58, i64 0, i32 4, i32 0, i32 0, i32 1
  %66 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.std::__1::vector"* %64 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = sub i64 %67, %69
  %71 = ashr exact i64 %70, 4
  %72 = icmp eq i64 %63, %71
  br i1 %72, label %73, label %91

73:                                               ; preds = %56
  %74 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 2
  %75 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %74, align 8
  %76 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %75, i64 0, i32 1
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %75, i64 0, i32 2
  %79 = load i64, i64* %78, align 8
  %80 = sub i64 %77, %79
  %81 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %75, i64 0, i32 4, i32 0
  %82 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %75, i64 0, i32 4, i32 0, i32 0, i32 1
  %83 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"class.std::__1::vector"* %81 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = sub i64 %84, %86
  %88 = ashr exact i64 %87, 4
  %89 = icmp eq i64 %80, %88
  br i1 %89, label %90, label %91

90:                                               ; preds = %73
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #6
  unreachable

91:                                               ; preds = %73, %56, %38
  %92 = phi %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* [ %41, %38 ], [ %58, %56 ], [ %75, %73 ]
  %93 = tail call i64 @_ZN2v88internal11interpreter20ConstantArrayBuilder18ConstantArraySlice8AllocateENS2_5EntryEm(%"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %92, i64* %39, i8 5, i64 1) #7
  %94 = trunc i64 %93 to i32
  %95 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %34, i64 0, i32 0
  store i64 %4, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %34, i64 0, i32 1
  store i32 %94, i32* %96, align 8
  %97 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %34, i64 0, i32 2
  store i32 %6, i32* %97, align 4
  store i8 1, i8* %35, align 8
  %98 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 1, i32 0, i32 3
  %99 = load i32, i32* %98, align 4
  %100 = add i32 %99, 1
  store i32 %100, i32* %98, align 4
  %101 = lshr i32 %100, 2
  %102 = add i32 %101, %100
  %103 = load i32, i32* %7, align 8
  %104 = icmp ult i32 %102, %103
  br i1 %104, label %130, label %105

105:                                              ; preds = %91
  tail call void @_ZN2v84base19TemplateHashMapImplIljNS0_18KeyEqualityMatcherIlEENS_8internal20ZoneAllocationPolicyEE6ResizeEv(%"class.v8::base::TemplateHashMapImpl.27"* %3) #7
  %106 = load i32, i32* %7, align 8
  %107 = add i32 %106, -1
  %108 = and i32 %107, %6
  %109 = zext i32 %108 to i64
  %110 = load %"struct.v8::base::TemplateHashMapEntry.29"*, %"struct.v8::base::TemplateHashMapEntry.29"** %12, align 8
  %111 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %110, i64 %109
  %112 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %110, i64 %109, i32 3
  %113 = load i8, i8* %112, align 8, !range !3
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %130, label %115

115:                                              ; preds = %105
  %116 = zext i32 %107 to i64
  br label %117

117:                                              ; preds = %123, %115
  %118 = phi %"struct.v8::base::TemplateHashMapEntry.29"* [ %111, %115 ], [ %126, %123 ]
  %119 = phi i64 [ %109, %115 ], [ %125, %123 ]
  %120 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %118, i64 0, i32 0
  %121 = load i64, i64* %120, align 8
  %122 = icmp eq i64 %121, %4
  br i1 %122, label %130, label %123

123:                                              ; preds = %117
  %124 = add nuw nsw i64 %119, 1
  %125 = and i64 %124, %116
  %126 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %110, i64 %125
  %127 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %110, i64 %125, i32 3
  %128 = load i8, i8* %127, align 8, !range !3
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %130, label %117

130:                                              ; preds = %117, %123, %33, %91, %105
  %131 = phi %"struct.v8::base::TemplateHashMapEntry.29"* [ %34, %33 ], [ %34, %91 ], [ %111, %105 ], [ %126, %123 ], [ %118, %117 ]
  %132 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %131, i64 0, i32 1
  %133 = load i32, i32* %132, align 8
  %134 = zext i32 %133 to i64
  ret i64 %134
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal11interpreter20ConstantArrayBuilder6InsertEPKNS0_5ScopeE(%"class.v8::internal::interpreter::ConstantArrayBuilder"*, %"class.v8::internal::Scope"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.v8::internal::Scope"* %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 1
  %5 = tail call i64 @_ZN2v84base10hash_valueEm(i64 %3) #7
  %6 = trunc i64 %5 to i32
  %7 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 1, i32 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = and i32 %9, %6
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 1, i32 0, i32 1
  %13 = load %"struct.v8::base::TemplateHashMapEntry.29"*, %"struct.v8::base::TemplateHashMapEntry.29"** %12, align 8
  %14 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %13, i64 %11
  %15 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %13, i64 %11, i32 3
  %16 = load i8, i8* %15, align 8, !range !3
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %33, label %18

18:                                               ; preds = %2
  %19 = zext i32 %9 to i64
  br label %20

20:                                               ; preds = %26, %18
  %21 = phi %"struct.v8::base::TemplateHashMapEntry.29"* [ %14, %18 ], [ %29, %26 ]
  %22 = phi i64 [ %11, %18 ], [ %28, %26 ]
  %23 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %21, i64 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, %3
  br i1 %25, label %33, label %26

26:                                               ; preds = %20
  %27 = add nuw nsw i64 %22, 1
  %28 = and i64 %27, %19
  %29 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %13, i64 %28
  %30 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %13, i64 %28, i32 3
  %31 = load i8, i8* %30, align 8, !range !3
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %20

33:                                               ; preds = %26, %20, %2
  %34 = phi %"struct.v8::base::TemplateHashMapEntry.29"* [ %14, %2 ], [ %21, %20 ], [ %29, %26 ]
  %35 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %34, i64 0, i32 3
  %36 = load i8, i8* %35, align 8, !range !3
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %130

38:                                               ; preds = %33
  %39 = bitcast %"class.v8::internal::Scope"* %1 to i64*
  %40 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  %41 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %40, align 8
  %42 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 2
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 4, i32 0
  %48 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 4, i32 0, i32 0, i32 1
  %49 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.std::__1::vector"* %47 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %50, %52
  %54 = ashr exact i64 %53, 4
  %55 = icmp eq i64 %46, %54
  br i1 %55, label %56, label %91

56:                                               ; preds = %38
  %57 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 1
  %58 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %57, align 8
  %59 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %58, i64 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %58, i64 0, i32 2
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %60, %62
  %64 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %58, i64 0, i32 4, i32 0
  %65 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %58, i64 0, i32 4, i32 0, i32 0, i32 1
  %66 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.std::__1::vector"* %64 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = sub i64 %67, %69
  %71 = ashr exact i64 %70, 4
  %72 = icmp eq i64 %63, %71
  br i1 %72, label %73, label %91

73:                                               ; preds = %56
  %74 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 2
  %75 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %74, align 8
  %76 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %75, i64 0, i32 1
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %75, i64 0, i32 2
  %79 = load i64, i64* %78, align 8
  %80 = sub i64 %77, %79
  %81 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %75, i64 0, i32 4, i32 0
  %82 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %75, i64 0, i32 4, i32 0, i32 0, i32 1
  %83 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"class.std::__1::vector"* %81 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = sub i64 %84, %86
  %88 = ashr exact i64 %87, 4
  %89 = icmp eq i64 %80, %88
  br i1 %89, label %90, label %91

90:                                               ; preds = %73
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #6
  unreachable

91:                                               ; preds = %73, %56, %38
  %92 = phi %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* [ %41, %38 ], [ %58, %56 ], [ %75, %73 ]
  %93 = tail call i64 @_ZN2v88internal11interpreter20ConstantArrayBuilder18ConstantArraySlice8AllocateENS2_5EntryEm(%"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %92, i64* %39, i8 6, i64 1) #7
  %94 = trunc i64 %93 to i32
  %95 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %34, i64 0, i32 0
  store i64 %3, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %34, i64 0, i32 1
  store i32 %94, i32* %96, align 8
  %97 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %34, i64 0, i32 2
  store i32 %6, i32* %97, align 4
  store i8 1, i8* %35, align 8
  %98 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 1, i32 0, i32 3
  %99 = load i32, i32* %98, align 4
  %100 = add i32 %99, 1
  store i32 %100, i32* %98, align 4
  %101 = lshr i32 %100, 2
  %102 = add i32 %101, %100
  %103 = load i32, i32* %7, align 8
  %104 = icmp ult i32 %102, %103
  br i1 %104, label %130, label %105

105:                                              ; preds = %91
  tail call void @_ZN2v84base19TemplateHashMapImplIljNS0_18KeyEqualityMatcherIlEENS_8internal20ZoneAllocationPolicyEE6ResizeEv(%"class.v8::base::TemplateHashMapImpl.27"* %4) #7
  %106 = load i32, i32* %7, align 8
  %107 = add i32 %106, -1
  %108 = and i32 %107, %6
  %109 = zext i32 %108 to i64
  %110 = load %"struct.v8::base::TemplateHashMapEntry.29"*, %"struct.v8::base::TemplateHashMapEntry.29"** %12, align 8
  %111 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %110, i64 %109
  %112 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %110, i64 %109, i32 3
  %113 = load i8, i8* %112, align 8, !range !3
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %130, label %115

115:                                              ; preds = %105
  %116 = zext i32 %107 to i64
  br label %117

117:                                              ; preds = %123, %115
  %118 = phi %"struct.v8::base::TemplateHashMapEntry.29"* [ %111, %115 ], [ %126, %123 ]
  %119 = phi i64 [ %109, %115 ], [ %125, %123 ]
  %120 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %118, i64 0, i32 0
  %121 = load i64, i64* %120, align 8
  %122 = icmp eq i64 %121, %3
  br i1 %122, label %130, label %123

123:                                              ; preds = %117
  %124 = add nuw nsw i64 %119, 1
  %125 = and i64 %124, %116
  %126 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %110, i64 %125
  %127 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %110, i64 %125, i32 3
  %128 = load i8, i8* %127, align 8, !range !3
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %130, label %117

130:                                              ; preds = %117, %123, %33, %91, %105
  %131 = phi %"struct.v8::base::TemplateHashMapEntry.29"* [ %34, %33 ], [ %34, %91 ], [ %111, %105 ], [ %126, %123 ], [ %118, %117 ]
  %132 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %131, i64 0, i32 1
  %133 = load i32, i32* %132, align 8
  %134 = zext i32 %133 to i64
  ret i64 %134
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal11interpreter20ConstantArrayBuilder25InsertAsyncIteratorSymbolEv(%"class.v8::internal::interpreter::ConstantArrayBuilder"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 8
  %4 = icmp slt i32 %3, 0
  br i1 %4, label %5, label %61

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  %7 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %6, align 8
  %8 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %7, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %7, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %7, i64 0, i32 4, i32 0
  %14 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %7, i64 0, i32 4, i32 0, i32 0, i32 1
  %15 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 4
  %21 = icmp eq i64 %12, %20
  br i1 %21, label %22, label %57

22:                                               ; preds = %5
  %23 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 1
  %24 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %23, align 8
  %25 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %24, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %24, i64 0, i32 2
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %26, %28
  %30 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %24, i64 0, i32 4, i32 0
  %31 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %24, i64 0, i32 4, i32 0, i32 0, i32 1
  %32 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.std::__1::vector"* %30 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %33, %35
  %37 = ashr exact i64 %36, 4
  %38 = icmp eq i64 %29, %37
  br i1 %38, label %39, label %57

39:                                               ; preds = %22
  %40 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 2
  %41 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %40, align 8
  %42 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 2
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 4, i32 0
  %48 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 4, i32 0, i32 0, i32 1
  %49 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.std::__1::vector"* %47 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %50, %52
  %54 = ashr exact i64 %53, 4
  %55 = icmp eq i64 %46, %54
  br i1 %55, label %56, label %57

56:                                               ; preds = %39
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #6
  unreachable

57:                                               ; preds = %5, %22, %39
  %58 = phi %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* [ %7, %5 ], [ %24, %22 ], [ %41, %39 ]
  %59 = tail call i64 @_ZN2v88internal11interpreter20ConstantArrayBuilder18ConstantArraySlice8AllocateENS2_5EntryEm(%"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %58, i64* undef, i8 9, i64 1) #7
  %60 = trunc i64 %59 to i32
  store i32 %60, i32* %2, align 8
  br label %61

61:                                               ; preds = %57, %1
  %62 = phi i32 [ %60, %57 ], [ %3, %1 ]
  %63 = sext i32 %62 to i64
  ret i64 %63
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal11interpreter20ConstantArrayBuilder23InsertClassFieldsSymbolEv(%"class.v8::internal::interpreter::ConstantArrayBuilder"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 4
  %4 = icmp slt i32 %3, 0
  br i1 %4, label %5, label %61

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  %7 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %6, align 8
  %8 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %7, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %7, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %7, i64 0, i32 4, i32 0
  %14 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %7, i64 0, i32 4, i32 0, i32 0, i32 1
  %15 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 4
  %21 = icmp eq i64 %12, %20
  br i1 %21, label %22, label %57

22:                                               ; preds = %5
  %23 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 1
  %24 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %23, align 8
  %25 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %24, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %24, i64 0, i32 2
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %26, %28
  %30 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %24, i64 0, i32 4, i32 0
  %31 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %24, i64 0, i32 4, i32 0, i32 0, i32 1
  %32 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.std::__1::vector"* %30 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %33, %35
  %37 = ashr exact i64 %36, 4
  %38 = icmp eq i64 %29, %37
  br i1 %38, label %39, label %57

39:                                               ; preds = %22
  %40 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 2
  %41 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %40, align 8
  %42 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 2
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 4, i32 0
  %48 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 4, i32 0, i32 0, i32 1
  %49 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.std::__1::vector"* %47 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %50, %52
  %54 = ashr exact i64 %53, 4
  %55 = icmp eq i64 %46, %54
  br i1 %55, label %56, label %57

56:                                               ; preds = %39
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #6
  unreachable

57:                                               ; preds = %5, %22, %39
  %58 = phi %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* [ %7, %5 ], [ %24, %22 ], [ %41, %39 ]
  %59 = tail call i64 @_ZN2v88internal11interpreter20ConstantArrayBuilder18ConstantArraySlice8AllocateENS2_5EntryEm(%"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %58, i64* undef, i8 10, i64 1) #7
  %60 = trunc i64 %59 to i32
  store i32 %60, i32* %2, align 4
  br label %61

61:                                               ; preds = %57, %1
  %62 = phi i32 [ %60, %57 ], [ %3, %1 ]
  %63 = sext i32 %62 to i64
  ret i64 %63
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal11interpreter20ConstantArrayBuilder39InsertEmptyObjectBoilerplateDescriptionEv(%"class.v8::internal::interpreter::ConstantArrayBuilder"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 8
  %4 = icmp slt i32 %3, 0
  br i1 %4, label %5, label %61

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  %7 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %6, align 8
  %8 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %7, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %7, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %7, i64 0, i32 4, i32 0
  %14 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %7, i64 0, i32 4, i32 0, i32 0, i32 1
  %15 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 4
  %21 = icmp eq i64 %12, %20
  br i1 %21, label %22, label %57

22:                                               ; preds = %5
  %23 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 1
  %24 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %23, align 8
  %25 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %24, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %24, i64 0, i32 2
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %26, %28
  %30 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %24, i64 0, i32 4, i32 0
  %31 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %24, i64 0, i32 4, i32 0, i32 0, i32 1
  %32 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.std::__1::vector"* %30 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %33, %35
  %37 = ashr exact i64 %36, 4
  %38 = icmp eq i64 %29, %37
  br i1 %38, label %39, label %57

39:                                               ; preds = %22
  %40 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 2
  %41 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %40, align 8
  %42 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 2
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 4, i32 0
  %48 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 4, i32 0, i32 0, i32 1
  %49 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.std::__1::vector"* %47 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %50, %52
  %54 = ashr exact i64 %53, 4
  %55 = icmp eq i64 %46, %54
  br i1 %55, label %56, label %57

56:                                               ; preds = %39
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #6
  unreachable

57:                                               ; preds = %5, %22, %39
  %58 = phi %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* [ %7, %5 ], [ %24, %22 ], [ %41, %39 ]
  %59 = tail call i64 @_ZN2v88internal11interpreter20ConstantArrayBuilder18ConstantArraySlice8AllocateENS2_5EntryEm(%"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %58, i64* undef, i8 11, i64 1) #7
  %60 = trunc i64 %59 to i32
  store i32 %60, i32* %2, align 8
  br label %61

61:                                               ; preds = %57, %1
  %62 = phi i32 [ %60, %57 ], [ %3, %1 ]
  %63 = sext i32 %62 to i64
  ret i64 %63
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal11interpreter20ConstantArrayBuilder38InsertEmptyArrayBoilerplateDescriptionEv(%"class.v8::internal::interpreter::ConstantArrayBuilder"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 4
  %4 = icmp slt i32 %3, 0
  br i1 %4, label %5, label %61

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  %7 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %6, align 8
  %8 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %7, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %7, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %7, i64 0, i32 4, i32 0
  %14 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %7, i64 0, i32 4, i32 0, i32 0, i32 1
  %15 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 4
  %21 = icmp eq i64 %12, %20
  br i1 %21, label %22, label %57

22:                                               ; preds = %5
  %23 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 1
  %24 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %23, align 8
  %25 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %24, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %24, i64 0, i32 2
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %26, %28
  %30 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %24, i64 0, i32 4, i32 0
  %31 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %24, i64 0, i32 4, i32 0, i32 0, i32 1
  %32 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.std::__1::vector"* %30 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %33, %35
  %37 = ashr exact i64 %36, 4
  %38 = icmp eq i64 %29, %37
  br i1 %38, label %39, label %57

39:                                               ; preds = %22
  %40 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 2
  %41 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %40, align 8
  %42 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 2
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 4, i32 0
  %48 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 4, i32 0, i32 0, i32 1
  %49 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.std::__1::vector"* %47 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %50, %52
  %54 = ashr exact i64 %53, 4
  %55 = icmp eq i64 %46, %54
  br i1 %55, label %56, label %57

56:                                               ; preds = %39
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #6
  unreachable

57:                                               ; preds = %5, %22, %39
  %58 = phi %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* [ %7, %5 ], [ %24, %22 ], [ %41, %39 ]
  %59 = tail call i64 @_ZN2v88internal11interpreter20ConstantArrayBuilder18ConstantArraySlice8AllocateENS2_5EntryEm(%"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %58, i64* undef, i8 12, i64 1) #7
  %60 = trunc i64 %59 to i32
  store i32 %60, i32* %2, align 4
  br label %61

61:                                               ; preds = %57, %1
  %62 = phi i32 [ %60, %57 ], [ %3, %1 ]
  %63 = sext i32 %62 to i64
  ret i64 %63
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal11interpreter20ConstantArrayBuilder21InsertEmptyFixedArrayEv(%"class.v8::internal::interpreter::ConstantArrayBuilder"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 9
  %3 = load i32, i32* %2, align 8
  %4 = icmp slt i32 %3, 0
  br i1 %4, label %5, label %61

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  %7 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %6, align 8
  %8 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %7, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %7, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %7, i64 0, i32 4, i32 0
  %14 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %7, i64 0, i32 4, i32 0, i32 0, i32 1
  %15 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 4
  %21 = icmp eq i64 %12, %20
  br i1 %21, label %22, label %57

22:                                               ; preds = %5
  %23 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 1
  %24 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %23, align 8
  %25 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %24, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %24, i64 0, i32 2
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %26, %28
  %30 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %24, i64 0, i32 4, i32 0
  %31 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %24, i64 0, i32 4, i32 0, i32 0, i32 1
  %32 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.std::__1::vector"* %30 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %33, %35
  %37 = ashr exact i64 %36, 4
  %38 = icmp eq i64 %29, %37
  br i1 %38, label %39, label %57

39:                                               ; preds = %22
  %40 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 2
  %41 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %40, align 8
  %42 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 2
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 4, i32 0
  %48 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 4, i32 0, i32 0, i32 1
  %49 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.std::__1::vector"* %47 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %50, %52
  %54 = ashr exact i64 %53, 4
  %55 = icmp eq i64 %46, %54
  br i1 %55, label %56, label %57

56:                                               ; preds = %39
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #6
  unreachable

57:                                               ; preds = %5, %22, %39
  %58 = phi %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* [ %7, %5 ], [ %24, %22 ], [ %41, %39 ]
  %59 = tail call i64 @_ZN2v88internal11interpreter20ConstantArrayBuilder18ConstantArraySlice8AllocateENS2_5EntryEm(%"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %58, i64* undef, i8 13, i64 1) #7
  %60 = trunc i64 %59 to i32
  store i32 %60, i32* %2, align 8
  br label %61

61:                                               ; preds = %57, %1
  %62 = phi i32 [ %60, %57 ], [ %3, %1 ]
  %63 = sext i32 %62 to i64
  ret i64 %63
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal11interpreter20ConstantArrayBuilder20InsertIteratorSymbolEv(%"class.v8::internal::interpreter::ConstantArrayBuilder"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 10
  %3 = load i32, i32* %2, align 4
  %4 = icmp slt i32 %3, 0
  br i1 %4, label %5, label %61

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  %7 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %6, align 8
  %8 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %7, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %7, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %7, i64 0, i32 4, i32 0
  %14 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %7, i64 0, i32 4, i32 0, i32 0, i32 1
  %15 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 4
  %21 = icmp eq i64 %12, %20
  br i1 %21, label %22, label %57

22:                                               ; preds = %5
  %23 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 1
  %24 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %23, align 8
  %25 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %24, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %24, i64 0, i32 2
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %26, %28
  %30 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %24, i64 0, i32 4, i32 0
  %31 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %24, i64 0, i32 4, i32 0, i32 0, i32 1
  %32 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.std::__1::vector"* %30 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %33, %35
  %37 = ashr exact i64 %36, 4
  %38 = icmp eq i64 %29, %37
  br i1 %38, label %39, label %57

39:                                               ; preds = %22
  %40 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 2
  %41 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %40, align 8
  %42 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 2
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 4, i32 0
  %48 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 4, i32 0, i32 0, i32 1
  %49 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.std::__1::vector"* %47 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %50, %52
  %54 = ashr exact i64 %53, 4
  %55 = icmp eq i64 %46, %54
  br i1 %55, label %56, label %57

56:                                               ; preds = %39
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #6
  unreachable

57:                                               ; preds = %5, %22, %39
  %58 = phi %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* [ %7, %5 ], [ %24, %22 ], [ %41, %39 ]
  %59 = tail call i64 @_ZN2v88internal11interpreter20ConstantArrayBuilder18ConstantArraySlice8AllocateENS2_5EntryEm(%"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %58, i64* undef, i8 14, i64 1) #7
  %60 = trunc i64 %59 to i32
  store i32 %60, i32* %2, align 4
  br label %61

61:                                               ; preds = %57, %1
  %62 = phi i32 [ %60, %57 ], [ %3, %1 ]
  %63 = sext i32 %62 to i64
  ret i64 %63
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal11interpreter20ConstantArrayBuilder33InsertInterpreterTrampolineSymbolEv(%"class.v8::internal::interpreter::ConstantArrayBuilder"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 11
  %3 = load i32, i32* %2, align 8
  %4 = icmp slt i32 %3, 0
  br i1 %4, label %5, label %61

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  %7 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %6, align 8
  %8 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %7, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %7, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %7, i64 0, i32 4, i32 0
  %14 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %7, i64 0, i32 4, i32 0, i32 0, i32 1
  %15 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 4
  %21 = icmp eq i64 %12, %20
  br i1 %21, label %22, label %57

22:                                               ; preds = %5
  %23 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 1
  %24 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %23, align 8
  %25 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %24, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %24, i64 0, i32 2
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %26, %28
  %30 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %24, i64 0, i32 4, i32 0
  %31 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %24, i64 0, i32 4, i32 0, i32 0, i32 1
  %32 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.std::__1::vector"* %30 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %33, %35
  %37 = ashr exact i64 %36, 4
  %38 = icmp eq i64 %29, %37
  br i1 %38, label %39, label %57

39:                                               ; preds = %22
  %40 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 2
  %41 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %40, align 8
  %42 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 2
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 4, i32 0
  %48 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64 0, i32 4, i32 0, i32 0, i32 1
  %49 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.std::__1::vector"* %47 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %50, %52
  %54 = ashr exact i64 %53, 4
  %55 = icmp eq i64 %46, %54
  br i1 %55, label %56, label %57

56:                                               ; preds = %39
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #6
  unreachable

57:                                               ; preds = %5, %22, %39
  %58 = phi %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* [ %7, %5 ], [ %24, %22 ], [ %41, %39 ]
  %59 = tail call i64 @_ZN2v88internal11interpreter20ConstantArrayBuilder18ConstantArraySlice8AllocateENS2_5EntryEm(%"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %58, i64* undef, i8 15, i64 1) #7
  %60 = trunc i64 %59 to i32
  store i32 %60, i32* %2, align 8
  br label %61

61:                                               ; preds = %57, %1
  %62 = phi i32 [ %60, %57 ], [ %3, %1 ]
  %63 = sext i32 %62 to i64
  ret i64 %63
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal11interpreter20ConstantArrayBuilder18AllocateIndexArrayENS2_5EntryEm(%"class.v8::internal::interpreter::ConstantArrayBuilder"* nocapture readonly, i64*, i8, i64) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  %6 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %5, align 8
  %7 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %6, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %6, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %6, i64 0, i32 4, i32 0
  %13 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %6, i64 0, i32 4, i32 0, i32 0, i32 1
  %14 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = ashr exact i64 %18, 4
  %20 = sub i64 %11, %19
  %21 = icmp ult i64 %20, %3
  br i1 %21, label %22, label %40

22:                                               ; preds = %4
  %23 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 1
  %24 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %23, align 8
  %25 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %24, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %24, i64 0, i32 2
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %26, %28
  %30 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %24, i64 0, i32 4, i32 0
  %31 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %24, i64 0, i32 4, i32 0, i32 0, i32 1
  %32 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.std::__1::vector"* %30 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %33, %35
  %37 = ashr exact i64 %36, 4
  %38 = sub i64 %29, %37
  %39 = icmp ult i64 %38, %3
  br i1 %39, label %44, label %40

40:                                               ; preds = %44, %22, %4
  %41 = phi %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* [ %6, %4 ], [ %24, %22 ], [ %46, %44 ]
  %42 = tail call i64 @_ZN2v88internal11interpreter20ConstantArrayBuilder18ConstantArraySlice8AllocateENS2_5EntryEm(%"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %41, i64* %1, i8 %2, i64 %3)
  %43 = trunc i64 %42 to i32
  ret i32 %43

44:                                               ; preds = %22
  %45 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 2
  %46 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %45, align 8
  %47 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %46, i64 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %46, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %48, %50
  %52 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %46, i64 0, i32 4, i32 0
  %53 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %46, i64 0, i32 4, i32 0, i32 0, i32 1
  %54 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.std::__1::vector"* %52 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = sub i64 %55, %57
  %59 = ashr exact i64 %58, 4
  %60 = sub i64 %51, %59
  %61 = icmp ult i64 %60, %3
  br i1 %61, label %62, label %40

62:                                               ; preds = %44
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #6
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* @_ZNK2v88internal11interpreter20ConstantArrayBuilder18OperandSizeToSliceENS1_11OperandSizeE(%"class.v8::internal::interpreter::ConstantArrayBuilder"* nocapture readonly, i8 zeroext) local_unnamed_addr #0 align 2 {
  switch i8 %1, label %13 [
    i8 0, label %3
    i8 1, label %4
    i8 2, label %6
    i8 4, label %8
  ]

3:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #6
  unreachable

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  br label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 1
  br label %10

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 2
  br label %10

10:                                               ; preds = %4, %6, %8
  %11 = phi %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** [ %9, %8 ], [ %7, %6 ], [ %5, %4 ]
  %12 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %11, align 8
  br label %13

13:                                               ; preds = %10, %2
  %14 = phi %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* [ null, %2 ], [ %12, %10 ]
  ret %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal11interpreter20ConstantArrayBuilder14InsertDeferredEv(%"class.v8::internal::interpreter::ConstantArrayBuilder"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  %3 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %2, align 8
  %4 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %3, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %3, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %3, i64 0, i32 4, i32 0
  %10 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %3, i64 0, i32 4, i32 0, i32 0, i32 1
  %11 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector"* %9 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 4
  %17 = icmp eq i64 %8, %16
  br i1 %17, label %18, label %53

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 1
  %20 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %19, align 8
  %21 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %20, i64 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %20, i64 0, i32 2
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %20, i64 0, i32 4, i32 0
  %27 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %20, i64 0, i32 4, i32 0, i32 0, i32 1
  %28 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::vector"* %26 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %29, %31
  %33 = ashr exact i64 %32, 4
  %34 = icmp eq i64 %25, %33
  br i1 %34, label %35, label %53

35:                                               ; preds = %18
  %36 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 2
  %37 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %36, align 8
  %38 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %37, i64 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %37, i64 0, i32 2
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %37, i64 0, i32 4, i32 0
  %44 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %37, i64 0, i32 4, i32 0, i32 0, i32 1
  %45 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.std::__1::vector"* %43 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %46, %48
  %50 = ashr exact i64 %49, 4
  %51 = icmp eq i64 %42, %50
  br i1 %51, label %52, label %53

52:                                               ; preds = %35
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #6
  unreachable

53:                                               ; preds = %1, %18, %35
  %54 = phi %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* [ %3, %1 ], [ %20, %18 ], [ %37, %35 ]
  %55 = tail call i64 @_ZN2v88internal11interpreter20ConstantArrayBuilder18ConstantArraySlice8AllocateENS2_5EntryEm(%"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %54, i64* undef, i8 0, i64 1) #7
  %56 = and i64 %55, 4294967295
  ret i64 %56
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal11interpreter20ConstantArrayBuilder15InsertJumpTableEm(%"class.v8::internal::interpreter::ConstantArrayBuilder"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  %4 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %3, align 8
  %5 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %4, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %4, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %4, i64 0, i32 4, i32 0
  %11 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %4, i64 0, i32 4, i32 0, i32 0, i32 1
  %12 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = ashr exact i64 %16, 4
  %18 = sub i64 %9, %17
  %19 = icmp ult i64 %18, %1
  br i1 %19, label %20, label %57

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 1
  %22 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %21, align 8
  %23 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %22, i64 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %22, i64 0, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %24, %26
  %28 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %22, i64 0, i32 4, i32 0
  %29 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %22, i64 0, i32 4, i32 0, i32 0, i32 1
  %30 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector"* %28 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 4
  %36 = sub i64 %27, %35
  %37 = icmp ult i64 %36, %1
  br i1 %37, label %38, label %57

38:                                               ; preds = %20
  %39 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 2
  %40 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %39, align 8
  %41 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %40, i64 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %40, i64 0, i32 2
  %44 = load i64, i64* %43, align 8
  %45 = sub i64 %42, %44
  %46 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %40, i64 0, i32 4, i32 0
  %47 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %40, i64 0, i32 4, i32 0, i32 0, i32 1
  %48 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.std::__1::vector"* %46 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = sub i64 %49, %51
  %53 = ashr exact i64 %52, 4
  %54 = sub i64 %45, %53
  %55 = icmp ult i64 %54, %1
  br i1 %55, label %56, label %57

56:                                               ; preds = %38
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #6
  unreachable

57:                                               ; preds = %2, %20, %38
  %58 = phi %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* [ %4, %2 ], [ %22, %20 ], [ %40, %38 ]
  %59 = tail call i64 @_ZN2v88internal11interpreter20ConstantArrayBuilder18ConstantArraySlice8AllocateENS2_5EntryEm(%"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %58, i64* undef, i8 7, i64 %1) #7
  %60 = and i64 %59, 4294967295
  ret i64 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter20ConstantArrayBuilder13SetDeferredAtEmNS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::interpreter::ConstantArrayBuilder"* nocapture readonly, i64, i64*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  %5 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %4, align 8
  %6 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %5, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %5, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %7, -1
  %11 = add i64 %10, %9
  %12 = icmp ult i64 %11, %1
  br i1 %12, label %13, label %34

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 1
  %15 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %14, align 8
  %16 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %15, i64 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %15, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %17, -1
  %21 = add i64 %20, %19
  %22 = icmp ult i64 %21, %1
  br i1 %22, label %23, label %34

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 2
  %25 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %24, align 8
  %26 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %25, i64 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %25, i64 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %27, -1
  %31 = add i64 %30, %29
  %32 = icmp ult i64 %31, %1
  br i1 %32, label %33, label %34

33:                                               ; preds = %23
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #6
  unreachable

34:                                               ; preds = %3, %13, %23
  %35 = phi i64 [ %7, %3 ], [ %17, %13 ], [ %27, %23 ]
  %36 = phi %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* [ %5, %3 ], [ %15, %13 ], [ %25, %23 ]
  %37 = sub i64 %1, %35
  %38 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %36, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"*, %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %39, i64 %37, i32 1
  store i8 1, i8* %40, align 8
  %41 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %39, i64 %37, i32 0, i32 0, i32 0, i32 0
  store i64* %2, i64** %41, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter20ConstantArrayBuilder15SetJumpTableSmiEmNS0_3SmiE(%"class.v8::internal::interpreter::ConstantArrayBuilder"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  %5 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %4, align 8
  %6 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %5, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %5, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %7, -1
  %11 = add i64 %10, %9
  %12 = icmp ult i64 %11, %1
  br i1 %12, label %13, label %34

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 1
  %15 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %14, align 8
  %16 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %15, i64 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %15, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %17, -1
  %21 = add i64 %20, %19
  %22 = icmp ult i64 %21, %1
  br i1 %22, label %23, label %34

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 2
  %25 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %24, align 8
  %26 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %25, i64 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %25, i64 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %27, -1
  %31 = add i64 %30, %29
  %32 = icmp ult i64 %31, %1
  br i1 %32, label %33, label %34

33:                                               ; preds = %23
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #6
  unreachable

34:                                               ; preds = %3, %13, %23
  %35 = phi i64 [ %7, %3 ], [ %17, %13 ], [ %27, %23 ]
  %36 = phi %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* [ %5, %3 ], [ %15, %13 ], [ %25, %23 ]
  %37 = trunc i64 %1 to i32
  %38 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 2, i32 0, i32 0
  %39 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0
  %40 = bitcast %"class.std::__1::__tree_end_node"* %39 to %"class.std::__1::__tree_node"**
  %41 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node"* %41, null
  br i1 %42, label %73, label %43

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %45 = trunc i64 %2 to i32
  br label %46

46:                                               ; preds = %69, %43
  %47 = phi %"class.std::__1::__tree_node"* [ %72, %69 ], [ %41, %43 ]
  %48 = phi %"class.std::__1::__tree_node_base"** [ %71, %69 ], [ %44, %43 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = trunc i64 %50 to i32
  %52 = icmp ult i32 %45, %51
  br i1 %52, label %53, label %59

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %47, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, null
  br i1 %56, label %57, label %69

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %47, i64 0, i32 0, i32 0
  br label %75

59:                                               ; preds = %46
  %60 = icmp ult i32 %51, %45
  br i1 %60, label %61, label %67

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %47, i64 0, i32 0, i32 1
  %63 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %62, align 8
  %64 = icmp eq %"class.std::__1::__tree_node_base"* %63, null
  br i1 %64, label %65, label %69

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %47, i64 0, i32 0, i32 0
  br label %75

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %47, i64 0, i32 0, i32 0
  br label %75

69:                                               ; preds = %61, %53
  %70 = phi %"class.std::__1::__tree_node_base"* [ %55, %53 ], [ %63, %61 ]
  %71 = phi %"class.std::__1::__tree_node_base"** [ %54, %53 ], [ %62, %61 ]
  %72 = bitcast %"class.std::__1::__tree_node_base"* %70 to %"class.std::__1::__tree_node"*
  br label %46

73:                                               ; preds = %34
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 0, i32 0
  br label %75

75:                                               ; preds = %73, %67, %65, %57
  %76 = phi %"class.std::__1::__tree_end_node"* [ %39, %73 ], [ %58, %57 ], [ %66, %65 ], [ %68, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %74, %73 ], [ %54, %57 ], [ %62, %65 ], [ %48, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"** %77 to %"class.std::__1::__tree_node"**
  %79 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %78, align 8
  %80 = icmp eq %"class.std::__1::__tree_node"* %79, null
  br i1 %80, label %81, label %120

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %83 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %82, align 8, !noalias !12
  %84 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %83, i64 0, i32 2
  %85 = load i64, i64* %84, align 8, !noalias !12
  %86 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %83, i64 0, i32 3
  %87 = load i64, i64* %86, align 8, !noalias !12
  %88 = sub i64 %87, %85
  %89 = icmp ult i64 %88, 48
  br i1 %89, label %90, label %92, !prof !2

90:                                               ; preds = %81
  %91 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %83, i64 48) #7, !noalias !12
  br label %94

92:                                               ; preds = %81
  %93 = add i64 %85, 48
  store i64 %93, i64* %84, align 8, !noalias !12
  br label %94

94:                                               ; preds = %92, %90
  %95 = phi i64 [ %91, %90 ], [ %85, %92 ]
  %96 = inttoptr i64 %95 to %"class.std::__1::__tree_node"*
  %97 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %96, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %2, i64* %97, align 8, !noalias !12
  %98 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %96, i64 0, i32 2, i32 0, i32 1
  store i32 %37, i32* %98, align 8, !noalias !12
  %99 = inttoptr i64 %95 to %"class.std::__1::__tree_node_base"*
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = inttoptr i64 %95 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 16, i1 false) #7
  store %"class.std::__1::__tree_end_node"* %76, %"class.std::__1::__tree_end_node"** %100, align 8
  store %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"** %77, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree.30", %"class.std::__1::__tree.30"* %38, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %102, align 8
  %104 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %103, i64 0, i32 0
  %105 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %104, align 8
  %106 = icmp eq %"class.std::__1::__tree_node_base"* %105, null
  br i1 %106, label %111, label %107

107:                                              ; preds = %94
  %108 = ptrtoint %"class.std::__1::__tree_node_base"* %105 to i64
  %109 = bitcast %"class.std::__1::__tree.30"* %38 to i64*
  store i64 %108, i64* %109, align 8
  %110 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %77, align 8
  br label %111

111:                                              ; preds = %107, %94
  %112 = phi %"class.std::__1::__tree_node_base"* [ %99, %94 ], [ %110, %107 ]
  %113 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %114 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %113, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %114, %"class.std::__1::__tree_node_base"* %112) #7
  %115 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %116 = load i64, i64* %115, align 8
  %117 = add i64 %116, 1
  store i64 %117, i64* %115, align 8
  %118 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %36, i64 0, i32 0
  %119 = load i64, i64* %118, align 8
  br label %120

120:                                              ; preds = %75, %111
  %121 = phi i64 [ %35, %75 ], [ %119, %111 ]
  %122 = sub i64 %1, %121
  %123 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %36, i64 0, i32 4, i32 0, i32 0, i32 0
  %124 = load %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"*, %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %123, align 8
  %125 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %124, i64 %122
  %126 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry", %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %124, i64 %122, i32 1
  store i8 8, i8* %126, align 8
  %127 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"* %125 to i64*
  store i64 %2, i64* %127, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN2v88internal11interpreter20ConstantArrayBuilder19CreateReservedEntryEv(%"class.v8::internal::interpreter::ConstantArrayBuilder"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  %3 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %2, align 8
  %4 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %3, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %3, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %3, i64 0, i32 4, i32 0
  %10 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %3, i64 0, i32 4, i32 0, i32 0, i32 1
  %11 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector"* %9 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 4
  %17 = icmp eq i64 %8, %16
  br i1 %17, label %18, label %35

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 1
  %20 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %19, align 8
  %21 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %20, i64 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %20, i64 0, i32 2
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %20, i64 0, i32 4, i32 0
  %27 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %20, i64 0, i32 4, i32 0, i32 0, i32 1
  %28 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::vector"* %26 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %29, %31
  %33 = ashr exact i64 %32, 4
  %34 = icmp eq i64 %25, %33
  br i1 %34, label %45, label %35

35:                                               ; preds = %45, %18, %1
  %36 = phi i64 [ 0, %1 ], [ 1, %18 ], [ 2, %45 ]
  %37 = phi %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* [ %3, %1 ], [ %20, %18 ], [ %47, %45 ]
  %38 = phi i64 [ %7, %1 ], [ %24, %18 ], [ %51, %45 ]
  %39 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 %36
  %40 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %37, i64 0, i32 2
  %41 = add i64 %38, 1
  store i64 %41, i64* %40, align 8
  %42 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %39, align 8
  %43 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %42, i64 0, i32 3
  %44 = load i8, i8* %43, align 8
  ret i8 %44

45:                                               ; preds = %18
  %46 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 2
  %47 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %46, align 8
  %48 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %47, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %47, i64 0, i32 2
  %51 = load i64, i64* %50, align 8
  %52 = sub i64 %49, %51
  %53 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %47, i64 0, i32 4, i32 0
  %54 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %47, i64 0, i32 4, i32 0, i32 0, i32 1
  %55 = bitcast %"class.v8::internal::interpreter::ConstantArrayBuilder::Entry"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.std::__1::vector"* %53 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = sub i64 %56, %58
  %60 = ashr exact i64 %59, 4
  %61 = icmp eq i64 %52, %60
  br i1 %61, label %62, label %35

62:                                               ; preds = %45
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #6
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal11interpreter20ConstantArrayBuilder19CommitReservedEntryENS1_11OperandSizeENS0_3SmiE(%"class.v8::internal::interpreter::ConstantArrayBuilder"*, i8 zeroext, i64) local_unnamed_addr #0 align 2 {
  switch i8 %1, label %14 [
    i8 0, label %4
    i8 1, label %5
    i8 2, label %7
    i8 4, label %9
  ]

4:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #6
  unreachable

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  br label %11

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 1
  br label %11

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 2
  br label %11

11:                                               ; preds = %9, %7, %5
  %12 = phi %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** [ %6, %5 ], [ %8, %7 ], [ %10, %9 ]
  %13 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %12, align 8
  br label %14

14:                                               ; preds = %11, %3
  %15 = phi %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* [ null, %3 ], [ %13, %11 ]
  %16 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %15, i64 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, -1
  store i64 %18, i64* %16, align 8
  %19 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0
  %20 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.std::__1::__tree_node"**
  %21 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node"* %21, null
  br i1 %22, label %72, label %23

23:                                               ; preds = %14
  %24 = trunc i64 %2 to i32
  br label %25

25:                                               ; preds = %25, %23
  %26 = phi %"class.std::__1::__tree_end_node"* [ %19, %23 ], [ %37, %25 ]
  %27 = phi %"class.std::__1::__tree_node"* [ %21, %23 ], [ %38, %25 ]
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = trunc i64 %29 to i32
  %31 = icmp ult i32 %30, %24
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %27, i64 0, i32 0, i32 1
  %33 = bitcast %"class.std::__1::__tree_node_base"** %32 to %"class.std::__1::__tree_node"**
  %34 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %27, i64 0, i32 0, i32 0
  %35 = bitcast %"class.std::__1::__tree_node"* %27 to %"class.std::__1::__tree_node"**
  %36 = select i1 %31, %"class.std::__1::__tree_node"** %33, %"class.std::__1::__tree_node"** %35
  %37 = select i1 %31, %"class.std::__1::__tree_end_node"* %26, %"class.std::__1::__tree_end_node"* %34
  %38 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %36, align 8
  %39 = icmp eq %"class.std::__1::__tree_node"* %38, null
  br i1 %39, label %40, label %25

40:                                               ; preds = %25
  %41 = icmp eq %"class.std::__1::__tree_end_node"* %37, %19
  br i1 %41, label %72, label %42

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %37, i64 4
  %44 = bitcast %"class.std::__1::__tree_end_node"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = trunc i64 %45 to i32
  %47 = icmp ult i32 %24, %46
  br i1 %47, label %72, label %48

48:                                               ; preds = %42
  switch i8 %1, label %59 [
    i8 0, label %49
    i8 1, label %50
    i8 2, label %52
    i8 4, label %54
  ]

49:                                               ; preds = %48
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #6
  unreachable

50:                                               ; preds = %48
  %51 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  br label %56

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 1
  br label %56

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 2
  br label %56

56:                                               ; preds = %54, %52, %50
  %57 = phi %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** [ %51, %50 ], [ %53, %52 ], [ %55, %54 ]
  %58 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %57, align 8
  br label %59

59:                                               ; preds = %56, %48
  %60 = phi %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* [ null, %48 ], [ %58, %56 ]
  %61 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %37, i64 5
  %62 = bitcast %"class.std::__1::__tree_end_node"* %61 to i32*
  %63 = load i32, i32* %62, align 8
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %60, i64 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %60, i64 0, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %66, -1
  %70 = add i64 %69, %68
  %71 = icmp ult i64 %70, %64
  br i1 %71, label %72, label %75

72:                                               ; preds = %59, %14, %40, %42
  %73 = tail call i32 @_ZN2v88internal11interpreter20ConstantArrayBuilder21AllocateReservedEntryENS0_3SmiE(%"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 %2)
  %74 = zext i32 %73 to i64
  br label %75

75:                                               ; preds = %72, %59
  %76 = phi i64 [ %64, %59 ], [ %74, %72 ]
  ret i64 %76
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal11interpreter20ConstantArrayBuilder20DiscardReservedEntryENS1_11OperandSizeE(%"class.v8::internal::interpreter::ConstantArrayBuilder"* nocapture readonly, i8 zeroext) local_unnamed_addr #0 align 2 {
  switch i8 %1, label %13 [
    i8 0, label %3
    i8 1, label %4
    i8 2, label %6
    i8 4, label %8
  ]

3:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #6
  unreachable

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 0
  br label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 1
  br label %10

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::interpreter::ConstantArrayBuilder", %"class.v8::internal::interpreter::ConstantArrayBuilder"* %0, i64 0, i32 0, i64 2
  br label %10

10:                                               ; preds = %8, %6, %4
  %11 = phi %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** [ %5, %4 ], [ %7, %6 ], [ %9, %8 ]
  %12 = load %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"*, %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"** %11, align 8
  br label %13

13:                                               ; preds = %10, %2
  %14 = phi %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* [ null, %2 ], [ %12, %10 ]
  %15 = getelementptr inbounds %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice", %"struct.v8::internal::interpreter::ConstantArrayBuilder::ConstantArraySlice"* %14, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, -1
  store i64 %17, i64* %15, align 8
  ret void
}

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #3

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #3

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #3

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !3
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v84base19TemplateHashMapImplIljNS0_18KeyEqualityMatcherIlEENS_8internal20ZoneAllocationPolicyEE6ResizeEv(%"class.v8::base::TemplateHashMapImpl.27"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl.27", %"class.v8::base::TemplateHashMapImpl.27"* %0, i64 0, i32 0, i32 1
  %3 = load %"struct.v8::base::TemplateHashMapEntry.29"*, %"struct.v8::base::TemplateHashMapEntry.29"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl.27", %"class.v8::base::TemplateHashMapImpl.27"* %0, i64 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl.27", %"class.v8::base::TemplateHashMapImpl.27"* %0, i64 0, i32 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = shl i32 %5, 1
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl.27", %"class.v8::base::TemplateHashMapImpl.27"* %0, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %10, align 8
  %12 = mul nuw nsw i64 %9, 24
  %13 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %11, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %11, i64 0, i32 3
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %16, %14
  %18 = icmp ugt i64 %12, %17
  br i1 %18, label %19, label %21, !prof !2

19:                                               ; preds = %1
  %20 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %11, i64 %12) #7
  br label %23

21:                                               ; preds = %1
  %22 = add i64 %14, %12
  store i64 %22, i64* %13, align 8
  br label %23

23:                                               ; preds = %21, %19
  %24 = phi i64 [ %20, %19 ], [ %14, %21 ]
  %25 = inttoptr i64 %24 to %"struct.v8::base::TemplateHashMapEntry.29"*
  store %"struct.v8::base::TemplateHashMapEntry.29"* %25, %"struct.v8::base::TemplateHashMapEntry.29"** %2, align 8
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %23
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0)) #6
  unreachable

28:                                               ; preds = %23
  store i32 %8, i32* %4, align 8
  %29 = icmp eq i32 %8, 0
  br i1 %29, label %42, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %25, i64 0, i32 3
  store i8 0, i8* %31, align 8
  %32 = load i32, i32* %4, align 8
  %33 = icmp ugt i32 %32, 1
  br i1 %33, label %34, label %42

34:                                               ; preds = %30, %34
  %35 = phi i64 [ %38, %34 ], [ 1, %30 ]
  %36 = load %"struct.v8::base::TemplateHashMapEntry.29"*, %"struct.v8::base::TemplateHashMapEntry.29"** %2, align 8
  %37 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %36, i64 %35, i32 3
  store i8 0, i8* %37, align 8
  %38 = add nuw nsw i64 %35, 1
  %39 = load i32, i32* %4, align 8
  %40 = zext i32 %39 to i64
  %41 = icmp ult i64 %38, %40
  br i1 %41, label %34, label %42

42:                                               ; preds = %34, %30, %28
  %43 = phi i32 [ %32, %30 ], [ 0, %28 ], [ %39, %34 ]
  store i32 0, i32* %6, align 4
  %44 = icmp eq i32 %7, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %121, %42
  ret void

46:                                               ; preds = %42, %121
  %47 = phi i32 [ %122, %121 ], [ %43, %42 ]
  %48 = phi i32 [ %123, %121 ], [ %7, %42 ]
  %49 = phi %"struct.v8::base::TemplateHashMapEntry.29"* [ %124, %121 ], [ %3, %42 ]
  %50 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %49, i64 0, i32 3
  %51 = load i8, i8* %50, align 8, !range !3
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %121, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %49, i64 0, i32 0
  %55 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %49, i64 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = add i32 %47, -1
  %58 = and i32 %57, %56
  %59 = zext i32 %58 to i64
  %60 = load %"struct.v8::base::TemplateHashMapEntry.29"*, %"struct.v8::base::TemplateHashMapEntry.29"** %2, align 8
  %61 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %60, i64 %59
  %62 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %60, i64 %59, i32 3
  %63 = load i8, i8* %62, align 8, !range !3
  %64 = icmp eq i8 %63, 0
  %65 = load i64, i64* %54, align 8
  br i1 %64, label %81, label %66

66:                                               ; preds = %53
  %67 = zext i32 %57 to i64
  br label %68

68:                                               ; preds = %74, %66
  %69 = phi %"struct.v8::base::TemplateHashMapEntry.29"* [ %61, %66 ], [ %77, %74 ]
  %70 = phi i64 [ %59, %66 ], [ %76, %74 ]
  %71 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %69, i64 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %65, %72
  br i1 %73, label %81, label %74

74:                                               ; preds = %68
  %75 = add nuw nsw i64 %70, 1
  %76 = and i64 %75, %67
  %77 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %60, i64 %76
  %78 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %60, i64 %76, i32 3
  %79 = load i8, i8* %78, align 8, !range !3
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %81, label %68

81:                                               ; preds = %68, %74, %53
  %82 = phi %"struct.v8::base::TemplateHashMapEntry.29"* [ %61, %53 ], [ %69, %68 ], [ %77, %74 ]
  %83 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %49, i64 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %82, i64 0, i32 0
  store i64 %65, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %82, i64 0, i32 1
  store i32 %84, i32* %86, align 8
  %87 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %82, i64 0, i32 2
  store i32 %56, i32* %87, align 4
  %88 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %82, i64 0, i32 3
  store i8 1, i8* %88, align 8
  %89 = load i32, i32* %6, align 4
  %90 = add i32 %89, 1
  store i32 %90, i32* %6, align 4
  %91 = lshr i32 %90, 2
  %92 = add i32 %91, %90
  %93 = load i32, i32* %4, align 8
  %94 = icmp ult i32 %92, %93
  br i1 %94, label %118, label %95

95:                                               ; preds = %81
  tail call void @_ZN2v84base19TemplateHashMapImplIljNS0_18KeyEqualityMatcherIlEENS_8internal20ZoneAllocationPolicyEE6ResizeEv(%"class.v8::base::TemplateHashMapImpl.27"* %0) #7
  %96 = load i32, i32* %4, align 8
  %97 = add i32 %96, -1
  %98 = and i32 %97, %56
  %99 = zext i32 %98 to i64
  %100 = load %"struct.v8::base::TemplateHashMapEntry.29"*, %"struct.v8::base::TemplateHashMapEntry.29"** %2, align 8
  %101 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %100, i64 %99, i32 3
  %102 = load i8, i8* %101, align 8, !range !3
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %118, label %104

104:                                              ; preds = %95
  %105 = load i64, i64* %54, align 8
  %106 = zext i32 %97 to i64
  br label %107

107:                                              ; preds = %112, %104
  %108 = phi i64 [ %99, %104 ], [ %114, %112 ]
  %109 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %100, i64 %108, i32 0
  %110 = load i64, i64* %109, align 8
  %111 = icmp eq i64 %105, %110
  br i1 %111, label %118, label %112

112:                                              ; preds = %107
  %113 = add nuw nsw i64 %108, 1
  %114 = and i64 %113, %106
  %115 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %100, i64 %114, i32 3
  %116 = load i8, i8* %115, align 8, !range !3
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %118, label %107

118:                                              ; preds = %107, %112, %95, %81
  %119 = phi i32 [ %96, %95 ], [ %93, %81 ], [ %96, %112 ], [ %96, %107 ]
  %120 = add i32 %48, -1
  br label %121

121:                                              ; preds = %46, %118
  %122 = phi i32 [ %119, %118 ], [ %47, %46 ]
  %123 = phi i32 [ %120, %118 ], [ %48, %46 ]
  %124 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.29", %"struct.v8::base::TemplateHashMapEntry.29"* %49, i64 1
  %125 = icmp eq i32 %123, 0
  br i1 %125, label %45, label %46
}

declare i64 @_ZN2v84base10hash_valueEm(i64) local_unnamed_addr #3

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE1EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"*, i64) local_unnamed_addr #3

declare i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal11FactoryBaseINS0_12LocalFactoryEE13NewHeapNumberILNS0_14AllocationTypeE1EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase.1094"*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__16__treeINS_12__value_typeIN2v88internal3SmiEjEENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS3_13ZoneAllocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__16__treeINS_12__value_typeIN2v88internal3SmiEjEENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS3_13ZoneAllocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__16__treeINS_12__value_typeIdjEENS_19__map_value_compareIdS2_NS_4lessIdEELb1EEEN2v88internal13ZoneAllocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKdEEENSG_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS9_ISO_EEEEEEDpOT_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__16__treeINS_12__value_typeIdjEENS_19__map_value_compareIdS2_NS_4lessIdEELb1EEEN2v88internal13ZoneAllocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKdEEENSG_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS9_ISO_EEEEEEDpOT_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__16__treeINS_12__value_typeIN2v88internal3SmiEjEENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS3_13ZoneAllocatorIS5_EEE16__construct_nodeIJRS4_jEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISI_EEEEEEDpOT_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__16__treeINS_12__value_typeIN2v88internal3SmiEjEENS_19__map_value_compareIS4_S5_NS_4lessIS4_EELb1EEENS3_13ZoneAllocatorIS5_EEE16__construct_nodeIJRS4_jEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISI_EEEEEEDpOT_"}
