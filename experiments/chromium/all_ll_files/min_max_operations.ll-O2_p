; ModuleID = '../../third_party/webrtc/common_audio/signal_processing/min_max_operations.c'
source_filename = "../../third_party/webrtc/common_audio/signal_processing/min_max_operations.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden signext i16 @WebRtcSpl_MaxAbsValueW16C(i16* nocapture readonly, i64) local_unnamed_addr #0 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %62, label %4

4:                                                ; preds = %2
  %5 = icmp ult i64 %1, 8
  br i1 %5, label %43, label %6

6:                                                ; preds = %4
  %7 = and i64 %1, -8
  br label %8

8:                                                ; preds = %8, %6
  %9 = phi i64 [ 0, %6 ], [ %30, %8 ]
  %10 = phi <4 x i32> [ zeroinitializer, %6 ], [ %28, %8 ]
  %11 = phi <4 x i32> [ zeroinitializer, %6 ], [ %29, %8 ]
  %12 = getelementptr inbounds i16, i16* %0, i64 %9
  %13 = bitcast i16* %12 to <4 x i16>*
  %14 = load <4 x i16>, <4 x i16>* %13, align 2
  %15 = getelementptr inbounds i16, i16* %12, i64 4
  %16 = bitcast i16* %15 to <4 x i16>*
  %17 = load <4 x i16>, <4 x i16>* %16, align 2
  %18 = sext <4 x i16> %14 to <4 x i32>
  %19 = sext <4 x i16> %17 to <4 x i32>
  %20 = icmp slt <4 x i32> %18, zeroinitializer
  %21 = icmp slt <4 x i32> %19, zeroinitializer
  %22 = sub nsw <4 x i32> zeroinitializer, %18
  %23 = sub nsw <4 x i32> zeroinitializer, %19
  %24 = select <4 x i1> %20, <4 x i32> %22, <4 x i32> %18
  %25 = select <4 x i1> %21, <4 x i32> %23, <4 x i32> %19
  %26 = icmp sgt <4 x i32> %24, %10
  %27 = icmp sgt <4 x i32> %25, %11
  %28 = select <4 x i1> %26, <4 x i32> %24, <4 x i32> %10
  %29 = select <4 x i1> %27, <4 x i32> %25, <4 x i32> %11
  %30 = add i64 %9, 8
  %31 = icmp eq i64 %30, %7
  br i1 %31, label %32, label %8, !llvm.loop !2

32:                                               ; preds = %8
  %33 = icmp sgt <4 x i32> %28, %29
  %34 = select <4 x i1> %33, <4 x i32> %28, <4 x i32> %29
  %35 = shufflevector <4 x i32> %34, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %36 = icmp sgt <4 x i32> %34, %35
  %37 = select <4 x i1> %36, <4 x i32> %34, <4 x i32> %35
  %38 = shufflevector <4 x i32> %37, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %39 = icmp sgt <4 x i32> %37, %38
  %40 = select <4 x i1> %39, <4 x i32> %37, <4 x i32> %38
  %41 = extractelement <4 x i32> %40, i32 0
  %42 = icmp eq i64 %7, %1
  br i1 %42, label %59, label %43

43:                                               ; preds = %32, %4
  %44 = phi i32 [ 0, %4 ], [ %41, %32 ]
  %45 = phi i64 [ 0, %4 ], [ %7, %32 ]
  br label %46

46:                                               ; preds = %43, %46
  %47 = phi i32 [ %56, %46 ], [ %44, %43 ]
  %48 = phi i64 [ %57, %46 ], [ %45, %43 ]
  %49 = getelementptr inbounds i16, i16* %0, i64 %48
  %50 = load i16, i16* %49, align 2
  %51 = sext i16 %50 to i32
  %52 = icmp slt i32 %51, 0
  %53 = sub nsw i32 0, %51
  %54 = select i1 %52, i32 %53, i32 %51
  %55 = icmp sgt i32 %54, %47
  %56 = select i1 %55, i32 %54, i32 %47
  %57 = add nuw i64 %48, 1
  %58 = icmp eq i64 %57, %1
  br i1 %58, label %59, label %46, !llvm.loop !4

59:                                               ; preds = %46, %32
  %60 = phi i32 [ %41, %32 ], [ %56, %46 ]
  %61 = icmp slt i32 %60, 32767
  br i1 %61, label %62, label %64

62:                                               ; preds = %2, %59
  %63 = phi i32 [ %60, %59 ], [ 0, %2 ]
  br label %64

64:                                               ; preds = %59, %62
  %65 = phi i32 [ %63, %62 ], [ 32767, %59 ]
  %66 = trunc i32 %65 to i16
  ret i16 %66
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @WebRtcSpl_MaxAbsValueW32C(i32* nocapture readonly, i64) local_unnamed_addr #0 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %111, label %4

4:                                                ; preds = %2
  %5 = icmp ult i64 %1, 8
  br i1 %5, label %93, label %6

6:                                                ; preds = %4
  %7 = and i64 %1, -8
  %8 = add i64 %7, -8
  %9 = lshr exact i64 %8, 3
  %10 = add nuw nsw i64 %9, 1
  %11 = and i64 %10, 1
  %12 = icmp eq i64 %8, 0
  br i1 %12, label %56, label %13

13:                                               ; preds = %6
  %14 = sub nuw nsw i64 %10, %11
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i64 [ 0, %13 ], [ %53, %15 ]
  %17 = phi <4 x i32> [ zeroinitializer, %13 ], [ %51, %15 ]
  %18 = phi <4 x i32> [ zeroinitializer, %13 ], [ %52, %15 ]
  %19 = phi i64 [ %14, %13 ], [ %54, %15 ]
  %20 = getelementptr inbounds i32, i32* %0, i64 %16
  %21 = bitcast i32* %20 to <4 x i32>*
  %22 = load <4 x i32>, <4 x i32>* %21, align 4
  %23 = getelementptr inbounds i32, i32* %20, i64 4
  %24 = bitcast i32* %23 to <4 x i32>*
  %25 = load <4 x i32>, <4 x i32>* %24, align 4
  %26 = icmp slt <4 x i32> %22, zeroinitializer
  %27 = icmp slt <4 x i32> %25, zeroinitializer
  %28 = sub nsw <4 x i32> zeroinitializer, %22
  %29 = sub nsw <4 x i32> zeroinitializer, %25
  %30 = select <4 x i1> %26, <4 x i32> %28, <4 x i32> %22
  %31 = select <4 x i1> %27, <4 x i32> %29, <4 x i32> %25
  %32 = icmp ugt <4 x i32> %30, %17
  %33 = icmp ugt <4 x i32> %31, %18
  %34 = select <4 x i1> %32, <4 x i32> %30, <4 x i32> %17
  %35 = select <4 x i1> %33, <4 x i32> %31, <4 x i32> %18
  %36 = or i64 %16, 8
  %37 = getelementptr inbounds i32, i32* %0, i64 %36
  %38 = bitcast i32* %37 to <4 x i32>*
  %39 = load <4 x i32>, <4 x i32>* %38, align 4
  %40 = getelementptr inbounds i32, i32* %37, i64 4
  %41 = bitcast i32* %40 to <4 x i32>*
  %42 = load <4 x i32>, <4 x i32>* %41, align 4
  %43 = icmp slt <4 x i32> %39, zeroinitializer
  %44 = icmp slt <4 x i32> %42, zeroinitializer
  %45 = sub nsw <4 x i32> zeroinitializer, %39
  %46 = sub nsw <4 x i32> zeroinitializer, %42
  %47 = select <4 x i1> %43, <4 x i32> %45, <4 x i32> %39
  %48 = select <4 x i1> %44, <4 x i32> %46, <4 x i32> %42
  %49 = icmp ugt <4 x i32> %47, %34
  %50 = icmp ugt <4 x i32> %48, %35
  %51 = select <4 x i1> %49, <4 x i32> %47, <4 x i32> %34
  %52 = select <4 x i1> %50, <4 x i32> %48, <4 x i32> %35
  %53 = add i64 %16, 16
  %54 = add i64 %19, -2
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %15, !llvm.loop !6

56:                                               ; preds = %15, %6
  %57 = phi <4 x i32> [ undef, %6 ], [ %51, %15 ]
  %58 = phi <4 x i32> [ undef, %6 ], [ %52, %15 ]
  %59 = phi i64 [ 0, %6 ], [ %53, %15 ]
  %60 = phi <4 x i32> [ zeroinitializer, %6 ], [ %51, %15 ]
  %61 = phi <4 x i32> [ zeroinitializer, %6 ], [ %52, %15 ]
  %62 = icmp eq i64 %11, 0
  br i1 %62, label %80, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds i32, i32* %0, i64 %59
  %65 = bitcast i32* %64 to <4 x i32>*
  %66 = load <4 x i32>, <4 x i32>* %65, align 4
  %67 = getelementptr inbounds i32, i32* %64, i64 4
  %68 = bitcast i32* %67 to <4 x i32>*
  %69 = load <4 x i32>, <4 x i32>* %68, align 4
  %70 = icmp slt <4 x i32> %66, zeroinitializer
  %71 = icmp slt <4 x i32> %69, zeroinitializer
  %72 = sub nsw <4 x i32> zeroinitializer, %66
  %73 = sub nsw <4 x i32> zeroinitializer, %69
  %74 = select <4 x i1> %70, <4 x i32> %72, <4 x i32> %66
  %75 = select <4 x i1> %71, <4 x i32> %73, <4 x i32> %69
  %76 = icmp ugt <4 x i32> %75, %61
  %77 = select <4 x i1> %76, <4 x i32> %75, <4 x i32> %61
  %78 = icmp ugt <4 x i32> %74, %60
  %79 = select <4 x i1> %78, <4 x i32> %74, <4 x i32> %60
  br label %80

80:                                               ; preds = %56, %63
  %81 = phi <4 x i32> [ %57, %56 ], [ %79, %63 ]
  %82 = phi <4 x i32> [ %58, %56 ], [ %77, %63 ]
  %83 = icmp ugt <4 x i32> %81, %82
  %84 = select <4 x i1> %83, <4 x i32> %81, <4 x i32> %82
  %85 = shufflevector <4 x i32> %84, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %86 = icmp ugt <4 x i32> %84, %85
  %87 = select <4 x i1> %86, <4 x i32> %84, <4 x i32> %85
  %88 = shufflevector <4 x i32> %87, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %89 = icmp ugt <4 x i32> %87, %88
  %90 = select <4 x i1> %89, <4 x i32> %87, <4 x i32> %88
  %91 = extractelement <4 x i32> %90, i32 0
  %92 = icmp eq i64 %7, %1
  br i1 %92, label %108, label %93

93:                                               ; preds = %80, %4
  %94 = phi i64 [ 0, %4 ], [ %7, %80 ]
  %95 = phi i32 [ 0, %4 ], [ %91, %80 ]
  br label %96

96:                                               ; preds = %93, %96
  %97 = phi i64 [ %106, %96 ], [ %94, %93 ]
  %98 = phi i32 [ %105, %96 ], [ %95, %93 ]
  %99 = getelementptr inbounds i32, i32* %0, i64 %97
  %100 = load i32, i32* %99, align 4
  %101 = icmp slt i32 %100, 0
  %102 = sub nsw i32 0, %100
  %103 = select i1 %101, i32 %102, i32 %100
  %104 = icmp ugt i32 %103, %98
  %105 = select i1 %104, i32 %103, i32 %98
  %106 = add nuw i64 %97, 1
  %107 = icmp eq i64 %106, %1
  br i1 %107, label %108, label %96, !llvm.loop !7

108:                                              ; preds = %96, %80
  %109 = phi i32 [ %91, %80 ], [ %105, %96 ]
  %110 = icmp ult i32 %109, 2147483647
  br i1 %110, label %111, label %113

111:                                              ; preds = %2, %108
  %112 = phi i32 [ %109, %108 ], [ 0, %2 ]
  br label %113

113:                                              ; preds = %108, %111
  %114 = phi i32 [ %112, %111 ], [ 2147483647, %108 ]
  ret i32 %114
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden signext i16 @WebRtcSpl_MaxValueW16C(i16* nocapture readonly, i64) local_unnamed_addr #0 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %90, label %4

4:                                                ; preds = %2
  %5 = icmp ult i64 %1, 16
  br i1 %5, label %78, label %6

6:                                                ; preds = %4
  %7 = and i64 %1, -16
  %8 = add i64 %7, -16
  %9 = lshr exact i64 %8, 4
  %10 = add nuw nsw i64 %9, 1
  %11 = and i64 %10, 1
  %12 = icmp eq i64 %8, 0
  br i1 %12, label %44, label %13

13:                                               ; preds = %6
  %14 = sub nuw nsw i64 %10, %11
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i64 [ 0, %13 ], [ %41, %15 ]
  %17 = phi <8 x i16> [ <i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768>, %13 ], [ %39, %15 ]
  %18 = phi <8 x i16> [ <i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768>, %13 ], [ %40, %15 ]
  %19 = phi i64 [ %14, %13 ], [ %42, %15 ]
  %20 = getelementptr inbounds i16, i16* %0, i64 %16
  %21 = bitcast i16* %20 to <8 x i16>*
  %22 = load <8 x i16>, <8 x i16>* %21, align 2
  %23 = getelementptr inbounds i16, i16* %20, i64 8
  %24 = bitcast i16* %23 to <8 x i16>*
  %25 = load <8 x i16>, <8 x i16>* %24, align 2
  %26 = icmp sgt <8 x i16> %22, %17
  %27 = icmp sgt <8 x i16> %25, %18
  %28 = select <8 x i1> %26, <8 x i16> %22, <8 x i16> %17
  %29 = select <8 x i1> %27, <8 x i16> %25, <8 x i16> %18
  %30 = or i64 %16, 16
  %31 = getelementptr inbounds i16, i16* %0, i64 %30
  %32 = bitcast i16* %31 to <8 x i16>*
  %33 = load <8 x i16>, <8 x i16>* %32, align 2
  %34 = getelementptr inbounds i16, i16* %31, i64 8
  %35 = bitcast i16* %34 to <8 x i16>*
  %36 = load <8 x i16>, <8 x i16>* %35, align 2
  %37 = icmp sgt <8 x i16> %33, %28
  %38 = icmp sgt <8 x i16> %36, %29
  %39 = select <8 x i1> %37, <8 x i16> %33, <8 x i16> %28
  %40 = select <8 x i1> %38, <8 x i16> %36, <8 x i16> %29
  %41 = add i64 %16, 32
  %42 = add i64 %19, -2
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %15, !llvm.loop !8

44:                                               ; preds = %15, %6
  %45 = phi <8 x i16> [ undef, %6 ], [ %39, %15 ]
  %46 = phi <8 x i16> [ undef, %6 ], [ %40, %15 ]
  %47 = phi i64 [ 0, %6 ], [ %41, %15 ]
  %48 = phi <8 x i16> [ <i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768>, %6 ], [ %39, %15 ]
  %49 = phi <8 x i16> [ <i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768>, %6 ], [ %40, %15 ]
  %50 = icmp eq i64 %11, 0
  br i1 %50, label %62, label %51

51:                                               ; preds = %44
  %52 = getelementptr inbounds i16, i16* %0, i64 %47
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2
  %55 = getelementptr inbounds i16, i16* %52, i64 8
  %56 = bitcast i16* %55 to <8 x i16>*
  %57 = load <8 x i16>, <8 x i16>* %56, align 2
  %58 = icmp sgt <8 x i16> %57, %49
  %59 = select <8 x i1> %58, <8 x i16> %57, <8 x i16> %49
  %60 = icmp sgt <8 x i16> %54, %48
  %61 = select <8 x i1> %60, <8 x i16> %54, <8 x i16> %48
  br label %62

62:                                               ; preds = %44, %51
  %63 = phi <8 x i16> [ %45, %44 ], [ %61, %51 ]
  %64 = phi <8 x i16> [ %46, %44 ], [ %59, %51 ]
  %65 = icmp sgt <8 x i16> %63, %64
  %66 = select <8 x i1> %65, <8 x i16> %63, <8 x i16> %64
  %67 = shufflevector <8 x i16> %66, <8 x i16> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %68 = icmp sgt <8 x i16> %66, %67
  %69 = select <8 x i1> %68, <8 x i16> %66, <8 x i16> %67
  %70 = shufflevector <8 x i16> %69, <8 x i16> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %71 = icmp sgt <8 x i16> %69, %70
  %72 = select <8 x i1> %71, <8 x i16> %69, <8 x i16> %70
  %73 = shufflevector <8 x i16> %72, <8 x i16> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %74 = icmp sgt <8 x i16> %72, %73
  %75 = select <8 x i1> %74, <8 x i16> %72, <8 x i16> %73
  %76 = extractelement <8 x i16> %75, i32 0
  %77 = icmp eq i64 %7, %1
  br i1 %77, label %90, label %78

78:                                               ; preds = %62, %4
  %79 = phi i64 [ 0, %4 ], [ %7, %62 ]
  %80 = phi i16 [ -32768, %4 ], [ %76, %62 ]
  br label %81

81:                                               ; preds = %78, %81
  %82 = phi i64 [ %88, %81 ], [ %79, %78 ]
  %83 = phi i16 [ %87, %81 ], [ %80, %78 ]
  %84 = getelementptr inbounds i16, i16* %0, i64 %82
  %85 = load i16, i16* %84, align 2
  %86 = icmp sgt i16 %85, %83
  %87 = select i1 %86, i16 %85, i16 %83
  %88 = add nuw i64 %82, 1
  %89 = icmp eq i64 %88, %1
  br i1 %89, label %90, label %81, !llvm.loop !9

90:                                               ; preds = %81, %62, %2
  %91 = phi i16 [ -32768, %2 ], [ %76, %62 ], [ %87, %81 ]
  ret i16 %91
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @WebRtcSpl_MaxValueW32C(i32* nocapture readonly, i64) local_unnamed_addr #0 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %87, label %4

4:                                                ; preds = %2
  %5 = icmp ult i64 %1, 8
  br i1 %5, label %75, label %6

6:                                                ; preds = %4
  %7 = and i64 %1, -8
  %8 = add i64 %7, -8
  %9 = lshr exact i64 %8, 3
  %10 = add nuw nsw i64 %9, 1
  %11 = and i64 %10, 1
  %12 = icmp eq i64 %8, 0
  br i1 %12, label %44, label %13

13:                                               ; preds = %6
  %14 = sub nuw nsw i64 %10, %11
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i64 [ 0, %13 ], [ %41, %15 ]
  %17 = phi <4 x i32> [ <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, %13 ], [ %39, %15 ]
  %18 = phi <4 x i32> [ <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, %13 ], [ %40, %15 ]
  %19 = phi i64 [ %14, %13 ], [ %42, %15 ]
  %20 = getelementptr inbounds i32, i32* %0, i64 %16
  %21 = bitcast i32* %20 to <4 x i32>*
  %22 = load <4 x i32>, <4 x i32>* %21, align 4
  %23 = getelementptr inbounds i32, i32* %20, i64 4
  %24 = bitcast i32* %23 to <4 x i32>*
  %25 = load <4 x i32>, <4 x i32>* %24, align 4
  %26 = icmp sgt <4 x i32> %22, %17
  %27 = icmp sgt <4 x i32> %25, %18
  %28 = select <4 x i1> %26, <4 x i32> %22, <4 x i32> %17
  %29 = select <4 x i1> %27, <4 x i32> %25, <4 x i32> %18
  %30 = or i64 %16, 8
  %31 = getelementptr inbounds i32, i32* %0, i64 %30
  %32 = bitcast i32* %31 to <4 x i32>*
  %33 = load <4 x i32>, <4 x i32>* %32, align 4
  %34 = getelementptr inbounds i32, i32* %31, i64 4
  %35 = bitcast i32* %34 to <4 x i32>*
  %36 = load <4 x i32>, <4 x i32>* %35, align 4
  %37 = icmp sgt <4 x i32> %33, %28
  %38 = icmp sgt <4 x i32> %36, %29
  %39 = select <4 x i1> %37, <4 x i32> %33, <4 x i32> %28
  %40 = select <4 x i1> %38, <4 x i32> %36, <4 x i32> %29
  %41 = add i64 %16, 16
  %42 = add i64 %19, -2
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %15, !llvm.loop !10

44:                                               ; preds = %15, %6
  %45 = phi <4 x i32> [ undef, %6 ], [ %39, %15 ]
  %46 = phi <4 x i32> [ undef, %6 ], [ %40, %15 ]
  %47 = phi i64 [ 0, %6 ], [ %41, %15 ]
  %48 = phi <4 x i32> [ <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, %6 ], [ %39, %15 ]
  %49 = phi <4 x i32> [ <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, %6 ], [ %40, %15 ]
  %50 = icmp eq i64 %11, 0
  br i1 %50, label %62, label %51

51:                                               ; preds = %44
  %52 = getelementptr inbounds i32, i32* %0, i64 %47
  %53 = bitcast i32* %52 to <4 x i32>*
  %54 = load <4 x i32>, <4 x i32>* %53, align 4
  %55 = getelementptr inbounds i32, i32* %52, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  %57 = load <4 x i32>, <4 x i32>* %56, align 4
  %58 = icmp sgt <4 x i32> %57, %49
  %59 = select <4 x i1> %58, <4 x i32> %57, <4 x i32> %49
  %60 = icmp sgt <4 x i32> %54, %48
  %61 = select <4 x i1> %60, <4 x i32> %54, <4 x i32> %48
  br label %62

62:                                               ; preds = %44, %51
  %63 = phi <4 x i32> [ %45, %44 ], [ %61, %51 ]
  %64 = phi <4 x i32> [ %46, %44 ], [ %59, %51 ]
  %65 = icmp sgt <4 x i32> %63, %64
  %66 = select <4 x i1> %65, <4 x i32> %63, <4 x i32> %64
  %67 = shufflevector <4 x i32> %66, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %68 = icmp sgt <4 x i32> %66, %67
  %69 = select <4 x i1> %68, <4 x i32> %66, <4 x i32> %67
  %70 = shufflevector <4 x i32> %69, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %71 = icmp sgt <4 x i32> %69, %70
  %72 = select <4 x i1> %71, <4 x i32> %69, <4 x i32> %70
  %73 = extractelement <4 x i32> %72, i32 0
  %74 = icmp eq i64 %7, %1
  br i1 %74, label %87, label %75

75:                                               ; preds = %62, %4
  %76 = phi i64 [ 0, %4 ], [ %7, %62 ]
  %77 = phi i32 [ -2147483648, %4 ], [ %73, %62 ]
  br label %78

78:                                               ; preds = %75, %78
  %79 = phi i64 [ %85, %78 ], [ %76, %75 ]
  %80 = phi i32 [ %84, %78 ], [ %77, %75 ]
  %81 = getelementptr inbounds i32, i32* %0, i64 %79
  %82 = load i32, i32* %81, align 4
  %83 = icmp sgt i32 %82, %80
  %84 = select i1 %83, i32 %82, i32 %80
  %85 = add nuw i64 %79, 1
  %86 = icmp eq i64 %85, %1
  br i1 %86, label %87, label %78, !llvm.loop !11

87:                                               ; preds = %78, %62, %2
  %88 = phi i32 [ -2147483648, %2 ], [ %73, %62 ], [ %84, %78 ]
  ret i32 %88
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden signext i16 @WebRtcSpl_MinValueW16C(i16* nocapture readonly, i64) local_unnamed_addr #0 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %90, label %4

4:                                                ; preds = %2
  %5 = icmp ult i64 %1, 16
  br i1 %5, label %78, label %6

6:                                                ; preds = %4
  %7 = and i64 %1, -16
  %8 = add i64 %7, -16
  %9 = lshr exact i64 %8, 4
  %10 = add nuw nsw i64 %9, 1
  %11 = and i64 %10, 1
  %12 = icmp eq i64 %8, 0
  br i1 %12, label %44, label %13

13:                                               ; preds = %6
  %14 = sub nuw nsw i64 %10, %11
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i64 [ 0, %13 ], [ %41, %15 ]
  %17 = phi <8 x i16> [ <i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767>, %13 ], [ %39, %15 ]
  %18 = phi <8 x i16> [ <i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767>, %13 ], [ %40, %15 ]
  %19 = phi i64 [ %14, %13 ], [ %42, %15 ]
  %20 = getelementptr inbounds i16, i16* %0, i64 %16
  %21 = bitcast i16* %20 to <8 x i16>*
  %22 = load <8 x i16>, <8 x i16>* %21, align 2
  %23 = getelementptr inbounds i16, i16* %20, i64 8
  %24 = bitcast i16* %23 to <8 x i16>*
  %25 = load <8 x i16>, <8 x i16>* %24, align 2
  %26 = icmp slt <8 x i16> %22, %17
  %27 = icmp slt <8 x i16> %25, %18
  %28 = select <8 x i1> %26, <8 x i16> %22, <8 x i16> %17
  %29 = select <8 x i1> %27, <8 x i16> %25, <8 x i16> %18
  %30 = or i64 %16, 16
  %31 = getelementptr inbounds i16, i16* %0, i64 %30
  %32 = bitcast i16* %31 to <8 x i16>*
  %33 = load <8 x i16>, <8 x i16>* %32, align 2
  %34 = getelementptr inbounds i16, i16* %31, i64 8
  %35 = bitcast i16* %34 to <8 x i16>*
  %36 = load <8 x i16>, <8 x i16>* %35, align 2
  %37 = icmp slt <8 x i16> %33, %28
  %38 = icmp slt <8 x i16> %36, %29
  %39 = select <8 x i1> %37, <8 x i16> %33, <8 x i16> %28
  %40 = select <8 x i1> %38, <8 x i16> %36, <8 x i16> %29
  %41 = add i64 %16, 32
  %42 = add i64 %19, -2
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %15, !llvm.loop !12

44:                                               ; preds = %15, %6
  %45 = phi <8 x i16> [ undef, %6 ], [ %39, %15 ]
  %46 = phi <8 x i16> [ undef, %6 ], [ %40, %15 ]
  %47 = phi i64 [ 0, %6 ], [ %41, %15 ]
  %48 = phi <8 x i16> [ <i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767>, %6 ], [ %39, %15 ]
  %49 = phi <8 x i16> [ <i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767>, %6 ], [ %40, %15 ]
  %50 = icmp eq i64 %11, 0
  br i1 %50, label %62, label %51

51:                                               ; preds = %44
  %52 = getelementptr inbounds i16, i16* %0, i64 %47
  %53 = bitcast i16* %52 to <8 x i16>*
  %54 = load <8 x i16>, <8 x i16>* %53, align 2
  %55 = getelementptr inbounds i16, i16* %52, i64 8
  %56 = bitcast i16* %55 to <8 x i16>*
  %57 = load <8 x i16>, <8 x i16>* %56, align 2
  %58 = icmp slt <8 x i16> %57, %49
  %59 = select <8 x i1> %58, <8 x i16> %57, <8 x i16> %49
  %60 = icmp slt <8 x i16> %54, %48
  %61 = select <8 x i1> %60, <8 x i16> %54, <8 x i16> %48
  br label %62

62:                                               ; preds = %44, %51
  %63 = phi <8 x i16> [ %45, %44 ], [ %61, %51 ]
  %64 = phi <8 x i16> [ %46, %44 ], [ %59, %51 ]
  %65 = icmp slt <8 x i16> %63, %64
  %66 = select <8 x i1> %65, <8 x i16> %63, <8 x i16> %64
  %67 = shufflevector <8 x i16> %66, <8 x i16> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %68 = icmp slt <8 x i16> %66, %67
  %69 = select <8 x i1> %68, <8 x i16> %66, <8 x i16> %67
  %70 = shufflevector <8 x i16> %69, <8 x i16> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %71 = icmp slt <8 x i16> %69, %70
  %72 = select <8 x i1> %71, <8 x i16> %69, <8 x i16> %70
  %73 = shufflevector <8 x i16> %72, <8 x i16> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %74 = icmp slt <8 x i16> %72, %73
  %75 = select <8 x i1> %74, <8 x i16> %72, <8 x i16> %73
  %76 = extractelement <8 x i16> %75, i32 0
  %77 = icmp eq i64 %7, %1
  br i1 %77, label %90, label %78

78:                                               ; preds = %62, %4
  %79 = phi i64 [ 0, %4 ], [ %7, %62 ]
  %80 = phi i16 [ 32767, %4 ], [ %76, %62 ]
  br label %81

81:                                               ; preds = %78, %81
  %82 = phi i64 [ %88, %81 ], [ %79, %78 ]
  %83 = phi i16 [ %87, %81 ], [ %80, %78 ]
  %84 = getelementptr inbounds i16, i16* %0, i64 %82
  %85 = load i16, i16* %84, align 2
  %86 = icmp slt i16 %85, %83
  %87 = select i1 %86, i16 %85, i16 %83
  %88 = add nuw i64 %82, 1
  %89 = icmp eq i64 %88, %1
  br i1 %89, label %90, label %81, !llvm.loop !13

90:                                               ; preds = %81, %62, %2
  %91 = phi i16 [ 32767, %2 ], [ %76, %62 ], [ %87, %81 ]
  ret i16 %91
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @WebRtcSpl_MinValueW32C(i32* nocapture readonly, i64) local_unnamed_addr #0 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %87, label %4

4:                                                ; preds = %2
  %5 = icmp ult i64 %1, 8
  br i1 %5, label %75, label %6

6:                                                ; preds = %4
  %7 = and i64 %1, -8
  %8 = add i64 %7, -8
  %9 = lshr exact i64 %8, 3
  %10 = add nuw nsw i64 %9, 1
  %11 = and i64 %10, 1
  %12 = icmp eq i64 %8, 0
  br i1 %12, label %44, label %13

13:                                               ; preds = %6
  %14 = sub nuw nsw i64 %10, %11
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i64 [ 0, %13 ], [ %41, %15 ]
  %17 = phi <4 x i32> [ <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, %13 ], [ %39, %15 ]
  %18 = phi <4 x i32> [ <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, %13 ], [ %40, %15 ]
  %19 = phi i64 [ %14, %13 ], [ %42, %15 ]
  %20 = getelementptr inbounds i32, i32* %0, i64 %16
  %21 = bitcast i32* %20 to <4 x i32>*
  %22 = load <4 x i32>, <4 x i32>* %21, align 4
  %23 = getelementptr inbounds i32, i32* %20, i64 4
  %24 = bitcast i32* %23 to <4 x i32>*
  %25 = load <4 x i32>, <4 x i32>* %24, align 4
  %26 = icmp slt <4 x i32> %22, %17
  %27 = icmp slt <4 x i32> %25, %18
  %28 = select <4 x i1> %26, <4 x i32> %22, <4 x i32> %17
  %29 = select <4 x i1> %27, <4 x i32> %25, <4 x i32> %18
  %30 = or i64 %16, 8
  %31 = getelementptr inbounds i32, i32* %0, i64 %30
  %32 = bitcast i32* %31 to <4 x i32>*
  %33 = load <4 x i32>, <4 x i32>* %32, align 4
  %34 = getelementptr inbounds i32, i32* %31, i64 4
  %35 = bitcast i32* %34 to <4 x i32>*
  %36 = load <4 x i32>, <4 x i32>* %35, align 4
  %37 = icmp slt <4 x i32> %33, %28
  %38 = icmp slt <4 x i32> %36, %29
  %39 = select <4 x i1> %37, <4 x i32> %33, <4 x i32> %28
  %40 = select <4 x i1> %38, <4 x i32> %36, <4 x i32> %29
  %41 = add i64 %16, 16
  %42 = add i64 %19, -2
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %15, !llvm.loop !14

44:                                               ; preds = %15, %6
  %45 = phi <4 x i32> [ undef, %6 ], [ %39, %15 ]
  %46 = phi <4 x i32> [ undef, %6 ], [ %40, %15 ]
  %47 = phi i64 [ 0, %6 ], [ %41, %15 ]
  %48 = phi <4 x i32> [ <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, %6 ], [ %39, %15 ]
  %49 = phi <4 x i32> [ <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, %6 ], [ %40, %15 ]
  %50 = icmp eq i64 %11, 0
  br i1 %50, label %62, label %51

51:                                               ; preds = %44
  %52 = getelementptr inbounds i32, i32* %0, i64 %47
  %53 = bitcast i32* %52 to <4 x i32>*
  %54 = load <4 x i32>, <4 x i32>* %53, align 4
  %55 = getelementptr inbounds i32, i32* %52, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  %57 = load <4 x i32>, <4 x i32>* %56, align 4
  %58 = icmp slt <4 x i32> %57, %49
  %59 = select <4 x i1> %58, <4 x i32> %57, <4 x i32> %49
  %60 = icmp slt <4 x i32> %54, %48
  %61 = select <4 x i1> %60, <4 x i32> %54, <4 x i32> %48
  br label %62

62:                                               ; preds = %44, %51
  %63 = phi <4 x i32> [ %45, %44 ], [ %61, %51 ]
  %64 = phi <4 x i32> [ %46, %44 ], [ %59, %51 ]
  %65 = icmp slt <4 x i32> %63, %64
  %66 = select <4 x i1> %65, <4 x i32> %63, <4 x i32> %64
  %67 = shufflevector <4 x i32> %66, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %68 = icmp slt <4 x i32> %66, %67
  %69 = select <4 x i1> %68, <4 x i32> %66, <4 x i32> %67
  %70 = shufflevector <4 x i32> %69, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %71 = icmp slt <4 x i32> %69, %70
  %72 = select <4 x i1> %71, <4 x i32> %69, <4 x i32> %70
  %73 = extractelement <4 x i32> %72, i32 0
  %74 = icmp eq i64 %7, %1
  br i1 %74, label %87, label %75

75:                                               ; preds = %62, %4
  %76 = phi i64 [ 0, %4 ], [ %7, %62 ]
  %77 = phi i32 [ 2147483647, %4 ], [ %73, %62 ]
  br label %78

78:                                               ; preds = %75, %78
  %79 = phi i64 [ %85, %78 ], [ %76, %75 ]
  %80 = phi i32 [ %84, %78 ], [ %77, %75 ]
  %81 = getelementptr inbounds i32, i32* %0, i64 %79
  %82 = load i32, i32* %81, align 4
  %83 = icmp slt i32 %82, %80
  %84 = select i1 %83, i32 %82, i32 %80
  %85 = add nuw i64 %79, 1
  %86 = icmp eq i64 %85, %1
  br i1 %86, label %87, label %78, !llvm.loop !15

87:                                               ; preds = %78, %62, %2
  %88 = phi i32 [ 2147483647, %2 ], [ %73, %62 ], [ %84, %78 ]
  ret i32 %88
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @WebRtcSpl_MaxAbsIndexW16(i16* nocapture readonly, i64) local_unnamed_addr #0 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %51, label %4

4:                                                ; preds = %2
  %5 = and i64 %1, 1
  %6 = icmp eq i64 %1, 1
  br i1 %6, label %36, label %7

7:                                                ; preds = %4
  %8 = sub i64 %1, %5
  br label %9

9:                                                ; preds = %9, %7
  %10 = phi i32 [ 0, %7 ], [ %32, %9 ]
  %11 = phi i64 [ 0, %7 ], [ %31, %9 ]
  %12 = phi i64 [ 0, %7 ], [ %33, %9 ]
  %13 = phi i64 [ %8, %7 ], [ %34, %9 ]
  %14 = getelementptr inbounds i16, i16* %0, i64 %12
  %15 = load i16, i16* %14, align 2
  %16 = sext i16 %15 to i32
  %17 = icmp slt i32 %16, 0
  %18 = sub nsw i32 0, %16
  %19 = select i1 %17, i32 %18, i32 %16
  %20 = icmp sgt i32 %19, %10
  %21 = select i1 %20, i64 %12, i64 %11
  %22 = select i1 %20, i32 %19, i32 %10
  %23 = or i64 %12, 1
  %24 = getelementptr inbounds i16, i16* %0, i64 %23
  %25 = load i16, i16* %24, align 2
  %26 = sext i16 %25 to i32
  %27 = icmp slt i32 %26, 0
  %28 = sub nsw i32 0, %26
  %29 = select i1 %27, i32 %28, i32 %26
  %30 = icmp sgt i32 %29, %22
  %31 = select i1 %30, i64 %23, i64 %21
  %32 = select i1 %30, i32 %29, i32 %22
  %33 = add nuw i64 %12, 2
  %34 = add i64 %13, -2
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %9

36:                                               ; preds = %9, %4
  %37 = phi i64 [ undef, %4 ], [ %31, %9 ]
  %38 = phi i32 [ 0, %4 ], [ %32, %9 ]
  %39 = phi i64 [ 0, %4 ], [ %31, %9 ]
  %40 = phi i64 [ 0, %4 ], [ %33, %9 ]
  %41 = icmp eq i64 %5, 0
  br i1 %41, label %51, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds i16, i16* %0, i64 %40
  %44 = load i16, i16* %43, align 2
  %45 = sext i16 %44 to i32
  %46 = icmp slt i32 %45, 0
  %47 = sub nsw i32 0, %45
  %48 = select i1 %46, i32 %47, i32 %45
  %49 = icmp sgt i32 %48, %38
  %50 = select i1 %49, i64 %40, i64 %39
  br label %51

51:                                               ; preds = %42, %36, %2
  %52 = phi i64 [ 0, %2 ], [ %37, %36 ], [ %50, %42 ]
  ret i64 %52
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden signext i16 @WebRtcSpl_MaxAbsElementW16(i16* nocapture readonly, i64) local_unnamed_addr #1 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %130, label %4

4:                                                ; preds = %2
  %5 = icmp ult i64 %1, 16
  br i1 %5, label %110, label %6

6:                                                ; preds = %4
  %7 = and i64 %1, -16
  %8 = add i64 %7, -16
  %9 = lshr exact i64 %8, 4
  %10 = add nuw nsw i64 %9, 1
  %11 = and i64 %10, 1
  %12 = icmp eq i64 %8, 0
  br i1 %12, label %54, label %13

13:                                               ; preds = %6
  %14 = sub nuw nsw i64 %10, %11
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi i64 [ 0, %13 ], [ %51, %15 ]
  %17 = phi <8 x i16> [ <i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768>, %13 ], [ %49, %15 ]
  %18 = phi <8 x i16> [ <i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768>, %13 ], [ %50, %15 ]
  %19 = phi <8 x i16> [ <i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767>, %13 ], [ %45, %15 ]
  %20 = phi <8 x i16> [ <i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767>, %13 ], [ %46, %15 ]
  %21 = phi i64 [ %14, %13 ], [ %52, %15 ]
  %22 = getelementptr inbounds i16, i16* %0, i64 %16
  %23 = bitcast i16* %22 to <8 x i16>*
  %24 = load <8 x i16>, <8 x i16>* %23, align 2
  %25 = getelementptr inbounds i16, i16* %22, i64 8
  %26 = bitcast i16* %25 to <8 x i16>*
  %27 = load <8 x i16>, <8 x i16>* %26, align 2
  %28 = icmp slt <8 x i16> %24, %19
  %29 = icmp slt <8 x i16> %27, %20
  %30 = select <8 x i1> %28, <8 x i16> %24, <8 x i16> %19
  %31 = select <8 x i1> %29, <8 x i16> %27, <8 x i16> %20
  %32 = icmp sgt <8 x i16> %24, %17
  %33 = icmp sgt <8 x i16> %27, %18
  %34 = select <8 x i1> %32, <8 x i16> %24, <8 x i16> %17
  %35 = select <8 x i1> %33, <8 x i16> %27, <8 x i16> %18
  %36 = or i64 %16, 16
  %37 = getelementptr inbounds i16, i16* %0, i64 %36
  %38 = bitcast i16* %37 to <8 x i16>*
  %39 = load <8 x i16>, <8 x i16>* %38, align 2
  %40 = getelementptr inbounds i16, i16* %37, i64 8
  %41 = bitcast i16* %40 to <8 x i16>*
  %42 = load <8 x i16>, <8 x i16>* %41, align 2
  %43 = icmp slt <8 x i16> %39, %30
  %44 = icmp slt <8 x i16> %42, %31
  %45 = select <8 x i1> %43, <8 x i16> %39, <8 x i16> %30
  %46 = select <8 x i1> %44, <8 x i16> %42, <8 x i16> %31
  %47 = icmp sgt <8 x i16> %39, %34
  %48 = icmp sgt <8 x i16> %42, %35
  %49 = select <8 x i1> %47, <8 x i16> %39, <8 x i16> %34
  %50 = select <8 x i1> %48, <8 x i16> %42, <8 x i16> %35
  %51 = add i64 %16, 32
  %52 = add i64 %21, -2
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %15, !llvm.loop !16

54:                                               ; preds = %15, %6
  %55 = phi <8 x i16> [ undef, %6 ], [ %45, %15 ]
  %56 = phi <8 x i16> [ undef, %6 ], [ %46, %15 ]
  %57 = phi <8 x i16> [ undef, %6 ], [ %49, %15 ]
  %58 = phi <8 x i16> [ undef, %6 ], [ %50, %15 ]
  %59 = phi i64 [ 0, %6 ], [ %51, %15 ]
  %60 = phi <8 x i16> [ <i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768>, %6 ], [ %49, %15 ]
  %61 = phi <8 x i16> [ <i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768>, %6 ], [ %50, %15 ]
  %62 = phi <8 x i16> [ <i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767>, %6 ], [ %45, %15 ]
  %63 = phi <8 x i16> [ <i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767>, %6 ], [ %46, %15 ]
  %64 = icmp eq i64 %11, 0
  br i1 %64, label %80, label %65

65:                                               ; preds = %54
  %66 = getelementptr inbounds i16, i16* %0, i64 %59
  %67 = bitcast i16* %66 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2
  %69 = getelementptr inbounds i16, i16* %66, i64 8
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2
  %72 = icmp sgt <8 x i16> %71, %61
  %73 = select <8 x i1> %72, <8 x i16> %71, <8 x i16> %61
  %74 = icmp sgt <8 x i16> %68, %60
  %75 = select <8 x i1> %74, <8 x i16> %68, <8 x i16> %60
  %76 = icmp slt <8 x i16> %71, %63
  %77 = select <8 x i1> %76, <8 x i16> %71, <8 x i16> %63
  %78 = icmp slt <8 x i16> %68, %62
  %79 = select <8 x i1> %78, <8 x i16> %68, <8 x i16> %62
  br label %80

80:                                               ; preds = %54, %65
  %81 = phi <8 x i16> [ %55, %54 ], [ %79, %65 ]
  %82 = phi <8 x i16> [ %56, %54 ], [ %77, %65 ]
  %83 = phi <8 x i16> [ %57, %54 ], [ %75, %65 ]
  %84 = phi <8 x i16> [ %58, %54 ], [ %73, %65 ]
  %85 = icmp slt <8 x i16> %81, %82
  %86 = select <8 x i1> %85, <8 x i16> %81, <8 x i16> %82
  %87 = shufflevector <8 x i16> %86, <8 x i16> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %88 = icmp slt <8 x i16> %86, %87
  %89 = select <8 x i1> %88, <8 x i16> %86, <8 x i16> %87
  %90 = shufflevector <8 x i16> %89, <8 x i16> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %91 = icmp slt <8 x i16> %89, %90
  %92 = select <8 x i1> %91, <8 x i16> %89, <8 x i16> %90
  %93 = shufflevector <8 x i16> %92, <8 x i16> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %94 = icmp slt <8 x i16> %92, %93
  %95 = select <8 x i1> %94, <8 x i16> %92, <8 x i16> %93
  %96 = extractelement <8 x i16> %95, i32 0
  %97 = icmp sgt <8 x i16> %83, %84
  %98 = select <8 x i1> %97, <8 x i16> %83, <8 x i16> %84
  %99 = shufflevector <8 x i16> %98, <8 x i16> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %100 = icmp sgt <8 x i16> %98, %99
  %101 = select <8 x i1> %100, <8 x i16> %98, <8 x i16> %99
  %102 = shufflevector <8 x i16> %101, <8 x i16> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %103 = icmp sgt <8 x i16> %101, %102
  %104 = select <8 x i1> %103, <8 x i16> %101, <8 x i16> %102
  %105 = shufflevector <8 x i16> %104, <8 x i16> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %106 = icmp sgt <8 x i16> %104, %105
  %107 = select <8 x i1> %106, <8 x i16> %104, <8 x i16> %105
  %108 = extractelement <8 x i16> %107, i32 0
  %109 = icmp eq i64 %7, %1
  br i1 %109, label %126, label %110

110:                                              ; preds = %80, %4
  %111 = phi i64 [ 0, %4 ], [ %7, %80 ]
  %112 = phi i16 [ -32768, %4 ], [ %108, %80 ]
  %113 = phi i16 [ 32767, %4 ], [ %96, %80 ]
  br label %114

114:                                              ; preds = %110, %114
  %115 = phi i64 [ %124, %114 ], [ %111, %110 ]
  %116 = phi i16 [ %123, %114 ], [ %112, %110 ]
  %117 = phi i16 [ %121, %114 ], [ %113, %110 ]
  %118 = getelementptr inbounds i16, i16* %0, i64 %115
  %119 = load i16, i16* %118, align 2
  %120 = icmp slt i16 %119, %117
  %121 = select i1 %120, i16 %119, i16 %117
  %122 = icmp sgt i16 %119, %116
  %123 = select i1 %122, i16 %119, i16 %116
  %124 = add nuw i64 %115, 1
  %125 = icmp eq i64 %124, %1
  br i1 %125, label %126, label %114, !llvm.loop !17

126:                                              ; preds = %114, %80
  %127 = phi i16 [ %96, %80 ], [ %121, %114 ]
  %128 = phi i16 [ %108, %80 ], [ %123, %114 ]
  %129 = icmp eq i16 %127, %128
  br i1 %129, label %137, label %130

130:                                              ; preds = %2, %126
  %131 = phi i16 [ %128, %126 ], [ -32768, %2 ]
  %132 = phi i16 [ %127, %126 ], [ 32767, %2 ]
  %133 = sext i16 %132 to i32
  %134 = sext i16 %131 to i32
  %135 = sub nsw i32 0, %134
  %136 = icmp slt i32 %133, %135
  br i1 %136, label %137, label %139

137:                                              ; preds = %130, %126
  %138 = phi i16 [ %132, %130 ], [ %127, %126 ]
  br label %139

139:                                              ; preds = %130, %137
  %140 = phi i16 [ %138, %137 ], [ %131, %130 ]
  ret i16 %140
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @WebRtcSpl_MinMaxW16(i16* nocapture readonly, i64, i16* nocapture, i16* nocapture) local_unnamed_addr #2 {
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %128, label %6

6:                                                ; preds = %4
  %7 = icmp ult i64 %1, 16
  br i1 %7, label %112, label %8

8:                                                ; preds = %6
  %9 = and i64 %1, -16
  %10 = add i64 %9, -16
  %11 = lshr exact i64 %10, 4
  %12 = add nuw nsw i64 %11, 1
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %10, 0
  br i1 %14, label %56, label %15

15:                                               ; preds = %8
  %16 = sub nuw nsw i64 %12, %13
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi i64 [ 0, %15 ], [ %53, %17 ]
  %19 = phi <8 x i16> [ <i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768>, %15 ], [ %51, %17 ]
  %20 = phi <8 x i16> [ <i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768>, %15 ], [ %52, %17 ]
  %21 = phi <8 x i16> [ <i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767>, %15 ], [ %47, %17 ]
  %22 = phi <8 x i16> [ <i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767>, %15 ], [ %48, %17 ]
  %23 = phi i64 [ %16, %15 ], [ %54, %17 ]
  %24 = getelementptr inbounds i16, i16* %0, i64 %18
  %25 = bitcast i16* %24 to <8 x i16>*
  %26 = load <8 x i16>, <8 x i16>* %25, align 2
  %27 = getelementptr inbounds i16, i16* %24, i64 8
  %28 = bitcast i16* %27 to <8 x i16>*
  %29 = load <8 x i16>, <8 x i16>* %28, align 2
  %30 = icmp slt <8 x i16> %26, %21
  %31 = icmp slt <8 x i16> %29, %22
  %32 = select <8 x i1> %30, <8 x i16> %26, <8 x i16> %21
  %33 = select <8 x i1> %31, <8 x i16> %29, <8 x i16> %22
  %34 = icmp sgt <8 x i16> %26, %19
  %35 = icmp sgt <8 x i16> %29, %20
  %36 = select <8 x i1> %34, <8 x i16> %26, <8 x i16> %19
  %37 = select <8 x i1> %35, <8 x i16> %29, <8 x i16> %20
  %38 = or i64 %18, 16
  %39 = getelementptr inbounds i16, i16* %0, i64 %38
  %40 = bitcast i16* %39 to <8 x i16>*
  %41 = load <8 x i16>, <8 x i16>* %40, align 2
  %42 = getelementptr inbounds i16, i16* %39, i64 8
  %43 = bitcast i16* %42 to <8 x i16>*
  %44 = load <8 x i16>, <8 x i16>* %43, align 2
  %45 = icmp slt <8 x i16> %41, %32
  %46 = icmp slt <8 x i16> %44, %33
  %47 = select <8 x i1> %45, <8 x i16> %41, <8 x i16> %32
  %48 = select <8 x i1> %46, <8 x i16> %44, <8 x i16> %33
  %49 = icmp sgt <8 x i16> %41, %36
  %50 = icmp sgt <8 x i16> %44, %37
  %51 = select <8 x i1> %49, <8 x i16> %41, <8 x i16> %36
  %52 = select <8 x i1> %50, <8 x i16> %44, <8 x i16> %37
  %53 = add i64 %18, 32
  %54 = add i64 %23, -2
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %17, !llvm.loop !18

56:                                               ; preds = %17, %8
  %57 = phi <8 x i16> [ undef, %8 ], [ %47, %17 ]
  %58 = phi <8 x i16> [ undef, %8 ], [ %48, %17 ]
  %59 = phi <8 x i16> [ undef, %8 ], [ %51, %17 ]
  %60 = phi <8 x i16> [ undef, %8 ], [ %52, %17 ]
  %61 = phi i64 [ 0, %8 ], [ %53, %17 ]
  %62 = phi <8 x i16> [ <i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768>, %8 ], [ %51, %17 ]
  %63 = phi <8 x i16> [ <i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768>, %8 ], [ %52, %17 ]
  %64 = phi <8 x i16> [ <i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767>, %8 ], [ %47, %17 ]
  %65 = phi <8 x i16> [ <i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767>, %8 ], [ %48, %17 ]
  %66 = icmp eq i64 %13, 0
  br i1 %66, label %82, label %67

67:                                               ; preds = %56
  %68 = getelementptr inbounds i16, i16* %0, i64 %61
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2
  %71 = getelementptr inbounds i16, i16* %68, i64 8
  %72 = bitcast i16* %71 to <8 x i16>*
  %73 = load <8 x i16>, <8 x i16>* %72, align 2
  %74 = icmp sgt <8 x i16> %73, %63
  %75 = select <8 x i1> %74, <8 x i16> %73, <8 x i16> %63
  %76 = icmp sgt <8 x i16> %70, %62
  %77 = select <8 x i1> %76, <8 x i16> %70, <8 x i16> %62
  %78 = icmp slt <8 x i16> %73, %65
  %79 = select <8 x i1> %78, <8 x i16> %73, <8 x i16> %65
  %80 = icmp slt <8 x i16> %70, %64
  %81 = select <8 x i1> %80, <8 x i16> %70, <8 x i16> %64
  br label %82

82:                                               ; preds = %56, %67
  %83 = phi <8 x i16> [ %57, %56 ], [ %81, %67 ]
  %84 = phi <8 x i16> [ %58, %56 ], [ %79, %67 ]
  %85 = phi <8 x i16> [ %59, %56 ], [ %77, %67 ]
  %86 = phi <8 x i16> [ %60, %56 ], [ %75, %67 ]
  %87 = icmp slt <8 x i16> %83, %84
  %88 = select <8 x i1> %87, <8 x i16> %83, <8 x i16> %84
  %89 = shufflevector <8 x i16> %88, <8 x i16> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %90 = icmp slt <8 x i16> %88, %89
  %91 = select <8 x i1> %90, <8 x i16> %88, <8 x i16> %89
  %92 = shufflevector <8 x i16> %91, <8 x i16> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %93 = icmp slt <8 x i16> %91, %92
  %94 = select <8 x i1> %93, <8 x i16> %91, <8 x i16> %92
  %95 = shufflevector <8 x i16> %94, <8 x i16> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %96 = icmp slt <8 x i16> %94, %95
  %97 = select <8 x i1> %96, <8 x i16> %94, <8 x i16> %95
  %98 = extractelement <8 x i16> %97, i32 0
  %99 = icmp sgt <8 x i16> %85, %86
  %100 = select <8 x i1> %99, <8 x i16> %85, <8 x i16> %86
  %101 = shufflevector <8 x i16> %100, <8 x i16> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %102 = icmp sgt <8 x i16> %100, %101
  %103 = select <8 x i1> %102, <8 x i16> %100, <8 x i16> %101
  %104 = shufflevector <8 x i16> %103, <8 x i16> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %105 = icmp sgt <8 x i16> %103, %104
  %106 = select <8 x i1> %105, <8 x i16> %103, <8 x i16> %104
  %107 = shufflevector <8 x i16> %106, <8 x i16> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %108 = icmp sgt <8 x i16> %106, %107
  %109 = select <8 x i1> %108, <8 x i16> %106, <8 x i16> %107
  %110 = extractelement <8 x i16> %109, i32 0
  %111 = icmp eq i64 %9, %1
  br i1 %111, label %128, label %112

112:                                              ; preds = %82, %6
  %113 = phi i64 [ 0, %6 ], [ %9, %82 ]
  %114 = phi i16 [ -32768, %6 ], [ %110, %82 ]
  %115 = phi i16 [ 32767, %6 ], [ %98, %82 ]
  br label %116

116:                                              ; preds = %112, %116
  %117 = phi i64 [ %126, %116 ], [ %113, %112 ]
  %118 = phi i16 [ %125, %116 ], [ %114, %112 ]
  %119 = phi i16 [ %123, %116 ], [ %115, %112 ]
  %120 = getelementptr inbounds i16, i16* %0, i64 %117
  %121 = load i16, i16* %120, align 2
  %122 = icmp slt i16 %121, %119
  %123 = select i1 %122, i16 %121, i16 %119
  %124 = icmp sgt i16 %121, %118
  %125 = select i1 %124, i16 %121, i16 %118
  %126 = add nuw i64 %117, 1
  %127 = icmp eq i64 %126, %1
  br i1 %127, label %128, label %116, !llvm.loop !19

128:                                              ; preds = %116, %82, %4
  %129 = phi i16 [ 32767, %4 ], [ %98, %82 ], [ %123, %116 ]
  %130 = phi i16 [ -32768, %4 ], [ %110, %82 ], [ %125, %116 ]
  store i16 %129, i16* %2, align 2
  store i16 %130, i16* %3, align 2
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @WebRtcSpl_MaxIndexW16(i16* nocapture readonly, i64) local_unnamed_addr #0 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %60, label %4

4:                                                ; preds = %2
  %5 = add i64 %1, -1
  %6 = and i64 %1, 3
  %7 = icmp ult i64 %5, 3
  br i1 %7, label %41, label %8

8:                                                ; preds = %4
  %9 = sub i64 %1, %6
  br label %10

10:                                               ; preds = %10, %8
  %11 = phi i16 [ -32768, %8 ], [ %37, %10 ]
  %12 = phi i64 [ 0, %8 ], [ %36, %10 ]
  %13 = phi i64 [ 0, %8 ], [ %38, %10 ]
  %14 = phi i64 [ %9, %8 ], [ %39, %10 ]
  %15 = getelementptr inbounds i16, i16* %0, i64 %13
  %16 = load i16, i16* %15, align 2
  %17 = icmp sgt i16 %16, %11
  %18 = select i1 %17, i64 %13, i64 %12
  %19 = select i1 %17, i16 %16, i16 %11
  %20 = or i64 %13, 1
  %21 = getelementptr inbounds i16, i16* %0, i64 %20
  %22 = load i16, i16* %21, align 2
  %23 = icmp sgt i16 %22, %19
  %24 = select i1 %23, i64 %20, i64 %18
  %25 = select i1 %23, i16 %22, i16 %19
  %26 = or i64 %13, 2
  %27 = getelementptr inbounds i16, i16* %0, i64 %26
  %28 = load i16, i16* %27, align 2
  %29 = icmp sgt i16 %28, %25
  %30 = select i1 %29, i64 %26, i64 %24
  %31 = select i1 %29, i16 %28, i16 %25
  %32 = or i64 %13, 3
  %33 = getelementptr inbounds i16, i16* %0, i64 %32
  %34 = load i16, i16* %33, align 2
  %35 = icmp sgt i16 %34, %31
  %36 = select i1 %35, i64 %32, i64 %30
  %37 = select i1 %35, i16 %34, i16 %31
  %38 = add nuw i64 %13, 4
  %39 = add i64 %14, -4
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %10

41:                                               ; preds = %10, %4
  %42 = phi i64 [ undef, %4 ], [ %36, %10 ]
  %43 = phi i16 [ -32768, %4 ], [ %37, %10 ]
  %44 = phi i64 [ 0, %4 ], [ %36, %10 ]
  %45 = phi i64 [ 0, %4 ], [ %38, %10 ]
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %60, label %47

47:                                               ; preds = %41, %47
  %48 = phi i16 [ %56, %47 ], [ %43, %41 ]
  %49 = phi i64 [ %55, %47 ], [ %44, %41 ]
  %50 = phi i64 [ %57, %47 ], [ %45, %41 ]
  %51 = phi i64 [ %58, %47 ], [ %6, %41 ]
  %52 = getelementptr inbounds i16, i16* %0, i64 %50
  %53 = load i16, i16* %52, align 2
  %54 = icmp sgt i16 %53, %48
  %55 = select i1 %54, i64 %50, i64 %49
  %56 = select i1 %54, i16 %53, i16 %48
  %57 = add nuw i64 %50, 1
  %58 = add i64 %51, -1
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %47, !llvm.loop !20

60:                                               ; preds = %41, %47, %2
  %61 = phi i64 [ 0, %2 ], [ %42, %41 ], [ %55, %47 ]
  ret i64 %61
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @WebRtcSpl_MaxIndexW32(i32* nocapture readonly, i64) local_unnamed_addr #0 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %60, label %4

4:                                                ; preds = %2
  %5 = add i64 %1, -1
  %6 = and i64 %1, 3
  %7 = icmp ult i64 %5, 3
  br i1 %7, label %41, label %8

8:                                                ; preds = %4
  %9 = sub i64 %1, %6
  br label %10

10:                                               ; preds = %10, %8
  %11 = phi i32 [ -2147483648, %8 ], [ %37, %10 ]
  %12 = phi i64 [ 0, %8 ], [ %36, %10 ]
  %13 = phi i64 [ 0, %8 ], [ %38, %10 ]
  %14 = phi i64 [ %9, %8 ], [ %39, %10 ]
  %15 = getelementptr inbounds i32, i32* %0, i64 %13
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %16, %11
  %18 = select i1 %17, i64 %13, i64 %12
  %19 = select i1 %17, i32 %16, i32 %11
  %20 = or i64 %13, 1
  %21 = getelementptr inbounds i32, i32* %0, i64 %20
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %22, %19
  %24 = select i1 %23, i64 %20, i64 %18
  %25 = select i1 %23, i32 %22, i32 %19
  %26 = or i64 %13, 2
  %27 = getelementptr inbounds i32, i32* %0, i64 %26
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, %25
  %30 = select i1 %29, i64 %26, i64 %24
  %31 = select i1 %29, i32 %28, i32 %25
  %32 = or i64 %13, 3
  %33 = getelementptr inbounds i32, i32* %0, i64 %32
  %34 = load i32, i32* %33, align 4
  %35 = icmp sgt i32 %34, %31
  %36 = select i1 %35, i64 %32, i64 %30
  %37 = select i1 %35, i32 %34, i32 %31
  %38 = add nuw i64 %13, 4
  %39 = add i64 %14, -4
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %10

41:                                               ; preds = %10, %4
  %42 = phi i64 [ undef, %4 ], [ %36, %10 ]
  %43 = phi i32 [ -2147483648, %4 ], [ %37, %10 ]
  %44 = phi i64 [ 0, %4 ], [ %36, %10 ]
  %45 = phi i64 [ 0, %4 ], [ %38, %10 ]
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %60, label %47

47:                                               ; preds = %41, %47
  %48 = phi i32 [ %56, %47 ], [ %43, %41 ]
  %49 = phi i64 [ %55, %47 ], [ %44, %41 ]
  %50 = phi i64 [ %57, %47 ], [ %45, %41 ]
  %51 = phi i64 [ %58, %47 ], [ %6, %41 ]
  %52 = getelementptr inbounds i32, i32* %0, i64 %50
  %53 = load i32, i32* %52, align 4
  %54 = icmp sgt i32 %53, %48
  %55 = select i1 %54, i64 %50, i64 %49
  %56 = select i1 %54, i32 %53, i32 %48
  %57 = add nuw i64 %50, 1
  %58 = add i64 %51, -1
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %47, !llvm.loop !22

60:                                               ; preds = %41, %47, %2
  %61 = phi i64 [ 0, %2 ], [ %42, %41 ], [ %55, %47 ]
  ret i64 %61
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @WebRtcSpl_MinIndexW16(i16* nocapture readonly, i64) local_unnamed_addr #0 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %60, label %4

4:                                                ; preds = %2
  %5 = add i64 %1, -1
  %6 = and i64 %1, 3
  %7 = icmp ult i64 %5, 3
  br i1 %7, label %41, label %8

8:                                                ; preds = %4
  %9 = sub i64 %1, %6
  br label %10

10:                                               ; preds = %10, %8
  %11 = phi i16 [ 32767, %8 ], [ %37, %10 ]
  %12 = phi i64 [ 0, %8 ], [ %36, %10 ]
  %13 = phi i64 [ 0, %8 ], [ %38, %10 ]
  %14 = phi i64 [ %9, %8 ], [ %39, %10 ]
  %15 = getelementptr inbounds i16, i16* %0, i64 %13
  %16 = load i16, i16* %15, align 2
  %17 = icmp slt i16 %16, %11
  %18 = select i1 %17, i64 %13, i64 %12
  %19 = select i1 %17, i16 %16, i16 %11
  %20 = or i64 %13, 1
  %21 = getelementptr inbounds i16, i16* %0, i64 %20
  %22 = load i16, i16* %21, align 2
  %23 = icmp slt i16 %22, %19
  %24 = select i1 %23, i64 %20, i64 %18
  %25 = select i1 %23, i16 %22, i16 %19
  %26 = or i64 %13, 2
  %27 = getelementptr inbounds i16, i16* %0, i64 %26
  %28 = load i16, i16* %27, align 2
  %29 = icmp slt i16 %28, %25
  %30 = select i1 %29, i64 %26, i64 %24
  %31 = select i1 %29, i16 %28, i16 %25
  %32 = or i64 %13, 3
  %33 = getelementptr inbounds i16, i16* %0, i64 %32
  %34 = load i16, i16* %33, align 2
  %35 = icmp slt i16 %34, %31
  %36 = select i1 %35, i64 %32, i64 %30
  %37 = select i1 %35, i16 %34, i16 %31
  %38 = add nuw i64 %13, 4
  %39 = add i64 %14, -4
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %10

41:                                               ; preds = %10, %4
  %42 = phi i64 [ undef, %4 ], [ %36, %10 ]
  %43 = phi i16 [ 32767, %4 ], [ %37, %10 ]
  %44 = phi i64 [ 0, %4 ], [ %36, %10 ]
  %45 = phi i64 [ 0, %4 ], [ %38, %10 ]
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %60, label %47

47:                                               ; preds = %41, %47
  %48 = phi i16 [ %56, %47 ], [ %43, %41 ]
  %49 = phi i64 [ %55, %47 ], [ %44, %41 ]
  %50 = phi i64 [ %57, %47 ], [ %45, %41 ]
  %51 = phi i64 [ %58, %47 ], [ %6, %41 ]
  %52 = getelementptr inbounds i16, i16* %0, i64 %50
  %53 = load i16, i16* %52, align 2
  %54 = icmp slt i16 %53, %48
  %55 = select i1 %54, i64 %50, i64 %49
  %56 = select i1 %54, i16 %53, i16 %48
  %57 = add nuw i64 %50, 1
  %58 = add i64 %51, -1
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %47, !llvm.loop !23

60:                                               ; preds = %41, %47, %2
  %61 = phi i64 [ 0, %2 ], [ %42, %41 ], [ %55, %47 ]
  ret i64 %61
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @WebRtcSpl_MinIndexW32(i32* nocapture readonly, i64) local_unnamed_addr #0 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %60, label %4

4:                                                ; preds = %2
  %5 = add i64 %1, -1
  %6 = and i64 %1, 3
  %7 = icmp ult i64 %5, 3
  br i1 %7, label %41, label %8

8:                                                ; preds = %4
  %9 = sub i64 %1, %6
  br label %10

10:                                               ; preds = %10, %8
  %11 = phi i32 [ 2147483647, %8 ], [ %37, %10 ]
  %12 = phi i64 [ 0, %8 ], [ %36, %10 ]
  %13 = phi i64 [ 0, %8 ], [ %38, %10 ]
  %14 = phi i64 [ %9, %8 ], [ %39, %10 ]
  %15 = getelementptr inbounds i32, i32* %0, i64 %13
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %16, %11
  %18 = select i1 %17, i64 %13, i64 %12
  %19 = select i1 %17, i32 %16, i32 %11
  %20 = or i64 %13, 1
  %21 = getelementptr inbounds i32, i32* %0, i64 %20
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, %19
  %24 = select i1 %23, i64 %20, i64 %18
  %25 = select i1 %23, i32 %22, i32 %19
  %26 = or i64 %13, 2
  %27 = getelementptr inbounds i32, i32* %0, i64 %26
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %28, %25
  %30 = select i1 %29, i64 %26, i64 %24
  %31 = select i1 %29, i32 %28, i32 %25
  %32 = or i64 %13, 3
  %33 = getelementptr inbounds i32, i32* %0, i64 %32
  %34 = load i32, i32* %33, align 4
  %35 = icmp slt i32 %34, %31
  %36 = select i1 %35, i64 %32, i64 %30
  %37 = select i1 %35, i32 %34, i32 %31
  %38 = add nuw i64 %13, 4
  %39 = add i64 %14, -4
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %10

41:                                               ; preds = %10, %4
  %42 = phi i64 [ undef, %4 ], [ %36, %10 ]
  %43 = phi i32 [ 2147483647, %4 ], [ %37, %10 ]
  %44 = phi i64 [ 0, %4 ], [ %36, %10 ]
  %45 = phi i64 [ 0, %4 ], [ %38, %10 ]
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %60, label %47

47:                                               ; preds = %41, %47
  %48 = phi i32 [ %56, %47 ], [ %43, %41 ]
  %49 = phi i64 [ %55, %47 ], [ %44, %41 ]
  %50 = phi i64 [ %57, %47 ], [ %45, %41 ]
  %51 = phi i64 [ %58, %47 ], [ %6, %41 ]
  %52 = getelementptr inbounds i32, i32* %0, i64 %50
  %53 = load i32, i32* %52, align 4
  %54 = icmp slt i32 %53, %48
  %55 = select i1 %54, i64 %50, i64 %49
  %56 = select i1 %54, i32 %53, i32 %48
  %57 = add nuw i64 %50, 1
  %58 = add i64 %51, -1
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %47, !llvm.loop !24

60:                                               ; preds = %41, %47, %2
  %61 = phi i64 [ 0, %2 ], [ %42, %41 ], [ %55, %47 ]
  ret i64 %61
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5, !3}
!5 = !{!"llvm.loop.unroll.runtime.disable"}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !5, !3}
!8 = distinct !{!8, !3}
!9 = distinct !{!9, !5, !3}
!10 = distinct !{!10, !3}
!11 = distinct !{!11, !5, !3}
!12 = distinct !{!12, !3}
!13 = distinct !{!13, !5, !3}
!14 = distinct !{!14, !3}
!15 = distinct !{!15, !5, !3}
!16 = distinct !{!16, !3}
!17 = distinct !{!17, !5, !3}
!18 = distinct !{!18, !3}
!19 = distinct !{!19, !5, !3}
!20 = distinct !{!20, !21}
!21 = !{!"llvm.loop.unroll.disable"}
!22 = distinct !{!22, !21}
!23 = distinct !{!23, !21}
!24 = distinct !{!24, !21}
