; ModuleID = '../../third_party/blink/renderer/platform/exported/web_url_loader_test_delegate.cc'
source_filename = "../../third_party/blink/renderer/platform/exported/web_url_loader_test_delegate.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::WebURLLoaderTestDelegate" = type { i32 (...)** }
%"class.blink::WebURLLoaderClient" = type { i32 (...)** }
%"class.blink::WebURLResponse" = type opaque
%"struct.blink::WebURLError" = type { i32, i32, %"struct.net::ResolveErrorInfo", i8, i8, [6 x i8], %"class.blink::WebURL", %"class.absl::optional", i8, %"class.absl::optional.2", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"class.blink::WebString" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type opaque
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [7 x i8], %union.anon }
%union.anon = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.2" = type { %"class.absl::optional_internal::optional_data.3" }
%"class.absl::optional_internal::optional_data.3" = type { %"class.absl::optional_internal::optional_data_base.4" }
%"class.absl::optional_internal::optional_data_base.4" = type { %"class.absl::optional_internal::optional_data_dtor_base.5" }
%"class.absl::optional_internal::optional_data_dtor_base.5" = type { i8, %union.anon.6 }
%union.anon.6 = type { i32 }
%"struct.blink::WebNavigationParams" = type opaque

$_ZN5blink24WebURLLoaderTestDelegate28FillNavigationParamsResponseEPNS_19WebNavigationParamsE = comdat any

@_ZTVN5blink24WebURLLoaderTestDelegateE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WebURLLoaderTestDelegate"*)* @_ZN5blink24WebURLLoaderTestDelegateD2Ev to i8*), i8* bitcast (void (%"class.blink::WebURLLoaderTestDelegate"*)* @_ZN5blink24WebURLLoaderTestDelegateD0Ev to i8*), i8* bitcast (void (%"class.blink::WebURLLoaderTestDelegate"*, %"class.blink::WebURLLoaderClient"*, %"class.blink::WebURLResponse"*)* @_ZN5blink24WebURLLoaderTestDelegate18DidReceiveResponseEPNS_18WebURLLoaderClientERKNS_14WebURLResponseE to i8*), i8* bitcast (void (%"class.blink::WebURLLoaderTestDelegate"*, %"class.blink::WebURLLoaderClient"*, i8*, i32)* @_ZN5blink24WebURLLoaderTestDelegate14DidReceiveDataEPNS_18WebURLLoaderClientEPKci to i8*), i8* bitcast (void (%"class.blink::WebURLLoaderTestDelegate"*, %"class.blink::WebURLLoaderClient"*, %"struct.blink::WebURLError"*, i64, i64, i64)* @_ZN5blink24WebURLLoaderTestDelegate7DidFailEPNS_18WebURLLoaderClientERKNS_11WebURLErrorElll to i8*), i8* bitcast (void (%"class.blink::WebURLLoaderTestDelegate"*, %"class.blink::WebURLLoaderClient"*, i64, i64, i64, i64)* @_ZN5blink24WebURLLoaderTestDelegate16DidFinishLoadingEPNS_18WebURLLoaderClientEN4base9TimeTicksElll to i8*), i8* bitcast (i1 (%"class.blink::WebURLLoaderTestDelegate"*, %"struct.blink::WebNavigationParams"*)* @_ZN5blink24WebURLLoaderTestDelegate28FillNavigationParamsResponseEPNS_19WebNavigationParamsE to i8*)] }, align 8

@_ZN5blink24WebURLLoaderTestDelegateC1Ev = hidden unnamed_addr alias void (%"class.blink::WebURLLoaderTestDelegate"*), void (%"class.blink::WebURLLoaderTestDelegate"*)* @_ZN5blink24WebURLLoaderTestDelegateC2Ev
@_ZN5blink24WebURLLoaderTestDelegateD1Ev = hidden unnamed_addr alias void (%"class.blink::WebURLLoaderTestDelegate"*), void (%"class.blink::WebURLLoaderTestDelegate"*)* @_ZN5blink24WebURLLoaderTestDelegateD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink24WebURLLoaderTestDelegateC2Ev(%"class.blink::WebURLLoaderTestDelegate"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebURLLoaderTestDelegate", %"class.blink::WebURLLoaderTestDelegate"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink24WebURLLoaderTestDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink24WebURLLoaderTestDelegateD2Ev(%"class.blink::WebURLLoaderTestDelegate"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24WebURLLoaderTestDelegateD0Ev(%"class.blink::WebURLLoaderTestDelegate"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::WebURLLoaderTestDelegate"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24WebURLLoaderTestDelegate18DidReceiveResponseEPNS_18WebURLLoaderClientERKNS_14WebURLResponseE(%"class.blink::WebURLLoaderTestDelegate"* nocapture readnone, %"class.blink::WebURLLoaderClient"*, %"class.blink::WebURLResponse"*) unnamed_addr #2 align 2 {
  %4 = bitcast %"class.blink::WebURLLoaderClient"* %1 to void (%"class.blink::WebURLLoaderClient"*, %"class.blink::WebURLResponse"*)***
  %5 = load void (%"class.blink::WebURLLoaderClient"*, %"class.blink::WebURLResponse"*)**, void (%"class.blink::WebURLLoaderClient"*, %"class.blink::WebURLResponse"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::WebURLLoaderClient"*, %"class.blink::WebURLResponse"*)*, void (%"class.blink::WebURLLoaderClient"*, %"class.blink::WebURLResponse"*)** %5, i64 2
  %7 = load void (%"class.blink::WebURLLoaderClient"*, %"class.blink::WebURLResponse"*)*, void (%"class.blink::WebURLLoaderClient"*, %"class.blink::WebURLResponse"*)** %6, align 8
  tail call void %7(%"class.blink::WebURLLoaderClient"* %1, %"class.blink::WebURLResponse"* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24WebURLLoaderTestDelegate14DidReceiveDataEPNS_18WebURLLoaderClientEPKci(%"class.blink::WebURLLoaderTestDelegate"* nocapture readnone, %"class.blink::WebURLLoaderClient"*, i8*, i32) unnamed_addr #2 align 2 {
  %5 = bitcast %"class.blink::WebURLLoaderClient"* %1 to void (%"class.blink::WebURLLoaderClient"*, i8*, i32)***
  %6 = load void (%"class.blink::WebURLLoaderClient"*, i8*, i32)**, void (%"class.blink::WebURLLoaderClient"*, i8*, i32)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::WebURLLoaderClient"*, i8*, i32)*, void (%"class.blink::WebURLLoaderClient"*, i8*, i32)** %6, i64 4
  %8 = load void (%"class.blink::WebURLLoaderClient"*, i8*, i32)*, void (%"class.blink::WebURLLoaderClient"*, i8*, i32)** %7, align 8
  tail call void %8(%"class.blink::WebURLLoaderClient"* %1, i8* %2, i32 %3) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24WebURLLoaderTestDelegate7DidFailEPNS_18WebURLLoaderClientERKNS_11WebURLErrorElll(%"class.blink::WebURLLoaderTestDelegate"* nocapture readnone, %"class.blink::WebURLLoaderClient"*, %"struct.blink::WebURLError"* dereferenceable(184), i64, i64, i64) unnamed_addr #2 align 2 {
  %7 = tail call i64 @_ZN4base9TimeTicks3NowEv() #6
  %8 = bitcast %"class.blink::WebURLLoaderClient"* %1 to void (%"class.blink::WebURLLoaderClient"*, %"struct.blink::WebURLError"*, i64, i64, i64, i64)***
  %9 = load void (%"class.blink::WebURLLoaderClient"*, %"struct.blink::WebURLError"*, i64, i64, i64, i64)**, void (%"class.blink::WebURLLoaderClient"*, %"struct.blink::WebURLError"*, i64, i64, i64, i64)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::WebURLLoaderClient"*, %"struct.blink::WebURLError"*, i64, i64, i64, i64)*, void (%"class.blink::WebURLLoaderClient"*, %"struct.blink::WebURLError"*, i64, i64, i64, i64)** %9, i64 8
  %11 = load void (%"class.blink::WebURLLoaderClient"*, %"struct.blink::WebURLError"*, i64, i64, i64, i64)*, void (%"class.blink::WebURLLoaderClient"*, %"struct.blink::WebURLError"*, i64, i64, i64, i64)** %10, align 8
  tail call void %11(%"class.blink::WebURLLoaderClient"* %1, %"struct.blink::WebURLError"* dereferenceable(184) %2, i64 %7, i64 %3, i64 %4, i64 %5) #6
  ret void
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24WebURLLoaderTestDelegate16DidFinishLoadingEPNS_18WebURLLoaderClientEN4base9TimeTicksElll(%"class.blink::WebURLLoaderTestDelegate"* nocapture readnone, %"class.blink::WebURLLoaderClient"*, i64, i64, i64, i64) unnamed_addr #2 align 2 {
  %7 = bitcast %"class.blink::WebURLLoaderClient"* %1 to void (%"class.blink::WebURLLoaderClient"*, i64, i64, i64, i64, i1)***
  %8 = load void (%"class.blink::WebURLLoaderClient"*, i64, i64, i64, i64, i1)**, void (%"class.blink::WebURLLoaderClient"*, i64, i64, i64, i64, i1)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::WebURLLoaderClient"*, i64, i64, i64, i64, i1)*, void (%"class.blink::WebURLLoaderClient"*, i64, i64, i64, i64, i1)** %8, i64 7
  %10 = load void (%"class.blink::WebURLLoaderClient"*, i64, i64, i64, i64, i1)*, void (%"class.blink::WebURLLoaderClient"*, i64, i64, i64, i64, i1)** %9, align 8
  tail call void %10(%"class.blink::WebURLLoaderClient"* %1, i64 %2, i64 %3, i64 %4, i64 %5, i1 zeroext false) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink24WebURLLoaderTestDelegate28FillNavigationParamsResponseEPNS_19WebNavigationParamsE(%"class.blink::WebURLLoaderTestDelegate"*, %"struct.blink::WebNavigationParams"*) unnamed_addr #2 comdat align 2 {
  ret i1 false
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { builtin nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
