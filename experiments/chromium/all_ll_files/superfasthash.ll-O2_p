; ModuleID = '../../base/third_party/superfasthash/superfasthash.c'
source_filename = "../../base/third_party/superfasthash/superfasthash.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @SuperFastHash(i8* readonly, i32) local_unnamed_addr #0 {
  %3 = icmp slt i32 %1, 1
  %4 = icmp eq i8* %0, null
  %5 = or i1 %4, %3
  br i1 %5, label %102, label %6

6:                                                ; preds = %2
  %7 = and i32 %1, 3
  %8 = lshr i32 %1, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %46, label %10

10:                                               ; preds = %6
  %11 = add nsw i32 %8, -1
  %12 = zext i32 %11 to i64
  %13 = shl nuw nsw i64 %12, 2
  %14 = add nuw nsw i64 %13, 4
  br label %15

15:                                               ; preds = %10, %15
  %16 = phi i32 [ %41, %15 ], [ %1, %10 ]
  %17 = phi i32 [ %42, %15 ], [ %8, %10 ]
  %18 = phi i8* [ %39, %15 ], [ %0, %10 ]
  %19 = getelementptr inbounds i8, i8* %18, i64 1
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = shl nuw nsw i32 %21, 8
  %23 = load i8, i8* %18, align 1
  %24 = zext i8 %23 to i32
  %25 = or i32 %22, %24
  %26 = add i32 %25, %16
  %27 = getelementptr inbounds i8, i8* %18, i64 2
  %28 = getelementptr inbounds i8, i8* %18, i64 3
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = shl nuw nsw i32 %30, 8
  %32 = load i8, i8* %27, align 1
  %33 = zext i8 %32 to i32
  %34 = or i32 %31, %33
  %35 = shl nuw nsw i32 %34, 11
  %36 = shl i32 %26, 16
  %37 = xor i32 %36, %26
  %38 = xor i32 %37, %35
  %39 = getelementptr inbounds i8, i8* %18, i64 4
  %40 = lshr i32 %38, 11
  %41 = add i32 %40, %38
  %42 = add nsw i32 %17, -1
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %15, label %44

44:                                               ; preds = %15
  %45 = getelementptr i8, i8* %0, i64 %14
  br label %46

46:                                               ; preds = %44, %6
  %47 = phi i8* [ %0, %6 ], [ %45, %44 ]
  %48 = phi i32 [ %1, %6 ], [ %41, %44 ]
  switch i32 %7, label %88 [
    i32 3, label %49
    i32 2, label %67
    i32 1, label %80
  ]

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %47, i64 1
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = shl nuw nsw i32 %52, 8
  %54 = load i8, i8* %47, align 1
  %55 = zext i8 %54 to i32
  %56 = or i32 %53, %55
  %57 = add i32 %56, %48
  %58 = shl i32 %57, 16
  %59 = getelementptr inbounds i8, i8* %47, i64 2
  %60 = load i8, i8* %59, align 1
  %61 = sext i8 %60 to i32
  %62 = shl nsw i32 %61, 18
  %63 = xor i32 %62, %57
  %64 = xor i32 %63, %58
  %65 = lshr i32 %64, 11
  %66 = add i32 %65, %64
  br label %88

67:                                               ; preds = %46
  %68 = getelementptr inbounds i8, i8* %47, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i32
  %71 = shl nuw nsw i32 %70, 8
  %72 = load i8, i8* %47, align 1
  %73 = zext i8 %72 to i32
  %74 = or i32 %71, %73
  %75 = add i32 %74, %48
  %76 = shl i32 %75, 11
  %77 = xor i32 %76, %75
  %78 = lshr i32 %77, 17
  %79 = add i32 %78, %77
  br label %88

80:                                               ; preds = %46
  %81 = load i8, i8* %47, align 1
  %82 = sext i8 %81 to i32
  %83 = add i32 %48, %82
  %84 = shl i32 %83, 10
  %85 = xor i32 %84, %83
  %86 = lshr i32 %85, 1
  %87 = add i32 %86, %85
  br label %88

88:                                               ; preds = %80, %46, %67, %49
  %89 = phi i32 [ %48, %46 ], [ %87, %80 ], [ %79, %67 ], [ %66, %49 ]
  %90 = shl i32 %89, 3
  %91 = xor i32 %90, %89
  %92 = lshr i32 %91, 5
  %93 = add i32 %92, %91
  %94 = shl i32 %93, 4
  %95 = xor i32 %94, %93
  %96 = lshr i32 %95, 17
  %97 = add i32 %96, %95
  %98 = shl i32 %97, 25
  %99 = xor i32 %98, %97
  %100 = lshr i32 %99, 6
  %101 = add i32 %100, %99
  br label %102

102:                                              ; preds = %2, %88
  %103 = phi i32 [ %101, %88 ], [ 0, %2 ]
  ret i32 %103
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
