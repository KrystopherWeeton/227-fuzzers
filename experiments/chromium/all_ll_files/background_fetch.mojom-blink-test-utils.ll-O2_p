; ModuleID = 'gen/third_party/blink/public/mojom/background_fetch/background_fetch.mojom-blink-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/background_fetch/background_fetch.mojom-blink-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverAsyncWaiter" = type { %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* }
%"class.blink::mojom::blink::BackgroundFetchRegistrationObserver" = type { i32 (...)** }
%"class.blink::mojom::blink::BackgroundFetchServiceAsyncWaiter" = type { %"class.blink::mojom::blink::BackgroundFetchService"* }
%"class.blink::mojom::blink::BackgroundFetchService" = type { i32 (...)** }
%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceAsyncWaiter" = type { %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* }
%"class.blink::mojom::blink::BackgroundFetchRegistrationService" = type { i32 (...)** }
%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverInterceptorForTesting" = type { %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::mojom::blink::FetchAPIRequest"* }
%"class.blink::mojom::blink::FetchAPIRequest" = type { i32, i8, i32, i32, %"class.blink::KURL", %"class.WTF::String", %"class.WTF::HashMap", %class.scoped_refptr.5, %"class.blink::ResourceRequestBody", %"class.mojo::StructPtr.21", i32, i32, i32, %"class.WTF::String", i32, %"class.absl::optional.28", i8, i8, i8, %"class.WTF::String" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.blink::KURL"* }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.5 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.6" }
%"struct.std::__1::atomic.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl.9" }
%"struct.std::__1::__cxx_atomic_impl.9" = type { %"struct.std::__1::__cxx_atomic_base_impl.10" }
%"struct.std::__1::__cxx_atomic_base_impl.10" = type { i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.blink::ResourceRequestBody" = type { %class.scoped_refptr.11, %"class.mojo::PendingRemote.20" }
%class.scoped_refptr.11 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type <{ %"class.WTF::RefCounted", [4 x i8], %"class.WTF::Vector", i64, %"class.WTF::Vector.12", i8, [7 x i8] }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FormDataElement"*, i32, i32 }
%"class.blink::FormDataElement" = type { i32, %"class.WTF::Vector.12", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.5, i64, i64, %"class.absl::optional", %class.scoped_refptr.17 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr.17 = type { %"class.blink::WrappedDataPipeGetter"* }
%"class.blink::WrappedDataPipeGetter" = type opaque
%"class.WTF::Vector.12" = type { %"class.WTF::VectorBuffer.13" }
%"class.WTF::VectorBuffer.13" = type { %"class.WTF::VectorBufferBase.14" }
%"class.WTF::VectorBufferBase.14" = type { i8*, i32, i32 }
%"class.mojo::PendingRemote.20" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::StructPtr.21" = type { %"class.std::__1::unique_ptr.22" }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::mojom::blink::Referrer"* }
%"class.blink::mojom::blink::Referrer" = type <{ %"class.blink::KURL", i32, [4 x i8] }>
%"class.absl::optional.28" = type { %"class.absl::optional_internal::optional_data.29" }
%"class.absl::optional_internal::optional_data.29" = type { %"class.absl::optional_internal::optional_data_base.30" }
%"class.absl::optional_internal::optional_data_base.30" = type { %"class.absl::optional_internal::optional_data_dtor_base.31" }
%"class.absl::optional_internal::optional_data_dtor_base.31" = type { i8, %union.anon.32 }
%union.anon.32 = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.mojo::StructPtr.36" = type { %"class.std::__1::unique_ptr.37" }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.blink::mojom::blink::FetchAPIResponse"* }
%"class.blink::mojom::blink::FetchAPIResponse" = type { %"class.WTF::Vector.40", i16, %"class.WTF::String", i32, i64, i32, [4 x i8], %"class.WTF::HashMap.45", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.5, i32, %"class.base::Time", %"class.WTF::String", %"class.WTF::Vector.49", %class.scoped_refptr.5, %class.scoped_refptr.5, %"class.mojo::StructPtr.54", i32, %"class.WTF::String", i8, i8, %"class.absl::optional.143" }
%"class.WTF::Vector.40" = type { %"class.WTF::VectorBuffer.41" }
%"class.WTF::VectorBuffer.41" = type { %"class.WTF::VectorBufferBase.42" }
%"class.WTF::VectorBufferBase.42" = type { %"class.blink::KURL"*, i32, i32 }
%"class.WTF::HashMap.45" = type { %"class.WTF::HashTable.46" }
%"class.WTF::HashTable.46" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Vector.49" = type { %"class.WTF::VectorBuffer.50" }
%"class.WTF::VectorBuffer.50" = type { %"class.WTF::VectorBufferBase.51" }
%"class.WTF::VectorBufferBase.51" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::StructPtr.54" = type { %"class.std::__1::unique_ptr.55" }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.network::mojom::blink::ParsedHeaders"* }
%"class.network::mojom::blink::ParsedHeaders" = type <{ %"class.WTF::Vector.58", %"class.mojo::StructPtr.94", %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginOpenerPolicy", i8, [7 x i8], %"class.absl::optional.111", %"class.base::TimeDelta", %"class.absl::optional.111", i32, [4 x i8], %"class.WTF::Vector.121", %"class.mojo::StructPtr.133", i8, [7 x i8] }>
%"class.WTF::Vector.58" = type { %"class.WTF::VectorBuffer.59" }
%"class.WTF::VectorBuffer.59" = type { %"class.WTF::VectorBufferBase.60" }
%"class.WTF::VectorBufferBase.60" = type { %"class.mojo::StructPtr.61"*, i32, i32 }
%"class.mojo::StructPtr.61" = type { %"class.std::__1::unique_ptr.62" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.65", %"class.WTF::HashMap.72", %"class.WTF::HashMap.77", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.49", i32, %"class.mojo::StructPtr.82", %"class.WTF::Vector.49" }
%"class.mojo::StructPtr.65" = type { %"class.std::__1::unique_ptr.66" }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.72" = type { %"class.WTF::HashTable.73" }
%"class.WTF::HashTable.73" = type <{ %"struct.WTF::KeyValuePair.76"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.76" = type opaque
%"class.WTF::HashMap.77" = type { %"class.WTF::HashTable.78" }
%"class.WTF::HashTable.78" = type <{ %"struct.WTF::KeyValuePair.81"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.81" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.82" = type { %"class.std::__1::unique_ptr.83" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.49", i8, i8, [6 x i8] }>
%"class.mojo::StructPtr.94" = type { %"class.std::__1::unique_ptr.95" }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.network::mojom::blink::AllowCSPFromHeaderValue"* }
%"class.network::mojom::blink::AllowCSPFromHeaderValue" = type { i32, %"union.network::mojom::blink::AllowCSPFromHeaderValue::Union_" }
%"union.network::mojom::blink::AllowCSPFromHeaderValue::Union_" = type { %class.scoped_refptr.98* }
%class.scoped_refptr.98 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.156", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.148", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.98 }
%"class.WTF::RefCounted.156" = type { %"class.base::RefCounted.157" }
%"class.base::RefCounted.157" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.148" = type { %"class.absl::optional_internal::optional_data.149" }
%"class.absl::optional_internal::optional_data.149" = type { %"class.absl::optional_internal::optional_data_base.150" }
%"class.absl::optional_internal::optional_data_base.150" = type { %"class.absl::optional_internal::optional_data_dtor_base.151" }
%"class.absl::optional_internal::optional_data_dtor_base.151" = type { i8, %union.anon.152 }
%union.anon.152 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional.102", i32, %"class.absl::optional.102" }
%"class.absl::optional.102" = type { %"class.absl::optional_internal::optional_data.103" }
%"class.absl::optional_internal::optional_data.103" = type { %"class.absl::optional_internal::optional_data_base.104" }
%"class.absl::optional_internal::optional_data_base.104" = type { %"class.absl::optional_internal::optional_data_dtor_base.105" }
%"class.absl::optional_internal::optional_data_dtor_base.105" = type { i8, %union.anon.106 }
%union.anon.106 = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.109 }
%union.anon.109 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.network::CrossOriginOpenerPolicy" = type { i32, %"class.absl::optional.102", i32, %"class.absl::optional.102" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.111" = type { %"class.absl::optional_internal::optional_data.112" }
%"class.absl::optional_internal::optional_data.112" = type { %"class.absl::optional_internal::optional_data_base.113" }
%"class.absl::optional_internal::optional_data_base.113" = type { %"class.absl::optional_internal::optional_data_dtor_base.114" }
%"class.absl::optional_internal::optional_data_dtor_base.114" = type { i8, %union.anon.115 }
%union.anon.115 = type { %"class.WTF::Vector.116" }
%"class.WTF::Vector.116" = type { %"class.WTF::VectorBuffer.117" }
%"class.WTF::VectorBuffer.117" = type { %"class.WTF::VectorBufferBase.118" }
%"class.WTF::VectorBufferBase.118" = type { i32*, i32, i32 }
%"class.WTF::Vector.121" = type { %"class.WTF::VectorBuffer.122" }
%"class.WTF::VectorBuffer.122" = type { %"class.WTF::VectorBufferBase.123" }
%"class.WTF::VectorBufferBase.123" = type { %"class.mojo::StructPtr.124"*, i32, i32 }
%"class.mojo::StructPtr.124" = type { %"class.std::__1::unique_ptr.125" }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.network::mojom::blink::LinkHeader"* }
%"class.network::mojom::blink::LinkHeader" = type { %"class.blink::KURL", i32, i32, i32, %"class.WTF::String" }
%"class.mojo::StructPtr.133" = type { %"class.std::__1::unique_ptr.134" }
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.network::mojom::blink::TimingAllowOrigin"* }
%"class.network::mojom::blink::TimingAllowOrigin" = type { i32, %"union.network::mojom::blink::TimingAllowOrigin::Union_" }
%"union.network::mojom::blink::TimingAllowOrigin::Union_" = type { %"class.WTF::Vector.49"* }
%"class.absl::optional.143" = type { %"class.absl::optional_internal::optional_data.144" }
%"class.absl::optional_internal::optional_data.144" = type { %"class.absl::optional_internal::optional_data_base.145" }
%"class.absl::optional_internal::optional_data_base.145" = type { %"class.absl::optional_internal::optional_data_dtor_base.146" }
%"class.absl::optional_internal::optional_data_dtor_base.146" = type { i8, %union.anon.147 }
%union.anon.147 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.148" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting" = type { %"class.blink::mojom::blink::BackgroundFetchService" }
%"class.WTF::Vector.165" = type { %"class.WTF::VectorBuffer.166" }
%"class.WTF::VectorBuffer.166" = type { %"class.WTF::VectorBufferBase.167" }
%"class.WTF::VectorBufferBase.167" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr.170" = type { %"class.std::__1::unique_ptr.171" }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.blink::mojom::blink::BackgroundFetchOptions"* }
%"class.blink::mojom::blink::BackgroundFetchOptions" = type { %"class.WTF::Vector.174", i64, %"class.WTF::String" }
%"class.WTF::Vector.174" = type { %"class.WTF::VectorBuffer.175" }
%"class.WTF::VectorBuffer.175" = type { %"class.WTF::VectorBufferBase.176" }
%"class.WTF::VectorBufferBase.176" = type { %"class.mojo::StructPtr.177"*, i32, i32 }
%"class.mojo::StructPtr.177" = type { %"class.std::__1::unique_ptr.178" }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.blink::mojom::blink::ManifestImageResource"* }
%"class.blink::mojom::blink::ManifestImageResource" = type { %"class.blink::KURL", %"class.WTF::String", %"class.WTF::Vector.181", %"class.WTF::Vector.186" }
%"class.WTF::Vector.181" = type { %"class.WTF::VectorBuffer.182" }
%"class.WTF::VectorBuffer.182" = type { %"class.WTF::VectorBufferBase.183" }
%"class.WTF::VectorBufferBase.183" = type { %"class.gfx::Size"*, i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.WTF::Vector.186" = type { %"class.WTF::VectorBuffer.187" }
%"class.WTF::VectorBuffer.187" = type { %"class.WTF::VectorBufferBase.188" }
%"class.WTF::VectorBufferBase.188" = type { i32*, i32, i32 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.164 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.158, i32, i32 }
%class.sk_sp.158 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.6" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.159" }
%"struct.std::__1::atomic.159" = type { %"struct.std::__1::__atomic_base.160" }
%"struct.std::__1::__atomic_base.160" = type { %"struct.std::__1::__atomic_base.161" }
%"struct.std::__1::__atomic_base.161" = type { %"struct.std::__1::__cxx_atomic_impl.162" }
%"struct.std::__1::__cxx_atomic_impl.162" = type { %"struct.std::__1::__cxx_atomic_base_impl.163" }
%"struct.std::__1::__cxx_atomic_base_impl.163" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.164 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.mojo::InlinedStructPtr.199" = type <{ %"class.blink::mojom::blink::BackgroundFetchUkmData", i32, [4 x i8] }>
%"class.blink::mojom::blink::BackgroundFetchUkmData" = type { i64 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.201 }
%class.scoped_refptr.201 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.202", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.202" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::OnceCallback.203" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.204" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::StructPtr.205" = type { %"class.std::__1::unique_ptr.206" }
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.blink::mojom::blink::BackgroundFetchRegistration"* }
%"class.blink::mojom::blink::BackgroundFetchRegistration" = type { %"class.mojo::StructPtr.209", %"class.mojo::PendingRemote.216" }
%"class.mojo::StructPtr.209" = type { %"class.std::__1::unique_ptr.210" }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.blink::mojom::blink::BackgroundFetchRegistrationData"* }
%"class.blink::mojom::blink::BackgroundFetchRegistrationData" = type { %"class.WTF::String", i64, i64, i64, i64, i32, i32 }
%"class.mojo::PendingRemote.216" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.232, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.225", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.225" = type { %"class.std::__1::__vector_base.226" }
%"class.std::__1::__vector_base.226" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.227" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.232 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.233" }>
%"class.base::RefCountedThreadSafe.233" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.234 }
%class.scoped_refptr.234 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.235", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.235" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.159" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting" = type { %"class.blink::mojom::blink::BackgroundFetchRegistrationService" }
%"class.base::OnceCallback.242" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::InlinedStructPtr.243" = type { %"class.blink::mojom::blink::CacheQueryOptions", i32 }
%"class.blink::mojom::blink::CacheQueryOptions" = type { i8, i8, i8 }
%"class.base::OnceCallback.244" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::PendingRemote.245" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::Vector.250" = type { %"class.WTF::VectorBuffer.251" }
%"class.WTF::VectorBuffer.251" = type { %"class.WTF::VectorBufferBase.252" }
%"class.WTF::VectorBufferBase.252" = type { %"class.mojo::StructPtr.253"*, i32, i32 }
%"class.mojo::StructPtr.253" = type { %"class.std::__1::unique_ptr.254" }
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.blink::mojom::blink::BackgroundFetchSettledFetch"* }
%"class.blink::mojom::blink::BackgroundFetchSettledFetch" = type { %"class.mojo::StructPtr", %"class.mojo::StructPtr.36" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink5mojom5blink35BackgroundFetchRegistrationObserverD2Ev = comdat any

$_ZN5blink5mojom5blink56BackgroundFetchRegistrationObserverInterceptorForTestingD0Ev = comdat any

$_ZN5blink5mojom5blink22BackgroundFetchServiceD2Ev = comdat any

$_ZN5blink5mojom5blink43BackgroundFetchServiceInterceptorForTestingD0Ev = comdat any

$_ZN5blink5mojom5blink34BackgroundFetchRegistrationServiceD2Ev = comdat any

$_ZN5blink5mojom5blink55BackgroundFetchRegistrationServiceInterceptorForTestingD0Ev = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

@.str = private unnamed_addr constant [6 x i8] c"Fetch\00", align 1
@.str.1 = private unnamed_addr constant [95 x i8] c"gen/third_party/blink/public/mojom/background_fetch/background_fetch.mojom-blink-test-utils.cc\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"GetRegistration\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"GetDeveloperIds\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c"GetIconDisplaySize\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"UpdateUI\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"Abort\00", align 1
@.str.7 = private unnamed_addr constant [14 x i8] c"MatchRequests\00", align 1
@_ZTVN5blink5mojom5blink56BackgroundFetchRegistrationObserverInterceptorForTestingE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"*)* @_ZN5blink5mojom5blink35BackgroundFetchRegistrationObserverD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverInterceptorForTesting"*)* @_ZN5blink5mojom5blink56BackgroundFetchRegistrationObserverInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverInterceptorForTesting"*, i64, i64, i64, i64, i32, i32)* @_ZN5blink5mojom5blink56BackgroundFetchRegistrationObserverInterceptorForTesting10OnProgressEmmmmNS0_21BackgroundFetchResultENS0_28BackgroundFetchFailureReasonE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverInterceptorForTesting"*)* @_ZN5blink5mojom5blink56BackgroundFetchRegistrationObserverInterceptorForTesting20OnRecordsUnavailableEv to i8*), i8* bitcast (void (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverInterceptorForTesting"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.36"*)* @_ZN5blink5mojom5blink56BackgroundFetchRegistrationObserverInterceptorForTesting18OnRequestCompletedEN4mojo9StructPtrINS1_15FetchAPIRequestEEENS4_INS1_16FetchAPIResponseEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN5blink5mojom5blink43BackgroundFetchServiceInterceptorForTestingE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::BackgroundFetchService"*)* @_ZN5blink5mojom5blink22BackgroundFetchServiceD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*)* @_ZN5blink5mojom5blink43BackgroundFetchServiceInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*, i64, %"class.WTF::String"*, %"class.WTF::Vector.165"*, %"class.mojo::StructPtr.170"*, %class.SkBitmap*, %"class.mojo::InlinedStructPtr.199"*, %"class.base::OnceCallback"*)* @_ZN5blink5mojom5blink43BackgroundFetchServiceInterceptorForTesting5FetchElRKN3WTF6StringENS3_6VectorIN4mojo9StructPtrINS1_15FetchAPIRequestEEELj0ENS3_18PartitionAllocatorEEENS9_INS1_22BackgroundFetchOptionsEEERK8SkBitmapNS8_16InlinedStructPtrINS1_22BackgroundFetchUkmDataEEEN4base12OnceCallbackIFvNS0_20BackgroundFetchErrorENS9_INS1_27BackgroundFetchRegistrationEEEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*, i64, %"class.WTF::String"*, %"class.base::OnceCallback"*)* @_ZN5blink5mojom5blink43BackgroundFetchServiceInterceptorForTesting15GetRegistrationElRKN3WTF6StringEN4base12OnceCallbackIFvNS0_20BackgroundFetchErrorEN4mojo9StructPtrINS1_27BackgroundFetchRegistrationEEEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*, i64, %"class.base::OnceCallback.203"*)* @_ZN5blink5mojom5blink43BackgroundFetchServiceInterceptorForTesting15GetDeveloperIdsElN4base12OnceCallbackIFvNS0_20BackgroundFetchErrorERKN3WTF6VectorINS6_6StringELj0ENS6_18PartitionAllocatorEEEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*, %"class.base::OnceCallback.204"*)* @_ZN5blink5mojom5blink43BackgroundFetchServiceInterceptorForTesting18GetIconDisplaySizeEN4base12OnceCallbackIFvRKN3gfx4SizeEEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN5blink5mojom5blink55BackgroundFetchRegistrationServiceInterceptorForTestingE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*)* @_ZN5blink5mojom5blink34BackgroundFetchRegistrationServiceD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*)* @_ZN5blink5mojom5blink55BackgroundFetchRegistrationServiceInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*, %"class.WTF::String"*, %class.SkBitmap*, %"class.base::OnceCallback.242"*)* @_ZN5blink5mojom5blink55BackgroundFetchRegistrationServiceInterceptorForTesting8UpdateUIERKN3WTF6StringERK8SkBitmapN4base12OnceCallbackIFvNS0_20BackgroundFetchErrorEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*, %"class.base::OnceCallback.242"*)* @_ZN5blink5mojom5blink55BackgroundFetchRegistrationServiceInterceptorForTesting5AbortEN4base12OnceCallbackIFvNS0_20BackgroundFetchErrorEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr.243"*, i1, %"class.base::OnceCallback.244"*)* @_ZN5blink5mojom5blink55BackgroundFetchRegistrationServiceInterceptorForTesting13MatchRequestsEN4mojo9StructPtrINS1_15FetchAPIRequestEEENS3_16InlinedStructPtrINS1_17CacheQueryOptionsEEEbN4base12OnceCallbackIFvN3WTF6VectorINS4_INS1_27BackgroundFetchSettledFetchEEELj0ENSC_18PartitionAllocatorEEEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*, %"class.mojo::PendingRemote.245"*)* @_ZN5blink5mojom5blink55BackgroundFetchRegistrationServiceInterceptorForTesting23AddRegistrationObserverEN4mojo13PendingRemoteINS1_35BackgroundFetchRegistrationObserverEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str.8 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.9 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1

@_ZN5blink5mojom5blink46BackgroundFetchRegistrationObserverAsyncWaiterC1EPNS1_35BackgroundFetchRegistrationObserverE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverAsyncWaiter"*, %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"*), void (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverAsyncWaiter"*, %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"*)* @_ZN5blink5mojom5blink46BackgroundFetchRegistrationObserverAsyncWaiterC2EPNS1_35BackgroundFetchRegistrationObserverE
@_ZN5blink5mojom5blink46BackgroundFetchRegistrationObserverAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverAsyncWaiter"*), void (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverAsyncWaiter"*)* @_ZN5blink5mojom5blink46BackgroundFetchRegistrationObserverAsyncWaiterD2Ev
@_ZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiterC1EPNS1_22BackgroundFetchServiceE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::BackgroundFetchServiceAsyncWaiter"*, %"class.blink::mojom::blink::BackgroundFetchService"*), void (%"class.blink::mojom::blink::BackgroundFetchServiceAsyncWaiter"*, %"class.blink::mojom::blink::BackgroundFetchService"*)* @_ZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiterC2EPNS1_22BackgroundFetchServiceE
@_ZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::BackgroundFetchServiceAsyncWaiter"*), void (%"class.blink::mojom::blink::BackgroundFetchServiceAsyncWaiter"*)* @_ZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiterD2Ev
@_ZN5blink5mojom5blink45BackgroundFetchRegistrationServiceAsyncWaiterC1EPNS1_34BackgroundFetchRegistrationServiceE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceAsyncWaiter"*, %"class.blink::mojom::blink::BackgroundFetchRegistrationService"*), void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceAsyncWaiter"*, %"class.blink::mojom::blink::BackgroundFetchRegistrationService"*)* @_ZN5blink5mojom5blink45BackgroundFetchRegistrationServiceAsyncWaiterC2EPNS1_34BackgroundFetchRegistrationServiceE
@_ZN5blink5mojom5blink45BackgroundFetchRegistrationServiceAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceAsyncWaiter"*), void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceAsyncWaiter"*)* @_ZN5blink5mojom5blink45BackgroundFetchRegistrationServiceAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink56BackgroundFetchRegistrationObserverInterceptorForTesting10OnProgressEmmmmNS0_21BackgroundFetchResultENS0_28BackgroundFetchFailureReasonE(%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverInterceptorForTesting"*, i64, i64, i64, i64, i32, i32) unnamed_addr #0 align 2 {
  %8 = bitcast %"class.blink::mojom::blink::BackgroundFetchRegistrationObserverInterceptorForTesting"* %0 to %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverInterceptorForTesting"*)***
  %9 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverInterceptorForTesting"*)**, %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverInterceptorForTesting"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverInterceptorForTesting"*)*, %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverInterceptorForTesting"*)** %9, i64 5
  %11 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverInterceptorForTesting"*)*, %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverInterceptorForTesting"*)** %10, align 8
  %12 = tail call %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* %11(%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverInterceptorForTesting"* %0) #11
  %13 = bitcast %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* %12 to void (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"*, i64, i64, i64, i64, i32, i32)***
  %14 = load void (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"*, i64, i64, i64, i64, i32, i32)**, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"*, i64, i64, i64, i64, i32, i32)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"*, i64, i64, i64, i64, i32, i32)*, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"*, i64, i64, i64, i64, i32, i32)** %14, i64 2
  %16 = load void (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"*, i64, i64, i64, i64, i32, i32)*, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"*, i64, i64, i64, i64, i32, i32)** %15, align 8
  tail call void %16(%"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* %12, i64 %1, i64 %2, i64 %3, i64 %4, i32 %5, i32 %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink56BackgroundFetchRegistrationObserverInterceptorForTesting20OnRecordsUnavailableEv(%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::mojom::blink::BackgroundFetchRegistrationObserverInterceptorForTesting"* %0 to %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverInterceptorForTesting"*)***
  %3 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverInterceptorForTesting"*)**, %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverInterceptorForTesting"*)*, %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverInterceptorForTesting"*)** %3, i64 5
  %5 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverInterceptorForTesting"*)*, %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* %5(%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverInterceptorForTesting"* %0) #11
  %7 = bitcast %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* %6 to void (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"*)***
  %8 = load void (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"*)**, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"*)*, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"*)** %8, i64 3
  %10 = load void (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"*)*, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"*)** %9, align 8
  tail call void %10(%"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink56BackgroundFetchRegistrationObserverInterceptorForTesting18OnRequestCompletedEN4mojo9StructPtrINS1_15FetchAPIRequestEEENS4_INS1_16FetchAPIResponseEEE(%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverInterceptorForTesting"*, %"class.mojo::StructPtr"* nocapture, %"class.mojo::StructPtr.36"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo::StructPtr", align 8
  %5 = alloca %"class.mojo::StructPtr.36", align 8
  %6 = bitcast %"class.blink::mojom::blink::BackgroundFetchRegistrationObserverInterceptorForTesting"* %0 to %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverInterceptorForTesting"*)***
  %7 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverInterceptorForTesting"*)**, %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverInterceptorForTesting"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverInterceptorForTesting"*)*, %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverInterceptorForTesting"*)** %7, i64 5
  %9 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverInterceptorForTesting"*)*, %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverInterceptorForTesting"*)** %8, align 8
  %10 = tail call %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* %9(%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverInterceptorForTesting"* %0) #11
  %11 = bitcast %"class.mojo::StructPtr"* %4 to i64*
  %12 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %11, align 8
  store i64 0, i64* %13, align 8
  %15 = bitcast %"class.mojo::StructPtr.36"* %5 to i64*
  %16 = getelementptr inbounds %"class.mojo::StructPtr.36", %"class.mojo::StructPtr.36"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.mojo::StructPtr.36"* %2 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %15, align 8
  store i64 0, i64* %17, align 8
  %19 = bitcast %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* %10 to void (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.36"*)***
  %20 = load void (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.36"*)**, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.36"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.36"*)*, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.36"*)** %20, i64 4
  %22 = load void (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.36"*)*, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.36"*)** %21, align 8
  call void %22(%"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* %10, %"class.mojo::StructPtr"* nonnull %4, %"class.mojo::StructPtr.36"* nonnull %5) #11
  %23 = load %"class.blink::mojom::blink::FetchAPIResponse"*, %"class.blink::mojom::blink::FetchAPIResponse"** %16, align 8
  store %"class.blink::mojom::blink::FetchAPIResponse"* null, %"class.blink::mojom::blink::FetchAPIResponse"** %16, align 8
  %24 = icmp eq %"class.blink::mojom::blink::FetchAPIResponse"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %3
  call void @_ZN5blink5mojom5blink16FetchAPIResponseD1Ev(%"class.blink::mojom::blink::FetchAPIResponse"* nonnull %23) #11
  %26 = bitcast %"class.blink::mojom::blink::FetchAPIResponse"* %23 to i8*
  call void @_ZdlPv(i8* %26) #12
  br label %27

27:                                               ; preds = %3, %25
  %28 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %12, align 8
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %12, align 8
  %29 = icmp eq %"class.blink::mojom::blink::FetchAPIRequest"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %27
  call void @_ZN5blink5mojom5blink15FetchAPIRequestD1Ev(%"class.blink::mojom::blink::FetchAPIRequest"* nonnull %28) #11
  %31 = bitcast %"class.blink::mojom::blink::FetchAPIRequest"* %28 to i8*
  call void @_ZdlPv(i8* %31) #12
  br label %32

32:                                               ; preds = %27, %30
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink46BackgroundFetchRegistrationObserverAsyncWaiterC2EPNS1_35BackgroundFetchRegistrationObserverE(%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverAsyncWaiter"* nocapture, %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchRegistrationObserverAsyncWaiter", %"class.blink::mojom::blink::BackgroundFetchRegistrationObserverAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* %1, %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink46BackgroundFetchRegistrationObserverAsyncWaiterD2Ev(%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink43BackgroundFetchServiceInterceptorForTesting5FetchElRKN3WTF6StringENS3_6VectorIN4mojo9StructPtrINS1_15FetchAPIRequestEEELj0ENS3_18PartitionAllocatorEEENS9_INS1_22BackgroundFetchOptionsEEERK8SkBitmapNS8_16InlinedStructPtrINS1_22BackgroundFetchUkmDataEEEN4base12OnceCallbackIFvNS0_20BackgroundFetchErrorENS9_INS1_27BackgroundFetchRegistrationEEEEEE(%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*, i64, %"class.WTF::String"* dereferenceable(8), %"class.WTF::Vector.165"* nocapture, %"class.mojo::StructPtr.170"* nocapture, %class.SkBitmap* dereferenceable(56), %"class.mojo::InlinedStructPtr.199"* nocapture, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %9 = alloca %"class.blink::mojom::blink::BackgroundFetchUkmData", align 8
  %10 = alloca %"class.WTF::Vector.165", align 8
  %11 = alloca %"class.mojo::StructPtr.170", align 8
  %12 = alloca %"class.mojo::InlinedStructPtr.199", align 8
  %13 = alloca %"class.base::OnceCallback", align 8
  %14 = bitcast %"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"* %0 to %"class.blink::mojom::blink::BackgroundFetchService"* (%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*)***
  %15 = load %"class.blink::mojom::blink::BackgroundFetchService"* (%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*)**, %"class.blink::mojom::blink::BackgroundFetchService"* (%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchService"* (%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::BackgroundFetchService"* (%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*)** %15, i64 6
  %17 = load %"class.blink::mojom::blink::BackgroundFetchService"* (%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::BackgroundFetchService"* (%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*)** %16, align 8
  %18 = tail call %"class.blink::mojom::blink::BackgroundFetchService"* %17(%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"* %0) #11
  %19 = getelementptr inbounds %"class.WTF::Vector.165", %"class.WTF::Vector.165"* %10, i64 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.WTF::Vector.165", %"class.WTF::Vector.165"* %10, i64 0, i32 0, i32 0, i32 2
  %21 = bitcast %"class.WTF::Vector.165"* %3 to i64*
  %22 = bitcast %"class.WTF::Vector.165"* %10 to i64*
  store i64 0, i64* %22, align 8
  %23 = load i64, i64* %21, align 8
  %24 = bitcast %"class.WTF::Vector.165"* %10 to i64*
  store atomic i64 0, i64* %21 monotonic, align 8
  store atomic i64 %23, i64* %24 monotonic, align 8
  %25 = getelementptr inbounds %"class.WTF::Vector.165", %"class.WTF::Vector.165"* %3, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 4
  store i32 %26, i32* %19, align 8
  store i32 0, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::Vector.165", %"class.WTF::Vector.165"* %3, i64 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %20, align 4
  store i32 0, i32* %27, align 4
  %29 = bitcast %"class.mojo::StructPtr.170"* %11 to i64*
  %30 = getelementptr inbounds %"class.mojo::StructPtr.170", %"class.mojo::StructPtr.170"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.mojo::StructPtr.170"* %4 to i64*
  %32 = load i64, i64* %31, align 8
  store i64 %32, i64* %29, align 8
  store i64 0, i64* %31, align 8
  %33 = getelementptr inbounds %"class.mojo::InlinedStructPtr.199", %"class.mojo::InlinedStructPtr.199"* %12, i64 0, i32 0
  call void @_ZN5blink5mojom5blink22BackgroundFetchUkmDataC1Ev(%"class.blink::mojom::blink::BackgroundFetchUkmData"* nonnull %33) #11
  %34 = getelementptr inbounds %"class.mojo::InlinedStructPtr.199", %"class.mojo::InlinedStructPtr.199"* %12, i64 0, i32 1
  store i32 0, i32* %34, align 8
  call void @_ZN5blink5mojom5blink22BackgroundFetchUkmDataD1Ev(%"class.blink::mojom::blink::BackgroundFetchUkmData"* nonnull %33) #11
  call void @_ZN5blink5mojom5blink22BackgroundFetchUkmDataC1Ev(%"class.blink::mojom::blink::BackgroundFetchUkmData"* nonnull %33) #11
  %35 = bitcast %"class.blink::mojom::blink::BackgroundFetchUkmData"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #11
  %36 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchUkmData", %"class.blink::mojom::blink::BackgroundFetchUkmData"* %9, i64 0, i32 0
  %37 = getelementptr inbounds %"class.mojo::InlinedStructPtr.199", %"class.mojo::InlinedStructPtr.199"* %12, i64 0, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  store i64 %38, i64* %36, align 8
  %39 = getelementptr inbounds %"class.mojo::InlinedStructPtr.199", %"class.mojo::InlinedStructPtr.199"* %6, i64 0, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  store i64 %40, i64* %37, align 8
  store i64 %38, i64* %39, align 8
  call void @_ZN5blink5mojom5blink22BackgroundFetchUkmDataD1Ev(%"class.blink::mojom::blink::BackgroundFetchUkmData"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  %41 = getelementptr inbounds %"class.mojo::InlinedStructPtr.199", %"class.mojo::InlinedStructPtr.199"* %6, i64 0, i32 1
  %42 = load i32, i32* %34, align 8
  %43 = load i32, i32* %41, align 4
  store i32 %43, i32* %34, align 8
  store i32 %42, i32* %41, align 4
  %44 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0, i32 0, i32 0
  %45 = bitcast %"class.base::OnceCallback"* %7 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.base::OnceCallback"* %13 to i64*
  store i64 %46, i64* %47, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %44, align 8
  %48 = bitcast %"class.blink::mojom::blink::BackgroundFetchService"* %18 to void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.WTF::String"*, %"class.WTF::Vector.165"*, %"class.mojo::StructPtr.170"*, %class.SkBitmap*, %"class.mojo::InlinedStructPtr.199"*, %"class.base::OnceCallback"*)***
  %49 = load void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.WTF::String"*, %"class.WTF::Vector.165"*, %"class.mojo::StructPtr.170"*, %class.SkBitmap*, %"class.mojo::InlinedStructPtr.199"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.WTF::String"*, %"class.WTF::Vector.165"*, %"class.mojo::StructPtr.170"*, %class.SkBitmap*, %"class.mojo::InlinedStructPtr.199"*, %"class.base::OnceCallback"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.WTF::String"*, %"class.WTF::Vector.165"*, %"class.mojo::StructPtr.170"*, %class.SkBitmap*, %"class.mojo::InlinedStructPtr.199"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.WTF::String"*, %"class.WTF::Vector.165"*, %"class.mojo::StructPtr.170"*, %class.SkBitmap*, %"class.mojo::InlinedStructPtr.199"*, %"class.base::OnceCallback"*)** %49, i64 2
  %51 = load void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.WTF::String"*, %"class.WTF::Vector.165"*, %"class.mojo::StructPtr.170"*, %class.SkBitmap*, %"class.mojo::InlinedStructPtr.199"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.WTF::String"*, %"class.WTF::Vector.165"*, %"class.mojo::StructPtr.170"*, %class.SkBitmap*, %"class.mojo::InlinedStructPtr.199"*, %"class.base::OnceCallback"*)** %50, align 8
  call void %51(%"class.blink::mojom::blink::BackgroundFetchService"* %18, i64 %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::Vector.165"* nonnull %10, %"class.mojo::StructPtr.170"* nonnull %11, %class.SkBitmap* dereferenceable(56) %5, %"class.mojo::InlinedStructPtr.199"* nonnull %12, %"class.base::OnceCallback"* nonnull %13) #11
  %52 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %13, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %52) #11
  call void @_ZN5blink5mojom5blink22BackgroundFetchUkmDataD1Ev(%"class.blink::mojom::blink::BackgroundFetchUkmData"* nonnull %33) #11
  %53 = load %"class.blink::mojom::blink::BackgroundFetchOptions"*, %"class.blink::mojom::blink::BackgroundFetchOptions"** %30, align 8
  store %"class.blink::mojom::blink::BackgroundFetchOptions"* null, %"class.blink::mojom::blink::BackgroundFetchOptions"** %30, align 8
  %54 = icmp eq %"class.blink::mojom::blink::BackgroundFetchOptions"* %53, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %8
  call void @_ZN5blink5mojom5blink22BackgroundFetchOptionsD1Ev(%"class.blink::mojom::blink::BackgroundFetchOptions"* nonnull %53) #11
  %56 = bitcast %"class.blink::mojom::blink::BackgroundFetchOptions"* %53 to i8*
  call void @_ZdlPv(i8* %56) #12
  br label %57

57:                                               ; preds = %8, %55
  %58 = getelementptr inbounds %"class.WTF::Vector.165", %"class.WTF::Vector.165"* %10, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %58, align 8
  %60 = icmp eq %"class.mojo::StructPtr"* %59, null
  br i1 %60, label %83, label %61, !prof !2

61:                                               ; preds = %57
  %62 = bitcast %"class.mojo::StructPtr"* %59 to i8*
  %63 = load i32, i32* %20, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %81, label %65, !prof !3

65:                                               ; preds = %61
  %66 = zext i32 %63 to i64
  %67 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %59, i64 %66
  br label %68

68:                                               ; preds = %75, %65
  %69 = phi %"class.mojo::StructPtr"* [ %76, %75 ], [ %59, %65 ]
  %70 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %69, i64 0, i32 0, i32 0, i32 0, i32 0
  %71 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %70, align 8
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %70, align 8
  %72 = icmp eq %"class.blink::mojom::blink::FetchAPIRequest"* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %68
  call void @_ZN5blink5mojom5blink15FetchAPIRequestD1Ev(%"class.blink::mojom::blink::FetchAPIRequest"* nonnull %71) #11
  %74 = bitcast %"class.blink::mojom::blink::FetchAPIRequest"* %71 to i8*
  call void @_ZdlPv(i8* %74) #12
  br label %75

75:                                               ; preds = %73, %68
  %76 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %69, i64 1
  %77 = icmp eq %"class.mojo::StructPtr"* %76, %67
  br i1 %77, label %78, label %68

78:                                               ; preds = %75
  store i32 0, i32* %20, align 4
  %79 = bitcast %"class.WTF::Vector.165"* %10 to i8**
  %80 = load i8*, i8** %79, align 8
  br label %81

81:                                               ; preds = %78, %61
  %82 = phi i8* [ %80, %78 ], [ %62, %61 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %82) #11
  store %"class.mojo::StructPtr"* null, %"class.mojo::StructPtr"** %58, align 8
  br label %83

83:                                               ; preds = %57, %81
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink43BackgroundFetchServiceInterceptorForTesting15GetRegistrationElRKN3WTF6StringEN4base12OnceCallbackIFvNS0_20BackgroundFetchErrorEN4mojo9StructPtrINS1_27BackgroundFetchRegistrationEEEEEE(%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*, i64, %"class.WTF::String"* dereferenceable(8), %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = bitcast %"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"* %0 to %"class.blink::mojom::blink::BackgroundFetchService"* (%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*)***
  %7 = load %"class.blink::mojom::blink::BackgroundFetchService"* (%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*)**, %"class.blink::mojom::blink::BackgroundFetchService"* (%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchService"* (%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::BackgroundFetchService"* (%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*)** %7, i64 6
  %9 = load %"class.blink::mojom::blink::BackgroundFetchService"* (%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::BackgroundFetchService"* (%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*)** %8, align 8
  %10 = tail call %"class.blink::mojom::blink::BackgroundFetchService"* %9(%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"* %0) #11
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %15 = bitcast %"class.blink::mojom::blink::BackgroundFetchService"* %10 to void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.WTF::String"*, %"class.base::OnceCallback"*)***
  %16 = load void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.WTF::String"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.WTF::String"*, %"class.base::OnceCallback"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.WTF::String"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.WTF::String"*, %"class.base::OnceCallback"*)** %16, i64 3
  %18 = load void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.WTF::String"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.WTF::String"*, %"class.base::OnceCallback"*)** %17, align 8
  call void %18(%"class.blink::mojom::blink::BackgroundFetchService"* %10, i64 %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.base::OnceCallback"* nonnull %5) #11
  %19 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink43BackgroundFetchServiceInterceptorForTesting15GetDeveloperIdsElN4base12OnceCallbackIFvNS0_20BackgroundFetchErrorERKN3WTF6VectorINS6_6StringELj0ENS6_18PartitionAllocatorEEEEEE(%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*, i64, %"class.base::OnceCallback.203"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.203", align 8
  %5 = bitcast %"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"* %0 to %"class.blink::mojom::blink::BackgroundFetchService"* (%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::blink::BackgroundFetchService"* (%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*)**, %"class.blink::mojom::blink::BackgroundFetchService"* (%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchService"* (%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::BackgroundFetchService"* (%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*)** %6, i64 6
  %8 = load %"class.blink::mojom::blink::BackgroundFetchService"* (%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::BackgroundFetchService"* (%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::blink::BackgroundFetchService"* %8(%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"* %0) #11
  %10 = getelementptr inbounds %"class.base::OnceCallback.203", %"class.base::OnceCallback.203"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback.203"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback.203"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.blink::mojom::blink::BackgroundFetchService"* %9 to void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.base::OnceCallback.203"*)***
  %15 = load void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.base::OnceCallback.203"*)**, void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.base::OnceCallback.203"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.base::OnceCallback.203"*)*, void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.base::OnceCallback.203"*)** %15, i64 4
  %17 = load void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.base::OnceCallback.203"*)*, void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.base::OnceCallback.203"*)** %16, align 8
  call void %17(%"class.blink::mojom::blink::BackgroundFetchService"* %9, i64 %1, %"class.base::OnceCallback.203"* nonnull %4) #11
  %18 = getelementptr inbounds %"class.base::OnceCallback.203", %"class.base::OnceCallback.203"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink43BackgroundFetchServiceInterceptorForTesting18GetIconDisplaySizeEN4base12OnceCallbackIFvRKN3gfx4SizeEEEE(%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*, %"class.base::OnceCallback.204"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.204", align 8
  %4 = bitcast %"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"* %0 to %"class.blink::mojom::blink::BackgroundFetchService"* (%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::BackgroundFetchService"* (%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*)**, %"class.blink::mojom::blink::BackgroundFetchService"* (%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchService"* (%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::BackgroundFetchService"* (%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*)** %5, i64 6
  %7 = load %"class.blink::mojom::blink::BackgroundFetchService"* (%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::BackgroundFetchService"* (%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::BackgroundFetchService"* %7(%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"* %0) #11
  %9 = getelementptr inbounds %"class.base::OnceCallback.204", %"class.base::OnceCallback.204"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback.204"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.204"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.blink::mojom::blink::BackgroundFetchService"* %8 to void (%"class.blink::mojom::blink::BackgroundFetchService"*, %"class.base::OnceCallback.204"*)***
  %14 = load void (%"class.blink::mojom::blink::BackgroundFetchService"*, %"class.base::OnceCallback.204"*)**, void (%"class.blink::mojom::blink::BackgroundFetchService"*, %"class.base::OnceCallback.204"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::mojom::blink::BackgroundFetchService"*, %"class.base::OnceCallback.204"*)*, void (%"class.blink::mojom::blink::BackgroundFetchService"*, %"class.base::OnceCallback.204"*)** %14, i64 5
  %16 = load void (%"class.blink::mojom::blink::BackgroundFetchService"*, %"class.base::OnceCallback.204"*)*, void (%"class.blink::mojom::blink::BackgroundFetchService"*, %"class.base::OnceCallback.204"*)** %15, align 8
  call void %16(%"class.blink::mojom::blink::BackgroundFetchService"* %8, %"class.base::OnceCallback.204"* nonnull %3) #11
  %17 = getelementptr inbounds %"class.base::OnceCallback.204", %"class.base::OnceCallback.204"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #11
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiterC2EPNS1_22BackgroundFetchServiceE(%"class.blink::mojom::blink::BackgroundFetchServiceAsyncWaiter"* nocapture, %"class.blink::mojom::blink::BackgroundFetchService"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchServiceAsyncWaiter", %"class.blink::mojom::blink::BackgroundFetchServiceAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::BackgroundFetchService"* %1, %"class.blink::mojom::blink::BackgroundFetchService"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiterD2Ev(%"class.blink::mojom::blink::BackgroundFetchServiceAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiter5FetchElRKN3WTF6StringENS3_6VectorIN4mojo9StructPtrINS1_15FetchAPIRequestEEELj0ENS3_18PartitionAllocatorEEENS9_INS1_22BackgroundFetchOptionsEEERK8SkBitmapNS8_16InlinedStructPtrINS1_22BackgroundFetchUkmDataEEEPNS0_20BackgroundFetchErrorEPNS9_INS1_27BackgroundFetchRegistrationEEE(%"class.blink::mojom::blink::BackgroundFetchServiceAsyncWaiter"* nocapture readonly, i64, %"class.WTF::String"* dereferenceable(8), %"class.WTF::Vector.165"* nocapture, %"class.mojo::StructPtr.170"* nocapture, %class.SkBitmap* dereferenceable(56), %"class.mojo::InlinedStructPtr.199"* nocapture, i32*, %"class.mojo::StructPtr.205"*) local_unnamed_addr #0 align 2 {
  %10 = alloca %"class.blink::mojom::blink::BackgroundFetchUkmData", align 8
  %11 = alloca %"class.base::RunLoop", align 8
  %12 = alloca %"class.WTF::Vector.165", align 8
  %13 = alloca %"class.mojo::StructPtr.170", align 8
  %14 = alloca %"class.mojo::InlinedStructPtr.199", align 8
  %15 = alloca %"class.base::OnceCallback", align 8
  %16 = alloca %"class.base::Location", align 8
  %17 = ptrtoint i32* %7 to i64
  %18 = ptrtoint %"class.mojo::StructPtr.205"* %8 to i64
  %19 = bitcast %"class.base::RunLoop"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %19) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %11, i32 0) #11
  %20 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchServiceAsyncWaiter", %"class.blink::mojom::blink::BackgroundFetchServiceAsyncWaiter"* %0, i64 0, i32 0
  %21 = load %"class.blink::mojom::blink::BackgroundFetchService"*, %"class.blink::mojom::blink::BackgroundFetchService"** %20, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.165", %"class.WTF::Vector.165"* %12, i64 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.WTF::Vector.165", %"class.WTF::Vector.165"* %12, i64 0, i32 0, i32 0, i32 2
  %24 = bitcast %"class.WTF::Vector.165"* %3 to i64*
  %25 = bitcast %"class.WTF::Vector.165"* %12 to i64*
  store i64 0, i64* %25, align 8
  %26 = load i64, i64* %24, align 8
  %27 = bitcast %"class.WTF::Vector.165"* %12 to i64*
  store atomic i64 0, i64* %24 monotonic, align 8
  store atomic i64 %26, i64* %27 monotonic, align 8
  %28 = getelementptr inbounds %"class.WTF::Vector.165", %"class.WTF::Vector.165"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 4
  store i32 %29, i32* %22, align 8
  store i32 0, i32* %28, align 4
  %30 = getelementptr inbounds %"class.WTF::Vector.165", %"class.WTF::Vector.165"* %3, i64 0, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %23, align 4
  store i32 0, i32* %30, align 4
  %32 = bitcast %"class.mojo::StructPtr.170"* %13 to i64*
  %33 = getelementptr inbounds %"class.mojo::StructPtr.170", %"class.mojo::StructPtr.170"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.mojo::StructPtr.170"* %4 to i64*
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %32, align 8
  store i64 0, i64* %34, align 8
  %36 = getelementptr inbounds %"class.mojo::InlinedStructPtr.199", %"class.mojo::InlinedStructPtr.199"* %14, i64 0, i32 0
  call void @_ZN5blink5mojom5blink22BackgroundFetchUkmDataC1Ev(%"class.blink::mojom::blink::BackgroundFetchUkmData"* nonnull %36) #11
  %37 = getelementptr inbounds %"class.mojo::InlinedStructPtr.199", %"class.mojo::InlinedStructPtr.199"* %14, i64 0, i32 1
  store i32 0, i32* %37, align 8
  call void @_ZN5blink5mojom5blink22BackgroundFetchUkmDataD1Ev(%"class.blink::mojom::blink::BackgroundFetchUkmData"* nonnull %36) #11
  call void @_ZN5blink5mojom5blink22BackgroundFetchUkmDataC1Ev(%"class.blink::mojom::blink::BackgroundFetchUkmData"* nonnull %36) #11
  %38 = bitcast %"class.blink::mojom::blink::BackgroundFetchUkmData"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #11
  %39 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchUkmData", %"class.blink::mojom::blink::BackgroundFetchUkmData"* %10, i64 0, i32 0
  %40 = getelementptr inbounds %"class.mojo::InlinedStructPtr.199", %"class.mojo::InlinedStructPtr.199"* %14, i64 0, i32 0, i32 0
  %41 = load i64, i64* %40, align 8
  store i64 %41, i64* %39, align 8
  %42 = getelementptr inbounds %"class.mojo::InlinedStructPtr.199", %"class.mojo::InlinedStructPtr.199"* %6, i64 0, i32 0, i32 0
  %43 = load i64, i64* %42, align 8
  store i64 %43, i64* %40, align 8
  store i64 %41, i64* %42, align 8
  call void @_ZN5blink5mojom5blink22BackgroundFetchUkmDataD1Ev(%"class.blink::mojom::blink::BackgroundFetchUkmData"* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #11
  %44 = getelementptr inbounds %"class.mojo::InlinedStructPtr.199", %"class.mojo::InlinedStructPtr.199"* %6, i64 0, i32 1
  %45 = load i32, i32* %37, align 8
  %46 = load i32, i32* %44, align 4
  store i32 %46, i32* %37, align 8
  store i32 %45, i32* %44, align 4
  %47 = ptrtoint %"class.base::RunLoop"* %11 to i64
  %48 = call i8* @_Znwm(i64 64) #12, !noalias !4
  %49 = bitcast i8* %48 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %49, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"class.mojo::StructPtr.205"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiter5FetchElRKN3WTF6StringENS7_6VectorIN4mojo9StructPtrINS5_15FetchAPIRequestEEELj0ENS7_18PartitionAllocatorEEENSD_INS5_22BackgroundFetchOptionsEEERK8SkBitmapNSC_16InlinedStructPtrINS5_22BackgroundFetchUkmDataEEEPNS4_20BackgroundFetchErrorEPNSD_INS5_27BackgroundFetchRegistrationEEEE3$_0JPNS_7RunLoopESR_SU_EEEFvSQ_ST_EE7RunOnceEPNS0_13BindStateBaseESQ_OST_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiter5FetchElRKN3WTF6StringENS6_6VectorIN4mojo9StructPtrINS4_15FetchAPIRequestEEELj0ENS6_18PartitionAllocatorEEENSC_INS4_22BackgroundFetchOptionsEEERK8SkBitmapNSB_16InlinedStructPtrINS4_22BackgroundFetchUkmDataEEEPNS3_20BackgroundFetchErrorEPNSC_INS4_27BackgroundFetchRegistrationEEEE3$_0JPNS_7RunLoopESQ_ST_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !4
  %50 = getelementptr inbounds i8, i8* %48, i64 40
  %51 = bitcast i8* %50 to i64*
  store i64 %47, i64* %51, align 8, !noalias !4
  %52 = getelementptr inbounds i8, i8* %48, i64 48
  %53 = bitcast i8* %52 to i64*
  store i64 %17, i64* %53, align 8, !noalias !4
  %54 = getelementptr inbounds i8, i8* %48, i64 56
  %55 = bitcast i8* %54 to i64*
  store i64 %18, i64* %55, align 8, !noalias !4
  %56 = bitcast %"class.base::OnceCallback"* %15 to i8**
  store i8* %48, i8** %56, align 8, !alias.scope !4
  %57 = bitcast %"class.blink::mojom::blink::BackgroundFetchService"* %21 to void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.WTF::String"*, %"class.WTF::Vector.165"*, %"class.mojo::StructPtr.170"*, %class.SkBitmap*, %"class.mojo::InlinedStructPtr.199"*, %"class.base::OnceCallback"*)***
  %58 = load void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.WTF::String"*, %"class.WTF::Vector.165"*, %"class.mojo::StructPtr.170"*, %class.SkBitmap*, %"class.mojo::InlinedStructPtr.199"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.WTF::String"*, %"class.WTF::Vector.165"*, %"class.mojo::StructPtr.170"*, %class.SkBitmap*, %"class.mojo::InlinedStructPtr.199"*, %"class.base::OnceCallback"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.WTF::String"*, %"class.WTF::Vector.165"*, %"class.mojo::StructPtr.170"*, %class.SkBitmap*, %"class.mojo::InlinedStructPtr.199"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.WTF::String"*, %"class.WTF::Vector.165"*, %"class.mojo::StructPtr.170"*, %class.SkBitmap*, %"class.mojo::InlinedStructPtr.199"*, %"class.base::OnceCallback"*)** %58, i64 2
  %60 = load void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.WTF::String"*, %"class.WTF::Vector.165"*, %"class.mojo::StructPtr.170"*, %class.SkBitmap*, %"class.mojo::InlinedStructPtr.199"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.WTF::String"*, %"class.WTF::Vector.165"*, %"class.mojo::StructPtr.170"*, %class.SkBitmap*, %"class.mojo::InlinedStructPtr.199"*, %"class.base::OnceCallback"*)** %59, align 8
  call void %60(%"class.blink::mojom::blink::BackgroundFetchService"* %21, i64 %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::Vector.165"* nonnull %12, %"class.mojo::StructPtr.170"* nonnull %13, %class.SkBitmap* dereferenceable(56) %5, %"class.mojo::InlinedStructPtr.199"* nonnull %14, %"class.base::OnceCallback"* nonnull %15) #11
  %61 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %15, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %61) #11
  call void @_ZN5blink5mojom5blink22BackgroundFetchUkmDataD1Ev(%"class.blink::mojom::blink::BackgroundFetchUkmData"* nonnull %36) #11
  %62 = load %"class.blink::mojom::blink::BackgroundFetchOptions"*, %"class.blink::mojom::blink::BackgroundFetchOptions"** %33, align 8
  store %"class.blink::mojom::blink::BackgroundFetchOptions"* null, %"class.blink::mojom::blink::BackgroundFetchOptions"** %33, align 8
  %63 = icmp eq %"class.blink::mojom::blink::BackgroundFetchOptions"* %62, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %9
  call void @_ZN5blink5mojom5blink22BackgroundFetchOptionsD1Ev(%"class.blink::mojom::blink::BackgroundFetchOptions"* nonnull %62) #11
  %65 = bitcast %"class.blink::mojom::blink::BackgroundFetchOptions"* %62 to i8*
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %9, %64
  %67 = getelementptr inbounds %"class.WTF::Vector.165", %"class.WTF::Vector.165"* %12, i64 0, i32 0, i32 0, i32 0
  %68 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %67, align 8
  %69 = icmp eq %"class.mojo::StructPtr"* %68, null
  br i1 %69, label %92, label %70, !prof !2

70:                                               ; preds = %66
  %71 = bitcast %"class.mojo::StructPtr"* %68 to i8*
  %72 = load i32, i32* %23, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %90, label %74, !prof !3

74:                                               ; preds = %70
  %75 = zext i32 %72 to i64
  %76 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %68, i64 %75
  br label %77

77:                                               ; preds = %84, %74
  %78 = phi %"class.mojo::StructPtr"* [ %85, %84 ], [ %68, %74 ]
  %79 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %78, i64 0, i32 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %79, align 8
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %79, align 8
  %81 = icmp eq %"class.blink::mojom::blink::FetchAPIRequest"* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %77
  call void @_ZN5blink5mojom5blink15FetchAPIRequestD1Ev(%"class.blink::mojom::blink::FetchAPIRequest"* nonnull %80) #11
  %83 = bitcast %"class.blink::mojom::blink::FetchAPIRequest"* %80 to i8*
  call void @_ZdlPv(i8* %83) #12
  br label %84

84:                                               ; preds = %82, %77
  %85 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %78, i64 1
  %86 = icmp eq %"class.mojo::StructPtr"* %85, %76
  br i1 %86, label %87, label %77

87:                                               ; preds = %84
  store i32 0, i32* %23, align 4
  %88 = bitcast %"class.WTF::Vector.165"* %12 to i8**
  %89 = load i8*, i8** %88, align 8
  br label %90

90:                                               ; preds = %87, %70
  %91 = phi i8* [ %89, %87 ], [ %71, %70 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %91) #11
  store %"class.mojo::StructPtr"* null, %"class.mojo::StructPtr"** %67, align 8
  br label %92

92:                                               ; preds = %66, %90
  %93 = bitcast %"class.base::Location"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %93) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %16, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.1, i64 0, i64 0), i32 90) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %11, %"class.base::Location"* nonnull dereferenceable(32) %16) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %93) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %19) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiter15GetRegistrationElRKN3WTF6StringEPNS0_20BackgroundFetchErrorEPN4mojo9StructPtrINS1_27BackgroundFetchRegistrationEEE(%"class.blink::mojom::blink::BackgroundFetchServiceAsyncWaiter"* nocapture readonly, i64, %"class.WTF::String"* dereferenceable(8), i32*, %"class.mojo::StructPtr.205"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::RunLoop", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = ptrtoint i32* %3 to i64
  %10 = ptrtoint %"class.mojo::StructPtr.205"* %4 to i64
  %11 = bitcast %"class.base::RunLoop"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %6, i32 0) #11
  %12 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchServiceAsyncWaiter", %"class.blink::mojom::blink::BackgroundFetchServiceAsyncWaiter"* %0, i64 0, i32 0
  %13 = load %"class.blink::mojom::blink::BackgroundFetchService"*, %"class.blink::mojom::blink::BackgroundFetchService"** %12, align 8
  %14 = ptrtoint %"class.base::RunLoop"* %6 to i64
  %15 = call i8* @_Znwm(i64 64) #12, !noalias !9
  %16 = bitcast i8* %15 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %16, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"class.mojo::StructPtr.205"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiter15GetRegistrationElRKN3WTF6StringEPNS4_20BackgroundFetchErrorEPN4mojo9StructPtrINS5_27BackgroundFetchRegistrationEEEE3$_1JPNS_7RunLoopESC_SH_EEEFvSB_SG_EE7RunOnceEPNS0_13BindStateBaseESB_OSG_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiter15GetRegistrationElRKN3WTF6StringEPNS3_20BackgroundFetchErrorEPN4mojo9StructPtrINS4_27BackgroundFetchRegistrationEEEE3$_1JPNS_7RunLoopESB_SG_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !9
  %17 = getelementptr inbounds i8, i8* %15, i64 40
  %18 = bitcast i8* %17 to i64*
  store i64 %14, i64* %18, align 8, !noalias !9
  %19 = getelementptr inbounds i8, i8* %15, i64 48
  %20 = bitcast i8* %19 to i64*
  store i64 %9, i64* %20, align 8, !noalias !9
  %21 = getelementptr inbounds i8, i8* %15, i64 56
  %22 = bitcast i8* %21 to i64*
  store i64 %10, i64* %22, align 8, !noalias !9
  %23 = bitcast %"class.base::OnceCallback"* %7 to i8**
  store i8* %15, i8** %23, align 8, !alias.scope !9
  %24 = bitcast %"class.blink::mojom::blink::BackgroundFetchService"* %13 to void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.WTF::String"*, %"class.base::OnceCallback"*)***
  %25 = load void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.WTF::String"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.WTF::String"*, %"class.base::OnceCallback"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.WTF::String"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.WTF::String"*, %"class.base::OnceCallback"*)** %25, i64 3
  %27 = load void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.WTF::String"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.WTF::String"*, %"class.base::OnceCallback"*)** %26, align 8
  call void %27(%"class.blink::mojom::blink::BackgroundFetchService"* %13, i64 %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.base::OnceCallback"* nonnull %7) #11
  %28 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %28) #11
  %29 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.1, i64 0, i64 0), i32 109) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %6, %"class.base::Location"* nonnull dereferenceable(32) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiter15GetDeveloperIdsElPNS0_20BackgroundFetchErrorEPN3WTF6VectorINS5_6StringELj0ENS5_18PartitionAllocatorEEE(%"class.blink::mojom::blink::BackgroundFetchServiceAsyncWaiter"* nocapture readonly, i64, i32*, %"class.WTF::Vector.49"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RunLoop", align 8
  %6 = alloca %"class.base::OnceCallback.203", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = ptrtoint i32* %2 to i64
  %9 = ptrtoint %"class.WTF::Vector.49"* %3 to i64
  %10 = bitcast %"class.base::RunLoop"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %5, i32 0) #11
  %11 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchServiceAsyncWaiter", %"class.blink::mojom::blink::BackgroundFetchServiceAsyncWaiter"* %0, i64 0, i32 0
  %12 = load %"class.blink::mojom::blink::BackgroundFetchService"*, %"class.blink::mojom::blink::BackgroundFetchService"** %11, align 8
  %13 = ptrtoint %"class.base::RunLoop"* %5 to i64
  %14 = call i8* @_Znwm(i64 64) #12, !noalias !14
  %15 = bitcast i8* %14 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %15, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"class.WTF::Vector.49"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiter15GetDeveloperIdsElPNS4_20BackgroundFetchErrorEPN3WTF6VectorINS9_6StringELj0ENS9_18PartitionAllocatorEEEE3$_2JPNS_7RunLoopES8_SE_EEEFvS7_RKSD_EE7RunOnceEPNS0_13BindStateBaseES7_SK_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiter15GetDeveloperIdsElPNS3_20BackgroundFetchErrorEPN3WTF6VectorINS8_6StringELj0ENS8_18PartitionAllocatorEEEE3$_2JPNS_7RunLoopES7_SD_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !14
  %16 = getelementptr inbounds i8, i8* %14, i64 40
  %17 = bitcast i8* %16 to i64*
  store i64 %13, i64* %17, align 8, !noalias !14
  %18 = getelementptr inbounds i8, i8* %14, i64 48
  %19 = bitcast i8* %18 to i64*
  store i64 %8, i64* %19, align 8, !noalias !14
  %20 = getelementptr inbounds i8, i8* %14, i64 56
  %21 = bitcast i8* %20 to i64*
  store i64 %9, i64* %21, align 8, !noalias !14
  %22 = bitcast %"class.base::OnceCallback.203"* %6 to i8**
  store i8* %14, i8** %22, align 8, !alias.scope !14
  %23 = bitcast %"class.blink::mojom::blink::BackgroundFetchService"* %12 to void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.base::OnceCallback.203"*)***
  %24 = load void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.base::OnceCallback.203"*)**, void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.base::OnceCallback.203"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.base::OnceCallback.203"*)*, void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.base::OnceCallback.203"*)** %24, i64 4
  %26 = load void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.base::OnceCallback.203"*)*, void (%"class.blink::mojom::blink::BackgroundFetchService"*, i64, %"class.base::OnceCallback.203"*)** %25, align 8
  call void %26(%"class.blink::mojom::blink::BackgroundFetchService"* %12, i64 %1, %"class.base::OnceCallback.203"* nonnull %6) #11
  %27 = getelementptr inbounds %"class.base::OnceCallback.203", %"class.base::OnceCallback.203"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %27) #11
  %28 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.1, i64 0, i64 0), i32 128) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiter18GetIconDisplaySizeEPN3gfx4SizeE(%"class.blink::mojom::blink::BackgroundFetchServiceAsyncWaiter"* nocapture readonly, %"class.gfx::Size"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::RunLoop", align 8
  %4 = alloca %"class.base::OnceCallback.204", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = ptrtoint %"class.gfx::Size"* %1 to i64
  %7 = bitcast %"class.base::RunLoop"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %3, i32 0) #11
  %8 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchServiceAsyncWaiter", %"class.blink::mojom::blink::BackgroundFetchServiceAsyncWaiter"* %0, i64 0, i32 0
  %9 = load %"class.blink::mojom::blink::BackgroundFetchService"*, %"class.blink::mojom::blink::BackgroundFetchService"** %8, align 8
  %10 = ptrtoint %"class.base::RunLoop"* %3 to i64
  %11 = call i8* @_Znwm(i64 56) #12, !noalias !19
  %12 = bitcast i8* %11 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %12, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.gfx::Size"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiter18GetIconDisplaySizeEPN3gfx4SizeEE3$_3JPNS_7RunLoopES9_EEEFvRKS8_EE7RunOnceEPNS0_13BindStateBaseESF_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiter18GetIconDisplaySizeEPN3gfx4SizeEE3$_3JPNS_7RunLoopES8_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !19
  %13 = getelementptr inbounds i8, i8* %11, i64 40
  %14 = bitcast i8* %13 to i64*
  store i64 %10, i64* %14, align 8, !noalias !19
  %15 = getelementptr inbounds i8, i8* %11, i64 48
  %16 = bitcast i8* %15 to i64*
  store i64 %6, i64* %16, align 8, !noalias !19
  %17 = bitcast %"class.base::OnceCallback.204"* %4 to i8**
  store i8* %11, i8** %17, align 8, !alias.scope !19
  %18 = bitcast %"class.blink::mojom::blink::BackgroundFetchService"* %9 to void (%"class.blink::mojom::blink::BackgroundFetchService"*, %"class.base::OnceCallback.204"*)***
  %19 = load void (%"class.blink::mojom::blink::BackgroundFetchService"*, %"class.base::OnceCallback.204"*)**, void (%"class.blink::mojom::blink::BackgroundFetchService"*, %"class.base::OnceCallback.204"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::mojom::blink::BackgroundFetchService"*, %"class.base::OnceCallback.204"*)*, void (%"class.blink::mojom::blink::BackgroundFetchService"*, %"class.base::OnceCallback.204"*)** %19, i64 5
  %21 = load void (%"class.blink::mojom::blink::BackgroundFetchService"*, %"class.base::OnceCallback.204"*)*, void (%"class.blink::mojom::blink::BackgroundFetchService"*, %"class.base::OnceCallback.204"*)** %20, align 8
  call void %21(%"class.blink::mojom::blink::BackgroundFetchService"* %9, %"class.base::OnceCallback.204"* nonnull %4) #11
  %22 = getelementptr inbounds %"class.base::OnceCallback.204", %"class.base::OnceCallback.204"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #11
  %23 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.1, i64 0, i64 0), i32 143) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %3, %"class.base::Location"* nonnull dereferenceable(32) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink55BackgroundFetchRegistrationServiceInterceptorForTesting8UpdateUIERKN3WTF6StringERK8SkBitmapN4base12OnceCallbackIFvNS0_20BackgroundFetchErrorEEEE(%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*, %"class.WTF::String"* dereferenceable(8), %class.SkBitmap* dereferenceable(56), %"class.base::OnceCallback.242"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback.242", align 8
  %6 = bitcast %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"* %0 to %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*)***
  %7 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*)**, %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*)** %7, i64 6
  %9 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*)** %8, align 8
  %10 = tail call %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* %9(%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"* %0) #11
  %11 = getelementptr inbounds %"class.base::OnceCallback.242", %"class.base::OnceCallback.242"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::OnceCallback.242"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback.242"* %5 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %15 = bitcast %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* %10 to void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.WTF::String"*, %class.SkBitmap*, %"class.base::OnceCallback.242"*)***
  %16 = load void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.WTF::String"*, %class.SkBitmap*, %"class.base::OnceCallback.242"*)**, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.WTF::String"*, %class.SkBitmap*, %"class.base::OnceCallback.242"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.WTF::String"*, %class.SkBitmap*, %"class.base::OnceCallback.242"*)*, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.WTF::String"*, %class.SkBitmap*, %"class.base::OnceCallback.242"*)** %16, i64 2
  %18 = load void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.WTF::String"*, %class.SkBitmap*, %"class.base::OnceCallback.242"*)*, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.WTF::String"*, %class.SkBitmap*, %"class.base::OnceCallback.242"*)** %17, align 8
  call void %18(%"class.blink::mojom::blink::BackgroundFetchRegistrationService"* %10, %"class.WTF::String"* dereferenceable(8) %1, %class.SkBitmap* dereferenceable(56) %2, %"class.base::OnceCallback.242"* nonnull %5) #11
  %19 = getelementptr inbounds %"class.base::OnceCallback.242", %"class.base::OnceCallback.242"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink55BackgroundFetchRegistrationServiceInterceptorForTesting5AbortEN4base12OnceCallbackIFvNS0_20BackgroundFetchErrorEEEE(%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*, %"class.base::OnceCallback.242"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.242", align 8
  %4 = bitcast %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"* %0 to %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*)**, %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*)** %5, i64 6
  %7 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* %7(%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"* %0) #11
  %9 = getelementptr inbounds %"class.base::OnceCallback.242", %"class.base::OnceCallback.242"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback.242"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.242"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* %8 to void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.base::OnceCallback.242"*)***
  %14 = load void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.base::OnceCallback.242"*)**, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.base::OnceCallback.242"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.base::OnceCallback.242"*)*, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.base::OnceCallback.242"*)** %14, i64 3
  %16 = load void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.base::OnceCallback.242"*)*, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.base::OnceCallback.242"*)** %15, align 8
  call void %16(%"class.blink::mojom::blink::BackgroundFetchRegistrationService"* %8, %"class.base::OnceCallback.242"* nonnull %3) #11
  %17 = getelementptr inbounds %"class.base::OnceCallback.242", %"class.base::OnceCallback.242"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink55BackgroundFetchRegistrationServiceInterceptorForTesting13MatchRequestsEN4mojo9StructPtrINS1_15FetchAPIRequestEEENS3_16InlinedStructPtrINS1_17CacheQueryOptionsEEEbN4base12OnceCallbackIFvN3WTF6VectorINS4_INS1_27BackgroundFetchSettledFetchEEELj0ENSC_18PartitionAllocatorEEEEEE(%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*, %"class.mojo::StructPtr"* nocapture, %"class.mojo::InlinedStructPtr.243"* nocapture, i1 zeroext, %"class.base::OnceCallback.244"* nocapture) unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::mojom::blink::CacheQueryOptions", align 1
  %7 = alloca %"class.mojo::StructPtr", align 8
  %8 = alloca %"class.mojo::InlinedStructPtr.243", align 4
  %9 = alloca %"class.base::OnceCallback.244", align 8
  %10 = bitcast %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"* %0 to %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*)***
  %11 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*)**, %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*)** %11, i64 6
  %13 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*)** %12, align 8
  %14 = tail call %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* %13(%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"* %0) #11
  %15 = bitcast %"class.mojo::StructPtr"* %7 to i64*
  %16 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %15, align 8
  store i64 0, i64* %17, align 8
  %19 = getelementptr inbounds %"class.mojo::InlinedStructPtr.243", %"class.mojo::InlinedStructPtr.243"* %8, i64 0, i32 0
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsC1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %19) #11
  %20 = getelementptr inbounds %"class.mojo::InlinedStructPtr.243", %"class.mojo::InlinedStructPtr.243"* %8, i64 0, i32 1
  store i32 0, i32* %20, align 4
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %19) #11
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsC1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %19) #11
  %21 = getelementptr inbounds %"class.blink::mojom::blink::CacheQueryOptions", %"class.blink::mojom::blink::CacheQueryOptions"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %21) #11
  %22 = getelementptr inbounds %"class.mojo::InlinedStructPtr.243", %"class.mojo::InlinedStructPtr.243"* %8, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* nonnull align 4 %22, i64 3, i1 false) #11
  %23 = getelementptr inbounds %"class.mojo::InlinedStructPtr.243", %"class.mojo::InlinedStructPtr.243"* %2, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %22, i8* align 1 %23, i64 3, i1 false) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* nonnull align 1 %21, i64 3, i1 false) #11
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %21) #11
  %24 = getelementptr inbounds %"class.mojo::InlinedStructPtr.243", %"class.mojo::InlinedStructPtr.243"* %2, i64 0, i32 1
  %25 = load i32, i32* %20, align 4
  %26 = load i32, i32* %24, align 4
  store i32 %26, i32* %20, align 4
  store i32 %25, i32* %24, align 4
  %27 = getelementptr inbounds %"class.base::OnceCallback.244", %"class.base::OnceCallback.244"* %4, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.base::OnceCallback.244"* %4 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.base::OnceCallback.244"* %9 to i64*
  store i64 %29, i64* %30, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %27, align 8
  %31 = bitcast %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* %14 to void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr.243"*, i1, %"class.base::OnceCallback.244"*)***
  %32 = load void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr.243"*, i1, %"class.base::OnceCallback.244"*)**, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr.243"*, i1, %"class.base::OnceCallback.244"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr.243"*, i1, %"class.base::OnceCallback.244"*)*, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr.243"*, i1, %"class.base::OnceCallback.244"*)** %32, i64 4
  %34 = load void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr.243"*, i1, %"class.base::OnceCallback.244"*)*, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr.243"*, i1, %"class.base::OnceCallback.244"*)** %33, align 8
  call void %34(%"class.blink::mojom::blink::BackgroundFetchRegistrationService"* %14, %"class.mojo::StructPtr"* nonnull %7, %"class.mojo::InlinedStructPtr.243"* nonnull %8, i1 zeroext %3, %"class.base::OnceCallback.244"* nonnull %9) #11
  %35 = getelementptr inbounds %"class.base::OnceCallback.244", %"class.base::OnceCallback.244"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %35) #11
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %19) #11
  %36 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %16, align 8
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %16, align 8
  %37 = icmp eq %"class.blink::mojom::blink::FetchAPIRequest"* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %5
  call void @_ZN5blink5mojom5blink15FetchAPIRequestD1Ev(%"class.blink::mojom::blink::FetchAPIRequest"* nonnull %36) #11
  %39 = bitcast %"class.blink::mojom::blink::FetchAPIRequest"* %36 to i8*
  call void @_ZdlPv(i8* %39) #12
  br label %40

40:                                               ; preds = %5, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink55BackgroundFetchRegistrationServiceInterceptorForTesting23AddRegistrationObserverEN4mojo13PendingRemoteINS1_35BackgroundFetchRegistrationObserverEEE(%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*, %"class.mojo::PendingRemote.245"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::PendingRemote.245", align 4
  %4 = bitcast %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"* %0 to %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*)**, %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*)** %5, i64 6
  %7 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* %7(%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"* %0) #11
  %9 = getelementptr inbounds %"class.mojo::PendingRemote.245", %"class.mojo::PendingRemote.245"* %3, i64 0, i32 0
  %10 = getelementptr inbounds %"class.mojo::PendingRemote.245", %"class.mojo::PendingRemote.245"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %9, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %10) #11
  %11 = bitcast %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* %8 to void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.mojo::PendingRemote.245"*)***
  %12 = load void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.mojo::PendingRemote.245"*)**, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.mojo::PendingRemote.245"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.mojo::PendingRemote.245"*)*, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.mojo::PendingRemote.245"*)** %12, i64 5
  %14 = load void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.mojo::PendingRemote.245"*)*, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.mojo::PendingRemote.245"*)** %13, align 8
  call void %14(%"class.blink::mojom::blink::BackgroundFetchRegistrationService"* %8, %"class.mojo::PendingRemote.245"* nonnull %3) #11
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %9) #11
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink45BackgroundFetchRegistrationServiceAsyncWaiterC2EPNS1_34BackgroundFetchRegistrationServiceE(%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceAsyncWaiter"* nocapture, %"class.blink::mojom::blink::BackgroundFetchRegistrationService"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceAsyncWaiter", %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* %1, %"class.blink::mojom::blink::BackgroundFetchRegistrationService"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink45BackgroundFetchRegistrationServiceAsyncWaiterD2Ev(%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink45BackgroundFetchRegistrationServiceAsyncWaiter8UpdateUIERKN3WTF6StringERK8SkBitmapPNS0_20BackgroundFetchErrorE(%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceAsyncWaiter"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), %class.SkBitmap* dereferenceable(56), i32*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RunLoop", align 8
  %6 = alloca %"class.base::OnceCallback.242", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = ptrtoint i32* %3 to i64
  %9 = bitcast %"class.base::RunLoop"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %5, i32 0) #11
  %10 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceAsyncWaiter", %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceAsyncWaiter"* %0, i64 0, i32 0
  %11 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.blink::mojom::blink::BackgroundFetchRegistrationService"** %10, align 8
  %12 = ptrtoint %"class.base::RunLoop"* %5 to i64
  %13 = call i8* @_Znwm(i64 56) #12, !noalias !24
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink45BackgroundFetchRegistrationServiceAsyncWaiter8UpdateUIERKN3WTF6StringERK8SkBitmapPNS4_20BackgroundFetchErrorEE3$_4JPNS_7RunLoopESF_EEEFvSE_EE7RunOnceEPNS0_13BindStateBaseESE_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink45BackgroundFetchRegistrationServiceAsyncWaiter8UpdateUIERKN3WTF6StringERK8SkBitmapPNS3_20BackgroundFetchErrorEE3$_4JPNS_7RunLoopESE_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !24
  %15 = getelementptr inbounds i8, i8* %13, i64 40
  %16 = bitcast i8* %15 to i64*
  store i64 %12, i64* %16, align 8, !noalias !24
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = bitcast i8* %17 to i64*
  store i64 %8, i64* %18, align 8, !noalias !24
  %19 = bitcast %"class.base::OnceCallback.242"* %6 to i8**
  store i8* %13, i8** %19, align 8, !alias.scope !24
  %20 = bitcast %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* %11 to void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.WTF::String"*, %class.SkBitmap*, %"class.base::OnceCallback.242"*)***
  %21 = load void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.WTF::String"*, %class.SkBitmap*, %"class.base::OnceCallback.242"*)**, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.WTF::String"*, %class.SkBitmap*, %"class.base::OnceCallback.242"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.WTF::String"*, %class.SkBitmap*, %"class.base::OnceCallback.242"*)*, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.WTF::String"*, %class.SkBitmap*, %"class.base::OnceCallback.242"*)** %21, i64 2
  %23 = load void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.WTF::String"*, %class.SkBitmap*, %"class.base::OnceCallback.242"*)*, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.WTF::String"*, %class.SkBitmap*, %"class.base::OnceCallback.242"*)** %22, align 8
  call void %23(%"class.blink::mojom::blink::BackgroundFetchRegistrationService"* %11, %"class.WTF::String"* dereferenceable(8) %1, %class.SkBitmap* dereferenceable(56) %2, %"class.base::OnceCallback.242"* nonnull %6) #11
  %24 = getelementptr inbounds %"class.base::OnceCallback.242", %"class.base::OnceCallback.242"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #11
  %25 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.1, i64 0, i64 0), i32 178) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink45BackgroundFetchRegistrationServiceAsyncWaiter5AbortEPNS0_20BackgroundFetchErrorE(%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceAsyncWaiter"* nocapture readonly, i32*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::RunLoop", align 8
  %4 = alloca %"class.base::OnceCallback.242", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = ptrtoint i32* %1 to i64
  %7 = bitcast %"class.base::RunLoop"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %3, i32 0) #11
  %8 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceAsyncWaiter", %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceAsyncWaiter"* %0, i64 0, i32 0
  %9 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.blink::mojom::blink::BackgroundFetchRegistrationService"** %8, align 8
  %10 = ptrtoint %"class.base::RunLoop"* %3 to i64
  %11 = call i8* @_Znwm(i64 56) #12, !noalias !29
  %12 = bitcast i8* %11 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %12, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink45BackgroundFetchRegistrationServiceAsyncWaiter5AbortEPNS4_20BackgroundFetchErrorEE3$_5JPNS_7RunLoopES8_EEEFvS7_EE7RunOnceEPNS0_13BindStateBaseES7_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink45BackgroundFetchRegistrationServiceAsyncWaiter5AbortEPNS3_20BackgroundFetchErrorEE3$_5JPNS_7RunLoopES7_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !29
  %13 = getelementptr inbounds i8, i8* %11, i64 40
  %14 = bitcast i8* %13 to i64*
  store i64 %10, i64* %14, align 8, !noalias !29
  %15 = getelementptr inbounds i8, i8* %11, i64 48
  %16 = bitcast i8* %15 to i64*
  store i64 %6, i64* %16, align 8, !noalias !29
  %17 = bitcast %"class.base::OnceCallback.242"* %4 to i8**
  store i8* %11, i8** %17, align 8, !alias.scope !29
  %18 = bitcast %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* %9 to void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.base::OnceCallback.242"*)***
  %19 = load void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.base::OnceCallback.242"*)**, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.base::OnceCallback.242"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.base::OnceCallback.242"*)*, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.base::OnceCallback.242"*)** %19, i64 3
  %21 = load void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.base::OnceCallback.242"*)*, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.base::OnceCallback.242"*)** %20, align 8
  call void %21(%"class.blink::mojom::blink::BackgroundFetchRegistrationService"* %9, %"class.base::OnceCallback.242"* nonnull %4) #11
  %22 = getelementptr inbounds %"class.base::OnceCallback.242", %"class.base::OnceCallback.242"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #11
  %23 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.1, i64 0, i64 0), i32 193) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %3, %"class.base::Location"* nonnull dereferenceable(32) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink45BackgroundFetchRegistrationServiceAsyncWaiter13MatchRequestsEN4mojo9StructPtrINS1_15FetchAPIRequestEEENS3_16InlinedStructPtrINS1_17CacheQueryOptionsEEEbPN3WTF6VectorINS4_INS1_27BackgroundFetchSettledFetchEEELj0ENSA_18PartitionAllocatorEEE(%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceAsyncWaiter"* nocapture readonly, %"class.mojo::StructPtr"* nocapture, %"class.mojo::InlinedStructPtr.243"* nocapture, i1 zeroext, %"class.WTF::Vector.250"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::mojom::blink::CacheQueryOptions", align 1
  %7 = alloca %"class.base::RunLoop", align 8
  %8 = alloca %"class.mojo::StructPtr", align 8
  %9 = alloca %"class.mojo::InlinedStructPtr.243", align 4
  %10 = alloca %"class.base::OnceCallback.244", align 8
  %11 = alloca %"class.base::Location", align 8
  %12 = ptrtoint %"class.WTF::Vector.250"* %4 to i64
  %13 = bitcast %"class.base::RunLoop"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %7, i32 0) #11
  %14 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceAsyncWaiter", %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceAsyncWaiter"* %0, i64 0, i32 0
  %15 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.blink::mojom::blink::BackgroundFetchRegistrationService"** %14, align 8
  %16 = bitcast %"class.mojo::StructPtr"* %8 to i64*
  %17 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 8
  store i64 0, i64* %18, align 8
  %20 = getelementptr inbounds %"class.mojo::InlinedStructPtr.243", %"class.mojo::InlinedStructPtr.243"* %9, i64 0, i32 0
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsC1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %20) #11
  %21 = getelementptr inbounds %"class.mojo::InlinedStructPtr.243", %"class.mojo::InlinedStructPtr.243"* %9, i64 0, i32 1
  store i32 0, i32* %21, align 4
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %20) #11
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsC1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %20) #11
  %22 = getelementptr inbounds %"class.blink::mojom::blink::CacheQueryOptions", %"class.blink::mojom::blink::CacheQueryOptions"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %22) #11
  %23 = getelementptr inbounds %"class.mojo::InlinedStructPtr.243", %"class.mojo::InlinedStructPtr.243"* %9, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %22, i8* nonnull align 4 %23, i64 3, i1 false) #11
  %24 = getelementptr inbounds %"class.mojo::InlinedStructPtr.243", %"class.mojo::InlinedStructPtr.243"* %2, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %23, i8* align 1 %24, i64 3, i1 false) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %24, i8* nonnull align 1 %22, i64 3, i1 false) #11
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %22) #11
  %25 = getelementptr inbounds %"class.mojo::InlinedStructPtr.243", %"class.mojo::InlinedStructPtr.243"* %2, i64 0, i32 1
  %26 = load i32, i32* %21, align 4
  %27 = load i32, i32* %25, align 4
  store i32 %27, i32* %21, align 4
  store i32 %26, i32* %25, align 4
  %28 = ptrtoint %"class.base::RunLoop"* %7 to i64
  %29 = call i8* @_Znwm(i64 56) #12, !noalias !34
  %30 = bitcast i8* %29 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %30, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.WTF::Vector.250"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink45BackgroundFetchRegistrationServiceAsyncWaiter13MatchRequestsEN4mojo9StructPtrINS5_15FetchAPIRequestEEENS7_16InlinedStructPtrINS5_17CacheQueryOptionsEEEbPN3WTF6VectorINS8_INS5_27BackgroundFetchSettledFetchEEELj0ENSE_18PartitionAllocatorEEEE3$_6JPNS_7RunLoopESK_EEEFvSJ_EE7RunOnceEPNS0_13BindStateBaseEOSJ_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink45BackgroundFetchRegistrationServiceAsyncWaiter13MatchRequestsEN4mojo9StructPtrINS4_15FetchAPIRequestEEENS6_16InlinedStructPtrINS4_17CacheQueryOptionsEEEbPN3WTF6VectorINS7_INS4_27BackgroundFetchSettledFetchEEELj0ENSD_18PartitionAllocatorEEEE3$_6JPNS_7RunLoopESJ_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !34
  %31 = getelementptr inbounds i8, i8* %29, i64 40
  %32 = bitcast i8* %31 to i64*
  store i64 %28, i64* %32, align 8, !noalias !34
  %33 = getelementptr inbounds i8, i8* %29, i64 48
  %34 = bitcast i8* %33 to i64*
  store i64 %12, i64* %34, align 8, !noalias !34
  %35 = bitcast %"class.base::OnceCallback.244"* %10 to i8**
  store i8* %29, i8** %35, align 8, !alias.scope !34
  %36 = bitcast %"class.blink::mojom::blink::BackgroundFetchRegistrationService"* %15 to void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr.243"*, i1, %"class.base::OnceCallback.244"*)***
  %37 = load void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr.243"*, i1, %"class.base::OnceCallback.244"*)**, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr.243"*, i1, %"class.base::OnceCallback.244"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr.243"*, i1, %"class.base::OnceCallback.244"*)*, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr.243"*, i1, %"class.base::OnceCallback.244"*)** %37, i64 4
  %39 = load void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr.243"*, i1, %"class.base::OnceCallback.244"*)*, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*, %"class.mojo::StructPtr"*, %"class.mojo::InlinedStructPtr.243"*, i1, %"class.base::OnceCallback.244"*)** %38, align 8
  call void %39(%"class.blink::mojom::blink::BackgroundFetchRegistrationService"* %15, %"class.mojo::StructPtr"* nonnull %8, %"class.mojo::InlinedStructPtr.243"* nonnull %9, i1 zeroext %3, %"class.base::OnceCallback.244"* nonnull %10) #11
  %40 = getelementptr inbounds %"class.base::OnceCallback.244", %"class.base::OnceCallback.244"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %40) #11
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %20) #11
  %41 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %17, align 8
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %17, align 8
  %42 = icmp eq %"class.blink::mojom::blink::FetchAPIRequest"* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %5
  call void @_ZN5blink5mojom5blink15FetchAPIRequestD1Ev(%"class.blink::mojom::blink::FetchAPIRequest"* nonnull %41) #11
  %44 = bitcast %"class.blink::mojom::blink::FetchAPIRequest"* %41 to i8*
  call void @_ZdlPv(i8* %44) #12
  br label %45

45:                                               ; preds = %5, %43
  %46 = bitcast %"class.base::Location"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %46) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %11, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.1, i64 0, i64 0), i32 208) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %7, %"class.base::Location"* nonnull dereferenceable(32) %11) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %46) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink35BackgroundFetchRegistrationObserverD2Ev(%"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink56BackgroundFetchRegistrationObserverInterceptorForTestingD0Ev(%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink22BackgroundFetchServiceD2Ev(%"class.blink::mojom::blink::BackgroundFetchService"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink43BackgroundFetchServiceInterceptorForTestingD0Ev(%"class.blink::mojom::blink::BackgroundFetchServiceInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink34BackgroundFetchRegistrationServiceD2Ev(%"class.blink::mojom::blink::BackgroundFetchRegistrationService"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink55BackgroundFetchRegistrationServiceInterceptorForTestingD0Ev(%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink16FetchAPIResponseD1Ev(%"class.blink::mojom::blink::FetchAPIResponse"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink15FetchAPIRequestD1Ev(%"class.blink::mojom::blink::FetchAPIRequest"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink22BackgroundFetchUkmDataD1Ev(%"class.blink::mojom::blink::BackgroundFetchUkmData"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink22BackgroundFetchOptionsD1Ev(%"class.blink::mojom::blink::BackgroundFetchOptions"*) unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZN5blink5mojom5blink22BackgroundFetchUkmDataC1Ev(%"class.blink::mojom::blink::BackgroundFetchUkmData"*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiter5FetchElRKN3WTF6StringENS7_6VectorIN4mojo9StructPtrINS5_15FetchAPIRequestEEELj0ENS7_18PartitionAllocatorEEENSD_INS5_22BackgroundFetchOptionsEEERK8SkBitmapNSC_16InlinedStructPtrINS5_22BackgroundFetchUkmDataEEEPNS4_20BackgroundFetchErrorEPNSD_INS5_27BackgroundFetchRegistrationEEEE3$_0JPNS_7RunLoopESR_SU_EEEFvSQ_ST_EE7RunOnceEPNS0_13BindStateBaseESQ_OST_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32, %"class.mojo::StructPtr.205"* nocapture dereferenceable(8)) #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::RunLoop"**
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to i32**
  %8 = getelementptr inbounds void ()*, void ()** %4, i64 2
  %9 = bitcast void ()** %8 to %"class.mojo::StructPtr.205"**
  %10 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %5, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = load %"class.mojo::StructPtr.205"*, %"class.mojo::StructPtr.205"** %9, align 8
  %13 = bitcast %"class.mojo::StructPtr.205"* %2 to i64*
  %14 = load i64, i64* %13, align 8
  store i64 0, i64* %13, align 8
  store i32 %1, i32* %11, align 4
  %15 = getelementptr inbounds %"class.mojo::StructPtr.205", %"class.mojo::StructPtr.205"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::mojom::blink::BackgroundFetchRegistration"*, %"class.blink::mojom::blink::BackgroundFetchRegistration"** %15, align 8
  store %"class.blink::mojom::blink::BackgroundFetchRegistration"* null, %"class.blink::mojom::blink::BackgroundFetchRegistration"** %15, align 8
  %17 = icmp eq %"class.blink::mojom::blink::BackgroundFetchRegistration"* %16, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %3
  %19 = bitcast %"class.mojo::StructPtr.205"* %12 to i64*
  store i64 %14, i64* %19, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %10) #11
  br label %27

20:                                               ; preds = %3
  tail call void @_ZN5blink5mojom5blink27BackgroundFetchRegistrationD1Ev(%"class.blink::mojom::blink::BackgroundFetchRegistration"* nonnull %16) #11
  %21 = bitcast %"class.blink::mojom::blink::BackgroundFetchRegistration"* %16 to i8*
  tail call void @_ZdlPv(i8* %21) #12
  %22 = load %"class.blink::mojom::blink::BackgroundFetchRegistration"*, %"class.blink::mojom::blink::BackgroundFetchRegistration"** %15, align 8
  %23 = bitcast %"class.mojo::StructPtr.205"* %12 to i64*
  store i64 %14, i64* %23, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %10) #11
  %24 = icmp eq %"class.blink::mojom::blink::BackgroundFetchRegistration"* %22, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::mojom::blink::BackgroundFetchRegistration"* %22 to i8*
  tail call void @_ZN5blink5mojom5blink27BackgroundFetchRegistrationD1Ev(%"class.blink::mojom::blink::BackgroundFetchRegistration"* nonnull %22) #11
  tail call void @_ZdlPv(i8* %26) #12
  br label %27

27:                                               ; preds = %18, %20, %25
  ret void
}

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink27BackgroundFetchRegistrationD1Ev(%"class.blink::mojom::blink::BackgroundFetchRegistration"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiter5FetchElRKN3WTF6StringENS6_6VectorIN4mojo9StructPtrINS4_15FetchAPIRequestEEELj0ENS6_18PartitionAllocatorEEENSC_INS4_22BackgroundFetchOptionsEEERK8SkBitmapNSB_16InlinedStructPtrINS4_22BackgroundFetchUkmDataEEEPNS3_20BackgroundFetchErrorEPNSC_INS4_27BackgroundFetchRegistrationEEEE3$_0JPNS_7RunLoopESQ_ST_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiter15GetRegistrationElRKN3WTF6StringEPNS4_20BackgroundFetchErrorEPN4mojo9StructPtrINS5_27BackgroundFetchRegistrationEEEE3$_1JPNS_7RunLoopESC_SH_EEEFvSB_SG_EE7RunOnceEPNS0_13BindStateBaseESB_OSG_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32, %"class.mojo::StructPtr.205"* nocapture dereferenceable(8)) #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::RunLoop"**
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to i32**
  %8 = getelementptr inbounds void ()*, void ()** %4, i64 2
  %9 = bitcast void ()** %8 to %"class.mojo::StructPtr.205"**
  %10 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %5, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = load %"class.mojo::StructPtr.205"*, %"class.mojo::StructPtr.205"** %9, align 8
  %13 = bitcast %"class.mojo::StructPtr.205"* %2 to i64*
  %14 = load i64, i64* %13, align 8
  store i64 0, i64* %13, align 8
  store i32 %1, i32* %11, align 4
  %15 = getelementptr inbounds %"class.mojo::StructPtr.205", %"class.mojo::StructPtr.205"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::mojom::blink::BackgroundFetchRegistration"*, %"class.blink::mojom::blink::BackgroundFetchRegistration"** %15, align 8
  store %"class.blink::mojom::blink::BackgroundFetchRegistration"* null, %"class.blink::mojom::blink::BackgroundFetchRegistration"** %15, align 8
  %17 = icmp eq %"class.blink::mojom::blink::BackgroundFetchRegistration"* %16, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %3
  %19 = bitcast %"class.mojo::StructPtr.205"* %12 to i64*
  store i64 %14, i64* %19, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %10) #11
  br label %27

20:                                               ; preds = %3
  tail call void @_ZN5blink5mojom5blink27BackgroundFetchRegistrationD1Ev(%"class.blink::mojom::blink::BackgroundFetchRegistration"* nonnull %16) #11
  %21 = bitcast %"class.blink::mojom::blink::BackgroundFetchRegistration"* %16 to i8*
  tail call void @_ZdlPv(i8* %21) #12
  %22 = load %"class.blink::mojom::blink::BackgroundFetchRegistration"*, %"class.blink::mojom::blink::BackgroundFetchRegistration"** %15, align 8
  %23 = bitcast %"class.mojo::StructPtr.205"* %12 to i64*
  store i64 %14, i64* %23, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %10) #11
  %24 = icmp eq %"class.blink::mojom::blink::BackgroundFetchRegistration"* %22, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::mojom::blink::BackgroundFetchRegistration"* %22 to i8*
  tail call void @_ZN5blink5mojom5blink27BackgroundFetchRegistrationD1Ev(%"class.blink::mojom::blink::BackgroundFetchRegistration"* nonnull %22) #11
  tail call void @_ZdlPv(i8* %26) #12
  br label %27

27:                                               ; preds = %18, %20, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiter15GetRegistrationElRKN3WTF6StringEPNS3_20BackgroundFetchErrorEPN4mojo9StructPtrINS4_27BackgroundFetchRegistrationEEEE3$_1JPNS_7RunLoopESB_SG_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiter15GetDeveloperIdsElPNS4_20BackgroundFetchErrorEPN3WTF6VectorINS9_6StringELj0ENS9_18PartitionAllocatorEEEE3$_2JPNS_7RunLoopES8_SE_EEEFvS7_RKSD_EE7RunOnceEPNS0_13BindStateBaseES7_SK_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32, %"class.WTF::Vector.49"* dereferenceable(16)) #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::RunLoop"**
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to i32**
  %8 = getelementptr inbounds void ()*, void ()** %4, i64 2
  %9 = bitcast void ()** %8 to %"class.WTF::Vector.49"**
  %10 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %5, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = load %"class.WTF::Vector.49"*, %"class.WTF::Vector.49"** %9, align 8
  store i32 %1, i32* %11, align 4
  %13 = tail call dereferenceable(16) %"class.WTF::Vector.49"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector.49"* %12, %"class.WTF::Vector.49"* dereferenceable(16) %2) #11
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.49"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector.49"*, %"class.WTF::Vector.49"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.49"* %1, %0
  br i1 %3, label %219, label %4, !prof !3

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.49", %"class.WTF::Vector.49"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.49", %"class.WTF::Vector.49"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %39

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector.49", %"class.WTF::Vector.49"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::String"*, %"class.WTF::String"** %11, align 8
  %13 = zext i32 %6 to i64
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 %13
  %15 = zext i32 %8 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 %15
  br label %17

17:                                               ; preds = %35, %10
  %18 = phi %"class.WTF::String"* [ %36, %35 ], [ %16, %10 ]
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #11
  br label %35

35:                                               ; preds = %34, %31, %17
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 1
  %37 = icmp eq %"class.WTF::String"* %36, %14
  br i1 %37, label %38, label %17

38:                                               ; preds = %35
  store i32 %8, i32* %5, align 4
  br label %116

39:                                               ; preds = %4
  %40 = getelementptr inbounds %"class.WTF::Vector.49", %"class.WTF::Vector.49"* %0, i64 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = icmp ugt i32 %8, %41
  br i1 %42, label %43, label %114

43:                                               ; preds = %39
  %44 = icmp eq i32 %41, 0
  br i1 %44, label %80, label %45

45:                                               ; preds = %43
  %46 = icmp eq i32 %6, 0
  br i1 %46, label %74, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.WTF::Vector.49", %"class.WTF::Vector.49"* %0, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = zext i32 %6 to i64
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 %50
  br label %52

52:                                               ; preds = %70, %47
  %53 = phi %"class.WTF::String"* [ %71, %70 ], [ %49, %47 ]
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #11
  br label %70

70:                                               ; preds = %69, %66, %52
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 1
  %72 = icmp eq %"class.WTF::String"* %71, %51
  br i1 %72, label %73, label %52

73:                                               ; preds = %70
  store i32 0, i32* %5, align 4
  br label %74

74:                                               ; preds = %73, %45
  %75 = bitcast %"class.WTF::Vector.49"* %0 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = bitcast %"class.WTF::Vector.49"* %0 to i64*
  store atomic i64 0, i64* %77 monotonic, align 8
  store i32 0, i32* %40, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %76) #11
  %78 = load i32, i32* %7, align 4
  %79 = load i32, i32* %40, align 8
  br label %80

80:                                               ; preds = %43, %74
  %81 = phi i32 [ 0, %43 ], [ %79, %74 ]
  %82 = phi i32 [ %8, %43 ], [ %78, %74 ]
  %83 = icmp ult i32 %81, %82
  br i1 %83, label %84, label %114, !prof !2

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.WTF::Vector.49", %"class.WTF::Vector.49"* %0, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::String"*, %"class.WTF::String"** %85, align 8
  %87 = icmp eq %"class.WTF::String"* %86, null
  %88 = zext i32 %82 to i64
  %89 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %88) #11
  %90 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %89, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #11
  br i1 %87, label %91, label %96

91:                                               ; preds = %84
  %92 = ptrtoint i8* %90 to i64
  %93 = bitcast %"class.WTF::Vector.49"* %0 to i64*
  store atomic i64 %92, i64* %93 monotonic, align 8
  %94 = lshr i64 %89, 3
  %95 = trunc i64 %94 to i32
  store i32 %95, i32* %40, align 8
  br label %114

96:                                               ; preds = %84
  %97 = lshr i64 %89, 3
  %98 = ptrtoint i8* %90 to i64
  %99 = load %"class.WTF::String"*, %"class.WTF::String"** %85, align 8
  %100 = icmp ne i8* %90, null
  %101 = icmp ne %"class.WTF::String"* %99, null
  %102 = and i1 %100, %101
  %103 = bitcast %"class.WTF::String"* %99 to i8*
  br i1 %102, label %104, label %110, !prof !2

104:                                              ; preds = %96
  %105 = load i32, i32* %5, align 4
  %106 = zext i32 %105 to i64
  %107 = shl nuw nsw i64 %106, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* nonnull align 8 %103, i64 %107, i1 false) #11
  %108 = bitcast %"class.WTF::Vector.49"* %0 to i8**
  %109 = load i8*, i8** %108, align 8
  br label %110

110:                                              ; preds = %104, %96
  %111 = phi i8* [ %109, %104 ], [ %103, %96 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %111) #11
  %112 = bitcast %"class.WTF::Vector.49"* %0 to i64*
  store atomic i64 %98, i64* %112 monotonic, align 8
  %113 = trunc i64 %97 to i32
  store i32 %113, i32* %40, align 8
  br label %114

114:                                              ; preds = %39, %80, %91, %110
  %115 = load i32, i32* %5, align 4
  br label %116

116:                                              ; preds = %114, %38
  %117 = phi i32 [ %115, %114 ], [ %8, %38 ]
  %118 = getelementptr inbounds %"class.WTF::Vector.49", %"class.WTF::Vector.49"* %1, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.WTF::String"*, %"class.WTF::String"** %118, align 8
  %120 = zext i32 %117 to i64
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 %120
  %122 = getelementptr inbounds %"class.WTF::Vector.49", %"class.WTF::Vector.49"* %0, i64 0, i32 0, i32 0, i32 0
  %123 = load %"class.WTF::String"*, %"class.WTF::String"** %122, align 8
  %124 = icmp eq i32 %117, 0
  br i1 %124, label %175, label %125

125:                                              ; preds = %116, %167
  %126 = phi %"class.WTF::String"* [ %169, %167 ], [ %123, %116 ]
  %127 = phi %"class.WTF::String"* [ %168, %167 ], [ %119, %116 ]
  %128 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 0, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %148, label %131

131:                                              ; preds = %125
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %148

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = zext i32 %138 to i33
  %140 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %139, i33 1) #11
  %141 = extractvalue { i33, i1 } %140, 1
  %142 = extractvalue { i33, i1 } %140, 0
  %143 = icmp slt i33 %142, 0
  %144 = or i1 %141, %143
  br i1 %144, label %145, label %146, !prof !3

145:                                              ; preds = %136
  tail call void @llvm.trap() #11
  unreachable

146:                                              ; preds = %136
  %147 = trunc i33 %142 to i32
  store i32 %147, i32* %137, align 4
  br label %148

148:                                              ; preds = %146, %131, %125
  %149 = ptrtoint %"class.WTF::StringImpl"* %129 to i64
  %150 = bitcast %"class.WTF::String"* %126 to i64*
  %151 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %126, i64 0, i32 0, i32 0
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  store i64 %149, i64* %150, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %167, label %154

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %152) #11
  br label %167

167:                                              ; preds = %166, %163, %148
  %168 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 1
  %169 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %126, i64 1
  %170 = icmp eq %"class.WTF::String"* %168, %121
  br i1 %170, label %171, label %125

171:                                              ; preds = %167
  %172 = load %"class.WTF::String"*, %"class.WTF::String"** %118, align 8
  %173 = load i32, i32* %5, align 4
  %174 = load %"class.WTF::String"*, %"class.WTF::String"** %122, align 8
  br label %175

175:                                              ; preds = %171, %116
  %176 = phi %"class.WTF::String"* [ %174, %171 ], [ %123, %116 ]
  %177 = phi i32 [ %173, %171 ], [ 0, %116 ]
  %178 = phi %"class.WTF::String"* [ %172, %171 ], [ %119, %116 ]
  %179 = zext i32 %177 to i64
  %180 = load i32, i32* %7, align 4
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %178, i64 %181
  %183 = icmp eq i32 %177, %180
  br i1 %183, label %217, label %184

184:                                              ; preds = %175
  %185 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %176, i64 %179
  %186 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %178, i64 %179
  br label %187

187:                                              ; preds = %184, %211
  %188 = phi %"class.WTF::String"* [ %212, %211 ], [ %185, %184 ]
  %189 = phi %"class.WTF::String"* [ %213, %211 ], [ %186, %184 ]
  %190 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 0, i32 0, i32 0
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %190, align 8
  %192 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %188, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %191, %"class.WTF::StringImpl"** %192, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %193, label %211, label %194

194:                                              ; preds = %187
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %211

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  %202 = zext i32 %201 to i33
  %203 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %202, i33 1) #11
  %204 = extractvalue { i33, i1 } %203, 1
  %205 = extractvalue { i33, i1 } %203, 0
  %206 = icmp slt i33 %205, 0
  %207 = or i1 %204, %206
  br i1 %207, label %208, label %209, !prof !3

208:                                              ; preds = %199
  tail call void @llvm.trap() #11
  unreachable

209:                                              ; preds = %199
  %210 = trunc i33 %205 to i32
  store i32 %210, i32* %200, align 4
  br label %211

211:                                              ; preds = %209, %194, %187
  %212 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %188, i64 1
  %213 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 1
  %214 = icmp eq %"class.WTF::String"* %213, %182
  br i1 %214, label %215, label %187

215:                                              ; preds = %211
  %216 = load i32, i32* %7, align 4
  br label %217

217:                                              ; preds = %215, %175
  %218 = phi i32 [ %216, %215 ], [ %177, %175 ]
  store i32 %218, i32* %5, align 4
  br label %219

219:                                              ; preds = %2, %217
  ret %"class.WTF::Vector.49"* %0
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.9, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #5

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #5

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #10

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiter15GetDeveloperIdsElPNS3_20BackgroundFetchErrorEPN3WTF6VectorINS8_6StringELj0ENS8_18PartitionAllocatorEEEE3$_2JPNS_7RunLoopES7_SD_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiter18GetIconDisplaySizeEPN3gfx4SizeEE3$_3JPNS_7RunLoopES9_EEEFvRKS8_EE7RunOnceEPNS0_13BindStateBaseESF_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.gfx::Size"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %7 = bitcast void ()** %5 to i64**
  %8 = load i64*, i64** %7, align 8
  %9 = bitcast %"class.gfx::Size"* %1 to i64*
  %10 = load i64, i64* %9, align 4
  store i64 %10, i64* %8, align 4
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiter18GetIconDisplaySizeEPN3gfx4SizeEE3$_3JPNS_7RunLoopES8_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN5blink5mojom5blink17CacheQueryOptionsC1Ev(%"class.blink::mojom::blink::CacheQueryOptions"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink45BackgroundFetchRegistrationServiceAsyncWaiter8UpdateUIERKN3WTF6StringERK8SkBitmapPNS4_20BackgroundFetchErrorEE3$_4JPNS_7RunLoopESF_EEEFvSE_EE7RunOnceEPNS0_13BindStateBaseESE_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to i32**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load i32*, i32** %6, align 8
  store i32 %1, i32* %8, align 4
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink45BackgroundFetchRegistrationServiceAsyncWaiter8UpdateUIERKN3WTF6StringERK8SkBitmapPNS3_20BackgroundFetchErrorEE3$_4JPNS_7RunLoopESE_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink45BackgroundFetchRegistrationServiceAsyncWaiter5AbortEPNS4_20BackgroundFetchErrorEE3$_5JPNS_7RunLoopES8_EEEFvS7_EE7RunOnceEPNS0_13BindStateBaseES7_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to i32**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load i32*, i32** %6, align 8
  store i32 %1, i32* %8, align 4
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink45BackgroundFetchRegistrationServiceAsyncWaiter5AbortEPNS3_20BackgroundFetchErrorEE3$_5JPNS_7RunLoopES7_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink45BackgroundFetchRegistrationServiceAsyncWaiter13MatchRequestsEN4mojo9StructPtrINS5_15FetchAPIRequestEEENS7_16InlinedStructPtrINS5_17CacheQueryOptionsEEEbPN3WTF6VectorINS8_INS5_27BackgroundFetchSettledFetchEEELj0ENSE_18PartitionAllocatorEEEE3$_6JPNS_7RunLoopESK_EEEFvSJ_EE7RunOnceEPNS0_13BindStateBaseEOSJ_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.WTF::Vector.250"* nocapture dereferenceable(16)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.WTF::Vector.250"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.WTF::Vector.250"*, %"class.WTF::Vector.250"** %6, align 8
  %9 = bitcast %"class.WTF::Vector.250"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store atomic i64 0, i64* %9 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.250", %"class.WTF::Vector.250"* %1, i64 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  store i32 0, i32* %11, align 4
  %13 = getelementptr inbounds %"class.WTF::Vector.250", %"class.WTF::Vector.250"* %1, i64 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  store i32 0, i32* %13, align 4
  %15 = bitcast %"class.WTF::Vector.250"* %8 to i64*
  %16 = load i64, i64* %15, align 8
  store atomic i64 %10, i64* %15 monotonic, align 8
  %17 = getelementptr inbounds %"class.WTF::Vector.250", %"class.WTF::Vector.250"* %8, i64 0, i32 0, i32 0, i32 1
  store i32 %12, i32* %17, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.250", %"class.WTF::Vector.250"* %8, i64 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  store i32 %14, i32* %18, align 4
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  %20 = inttoptr i64 %16 to %"class.mojo::StructPtr.253"*
  %21 = icmp eq i64 %16, 0
  br i1 %21, label %39, label %22, !prof !2

22:                                               ; preds = %2
  %23 = icmp eq i32 %19, 0
  br i1 %23, label %37, label %24, !prof !3

24:                                               ; preds = %22
  %25 = zext i32 %19 to i64
  %26 = getelementptr inbounds %"class.mojo::StructPtr.253", %"class.mojo::StructPtr.253"* %20, i64 %25
  br label %27

27:                                               ; preds = %34, %24
  %28 = phi %"class.mojo::StructPtr.253"* [ %35, %34 ], [ %20, %24 ]
  %29 = getelementptr inbounds %"class.mojo::StructPtr.253", %"class.mojo::StructPtr.253"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::mojom::blink::BackgroundFetchSettledFetch"*, %"class.blink::mojom::blink::BackgroundFetchSettledFetch"** %29, align 8
  store %"class.blink::mojom::blink::BackgroundFetchSettledFetch"* null, %"class.blink::mojom::blink::BackgroundFetchSettledFetch"** %29, align 8
  %31 = icmp eq %"class.blink::mojom::blink::BackgroundFetchSettledFetch"* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %27
  tail call void @_ZN5blink5mojom5blink27BackgroundFetchSettledFetchD1Ev(%"class.blink::mojom::blink::BackgroundFetchSettledFetch"* nonnull %30) #11
  %33 = bitcast %"class.blink::mojom::blink::BackgroundFetchSettledFetch"* %30 to i8*
  tail call void @_ZdlPv(i8* %33) #12
  br label %34

34:                                               ; preds = %32, %27
  %35 = getelementptr inbounds %"class.mojo::StructPtr.253", %"class.mojo::StructPtr.253"* %28, i64 1
  %36 = icmp eq %"class.mojo::StructPtr.253"* %35, %26
  br i1 %36, label %37, label %27

37:                                               ; preds = %34, %22
  %38 = inttoptr i64 %16 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %38) #11
  br label %39

39:                                               ; preds = %2, %37
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink27BackgroundFetchSettledFetchD1Ev(%"class.blink::mojom::blink::BackgroundFetchSettledFetch"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink45BackgroundFetchRegistrationServiceAsyncWaiter13MatchRequestsEN4mojo9StructPtrINS4_15FetchAPIRequestEEENS6_16InlinedStructPtrINS4_17CacheQueryOptionsEEEbPN3WTF6VectorINS7_INS4_27BackgroundFetchSettledFetchEEELj0ENSD_18PartitionAllocatorEEEE3$_6JPNS_7RunLoopESJ_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5, !7}
!5 = distinct !{!5, !6, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiter5FetchElRKN3WTF6StringENS7_6VectorIN4mojo9StructPtrINS5_15FetchAPIRequestEEELj0ENS7_18PartitionAllocatorEEENSD_INS5_22BackgroundFetchOptionsEEERK8SkBitmapNSC_16InlinedStructPtrINS5_22BackgroundFetchUkmDataEEEPNS4_20BackgroundFetchErrorEPNSD_INS5_27BackgroundFetchRegistrationEEEE3$_0JPNS_7RunLoopERSR_RSU_EEEDcOT0_DpOT1_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiter5FetchElRKN3WTF6StringENS7_6VectorIN4mojo9StructPtrINS5_15FetchAPIRequestEEELj0ENS7_18PartitionAllocatorEEENSD_INS5_22BackgroundFetchOptionsEEERK8SkBitmapNSC_16InlinedStructPtrINS5_22BackgroundFetchUkmDataEEEPNS4_20BackgroundFetchErrorEPNSD_INS5_27BackgroundFetchRegistrationEEEE3$_0JPNS_7RunLoopERSR_RSU_EEEDcOT0_DpOT1_"}
!7 = distinct !{!7, !8, !"_ZN4base8BindOnceIZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiter5FetchElRKN3WTF6StringENS5_6VectorIN4mojo9StructPtrINS3_15FetchAPIRequestEEELj0ENS5_18PartitionAllocatorEEENSB_INS3_22BackgroundFetchOptionsEEERK8SkBitmapNSA_16InlinedStructPtrINS3_22BackgroundFetchUkmDataEEEPNS2_20BackgroundFetchErrorEPNSB_INS3_27BackgroundFetchRegistrationEEEE3$_0JPNS_7RunLoopERSP_RSS_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS11_DpOS12_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8BindOnceIZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiter5FetchElRKN3WTF6StringENS5_6VectorIN4mojo9StructPtrINS3_15FetchAPIRequestEEELj0ENS5_18PartitionAllocatorEEENSB_INS3_22BackgroundFetchOptionsEEERK8SkBitmapNSA_16InlinedStructPtrINS3_22BackgroundFetchUkmDataEEEPNS2_20BackgroundFetchErrorEPNSB_INS3_27BackgroundFetchRegistrationEEEE3$_0JPNS_7RunLoopERSP_RSS_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS11_DpOS12_"}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiter15GetRegistrationElRKN3WTF6StringEPNS4_20BackgroundFetchErrorEPN4mojo9StructPtrINS5_27BackgroundFetchRegistrationEEEE3$_1JPNS_7RunLoopERSC_RSH_EEEDcOT0_DpOT1_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiter15GetRegistrationElRKN3WTF6StringEPNS4_20BackgroundFetchErrorEPN4mojo9StructPtrINS5_27BackgroundFetchRegistrationEEEE3$_1JPNS_7RunLoopERSC_RSH_EEEDcOT0_DpOT1_"}
!12 = distinct !{!12, !13, !"_ZN4base8BindOnceIZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiter15GetRegistrationElRKN3WTF6StringEPNS2_20BackgroundFetchErrorEPN4mojo9StructPtrINS3_27BackgroundFetchRegistrationEEEE3$_1JPNS_7RunLoopERSA_RSF_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSO_DpOSP_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8BindOnceIZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiter15GetRegistrationElRKN3WTF6StringEPNS2_20BackgroundFetchErrorEPN4mojo9StructPtrINS3_27BackgroundFetchRegistrationEEEE3$_1JPNS_7RunLoopERSA_RSF_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSO_DpOSP_"}
!14 = !{!15, !17}
!15 = distinct !{!15, !16, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiter15GetDeveloperIdsElPNS4_20BackgroundFetchErrorEPN3WTF6VectorINS9_6StringELj0ENS9_18PartitionAllocatorEEEE3$_2JPNS_7RunLoopERS8_RSE_EEEDcOT0_DpOT1_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiter15GetDeveloperIdsElPNS4_20BackgroundFetchErrorEPN3WTF6VectorINS9_6StringELj0ENS9_18PartitionAllocatorEEEE3$_2JPNS_7RunLoopERS8_RSE_EEEDcOT0_DpOT1_"}
!17 = distinct !{!17, !18, !"_ZN4base8BindOnceIZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiter15GetDeveloperIdsElPNS2_20BackgroundFetchErrorEPN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEEE3$_2JPNS_7RunLoopERS6_RSC_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!18 = distinct !{!18, !"_ZN4base8BindOnceIZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiter15GetDeveloperIdsElPNS2_20BackgroundFetchErrorEPN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEEE3$_2JPNS_7RunLoopERS6_RSC_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
!19 = !{!20, !22}
!20 = distinct !{!20, !21, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiter18GetIconDisplaySizeEPN3gfx4SizeEE3$_3JPNS_7RunLoopERS9_EEEDcOT0_DpOT1_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiter18GetIconDisplaySizeEPN3gfx4SizeEE3$_3JPNS_7RunLoopERS9_EEEDcOT0_DpOT1_"}
!22 = distinct !{!22, !23, !"_ZN4base8BindOnceIZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiter18GetIconDisplaySizeEPN3gfx4SizeEE3$_3JPNS_7RunLoopERS7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!23 = distinct !{!23, !"_ZN4base8BindOnceIZN5blink5mojom5blink33BackgroundFetchServiceAsyncWaiter18GetIconDisplaySizeEPN3gfx4SizeEE3$_3JPNS_7RunLoopERS7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!24 = !{!25, !27}
!25 = distinct !{!25, !26, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink45BackgroundFetchRegistrationServiceAsyncWaiter8UpdateUIERKN3WTF6StringERK8SkBitmapPNS4_20BackgroundFetchErrorEE3$_4JPNS_7RunLoopERSF_EEEDcOT0_DpOT1_: argument 0"}
!26 = distinct !{!26, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink45BackgroundFetchRegistrationServiceAsyncWaiter8UpdateUIERKN3WTF6StringERK8SkBitmapPNS4_20BackgroundFetchErrorEE3$_4JPNS_7RunLoopERSF_EEEDcOT0_DpOT1_"}
!27 = distinct !{!27, !28, !"_ZN4base8BindOnceIZN5blink5mojom5blink45BackgroundFetchRegistrationServiceAsyncWaiter8UpdateUIERKN3WTF6StringERK8SkBitmapPNS2_20BackgroundFetchErrorEE3$_4JPNS_7RunLoopERSD_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!28 = distinct !{!28, !"_ZN4base8BindOnceIZN5blink5mojom5blink45BackgroundFetchRegistrationServiceAsyncWaiter8UpdateUIERKN3WTF6StringERK8SkBitmapPNS2_20BackgroundFetchErrorEE3$_4JPNS_7RunLoopERSD_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
!29 = !{!30, !32}
!30 = distinct !{!30, !31, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink45BackgroundFetchRegistrationServiceAsyncWaiter5AbortEPNS4_20BackgroundFetchErrorEE3$_5JPNS_7RunLoopERS8_EEEDcOT0_DpOT1_: argument 0"}
!31 = distinct !{!31, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink45BackgroundFetchRegistrationServiceAsyncWaiter5AbortEPNS4_20BackgroundFetchErrorEE3$_5JPNS_7RunLoopERS8_EEEDcOT0_DpOT1_"}
!32 = distinct !{!32, !33, !"_ZN4base8BindOnceIZN5blink5mojom5blink45BackgroundFetchRegistrationServiceAsyncWaiter5AbortEPNS2_20BackgroundFetchErrorEE3$_5JPNS_7RunLoopERS6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!33 = distinct !{!33, !"_ZN4base8BindOnceIZN5blink5mojom5blink45BackgroundFetchRegistrationServiceAsyncWaiter5AbortEPNS2_20BackgroundFetchErrorEE3$_5JPNS_7RunLoopERS6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!34 = !{!35, !37}
!35 = distinct !{!35, !36, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink45BackgroundFetchRegistrationServiceAsyncWaiter13MatchRequestsEN4mojo9StructPtrINS5_15FetchAPIRequestEEENS7_16InlinedStructPtrINS5_17CacheQueryOptionsEEEbPN3WTF6VectorINS8_INS5_27BackgroundFetchSettledFetchEEELj0ENSE_18PartitionAllocatorEEEE3$_6JPNS_7RunLoopERSK_EEEDcOT0_DpOT1_: argument 0"}
!36 = distinct !{!36, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink45BackgroundFetchRegistrationServiceAsyncWaiter13MatchRequestsEN4mojo9StructPtrINS5_15FetchAPIRequestEEENS7_16InlinedStructPtrINS5_17CacheQueryOptionsEEEbPN3WTF6VectorINS8_INS5_27BackgroundFetchSettledFetchEEELj0ENSE_18PartitionAllocatorEEEE3$_6JPNS_7RunLoopERSK_EEEDcOT0_DpOT1_"}
!37 = distinct !{!37, !38, !"_ZN4base8BindOnceIZN5blink5mojom5blink45BackgroundFetchRegistrationServiceAsyncWaiter13MatchRequestsEN4mojo9StructPtrINS3_15FetchAPIRequestEEENS5_16InlinedStructPtrINS3_17CacheQueryOptionsEEEbPN3WTF6VectorINS6_INS3_27BackgroundFetchSettledFetchEEELj0ENSC_18PartitionAllocatorEEEE3$_6JPNS_7RunLoopERSI_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSQ_DpOSR_: argument 0"}
!38 = distinct !{!38, !"_ZN4base8BindOnceIZN5blink5mojom5blink45BackgroundFetchRegistrationServiceAsyncWaiter13MatchRequestsEN4mojo9StructPtrINS3_15FetchAPIRequestEEENS5_16InlinedStructPtrINS3_17CacheQueryOptionsEEEbPN3WTF6VectorINS6_INS3_27BackgroundFetchSettledFetchEEELj0ENSC_18PartitionAllocatorEEEE3$_6JPNS_7RunLoopERSI_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSQ_DpOSR_"}
