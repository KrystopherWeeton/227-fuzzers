; ModuleID = '../../third_party/skia/src/image/SkSurface_Gpu.cpp'
source_filename = "../../third_party/skia/src/image/SkSurface_Gpu.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.GrFlushInfo = type { i32, %class.GrBackendSemaphore*, void (i8*)*, i8*, void (i8*, i1)*, i8* }
%class.GrBackendSemaphore = type opaque
%class.SkSurface_Gpu = type { %class.SkSurface_Base, %class.sk_sp.47 }
%class.SkSurface_Base = type { %class.SkSurface, %"class.std::__1::unique_ptr", %class.sk_sp.46 }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkCanvas* }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp, [384 x i64], %class.sk_sp.1, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.8", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.12" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.1 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type { %class.SkRefCnt.base, %class.SkMatrixProvider, %class.SkMarkerStack*, %struct.SkImageInfo, %class.SkSurfaceProps, %class.SkM44, %class.SkM44 }
%class.SkMatrixProvider = type { i32 (...)**, %class.SkM44, %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.2, i32, i32 }
%class.sk_sp.2 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.SkM44 = type { [16 x float] }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type { i32, %class.SkAutoTMalloc, i32, %class.SkAutoTMalloc, %"class.std::__1::vector", %class.SkGlyphRunList, %"class.std::__1::vector.33" }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.15" }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %struct.SkPoint* }
%struct.SkPoint = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.SkGlyphRun*, %class.SkGlyphRun*, %"class.std::__1::__compressed_pair.23" }
%class.SkGlyphRun = type { %class.SkZip, %class.SkSpan, %class.SkSpan.20, %class.SkSpan.21, %class.SkFont }
%class.SkZip = type { %"class.std::__1::tuple", i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.19" }
%"class.std::__1::__tuple_leaf" = type { i16* }
%"class.std::__1::__tuple_leaf.19" = type { %struct.SkPoint* }
%class.SkSpan = type { i8*, i64 }
%class.SkSpan.20 = type { i32*, i64 }
%class.SkSpan.21 = type { %struct.SkPoint*, i64 }
%class.SkFont = type <{ %class.sk_sp.22, float, float, float, i8, i8, i8, i8 }>
%class.sk_sp.22 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %class.SkGlyphRun* }
%class.SkGlyphRunList = type { %class.SkSpan.26, %class.SkTextBlob*, %struct.SkRect, %struct.SkPoint }
%class.SkSpan.26 = type { %class.SkGlyphRun*, i64 }
%class.SkTextBlob = type { %class.SkNVRefCnt.27, %struct.SkRect, i32, %"struct.std::__1::atomic.28" }
%class.SkNVRefCnt.27 = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.28" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { i16*, i16*, %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { i16* }
%class.sk_sp.46 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.sk_sp.47 = type { %class.SkGpuDevice* }
%class.SkGpuDevice = type { %class.SkBaseGpuDevice, %class.sk_sp.48, %"class.std::__1::unique_ptr.265", [8 x i8], %class.GrClipStack }
%class.SkBaseGpuDevice = type { %class.SkBaseDevice }
%class.sk_sp.48 = type { %class.GrRecordingContext* }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.81", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.259" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.49 }
%class.sk_sp.49 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type <{ %class.SkNVRefCnt.50, i32, %struct.GrContextOptions, i32, [4 x i8], %class.sk_sp.51, %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.74", %class.sk_sp.80, %"struct.std::__1::atomic.56", [7 x i8] }>
%class.SkNVRefCnt.50 = type { %"struct.std::__1::atomic" }
%struct.GrContextOptions = type { i8, i32, i32, i32, %class.SkExecutor*, i8, i8, i8, i8, i8, i64, float, float, i32, i8, i8, i32, i32, i8, i8, i32, %"class.GrContextOptions::PersistentCache"*, i32, %"class.GrContextOptions::ShaderErrorHandler"*, i32, i32, i8, i8, %class.GrDriverBugWorkarounds }
%class.SkExecutor = type opaque
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.51 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.52, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.52 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %class.GrTextBlobCache* }
%class.GrTextBlobCache = type { %class.SkSpinlock, %class.SkTInternalLList, %class.SkTHashMap, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrTextBlobCache::PurgeBlobMessage, unsigned int, true>::Inbox" }
%class.SkSpinlock = type { %"struct.std::__1::atomic.56" }
%class.SkTInternalLList = type { %class.GrTextBlob*, %class.GrTextBlob* }
%class.GrTextBlob = type <{ %class.SkGlyphRunPainterInterface, %class.SkNVRefCnt.60, [4 x i8], %class.GrTextBlob*, %class.GrTextBlob*, %class.GrSubRunAllocator, %struct.GrSubRunList, i32, %class.SkMatrix, i32, %"struct.GrTextBlob::Key", float, float, i8, [3 x i8] }>
%class.SkGlyphRunPainterInterface = type { i32 (...)** }
%class.SkNVRefCnt.60 = type { %"struct.std::__1::atomic" }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes }
%class.SkFibBlockSizes = type { i32 }
%struct.GrSubRunList = type { %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %class.GrSubRun* }
%class.GrSubRun = type { i32 (...)**, %"class.std::__1::unique_ptr.61" }
%"struct.GrTextBlob::Key" = type { i32, i32, float, float, i32, %"struct.SkMaskFilterBase::BlurRec", i32, %class.SkMatrix, i8, i8, i8, i8 }
%"struct.SkMaskFilterBase::BlurRec" = type { float, i32 }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.65" }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrTextBlobCache::BlobIDCacheEntry, SkGoodHash>::Pair>::Slot" = type opaque
%"class.SkMessageBus<GrTextBlobCache::PurgeBlobMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray = type { %"struct.GrTextBlobCache::PurgeBlobMessage"*, i64 }
%"struct.GrTextBlobCache::PurgeBlobMessage" = type { i32, i32 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %class.GrThreadSafeCache* }
%class.GrThreadSafeCache = type opaque
%class.sk_sp.80 = type { %class.GrThreadSafePipelineBuilder* }
%class.GrThreadSafePipelineBuilder = type opaque
%"struct.std::__1::atomic.56" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__cxx_atomic_impl.58" }
%"struct.std::__1::__cxx_atomic_impl.58" = type { %"struct.std::__1::__cxx_atomic_base_impl.59" }
%"struct.std::__1::__cxx_atomic_base_impl.59" = type { i8 }
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray.84, %class.SkTHashMap.86, %class.SkTHashMap.95, %class.SkTArray.104, %class.SkTArray.106, i32, i8, [3 x i8] }>
%class.SkTArray.84 = type { %"class.std::__1::unique_ptr.85"*, i64 }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.397" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.398" }
%"struct.std::__1::__compressed_pair_elem.398" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.106, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.107 }
%class.sk_sp.107 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTHashMap.86 = type { %class.SkTHashTable.87 }
%class.SkTHashTable.87 = type { i32, i32, %class.SkAutoTArray.88 }
%class.SkAutoTArray.88 = type { %"class.std::__1::unique_ptr.89" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.95 = type { %class.SkTHashTable.96 }
%class.SkTHashTable.96 = type { i32, i32, %class.SkAutoTArray.97 }
%class.SkAutoTArray.97 = type { %"class.std::__1::unique_ptr.98" }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.402" }
%"struct.std::__1::pair.402" = type { i32, %class.SkTArray.403* }
%class.SkTArray.403 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.104 = type { %"class.std::__1::unique_ptr.105"*, i64 }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.403, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.106 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.118" }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes.114, [4 x i8] }>
%class.SkFibBlockSizes.114 = type { i32 }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %class.GrSubRunAllocator* }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type { %class.GrRecordingContext*, %"struct.GrPathRendererChain::Options", %class.sk_sp.127, %class.SkTArray.136, %class.GrOpsTask*, %class.SkSTArray.224, %class.SkSTArray.227, %"class.std::__1::unique_ptr.229", %class.sk_sp.245, %class.GrTokenTracker, i8, i8, %class.SkTArray.246, %class.GrHashMapWithCache }
%"struct.GrPathRendererChain::Options" = type { i8, i32 }
%class.sk_sp.127 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef, [4 x i8], %"class.std::__1::unique_ptr.128", i32, [4 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.131, i8, [7 x i8] }>
%class.sk_sp.131 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.132, i8*, i64 }
%class.GrBuffer = type { i32 (...)** }
%class.GrNonAtomicRef.132 = type { i32 }
%class.SkTArray.136 = type { %class.sk_sp.137*, i64 }
%class.sk_sp.137 = type { %class.GrRenderTask* }
%class.GrRenderTask = type { %class.SkRefCnt.base, %class.GrRenderTask*, %class.GrRenderTask*, %class.SkSTArray, %class.SkTArray.191, i32, i32, %class.SkSTArray.198, %class.SkSTArray.198, %class.GrTextureResolveRenderTask* }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.138 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.138 = type { %class.sk_sp.139*, i64 }
%class.sk_sp.139 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.140, %class.sk_sp.141, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.186" }
%class.SkNVRefCnt.140 = type { %"struct.std::__1::atomic" }
%class.sk_sp.141 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.144 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.142, i8* }
%class.sk_sp.142 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.143, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.143 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.144 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.145, void (i8*)*, i8* }
%class.SkNVRefCnt.145 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.146, i32, [4 x i8] }
%union.anon.146 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.141, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.51, %class.sk_sp.185, %class.sk_sp.185 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.165, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.176, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type { %class.SkTDynamicHash, %class.GrImageContext* }
%class.SkTDynamicHash = type { %class.SkTHashTable.148 }
%class.SkTHashTable.148 = type { i32, i32, %class.SkAutoTArray.149 }
%class.SkAutoTArray.149 = type { %"class.std::__1::unique_ptr.150" }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"struct.SkTHashTable<GrTextureProxy *, GrUniqueKey, SkTDynamicHash<GrTextureProxy, GrUniqueKey, GrProxyProvider::UniquelyKeyedProxyHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrTextureProxy *, GrUniqueKey, SkTDynamicHash<GrTextureProxy, GrUniqueKey, GrProxyProvider::UniquelyKeyedProxyHashTraits>::AdaptedTraits>::Slot" = type opaque
%class.GrImageContext = type <{ %class.GrContext_Base, %class.GrSingleOwner, [7 x i8] }>
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash.156, i32, [4 x i8] }>
%class.SkTDynamicHash.156 = type { %class.SkTHashTable.157 }
%class.SkTHashTable.157 = type { i32, i32, %class.SkAutoTArray.158 }
%class.SkAutoTArray.158 = type { %"class.std::__1::unique_ptr.159" }
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.165 = type { %class.SkTHashTable.166 }
%class.SkTHashTable.166 = type { i32, i32, %class.SkAutoTArray.167 }
%class.SkAutoTArray.167 = type { %"class.std::__1::unique_ptr.168" }
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.174, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.174 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.175, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.175 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.176 = type { %class.SkTHashTable.177 }
%class.SkTHashTable.177 = type { i32, i32, %class.SkAutoTArray.178 }
%class.SkAutoTArray.178 = type { %"class.std::__1::unique_ptr.179" }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.sk_sp.185 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.186" = type { %"struct.std::__1::__atomic_base.187" }
%"struct.std::__1::__atomic_base.187" = type { %"struct.std::__1::__atomic_base.188" }
%"struct.std::__1::__atomic_base.188" = type { %"struct.std::__1::__cxx_atomic_impl.189" }
%"struct.std::__1::__cxx_atomic_impl.189" = type { %"struct.std::__1::__cxx_atomic_base_impl.190" }
%"struct.std::__1::__cxx_atomic_base_impl.190" = type { i64 }
%class.SkTArray.191 = type { %class.GrTextureProxy**, i64 }
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.192", %class.GrSurfaceProxy }
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%class.SkSTArray.198 = type { %class.SkAlignedSTStorage.199, %class.SkTArray.200 }
%class.SkAlignedSTStorage.199 = type { [8 x i8] }
%class.SkTArray.200 = type { %class.GrRenderTask**, i64 }
%class.GrTextureResolveRenderTask = type opaque
%class.GrOpsTask = type { %class.GrRenderTask, %class.GrAuditTrail*, i8, %class.GrSwizzle, i32, i32, %"struct.std::__1::array", i32, i8, i32, %struct.SkIRect, i32, i32, %class.SkSTArray.201, %class.sk_sp.221, %class.SkTArray.223, %struct.SkRect, %struct.SkIRect }
%class.GrSwizzle = type { i16 }
%"struct.std::__1::array" = type { [4 x float] }
%class.SkSTArray.201 = type { %class.SkAlignedSTStorage.202, %class.SkTArray.203 }
%class.SkAlignedSTStorage.202 = type { [2000 x i8] }
%class.SkTArray.203 = type { %"class.GrOpsTask::OpChain"*, i64 }
%"class.GrOpsTask::OpChain" = type { %"class.GrOpsTask::OpChain::List", %"class.GrProcessorSet::Analysis", [4 x i8], %"class.GrXferProcessor::DstProxyView", %class.GrAppliedClip*, %struct.SkRect }
%"class.GrOpsTask::OpChain::List" = type { %"class.std::__1::unique_ptr.204", %class.GrOp* }
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %class.GrOp* }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr.204", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.GrProcessorSet::Analysis" = type { i16, [2 x i8] }
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.139, i32, %class.GrSwizzle, [2 x i8] }>
%struct.SkIPoint = type { i32, i32 }
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr.212" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.210 }
%union.anon.210 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.211, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.211 = type { i32 }
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.215, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray.215 = type { %class.SkAlignedSTStorage.216, %class.SkTArray.217 }
%class.SkAlignedSTStorage.216 = type { [8 x i8] }
%class.SkTArray.217 = type { %"class.std::__1::unique_ptr.212"*, i64 }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.sk_sp.221 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.222, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.222 = type { %"struct.std::__1::atomic" }
%class.SkTArray.223 = type { %class.GrSurfaceProxy**, i64 }
%class.SkSTArray.224 = type { %class.SkAlignedSTStorage.225, %class.SkTArray.226 }
%class.SkAlignedSTStorage.225 = type { [32 x i8] }
%class.SkTArray.226 = type { i32*, i64 }
%class.SkSTArray.227 = type { %class.SkAlignedSTStorage.228, %class.SkTArray.136 }
%class.SkAlignedSTStorage.228 = type { [32 x i8] }
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %class.GrPathRendererChain* }
%class.GrPathRendererChain = type { %class.SkSTArray.232, %"class.std::__1::unique_ptr.236", %class.GrPathRenderer* }
%class.SkSTArray.232 = type { %class.SkAlignedSTStorage.233, %class.SkTArray.234 }
%class.SkAlignedSTStorage.233 = type { [64 x i8] }
%class.SkTArray.234 = type { %class.sk_sp.235*, i64 }
%class.sk_sp.235 = type { %class.GrPathRenderer* }
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %class.GrCoverageCountingPathRenderer* }
%class.GrCoverageCountingPathRenderer = type opaque
%class.GrPathRenderer = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.245 = type { %class.GrSoftwarePathRenderer* }
%class.GrSoftwarePathRenderer = type opaque
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%class.GrDeferredUploadToken = type { i64 }
%class.SkTArray.246 = type { %class.GrOnFlushCallbackObject**, i64 }
%class.GrOnFlushCallbackObject = type opaque
%class.GrHashMapWithCache = type { %class.SkTHashMap.247, i32, %class.GrRenderTask** }
%class.SkTHashMap.247 = type { %class.SkTHashTable.248 }
%class.SkTHashTable.248 = type { i32, i32, %class.SkAutoTArray.249 }
%class.SkAutoTArray.249 = type { %"class.std::__1::unique_ptr.250" }
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %class.GrProxyProvider* }
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %class.GrSurfaceDrawContext* }
%class.GrSurfaceDrawContext = type { %class.GrSurfaceFillContext.base, %class.SkSurfaceProps, i8, i8, i32, %class.SkGlyphRunListPainter }
%class.GrSurfaceFillContext.base = type <{ %class.GrSurfaceContext, %class.GrSurfaceProxyView, %class.sk_sp.269, i8 }>
%class.GrSurfaceContext = type { i32 (...)**, %class.GrRecordingContext*, %class.GrSurfaceProxyView, %class.GrColorInfo }
%class.GrColorInfo = type { %class.sk_sp.2, %class.sk_sp.268, i32, i32 }
%class.sk_sp.268 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%class.sk_sp.269 = type { %class.GrOpsTask* }
%class.SkGlyphRunListPainter = type { %class.SkSurfaceProps, %class.SkSurfaceProps, i32, i32, %class.SkStrikeForGPUCacheInterface*, %class.SkDrawableGlyphBuffer, %class.SkSourceGlyphBuffer }
%class.SkStrikeForGPUCacheInterface = type { i32 (...)** }
%class.SkDrawableGlyphBuffer = type { i64, i64, i64, %class.SkAutoTArray.270, %class.SkAutoTMalloc }
%class.SkAutoTArray.270 = type { %"class.std::__1::unique_ptr.271" }
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %class.SkGlyphVariant* }
%class.SkGlyphVariant = type { %union.anon.274 }
%union.anon.274 = type { %class.SkGlyph* }
%class.SkGlyph = type { i16, i16, i16, i16, i8*, %"struct.SkGlyph::PathData"*, float, float, i8, i8, %struct.SkPackedGlyphID }
%"struct.SkGlyph::PathData" = type <{ %"struct.SkGlyph::Intercept"*, %class.SkPath, i8, [7 x i8] }>
%"struct.SkGlyph::Intercept" = type { %"struct.SkGlyph::Intercept"*, [2 x float], [2 x float] }
%class.SkPath = type <{ %class.sk_sp.275, i32, %"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3", i8, i8 }>
%class.sk_sp.275 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.276, %struct.SkRect, [4 x i8], %class.SkTDArray.277, %class.SkTDArray.278, %class.SkTDArray.279, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.276 = type { %"struct.std::__1::atomic" }
%class.SkTDArray.277 = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.278 = type { i8*, i32, i32 }
%class.SkTDArray.279 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.280 }
%class.SkTDArray.280 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.56", [3 x i8] }
%struct.SkPackedGlyphID = type { i32 }
%class.SkSourceGlyphBuffer = type { %class.SkZip, i64, i32, i32, %class.SkZip.284, %class.SkSTArray.289, %class.SkSTArray.292 }
%class.SkZip.284 = type { %"class.std::__1::tuple.285", i64 }
%"class.std::__1::tuple.285" = type { %"struct.std::__1::__tuple_impl.286" }
%"struct.std::__1::__tuple_impl.286" = type { %"class.std::__1::__tuple_leaf.287", %"class.std::__1::__tuple_leaf.288" }
%"class.std::__1::__tuple_leaf.287" = type { i16* }
%"class.std::__1::__tuple_leaf.288" = type { %struct.SkPoint* }
%class.SkSTArray.289 = type { %class.SkAlignedSTStorage.290, %class.SkTArray.291 }
%class.SkAlignedSTStorage.290 = type { [8 x i8] }
%class.SkTArray.291 = type { i16*, i64 }
%class.SkSTArray.292 = type { %class.SkAlignedSTStorage.293, %class.SkTArray.294 }
%class.SkAlignedSTStorage.293 = type { [32 x i8] }
%class.SkTArray.294 = type { %struct.SkPoint*, i64 }
%class.GrClipStack = type <{ %class.GrClip, [8 x i8], %class.GrTBlockList, %class.GrTBlockList.298, %class.GrTBlockList.300, %class.GrProxyProvider*, %struct.SkIRect, %class.SkMatrixProvider*, i8, [15 x i8] }>
%class.GrClip = type { i32 (...)** }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [256 x i8] }
%class.GrTBlockList.298 = type { %class.GrSBlockAllocator.299 }
%class.GrSBlockAllocator.299 = type { [192 x i8] }
%class.GrTBlockList.300 = type { %class.GrSBlockAllocator.301 }
%class.GrSBlockAllocator.301 = type { [128 x i8] }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.GrBackendTexture = type { i8, i32, i32, i8, i32, %union.anon.302, %class.sk_sp.304 }
%union.anon.302 = type { %class.GrGLBackendTextureInfo, [120 x i8] }
%class.GrGLBackendTextureInfo = type { %struct.GrGLTextureInfo, %class.GrGLTextureParameters* }
%struct.GrGLTextureInfo = type { i32, i32, i32 }
%class.GrGLTextureParameters = type { %class.SkNVRefCnt.303, %"struct.GrGLTextureParameters::SamplerOverriddenState", %"struct.GrGLTextureParameters::NonsamplerState", i64 }
%class.SkNVRefCnt.303 = type { %"struct.std::__1::atomic" }
%"struct.GrGLTextureParameters::SamplerOverriddenState" = type <{ i32, i32, i32, i32, float, float, i8, [3 x i8] }>
%"struct.GrGLTextureParameters::NonsamplerState" = type <{ i32, i32, i8, [3 x i8] }>
%class.sk_sp.304 = type { %class.GrBackendSurfaceMutableStateImpl* }
%class.GrBackendSurfaceMutableStateImpl = type opaque
%class.GrRenderTarget = type <{ i32 (...)**, %class.sk_sp.305, %class.sk_sp.305, i32, [4 x i8], %class.GrSurface }>
%class.sk_sp.305 = type { %class.GrAttachment* }
%class.GrAttachment = type opaque
%class.GrDirectContextPriv = type { %class.GrDirectContext* }
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.311", %"class.std::__1::unique_ptr.317", %class.sk_sp.323, %"class.std::__1::unique_ptr.324", %"class.std::__1::unique_ptr.330", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.349", %"class.std::__1::unique_ptr.355" }
%"class.std::__1::unique_ptr.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.317" = type { %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.323 = type { %class.GrGpu* }
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %class.GrResourceCache* }
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %class.GrResourceProvider* }
%"class.std::__1::unique_ptr.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type <{ %"class.SkMessageBus<GrClientMappedBufferManager::BufferFinishedMessage, GrDirectContext::DirectContextID, false>::Inbox", %"class.std::__1::forward_list", i8, [7 x i8] }>
%"class.SkMessageBus<GrClientMappedBufferManager::BufferFinishedMessage, GrDirectContext::DirectContextID, false>::Inbox" = type <{ %class.SkTArray.339, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.339 = type { %"struct.GrClientMappedBufferManager::BufferFinishedMessage"*, i64 }
%"struct.GrClientMappedBufferManager::BufferFinishedMessage" = type <{ %class.sk_sp.340, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.sk_sp.340 = type { %class.GrGpuBuffer* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type opaque
%"class.std::__1::unique_ptr.349" = type { %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.355" = type { %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.GrRenderTargetProxy = type <{ i32 (...)**, i8, i8, i8, i8, %struct.SkIRect, [4 x i8], %class.sk_sp.221, [4 x i8], [4 x i8], %class.GrSurfaceProxy }>
%class.GrBackendSurfaceMutableState = type <{ %union.anon.361, i32, i8, [3 x i8] }>
%union.anon.361 = type { %class.GrVkSharedImageInfo }
%class.GrVkSharedImageInfo = type { %"struct.std::__1::atomic.362", %"struct.std::__1::atomic.28" }
%"struct.std::__1::atomic.362" = type { %"struct.std::__1::__atomic_base.363" }
%"struct.std::__1::__atomic_base.363" = type { %"struct.std::__1::__cxx_atomic_impl.364" }
%"struct.std::__1::__cxx_atomic_impl.364" = type { %"struct.std::__1::__cxx_atomic_base_impl.365" }
%"struct.std::__1::__cxx_atomic_base_impl.365" = type { i32 }
%class.GrBackendRenderTarget = type { i8, i8, i32, i32, i32, i32, i32, %union.anon.306, %class.sk_sp.304 }
%union.anon.306 = type { %struct.GrGLFramebufferInfo, [136 x i8] }
%struct.GrGLFramebufferInfo = type { i32, i32 }
%class.sk_sp.307 = type { %class.SkSurface* }
%class.sk_sp.309 = type { %class.GrImageContext* }
%class.SkImage_Gpu = type { %class.SkImage_GpuBase, %"class.SkImage_Gpu::ProxyChooser", %class.GrSwizzle, i32 }
%class.SkImage_GpuBase = type { %class.SkImage_Base.base, %class.sk_sp.309 }
%class.SkImage_Base.base = type { %class.SkImage.base, %"struct.std::__1::atomic.56" }
%class.SkImage.base = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32 }>
%"class.SkImage_Gpu::ProxyChooser" = type <{ %class.SkSpinlock, [7 x i8], %class.sk_sp.139, %class.sk_sp.139, %class.sk_sp.137, i32, [4 x i8] }>
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.GrSurfaceFillContext = type <{ %class.GrSurfaceContext, %class.GrSurfaceProxyView, %class.sk_sp.269, i8, [7 x i8] }>
%class.SkSurfaceCharacterization = type { %class.sk_sp.49, i64, %struct.SkImageInfo, %class.GrBackendFormat, i32, i32, i8, i8, i8, i8, i8, i8, %class.SkSurfaceProps }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%class.SkPaint = type <{ %class.sk_sp.366, %class.sk_sp.367, %class.sk_sp.368, %class.sk_sp.369, %class.sk_sp.370, %struct.SkRGBA4f, float, float, %union.anon.371, [4 x i8] }>
%class.sk_sp.366 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.367 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.368 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.369 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.370 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon.371 = type { %struct.anon.372 }
%struct.anon.372 = type { i32 }
%class.sk_sp.373 = type { %class.SkDeferredDisplayList* }
%class.SkDeferredDisplayList = type { %class.SkNVRefCnt.374, %class.SkSurfaceCharacterization, %"class.std::__1::map", %"class.GrRecordingContext::OwnedArenas", %class.SkTArray.136, %class.SkTArray.384, %class.sk_sp.393, %class.sk_sp.394 }
%class.SkNVRefCnt.374 = type { %"struct.std::__1::atomic" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.375", %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.381" = type { i64 }
%class.SkTArray.384 = type { %"struct.GrRecordingContext::ProgramData"*, i64 }
%"struct.GrRecordingContext::ProgramData" = type { %"class.std::__1::unique_ptr.385", %class.GrProgramInfo* }
%"class.std::__1::unique_ptr.385" = type { %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %class.GrProgramDesc* }
%class.GrProgramDesc = type <{ %class.SkSTArray.388, i32, [4 x i8] }>
%class.SkSTArray.388 = type { %class.SkAlignedSTStorage.389, %class.SkTArray.226 }
%class.SkAlignedSTStorage.389 = type { [132 x i8] }
%class.GrProgramInfo = type opaque
%class.sk_sp.393 = type { %class.GrRenderTargetProxy* }
%class.sk_sp.394 = type { %"class.SkDeferredDisplayList::LazyProxyData"* }
%"class.SkDeferredDisplayList::LazyProxyData" = type { %class.SkRefCnt.base, %class.GrRenderTargetProxy* }
%class.sk_sp.396 = type { %class.GrTextureProxy* }

$_ZN25SkSurfaceCharacterization3setE5sk_spI24GrContextThreadSafeProxyEmRK11SkImageInfoRK15GrBackendFormat15GrSurfaceOriginiNS_11TextureableENS_9MipMappedENS_10UsesGLFBO0ENS_27VkRTSupportsInputAttachmentENS_27VulkanSecondaryCBCompatibleE11GrProtectedRK14SkSurfaceProps = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZN14SkSurface_Base26onRestoreBackingMutabilityEv = comdat any

@_ZTV13SkSurface_Gpu = hidden unnamed_addr constant { [24 x i8*] } { [24 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkSurface_Gpu*)* @_ZN13SkSurface_GpuD2Ev to i8*), i8* bitcast (void (%class.SkSurface_Gpu*)* @_ZN13SkSurface_GpuD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (%class.GrRecordingContext* (%class.SkSurface_Gpu*)* @_ZN13SkSurface_Gpu21onGetRecordingContextEv to i8*), i8* bitcast (void (%class.GrBackendTexture*, %class.SkSurface_Gpu*, i32)* @_ZN13SkSurface_Gpu19onGetBackendTextureEN9SkSurface19BackendHandleAccessE to i8*), i8* bitcast (void (%class.GrBackendRenderTarget*, %class.SkSurface_Gpu*, i32)* @_ZN13SkSurface_Gpu24onGetBackendRenderTargetEN9SkSurface19BackendHandleAccessE to i8*), i8* bitcast (i1 (%class.SkSurface_Gpu*, %class.GrBackendTexture*, i32, i32, void (i8*)*, i8*)* @_ZN13SkSurface_Gpu23onReplaceBackendTextureERK16GrBackendTexture15GrSurfaceOriginN9SkSurface17ContentChangeModeEPFvPvES6_ to i8*), i8* bitcast (%class.SkCanvas* (%class.SkSurface_Gpu*)* @_ZN13SkSurface_Gpu11onNewCanvasEv to i8*), i8* bitcast (void (%class.sk_sp.307*, %class.SkSurface_Gpu*, %struct.SkImageInfo*)* @_ZN13SkSurface_Gpu12onNewSurfaceERK11SkImageInfo to i8*), i8* bitcast (void (%class.sk_sp.46*, %class.SkSurface_Gpu*, %struct.SkIRect*)* @_ZN13SkSurface_Gpu18onNewImageSnapshotEPK7SkIRect to i8*), i8* bitcast (void (%class.SkSurface_Gpu*, %class.SkPixmap*, i32, i32)* @_ZN13SkSurface_Gpu13onWritePixelsERK8SkPixmapii to i8*), i8* bitcast (void (%class.SkSurface_Gpu*, %struct.SkImageInfo*, %struct.SkIRect*, i1, i32, {}*, i8*)* @_ZN13SkSurface_Gpu27onAsyncRescaleAndReadPixelsERK11SkImageInfoRK7SkIRectN7SkImage12RescaleGammaENS6_11RescaleModeEPFvPvNSt3__110unique_ptrIKNS6_15AsyncReadResultENSA_14default_deleteISD_EEEEES9_ to i8*), i8* bitcast (void (%class.SkSurface_Gpu*, i32, %class.sk_sp.2*, %struct.SkIRect*, %struct.SkISize*, i1, i32, {}*, i8*)* @_ZN13SkSurface_Gpu33onAsyncRescaleAndReadPixelsYUV420E15SkYUVColorSpace5sk_spI12SkColorSpaceERK7SkIRectRK7SkISizeN7SkImage12RescaleGammaENSA_11RescaleModeEPFvPvNSt3__110unique_ptrIKNSA_15AsyncReadResultENSE_14default_deleteISH_EEEEESD_ to i8*), i8* bitcast (void (%class.SkSurface_Gpu*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN13SkSurface_Gpu6onDrawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint to i8*), i8* bitcast (void (%class.SkSurface_Gpu*)* @_ZN13SkSurface_Gpu9onDiscardEv to i8*), i8* bitcast (void (%class.SkSurface_Gpu*, i32)* @_ZN13SkSurface_Gpu13onCopyOnWriteEN9SkSurface17ContentChangeModeE to i8*), i8* bitcast (void (%class.SkSurface_Base*)* @_ZN14SkSurface_Base26onRestoreBackingMutabilityEv to i8*), i8* bitcast (i1 (%class.SkSurface_Gpu*, i32, %struct.GrFlushInfo*, %class.GrBackendSurfaceMutableState*)* @_ZN13SkSurface_Gpu7onFlushEN9SkSurface20BackendSurfaceAccessERK11GrFlushInfoPK28GrBackendSurfaceMutableState to i8*), i8* bitcast (i1 (%class.SkSurface_Gpu*, i32, %class.GrBackendSemaphore*, i1)* @_ZN13SkSurface_Gpu6onWaitEiPK18GrBackendSemaphoreb to i8*), i8* bitcast (i1 (%class.SkSurface_Gpu*, %class.SkSurfaceCharacterization*)* @_ZNK13SkSurface_Gpu14onCharacterizeEP25SkSurfaceCharacterization to i8*), i8* bitcast (i1 (%class.SkSurface_Gpu*, %class.SkSurfaceCharacterization*)* @_ZNK13SkSurface_Gpu14onIsCompatibleERK25SkSurfaceCharacterization to i8*), i8* bitcast (i1 (%class.SkSurface_Gpu*, %class.sk_sp.373*, i64)* @_ZN13SkSurface_Gpu6onDrawE5sk_spIK21SkDeferredDisplayListE8SkIPoint to i8*)] }, align 8
@.ref.tmp = private constant %struct.GrFlushInfo zeroinitializer, align 8
@switch.table._ZN13SkSurface_Gpu23onReplaceBackendTextureERK16GrBackendTexture15GrSurfaceOriginN9SkSurface17ContentChangeModeEPFvPvES6_ = private unnamed_addr constant [21 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 6, i32 8, i32 9, i32 10, i32 0, i32 0, i32 11, i32 15, i32 14, i32 16, i32 7, i32 13, i32 19, i32 17, i32 18, i32 20], align 4

@_ZN13SkSurface_GpuC1E5sk_spI11SkGpuDeviceE = hidden unnamed_addr alias void (%class.SkSurface_Gpu*, %class.sk_sp.47*), void (%class.SkSurface_Gpu*, %class.sk_sp.47*)* @_ZN13SkSurface_GpuC2E5sk_spI11SkGpuDeviceE
@_ZN13SkSurface_GpuD1Ev = hidden unnamed_addr alias void (%class.SkSurface_Gpu*), void (%class.SkSurface_Gpu*)* @_ZN13SkSurface_GpuD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkSurface_GpuC2E5sk_spI11SkGpuDeviceE(%class.SkSurface_Gpu*, %class.sk_sp.47* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.sk_sp.47, %class.sk_sp.47* %1, i64 0, i32 0
  %5 = load %class.SkGpuDevice*, %class.SkGpuDevice** %4, align 8
  %6 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %5, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %5, i64 0, i32 0, i32 0, i32 3, i32 1, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %5, i64 0, i32 0, i32 0, i32 4
  tail call void @_ZN14SkSurface_BaseC2EiiPK14SkSurfaceProps(%class.SkSurface_Base* %3, i32 %7, i32 %9, %class.SkSurfaceProps* %10) #8
  %11 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTV13SkSurface_Gpu, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %0, i64 0, i32 1
  %13 = bitcast %class.sk_sp.47* %1 to i64*
  %14 = load i64, i64* %13, align 8
  store %class.SkGpuDevice* null, %class.SkGpuDevice** %4, align 8
  %15 = bitcast %class.sk_sp.47* %12 to i64*
  store i64 %14, i64* %15, align 8
  ret void
}

declare void @_ZN14SkSurface_BaseC2EiiPK14SkSurfaceProps(%class.SkSurface_Base*, i32, i32, %class.SkSurfaceProps*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkSurface_GpuD2Ev(%class.SkSurface_Gpu*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTV13SkSurface_Gpu, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %0, i64 0, i32 1, i32 0
  %4 = load %class.SkGpuDevice*, %class.SkGpuDevice** %3, align 8
  %5 = icmp eq %class.SkGpuDevice* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkGpuDevice* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkGpuDevice* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #8
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %0, i64 0, i32 0
  tail call void @_ZN14SkSurface_BaseD2Ev(%class.SkSurface_Base* %17) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN14SkSurface_BaseD2Ev(%class.SkSurface_Base*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkSurface_GpuD0Ev(%class.SkSurface_Gpu*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTV13SkSurface_Gpu, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %0, i64 0, i32 1, i32 0
  %4 = load %class.SkGpuDevice*, %class.SkGpuDevice** %3, align 8
  %5 = icmp eq %class.SkGpuDevice* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkGpuDevice* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkGpuDevice* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #8
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %0, i64 0, i32 0
  tail call void @_ZN14SkSurface_BaseD2Ev(%class.SkSurface_Base* %17) #8
  %18 = bitcast %class.SkSurface_Gpu* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrRecordingContext* @_ZN13SkSurface_Gpu21onGetRecordingContextEv(%class.SkSurface_Gpu* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %0, i64 0, i32 1, i32 0
  %3 = load %class.SkGpuDevice*, %class.SkGpuDevice** %2, align 8
  %4 = bitcast %class.SkGpuDevice* %3 to %class.GrRecordingContext* (%class.SkGpuDevice*)***
  %5 = load %class.GrRecordingContext* (%class.SkGpuDevice*)**, %class.GrRecordingContext* (%class.SkGpuDevice*)*** %4, align 16
  %6 = getelementptr inbounds %class.GrRecordingContext* (%class.SkGpuDevice*)*, %class.GrRecordingContext* (%class.SkGpuDevice*)** %5, i64 8
  %7 = load %class.GrRecordingContext* (%class.SkGpuDevice*)*, %class.GrRecordingContext* (%class.SkGpuDevice*)** %6, align 8
  %8 = tail call %class.GrRecordingContext* %7(%class.SkGpuDevice* %3) #8
  ret %class.GrRecordingContext* %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.SkBaseGpuDevice* @_ZN13SkSurface_Gpu9getDeviceEv(%class.SkSurface_Gpu* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %0, i64 0, i32 1, i32 0
  %3 = load %class.SkGpuDevice*, %class.SkGpuDevice** %2, align 8
  %4 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %3, i64 0, i32 0
  ret %class.SkBaseGpuDevice* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkSurface_Gpu19onGetBackendTextureEN9SkSurface19BackendHandleAccessE(%class.GrBackendTexture* noalias sret, %class.SkSurface_Gpu*, i32) unnamed_addr #0 align 2 {
  %4 = tail call fastcc %class.GrRenderTarget* @_ZL30prepare_rt_for_external_accessP13SkSurface_GpuN9SkSurface19BackendHandleAccessE(%class.SkSurface_Gpu* %1, i32 %2)
  %5 = icmp eq %class.GrRenderTarget* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %3
  tail call void @_ZN16GrBackendTextureC1Ev(%class.GrBackendTexture* %0) #8
  br label %28

7:                                                ; preds = %3
  %8 = bitcast %class.GrRenderTarget* %4 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr i8, i8* %9, i64 -24
  %11 = bitcast i8* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %class.GrRenderTarget* %4 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 %12
  %15 = bitcast i8* %14 to %class.GrSurface*
  %16 = bitcast i8* %14 to %class.GrTexture* (%class.GrSurface*)***
  %17 = load %class.GrTexture* (%class.GrSurface*)**, %class.GrTexture* (%class.GrSurface*)*** %16, align 8
  %18 = getelementptr inbounds %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %17, i64 10
  %19 = load %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %18, align 8
  %20 = tail call %class.GrTexture* %19(%class.GrSurface* %15) #8
  %21 = icmp eq %class.GrTexture* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %7
  %23 = bitcast %class.GrTexture* %20 to void (%class.GrBackendTexture*, %class.GrTexture*)***
  %24 = load void (%class.GrBackendTexture*, %class.GrTexture*)**, void (%class.GrBackendTexture*, %class.GrTexture*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.GrBackendTexture*, %class.GrTexture*)*, void (%class.GrBackendTexture*, %class.GrTexture*)** %24, i64 2
  %26 = load void (%class.GrBackendTexture*, %class.GrTexture*)*, void (%class.GrBackendTexture*, %class.GrTexture*)** %25, align 8
  tail call void %26(%class.GrBackendTexture* sret %0, %class.GrTexture* nonnull %20) #8
  br label %28

27:                                               ; preds = %7
  tail call void @_ZN16GrBackendTextureC1Ev(%class.GrBackendTexture* %0) #8
  br label %28

28:                                               ; preds = %22, %27, %6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc %class.GrRenderTarget* @_ZL30prepare_rt_for_external_accessP13SkSurface_GpuN9SkSurface19BackendHandleAccessE(%class.SkSurface_Gpu*, i32) unnamed_addr #0 {
  %3 = alloca %class.GrSurfaceProxy*, align 8
  %4 = alloca %class.GrSurfaceProxyView, align 8
  %5 = alloca %class.GrDirectContextPriv, align 8
  %6 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %0, i64 0, i32 0, i32 0
  %7 = tail call %class.GrRecordingContext* @_ZN9SkSurface16recordingContextEv(%class.SkSurface* %6) #8
  %8 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %7, i64 0, i32 0, i32 0
  %9 = bitcast %class.GrRecordingContext* %7 to %class.GrDirectContext* (%class.GrContext_Base*)***
  %10 = load %class.GrDirectContext* (%class.GrContext_Base*)**, %class.GrDirectContext* (%class.GrContext_Base*)*** %9, align 8
  %11 = getelementptr inbounds %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %10, i64 3
  %12 = load %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %11, align 8
  %13 = tail call %class.GrDirectContext* %12(%class.GrContext_Base* %8) #8
  %14 = icmp eq %class.GrDirectContext* %13, null
  br i1 %14, label %95, label %15

15:                                               ; preds = %2
  %16 = bitcast %class.GrDirectContext* %13 to i1 (%class.GrDirectContext*)***
  %17 = load i1 (%class.GrDirectContext*)**, i1 (%class.GrDirectContext*)*** %16, align 8
  %18 = getelementptr inbounds i1 (%class.GrDirectContext*)*, i1 (%class.GrDirectContext*)** %17, i64 8
  %19 = load i1 (%class.GrDirectContext*)*, i1 (%class.GrDirectContext*)** %18, align 8
  %20 = tail call zeroext i1 %19(%class.GrDirectContext* nonnull %13) #8
  br i1 %20, label %95, label %21

21:                                               ; preds = %15
  %22 = add i32 %1, -1
  %23 = icmp ult i32 %22, 2
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  tail call void @_ZN9SkSurface23notifyContentWillChangeENS_17ContentChangeModeE(%class.SkSurface* %6, i32 1) #8
  br label %25

25:                                               ; preds = %21, %24
  %26 = bitcast %class.GrDirectContextPriv* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #8
  %27 = getelementptr inbounds %class.GrDirectContextPriv, %class.GrDirectContextPriv* %5, i64 0, i32 0
  store %class.GrDirectContext* %13, %class.GrDirectContext** %27, align 8, !alias.scope !2
  %28 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %0, i64 0, i32 1, i32 0
  %29 = load %class.SkGpuDevice*, %class.SkGpuDevice** %28, align 8
  %30 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %29, i64 0, i32 0
  %31 = bitcast %class.GrSurfaceProxyView* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #8
  %32 = bitcast %class.SkGpuDevice* %29 to void (%class.GrSurfaceProxyView*, %class.SkBaseGpuDevice*)***
  %33 = load void (%class.GrSurfaceProxyView*, %class.SkBaseGpuDevice*)**, void (%class.GrSurfaceProxyView*, %class.SkBaseGpuDevice*)*** %32, align 8
  %34 = getelementptr inbounds void (%class.GrSurfaceProxyView*, %class.SkBaseGpuDevice*)*, void (%class.GrSurfaceProxyView*, %class.SkBaseGpuDevice*)** %33, i64 61
  %35 = load void (%class.GrSurfaceProxyView*, %class.SkBaseGpuDevice*)*, void (%class.GrSurfaceProxyView*, %class.SkBaseGpuDevice*)** %34, align 8
  call void %35(%class.GrSurfaceProxyView* nonnull sret %4, %class.SkBaseGpuDevice* %30) #8
  %36 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %4, i64 0, i32 0, i32 0
  %37 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %36, align 8
  %38 = icmp eq %class.GrSurfaceProxy* %37, null
  br i1 %38, label %39, label %40

39:                                               ; preds = %25
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #8
  br label %71

40:                                               ; preds = %25
  %41 = bitcast %class.GrSurfaceProxy* %37 to %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)***
  %42 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)**, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*** %41, align 8
  %43 = getelementptr inbounds %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %42, i64 5
  %44 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %43, align 8
  %45 = call %class.GrRenderTargetProxy* %44(%class.GrSurfaceProxy* nonnull %37) #8
  %46 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %36, align 8
  %47 = icmp eq %class.GrSurfaceProxy* %46, null
  br i1 %47, label %60, label %48

48:                                               ; preds = %40
  %49 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %46, i64 0, i32 1
  %50 = getelementptr inbounds %class.SkNVRefCnt.140, %class.SkNVRefCnt.140* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw add i32* %50, i32 -1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %60

53:                                               ; preds = %48
  %54 = getelementptr inbounds %class.SkNVRefCnt.140, %class.SkNVRefCnt.140* %49, i64 -2
  %55 = bitcast %class.SkNVRefCnt.140* %54 to %class.GrSurfaceProxy*
  %56 = bitcast %class.SkNVRefCnt.140* %54 to void (%class.GrSurfaceProxy*)***
  %57 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %56, align 8
  %58 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %57, i64 1
  %59 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %58, align 8
  call void %59(%class.GrSurfaceProxy* nonnull %55) #8
  br label %60

60:                                               ; preds = %40, %48, %53
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #8
  %61 = icmp eq %class.GrRenderTargetProxy* %45, null
  br i1 %61, label %71, label %62

62:                                               ; preds = %60
  %63 = bitcast %class.GrRenderTargetProxy* %45 to i8**
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr i8, i8* %64, i64 -24
  %66 = bitcast i8* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %class.GrRenderTargetProxy* %45 to i8*
  %69 = getelementptr inbounds i8, i8* %68, i64 %67
  %70 = bitcast i8* %69 to %class.GrSurfaceProxy*
  br label %71

71:                                               ; preds = %39, %62, %60
  %72 = phi %class.GrSurfaceProxy* [ %70, %62 ], [ null, %60 ], [ null, %39 ]
  %73 = bitcast %class.GrSurfaceProxy** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73)
  store %class.GrSurfaceProxy* %72, %class.GrSurfaceProxy** %3, align 8
  %74 = icmp ne %class.GrSurfaceProxy* %72, null
  %75 = zext i1 %74 to i64
  %76 = call zeroext i1 @_ZN19GrDirectContextPriv13flushSurfacesE6SkSpanIP14GrSurfaceProxyEN9SkSurface20BackendSurfaceAccessERK11GrFlushInfoPK28GrBackendSurfaceMutableState(%class.GrDirectContextPriv* nonnull %5, %class.GrSurfaceProxy** nonnull %3, i64 %75, i32 0, %struct.GrFlushInfo* nonnull dereferenceable(48) @.ref.tmp, %class.GrBackendSurfaceMutableState* null) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #8
  %77 = load %class.SkGpuDevice*, %class.SkGpuDevice** %28, align 8
  %78 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %77, i64 0, i32 0, i32 0
  %79 = bitcast %class.SkGpuDevice* %77 to %class.GrSurfaceDrawContext* (%class.SkBaseDevice*)***
  %80 = load %class.GrSurfaceDrawContext* (%class.SkBaseDevice*)**, %class.GrSurfaceDrawContext* (%class.SkBaseDevice*)*** %79, align 8
  %81 = getelementptr inbounds %class.GrSurfaceDrawContext* (%class.SkBaseDevice*)*, %class.GrSurfaceDrawContext* (%class.SkBaseDevice*)** %80, i64 9
  %82 = load %class.GrSurfaceDrawContext* (%class.SkBaseDevice*)*, %class.GrSurfaceDrawContext* (%class.SkBaseDevice*)** %81, align 8
  %83 = call %class.GrSurfaceDrawContext* %82(%class.SkBaseDevice* %78) #8
  %84 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %83, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %85 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %84, align 8
  %86 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %85, i64 0, i32 2, i32 0
  %87 = load %class.GrSurface*, %class.GrSurface** %86, align 8
  %88 = icmp eq %class.GrSurface* %87, null
  br i1 %88, label %95, label %89

89:                                               ; preds = %71
  %90 = bitcast %class.GrSurface* %87 to %class.GrRenderTarget* (%class.GrSurface*)***
  %91 = load %class.GrRenderTarget* (%class.GrSurface*)**, %class.GrRenderTarget* (%class.GrSurface*)*** %90, align 8
  %92 = getelementptr inbounds %class.GrRenderTarget* (%class.GrSurface*)*, %class.GrRenderTarget* (%class.GrSurface*)** %91, i64 12
  %93 = load %class.GrRenderTarget* (%class.GrSurface*)*, %class.GrRenderTarget* (%class.GrSurface*)** %92, align 8
  %94 = call %class.GrRenderTarget* %93(%class.GrSurface* nonnull %87) #8
  br label %95

95:                                               ; preds = %89, %71, %15, %2
  %96 = phi %class.GrRenderTarget* [ null, %2 ], [ null, %15 ], [ %94, %89 ], [ null, %71 ]
  ret %class.GrRenderTarget* %96
}

declare void @_ZN16GrBackendTextureC1Ev(%class.GrBackendTexture*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkSurface_Gpu24onGetBackendRenderTargetEN9SkSurface19BackendHandleAccessE(%class.GrBackendRenderTarget* noalias sret, %class.SkSurface_Gpu*, i32) unnamed_addr #0 align 2 {
  %4 = tail call fastcc %class.GrRenderTarget* @_ZL30prepare_rt_for_external_accessP13SkSurface_GpuN9SkSurface19BackendHandleAccessE(%class.SkSurface_Gpu* %1, i32 %2)
  %5 = icmp eq %class.GrRenderTarget* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %3
  tail call void @_ZN21GrBackendRenderTargetC1Ev(%class.GrBackendRenderTarget* %0) #8
  br label %12

7:                                                ; preds = %3
  %8 = bitcast %class.GrRenderTarget* %4 to void (%class.GrBackendRenderTarget*, %class.GrRenderTarget*)***
  %9 = load void (%class.GrBackendRenderTarget*, %class.GrRenderTarget*)**, void (%class.GrBackendRenderTarget*, %class.GrRenderTarget*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.GrBackendRenderTarget*, %class.GrRenderTarget*)*, void (%class.GrBackendRenderTarget*, %class.GrRenderTarget*)** %9, i64 3
  %11 = load void (%class.GrBackendRenderTarget*, %class.GrRenderTarget*)*, void (%class.GrBackendRenderTarget*, %class.GrRenderTarget*)** %10, align 8
  tail call void %11(%class.GrBackendRenderTarget* sret %0, %class.GrRenderTarget* nonnull %4) #8
  br label %12

12:                                               ; preds = %7, %6
  ret void
}

declare void @_ZN21GrBackendRenderTargetC1Ev(%class.GrBackendRenderTarget*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %class.SkCanvas* @_ZN13SkSurface_Gpu11onNewCanvasEv(%class.SkSurface_Gpu* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %class.sk_sp.1, align 8
  %3 = tail call i8* @_Znwm(i64 3232) #9
  %4 = bitcast i8* %3 to %class.SkCanvas*
  %5 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %2, i64 0, i32 0
  %6 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %0, i64 0, i32 1, i32 0
  %7 = load %class.SkGpuDevice*, %class.SkGpuDevice** %6, align 8
  %8 = icmp eq %class.SkGpuDevice* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  br label %12

12:                                               ; preds = %1, %9
  %13 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %7, i64 0, i32 0, i32 0
  store %class.SkBaseDevice* %13, %class.SkBaseDevice** %5, align 8
  call void @_ZN8SkCanvasC1E5sk_spI12SkBaseDeviceE(%class.SkCanvas* nonnull %4, %class.sk_sp.1* nonnull %2) #8
  %14 = load %class.SkBaseDevice*, %class.SkBaseDevice** %5, align 8
  %15 = icmp eq %class.SkBaseDevice* %14, null
  br i1 %15, label %26, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %14, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %26

20:                                               ; preds = %16
  %21 = bitcast %class.SkBaseDevice* %14 to %class.SkRefCntBase*
  %22 = bitcast %class.SkBaseDevice* %14 to void (%class.SkRefCntBase*)***
  %23 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, i64 2
  %25 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, align 8
  call void %25(%class.SkRefCntBase* nonnull %21) #8
  br label %26

26:                                               ; preds = %12, %16, %20
  ret %class.SkCanvas* %4
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN8SkCanvasC1E5sk_spI12SkBaseDeviceE(%class.SkCanvas*, %class.sk_sp.1*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkSurface_Gpu12onNewSurfaceERK11SkImageInfo(%class.sk_sp.307* noalias nocapture sret, %class.SkSurface_Gpu*, %struct.SkImageInfo* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = alloca %class.GrSurfaceProxyView, align 8
  %5 = bitcast %class.GrSurfaceProxyView* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #8
  %6 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %4, i64 0, i32 1
  %8 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %1, i64 0, i32 1, i32 0
  %9 = bitcast %class.GrSurfaceProxyView* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load %class.SkGpuDevice*, %class.SkGpuDevice** %8, align 8
  %11 = bitcast %class.SkGpuDevice* %10 to void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)***
  %12 = load void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)**, void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)*** %11, align 16
  %13 = getelementptr inbounds void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)*, void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)** %12, i64 61
  %14 = load void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)*, void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)** %13, align 8
  call void %14(%class.GrSurfaceProxyView* nonnull sret %4, %class.SkGpuDevice* %10) #8
  %15 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %6, align 8
  %16 = icmp eq %class.GrSurfaceProxy* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %3
  %18 = bitcast %class.GrSurfaceProxy* %15 to %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)***
  %19 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)**, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*** %18, align 8
  %20 = getelementptr inbounds %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %19, i64 5
  %21 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %20, align 8
  %22 = call %class.GrRenderTargetProxy* %21(%class.GrSurfaceProxy* nonnull %15) #8
  br label %23

23:                                               ; preds = %3, %17
  %24 = phi %class.GrRenderTargetProxy* [ %22, %17 ], [ null, %3 ]
  %25 = getelementptr inbounds %class.GrRenderTargetProxy, %class.GrRenderTargetProxy* %24, i64 0, i32 1
  %26 = load i8, i8* %25, align 8
  %27 = sext i8 %26 to i32
  %28 = load i32, i32* %7, align 8
  %29 = load %class.SkGpuDevice*, %class.SkGpuDevice** %8, align 8
  %30 = bitcast %class.SkGpuDevice* %29 to %class.GrRecordingContext* (%class.SkGpuDevice*)***
  %31 = load %class.GrRecordingContext* (%class.SkGpuDevice*)**, %class.GrRecordingContext* (%class.SkGpuDevice*)*** %30, align 16
  %32 = getelementptr inbounds %class.GrRecordingContext* (%class.SkGpuDevice*)*, %class.GrRecordingContext* (%class.SkGpuDevice*)** %31, i64 8
  %33 = load %class.GrRecordingContext* (%class.SkGpuDevice*)*, %class.GrRecordingContext* (%class.SkGpuDevice*)** %32, align 8
  %34 = call %class.GrRecordingContext* %33(%class.SkGpuDevice* %29) #8
  %35 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %1, i64 0, i32 0, i32 0, i32 1
  call void @_ZN9SkSurface16MakeRenderTargetEP18GrRecordingContext10SkBudgetedRK11SkImageInfoi15GrSurfaceOriginPK14SkSurfacePropsb(%class.sk_sp.307* sret %0, %class.GrRecordingContext* %34, i1 zeroext false, %struct.SkImageInfo* dereferenceable(24) %2, i32 %27, i32 %28, %class.SkSurfaceProps* %35, i1 zeroext false)
  %36 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %6, align 8
  %37 = icmp eq %class.GrSurfaceProxy* %36, null
  br i1 %37, label %50, label %38

38:                                               ; preds = %23
  %39 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %36, i64 0, i32 1
  %40 = getelementptr inbounds %class.SkNVRefCnt.140, %class.SkNVRefCnt.140* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 -1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %50

43:                                               ; preds = %38
  %44 = getelementptr inbounds %class.SkNVRefCnt.140, %class.SkNVRefCnt.140* %39, i64 -2
  %45 = bitcast %class.SkNVRefCnt.140* %44 to %class.GrSurfaceProxy*
  %46 = bitcast %class.SkNVRefCnt.140* %44 to void (%class.GrSurfaceProxy*)***
  %47 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %46, align 8
  %48 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %47, i64 1
  %49 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %48, align 8
  call void %49(%class.GrSurfaceProxy* nonnull %45) #8
  br label %50

50:                                               ; preds = %23, %38, %43
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkSurface16MakeRenderTargetEP18GrRecordingContext10SkBudgetedRK11SkImageInfoi15GrSurfaceOriginPK14SkSurfacePropsb(%class.sk_sp.307* noalias nocapture sret, %class.GrRecordingContext*, i1 zeroext, %struct.SkImageInfo* dereferenceable(24), i32, i32, %class.SkSurfaceProps*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %9 = alloca %class.sk_sp.47, align 8
  %10 = alloca %class.SkSurfaceProps, align 4
  %11 = icmp eq %class.GrRecordingContext* %1, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.sk_sp.307, %class.sk_sp.307* %0, i64 0, i32 0
  store %class.SkSurface* null, %class.SkSurface** %13, align 8
  br label %62

14:                                               ; preds = %8
  %15 = icmp sgt i32 %4, 1
  %16 = select i1 %15, i32 %4, i32 1
  %17 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %1, i64 0, i32 0, i32 0
  %18 = tail call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %17) #8
  %19 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %18, i64 0, i32 3
  %20 = bitcast i48* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, 2
  %23 = icmp ne i64 %22, 0
  %24 = and i1 %23, %7
  %25 = bitcast %class.sk_sp.47* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #8
  %26 = getelementptr inbounds %class.sk_sp.47, %class.sk_sp.47* %9, i64 0, i32 0
  store %class.SkGpuDevice* inttoptr (i64 -6148914691236517206 to %class.SkGpuDevice*), %class.SkGpuDevice** %26, align 8
  %27 = bitcast %class.SkSurfaceProps* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  %28 = icmp eq %class.SkSurfaceProps* %6, null
  br i1 %28, label %30, label %29

29:                                               ; preds = %14
  call void @_ZN14SkSurfacePropsC1ERKS_(%class.SkSurfaceProps* nonnull %10, %class.SkSurfaceProps* nonnull dereferenceable(8) %6) #8
  br label %31

30:                                               ; preds = %14
  call void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps* nonnull %10) #8
  br label %31

31:                                               ; preds = %29, %30
  call void @_ZN11SkGpuDevice4MakeEP18GrRecordingContext10SkBudgetedRK11SkImageInfo12SkBackingFiti11GrMipmapped11GrProtected15GrSurfaceOriginRK14SkSurfacePropsN15SkBaseGpuDevice12InitContentsE(%class.sk_sp.47* nonnull sret %9, %class.GrRecordingContext* nonnull %1, i1 zeroext %2, %struct.SkImageInfo* dereferenceable(24) %3, i32 1, i32 %16, i1 zeroext %24, i1 zeroext false, i32 %5, %class.SkSurfaceProps* nonnull dereferenceable(8) %10, i32 0) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  %32 = load %class.SkGpuDevice*, %class.SkGpuDevice** %26, align 8
  %33 = icmp eq %class.SkGpuDevice* %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %31
  %35 = getelementptr inbounds %class.sk_sp.307, %class.sk_sp.307* %0, i64 0, i32 0
  store %class.SkSurface* null, %class.SkSurface** %35, align 8
  br label %61

36:                                               ; preds = %31
  %37 = ptrtoint %class.SkGpuDevice* %32 to i64
  %38 = call i8* @_Znwm(i64 56) #9, !noalias !5
  store %class.SkGpuDevice* null, %class.SkGpuDevice** %26, align 8, !noalias !5
  %39 = bitcast i8* %38 to %class.SkSurface_Base*
  %40 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %32, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %41 = load i32, i32* %40, align 4, !noalias !5
  %42 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %32, i64 0, i32 0, i32 0, i32 3, i32 1, i32 1
  %43 = load i32, i32* %42, align 4, !noalias !5
  %44 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %32, i64 0, i32 0, i32 0, i32 4
  call void @_ZN14SkSurface_BaseC2EiiPK14SkSurfaceProps(%class.SkSurface_Base* nonnull %39, i32 %41, i32 %43, %class.SkSurfaceProps* %44) #8, !noalias !5
  %45 = bitcast i8* %38 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTV13SkSurface_Gpu, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8, !noalias !5
  %46 = getelementptr inbounds i8, i8* %38, i64 48
  %47 = bitcast i8* %46 to i64*
  store i64 %37, i64* %47, align 8, !noalias !5
  %48 = bitcast %class.sk_sp.307* %0 to i8**
  store i8* %38, i8** %48, align 8
  %49 = load %class.SkGpuDevice*, %class.SkGpuDevice** %26, align 8
  %50 = icmp eq %class.SkGpuDevice* %49, null
  br i1 %50, label %61, label %51

51:                                               ; preds = %36
  %52 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw add i32* %52, i32 -1 acq_rel
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %61

55:                                               ; preds = %51
  %56 = bitcast %class.SkGpuDevice* %49 to %class.SkRefCntBase*
  %57 = bitcast %class.SkGpuDevice* %49 to void (%class.SkRefCntBase*)***
  %58 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %57, align 8
  %59 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %58, i64 2
  %60 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %59, align 8
  call void %60(%class.SkRefCntBase* nonnull %56) #8
  br label %61

61:                                               ; preds = %34, %36, %51, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #8
  br label %62

62:                                               ; preds = %61, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkSurface_Gpu18onNewImageSnapshotEPK7SkIRect(%class.sk_sp.46* noalias sret, %class.SkSurface_Gpu* nocapture readonly, %struct.SkIRect* readonly) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.139, align 8
  %5 = alloca %class.sk_sp.139, align 8
  %6 = alloca %struct.SkIRect, align 8
  %7 = alloca %class.sk_sp.309, align 8
  %8 = alloca %class.GrSurfaceProxyView, align 8
  %9 = alloca %class.SkColorInfo, align 8
  %10 = alloca %class.sk_sp.48, align 8
  %11 = alloca %class.GrSurfaceProxyView, align 8
  %12 = alloca %class.SkColorInfo, align 8
  %13 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %1, i64 0, i32 1, i32 0
  %14 = load %class.SkGpuDevice*, %class.SkGpuDevice** %13, align 8
  %15 = bitcast %class.SkGpuDevice* %14 to %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)***
  %16 = load %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)**, %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)*** %15, align 16
  %17 = getelementptr inbounds %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)*, %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)** %16, i64 9
  %18 = load %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)*, %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)** %17, align 8
  %19 = tail call %class.GrSurfaceDrawContext* %18(%class.SkGpuDevice* %14) #8
  %20 = icmp eq %class.GrSurfaceDrawContext* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %3
  %22 = getelementptr inbounds %class.sk_sp.46, %class.sk_sp.46* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %22, align 8
  br label %297

23:                                               ; preds = %3
  %24 = load %class.SkGpuDevice*, %class.SkGpuDevice** %13, align 8
  %25 = bitcast %class.SkGpuDevice* %24 to %class.GrRecordingContext* (%class.SkGpuDevice*)***
  %26 = load %class.GrRecordingContext* (%class.SkGpuDevice*)**, %class.GrRecordingContext* (%class.SkGpuDevice*)*** %25, align 16
  %27 = getelementptr inbounds %class.GrRecordingContext* (%class.SkGpuDevice*)*, %class.GrRecordingContext* (%class.SkGpuDevice*)** %26, i64 8
  %28 = load %class.GrRecordingContext* (%class.SkGpuDevice*)*, %class.GrRecordingContext* (%class.SkGpuDevice*)** %27, align 8
  %29 = tail call %class.GrRecordingContext* %28(%class.SkGpuDevice* %24) #8
  %30 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %19, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %31 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %30, align 8
  %32 = icmp eq %class.GrSurfaceProxy* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %23
  %34 = getelementptr inbounds %class.sk_sp.46, %class.sk_sp.46* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %34, align 8
  br label %297

35:                                               ; preds = %23
  %36 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %31, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 1 monotonic, !noalias !8
  %38 = ptrtoint %class.GrSurfaceProxy* %31 to i64
  %39 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %19, i64 0, i32 0, i32 0, i32 2, i32 1
  %40 = load i32, i32* %39, align 8, !noalias !8
  %41 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %19, i64 0, i32 0, i32 0, i32 2, i32 2, i32 0
  %42 = load i16, i16* %41, align 2, !noalias !8
  %43 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %30, align 8
  %44 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %43, i64 0, i32 8
  %45 = load i8, i8* %44, align 4, !range !11
  %46 = icmp ne i8 %45, 0
  %47 = icmp eq %struct.SkIRect* %2, null
  br i1 %47, label %48, label %134

48:                                               ; preds = %35
  %49 = bitcast %class.GrSurfaceProxy* %31 to %class.GrTextureProxy* (%class.GrSurfaceProxy*)***
  %50 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)**, %class.GrTextureProxy* (%class.GrSurfaceProxy*)*** %49, align 8
  %51 = getelementptr inbounds %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %50, i64 3
  %52 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %51, align 8
  %53 = tail call %class.GrTextureProxy* %52(%class.GrSurfaceProxy* nonnull %31) #8
  %54 = icmp eq %class.GrTextureProxy* %53, null
  br i1 %54, label %67, label %55

55:                                               ; preds = %48
  %56 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %30, align 8
  %57 = icmp eq %class.GrSurfaceProxy* %56, null
  br i1 %57, label %64, label %58

58:                                               ; preds = %55
  %59 = bitcast %class.GrSurfaceProxy* %56 to %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)***
  %60 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)**, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*** %59, align 8
  %61 = getelementptr inbounds %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %60, i64 5
  %62 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %61, align 8
  %63 = tail call %class.GrRenderTargetProxy* %62(%class.GrSurfaceProxy* nonnull %56) #8
  br label %64

64:                                               ; preds = %55, %58
  %65 = phi %class.GrRenderTargetProxy* [ %63, %58 ], [ null, %55 ]
  %66 = tail call zeroext i1 @_ZNK19GrRenderTargetProxy18refsWrappedObjectsEv(%class.GrRenderTargetProxy* %65) #8
  br i1 %66, label %67, label %185

67:                                               ; preds = %64, %48
  %68 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)**, %class.GrTextureProxy* (%class.GrSurfaceProxy*)*** %49, align 8
  %69 = getelementptr inbounds %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %68, i64 3
  %70 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %69, align 8
  %71 = tail call %class.GrTextureProxy* %70(%class.GrSurfaceProxy* nonnull %31) #8
  %72 = icmp eq %class.GrTextureProxy* %71, null
  br i1 %72, label %139, label %73

73:                                               ; preds = %67
  %74 = icmp eq %class.GrRecordingContext* %29, null
  br i1 %74, label %78, label %75

75:                                               ; preds = %73
  %76 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = atomicrmw add i32* %76, i32 1 monotonic, !noalias !12
  br label %78

78:                                               ; preds = %73, %75
  %79 = getelementptr inbounds %class.sk_sp.48, %class.sk_sp.48* %10, i64 0, i32 0
  store %class.GrRecordingContext* %29, %class.GrRecordingContext** %79, align 8, !alias.scope !12
  %80 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %11, i64 0, i32 0, i32 0
  %81 = atomicrmw add i32* %36, i32 1 monotonic
  store %class.GrSurfaceProxy* %31, %class.GrSurfaceProxy** %80, align 8
  %82 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %11, i64 0, i32 1
  store i32 %40, i32* %82, align 8
  %83 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %11, i64 0, i32 2, i32 0
  store i16 %42, i16* %83, align 4
  %84 = load %class.SkGpuDevice*, %class.SkGpuDevice** %13, align 8
  %85 = getelementptr inbounds %class.SkColorInfo, %class.SkColorInfo* %12, i64 0, i32 0, i32 0
  %86 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %84, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %87 = load %class.SkColorSpace*, %class.SkColorSpace** %86, align 8
  %88 = icmp eq %class.SkColorSpace* %87, null
  br i1 %88, label %92, label %89

89:                                               ; preds = %78
  %90 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %87, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = atomicrmw add i32* %90, i32 1 monotonic
  br label %92

92:                                               ; preds = %78, %89
  store %class.SkColorSpace* %87, %class.SkColorSpace** %85, align 8
  %93 = getelementptr inbounds %class.SkColorInfo, %class.SkColorInfo* %12, i64 0, i32 1
  %94 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %84, i64 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %95 = bitcast i32* %94 to i64*
  %96 = bitcast i32* %93 to i64*
  %97 = load i64, i64* %95, align 8
  store i64 %97, i64* %96, align 8
  call void @_ZN11SkImage_Gpu19MakeWithVolatileSrcE5sk_spI18GrRecordingContextE18GrSurfaceProxyView11SkColorInfo(%class.sk_sp.46* sret %0, %class.sk_sp.48* nonnull %10, %class.GrSurfaceProxyView* nonnull %11, %class.SkColorInfo* nonnull %12) #8
  %98 = load %class.SkColorSpace*, %class.SkColorSpace** %85, align 8
  %99 = icmp eq %class.SkColorSpace* %98, null
  br i1 %99, label %106, label %100

100:                                              ; preds = %92
  %101 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %98, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = atomicrmw add i32* %101, i32 -1 acq_rel
  %103 = icmp eq i32 %102, 1
  br i1 %103, label %104, label %106

104:                                              ; preds = %100
  %105 = bitcast %class.SkColorSpace* %98 to i8*
  call void @_ZdlPv(i8* %105) #9
  br label %106

106:                                              ; preds = %92, %100, %104
  %107 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %80, align 8
  %108 = icmp eq %class.GrSurfaceProxy* %107, null
  br i1 %108, label %121, label %109

109:                                              ; preds = %106
  %110 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %107, i64 0, i32 1
  %111 = getelementptr inbounds %class.SkNVRefCnt.140, %class.SkNVRefCnt.140* %110, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = atomicrmw add i32* %111, i32 -1 acq_rel
  %113 = icmp eq i32 %112, 1
  br i1 %113, label %114, label %121

114:                                              ; preds = %109
  %115 = getelementptr inbounds %class.SkNVRefCnt.140, %class.SkNVRefCnt.140* %110, i64 -2
  %116 = bitcast %class.SkNVRefCnt.140* %115 to %class.GrSurfaceProxy*
  %117 = bitcast %class.SkNVRefCnt.140* %115 to void (%class.GrSurfaceProxy*)***
  %118 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %117, align 8
  %119 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %118, i64 1
  %120 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %119, align 8
  call void %120(%class.GrSurfaceProxy* nonnull %116) #8
  br label %121

121:                                              ; preds = %106, %109, %114
  %122 = load %class.GrRecordingContext*, %class.GrRecordingContext** %79, align 8
  %123 = icmp eq %class.GrRecordingContext* %122, null
  br i1 %123, label %284, label %124

124:                                              ; preds = %121
  %125 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %122, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = atomicrmw add i32* %125, i32 -1 acq_rel
  %127 = icmp eq i32 %126, 1
  br i1 %127, label %128, label %284

128:                                              ; preds = %124
  %129 = bitcast %class.GrRecordingContext* %122 to %class.SkRefCntBase*
  %130 = bitcast %class.GrRecordingContext* %122 to void (%class.SkRefCntBase*)***
  %131 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %130, align 8
  %132 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %131, i64 2
  %133 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %132, align 8
  call void %133(%class.SkRefCntBase* nonnull %129) #8
  br label %284

134:                                              ; preds = %35
  %135 = bitcast %struct.SkIRect* %2 to i64*
  %136 = load i64, i64* %135, align 4
  %137 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 2
  %138 = bitcast i32* %137 to i64*
  br label %143

139:                                              ; preds = %67
  %140 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %30, align 8
  %141 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %140, i64 0, i32 6
  %142 = bitcast %struct.SkISize* %141 to i64*
  br label %143

143:                                              ; preds = %139, %134
  %144 = phi i64 [ %136, %134 ], [ 0, %139 ]
  %145 = phi i64* [ %138, %134 ], [ %142, %139 ]
  %146 = load i64, i64* %145, align 4
  %147 = tail call zeroext i1 @_ZNK20GrSurfaceDrawContext9mipmappedEv(%class.GrSurfaceDrawContext* nonnull %19) #8
  %148 = bitcast %class.sk_sp.139* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %148)
  %149 = bitcast %struct.SkIRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %149)
  %150 = bitcast %class.sk_sp.139* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %150) #8, !noalias !15
  %151 = getelementptr inbounds %class.sk_sp.139, %class.sk_sp.139* %4, i64 0, i32 0
  store %class.GrSurfaceProxy* inttoptr (i64 -6148914691236517206 to %class.GrSurfaceProxy*), %class.GrSurfaceProxy** %151, align 8, !noalias !15
  %152 = getelementptr inbounds %class.sk_sp.139, %class.sk_sp.139* %5, i64 0, i32 0
  %153 = atomicrmw add i32* %36, i32 1 monotonic, !noalias !18
  store %class.GrSurfaceProxy* %31, %class.GrSurfaceProxy** %152, align 8, !alias.scope !21, !noalias !15
  %154 = bitcast %struct.SkIRect* %6 to i64*
  store i64 %144, i64* %154, align 8, !noalias !15
  %155 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 2
  %156 = bitcast i32* %155 to i64*
  store i64 %146, i64* %156, align 8, !noalias !15
  call void @_ZN14GrSurfaceProxy4CopyEP18GrRecordingContext5sk_spIS_E15GrSurfaceOrigin11GrMipmapped7SkIRect12SkBackingFit10SkBudgetedNS_14RectsMustMatchEPS2_I12GrRenderTaskE(%class.sk_sp.139* nonnull sret %4, %class.GrRecordingContext* %29, %class.sk_sp.139* nonnull %5, i32 %40, i1 zeroext %147, %struct.SkIRect* nonnull byval(%struct.SkIRect) align 8 %6, i32 1, i1 zeroext %46, i1 zeroext false, %class.sk_sp.137* null) #8, !noalias !15
  %157 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %152, align 8, !noalias !15
  %158 = icmp eq %class.GrSurfaceProxy* %157, null
  br i1 %158, label %171, label %159

159:                                              ; preds = %143
  %160 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %157, i64 0, i32 1
  %161 = getelementptr inbounds %class.SkNVRefCnt.140, %class.SkNVRefCnt.140* %160, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = atomicrmw add i32* %161, i32 -1 acq_rel, !noalias !15
  %163 = icmp eq i32 %162, 1
  br i1 %163, label %164, label %171

164:                                              ; preds = %159
  %165 = getelementptr inbounds %class.SkNVRefCnt.140, %class.SkNVRefCnt.140* %160, i64 -2
  %166 = bitcast %class.SkNVRefCnt.140* %165 to %class.GrSurfaceProxy*
  %167 = bitcast %class.SkNVRefCnt.140* %165 to void (%class.GrSurfaceProxy*)***
  %168 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %167, align 8, !noalias !15
  %169 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %168, i64 1
  %170 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %169, align 8, !noalias !15
  call void %170(%class.GrSurfaceProxy* nonnull %166) #8, !noalias !15
  br label %171

171:                                              ; preds = %164, %159, %143
  %172 = bitcast %class.sk_sp.139* %4 to i64*
  %173 = load i64, i64* %172, align 8, !noalias !15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %150) #8, !noalias !15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %148)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %149)
  %174 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %31, i64 0, i32 1
  %175 = getelementptr inbounds %class.SkNVRefCnt.140, %class.SkNVRefCnt.140* %174, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = atomicrmw add i32* %175, i32 -1 acq_rel
  %177 = icmp eq i32 %176, 1
  br i1 %177, label %178, label %185

178:                                              ; preds = %171
  %179 = getelementptr inbounds %class.SkNVRefCnt.140, %class.SkNVRefCnt.140* %174, i64 -2
  %180 = bitcast %class.SkNVRefCnt.140* %179 to %class.GrSurfaceProxy*
  %181 = bitcast %class.SkNVRefCnt.140* %179 to void (%class.GrSurfaceProxy*)***
  %182 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %181, align 8
  %183 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %182, i64 1
  %184 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %183, align 8
  call void %184(%class.GrSurfaceProxy* nonnull %180) #8
  br label %185

185:                                              ; preds = %178, %171, %64
  %186 = phi i64 [ %38, %64 ], [ %173, %171 ], [ %173, %178 ]
  %187 = load %class.SkGpuDevice*, %class.SkGpuDevice** %13, align 8
  %188 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %187, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %189 = load %class.SkColorSpace*, %class.SkColorSpace** %188, align 8
  %190 = icmp eq %class.SkColorSpace* %189, null
  br i1 %190, label %194, label %191

191:                                              ; preds = %185
  %192 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %189, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = atomicrmw add i32* %192, i32 1 monotonic
  br label %194

194:                                              ; preds = %185, %191
  %195 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %187, i64 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %196 = bitcast i32* %195 to i64*
  %197 = load i64, i64* %196, align 8
  %198 = icmp eq i64 %186, 0
  br i1 %198, label %207, label %199

199:                                              ; preds = %194
  %200 = inttoptr i64 %186 to %class.GrSurfaceProxy*
  %201 = inttoptr i64 %186 to %class.GrTextureProxy* (%class.GrSurfaceProxy*)***
  %202 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)**, %class.GrTextureProxy* (%class.GrSurfaceProxy*)*** %201, align 8
  %203 = getelementptr inbounds %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %202, i64 3
  %204 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %203, align 8
  %205 = call %class.GrTextureProxy* %204(%class.GrSurfaceProxy* nonnull %200) #8
  %206 = icmp eq %class.GrTextureProxy* %205, null
  br i1 %206, label %207, label %209

207:                                              ; preds = %194, %199
  %208 = getelementptr inbounds %class.sk_sp.46, %class.sk_sp.46* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %208, align 8
  br label %273

209:                                              ; preds = %199
  %210 = icmp eq %class.GrRecordingContext* %29, null
  br i1 %210, label %214, label %211

211:                                              ; preds = %209
  %212 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = atomicrmw add i32* %212, i32 1 monotonic, !noalias !22
  br label %214

214:                                              ; preds = %209, %211
  %215 = ptrtoint %class.GrRecordingContext* %29 to i64
  %216 = bitcast %class.sk_sp.309* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %216)
  %217 = bitcast %class.GrSurfaceProxyView* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %217)
  %218 = bitcast %class.SkColorInfo* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %218)
  %219 = call i8* @_Znwm(i64 104) #9, !noalias !25
  %220 = bitcast i8* %219 to %class.SkImage_Gpu*
  %221 = bitcast %class.sk_sp.309* %7 to i64*
  store i64 %215, i64* %221, align 8, !noalias !25
  %222 = bitcast %class.GrSurfaceProxyView* %8 to i64*
  store i64 %186, i64* %222, align 8, !noalias !25
  %223 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %8, i64 0, i32 1
  store i32 %40, i32* %223, align 8, !noalias !25
  %224 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %8, i64 0, i32 2, i32 0
  store i16 %42, i16* %224, align 4, !noalias !25
  %225 = getelementptr inbounds %class.SkColorInfo, %class.SkColorInfo* %9, i64 0, i32 0, i32 0
  br i1 %190, label %229, label %226

226:                                              ; preds = %214
  %227 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %189, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %228 = atomicrmw add i32* %227, i32 1 monotonic, !noalias !25
  br label %229

229:                                              ; preds = %226, %214
  store %class.SkColorSpace* %189, %class.SkColorSpace** %225, align 8, !noalias !25
  %230 = getelementptr inbounds %class.SkColorInfo, %class.SkColorInfo* %9, i64 0, i32 1
  %231 = bitcast i32* %230 to i64*
  store i64 %197, i64* %231, align 8, !noalias !25
  call void @_ZN11SkImage_GpuC1E5sk_spI14GrImageContextEj18GrSurfaceProxyView11SkColorInfo(%class.SkImage_Gpu* nonnull %220, %class.sk_sp.309* nonnull %7, i32 0, %class.GrSurfaceProxyView* nonnull %8, %class.SkColorInfo* nonnull %9) #8, !noalias !25
  %232 = ptrtoint i8* %219 to i64
  %233 = load %class.SkColorSpace*, %class.SkColorSpace** %225, align 8, !noalias !25
  %234 = icmp eq %class.SkColorSpace* %233, null
  br i1 %234, label %241, label %235

235:                                              ; preds = %229
  %236 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %233, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = atomicrmw add i32* %236, i32 -1 acq_rel, !noalias !25
  %238 = icmp eq i32 %237, 1
  br i1 %238, label %239, label %241

239:                                              ; preds = %235
  %240 = bitcast %class.SkColorSpace* %233 to i8*
  call void @_ZdlPv(i8* %240) #9, !noalias !25
  br label %241

241:                                              ; preds = %239, %235, %229
  %242 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %8, i64 0, i32 0, i32 0
  %243 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %242, align 8, !noalias !25
  %244 = icmp eq %class.GrSurfaceProxy* %243, null
  br i1 %244, label %257, label %245

245:                                              ; preds = %241
  %246 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %243, i64 0, i32 1
  %247 = getelementptr inbounds %class.SkNVRefCnt.140, %class.SkNVRefCnt.140* %246, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = atomicrmw add i32* %247, i32 -1 acq_rel, !noalias !25
  %249 = icmp eq i32 %248, 1
  br i1 %249, label %250, label %257

250:                                              ; preds = %245
  %251 = getelementptr inbounds %class.SkNVRefCnt.140, %class.SkNVRefCnt.140* %246, i64 -2
  %252 = bitcast %class.SkNVRefCnt.140* %251 to %class.GrSurfaceProxy*
  %253 = bitcast %class.SkNVRefCnt.140* %251 to void (%class.GrSurfaceProxy*)***
  %254 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %253, align 8, !noalias !25
  %255 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %254, i64 1
  %256 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %255, align 8, !noalias !25
  call void %256(%class.GrSurfaceProxy* nonnull %252) #8, !noalias !25
  br label %257

257:                                              ; preds = %250, %245, %241
  %258 = getelementptr inbounds %class.sk_sp.309, %class.sk_sp.309* %7, i64 0, i32 0
  %259 = load %class.GrImageContext*, %class.GrImageContext** %258, align 8, !noalias !25
  %260 = icmp eq %class.GrImageContext* %259, null
  br i1 %260, label %271, label %261

261:                                              ; preds = %257
  %262 = getelementptr inbounds %class.GrImageContext, %class.GrImageContext* %259, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %263 = atomicrmw add i32* %262, i32 -1 acq_rel, !noalias !25
  %264 = icmp eq i32 %263, 1
  br i1 %264, label %265, label %271

265:                                              ; preds = %261
  %266 = bitcast %class.GrImageContext* %259 to %class.SkRefCntBase*
  %267 = bitcast %class.GrImageContext* %259 to void (%class.SkRefCntBase*)***
  %268 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %267, align 8, !noalias !25
  %269 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %268, i64 2
  %270 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %269, align 8, !noalias !25
  call void %270(%class.SkRefCntBase* nonnull %266) #8, !noalias !25
  br label %271

271:                                              ; preds = %257, %261, %265
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %216)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %217)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %218)
  %272 = bitcast %class.sk_sp.46* %0 to i64*
  store i64 %232, i64* %272, align 8
  br label %273

273:                                              ; preds = %271, %207
  %274 = phi i64 [ %186, %207 ], [ 0, %271 ]
  %275 = inttoptr i64 %274 to %class.GrSurfaceProxy*
  br i1 %190, label %282, label %276

276:                                              ; preds = %273
  %277 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %189, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %278 = atomicrmw add i32* %277, i32 -1 acq_rel
  %279 = icmp eq i32 %278, 1
  br i1 %279, label %280, label %282

280:                                              ; preds = %276
  %281 = bitcast %class.SkColorSpace* %189 to i8*
  call void @_ZdlPv(i8* %281) #9
  br label %282

282:                                              ; preds = %280, %276, %273
  %283 = icmp eq i64 %274, 0
  br i1 %283, label %297, label %284

284:                                              ; preds = %128, %124, %121, %282
  %285 = phi %class.GrSurfaceProxy* [ %275, %282 ], [ %31, %121 ], [ %31, %124 ], [ %31, %128 ]
  %286 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %285, i64 0, i32 1
  %287 = getelementptr inbounds %class.SkNVRefCnt.140, %class.SkNVRefCnt.140* %286, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %288 = atomicrmw add i32* %287, i32 -1 acq_rel
  %289 = icmp eq i32 %288, 1
  br i1 %289, label %290, label %297

290:                                              ; preds = %284
  %291 = getelementptr inbounds %class.SkNVRefCnt.140, %class.SkNVRefCnt.140* %286, i64 -2
  %292 = bitcast %class.SkNVRefCnt.140* %291 to %class.GrSurfaceProxy*
  %293 = bitcast %class.SkNVRefCnt.140* %291 to void (%class.GrSurfaceProxy*)***
  %294 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %293, align 8
  %295 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %294, i64 1
  %296 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %295, align 8
  call void %296(%class.GrSurfaceProxy* nonnull %292) #8
  br label %297

297:                                              ; preds = %290, %284, %282, %33, %21
  ret void
}

declare void @_ZN11SkImage_Gpu19MakeWithVolatileSrcE5sk_spI18GrRecordingContextE18GrSurfaceProxyView11SkColorInfo(%class.sk_sp.46* sret, %class.sk_sp.48*, %class.GrSurfaceProxyView*, %class.SkColorInfo*) local_unnamed_addr #1

declare zeroext i1 @_ZNK20GrSurfaceDrawContext9mipmappedEv(%class.GrSurfaceDrawContext*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkSurface_Gpu13onWritePixelsERK8SkPixmapii(%class.SkSurface_Gpu* nocapture readonly, %class.SkPixmap* dereferenceable(40), i32, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %0, i64 0, i32 1, i32 0
  %6 = load %class.SkGpuDevice*, %class.SkGpuDevice** %5, align 8
  %7 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %6, i64 0, i32 0, i32 0
  %8 = tail call zeroext i1 @_ZN12SkBaseDevice11writePixelsERK8SkPixmapii(%class.SkBaseDevice* %7, %class.SkPixmap* dereferenceable(40) %1, i32 %2, i32 %3) #8
  ret void
}

declare zeroext i1 @_ZN12SkBaseDevice11writePixelsERK8SkPixmapii(%class.SkBaseDevice*, %class.SkPixmap* dereferenceable(40), i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkSurface_Gpu27onAsyncRescaleAndReadPixelsERK11SkImageInfoRK7SkIRectN7SkImage12RescaleGammaENS6_11RescaleModeEPFvPvNSt3__110unique_ptrIKNS6_15AsyncReadResultENSA_14default_deleteISD_EEEEES9_(%class.SkSurface_Gpu* nocapture readonly, %struct.SkImageInfo* dereferenceable(24), %struct.SkIRect* dereferenceable(16), i1 zeroext, i32, {}*, i8*) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %0, i64 0, i32 1, i32 0
  %9 = load %class.SkGpuDevice*, %class.SkGpuDevice** %8, align 8
  %10 = bitcast %class.SkGpuDevice* %9 to %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)***
  %11 = load %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)**, %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)*** %10, align 16
  %12 = getelementptr inbounds %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)*, %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)** %11, i64 9
  %13 = load %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)*, %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)** %12, align 8
  %14 = tail call %class.GrSurfaceDrawContext* %13(%class.SkGpuDevice* %9) #8
  %15 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %14, i64 0, i32 0, i32 0, i32 1
  %16 = load %class.GrRecordingContext*, %class.GrRecordingContext** %15, align 8
  %17 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %16, i64 0, i32 0, i32 0
  %18 = bitcast %class.GrRecordingContext* %16 to %class.GrDirectContext* (%class.GrContext_Base*)***
  %19 = load %class.GrDirectContext* (%class.GrContext_Base*)**, %class.GrDirectContext* (%class.GrContext_Base*)*** %18, align 8
  %20 = getelementptr inbounds %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %19, i64 3
  %21 = load %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %20, align 8
  %22 = tail call %class.GrDirectContext* %21(%class.GrContext_Base* %17) #8
  %23 = icmp eq %class.GrDirectContext* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %7
  %25 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %14, i64 0, i32 0, i32 0
  tail call void @_ZN16GrSurfaceContext25asyncRescaleAndReadPixelsEP15GrDirectContextRK11SkImageInfoRK7SkIRectN7SkImage12RescaleGammaENS8_11RescaleModeEPFvPvNSt3__110unique_ptrIKNS8_15AsyncReadResultENSC_14default_deleteISF_EEEEESB_(%class.GrSurfaceContext* %25, %class.GrDirectContext* nonnull %22, %struct.SkImageInfo* dereferenceable(24) %1, %struct.SkIRect* dereferenceable(16) %2, i1 zeroext %3, i32 %4, {}* %5, i8* %6) #8
  br label %26

26:                                               ; preds = %7, %24
  ret void
}

declare void @_ZN16GrSurfaceContext25asyncRescaleAndReadPixelsEP15GrDirectContextRK11SkImageInfoRK7SkIRectN7SkImage12RescaleGammaENS8_11RescaleModeEPFvPvNSt3__110unique_ptrIKNS8_15AsyncReadResultENSC_14default_deleteISF_EEEEESB_(%class.GrSurfaceContext*, %class.GrDirectContext*, %struct.SkImageInfo* dereferenceable(24), %struct.SkIRect* dereferenceable(16), i1 zeroext, i32, {}*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkSurface_Gpu33onAsyncRescaleAndReadPixelsYUV420E15SkYUVColorSpace5sk_spI12SkColorSpaceERK7SkIRectRK7SkISizeN7SkImage12RescaleGammaENSA_11RescaleModeEPFvPvNSt3__110unique_ptrIKNSA_15AsyncReadResultENSE_14default_deleteISH_EEEEESD_(%class.SkSurface_Gpu* nocapture readonly, i32, %class.sk_sp.2* nocapture, %struct.SkIRect* dereferenceable(16), %struct.SkISize* nocapture readonly dereferenceable(8), i1 zeroext, i32, {}*, i8*) unnamed_addr #0 align 2 {
  %10 = alloca %class.sk_sp.2, align 8
  %11 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %0, i64 0, i32 1, i32 0
  %12 = load %class.SkGpuDevice*, %class.SkGpuDevice** %11, align 8
  %13 = bitcast %class.SkGpuDevice* %12 to %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)***
  %14 = load %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)**, %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)*** %13, align 16
  %15 = getelementptr inbounds %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)*, %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)** %14, i64 9
  %16 = load %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)*, %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)** %15, align 8
  %17 = tail call %class.GrSurfaceDrawContext* %16(%class.SkGpuDevice* %12) #8
  %18 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %17, i64 0, i32 0, i32 0, i32 1
  %19 = load %class.GrRecordingContext*, %class.GrRecordingContext** %18, align 8
  %20 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %19, i64 0, i32 0, i32 0
  %21 = bitcast %class.GrRecordingContext* %19 to %class.GrDirectContext* (%class.GrContext_Base*)***
  %22 = load %class.GrDirectContext* (%class.GrContext_Base*)**, %class.GrDirectContext* (%class.GrContext_Base*)*** %21, align 8
  %23 = getelementptr inbounds %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %22, i64 3
  %24 = load %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %23, align 8
  %25 = tail call %class.GrDirectContext* %24(%class.GrContext_Base* %20) #8
  %26 = icmp eq %class.GrDirectContext* %25, null
  br i1 %26, label %44, label %27

27:                                               ; preds = %9
  %28 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %17, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %2, i64 0, i32 0
  %30 = bitcast %class.sk_sp.2* %2 to i64*
  %31 = load i64, i64* %30, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %29, align 8
  %32 = bitcast %class.sk_sp.2* %10 to i64*
  store i64 %31, i64* %32, align 8
  %33 = bitcast %struct.SkISize* %4 to i64*
  %34 = load i64, i64* %33, align 4
  call void @_ZN16GrSurfaceContext31asyncRescaleAndReadPixelsYUV420EP15GrDirectContext15SkYUVColorSpace5sk_spI12SkColorSpaceERK7SkIRect7SkISizeN7SkImage12RescaleGammaENSA_11RescaleModeEPFvPvNSt3__110unique_ptrIKNSA_15AsyncReadResultENSE_14default_deleteISH_EEEEESD_(%class.GrSurfaceContext* %28, %class.GrDirectContext* nonnull %25, i32 %1, %class.sk_sp.2* nonnull %10, %struct.SkIRect* dereferenceable(16) %3, i64 %34, i1 zeroext %5, i32 %6, {}* %7, i8* %8) #8
  %35 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %10, i64 0, i32 0
  %36 = load %class.SkColorSpace*, %class.SkColorSpace** %35, align 8
  %37 = icmp eq %class.SkColorSpace* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %27
  %39 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i32* %39, i32 -1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %44

42:                                               ; preds = %38
  %43 = bitcast %class.SkColorSpace* %36 to i8*
  call void @_ZdlPv(i8* %43) #9
  br label %44

44:                                               ; preds = %42, %38, %27, %9
  ret void
}

declare void @_ZN16GrSurfaceContext31asyncRescaleAndReadPixelsYUV420EP15GrDirectContext15SkYUVColorSpace5sk_spI12SkColorSpaceERK7SkIRect7SkISizeN7SkImage12RescaleGammaENSA_11RescaleModeEPFvPvNSt3__110unique_ptrIKNSA_15AsyncReadResultENSE_14default_deleteISH_EEEEESD_(%class.GrSurfaceContext*, %class.GrDirectContext*, i32, %class.sk_sp.2*, %struct.SkIRect* dereferenceable(16), i64, i1 zeroext, i32, {}*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkSurface_Gpu13onCopyOnWriteEN9SkSurface17ContentChangeModeE(%class.SkSurface_Gpu*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.46, align 8
  %4 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %0, i64 0, i32 1, i32 0
  %5 = load %class.SkGpuDevice*, %class.SkGpuDevice** %4, align 8
  %6 = bitcast %class.SkGpuDevice* %5 to %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)***
  %7 = load %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)**, %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)*** %6, align 16
  %8 = getelementptr inbounds %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)*, %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)** %7, i64 9
  %9 = load %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)*, %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)** %8, align 8
  %10 = tail call %class.GrSurfaceDrawContext* %9(%class.SkGpuDevice* %5) #8
  %11 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %0, i64 0, i32 0, i32 2
  %12 = getelementptr inbounds %class.sk_sp.46, %class.sk_sp.46* %11, i64 0, i32 0
  %13 = load %class.SkImage*, %class.SkImage** %12, align 8, !noalias !28
  %14 = icmp eq %class.SkImage* %13, null
  br i1 %14, label %15, label %58

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %0, i64 0, i32 0
  %17 = bitcast %class.sk_sp.46* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8, !noalias !28
  %18 = bitcast %class.SkSurface_Gpu* %0 to void (%class.sk_sp.46*, %class.SkSurface_Base*, %struct.SkIRect*)***
  %19 = load void (%class.sk_sp.46*, %class.SkSurface_Base*, %struct.SkIRect*)**, void (%class.sk_sp.46*, %class.SkSurface_Base*, %struct.SkIRect*)*** %18, align 8, !noalias !28
  %20 = getelementptr inbounds void (%class.sk_sp.46*, %class.SkSurface_Base*, %struct.SkIRect*)*, void (%class.sk_sp.46*, %class.SkSurface_Base*, %struct.SkIRect*)** %19, i64 9
  %21 = load void (%class.sk_sp.46*, %class.SkSurface_Base*, %struct.SkIRect*)*, void (%class.sk_sp.46*, %class.SkSurface_Base*, %struct.SkIRect*)** %20, align 8, !noalias !28
  call void %21(%class.sk_sp.46* nonnull sret %3, %class.SkSurface_Base* %16, %struct.SkIRect* null) #8, !noalias !28
  %22 = getelementptr inbounds %class.sk_sp.46, %class.sk_sp.46* %3, i64 0, i32 0
  %23 = bitcast %class.sk_sp.46* %3 to i64*
  %24 = load i64, i64* %23, align 8, !noalias !28
  store %class.SkImage* null, %class.SkImage** %22, align 8, !noalias !28
  %25 = load %class.SkImage*, %class.SkImage** %12, align 8, !noalias !28
  %26 = bitcast %class.sk_sp.46* %11 to i64*
  store i64 %24, i64* %26, align 8, !noalias !28
  %27 = icmp eq %class.SkImage* %25, null
  br i1 %27, label %28, label %30

28:                                               ; preds = %15
  %29 = inttoptr i64 %24 to %class.SkImage*
  br label %55

30:                                               ; preds = %15
  %31 = getelementptr inbounds %class.SkImage, %class.SkImage* %25, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel, !noalias !28
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %40

34:                                               ; preds = %30
  %35 = bitcast %class.SkImage* %25 to %class.SkRefCntBase*
  %36 = bitcast %class.SkImage* %25 to void (%class.SkRefCntBase*)***
  %37 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %36, align 8, !noalias !28
  %38 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, i64 2
  %39 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, align 8, !noalias !28
  call void %39(%class.SkRefCntBase* nonnull %35) #8, !noalias !28
  br label %40

40:                                               ; preds = %34, %30
  %41 = load %class.SkImage*, %class.SkImage** %22, align 8, !noalias !28
  %42 = icmp eq %class.SkImage* %41, null
  br i1 %42, label %53, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %class.SkImage, %class.SkImage* %41, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i32* %44, i32 -1 acq_rel, !noalias !28
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %53

47:                                               ; preds = %43
  %48 = bitcast %class.SkImage* %41 to %class.SkRefCntBase*
  %49 = bitcast %class.SkImage* %41 to void (%class.SkRefCntBase*)***
  %50 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %49, align 8, !noalias !28
  %51 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %50, i64 2
  %52 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %51, align 8, !noalias !28
  call void %52(%class.SkRefCntBase* nonnull %48) #8, !noalias !28
  br label %53

53:                                               ; preds = %47, %43, %40
  %54 = load %class.SkImage*, %class.SkImage** %12, align 8, !noalias !28
  br label %55

55:                                               ; preds = %53, %28
  %56 = phi %class.SkImage* [ %54, %53 ], [ %29, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8, !noalias !28
  %57 = icmp eq %class.SkImage* %56, null
  br i1 %57, label %62, label %58

58:                                               ; preds = %55, %2
  %59 = phi %class.SkImage* [ %13, %2 ], [ %56, %55 ]
  %60 = getelementptr inbounds %class.SkImage, %class.SkImage* %59, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw add i32* %60, i32 1 monotonic, !noalias !28
  br label %62

62:                                               ; preds = %58, %55
  %63 = phi %class.SkImage* [ null, %55 ], [ %59, %58 ]
  %64 = bitcast %class.SkImage* %63 to %class.SkImage_Gpu*
  %65 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %10, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %66 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %65, align 8
  %67 = call zeroext i1 @_ZNK11SkImage_Gpu22surfaceMustCopyOnWriteEP14GrSurfaceProxy(%class.SkImage_Gpu* %64, %class.GrSurfaceProxy* %66) #8
  br i1 %67, label %68, label %70

68:                                               ; preds = %62
  %69 = load %class.SkGpuDevice*, %class.SkGpuDevice** %4, align 8
  call void @_ZN11SkGpuDevice25replaceSurfaceDrawContextEN9SkSurface17ContentChangeModeE(%class.SkGpuDevice* %69, i32 %1) #8
  br label %80

70:                                               ; preds = %62
  %71 = icmp eq i32 %1, 0
  br i1 %71, label %72, label %80

72:                                               ; preds = %70
  %73 = load %class.SkGpuDevice*, %class.SkGpuDevice** %4, align 8
  %74 = bitcast %class.SkGpuDevice* %73 to %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)***
  %75 = load %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)**, %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)*** %74, align 16
  %76 = getelementptr inbounds %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)*, %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)** %75, i64 9
  %77 = load %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)*, %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)** %76, align 8
  %78 = call %class.GrSurfaceDrawContext* %77(%class.SkGpuDevice* %73) #8
  %79 = bitcast %class.GrSurfaceDrawContext* %78 to %class.GrSurfaceFillContext*
  call void @_ZN20GrSurfaceFillContext7discardEv(%class.GrSurfaceFillContext* %79) #8
  br label %80

80:                                               ; preds = %70, %72, %68
  %81 = icmp eq %class.SkImage* %63, null
  br i1 %81, label %92, label %82

82:                                               ; preds = %80
  %83 = getelementptr inbounds %class.SkImage, %class.SkImage* %63, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = atomicrmw add i32* %83, i32 -1 acq_rel
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %86, label %92

86:                                               ; preds = %82
  %87 = bitcast %class.SkImage* %63 to %class.SkRefCntBase*
  %88 = bitcast %class.SkImage* %63 to void (%class.SkRefCntBase*)***
  %89 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %88, align 8
  %90 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %89, i64 2
  %91 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %90, align 8
  call void %91(%class.SkRefCntBase* nonnull %87) #8
  br label %92

92:                                               ; preds = %80, %82, %86
  ret void
}

declare zeroext i1 @_ZNK11SkImage_Gpu22surfaceMustCopyOnWriteEP14GrSurfaceProxy(%class.SkImage_Gpu*, %class.GrSurfaceProxy*) local_unnamed_addr #1

declare void @_ZN11SkGpuDevice25replaceSurfaceDrawContextEN9SkSurface17ContentChangeModeE(%class.SkGpuDevice*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkSurface_Gpu9onDiscardEv(%class.SkSurface_Gpu* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %0, i64 0, i32 1, i32 0
  %3 = load %class.SkGpuDevice*, %class.SkGpuDevice** %2, align 8
  %4 = bitcast %class.SkGpuDevice* %3 to %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)***
  %5 = load %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)**, %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)*** %4, align 16
  %6 = getelementptr inbounds %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)*, %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)** %5, i64 9
  %7 = load %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)*, %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)** %6, align 8
  %8 = tail call %class.GrSurfaceDrawContext* %7(%class.SkGpuDevice* %3) #8
  %9 = bitcast %class.GrSurfaceDrawContext* %8 to %class.GrSurfaceFillContext*
  tail call void @_ZN20GrSurfaceFillContext7discardEv(%class.GrSurfaceFillContext* %9) #8
  ret void
}

declare void @_ZN20GrSurfaceFillContext7discardEv(%class.GrSurfaceFillContext*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13SkSurface_Gpu7onFlushEN9SkSurface20BackendSurfaceAccessERK11GrFlushInfoPK28GrBackendSurfaceMutableState(%class.SkSurface_Gpu* nocapture readonly, i32, %struct.GrFlushInfo* dereferenceable(48), %class.GrBackendSurfaceMutableState*) unnamed_addr #0 align 2 {
  %5 = alloca %class.GrSurfaceProxy*, align 8
  %6 = alloca %class.GrDirectContextPriv, align 8
  %7 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %0, i64 0, i32 1, i32 0
  %8 = load %class.SkGpuDevice*, %class.SkGpuDevice** %7, align 8
  %9 = bitcast %class.SkGpuDevice* %8 to %class.GrRecordingContext* (%class.SkGpuDevice*)***
  %10 = load %class.GrRecordingContext* (%class.SkGpuDevice*)**, %class.GrRecordingContext* (%class.SkGpuDevice*)*** %9, align 16
  %11 = getelementptr inbounds %class.GrRecordingContext* (%class.SkGpuDevice*)*, %class.GrRecordingContext* (%class.SkGpuDevice*)** %10, i64 8
  %12 = load %class.GrRecordingContext* (%class.SkGpuDevice*)*, %class.GrRecordingContext* (%class.SkGpuDevice*)** %11, align 8
  %13 = tail call %class.GrRecordingContext* %12(%class.SkGpuDevice* %8) #8
  %14 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %13, i64 0, i32 0, i32 0
  %15 = bitcast %class.GrRecordingContext* %13 to %class.GrDirectContext* (%class.GrContext_Base*)***
  %16 = load %class.GrDirectContext* (%class.GrContext_Base*)**, %class.GrDirectContext* (%class.GrContext_Base*)*** %15, align 8
  %17 = getelementptr inbounds %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %16, i64 3
  %18 = load %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %17, align 8
  %19 = tail call %class.GrDirectContext* %18(%class.GrContext_Base* %14) #8
  %20 = icmp eq %class.GrDirectContext* %19, null
  br i1 %20, label %36, label %21

21:                                               ; preds = %4
  %22 = load %class.SkGpuDevice*, %class.SkGpuDevice** %7, align 8
  %23 = bitcast %class.SkGpuDevice* %22 to %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)***
  %24 = load %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)**, %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)*** %23, align 16
  %25 = getelementptr inbounds %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)*, %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)** %24, i64 9
  %26 = load %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)*, %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)** %25, align 8
  %27 = tail call %class.GrSurfaceDrawContext* %26(%class.SkGpuDevice* %22) #8
  %28 = bitcast %class.GrDirectContextPriv* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  %29 = getelementptr inbounds %class.GrDirectContextPriv, %class.GrDirectContextPriv* %6, i64 0, i32 0
  store %class.GrDirectContext* %19, %class.GrDirectContext** %29, align 8, !alias.scope !31
  %30 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %27, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %31 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %30, align 8
  %32 = bitcast %class.GrSurfaceProxy** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32)
  store %class.GrSurfaceProxy* %31, %class.GrSurfaceProxy** %5, align 8
  %33 = icmp ne %class.GrSurfaceProxy* %31, null
  %34 = zext i1 %33 to i64
  %35 = call zeroext i1 @_ZN19GrDirectContextPriv13flushSurfacesE6SkSpanIP14GrSurfaceProxyEN9SkSurface20BackendSurfaceAccessERK11GrFlushInfoPK28GrBackendSurfaceMutableState(%class.GrDirectContextPriv* nonnull %6, %class.GrSurfaceProxy** nonnull %5, i64 %34, i32 %1, %struct.GrFlushInfo* dereferenceable(48) %2, %class.GrBackendSurfaceMutableState* %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %36

36:                                               ; preds = %4, %21
  %37 = phi i1 [ %35, %21 ], [ false, %4 ]
  ret i1 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13SkSurface_Gpu6onWaitEiPK18GrBackendSemaphoreb(%class.SkSurface_Gpu* nocapture readonly, i32, %class.GrBackendSemaphore*, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %0, i64 0, i32 1, i32 0
  %6 = load %class.SkGpuDevice*, %class.SkGpuDevice** %5, align 8
  %7 = bitcast %class.SkGpuDevice* %6 to i1 (%class.SkGpuDevice*, i32, %class.GrBackendSemaphore*, i1)***
  %8 = load i1 (%class.SkGpuDevice*, i32, %class.GrBackendSemaphore*, i1)**, i1 (%class.SkGpuDevice*, i32, %class.GrBackendSemaphore*, i1)*** %7, align 16
  %9 = getelementptr inbounds i1 (%class.SkGpuDevice*, i32, %class.GrBackendSemaphore*, i1)*, i1 (%class.SkGpuDevice*, i32, %class.GrBackendSemaphore*, i1)** %8, i64 62
  %10 = load i1 (%class.SkGpuDevice*, i32, %class.GrBackendSemaphore*, i1)*, i1 (%class.SkGpuDevice*, i32, %class.GrBackendSemaphore*, i1)** %9, align 8
  %11 = tail call zeroext i1 %10(%class.SkGpuDevice* %6, i32 %1, %class.GrBackendSemaphore* %2, i1 zeroext %3) #8
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK13SkSurface_Gpu14onCharacterizeEP25SkSurfaceCharacterization(%class.SkSurface_Gpu*, %class.SkSurfaceCharacterization*) unnamed_addr #0 align 2 {
  %3 = alloca %struct.SkImageInfo, align 8
  %4 = alloca %class.GrSurfaceProxyView, align 8
  %5 = alloca %class.GrBackendFormat, align 8
  %6 = alloca %class.sk_sp.49, align 8
  %7 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %0, i64 0, i32 1, i32 0
  %8 = load %class.SkGpuDevice*, %class.SkGpuDevice** %7, align 8
  %9 = bitcast %class.SkGpuDevice* %8 to %class.GrRecordingContext* (%class.SkGpuDevice*)***
  %10 = load %class.GrRecordingContext* (%class.SkGpuDevice*)**, %class.GrRecordingContext* (%class.SkGpuDevice*)*** %9, align 16
  %11 = getelementptr inbounds %class.GrRecordingContext* (%class.SkGpuDevice*)*, %class.GrRecordingContext* (%class.SkGpuDevice*)** %10, i64 8
  %12 = load %class.GrRecordingContext* (%class.SkGpuDevice*)*, %class.GrRecordingContext* (%class.SkGpuDevice*)** %11, align 8
  %13 = tail call %class.GrRecordingContext* %12(%class.SkGpuDevice* %8) #8
  %14 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %13, i64 0, i32 0, i32 0
  %15 = bitcast %class.GrRecordingContext* %13 to %class.GrDirectContext* (%class.GrContext_Base*)***
  %16 = load %class.GrDirectContext* (%class.GrContext_Base*)**, %class.GrDirectContext* (%class.GrContext_Base*)*** %15, align 8
  %17 = getelementptr inbounds %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %16, i64 3
  %18 = load %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %17, align 8
  %19 = tail call %class.GrDirectContext* %18(%class.GrContext_Base* %14) #8
  %20 = icmp eq %class.GrDirectContext* %19, null
  br i1 %20, label %211, label %21

21:                                               ; preds = %2
  %22 = bitcast %struct.SkImageInfo* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #8
  %23 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0, i32 1
  %25 = bitcast %struct.SkImageInfo* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 24, i1 false)
  %26 = load %class.SkGpuDevice*, %class.SkGpuDevice** %7, align 8
  %27 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %26, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %class.SkColorSpace*, %class.SkColorSpace** %27, align 8
  %29 = icmp eq %class.SkColorSpace* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 1 monotonic
  br label %33

33:                                               ; preds = %21, %30
  store %class.SkColorSpace* %28, %class.SkColorSpace** %23, align 8
  %34 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %26, i64 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %35 = bitcast i32* %34 to <2 x i64>*
  %36 = load <2 x i64>, <2 x i64>* %35, align 8
  %37 = bitcast i32* %24 to <2 x i64>*
  store <2 x i64> %36, <2 x i64>* %37, align 8
  %38 = extractelement <2 x i64> %36, i32 0
  %39 = trunc i64 %38 to i32
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %200, label %41

41:                                               ; preds = %33
  %42 = bitcast %class.GrSurfaceProxyView* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #8
  %43 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %4, i64 0, i32 0, i32 0
  %44 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %4, i64 0, i32 1
  %45 = bitcast %class.GrSurfaceProxyView* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 16, i1 false)
  %46 = load %class.SkGpuDevice*, %class.SkGpuDevice** %7, align 8
  %47 = bitcast %class.SkGpuDevice* %46 to void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)***
  %48 = load void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)**, void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)*** %47, align 16
  %49 = getelementptr inbounds void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)*, void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)** %48, i64 61
  %50 = load void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)*, void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)** %49, align 8
  call void %50(%class.GrSurfaceProxyView* nonnull sret %4, %class.SkGpuDevice* %46) #8
  %51 = call i64 @_ZNK15GrDirectContext21getResourceCacheLimitEv(%class.GrDirectContext* nonnull %19) #8
  %52 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %43, align 8
  %53 = icmp eq %class.GrSurfaceProxy* %52, null
  br i1 %53, label %85, label %54

54:                                               ; preds = %41
  %55 = bitcast %class.GrSurfaceProxy* %52 to %class.GrTextureProxy* (%class.GrSurfaceProxy*)***
  %56 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)**, %class.GrTextureProxy* (%class.GrSurfaceProxy*)*** %55, align 8
  %57 = getelementptr inbounds %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %56, i64 3
  %58 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %57, align 8
  %59 = call %class.GrTextureProxy* %58(%class.GrSurfaceProxy* nonnull %52) #8
  %60 = icmp eq %class.GrTextureProxy* %59, null
  br i1 %60, label %73, label %61

61:                                               ; preds = %54
  %62 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %43, align 8
  %63 = icmp eq %class.GrSurfaceProxy* %62, null
  br i1 %63, label %70, label %64

64:                                               ; preds = %61
  %65 = bitcast %class.GrSurfaceProxy* %62 to %class.GrTextureProxy* (%class.GrSurfaceProxy*)***
  %66 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)**, %class.GrTextureProxy* (%class.GrSurfaceProxy*)*** %65, align 8
  %67 = getelementptr inbounds %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %66, i64 3
  %68 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %67, align 8
  %69 = call %class.GrTextureProxy* %68(%class.GrSurfaceProxy* nonnull %62) #8
  br label %70

70:                                               ; preds = %61, %64
  %71 = phi %class.GrTextureProxy* [ %69, %64 ], [ null, %61 ]
  %72 = call zeroext i1 @_ZNK14GrTextureProxy9mipmappedEv(%class.GrTextureProxy* %71) #8
  br label %73

73:                                               ; preds = %54, %70
  %74 = phi i1 [ false, %54 ], [ %72, %70 ]
  %75 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %43, align 8
  %76 = icmp eq %class.GrSurfaceProxy* %75, null
  br i1 %76, label %85, label %77

77:                                               ; preds = %73
  %78 = bitcast %class.GrSurfaceProxy* %75 to %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)***
  %79 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)**, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*** %78, align 8
  %80 = getelementptr inbounds %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %79, i64 5
  %81 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %80, align 8
  %82 = call %class.GrRenderTargetProxy* %81(%class.GrSurfaceProxy* nonnull %75) #8
  %83 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %43, align 8
  %84 = bitcast %class.GrSurfaceProxy* %83 to %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)***
  br label %85

85:                                               ; preds = %41, %73, %77
  %86 = phi %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*** [ %84, %77 ], [ null, %73 ], [ null, %41 ]
  %87 = phi %class.GrSurfaceProxy* [ %83, %77 ], [ null, %73 ], [ null, %41 ]
  %88 = phi i1 [ %74, %77 ], [ %74, %73 ], [ false, %41 ]
  %89 = phi %class.GrRenderTargetProxy* [ %82, %77 ], [ null, %73 ], [ null, %41 ]
  %90 = bitcast %class.GrRenderTargetProxy* %89 to i8**
  %91 = load i8*, i8** %90, align 8
  %92 = getelementptr i8, i8* %91, i64 -24
  %93 = bitcast i8* %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %class.GrRenderTargetProxy* %89 to i8*
  %96 = getelementptr inbounds i8, i8* %95, i64 %94
  %97 = getelementptr inbounds i8, i8* %96, i64 24
  %98 = bitcast i8* %97 to i32*
  %99 = load i32, i32* %98, align 8
  %100 = and i32 %99, 2
  %101 = icmp ne i32 %100, 0
  %102 = icmp eq %class.GrSurfaceProxy* %87, null
  br i1 %102, label %109, label %103

103:                                              ; preds = %85
  %104 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)**, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*** %86, align 8
  %105 = getelementptr inbounds %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %104, i64 5
  %106 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %105, align 8
  %107 = call %class.GrRenderTargetProxy* %106(%class.GrSurfaceProxy* nonnull %87) #8
  %108 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %43, align 8
  br label %109

109:                                              ; preds = %85, %103
  %110 = phi %class.GrSurfaceProxy* [ %108, %103 ], [ null, %85 ]
  %111 = phi %class.GrRenderTargetProxy* [ %107, %103 ], [ null, %85 ]
  %112 = bitcast %class.GrRenderTargetProxy* %111 to i8**
  %113 = load i8*, i8** %112, align 8
  %114 = getelementptr i8, i8* %113, i64 -24
  %115 = bitcast i8* %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = bitcast %class.GrRenderTargetProxy* %111 to i8*
  %118 = getelementptr inbounds i8, i8* %117, i64 %116
  %119 = getelementptr inbounds i8, i8* %118, i64 24
  %120 = bitcast i8* %119 to i32*
  %121 = load i32, i32* %120, align 8
  %122 = and i32 %121, 16
  %123 = icmp ne i32 %122, 0
  %124 = bitcast %class.GrBackendFormat* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %124) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %124, i8 -86, i64 72, i1 false)
  %125 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %110, i64 0, i32 5
  call void @_ZN15GrBackendFormatC1ERKS_(%class.GrBackendFormat* nonnull %5, %class.GrBackendFormat* dereferenceable(72) %125) #8
  %126 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %43, align 8
  %127 = icmp eq %class.GrSurfaceProxy* %126, null
  br i1 %127, label %128, label %131

128:                                              ; preds = %109
  %129 = load i8, i8* inttoptr (i64 8 to i8*), align 8
  %130 = sext i8 %129 to i32
  br label %148

131:                                              ; preds = %109
  %132 = bitcast %class.GrSurfaceProxy* %126 to %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)***
  %133 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)**, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*** %132, align 8
  %134 = getelementptr inbounds %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %133, i64 5
  %135 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %134, align 8
  %136 = call %class.GrRenderTargetProxy* %135(%class.GrSurfaceProxy* nonnull %126) #8
  %137 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %43, align 8
  %138 = getelementptr inbounds %class.GrRenderTargetProxy, %class.GrRenderTargetProxy* %136, i64 0, i32 1
  %139 = load i8, i8* %138, align 8
  %140 = sext i8 %139 to i32
  %141 = icmp eq %class.GrSurfaceProxy* %137, null
  br i1 %141, label %148, label %142

142:                                              ; preds = %131
  %143 = bitcast %class.GrSurfaceProxy* %137 to %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)***
  %144 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)**, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*** %143, align 8
  %145 = getelementptr inbounds %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %144, i64 5
  %146 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %145, align 8
  %147 = call %class.GrRenderTargetProxy* %146(%class.GrSurfaceProxy* nonnull %137) #8
  br label %148

148:                                              ; preds = %128, %131, %142
  %149 = phi i32 [ %140, %142 ], [ %140, %131 ], [ %130, %128 ]
  %150 = phi %class.GrRenderTargetProxy* [ %147, %142 ], [ null, %131 ], [ null, %128 ]
  %151 = bitcast %class.GrRenderTargetProxy* %150 to i8**
  %152 = load i8*, i8** %151, align 8
  %153 = getelementptr i8, i8* %152, i64 -24
  %154 = bitcast i8* %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = bitcast %class.GrRenderTargetProxy* %150 to i8*
  %157 = getelementptr inbounds i8, i8* %156, i64 %155
  %158 = getelementptr inbounds i8, i8* %157, i64 163
  %159 = load i8, i8* %158, align 1, !range !11
  %160 = icmp ne i8 %159, 0
  call void @_ZN15GrDirectContext15threadSafeProxyEv(%class.sk_sp.49* nonnull sret %6, %class.GrDirectContext* nonnull %19) #8
  %161 = load i32, i32* %44, align 8
  %162 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %43, align 8
  %163 = icmp eq %class.GrSurfaceProxy* %162, null
  br i1 %163, label %171, label %164

164:                                              ; preds = %148
  %165 = bitcast %class.GrSurfaceProxy* %162 to %class.GrTextureProxy* (%class.GrSurfaceProxy*)***
  %166 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)**, %class.GrTextureProxy* (%class.GrSurfaceProxy*)*** %165, align 8
  %167 = getelementptr inbounds %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %166, i64 3
  %168 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %167, align 8
  %169 = call %class.GrTextureProxy* %168(%class.GrSurfaceProxy* nonnull %162) #8
  %170 = icmp ne %class.GrTextureProxy* %169, null
  br label %171

171:                                              ; preds = %148, %164
  %172 = phi i1 [ %170, %164 ], [ false, %148 ]
  %173 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %0, i64 0, i32 0, i32 0, i32 1
  call void @_ZN25SkSurfaceCharacterization3setE5sk_spI24GrContextThreadSafeProxyEmRK11SkImageInfoRK15GrBackendFormat15GrSurfaceOriginiNS_11TextureableENS_9MipMappedENS_10UsesGLFBO0ENS_27VkRTSupportsInputAttachmentENS_27VulkanSecondaryCBCompatibleE11GrProtectedRK14SkSurfaceProps(%class.SkSurfaceCharacterization* %1, %class.sk_sp.49* nonnull %6, i64 %51, %struct.SkImageInfo* nonnull dereferenceable(24) %3, %class.GrBackendFormat* nonnull dereferenceable(72) %5, i32 %161, i32 %149, i1 zeroext %172, i1 zeroext %88, i1 zeroext %101, i1 zeroext %123, i1 zeroext false, i1 zeroext %160, %class.SkSurfaceProps* dereferenceable(8) %173)
  %174 = getelementptr inbounds %class.sk_sp.49, %class.sk_sp.49* %6, i64 0, i32 0
  %175 = load %class.GrContextThreadSafeProxy*, %class.GrContextThreadSafeProxy** %174, align 8
  %176 = icmp eq %class.GrContextThreadSafeProxy* %175, null
  br i1 %176, label %183, label %177

177:                                              ; preds = %171
  %178 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %175, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = atomicrmw add i32* %178, i32 -1 acq_rel
  %180 = icmp eq i32 %179, 1
  br i1 %180, label %181, label %183

181:                                              ; preds = %177
  call void @_ZN24GrContextThreadSafeProxyD1Ev(%class.GrContextThreadSafeProxy* nonnull %175) #8
  %182 = bitcast %class.GrContextThreadSafeProxy* %175 to i8*
  call void @_ZdlPv(i8* %182) #9
  br label %183

183:                                              ; preds = %171, %177, %181
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %124) #8
  %184 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %43, align 8
  %185 = icmp eq %class.GrSurfaceProxy* %184, null
  br i1 %185, label %198, label %186

186:                                              ; preds = %183
  %187 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %184, i64 0, i32 1
  %188 = getelementptr inbounds %class.SkNVRefCnt.140, %class.SkNVRefCnt.140* %187, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = atomicrmw add i32* %188, i32 -1 acq_rel
  %190 = icmp eq i32 %189, 1
  br i1 %190, label %191, label %198

191:                                              ; preds = %186
  %192 = getelementptr inbounds %class.SkNVRefCnt.140, %class.SkNVRefCnt.140* %187, i64 -2
  %193 = bitcast %class.SkNVRefCnt.140* %192 to %class.GrSurfaceProxy*
  %194 = bitcast %class.SkNVRefCnt.140* %192 to void (%class.GrSurfaceProxy*)***
  %195 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %194, align 8
  %196 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %195, i64 1
  %197 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %196, align 8
  call void %197(%class.GrSurfaceProxy* nonnull %193) #8
  br label %198

198:                                              ; preds = %183, %186, %191
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #8
  %199 = load %class.SkColorSpace*, %class.SkColorSpace** %23, align 8
  br label %200

200:                                              ; preds = %33, %198
  %201 = phi %class.SkColorSpace* [ %199, %198 ], [ %28, %33 ]
  %202 = phi i1 [ true, %198 ], [ false, %33 ]
  %203 = icmp eq %class.SkColorSpace* %201, null
  br i1 %203, label %210, label %204

204:                                              ; preds = %200
  %205 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %201, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %206 = atomicrmw add i32* %205, i32 -1 acq_rel
  %207 = icmp eq i32 %206, 1
  br i1 %207, label %208, label %210

208:                                              ; preds = %204
  %209 = bitcast %class.SkColorSpace* %201 to i8*
  call void @_ZdlPv(i8* %209) #9
  br label %210

210:                                              ; preds = %200, %204, %208
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #8
  br label %211

211:                                              ; preds = %2, %210
  %212 = phi i1 [ %202, %210 ], [ false, %2 ]
  ret i1 %212
}

declare i64 @_ZNK15GrDirectContext21getResourceCacheLimitEv(%class.GrDirectContext*) local_unnamed_addr #1

declare zeroext i1 @_ZNK14GrTextureProxy9mipmappedEv(%class.GrTextureProxy*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare void @_ZN15GrBackendFormatC1ERKS_(%class.GrBackendFormat*, %class.GrBackendFormat* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN25SkSurfaceCharacterization3setE5sk_spI24GrContextThreadSafeProxyEmRK11SkImageInfoRK15GrBackendFormat15GrSurfaceOriginiNS_11TextureableENS_9MipMappedENS_10UsesGLFBO0ENS_27VkRTSupportsInputAttachmentENS_27VulkanSecondaryCBCompatibleE11GrProtectedRK14SkSurfaceProps(%class.SkSurfaceCharacterization*, %class.sk_sp.49*, i64, %struct.SkImageInfo* dereferenceable(24), %class.GrBackendFormat* dereferenceable(72), i32, i32, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %15 = zext i1 %7 to i8
  %16 = zext i1 %8 to i8
  %17 = zext i1 %9 to i8
  %18 = zext i1 %10 to i8
  %19 = zext i1 %11 to i8
  %20 = zext i1 %12 to i8
  %21 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 0
  %22 = icmp eq %class.sk_sp.49* %21, %1
  br i1 %22, label %40, label %23

23:                                               ; preds = %14
  %24 = getelementptr inbounds %class.sk_sp.49, %class.sk_sp.49* %1, i64 0, i32 0
  %25 = load %class.GrContextThreadSafeProxy*, %class.GrContextThreadSafeProxy** %24, align 8
  %26 = icmp eq %class.GrContextThreadSafeProxy* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw add i32* %28, i32 1 monotonic
  br label %30

30:                                               ; preds = %27, %23
  %31 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 0, i32 0
  %32 = load %class.GrContextThreadSafeProxy*, %class.GrContextThreadSafeProxy** %31, align 8
  store %class.GrContextThreadSafeProxy* %25, %class.GrContextThreadSafeProxy** %31, align 8
  %33 = icmp eq %class.GrContextThreadSafeProxy* %32, null
  br i1 %33, label %40, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %40

38:                                               ; preds = %34
  tail call void @_ZN24GrContextThreadSafeProxyD1Ev(%class.GrContextThreadSafeProxy* nonnull %32) #8
  %39 = bitcast %class.GrContextThreadSafeProxy* %32 to i8*
  tail call void @_ZdlPv(i8* %39) #9
  br label %40

40:                                               ; preds = %14, %30, %34, %38
  %41 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 1
  store i64 %2, i64* %41, align 8
  %42 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 2
  %43 = icmp eq %struct.SkImageInfo* %42, %3
  br i1 %43, label %61, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0, i32 0, i32 0
  %46 = load %class.SkColorSpace*, %class.SkColorSpace** %45, align 8
  %47 = icmp eq %class.SkColorSpace* %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 1 monotonic
  br label %51

51:                                               ; preds = %48, %44
  %52 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %42, i64 0, i32 0, i32 0, i32 0
  %53 = load %class.SkColorSpace*, %class.SkColorSpace** %52, align 8
  store %class.SkColorSpace* %46, %class.SkColorSpace** %52, align 8
  %54 = icmp eq %class.SkColorSpace* %53, null
  br i1 %54, label %61, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i32* %56, i32 -1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = bitcast %class.SkColorSpace* %53 to i8*
  tail call void @_ZdlPv(i8* %60) #9
  br label %61

61:                                               ; preds = %40, %51, %55, %59
  %62 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 2, i32 0, i32 1
  %63 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0, i32 1
  %64 = bitcast i32* %63 to i64*
  %65 = bitcast i32* %62 to i64*
  %66 = load i64, i64* %64, align 8
  store i64 %66, i64* %65, align 8
  %67 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 2, i32 1
  %68 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 1
  %69 = bitcast %struct.SkISize* %68 to i64*
  %70 = bitcast %struct.SkISize* %67 to i64*
  %71 = load i64, i64* %69, align 8
  store i64 %71, i64* %70, align 8
  %72 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 3
  %73 = tail call dereferenceable(72) %class.GrBackendFormat* @_ZN15GrBackendFormataSERKS_(%class.GrBackendFormat* %72, %class.GrBackendFormat* dereferenceable(72) %4) #8
  %74 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 4
  store i32 %5, i32* %74, align 8
  %75 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 5
  store i32 %6, i32* %75, align 4
  %76 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 6
  store i8 %15, i8* %76, align 8
  %77 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 7
  store i8 %16, i8* %77, align 1
  %78 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 8
  store i8 %17, i8* %78, align 2
  %79 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 9
  store i8 %18, i8* %79, align 1
  %80 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 10
  store i8 %19, i8* %80, align 4
  %81 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 11
  store i8 %20, i8* %81, align 1
  %82 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %0, i64 0, i32 12
  %83 = tail call dereferenceable(8) %class.SkSurfaceProps* @_ZN14SkSurfacePropsaSERKS_(%class.SkSurfaceProps* %82, %class.SkSurfaceProps* dereferenceable(8) %13) #8
  ret void
}

declare void @_ZN15GrDirectContext15threadSafeProxyEv(%class.sk_sp.49* sret, %class.GrDirectContext*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13SkSurface_Gpu6onDrawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint(%class.SkSurface_Gpu*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) unnamed_addr #0 align 2 {
  %7 = alloca %class.sk_sp.309, align 8
  %8 = alloca %class.GrSurfaceProxyView, align 8
  %9 = alloca %class.SkColorInfo, align 8
  %10 = alloca %class.GrSurfaceProxyView, align 8
  %11 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %0, i64 0, i32 1, i32 0
  %12 = load %class.SkGpuDevice*, %class.SkGpuDevice** %11, align 8
  %13 = bitcast %class.SkGpuDevice* %12 to %class.GrRecordingContext* (%class.SkGpuDevice*)***
  %14 = load %class.GrRecordingContext* (%class.SkGpuDevice*)**, %class.GrRecordingContext* (%class.SkGpuDevice*)*** %13, align 16
  %15 = getelementptr inbounds %class.GrRecordingContext* (%class.SkGpuDevice*)*, %class.GrRecordingContext* (%class.SkGpuDevice*)** %14, i64 8
  %16 = load %class.GrRecordingContext* (%class.SkGpuDevice*)*, %class.GrRecordingContext* (%class.SkGpuDevice*)** %15, align 8
  %17 = tail call %class.GrRecordingContext* %16(%class.SkGpuDevice* %12) #8
  %18 = bitcast %class.SkCanvas* %1 to %class.GrRecordingContext* (%class.SkCanvas*)***
  %19 = load %class.GrRecordingContext* (%class.SkCanvas*)**, %class.GrRecordingContext* (%class.SkCanvas*)*** %18, align 8
  %20 = getelementptr inbounds %class.GrRecordingContext* (%class.SkCanvas*)*, %class.GrRecordingContext* (%class.SkCanvas*)** %19, i64 3
  %21 = load %class.GrRecordingContext* (%class.SkCanvas*)*, %class.GrRecordingContext* (%class.SkCanvas*)** %20, align 8
  %22 = tail call %class.GrRecordingContext* %21(%class.SkCanvas* %1) #8
  %23 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %22, i64 0, i32 0, i32 0
  %24 = bitcast %class.GrRecordingContext* %22 to %class.GrDirectContext* (%class.GrContext_Base*)***
  %25 = load %class.GrDirectContext* (%class.GrContext_Base*)**, %class.GrDirectContext* (%class.GrContext_Base*)*** %24, align 8
  %26 = getelementptr inbounds %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %25, i64 3
  %27 = load %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %26, align 8
  %28 = tail call %class.GrDirectContext* %27(%class.GrContext_Base* %23) #8
  %29 = icmp eq %class.GrDirectContext* %28, null
  br i1 %29, label %192, label %30

30:                                               ; preds = %6
  %31 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %28, i64 0, i32 0, i32 0, i32 0
  %32 = tail call i32 @_ZNK14GrContext_Base9contextIDEv(%class.GrContext_Base* %31) #8
  %33 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %17, i64 0, i32 0, i32 0
  %34 = tail call i32 @_ZNK14GrContext_Base9contextIDEv(%class.GrContext_Base* %33) #8
  %35 = icmp eq i32 %32, %34
  br i1 %35, label %36, label %192

36:                                               ; preds = %30
  %37 = bitcast %class.GrSurfaceProxyView* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #8
  %38 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 1
  %40 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %10, i64 0, i32 2, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 16, i1 false) #8
  %41 = load %class.SkGpuDevice*, %class.SkGpuDevice** %11, align 8
  %42 = bitcast %class.SkGpuDevice* %41 to void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)***
  %43 = load void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)**, void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)*** %42, align 16
  %44 = getelementptr inbounds void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)*, void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)** %43, i64 61
  %45 = load void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)*, void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)** %44, align 8
  call void %45(%class.GrSurfaceProxyView* nonnull sret %10, %class.SkGpuDevice* %41) #8
  %46 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %38, align 8
  %47 = icmp eq %class.GrSurfaceProxy* %46, null
  br i1 %47, label %48, label %49

48:                                               ; preds = %36
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #8
  br label %192

49:                                               ; preds = %36
  %50 = bitcast %class.GrSurfaceProxy* %46 to %class.GrTextureProxy* (%class.GrSurfaceProxy*)***
  %51 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)**, %class.GrTextureProxy* (%class.GrSurfaceProxy*)*** %50, align 8, !noalias !34
  %52 = getelementptr inbounds %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %51, i64 3
  %53 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %52, align 8, !noalias !34
  %54 = call %class.GrTextureProxy* %53(%class.GrSurfaceProxy* nonnull %46) #8, !noalias !34
  %55 = icmp eq %class.GrTextureProxy* %54, null
  br i1 %55, label %175, label %56

56:                                               ; preds = %49
  %57 = bitcast %class.GrTextureProxy* %54 to i8**
  %58 = load i8*, i8** %57, align 8, !noalias !37
  %59 = getelementptr i8, i8* %58, i64 -24
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 8, !noalias !37
  %62 = add i64 %61, 8
  %63 = bitcast %class.GrTextureProxy* %54 to i8*
  %64 = getelementptr inbounds i8, i8* %63, i64 %62
  %65 = bitcast i8* %64 to i32*
  %66 = atomicrmw add i32* %65, i32 1 monotonic, !noalias !37
  %67 = load i8*, i8** %57, align 8
  %68 = getelementptr i8, i8* %67, i64 -24
  %69 = bitcast i8* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 8
  %72 = getelementptr inbounds i8, i8* %63, i64 %71
  %73 = bitcast i8* %72 to i32*
  %74 = atomicrmw add i32* %73, i32 -1 acq_rel
  %75 = icmp eq i32 %74, 1
  br i1 %75, label %76, label %83

76:                                               ; preds = %56
  %77 = getelementptr inbounds i8, i8* %63, i64 %70
  %78 = bitcast i8* %77 to %class.GrSurfaceProxy*
  %79 = bitcast i8* %77 to void (%class.GrSurfaceProxy*)***
  %80 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %79, align 8
  %81 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %80, i64 1
  %82 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %81, align 8
  call void %82(%class.GrSurfaceProxy* nonnull %78) #8
  br label %83

83:                                               ; preds = %76, %56
  %84 = load %class.SkGpuDevice*, %class.SkGpuDevice** %11, align 8
  %85 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %84, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %86 = load %class.SkColorSpace*, %class.SkColorSpace** %85, align 8
  %87 = icmp eq %class.SkColorSpace* %86, null
  br i1 %87, label %91, label %88

88:                                               ; preds = %83
  %89 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = atomicrmw add i32* %89, i32 1 monotonic
  br label %91

91:                                               ; preds = %88, %83
  %92 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %84, i64 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %93 = bitcast i32* %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = atomicrmw add i32* %95, i32 1 monotonic, !noalias !40
  %97 = ptrtoint %class.GrDirectContext* %28 to i64
  %98 = bitcast %class.sk_sp.309* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #8
  %99 = bitcast %class.GrSurfaceProxyView* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %99) #8
  %100 = bitcast %class.SkColorInfo* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %100) #8
  %101 = call i8* @_Znwm(i64 104) #9, !noalias !43
  %102 = bitcast i8* %101 to %class.SkImage_Gpu*
  %103 = bitcast %class.sk_sp.309* %7 to i64*
  store i64 %97, i64* %103, align 8, !noalias !43
  %104 = bitcast %class.GrSurfaceProxyView* %10 to i64*
  %105 = load i64, i64* %104, align 8, !noalias !43
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %38, align 8, !noalias !43
  %106 = bitcast %class.GrSurfaceProxyView* %8 to i64*
  store i64 %105, i64* %106, align 8, !noalias !43
  %107 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %8, i64 0, i32 1
  %108 = load i32, i32* %39, align 8, !noalias !43
  store i32 %108, i32* %107, align 8, !noalias !43
  %109 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %8, i64 0, i32 2, i32 0
  %110 = load i16, i16* %40, align 4, !noalias !43
  store i16 %110, i16* %109, align 4, !noalias !43
  %111 = getelementptr inbounds %class.SkColorInfo, %class.SkColorInfo* %9, i64 0, i32 0, i32 0
  br i1 %87, label %115, label %112

112:                                              ; preds = %91
  %113 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = atomicrmw add i32* %113, i32 1 monotonic, !noalias !43
  br label %115

115:                                              ; preds = %112, %91
  store %class.SkColorSpace* %86, %class.SkColorSpace** %111, align 8, !noalias !43
  %116 = getelementptr inbounds %class.SkColorInfo, %class.SkColorInfo* %9, i64 0, i32 1
  %117 = bitcast i32* %116 to i64*
  store i64 %94, i64* %117, align 8, !noalias !43
  call void @_ZN11SkImage_GpuC1E5sk_spI14GrImageContextEj18GrSurfaceProxyView11SkColorInfo(%class.SkImage_Gpu* nonnull %102, %class.sk_sp.309* nonnull %7, i32 0, %class.GrSurfaceProxyView* nonnull %8, %class.SkColorInfo* nonnull %9) #8, !noalias !43
  %118 = load %class.SkColorSpace*, %class.SkColorSpace** %111, align 8, !noalias !43
  %119 = icmp eq %class.SkColorSpace* %118, null
  br i1 %119, label %126, label %120

120:                                              ; preds = %115
  %121 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %118, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = atomicrmw add i32* %121, i32 -1 acq_rel, !noalias !43
  %123 = icmp eq i32 %122, 1
  br i1 %123, label %124, label %126

124:                                              ; preds = %120
  %125 = bitcast %class.SkColorSpace* %118 to i8*
  call void @_ZdlPv(i8* %125) #9, !noalias !43
  br label %126

126:                                              ; preds = %124, %120, %115
  %127 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %8, i64 0, i32 0, i32 0
  %128 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %127, align 8, !noalias !43
  %129 = icmp eq %class.GrSurfaceProxy* %128, null
  br i1 %129, label %142, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %128, i64 0, i32 1
  %132 = getelementptr inbounds %class.SkNVRefCnt.140, %class.SkNVRefCnt.140* %131, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = atomicrmw add i32* %132, i32 -1 acq_rel, !noalias !43
  %134 = icmp eq i32 %133, 1
  br i1 %134, label %135, label %142

135:                                              ; preds = %130
  %136 = getelementptr inbounds %class.SkNVRefCnt.140, %class.SkNVRefCnt.140* %131, i64 -2
  %137 = bitcast %class.SkNVRefCnt.140* %136 to %class.GrSurfaceProxy*
  %138 = bitcast %class.SkNVRefCnt.140* %136 to void (%class.GrSurfaceProxy*)***
  %139 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %138, align 8, !noalias !43
  %140 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %139, i64 1
  %141 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %140, align 8, !noalias !43
  call void %141(%class.GrSurfaceProxy* nonnull %137) #8, !noalias !43
  br label %142

142:                                              ; preds = %135, %130, %126
  %143 = getelementptr inbounds %class.sk_sp.309, %class.sk_sp.309* %7, i64 0, i32 0
  %144 = load %class.GrImageContext*, %class.GrImageContext** %143, align 8, !noalias !43
  %145 = icmp eq %class.GrImageContext* %144, null
  br i1 %145, label %156, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %class.GrImageContext, %class.GrImageContext* %144, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = atomicrmw add i32* %147, i32 -1 acq_rel, !noalias !43
  %149 = icmp eq i32 %148, 1
  br i1 %149, label %150, label %156

150:                                              ; preds = %146
  %151 = bitcast %class.GrImageContext* %144 to %class.SkRefCntBase*
  %152 = bitcast %class.GrImageContext* %144 to void (%class.SkRefCntBase*)***
  %153 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %152, align 8, !noalias !43
  %154 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, i64 2
  %155 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %154, align 8, !noalias !43
  call void %155(%class.SkRefCntBase* nonnull %151) #8, !noalias !43
  br label %156

156:                                              ; preds = %150, %146, %142
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %99) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %100) #8
  %157 = bitcast i8* %101 to %class.SkImage*
  call void @_ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas* %1, %class.SkImage* nonnull %157, float %2, float %3, %struct.SkSamplingOptions* dereferenceable(20) %4, %class.SkPaint* %5) #8
  %158 = getelementptr inbounds i8, i8* %101, i64 8
  %159 = bitcast i8* %158 to i32*
  %160 = atomicrmw add i32* %159, i32 -1 acq_rel
  %161 = icmp eq i32 %160, 1
  br i1 %161, label %162, label %168

162:                                              ; preds = %156
  %163 = bitcast i8* %101 to %class.SkRefCntBase*
  %164 = bitcast i8* %101 to void (%class.SkRefCntBase*)***
  %165 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %164, align 8
  %166 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %165, i64 2
  %167 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %166, align 8
  call void %167(%class.SkRefCntBase* nonnull %163) #8
  br label %168

168:                                              ; preds = %162, %156
  br i1 %87, label %175, label %169

169:                                              ; preds = %168
  %170 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = atomicrmw add i32* %170, i32 -1 acq_rel
  %172 = icmp eq i32 %171, 1
  br i1 %172, label %173, label %175

173:                                              ; preds = %169
  %174 = bitcast %class.SkColorSpace* %86 to i8*
  call void @_ZdlPv(i8* %174) #9
  br label %175

175:                                              ; preds = %173, %169, %168, %49
  %176 = phi i1 [ false, %49 ], [ true, %173 ], [ true, %169 ], [ true, %168 ]
  %177 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %38, align 8
  %178 = icmp eq %class.GrSurfaceProxy* %177, null
  br i1 %178, label %191, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %177, i64 0, i32 1
  %181 = getelementptr inbounds %class.SkNVRefCnt.140, %class.SkNVRefCnt.140* %180, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = atomicrmw add i32* %181, i32 -1 acq_rel
  %183 = icmp eq i32 %182, 1
  br i1 %183, label %184, label %191

184:                                              ; preds = %179
  %185 = getelementptr inbounds %class.SkNVRefCnt.140, %class.SkNVRefCnt.140* %180, i64 -2
  %186 = bitcast %class.SkNVRefCnt.140* %185 to %class.GrSurfaceProxy*
  %187 = bitcast %class.SkNVRefCnt.140* %185 to void (%class.GrSurfaceProxy*)***
  %188 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %187, align 8
  %189 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %188, i64 1
  %190 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %189, align 8
  call void %190(%class.GrSurfaceProxy* nonnull %186) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #8
  br i1 %176, label %194, label %192

191:                                              ; preds = %175, %179
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #8
  br i1 %176, label %194, label %192

192:                                              ; preds = %30, %6, %184, %48, %191
  %193 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %0, i64 0, i32 0
  call void @_ZN14SkSurface_Base6onDrawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint(%class.SkSurface_Base* %193, %class.SkCanvas* %1, float %2, float %3, %struct.SkSamplingOptions* dereferenceable(20) %4, %class.SkPaint* %5) #8
  br label %194

194:                                              ; preds = %184, %192, %191
  ret void
}

declare void @_ZN14SkSurface_Base6onDrawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint(%class.SkSurface_Base*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK13SkSurface_Gpu14onIsCompatibleERK25SkSurfaceCharacterization(%class.SkSurface_Gpu* nocapture readonly, %class.SkSurfaceCharacterization* dereferenceable(136)) unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.49, align 8
  %4 = alloca %class.GrSurfaceProxyView, align 8
  %5 = alloca %class.GrBackendFormat, align 8
  %6 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %0, i64 0, i32 1, i32 0
  %7 = load %class.SkGpuDevice*, %class.SkGpuDevice** %6, align 8
  %8 = bitcast %class.SkGpuDevice* %7 to %class.GrRecordingContext* (%class.SkGpuDevice*)***
  %9 = load %class.GrRecordingContext* (%class.SkGpuDevice*)**, %class.GrRecordingContext* (%class.SkGpuDevice*)*** %8, align 16
  %10 = getelementptr inbounds %class.GrRecordingContext* (%class.SkGpuDevice*)*, %class.GrRecordingContext* (%class.SkGpuDevice*)** %9, i64 8
  %11 = load %class.GrRecordingContext* (%class.SkGpuDevice*)*, %class.GrRecordingContext* (%class.SkGpuDevice*)** %10, align 8
  %12 = tail call %class.GrRecordingContext* %11(%class.SkGpuDevice* %7) #8
  %13 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %12, i64 0, i32 0, i32 0
  %14 = bitcast %class.GrRecordingContext* %12 to %class.GrDirectContext* (%class.GrContext_Base*)***
  %15 = load %class.GrDirectContext* (%class.GrContext_Base*)**, %class.GrDirectContext* (%class.GrContext_Base*)*** %14, align 8
  %16 = getelementptr inbounds %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %15, i64 3
  %17 = load %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %16, align 8
  %18 = tail call %class.GrDirectContext* %17(%class.GrContext_Base* %13) #8
  %19 = icmp eq %class.GrDirectContext* %18, null
  br i1 %19, label %255, label %20

20:                                               ; preds = %2
  %21 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 2, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %255, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 10
  %26 = load i8, i8* %25, align 4, !range !11
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %255

28:                                               ; preds = %24
  %29 = load %class.SkGpuDevice*, %class.SkGpuDevice** %6, align 8
  %30 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %29, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %31 = load %class.SkColorSpace*, %class.SkColorSpace** %30, align 8
  %32 = icmp eq %class.SkColorSpace* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 1 monotonic
  br label %36

36:                                               ; preds = %28, %33
  %37 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %29, i64 0, i32 0, i32 0, i32 3, i32 0, i32 1
  %38 = bitcast i32* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = trunc i64 %39 to i32
  %41 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %29, i64 0, i32 0, i32 0, i32 3, i32 1
  %42 = bitcast %struct.SkISize* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i32 %40, 0
  br i1 %44, label %247, label %45

45:                                               ; preds = %36
  %46 = bitcast %class.GrSurfaceProxyView* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #8
  %47 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %4, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %4, i64 0, i32 1
  %49 = bitcast %class.GrSurfaceProxyView* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 16, i1 false)
  %50 = load %class.SkGpuDevice*, %class.SkGpuDevice** %6, align 8
  %51 = bitcast %class.SkGpuDevice* %50 to void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)***
  %52 = load void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)**, void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)*** %51, align 16
  %53 = getelementptr inbounds void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)*, void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)** %52, i64 61
  %54 = load void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)*, void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)** %53, align 8
  call void %54(%class.GrSurfaceProxyView* nonnull sret %4, %class.SkGpuDevice* %50) #8
  %55 = call i64 @_ZNK15GrDirectContext21getResourceCacheLimitEv(%class.GrDirectContext* nonnull %18) #8
  %56 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 6
  %57 = load i8, i8* %56, align 8, !range !11
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %85, label %59

59:                                               ; preds = %45
  %60 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %47, align 8
  %61 = icmp eq %class.GrSurfaceProxy* %60, null
  br i1 %61, label %245, label %62

62:                                               ; preds = %59
  %63 = bitcast %class.GrSurfaceProxy* %60 to %class.GrTextureProxy* (%class.GrSurfaceProxy*)***
  %64 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)**, %class.GrTextureProxy* (%class.GrSurfaceProxy*)*** %63, align 8
  %65 = getelementptr inbounds %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %64, i64 3
  %66 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %65, align 8
  %67 = call %class.GrTextureProxy* %66(%class.GrSurfaceProxy* nonnull %60) #8
  %68 = icmp eq %class.GrTextureProxy* %67, null
  br i1 %68, label %229, label %69

69:                                               ; preds = %62
  %70 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 7
  %71 = load i8, i8* %70, align 1, !range !11
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %85, label %73

73:                                               ; preds = %69
  %74 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %47, align 8
  %75 = icmp eq %class.GrSurfaceProxy* %74, null
  br i1 %75, label %82, label %76

76:                                               ; preds = %73
  %77 = bitcast %class.GrSurfaceProxy* %74 to %class.GrTextureProxy* (%class.GrSurfaceProxy*)***
  %78 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)**, %class.GrTextureProxy* (%class.GrSurfaceProxy*)*** %77, align 8
  %79 = getelementptr inbounds %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %78, i64 3
  %80 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %79, align 8
  %81 = call %class.GrTextureProxy* %80(%class.GrSurfaceProxy* nonnull %74) #8
  br label %82

82:                                               ; preds = %73, %76
  %83 = phi %class.GrTextureProxy* [ %81, %76 ], [ null, %73 ]
  %84 = call zeroext i1 @_ZNK14GrTextureProxy9mipmappedEv(%class.GrTextureProxy* %83) #8
  br i1 %84, label %85, label %229

85:                                               ; preds = %69, %45, %82
  %86 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 8
  %87 = load i8, i8* %86, align 2, !range !11
  %88 = icmp ne i8 %87, 0
  %89 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %47, align 8
  %90 = icmp eq %class.GrSurfaceProxy* %89, null
  br i1 %90, label %97, label %91

91:                                               ; preds = %85
  %92 = bitcast %class.GrSurfaceProxy* %89 to %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)***
  %93 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)**, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*** %92, align 8
  %94 = getelementptr inbounds %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %93, i64 5
  %95 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %94, align 8
  %96 = call %class.GrRenderTargetProxy* %95(%class.GrSurfaceProxy* nonnull %89) #8
  br label %97

97:                                               ; preds = %85, %91
  %98 = phi %class.GrRenderTargetProxy* [ %96, %91 ], [ null, %85 ]
  %99 = bitcast %class.GrRenderTargetProxy* %98 to i8**
  %100 = load i8*, i8** %99, align 8
  %101 = getelementptr i8, i8* %100, i64 -24
  %102 = bitcast i8* %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %class.GrRenderTargetProxy* %98 to i8*
  %105 = getelementptr inbounds i8, i8* %104, i64 %103
  %106 = getelementptr inbounds i8, i8* %105, i64 24
  %107 = bitcast i8* %106 to i32*
  %108 = load i32, i32* %107, align 8
  %109 = and i32 %108, 2
  %110 = icmp ne i32 %109, 0
  %111 = xor i1 %88, %110
  br i1 %111, label %112, label %119

112:                                              ; preds = %97
  %113 = load i8, i8* %86, align 2, !range !11
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %229, label %115

115:                                              ; preds = %112
  %116 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 5
  %117 = load i32, i32* %116, align 4
  %118 = icmp sgt i32 %117, 1
  br i1 %118, label %229, label %119

119:                                              ; preds = %115, %97
  %120 = bitcast %class.GrBackendFormat* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %120) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %120, i8 -86, i64 72, i1 false)
  %121 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %47, align 8
  %122 = icmp eq %class.GrSurfaceProxy* %121, null
  br i1 %122, label %129, label %123

123:                                              ; preds = %119
  %124 = bitcast %class.GrSurfaceProxy* %121 to %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)***
  %125 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)**, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*** %124, align 8
  %126 = getelementptr inbounds %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %125, i64 5
  %127 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %126, align 8
  %128 = call %class.GrRenderTargetProxy* %127(%class.GrSurfaceProxy* nonnull %121) #8
  br label %129

129:                                              ; preds = %119, %123
  %130 = phi %class.GrRenderTargetProxy* [ %128, %123 ], [ null, %119 ]
  %131 = bitcast %class.GrRenderTargetProxy* %130 to i8**
  %132 = load i8*, i8** %131, align 8
  %133 = getelementptr i8, i8* %132, i64 -24
  %134 = bitcast i8* %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %class.GrRenderTargetProxy* %130 to i8*
  %137 = getelementptr inbounds i8, i8* %136, i64 %135
  %138 = getelementptr inbounds i8, i8* %137, i64 32
  %139 = bitcast i8* %138 to %class.GrBackendFormat*
  call void @_ZN15GrBackendFormatC1ERKS_(%class.GrBackendFormat* nonnull %5, %class.GrBackendFormat* dereferenceable(72) %139) #8
  %140 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %47, align 8
  %141 = icmp eq %class.GrSurfaceProxy* %140, null
  br i1 %141, label %149, label %142

142:                                              ; preds = %129
  %143 = bitcast %class.GrSurfaceProxy* %140 to %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)***
  %144 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)**, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*** %143, align 8
  %145 = getelementptr inbounds %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %144, i64 5
  %146 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %145, align 8
  %147 = call %class.GrRenderTargetProxy* %146(%class.GrSurfaceProxy* nonnull %140) #8
  %148 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %47, align 8
  br label %149

149:                                              ; preds = %129, %142
  %150 = phi %class.GrSurfaceProxy* [ %148, %142 ], [ null, %129 ]
  %151 = phi %class.GrRenderTargetProxy* [ %147, %142 ], [ null, %129 ]
  %152 = getelementptr inbounds %class.GrRenderTargetProxy, %class.GrRenderTargetProxy* %151, i64 0, i32 1
  %153 = load i8, i8* %152, align 8
  %154 = sext i8 %153 to i32
  %155 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %150, i64 0, i32 15
  %156 = load i8, i8* %155, align 1, !range !11
  %157 = icmp ne i8 %156, 0
  %158 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 0, i32 0
  %159 = load %class.GrContextThreadSafeProxy*, %class.GrContextThreadSafeProxy** %158, align 8
  %160 = icmp eq %class.GrContextThreadSafeProxy* %159, null
  br i1 %160, label %227, label %161

161:                                              ; preds = %149
  %162 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %18, i64 0, i32 0, i32 0, i32 0
  %163 = bitcast %class.sk_sp.49* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %163) #8
  call void @_ZN14GrContext_Base15threadSafeProxyEv(%class.sk_sp.49* nonnull sret %3, %class.GrContext_Base* %162) #8
  %164 = getelementptr inbounds %class.sk_sp.49, %class.sk_sp.49* %3, i64 0, i32 0
  %165 = load %class.GrContextThreadSafeProxy*, %class.GrContextThreadSafeProxy** %164, align 8
  %166 = icmp eq %class.GrContextThreadSafeProxy* %159, %165
  %167 = icmp eq %class.GrContextThreadSafeProxy* %165, null
  br i1 %167, label %174, label %168

168:                                              ; preds = %161
  %169 = getelementptr inbounds %class.GrContextThreadSafeProxy, %class.GrContextThreadSafeProxy* %165, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = atomicrmw add i32* %169, i32 -1 acq_rel
  %171 = icmp eq i32 %170, 1
  br i1 %171, label %172, label %174

172:                                              ; preds = %168
  call void @_ZN24GrContextThreadSafeProxyD1Ev(%class.GrContextThreadSafeProxy* nonnull %165) #8
  %173 = bitcast %class.GrContextThreadSafeProxy* %165 to i8*
  call void @_ZdlPv(i8* %173) #9
  br label %174

174:                                              ; preds = %161, %168, %172
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %163) #8
  br i1 %166, label %175, label %227

175:                                              ; preds = %174
  %176 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 1
  %177 = load i64, i64* %176, align 8
  %178 = icmp ugt i64 %177, %55
  br i1 %178, label %227, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 4
  %181 = load i32, i32* %180, align 8
  %182 = load i32, i32* %48, align 8
  %183 = icmp eq i32 %181, %182
  br i1 %183, label %184, label %227

184:                                              ; preds = %179
  %185 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 3
  %186 = call zeroext i1 @_ZNK15GrBackendFormateqERKS_(%class.GrBackendFormat* %185, %class.GrBackendFormat* nonnull dereferenceable(72) %5) #8
  br i1 %186, label %187, label %227

187:                                              ; preds = %184
  %188 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 2, i32 1, i32 0
  %189 = load i32, i32* %188, align 4
  %190 = trunc i64 %43 to i32
  %191 = icmp eq i32 %189, %190
  br i1 %191, label %192, label %227

192:                                              ; preds = %187
  %193 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 2, i32 1, i32 1
  %194 = load i32, i32* %193, align 4
  %195 = lshr i64 %43, 32
  %196 = trunc i64 %195 to i32
  %197 = icmp eq i32 %194, %196
  %198 = load i32, i32* %21, align 8
  %199 = icmp eq i32 %198, %40
  %200 = and i1 %197, %199
  br i1 %200, label %201, label %227

201:                                              ; preds = %192
  %202 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 5
  %203 = load i32, i32* %202, align 4
  %204 = icmp eq i32 %203, %154
  br i1 %204, label %205, label %227

205:                                              ; preds = %201
  %206 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %207 = load %class.SkColorSpace*, %class.SkColorSpace** %206, align 8
  %208 = call zeroext i1 @_ZN12SkColorSpace6EqualsEPKS_S1_(%class.SkColorSpace* %207, %class.SkColorSpace* %31) #8
  br i1 %208, label %209, label %227

209:                                              ; preds = %205
  %210 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 11
  %211 = load i8, i8* %210, align 1, !range !11
  %212 = icmp ne i8 %211, 0
  %213 = xor i1 %157, %212
  br i1 %213, label %227, label %214

214:                                              ; preds = %209
  %215 = load %class.SkGpuDevice*, %class.SkGpuDevice** %6, align 8
  %216 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 12, i32 0
  %217 = load i32, i32* %216, align 4
  %218 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %215, i64 0, i32 0, i32 0, i32 4, i32 0
  %219 = load i32, i32* %218, align 4
  %220 = icmp eq i32 %217, %219
  br i1 %220, label %221, label %227

221:                                              ; preds = %214
  %222 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %1, i64 0, i32 12, i32 1
  %223 = load i32, i32* %222, align 4
  %224 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %215, i64 0, i32 0, i32 0, i32 4, i32 1
  %225 = load i32, i32* %224, align 4
  %226 = icmp eq i32 %223, %225
  br label %227

227:                                              ; preds = %221, %214, %209, %175, %149, %205, %201, %192, %187, %184, %179, %174
  %228 = phi i1 [ false, %209 ], [ false, %205 ], [ false, %201 ], [ false, %192 ], [ false, %187 ], [ false, %184 ], [ false, %179 ], [ false, %175 ], [ false, %174 ], [ false, %149 ], [ false, %214 ], [ %226, %221 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %120) #8
  br label %229

229:                                              ; preds = %112, %115, %82, %62, %227
  %230 = phi i1 [ false, %112 ], [ false, %115 ], [ false, %82 ], [ false, %62 ], [ %228, %227 ]
  %231 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %47, align 8
  %232 = icmp eq %class.GrSurfaceProxy* %231, null
  br i1 %232, label %245, label %233

233:                                              ; preds = %229
  %234 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %231, i64 0, i32 1
  %235 = getelementptr inbounds %class.SkNVRefCnt.140, %class.SkNVRefCnt.140* %234, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %236 = atomicrmw add i32* %235, i32 -1 acq_rel
  %237 = icmp eq i32 %236, 1
  br i1 %237, label %238, label %245

238:                                              ; preds = %233
  %239 = getelementptr inbounds %class.SkNVRefCnt.140, %class.SkNVRefCnt.140* %234, i64 -2
  %240 = bitcast %class.SkNVRefCnt.140* %239 to %class.GrSurfaceProxy*
  %241 = bitcast %class.SkNVRefCnt.140* %239 to void (%class.GrSurfaceProxy*)***
  %242 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %241, align 8
  %243 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %242, i64 1
  %244 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %243, align 8
  call void %244(%class.GrSurfaceProxy* nonnull %240) #8
  br label %245

245:                                              ; preds = %59, %229, %233, %238
  %246 = phi i1 [ %230, %229 ], [ %230, %233 ], [ %230, %238 ], [ false, %59 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #8
  br label %247

247:                                              ; preds = %36, %245
  %248 = phi i1 [ %246, %245 ], [ false, %36 ]
  br i1 %32, label %255, label %249

249:                                              ; preds = %247
  %250 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %251 = atomicrmw add i32* %250, i32 -1 acq_rel
  %252 = icmp eq i32 %251, 1
  br i1 %252, label %253, label %255

253:                                              ; preds = %249
  %254 = bitcast %class.SkColorSpace* %31 to i8*
  call void @_ZdlPv(i8* %254) #9
  br label %255

255:                                              ; preds = %24, %20, %253, %249, %247, %2
  %256 = phi i1 [ false, %2 ], [ false, %20 ], [ false, %24 ], [ %248, %247 ], [ %248, %249 ], [ %248, %253 ]
  ret i1 %256
}

declare zeroext i1 @_ZNK15GrBackendFormateqERKS_(%class.GrBackendFormat*, %class.GrBackendFormat* dereferenceable(72)) local_unnamed_addr #1

declare zeroext i1 @_ZN12SkColorSpace6EqualsEPKS_S1_(%class.SkColorSpace*, %class.SkColorSpace*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13SkSurface_Gpu6onDrawE5sk_spIK21SkDeferredDisplayListE8SkIPoint(%class.SkSurface_Gpu*, %class.sk_sp.373* nocapture, i64) unnamed_addr #0 align 2 {
  %4 = alloca %class.GrSurfaceProxyView, align 8
  %5 = alloca %class.GrDirectContextPriv, align 8
  %6 = alloca %class.sk_sp.373, align 8
  %7 = alloca %class.sk_sp.393, align 8
  %8 = getelementptr inbounds %class.sk_sp.373, %class.sk_sp.373* %1, i64 0, i32 0
  %9 = load %class.SkDeferredDisplayList*, %class.SkDeferredDisplayList** %8, align 8
  %10 = icmp eq %class.SkDeferredDisplayList* %9, null
  br i1 %10, label %114, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %0, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %class.SkDeferredDisplayList, %class.SkDeferredDisplayList* %9, i64 0, i32 1
  %14 = tail call zeroext i1 @_ZNK9SkSurface12isCompatibleERK25SkSurfaceCharacterization(%class.SkSurface* %12, %class.SkSurfaceCharacterization* dereferenceable(136) %13) #8
  br i1 %14, label %15, label %114

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %0, i64 0, i32 1, i32 0
  %17 = load %class.SkGpuDevice*, %class.SkGpuDevice** %16, align 8
  %18 = bitcast %class.SkGpuDevice* %17 to %class.GrRecordingContext* (%class.SkGpuDevice*)***
  %19 = load %class.GrRecordingContext* (%class.SkGpuDevice*)**, %class.GrRecordingContext* (%class.SkGpuDevice*)*** %18, align 16
  %20 = getelementptr inbounds %class.GrRecordingContext* (%class.SkGpuDevice*)*, %class.GrRecordingContext* (%class.SkGpuDevice*)** %19, i64 8
  %21 = load %class.GrRecordingContext* (%class.SkGpuDevice*)*, %class.GrRecordingContext* (%class.SkGpuDevice*)** %20, align 8
  %22 = tail call %class.GrRecordingContext* %21(%class.SkGpuDevice* %17) #8
  %23 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %22, i64 0, i32 0, i32 0
  %24 = bitcast %class.GrRecordingContext* %22 to %class.GrDirectContext* (%class.GrContext_Base*)***
  %25 = load %class.GrDirectContext* (%class.GrContext_Base*)**, %class.GrDirectContext* (%class.GrContext_Base*)*** %24, align 8
  %26 = getelementptr inbounds %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %25, i64 3
  %27 = load %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %26, align 8
  %28 = tail call %class.GrDirectContext* %27(%class.GrContext_Base* %23) #8
  %29 = icmp eq %class.GrDirectContext* %28, null
  br i1 %29, label %114, label %30

30:                                               ; preds = %15
  %31 = bitcast %class.GrSurfaceProxyView* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #8
  %32 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %4, i64 0, i32 0, i32 0
  %33 = bitcast %class.GrSurfaceProxyView* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 16, i1 false)
  %34 = load %class.SkGpuDevice*, %class.SkGpuDevice** %16, align 8
  %35 = bitcast %class.SkGpuDevice* %34 to void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)***
  %36 = load void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)**, void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)*** %35, align 16
  %37 = getelementptr inbounds void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)*, void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)** %36, i64 61
  %38 = load void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)*, void (%class.GrSurfaceProxyView*, %class.SkGpuDevice*)** %37, align 8
  call void %38(%class.GrSurfaceProxyView* nonnull sret %4, %class.SkGpuDevice* %34) #8
  %39 = bitcast %class.GrDirectContextPriv* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #8
  %40 = getelementptr inbounds %class.GrDirectContextPriv, %class.GrDirectContextPriv* %5, i64 0, i32 0
  store %class.GrDirectContext* %28, %class.GrDirectContext** %40, align 8, !alias.scope !46
  %41 = bitcast %class.sk_sp.373* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %class.SkDeferredDisplayList* null, %class.SkDeferredDisplayList** %8, align 8
  %43 = bitcast %class.sk_sp.373* %6 to i64*
  store i64 %42, i64* %43, align 8
  %44 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %32, align 8, !noalias !49
  %45 = icmp eq %class.GrSurfaceProxy* %44, null
  br i1 %45, label %64, label %46

46:                                               ; preds = %30
  %47 = bitcast %class.GrSurfaceProxy* %44 to %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)***
  %48 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)**, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*** %47, align 8, !noalias !49
  %49 = getelementptr inbounds %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %48, i64 5
  %50 = load %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)*, %class.GrRenderTargetProxy* (%class.GrSurfaceProxy*)** %49, align 8, !noalias !49
  %51 = call %class.GrRenderTargetProxy* %50(%class.GrSurfaceProxy* nonnull %44) #8, !noalias !49
  %52 = icmp eq %class.GrRenderTargetProxy* %51, null
  br i1 %52, label %64, label %53

53:                                               ; preds = %46
  %54 = bitcast %class.GrRenderTargetProxy* %51 to i8**
  %55 = load i8*, i8** %54, align 8, !noalias !52
  %56 = getelementptr i8, i8* %55, i64 -24
  %57 = bitcast i8* %56 to i64*
  %58 = load i64, i64* %57, align 8, !noalias !52
  %59 = add i64 %58, 8
  %60 = bitcast %class.GrRenderTargetProxy* %51 to i8*
  %61 = getelementptr inbounds i8, i8* %60, i64 %59
  %62 = bitcast i8* %61 to i32*
  %63 = atomicrmw add i32* %62, i32 1 monotonic, !noalias !52
  br label %64

64:                                               ; preds = %30, %46, %53
  %65 = phi %class.GrRenderTargetProxy* [ null, %46 ], [ %51, %53 ], [ null, %30 ]
  %66 = getelementptr inbounds %class.sk_sp.393, %class.sk_sp.393* %7, i64 0, i32 0
  store %class.GrRenderTargetProxy* %65, %class.GrRenderTargetProxy** %66, align 8, !alias.scope !52
  call void @_ZN19GrDirectContextPriv13createDDLTaskE5sk_spIK21SkDeferredDisplayListES0_I19GrRenderTargetProxyE8SkIPoint(%class.GrDirectContextPriv* nonnull %5, %class.sk_sp.373* nonnull %6, %class.sk_sp.393* nonnull %7, i64 %2) #8
  %67 = load %class.GrRenderTargetProxy*, %class.GrRenderTargetProxy** %66, align 8
  %68 = icmp eq %class.GrRenderTargetProxy* %67, null
  br i1 %68, label %88, label %69

69:                                               ; preds = %64
  %70 = bitcast %class.GrRenderTargetProxy* %67 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr i8, i8* %71, i64 -24
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, 8
  %76 = bitcast %class.GrRenderTargetProxy* %67 to i8*
  %77 = getelementptr inbounds i8, i8* %76, i64 %75
  %78 = bitcast i8* %77 to i32*
  %79 = atomicrmw add i32* %78, i32 -1 acq_rel
  %80 = icmp eq i32 %79, 1
  br i1 %80, label %81, label %88

81:                                               ; preds = %69
  %82 = getelementptr inbounds i8, i8* %76, i64 %74
  %83 = bitcast i8* %82 to %class.GrSurfaceProxy*
  %84 = bitcast i8* %82 to void (%class.GrSurfaceProxy*)***
  %85 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %84, align 8
  %86 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %85, i64 1
  %87 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %86, align 8
  call void %87(%class.GrSurfaceProxy* nonnull %83) #8
  br label %88

88:                                               ; preds = %64, %69, %81
  %89 = getelementptr inbounds %class.sk_sp.373, %class.sk_sp.373* %6, i64 0, i32 0
  %90 = load %class.SkDeferredDisplayList*, %class.SkDeferredDisplayList** %89, align 8
  %91 = icmp eq %class.SkDeferredDisplayList* %90, null
  br i1 %91, label %98, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %class.SkDeferredDisplayList, %class.SkDeferredDisplayList* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = atomicrmw add i32* %93, i32 -1 acq_rel
  %95 = icmp eq i32 %94, 1
  br i1 %95, label %96, label %98

96:                                               ; preds = %92
  call void @_ZN21SkDeferredDisplayListD1Ev(%class.SkDeferredDisplayList* nonnull %90) #8
  %97 = bitcast %class.SkDeferredDisplayList* %90 to i8*
  call void @_ZdlPv(i8* %97) #9
  br label %98

98:                                               ; preds = %88, %92, %96
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #8
  %99 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %32, align 8
  %100 = icmp eq %class.GrSurfaceProxy* %99, null
  br i1 %100, label %113, label %101

101:                                              ; preds = %98
  %102 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %99, i64 0, i32 1
  %103 = getelementptr inbounds %class.SkNVRefCnt.140, %class.SkNVRefCnt.140* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = atomicrmw add i32* %103, i32 -1 acq_rel
  %105 = icmp eq i32 %104, 1
  br i1 %105, label %106, label %113

106:                                              ; preds = %101
  %107 = getelementptr inbounds %class.SkNVRefCnt.140, %class.SkNVRefCnt.140* %102, i64 -2
  %108 = bitcast %class.SkNVRefCnt.140* %107 to %class.GrSurfaceProxy*
  %109 = bitcast %class.SkNVRefCnt.140* %107 to void (%class.GrSurfaceProxy*)***
  %110 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %109, align 8
  %111 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %110, i64 1
  %112 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %111, align 8
  call void %112(%class.GrSurfaceProxy* nonnull %108) #8
  br label %113

113:                                              ; preds = %98, %101, %106
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #8
  br label %114

114:                                              ; preds = %3, %113, %15, %11
  %115 = phi i1 [ false, %11 ], [ false, %3 ], [ true, %113 ], [ false, %15 ]
  ret i1 %115
}

declare zeroext i1 @_ZNK9SkSurface12isCompatibleERK25SkSurfaceCharacterization(%class.SkSurface*, %class.SkSurfaceCharacterization* dereferenceable(136)) local_unnamed_addr #1

declare void @_ZN19GrDirectContextPriv13createDDLTaskE5sk_spIK21SkDeferredDisplayListES0_I19GrRenderTargetProxyE8SkIPoint(%class.GrDirectContextPriv*, %class.sk_sp.373*, %class.sk_sp.393*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkSurface16MakeRenderTargetEP18GrRecordingContextRK25SkSurfaceCharacterization10SkBudgeted(%class.sk_sp.307* noalias nocapture sret, %class.GrRecordingContext*, %class.SkSurfaceCharacterization* dereferenceable(136), i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.47, align 8
  %6 = icmp eq %class.GrRecordingContext* %1, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %2, i64 0, i32 2, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %7, %4
  %12 = getelementptr inbounds %class.sk_sp.307, %class.sk_sp.307* %0, i64 0, i32 0
  store %class.SkSurface* null, %class.SkSurface** %12, align 8
  br label %71

13:                                               ; preds = %7
  %14 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %2, i64 0, i32 8
  %15 = load i8, i8* %14, align 2, !range !11
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.sk_sp.307, %class.sk_sp.307* %0, i64 0, i32 0
  store %class.SkSurface* null, %class.SkSurface** %18, align 8
  br label %71

19:                                               ; preds = %13
  %20 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %2, i64 0, i32 10
  %21 = load i8, i8* %20, align 4, !range !11
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.sk_sp.307, %class.sk_sp.307* %0, i64 0, i32 0
  store %class.SkSurface* null, %class.SkSurface** %24, align 8
  br label %71

25:                                               ; preds = %19
  %26 = bitcast %class.sk_sp.47* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #8
  %27 = getelementptr inbounds %class.sk_sp.47, %class.sk_sp.47* %5, i64 0, i32 0
  store %class.SkGpuDevice* inttoptr (i64 -6148914691236517206 to %class.SkGpuDevice*), %class.SkGpuDevice** %27, align 8
  %28 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %2, i64 0, i32 2
  %29 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %2, i64 0, i32 5
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %2, i64 0, i32 7
  %32 = load i8, i8* %31, align 1, !range !11
  %33 = icmp ne i8 %32, 0
  %34 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %2, i64 0, i32 11
  %35 = load i8, i8* %34, align 1, !range !11
  %36 = icmp ne i8 %35, 0
  %37 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %2, i64 0, i32 4
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %class.SkSurfaceCharacterization, %class.SkSurfaceCharacterization* %2, i64 0, i32 12
  call void @_ZN11SkGpuDevice4MakeEP18GrRecordingContext10SkBudgetedRK11SkImageInfo12SkBackingFiti11GrMipmapped11GrProtected15GrSurfaceOriginRK14SkSurfacePropsN15SkBaseGpuDevice12InitContentsE(%class.sk_sp.47* nonnull sret %5, %class.GrRecordingContext* nonnull %1, i1 zeroext %3, %struct.SkImageInfo* dereferenceable(24) %28, i32 1, i32 %30, i1 zeroext %33, i1 zeroext %36, i32 %38, %class.SkSurfaceProps* dereferenceable(8) %39, i32 0) #8
  %40 = load %class.SkGpuDevice*, %class.SkGpuDevice** %27, align 8
  %41 = icmp eq %class.SkGpuDevice* %40, null
  br i1 %41, label %42, label %44

42:                                               ; preds = %25
  %43 = getelementptr inbounds %class.sk_sp.307, %class.sk_sp.307* %0, i64 0, i32 0
  store %class.SkSurface* null, %class.SkSurface** %43, align 8
  br label %70

44:                                               ; preds = %25
  %45 = ptrtoint %class.SkGpuDevice* %40 to i64
  %46 = call i8* @_Znwm(i64 56) #9, !noalias !55
  store %class.SkGpuDevice* null, %class.SkGpuDevice** %27, align 8, !noalias !55
  %47 = bitcast i8* %46 to %class.SkSurface_Base*
  %48 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %40, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %49 = load i32, i32* %48, align 4, !noalias !55
  %50 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %40, i64 0, i32 0, i32 0, i32 3, i32 1, i32 1
  %51 = load i32, i32* %50, align 4, !noalias !55
  %52 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %40, i64 0, i32 0, i32 0, i32 4
  call void @_ZN14SkSurface_BaseC2EiiPK14SkSurfaceProps(%class.SkSurface_Base* nonnull %47, i32 %49, i32 %51, %class.SkSurfaceProps* %52) #8, !noalias !55
  %53 = bitcast i8* %46 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTV13SkSurface_Gpu, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8, !noalias !55
  %54 = getelementptr inbounds i8, i8* %46, i64 48
  %55 = bitcast i8* %54 to i64*
  store i64 %45, i64* %55, align 8, !noalias !55
  %56 = ptrtoint i8* %46 to i64
  %57 = bitcast %class.sk_sp.307* %0 to i64*
  store i64 %56, i64* %57, align 8
  %58 = load %class.SkGpuDevice*, %class.SkGpuDevice** %27, align 8
  %59 = icmp eq %class.SkGpuDevice* %58, null
  br i1 %59, label %70, label %60

60:                                               ; preds = %44
  %61 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 -1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = bitcast %class.SkGpuDevice* %58 to %class.SkRefCntBase*
  %66 = bitcast %class.SkGpuDevice* %58 to void (%class.SkRefCntBase*)***
  %67 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %66, align 8
  %68 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %67, i64 2
  %69 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %68, align 8
  call void %69(%class.SkRefCntBase* nonnull %65) #8
  br label %70

70:                                               ; preds = %42, %44, %60, %64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #8
  br label %71

71:                                               ; preds = %70, %23, %17, %11
  ret void
}

declare void @_ZN11SkGpuDevice4MakeEP18GrRecordingContext10SkBudgetedRK11SkImageInfo12SkBackingFiti11GrMipmapped11GrProtected15GrSurfaceOriginRK14SkSurfacePropsN15SkBaseGpuDevice12InitContentsE(%class.sk_sp.47* sret, %class.GrRecordingContext*, i1 zeroext, %struct.SkImageInfo* dereferenceable(24), i32, i32, i1 zeroext, i1 zeroext, i32, %class.SkSurfaceProps* dereferenceable(8), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkSurface22MakeFromBackendTextureEP18GrRecordingContextRK16GrBackendTexture15GrSurfaceOrigini11SkColorType5sk_spI12SkColorSpaceEPK14SkSurfacePropsPFvPvESD_(%class.sk_sp.307* noalias nocapture sret, %class.GrRecordingContext*, %class.GrBackendTexture* dereferenceable(176), i32, i32, i32, %class.sk_sp.2* nocapture, %class.SkSurfaceProps*, void (i8*)*, i8*) local_unnamed_addr #0 align 2 {
  %11 = alloca %class.GrBackendFormat, align 8
  %12 = alloca %class.GrBackendFormat, align 8
  %13 = alloca %class.sk_sp.396, align 8
  %14 = alloca %class.sk_sp.144, align 8
  %15 = alloca %class.sk_sp.47, align 8
  %16 = alloca %class.sk_sp.139, align 8
  %17 = alloca %class.sk_sp.2, align 8
  %18 = alloca %class.SkSurfaceProps, align 4
  %19 = icmp eq void (i8*)* %8, null
  br i1 %19, label %28, label %20

20:                                               ; preds = %10
  %21 = tail call i8* @_Znwm(i64 24) #9, !noalias !58
  %22 = bitcast i8* %21 to i32*
  store i32 1, i32* %22, align 4, !noalias !58
  %23 = getelementptr inbounds i8, i8* %21, i64 8
  %24 = bitcast i8* %23 to void (i8*)**
  store void (i8*)* %8, void (i8*)** %24, align 8, !noalias !58
  %25 = getelementptr inbounds i8, i8* %21, i64 16
  %26 = bitcast i8* %25 to i8**
  store i8* %9, i8** %26, align 8, !noalias !58
  %27 = ptrtoint i8* %21 to i64
  br label %28

28:                                               ; preds = %10, %20
  %29 = phi i64 [ %27, %20 ], [ 0, %10 ]
  %30 = icmp eq %class.GrRecordingContext* %1, null
  br i1 %30, label %189, label %31

31:                                               ; preds = %28
  %32 = icmp sgt i32 %4, 1
  %33 = select i1 %32, i32 %4, i32 1
  %34 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %1, i64 0, i32 0, i32 0
  %35 = tail call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %34) #8
  %36 = bitcast %class.GrBackendFormat* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %36) #8
  call void @_ZNK16GrBackendTexture16getBackendFormatEv(%class.GrBackendFormat* nonnull sret %12, %class.GrBackendTexture* %2) #8
  %37 = call i32 @_Z33SkColorTypeAndFormatToGrColorTypePK6GrCaps11SkColorTypeRK15GrBackendFormat(%class.GrCaps* %35, i32 %5, %class.GrBackendFormat* nonnull dereferenceable(72) %12) #8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %36) #8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %189, label %39

39:                                               ; preds = %31
  %40 = call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %34) #8
  %41 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %2, i64 0, i32 0
  %42 = load i8, i8* %41, align 8, !range !11
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %39
  %45 = bitcast %class.GrBackendFormat* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %45) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 72, i1 false) #8
  call void @_ZNK16GrBackendTexture16getBackendFormatEv(%class.GrBackendFormat* nonnull sret %11, %class.GrBackendTexture* %2) #8
  %46 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %11, i64 0, i32 1
  %47 = load i8, i8* %46, align 4, !range !11
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %57, label %49

49:                                               ; preds = %44
  %50 = call zeroext i1 @_ZNK6GrCaps31areColorTypeAndFormatCompatibleE11GrColorTypeRK15GrBackendFormat(%class.GrCaps* %40, i32 %37, %class.GrBackendFormat* nonnull dereferenceable(72) %11) #8
  br i1 %50, label %51, label %57

51:                                               ; preds = %49
  %52 = bitcast %class.GrCaps* %40 to i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)***
  %53 = load i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)**, i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)*** %52, align 8
  %54 = getelementptr inbounds i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)*, i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)** %53, i64 7
  %55 = load i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)*, i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)** %54, align 8
  %56 = call zeroext i1 %55(%class.GrCaps* %40, i32 %37, %class.GrBackendFormat* nonnull dereferenceable(72) %11, i32 %33) #8
  br i1 %56, label %58, label %57

57:                                               ; preds = %44, %49, %51
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %45) #8
  br label %189

58:                                               ; preds = %51
  %59 = bitcast %class.GrCaps* %40 to i1 (%class.GrCaps*, %class.GrBackendFormat*)***
  %60 = load i1 (%class.GrCaps*, %class.GrBackendFormat*)**, i1 (%class.GrCaps*, %class.GrBackendFormat*)*** %59, align 8
  %61 = getelementptr inbounds i1 (%class.GrCaps*, %class.GrBackendFormat*)*, i1 (%class.GrCaps*, %class.GrBackendFormat*)** %60, i64 4
  %62 = load i1 (%class.GrCaps*, %class.GrBackendFormat*)*, i1 (%class.GrCaps*, %class.GrBackendFormat*)** %61, align 8
  %63 = call zeroext i1 %62(%class.GrCaps* %40, %class.GrBackendFormat* nonnull dereferenceable(72) %11) #8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %45) #8
  br i1 %63, label %64, label %189

64:                                               ; preds = %58
  %65 = bitcast %class.sk_sp.396* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #8
  %66 = getelementptr inbounds %class.sk_sp.396, %class.sk_sp.396* %13, i64 0, i32 0
  store %class.GrTextureProxy* inttoptr (i64 -6148914691236517206 to %class.GrTextureProxy*), %class.GrTextureProxy** %66, align 8
  %67 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %68 = load %class.GrProxyProvider*, %class.GrProxyProvider** %67, align 8
  %69 = bitcast %class.sk_sp.144* %14 to i64*
  store i64 %29, i64* %69, align 8
  call void @_ZN15GrProxyProvider28wrapRenderableBackendTextureERK16GrBackendTexturei15GrWrapOwnership15GrWrapCacheable5sk_spI18GrRefCntedCallbackE(%class.sk_sp.396* nonnull sret %13, %class.GrProxyProvider* %68, %class.GrBackendTexture* dereferenceable(176) %2, i32 %33, i32 0, i1 zeroext false, %class.sk_sp.144* nonnull %14) #8
  %70 = getelementptr inbounds %class.sk_sp.144, %class.sk_sp.144* %14, i64 0, i32 0
  %71 = load %class.GrRefCntedCallback*, %class.GrRefCntedCallback** %70, align 8
  %72 = icmp eq %class.GrRefCntedCallback* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %64
  %74 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %71, i64 0, i32 0
  %75 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw add i32* %75, i32 -1 acq_rel
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %86

78:                                               ; preds = %73
  %79 = getelementptr inbounds %class.SkNVRefCnt.145, %class.SkNVRefCnt.145* %74, i64 2
  %80 = bitcast %class.SkNVRefCnt.145* %79 to void (i8*)**
  %81 = load void (i8*)*, void (i8*)** %80, align 8
  %82 = getelementptr inbounds %class.SkNVRefCnt.145, %class.SkNVRefCnt.145* %74, i64 4
  %83 = bitcast %class.SkNVRefCnt.145* %82 to i8**
  %84 = load i8*, i8** %83, align 8
  call void %81(i8* %84) #8
  %85 = bitcast %class.GrRefCntedCallback* %71 to i8*
  call void @_ZdlPv(i8* %85) #9
  br label %86

86:                                               ; preds = %64, %73, %78
  %87 = load %class.GrTextureProxy*, %class.GrTextureProxy** %66, align 8
  %88 = icmp eq %class.GrTextureProxy* %87, null
  br i1 %88, label %89, label %91

89:                                               ; preds = %86
  %90 = getelementptr inbounds %class.sk_sp.307, %class.sk_sp.307* %0, i64 0, i32 0
  store %class.SkSurface* null, %class.SkSurface** %90, align 8
  br label %188

91:                                               ; preds = %86
  %92 = bitcast %class.sk_sp.47* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #8
  %93 = getelementptr inbounds %class.sk_sp.47, %class.sk_sp.47* %15, i64 0, i32 0
  store %class.SkGpuDevice* inttoptr (i64 -6148914691236517206 to %class.SkGpuDevice*), %class.SkGpuDevice** %93, align 8
  %94 = getelementptr inbounds %class.sk_sp.139, %class.sk_sp.139* %16, i64 0, i32 0
  store %class.GrTextureProxy* null, %class.GrTextureProxy** %66, align 8
  %95 = bitcast %class.GrTextureProxy* %87 to i8**
  %96 = load i8*, i8** %95, align 8
  %97 = getelementptr i8, i8* %96, i64 -24
  %98 = bitcast i8* %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %class.GrTextureProxy* %87 to i8*
  %101 = getelementptr inbounds i8, i8* %100, i64 %99
  %102 = bitcast %class.sk_sp.139* %16 to i8**
  store i8* %101, i8** %102, align 8
  %103 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %6, i64 0, i32 0
  %104 = bitcast %class.sk_sp.2* %6 to i64*
  %105 = load i64, i64* %104, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %103, align 8
  %106 = bitcast %class.sk_sp.2* %17 to i64*
  store i64 %105, i64* %106, align 8
  %107 = bitcast %class.SkSurfaceProps* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #8
  %108 = icmp eq %class.SkSurfaceProps* %7, null
  br i1 %108, label %110, label %109

109:                                              ; preds = %91
  call void @_ZN14SkSurfacePropsC1ERKS_(%class.SkSurfaceProps* nonnull %18, %class.SkSurfaceProps* nonnull dereferenceable(8) %7) #8
  br label %111

110:                                              ; preds = %91
  call void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps* nonnull %18) #8
  br label %111

111:                                              ; preds = %109, %110
  call void @_ZN11SkGpuDevice4MakeEP18GrRecordingContext11GrColorType5sk_spI14GrSurfaceProxyES3_I12SkColorSpaceE15GrSurfaceOriginRK14SkSurfacePropsN15SkBaseGpuDevice12InitContentsE(%class.sk_sp.47* nonnull sret %15, %class.GrRecordingContext* nonnull %1, i32 %37, %class.sk_sp.139* nonnull %16, %class.sk_sp.2* nonnull %17, i32 %3, %class.SkSurfaceProps* nonnull dereferenceable(8) %18, i32 1) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #8
  %112 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %17, i64 0, i32 0
  %113 = load %class.SkColorSpace*, %class.SkColorSpace** %112, align 8
  %114 = icmp eq %class.SkColorSpace* %113, null
  br i1 %114, label %121, label %115

115:                                              ; preds = %111
  %116 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = atomicrmw add i32* %116, i32 -1 acq_rel
  %118 = icmp eq i32 %117, 1
  br i1 %118, label %119, label %121

119:                                              ; preds = %115
  %120 = bitcast %class.SkColorSpace* %113 to i8*
  call void @_ZdlPv(i8* %120) #9
  br label %121

121:                                              ; preds = %111, %115, %119
  %122 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %94, align 8
  %123 = icmp eq %class.GrSurfaceProxy* %122, null
  br i1 %123, label %136, label %124

124:                                              ; preds = %121
  %125 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %122, i64 0, i32 1
  %126 = getelementptr inbounds %class.SkNVRefCnt.140, %class.SkNVRefCnt.140* %125, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = atomicrmw add i32* %126, i32 -1 acq_rel
  %128 = icmp eq i32 %127, 1
  br i1 %128, label %129, label %136

129:                                              ; preds = %124
  %130 = getelementptr inbounds %class.SkNVRefCnt.140, %class.SkNVRefCnt.140* %125, i64 -2
  %131 = bitcast %class.SkNVRefCnt.140* %130 to %class.GrSurfaceProxy*
  %132 = bitcast %class.SkNVRefCnt.140* %130 to void (%class.GrSurfaceProxy*)***
  %133 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %132, align 8
  %134 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %133, i64 1
  %135 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %134, align 8
  call void %135(%class.GrSurfaceProxy* nonnull %131) #8
  br label %136

136:                                              ; preds = %121, %124, %129
  %137 = load %class.SkGpuDevice*, %class.SkGpuDevice** %93, align 8
  %138 = icmp eq %class.SkGpuDevice* %137, null
  br i1 %138, label %139, label %141

139:                                              ; preds = %136
  %140 = getelementptr inbounds %class.sk_sp.307, %class.sk_sp.307* %0, i64 0, i32 0
  store %class.SkSurface* null, %class.SkSurface** %140, align 8
  br label %166

141:                                              ; preds = %136
  %142 = ptrtoint %class.SkGpuDevice* %137 to i64
  %143 = call i8* @_Znwm(i64 56) #9, !noalias !61
  store %class.SkGpuDevice* null, %class.SkGpuDevice** %93, align 8, !noalias !61
  %144 = bitcast i8* %143 to %class.SkSurface_Base*
  %145 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %137, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %146 = load i32, i32* %145, align 4, !noalias !61
  %147 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %137, i64 0, i32 0, i32 0, i32 3, i32 1, i32 1
  %148 = load i32, i32* %147, align 4, !noalias !61
  %149 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %137, i64 0, i32 0, i32 0, i32 4
  call void @_ZN14SkSurface_BaseC2EiiPK14SkSurfaceProps(%class.SkSurface_Base* nonnull %144, i32 %146, i32 %148, %class.SkSurfaceProps* %149) #8, !noalias !61
  %150 = bitcast i8* %143 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTV13SkSurface_Gpu, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %150, align 8, !noalias !61
  %151 = getelementptr inbounds i8, i8* %143, i64 48
  %152 = bitcast i8* %151 to i64*
  store i64 %142, i64* %152, align 8, !noalias !61
  %153 = bitcast %class.sk_sp.307* %0 to i8**
  store i8* %143, i8** %153, align 8
  %154 = load %class.SkGpuDevice*, %class.SkGpuDevice** %93, align 8
  %155 = icmp eq %class.SkGpuDevice* %154, null
  br i1 %155, label %166, label %156

156:                                              ; preds = %141
  %157 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %154, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = atomicrmw add i32* %157, i32 -1 acq_rel
  %159 = icmp eq i32 %158, 1
  br i1 %159, label %160, label %166

160:                                              ; preds = %156
  %161 = bitcast %class.SkGpuDevice* %154 to %class.SkRefCntBase*
  %162 = bitcast %class.SkGpuDevice* %154 to void (%class.SkRefCntBase*)***
  %163 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %162, align 8
  %164 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %163, i64 2
  %165 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %164, align 8
  call void %165(%class.SkRefCntBase* nonnull %161) #8
  br label %166

166:                                              ; preds = %160, %156, %141, %139
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #8
  %167 = load %class.GrTextureProxy*, %class.GrTextureProxy** %66, align 8
  %168 = icmp eq %class.GrTextureProxy* %167, null
  br i1 %168, label %188, label %169

169:                                              ; preds = %166
  %170 = bitcast %class.GrTextureProxy* %167 to i8**
  %171 = load i8*, i8** %170, align 8
  %172 = getelementptr i8, i8* %171, i64 -24
  %173 = bitcast i8* %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = add i64 %174, 8
  %176 = bitcast %class.GrTextureProxy* %167 to i8*
  %177 = getelementptr inbounds i8, i8* %176, i64 %175
  %178 = bitcast i8* %177 to i32*
  %179 = atomicrmw add i32* %178, i32 -1 acq_rel
  %180 = icmp eq i32 %179, 1
  br i1 %180, label %181, label %188

181:                                              ; preds = %169
  %182 = getelementptr inbounds i8, i8* %176, i64 %174
  %183 = bitcast i8* %182 to %class.GrSurfaceProxy*
  %184 = bitcast i8* %182 to void (%class.GrSurfaceProxy*)***
  %185 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %184, align 8
  %186 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %185, i64 1
  %187 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %186, align 8
  call void %187(%class.GrSurfaceProxy* nonnull %183) #8
  br label %188

188:                                              ; preds = %181, %169, %166, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #8
  br label %206

189:                                              ; preds = %58, %57, %39, %31, %28
  %190 = getelementptr inbounds %class.sk_sp.307, %class.sk_sp.307* %0, i64 0, i32 0
  store %class.SkSurface* null, %class.SkSurface** %190, align 8
  %191 = inttoptr i64 %29 to %class.GrRefCntedCallback*
  %192 = icmp eq i64 %29, 0
  br i1 %192, label %206, label %193

193:                                              ; preds = %189
  %194 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %191, i64 0, i32 0
  %195 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %191, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = atomicrmw add i32* %195, i32 -1 acq_rel
  %197 = icmp eq i32 %196, 1
  br i1 %197, label %198, label %206

198:                                              ; preds = %193
  %199 = getelementptr inbounds %class.SkNVRefCnt.145, %class.SkNVRefCnt.145* %194, i64 2
  %200 = bitcast %class.SkNVRefCnt.145* %199 to void (i8*)**
  %201 = load void (i8*)*, void (i8*)** %200, align 8
  %202 = getelementptr inbounds %class.SkNVRefCnt.145, %class.SkNVRefCnt.145* %194, i64 4
  %203 = bitcast %class.SkNVRefCnt.145* %202 to i8**
  %204 = load i8*, i8** %203, align 8
  call void %201(i8* %204) #8
  %205 = inttoptr i64 %29 to i8*
  call void @_ZdlPv(i8* %205) #9
  br label %206

206:                                              ; preds = %188, %189, %193, %198
  ret void
}

declare i32 @_Z33SkColorTypeAndFormatToGrColorTypePK6GrCaps11SkColorTypeRK15GrBackendFormat(%class.GrCaps*, i32, %class.GrBackendFormat* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZNK16GrBackendTexture16getBackendFormatEv(%class.GrBackendFormat* sret, %class.GrBackendTexture*) local_unnamed_addr #1

declare void @_ZN15GrProxyProvider28wrapRenderableBackendTextureERK16GrBackendTexturei15GrWrapOwnership15GrWrapCacheable5sk_spI18GrRefCntedCallbackE(%class.sk_sp.396* sret, %class.GrProxyProvider*, %class.GrBackendTexture* dereferenceable(176), i32, i32, i1 zeroext, %class.sk_sp.144*) local_unnamed_addr #1

declare void @_ZN11SkGpuDevice4MakeEP18GrRecordingContext11GrColorType5sk_spI14GrSurfaceProxyES3_I12SkColorSpaceE15GrSurfaceOriginRK14SkSurfacePropsN15SkBaseGpuDevice12InitContentsE(%class.sk_sp.47* sret, %class.GrRecordingContext*, i32, %class.sk_sp.139*, %class.sk_sp.2*, i32, %class.SkSurfaceProps* dereferenceable(8), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13SkSurface_Gpu23onReplaceBackendTextureERK16GrBackendTexture15GrSurfaceOriginN9SkSurface17ContentChangeModeEPFvPvES6_(%class.SkSurface_Gpu*, %class.GrBackendTexture* dereferenceable(176), i32, i32, void (i8*)*, i8*) unnamed_addr #0 align 2 {
  %7 = alloca %class.GrBackendFormat, align 8
  %8 = alloca %class.GrBackendFormat, align 8
  %9 = alloca %class.GrBackendFormat, align 8
  %10 = alloca %class.GrBackendTexture, align 8
  %11 = alloca %struct.SkImageInfo, align 8
  %12 = alloca %class.sk_sp.2, align 8
  %13 = alloca %class.sk_sp.144, align 8
  %14 = icmp eq void (i8*)* %4, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %6
  %16 = tail call i8* @_Znwm(i64 24) #9, !noalias !64
  %17 = bitcast i8* %16 to i32*
  store i32 1, i32* %17, align 4, !noalias !64
  %18 = getelementptr inbounds i8, i8* %16, i64 8
  %19 = bitcast i8* %18 to void (i8*)**
  store void (i8*)* %4, void (i8*)** %19, align 8, !noalias !64
  %20 = getelementptr inbounds i8, i8* %16, i64 16
  %21 = bitcast i8* %20 to i8**
  store i8* %5, i8** %21, align 8, !noalias !64
  %22 = ptrtoint i8* %16 to i64
  br label %23

23:                                               ; preds = %6, %15
  %24 = phi i64 [ %22, %15 ], [ 0, %6 ]
  %25 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %0, i64 0, i32 1, i32 0
  %26 = load %class.SkGpuDevice*, %class.SkGpuDevice** %25, align 8
  %27 = bitcast %class.SkGpuDevice* %26 to %class.GrRecordingContext* (%class.SkGpuDevice*)***
  %28 = load %class.GrRecordingContext* (%class.SkGpuDevice*)**, %class.GrRecordingContext* (%class.SkGpuDevice*)*** %27, align 16
  %29 = getelementptr inbounds %class.GrRecordingContext* (%class.SkGpuDevice*)*, %class.GrRecordingContext* (%class.SkGpuDevice*)** %28, i64 8
  %30 = load %class.GrRecordingContext* (%class.SkGpuDevice*)*, %class.GrRecordingContext* (%class.SkGpuDevice*)** %29, align 8
  %31 = tail call %class.GrRecordingContext* %30(%class.SkGpuDevice* %26) #8
  %32 = bitcast %class.GrRecordingContext* %31 to i1 (%class.GrRecordingContext*)***
  %33 = load i1 (%class.GrRecordingContext*)**, i1 (%class.GrRecordingContext*)*** %32, align 8
  %34 = getelementptr inbounds i1 (%class.GrRecordingContext*)*, i1 (%class.GrRecordingContext*)** %33, i64 8
  %35 = load i1 (%class.GrRecordingContext*)*, i1 (%class.GrRecordingContext*)** %34, align 8
  %36 = tail call zeroext i1 %35(%class.GrRecordingContext* %31) #8
  br i1 %36, label %254, label %37

37:                                               ; preds = %23
  %38 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 0
  %39 = load i8, i8* %38, align 8, !range !11
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %254, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %0, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %0, i64 0, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %43, %46
  br i1 %47, label %48, label %254

48:                                               ; preds = %41
  %49 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 2
  %50 = load i32, i32* %49, align 8
  %51 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %0, i64 0, i32 0, i32 0, i32 3
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %50, %52
  br i1 %53, label %54, label %254

54:                                               ; preds = %48
  %55 = load %class.SkGpuDevice*, %class.SkGpuDevice** %25, align 8
  %56 = bitcast %class.SkGpuDevice* %55 to %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)***
  %57 = load %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)**, %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)*** %56, align 16
  %58 = getelementptr inbounds %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)*, %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)** %57, i64 9
  %59 = load %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)*, %class.GrSurfaceDrawContext* (%class.SkGpuDevice*)** %58, align 8
  %60 = tail call %class.GrSurfaceDrawContext* %59(%class.SkGpuDevice* %55) #8
  %61 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %60, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %62 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %61, align 8
  %63 = icmp eq %class.GrSurfaceProxy* %62, null
  br i1 %63, label %254, label %64

64:                                               ; preds = %54
  %65 = bitcast %class.GrSurfaceProxy* %62 to %class.GrTextureProxy* (%class.GrSurfaceProxy*)***
  %66 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)**, %class.GrTextureProxy* (%class.GrSurfaceProxy*)*** %65, align 8
  %67 = getelementptr inbounds %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %66, i64 3
  %68 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %67, align 8
  %69 = tail call %class.GrTextureProxy* %68(%class.GrSurfaceProxy* nonnull %62) #8
  %70 = icmp eq %class.GrTextureProxy* %69, null
  br i1 %70, label %254, label %71

71:                                               ; preds = %64
  %72 = bitcast %class.GrTextureProxy* %69 to i8**
  %73 = load i8*, i8** %72, align 8, !noalias !67
  %74 = getelementptr i8, i8* %73, i64 -24
  %75 = bitcast i8* %74 to i64*
  %76 = load i64, i64* %75, align 8, !noalias !67
  %77 = add i64 %76, 8
  %78 = bitcast %class.GrTextureProxy* %69 to i8*
  %79 = getelementptr inbounds i8, i8* %78, i64 %77
  %80 = bitcast i8* %79 to i32*
  %81 = atomicrmw add i32* %80, i32 1 monotonic, !noalias !67
  %82 = load i8*, i8** %72, align 8
  %83 = getelementptr i8, i8* %82, i64 -24
  %84 = bitcast i8* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = getelementptr inbounds i8, i8* %78, i64 %85
  %87 = getelementptr inbounds i8, i8* %86, i64 16
  %88 = bitcast i8* %87 to %class.GrSurface**
  %89 = load %class.GrSurface*, %class.GrSurface** %88, align 8
  %90 = icmp eq %class.GrSurface* %89, null
  br i1 %90, label %235, label %91

91:                                               ; preds = %71
  %92 = bitcast %class.GrSurface* %89 to %class.GrTexture* (%class.GrSurface*)***
  %93 = load %class.GrTexture* (%class.GrSurface*)**, %class.GrTexture* (%class.GrSurface*)*** %92, align 8
  %94 = getelementptr inbounds %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %93, i64 10
  %95 = load %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %94, align 8
  %96 = tail call %class.GrTexture* %95(%class.GrSurface* nonnull %89) #8
  %97 = icmp eq %class.GrTexture* %96, null
  br i1 %97, label %235, label %98

98:                                               ; preds = %91
  %99 = bitcast %class.GrTexture* %96 to i8**
  %100 = load i8*, i8** %99, align 8
  %101 = getelementptr i8, i8* %100, i64 -24
  %102 = bitcast i8* %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %class.GrTexture* %96 to i8*
  %105 = getelementptr inbounds i8, i8* %104, i64 %103
  %106 = getelementptr inbounds i8, i8* %105, i64 145
  %107 = load i8, i8* %106, align 1, !range !11
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %235, label %109

109:                                              ; preds = %98
  %110 = bitcast %class.GrBackendFormat* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %110) #8
  %111 = bitcast i8* %105 to %class.GrSurface*
  %112 = bitcast i8* %105 to void (%class.GrBackendFormat*, %class.GrSurface*)***
  %113 = load void (%class.GrBackendFormat*, %class.GrSurface*)**, void (%class.GrBackendFormat*, %class.GrSurface*)*** %112, align 8
  %114 = getelementptr inbounds void (%class.GrBackendFormat*, %class.GrSurface*)*, void (%class.GrBackendFormat*, %class.GrSurface*)** %113, i64 9
  %115 = load void (%class.GrBackendFormat*, %class.GrSurface*)*, void (%class.GrBackendFormat*, %class.GrSurface*)** %114, align 8
  call void %115(%class.GrBackendFormat* nonnull sret %8, %class.GrSurface* %111) #8
  %116 = bitcast %class.GrBackendFormat* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %116) #8
  call void @_ZNK16GrBackendTexture16getBackendFormatEv(%class.GrBackendFormat* nonnull sret %9, %class.GrBackendTexture* %1) #8
  %117 = call zeroext i1 @_ZNK15GrBackendFormateqERKS_(%class.GrBackendFormat* nonnull %8, %class.GrBackendFormat* nonnull dereferenceable(72) %9) #8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %116) #8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %110) #8
  br i1 %117, label %118, label %235

118:                                              ; preds = %109
  %119 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %119) #8
  %120 = bitcast %class.GrTexture* %96 to void (%class.GrBackendTexture*, %class.GrTexture*)***
  %121 = load void (%class.GrBackendTexture*, %class.GrTexture*)**, void (%class.GrBackendTexture*, %class.GrTexture*)*** %120, align 8
  %122 = getelementptr inbounds void (%class.GrBackendTexture*, %class.GrTexture*)*, void (%class.GrBackendTexture*, %class.GrTexture*)** %121, i64 2
  %123 = load void (%class.GrBackendTexture*, %class.GrTexture*)*, void (%class.GrBackendTexture*, %class.GrTexture*)** %122, align 8
  call void %123(%class.GrBackendTexture* nonnull sret %10, %class.GrTexture* nonnull %96) #8
  %124 = call zeroext i1 @_ZN16GrBackendTexture13isSameTextureERKS_(%class.GrBackendTexture* nonnull %10, %class.GrBackendTexture* dereferenceable(176) %1) #8
  call void @_ZN16GrBackendTextureD1Ev(%class.GrBackendTexture* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %119) #8
  br i1 %124, label %235, label %125

125:                                              ; preds = %118
  %126 = load i8*, i8** %99, align 8
  %127 = getelementptr i8, i8* %126, i64 -24
  %128 = bitcast i8* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = getelementptr inbounds i8, i8* %104, i64 %129
  %131 = bitcast i8* %130 to %class.GrSurface*
  %132 = bitcast i8* %130 to %class.GrRenderTarget* (%class.GrSurface*)***
  %133 = load %class.GrRenderTarget* (%class.GrSurface*)**, %class.GrRenderTarget* (%class.GrSurface*)*** %132, align 8
  %134 = getelementptr inbounds %class.GrRenderTarget* (%class.GrSurface*)*, %class.GrRenderTarget* (%class.GrSurface*)** %133, i64 12
  %135 = load %class.GrRenderTarget* (%class.GrSurface*)*, %class.GrRenderTarget* (%class.GrSurface*)** %134, align 8
  %136 = call %class.GrRenderTarget* %135(%class.GrSurface* %131) #8
  %137 = getelementptr inbounds %class.GrRenderTarget, %class.GrRenderTarget* %136, i64 0, i32 3
  %138 = load i32, i32* %137, align 8
  %139 = bitcast %struct.SkImageInfo* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %139) #8
  %140 = call %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface* %44) #8
  call void @_ZNK8SkCanvas9imageInfoEv(%struct.SkImageInfo* nonnull sret %11, %class.SkCanvas* %140) #8
  %141 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %11, i64 0, i32 0, i32 1
  %142 = load i32, i32* %141, align 8
  %143 = icmp ult i32 %142, 21
  br i1 %143, label %145, label %144

144:                                              ; preds = %125
  call void @llvm.trap() #8
  unreachable

145:                                              ; preds = %125
  %146 = sext i32 %142 to i64
  %147 = getelementptr inbounds [21 x i32], [21 x i32]* @switch.table._ZN13SkSurface_Gpu23onReplaceBackendTextureERK16GrBackendTexture15GrSurfaceOriginN9SkSurface17ContentChangeModeEPFvPvES6_, i64 0, i64 %146
  %148 = load i32, i32* %147, align 4
  %149 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %11, i64 0, i32 0, i32 0, i32 0
  %150 = load %class.SkColorSpace*, %class.SkColorSpace** %149, align 8
  %151 = icmp eq %class.SkColorSpace* %150, null
  br i1 %151, label %158, label %152

152:                                              ; preds = %145
  %153 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %150, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = atomicrmw add i32* %153, i32 -1 acq_rel
  %155 = icmp eq i32 %154, 1
  br i1 %155, label %156, label %158

156:                                              ; preds = %152
  %157 = bitcast %class.SkColorSpace* %150 to i8*
  call void @_ZdlPv(i8* %157) #9
  br label %158

158:                                              ; preds = %145, %152, %156
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %139) #8
  %159 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %60, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %160 = load %class.SkColorSpace*, %class.SkColorSpace** %159, align 8
  %161 = icmp eq %class.SkColorSpace* %160, null
  br i1 %161, label %165, label %162

162:                                              ; preds = %158
  %163 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %160, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = atomicrmw add i32* %163, i32 1 monotonic, !noalias !70
  br label %165

165:                                              ; preds = %158, %162
  %166 = ptrtoint %class.SkColorSpace* %160 to i64
  %167 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %31, i64 0, i32 0, i32 0
  %168 = call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %167) #8
  %169 = load i8, i8* %38, align 8, !range !11
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %228, label %171

171:                                              ; preds = %165
  %172 = bitcast %class.GrBackendFormat* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %172) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %172, i8 -86, i64 72, i1 false) #8
  call void @_ZNK16GrBackendTexture16getBackendFormatEv(%class.GrBackendFormat* nonnull sret %7, %class.GrBackendTexture* %1) #8
  %173 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %7, i64 0, i32 1
  %174 = load i8, i8* %173, align 4, !range !11
  %175 = icmp eq i8 %174, 0
  br i1 %175, label %184, label %176

176:                                              ; preds = %171
  %177 = call zeroext i1 @_ZNK6GrCaps31areColorTypeAndFormatCompatibleE11GrColorTypeRK15GrBackendFormat(%class.GrCaps* %168, i32 %148, %class.GrBackendFormat* nonnull dereferenceable(72) %7) #8
  br i1 %177, label %178, label %184

178:                                              ; preds = %176
  %179 = bitcast %class.GrCaps* %168 to i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)***
  %180 = load i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)**, i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)*** %179, align 8
  %181 = getelementptr inbounds i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)*, i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)** %180, i64 7
  %182 = load i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)*, i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)** %181, align 8
  %183 = call zeroext i1 %182(%class.GrCaps* %168, i32 %148, %class.GrBackendFormat* nonnull dereferenceable(72) %7, i32 %138) #8
  br i1 %183, label %185, label %184

184:                                              ; preds = %171, %176, %178
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %172) #8
  br label %228

185:                                              ; preds = %178
  %186 = bitcast %class.GrCaps* %168 to i1 (%class.GrCaps*, %class.GrBackendFormat*)***
  %187 = load i1 (%class.GrCaps*, %class.GrBackendFormat*)**, i1 (%class.GrCaps*, %class.GrBackendFormat*)*** %186, align 8
  %188 = getelementptr inbounds i1 (%class.GrCaps*, %class.GrBackendFormat*)*, i1 (%class.GrCaps*, %class.GrBackendFormat*)** %187, i64 4
  %189 = load i1 (%class.GrCaps*, %class.GrBackendFormat*)*, i1 (%class.GrCaps*, %class.GrBackendFormat*)** %188, align 8
  %190 = call zeroext i1 %189(%class.GrCaps* %168, %class.GrBackendFormat* nonnull dereferenceable(72) %7) #8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %172) #8
  br i1 %190, label %191, label %228

191:                                              ; preds = %185
  %192 = getelementptr inbounds %class.GrSurfaceDrawContext, %class.GrSurfaceDrawContext* %60, i64 0, i32 0, i32 0, i32 3, i32 2
  %193 = load i32, i32* %192, align 8
  %194 = bitcast %class.sk_sp.2* %12 to i64*
  store i64 %166, i64* %194, align 8
  %195 = getelementptr inbounds %class.SkSurface_Gpu, %class.SkSurface_Gpu* %0, i64 0, i32 0, i32 0, i32 1
  %196 = bitcast %class.sk_sp.144* %13 to i64*
  store i64 %24, i64* %196, align 8
  %197 = call %class.GrSurfaceDrawContext* @_ZN20GrSurfaceDrawContext22MakeFromBackendTextureEP18GrRecordingContext11GrColorType5sk_spI12SkColorSpaceERK16GrBackendTexturei15GrSurfaceOriginRK14SkSurfacePropsS3_I18GrRefCntedCallbackE(%class.GrRecordingContext* %31, i32 %193, %class.sk_sp.2* nonnull %12, %class.GrBackendTexture* dereferenceable(176) %1, i32 %138, i32 %2, %class.SkSurfaceProps* dereferenceable(8) %195, %class.sk_sp.144* nonnull %13) #8
  %198 = getelementptr inbounds %class.sk_sp.144, %class.sk_sp.144* %13, i64 0, i32 0
  %199 = load %class.GrRefCntedCallback*, %class.GrRefCntedCallback** %198, align 8
  %200 = icmp eq %class.GrRefCntedCallback* %199, null
  br i1 %200, label %214, label %201

201:                                              ; preds = %191
  %202 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %199, i64 0, i32 0
  %203 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %199, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = atomicrmw add i32* %203, i32 -1 acq_rel
  %205 = icmp eq i32 %204, 1
  br i1 %205, label %206, label %214

206:                                              ; preds = %201
  %207 = getelementptr inbounds %class.SkNVRefCnt.145, %class.SkNVRefCnt.145* %202, i64 2
  %208 = bitcast %class.SkNVRefCnt.145* %207 to void (i8*)**
  %209 = load void (i8*)*, void (i8*)** %208, align 8
  %210 = getelementptr inbounds %class.SkNVRefCnt.145, %class.SkNVRefCnt.145* %202, i64 4
  %211 = bitcast %class.SkNVRefCnt.145* %210 to i8**
  %212 = load i8*, i8** %211, align 8
  call void %209(i8* %212) #8
  %213 = bitcast %class.GrRefCntedCallback* %199 to i8*
  call void @_ZdlPv(i8* %213) #9
  br label %214

214:                                              ; preds = %191, %201, %206
  %215 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %12, i64 0, i32 0
  %216 = load %class.SkColorSpace*, %class.SkColorSpace** %215, align 8
  %217 = icmp eq %class.SkColorSpace* %216, null
  br i1 %217, label %224, label %218

218:                                              ; preds = %214
  %219 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %216, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = atomicrmw add i32* %219, i32 -1 acq_rel
  %221 = icmp eq i32 %220, 1
  br i1 %221, label %222, label %224

222:                                              ; preds = %218
  %223 = bitcast %class.SkColorSpace* %216 to i8*
  call void @_ZdlPv(i8* %223) #9
  br label %224

224:                                              ; preds = %214, %218, %222
  %225 = icmp eq %class.GrSurfaceDrawContext* %197, null
  br i1 %225, label %235, label %226

226:                                              ; preds = %224
  %227 = load %class.SkGpuDevice*, %class.SkGpuDevice** %25, align 8
  call void @_ZN11SkGpuDevice25replaceSurfaceDrawContextENSt3__110unique_ptrI20GrSurfaceDrawContextNS0_14default_deleteIS2_EEEEN9SkSurface17ContentChangeModeE(%class.SkGpuDevice* %227, %class.GrSurfaceDrawContext* nonnull %197, i32 %3) #8
  br label %235

228:                                              ; preds = %165, %184, %185
  br i1 %161, label %235, label %229

229:                                              ; preds = %228
  %230 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %160, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = atomicrmw add i32* %230, i32 -1 acq_rel
  %232 = icmp eq i32 %231, 1
  br i1 %232, label %233, label %235

233:                                              ; preds = %229
  %234 = bitcast %class.SkColorSpace* %160 to i8*
  call void @_ZdlPv(i8* %234) #9
  br label %235

235:                                              ; preds = %224, %109, %98, %226, %71, %91, %118, %228, %229, %233
  %236 = phi i64 [ %24, %233 ], [ %24, %229 ], [ %24, %228 ], [ %24, %98 ], [ %24, %118 ], [ %24, %109 ], [ %24, %91 ], [ %24, %71 ], [ 0, %226 ], [ 0, %224 ]
  %237 = phi i1 [ false, %233 ], [ false, %229 ], [ false, %228 ], [ false, %98 ], [ false, %118 ], [ false, %109 ], [ false, %91 ], [ false, %71 ], [ true, %226 ], [ false, %224 ]
  %238 = load i8*, i8** %72, align 8
  %239 = getelementptr i8, i8* %238, i64 -24
  %240 = bitcast i8* %239 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = add i64 %241, 8
  %243 = getelementptr inbounds i8, i8* %78, i64 %242
  %244 = bitcast i8* %243 to i32*
  %245 = atomicrmw add i32* %244, i32 -1 acq_rel
  %246 = icmp eq i32 %245, 1
  br i1 %246, label %247, label %254

247:                                              ; preds = %235
  %248 = getelementptr inbounds i8, i8* %78, i64 %241
  %249 = bitcast i8* %248 to %class.GrSurfaceProxy*
  %250 = bitcast i8* %248 to void (%class.GrSurfaceProxy*)***
  %251 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %250, align 8
  %252 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %251, i64 1
  %253 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %252, align 8
  call void %253(%class.GrSurfaceProxy* nonnull %249) #8
  br label %254

254:                                              ; preds = %37, %54, %247, %235, %64, %41, %48, %23
  %255 = phi i64 [ %24, %23 ], [ %24, %48 ], [ %24, %41 ], [ %24, %37 ], [ %236, %235 ], [ %236, %247 ], [ %24, %64 ], [ %24, %54 ]
  %256 = phi i1 [ false, %23 ], [ false, %48 ], [ false, %41 ], [ false, %37 ], [ %237, %235 ], [ %237, %247 ], [ false, %64 ], [ false, %54 ]
  %257 = inttoptr i64 %255 to %class.GrRefCntedCallback*
  %258 = icmp eq i64 %255, 0
  br i1 %258, label %272, label %259

259:                                              ; preds = %254
  %260 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %257, i64 0, i32 0
  %261 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %257, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %262 = atomicrmw add i32* %261, i32 -1 acq_rel
  %263 = icmp eq i32 %262, 1
  br i1 %263, label %264, label %272

264:                                              ; preds = %259
  %265 = getelementptr inbounds %class.SkNVRefCnt.145, %class.SkNVRefCnt.145* %260, i64 2
  %266 = bitcast %class.SkNVRefCnt.145* %265 to void (i8*)**
  %267 = load void (i8*)*, void (i8*)** %266, align 8
  %268 = getelementptr inbounds %class.SkNVRefCnt.145, %class.SkNVRefCnt.145* %260, i64 4
  %269 = bitcast %class.SkNVRefCnt.145* %268 to i8**
  %270 = load i8*, i8** %269, align 8
  call void %267(i8* %270) #8
  %271 = inttoptr i64 %255 to i8*
  call void @_ZdlPv(i8* %271) #9
  br label %272

272:                                              ; preds = %254, %259, %264
  ret i1 %256
}

declare zeroext i1 @_ZN16GrBackendTexture13isSameTextureERKS_(%class.GrBackendTexture*, %class.GrBackendTexture* dereferenceable(176)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN16GrBackendTextureD1Ev(%class.GrBackendTexture*) unnamed_addr #2

declare %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface*) local_unnamed_addr #1

declare void @_ZNK8SkCanvas9imageInfoEv(%struct.SkImageInfo* sret, %class.SkCanvas*) local_unnamed_addr #1

declare %class.GrSurfaceDrawContext* @_ZN20GrSurfaceDrawContext22MakeFromBackendTextureEP18GrRecordingContext11GrColorType5sk_spI12SkColorSpaceERK16GrBackendTexturei15GrSurfaceOriginRK14SkSurfacePropsS3_I18GrRefCntedCallbackE(%class.GrRecordingContext*, i32, %class.sk_sp.2*, %class.GrBackendTexture* dereferenceable(176), i32, i32, %class.SkSurfaceProps* dereferenceable(8), %class.sk_sp.144*) local_unnamed_addr #1

declare void @_ZN11SkGpuDevice25replaceSurfaceDrawContextENSt3__110unique_ptrI20GrSurfaceDrawContextNS0_14default_deleteIS2_EEEEN9SkSurface17ContentChangeModeE(%class.SkGpuDevice*, %class.GrSurfaceDrawContext*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z30validate_backend_render_targetPK6GrCapsRK21GrBackendRenderTarget11GrColorType(%class.GrCaps*, %class.GrBackendRenderTarget* dereferenceable(176), i32) local_unnamed_addr #0 {
  %4 = alloca %class.GrBackendFormat, align 8
  %5 = alloca %class.GrBackendFormat, align 8
  %6 = bitcast %class.GrBackendFormat* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %6) #8
  call void @_ZNK21GrBackendRenderTarget16getBackendFormatEv(%class.GrBackendFormat* nonnull sret %4, %class.GrBackendRenderTarget* %1) #8
  %7 = call zeroext i1 @_ZNK6GrCaps31areColorTypeAndFormatCompatibleE11GrColorTypeRK15GrBackendFormat(%class.GrCaps* %0, i32 %2, %class.GrBackendFormat* nonnull dereferenceable(72) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %6) #8
  br i1 %7, label %8, label %26

8:                                                ; preds = %3
  %9 = bitcast %class.GrBackendFormat* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #8
  call void @_ZNK21GrBackendRenderTarget16getBackendFormatEv(%class.GrBackendFormat* nonnull sret %5, %class.GrBackendRenderTarget* %1) #8
  %10 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %1, i64 0, i32 4
  %11 = load i32, i32* %10, align 4
  %12 = bitcast %class.GrCaps* %0 to i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)***
  %13 = load i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)**, i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)*** %12, align 8
  %14 = getelementptr inbounds i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)*, i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)** %13, i64 7
  %15 = load i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)*, i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)** %14, align 8
  %16 = call zeroext i1 %15(%class.GrCaps* %0, i32 %2, %class.GrBackendFormat* nonnull dereferenceable(72) %5, i32 %11) #8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #8
  br i1 %16, label %17, label %26

17:                                               ; preds = %8
  %18 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %1, i64 0, i32 5
  %19 = load i32, i32* %18, align 8
  %20 = icmp ult i32 %19, 17
  br i1 %20, label %21, label %26

21:                                               ; preds = %17
  %22 = trunc i32 %19 to i17
  %23 = lshr i17 -65279, %22
  %24 = and i17 %23, 1
  %25 = icmp ne i17 %24, 0
  ret i1 %25

26:                                               ; preds = %17, %8, %3
  ret i1 false
}

declare zeroext i1 @_ZNK6GrCaps31areColorTypeAndFormatCompatibleE11GrColorTypeRK15GrBackendFormat(%class.GrCaps*, i32, %class.GrBackendFormat* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZNK21GrBackendRenderTarget16getBackendFormatEv(%class.GrBackendFormat* sret, %class.GrBackendRenderTarget*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkSurface27MakeFromBackendRenderTargetEP18GrRecordingContextRK21GrBackendRenderTarget15GrSurfaceOrigin11SkColorType5sk_spI12SkColorSpaceEPK14SkSurfacePropsPFvPvESD_(%class.sk_sp.307* noalias nocapture sret, %class.GrRecordingContext*, %class.GrBackendRenderTarget* dereferenceable(176), i32, i32, %class.sk_sp.2* nocapture, %class.SkSurfaceProps*, void (i8*)*, i8*) local_unnamed_addr #0 align 2 {
  %10 = alloca %class.GrBackendFormat, align 8
  %11 = alloca %class.GrBackendFormat, align 8
  %12 = alloca %class.GrBackendFormat, align 8
  %13 = alloca %class.sk_sp.139, align 8
  %14 = alloca %class.sk_sp.144, align 8
  %15 = alloca %class.sk_sp.47, align 8
  %16 = alloca %class.sk_sp.139, align 8
  %17 = alloca %class.sk_sp.2, align 8
  %18 = alloca %class.SkSurfaceProps, align 4
  %19 = icmp eq void (i8*)* %7, null
  br i1 %19, label %28, label %20

20:                                               ; preds = %9
  %21 = tail call i8* @_Znwm(i64 24) #9, !noalias !73
  %22 = bitcast i8* %21 to i32*
  store i32 1, i32* %22, align 4, !noalias !73
  %23 = getelementptr inbounds i8, i8* %21, i64 8
  %24 = bitcast i8* %23 to void (i8*)**
  store void (i8*)* %7, void (i8*)** %24, align 8, !noalias !73
  %25 = getelementptr inbounds i8, i8* %21, i64 16
  %26 = bitcast i8* %25 to i8**
  store i8* %8, i8** %26, align 8, !noalias !73
  %27 = ptrtoint i8* %21 to i64
  br label %28

28:                                               ; preds = %9, %20
  %29 = phi i64 [ %27, %20 ], [ 0, %9 ]
  %30 = icmp eq %class.GrRecordingContext* %1, null
  br i1 %30, label %165, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %1, i64 0, i32 0, i32 0
  %33 = tail call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %32) #8
  %34 = bitcast %class.GrBackendFormat* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %34) #8
  call void @_ZNK21GrBackendRenderTarget16getBackendFormatEv(%class.GrBackendFormat* nonnull sret %12, %class.GrBackendRenderTarget* %2) #8
  %35 = call i32 @_Z33SkColorTypeAndFormatToGrColorTypePK6GrCaps11SkColorTypeRK15GrBackendFormat(%class.GrCaps* %33, i32 %4, %class.GrBackendFormat* nonnull dereferenceable(72) %12) #8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %34) #8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %165, label %37

37:                                               ; preds = %31
  %38 = call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %32) #8
  %39 = bitcast %class.GrBackendFormat* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %39) #8
  call void @_ZNK21GrBackendRenderTarget16getBackendFormatEv(%class.GrBackendFormat* nonnull sret %10, %class.GrBackendRenderTarget* %2) #8
  %40 = call zeroext i1 @_ZNK6GrCaps31areColorTypeAndFormatCompatibleE11GrColorTypeRK15GrBackendFormat(%class.GrCaps* %38, i32 %35, %class.GrBackendFormat* nonnull dereferenceable(72) %10) #8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %39) #8
  br i1 %40, label %41, label %165

41:                                               ; preds = %37
  %42 = bitcast %class.GrBackendFormat* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %42) #8
  call void @_ZNK21GrBackendRenderTarget16getBackendFormatEv(%class.GrBackendFormat* nonnull sret %11, %class.GrBackendRenderTarget* %2) #8
  %43 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %2, i64 0, i32 4
  %44 = load i32, i32* %43, align 4
  %45 = bitcast %class.GrCaps* %38 to i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)***
  %46 = load i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)**, i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)*** %45, align 8
  %47 = getelementptr inbounds i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)*, i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)** %46, i64 7
  %48 = load i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)*, i1 (%class.GrCaps*, i32, %class.GrBackendFormat*, i32)** %47, align 8
  %49 = call zeroext i1 %48(%class.GrCaps* %38, i32 %35, %class.GrBackendFormat* nonnull dereferenceable(72) %11, i32 %44) #8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %42) #8
  br i1 %49, label %50, label %165

50:                                               ; preds = %41
  %51 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %2, i64 0, i32 5
  %52 = load i32, i32* %51, align 8
  switch i32 %52, label %165 [
    i32 16, label %53
    i32 8, label %53
    i32 0, label %53
  ]

53:                                               ; preds = %50, %50, %50
  %54 = bitcast %class.sk_sp.139* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #8
  %55 = getelementptr inbounds %class.sk_sp.139, %class.sk_sp.139* %13, i64 0, i32 0
  store %class.GrSurfaceProxy* inttoptr (i64 -6148914691236517206 to %class.GrSurfaceProxy*), %class.GrSurfaceProxy** %55, align 8
  %56 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %57 = load %class.GrProxyProvider*, %class.GrProxyProvider** %56, align 8
  %58 = bitcast %class.sk_sp.144* %14 to i64*
  store i64 %29, i64* %58, align 8
  call void @_ZN15GrProxyProvider23wrapBackendRenderTargetERK21GrBackendRenderTarget5sk_spI18GrRefCntedCallbackE(%class.sk_sp.139* nonnull sret %13, %class.GrProxyProvider* %57, %class.GrBackendRenderTarget* dereferenceable(176) %2, %class.sk_sp.144* nonnull %14) #8
  %59 = getelementptr inbounds %class.sk_sp.144, %class.sk_sp.144* %14, i64 0, i32 0
  %60 = load %class.GrRefCntedCallback*, %class.GrRefCntedCallback** %59, align 8
  %61 = icmp eq %class.GrRefCntedCallback* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %53
  %63 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %60, i64 0, i32 0
  %64 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw add i32* %64, i32 -1 acq_rel
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %75

67:                                               ; preds = %62
  %68 = getelementptr inbounds %class.SkNVRefCnt.145, %class.SkNVRefCnt.145* %63, i64 2
  %69 = bitcast %class.SkNVRefCnt.145* %68 to void (i8*)**
  %70 = load void (i8*)*, void (i8*)** %69, align 8
  %71 = getelementptr inbounds %class.SkNVRefCnt.145, %class.SkNVRefCnt.145* %63, i64 4
  %72 = bitcast %class.SkNVRefCnt.145* %71 to i8**
  %73 = load i8*, i8** %72, align 8
  call void %70(i8* %73) #8
  %74 = bitcast %class.GrRefCntedCallback* %60 to i8*
  call void @_ZdlPv(i8* %74) #9
  br label %75

75:                                               ; preds = %53, %62, %67
  %76 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %55, align 8
  %77 = icmp eq %class.GrSurfaceProxy* %76, null
  br i1 %77, label %78, label %80

78:                                               ; preds = %75
  %79 = getelementptr inbounds %class.sk_sp.307, %class.sk_sp.307* %0, i64 0, i32 0
  store %class.SkSurface* null, %class.SkSurface** %79, align 8
  br label %164

80:                                               ; preds = %75
  %81 = ptrtoint %class.GrSurfaceProxy* %76 to i64
  %82 = bitcast %class.sk_sp.47* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #8
  %83 = getelementptr inbounds %class.sk_sp.47, %class.sk_sp.47* %15, i64 0, i32 0
  store %class.SkGpuDevice* inttoptr (i64 -6148914691236517206 to %class.SkGpuDevice*), %class.SkGpuDevice** %83, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %55, align 8
  %84 = bitcast %class.sk_sp.139* %16 to i64*
  store i64 %81, i64* %84, align 8
  %85 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %5, i64 0, i32 0
  %86 = bitcast %class.sk_sp.2* %5 to i64*
  %87 = load i64, i64* %86, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %85, align 8
  %88 = bitcast %class.sk_sp.2* %17 to i64*
  store i64 %87, i64* %88, align 8
  %89 = bitcast %class.SkSurfaceProps* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #8
  %90 = icmp eq %class.SkSurfaceProps* %6, null
  br i1 %90, label %92, label %91

91:                                               ; preds = %80
  call void @_ZN14SkSurfacePropsC1ERKS_(%class.SkSurfaceProps* nonnull %18, %class.SkSurfaceProps* nonnull dereferenceable(8) %6) #8
  br label %93

92:                                               ; preds = %80
  call void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps* nonnull %18) #8
  br label %93

93:                                               ; preds = %91, %92
  call void @_ZN11SkGpuDevice4MakeEP18GrRecordingContext11GrColorType5sk_spI14GrSurfaceProxyES3_I12SkColorSpaceE15GrSurfaceOriginRK14SkSurfacePropsN15SkBaseGpuDevice12InitContentsE(%class.sk_sp.47* nonnull sret %15, %class.GrRecordingContext* nonnull %1, i32 %35, %class.sk_sp.139* nonnull %16, %class.sk_sp.2* nonnull %17, i32 %3, %class.SkSurfaceProps* nonnull dereferenceable(8) %18, i32 1) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #8
  %94 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %17, i64 0, i32 0
  %95 = load %class.SkColorSpace*, %class.SkColorSpace** %94, align 8
  %96 = icmp eq %class.SkColorSpace* %95, null
  br i1 %96, label %103, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = atomicrmw add i32* %98, i32 -1 acq_rel
  %100 = icmp eq i32 %99, 1
  br i1 %100, label %101, label %103

101:                                              ; preds = %97
  %102 = bitcast %class.SkColorSpace* %95 to i8*
  call void @_ZdlPv(i8* %102) #9
  br label %103

103:                                              ; preds = %93, %97, %101
  %104 = getelementptr inbounds %class.sk_sp.139, %class.sk_sp.139* %16, i64 0, i32 0
  %105 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %104, align 8
  %106 = icmp eq %class.GrSurfaceProxy* %105, null
  br i1 %106, label %119, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %105, i64 0, i32 1
  %109 = getelementptr inbounds %class.SkNVRefCnt.140, %class.SkNVRefCnt.140* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = atomicrmw add i32* %109, i32 -1 acq_rel
  %111 = icmp eq i32 %110, 1
  br i1 %111, label %112, label %119

112:                                              ; preds = %107
  %113 = getelementptr inbounds %class.SkNVRefCnt.140, %class.SkNVRefCnt.140* %108, i64 -2
  %114 = bitcast %class.SkNVRefCnt.140* %113 to %class.GrSurfaceProxy*
  %115 = bitcast %class.SkNVRefCnt.140* %113 to void (%class.GrSurfaceProxy*)***
  %116 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %115, align 8
  %117 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %116, i64 1
  %118 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %117, align 8
  call void %118(%class.GrSurfaceProxy* nonnull %114) #8
  br label %119

119:                                              ; preds = %103, %107, %112
  %120 = load %class.SkGpuDevice*, %class.SkGpuDevice** %83, align 8
  %121 = icmp eq %class.SkGpuDevice* %120, null
  br i1 %121, label %122, label %124

122:                                              ; preds = %119
  %123 = getelementptr inbounds %class.sk_sp.307, %class.sk_sp.307* %0, i64 0, i32 0
  store %class.SkSurface* null, %class.SkSurface** %123, align 8
  br label %149

124:                                              ; preds = %119
  %125 = ptrtoint %class.SkGpuDevice* %120 to i64
  %126 = call i8* @_Znwm(i64 56) #9, !noalias !76
  store %class.SkGpuDevice* null, %class.SkGpuDevice** %83, align 8, !noalias !76
  %127 = bitcast i8* %126 to %class.SkSurface_Base*
  %128 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %120, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %129 = load i32, i32* %128, align 4, !noalias !76
  %130 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %120, i64 0, i32 0, i32 0, i32 3, i32 1, i32 1
  %131 = load i32, i32* %130, align 4, !noalias !76
  %132 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %120, i64 0, i32 0, i32 0, i32 4
  call void @_ZN14SkSurface_BaseC2EiiPK14SkSurfaceProps(%class.SkSurface_Base* nonnull %127, i32 %129, i32 %131, %class.SkSurfaceProps* %132) #8, !noalias !76
  %133 = bitcast i8* %126 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTV13SkSurface_Gpu, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %133, align 8, !noalias !76
  %134 = getelementptr inbounds i8, i8* %126, i64 48
  %135 = bitcast i8* %134 to i64*
  store i64 %125, i64* %135, align 8, !noalias !76
  %136 = bitcast %class.sk_sp.307* %0 to i8**
  store i8* %126, i8** %136, align 8
  %137 = load %class.SkGpuDevice*, %class.SkGpuDevice** %83, align 8
  %138 = icmp eq %class.SkGpuDevice* %137, null
  br i1 %138, label %149, label %139

139:                                              ; preds = %124
  %140 = getelementptr inbounds %class.SkGpuDevice, %class.SkGpuDevice* %137, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = atomicrmw add i32* %140, i32 -1 acq_rel
  %142 = icmp eq i32 %141, 1
  br i1 %142, label %143, label %149

143:                                              ; preds = %139
  %144 = bitcast %class.SkGpuDevice* %137 to %class.SkRefCntBase*
  %145 = bitcast %class.SkGpuDevice* %137 to void (%class.SkRefCntBase*)***
  %146 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %145, align 8
  %147 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %146, i64 2
  %148 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %147, align 8
  call void %148(%class.SkRefCntBase* nonnull %144) #8
  br label %149

149:                                              ; preds = %143, %139, %124, %122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #8
  %150 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %55, align 8
  %151 = icmp eq %class.GrSurfaceProxy* %150, null
  br i1 %151, label %164, label %152

152:                                              ; preds = %149
  %153 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %150, i64 0, i32 1
  %154 = getelementptr inbounds %class.SkNVRefCnt.140, %class.SkNVRefCnt.140* %153, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = atomicrmw add i32* %154, i32 -1 acq_rel
  %156 = icmp eq i32 %155, 1
  br i1 %156, label %157, label %164

157:                                              ; preds = %152
  %158 = getelementptr inbounds %class.SkNVRefCnt.140, %class.SkNVRefCnt.140* %153, i64 -2
  %159 = bitcast %class.SkNVRefCnt.140* %158 to %class.GrSurfaceProxy*
  %160 = bitcast %class.SkNVRefCnt.140* %158 to void (%class.GrSurfaceProxy*)***
  %161 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %160, align 8
  %162 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %161, i64 1
  %163 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %162, align 8
  call void %163(%class.GrSurfaceProxy* nonnull %159) #8
  br label %164

164:                                              ; preds = %157, %152, %149, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #8
  br label %182

165:                                              ; preds = %50, %41, %37, %31, %28
  %166 = getelementptr inbounds %class.sk_sp.307, %class.sk_sp.307* %0, i64 0, i32 0
  store %class.SkSurface* null, %class.SkSurface** %166, align 8
  %167 = inttoptr i64 %29 to %class.GrRefCntedCallback*
  %168 = icmp eq i64 %29, 0
  br i1 %168, label %182, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %167, i64 0, i32 0
  %171 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %167, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = atomicrmw add i32* %171, i32 -1 acq_rel
  %173 = icmp eq i32 %172, 1
  br i1 %173, label %174, label %182

174:                                              ; preds = %169
  %175 = getelementptr inbounds %class.SkNVRefCnt.145, %class.SkNVRefCnt.145* %170, i64 2
  %176 = bitcast %class.SkNVRefCnt.145* %175 to void (i8*)**
  %177 = load void (i8*)*, void (i8*)** %176, align 8
  %178 = getelementptr inbounds %class.SkNVRefCnt.145, %class.SkNVRefCnt.145* %170, i64 4
  %179 = bitcast %class.SkNVRefCnt.145* %178 to i8**
  %180 = load i8*, i8** %179, align 8
  call void %177(i8* %180) #8
  %181 = inttoptr i64 %29 to i8*
  call void @_ZdlPv(i8* %181) #9
  br label %182

182:                                              ; preds = %164, %165, %169, %174
  ret void
}

declare void @_ZN15GrProxyProvider23wrapBackendRenderTargetERK21GrBackendRenderTarget5sk_spI18GrRefCntedCallbackE(%class.sk_sp.139* sret, %class.GrProxyProvider*, %class.GrBackendRenderTarget* dereferenceable(176), %class.sk_sp.144*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkSurface14flushAndSubmitEb(%class.SkSurface*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.GrFlushInfo, align 8
  %4 = bitcast %struct.GrFlushInfo* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %4) #8
  %5 = bitcast %struct.GrFlushInfo* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 48, i1 false)
  %6 = call zeroext i1 @_ZN9SkSurface5flushENS_20BackendSurfaceAccessERK11GrFlushInfo(%class.SkSurface* %0, i32 0, %struct.GrFlushInfo* nonnull dereferenceable(48) %3) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %4) #8
  %7 = call %class.GrRecordingContext* @_ZN9SkSurface16recordingContextEv(%class.SkSurface* %0) #8
  %8 = icmp eq %class.GrRecordingContext* %7, null
  br i1 %8, label %19, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %7, i64 0, i32 0, i32 0
  %11 = bitcast %class.GrRecordingContext* %7 to %class.GrDirectContext* (%class.GrContext_Base*)***
  %12 = load %class.GrDirectContext* (%class.GrContext_Base*)**, %class.GrDirectContext* (%class.GrContext_Base*)*** %11, align 8
  %13 = getelementptr inbounds %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %12, i64 3
  %14 = load %class.GrDirectContext* (%class.GrContext_Base*)*, %class.GrDirectContext* (%class.GrContext_Base*)** %13, align 8
  %15 = call %class.GrDirectContext* %14(%class.GrContext_Base* nonnull %10) #8
  %16 = icmp eq %class.GrDirectContext* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %9
  %18 = call zeroext i1 @_ZN15GrDirectContext6submitEb(%class.GrDirectContext* nonnull %15, i1 zeroext %1) #8
  br label %19

19:                                               ; preds = %2, %9, %17
  ret void
}

declare zeroext i1 @_ZN9SkSurface5flushENS_20BackendSurfaceAccessERK11GrFlushInfo(%class.SkSurface*, i32, %struct.GrFlushInfo* dereferenceable(48)) local_unnamed_addr #1

declare %class.GrRecordingContext* @_ZN9SkSurface16recordingContextEv(%class.SkSurface*) local_unnamed_addr #1

declare zeroext i1 @_ZN15GrDirectContext6submitEb(%class.GrDirectContext*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #8
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkSurface_Base26onRestoreBackingMutabilityEv(%class.SkSurface_Base*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN9SkSurface23notifyContentWillChangeENS_17ContentChangeModeE(%class.SkSurface*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK19GrRenderTargetProxy18refsWrappedObjectsEv(%class.GrRenderTargetProxy*) local_unnamed_addr #1

declare void @_ZN14GrSurfaceProxy4CopyEP18GrRecordingContext5sk_spIS_E15GrSurfaceOrigin11GrMipmapped7SkIRect12SkBackingFit10SkBudgetedNS_14RectsMustMatchEPS2_I12GrRenderTaskE(%class.sk_sp.139* sret, %class.GrRecordingContext*, %class.sk_sp.139*, i32, i1 zeroext, %struct.SkIRect* byval(%struct.SkIRect) align 8, i32, i1 zeroext, i1 zeroext, %class.sk_sp.137*) local_unnamed_addr #1

declare zeroext i1 @_ZN19GrDirectContextPriv13flushSurfacesE6SkSpanIP14GrSurfaceProxyEN9SkSurface20BackendSurfaceAccessERK11GrFlushInfoPK28GrBackendSurfaceMutableState(%class.GrDirectContextPriv*, %class.GrSurfaceProxy**, i64, i32, %struct.GrFlushInfo* dereferenceable(48), %class.GrBackendSurfaceMutableState*) local_unnamed_addr #1

declare dereferenceable(72) %class.GrBackendFormat* @_ZN15GrBackendFormataSERKS_(%class.GrBackendFormat*, %class.GrBackendFormat* dereferenceable(72)) local_unnamed_addr #1

declare dereferenceable(8) %class.SkSurfaceProps* @_ZN14SkSurfacePropsaSERKS_(%class.SkSurfaceProps*, %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN24GrContextThreadSafeProxyD1Ev(%class.GrContextThreadSafeProxy*) unnamed_addr #2

declare void @_ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas*, %class.SkImage*, float, float, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) local_unnamed_addr #1

declare i32 @_ZNK14GrContext_Base9contextIDEv(%class.GrContext_Base*) local_unnamed_addr #1

declare void @_ZN11SkImage_GpuC1E5sk_spI14GrImageContextEj18GrSurfaceProxyView11SkColorInfo(%class.SkImage_Gpu*, %class.sk_sp.309*, i32, %class.GrSurfaceProxyView*, %class.SkColorInfo*) unnamed_addr #1

declare void @_ZN14GrContext_Base15threadSafeProxyEv(%class.sk_sp.49* sret, %class.GrContext_Base*) local_unnamed_addr #1

declare %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base*) local_unnamed_addr #1

declare void @_ZN14SkSurfacePropsC1ERKS_(%class.SkSurfaceProps*, %class.SkSurfaceProps* dereferenceable(8)) unnamed_addr #1

declare void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps*) unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind
declare void @_ZN21SkDeferredDisplayListD1Ev(%class.SkDeferredDisplayList*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN15GrDirectContext4privEv: argument 0"}
!4 = distinct !{!4, !"_ZN15GrDirectContext4privEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_Z10sk_make_spI13SkSurface_GpuJ5sk_spI11SkGpuDeviceEEES1_IT_EDpOT0_: argument 0"}
!7 = distinct !{!7, !"_Z10sk_make_spI13SkSurface_GpuJ5sk_spI11SkGpuDeviceEEES1_IT_EDpOT0_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN16GrSurfaceContext15readSurfaceViewEv: argument 0"}
!10 = distinct !{!10, !"_ZN16GrSurfaceContext15readSurfaceViewEv"}
!11 = !{i8 0, i8 2}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_Z9sk_ref_spI18GrRecordingContextE5sk_spIT_EPS2_: argument 0"}
!14 = distinct !{!14, !"_Z9sk_ref_spI18GrRecordingContextE5sk_spIT_EPS2_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN18GrSurfaceProxyView4CopyEP18GrRecordingContextS_11GrMipmapped7SkIRect12SkBackingFit10SkBudgeted: argument 0"}
!17 = distinct !{!17, !"_ZN18GrSurfaceProxyView4CopyEP18GrRecordingContextS_11GrMipmapped7SkIRect12SkBackingFit10SkBudgeted"}
!18 = !{!19, !16}
!19 = distinct !{!19, !20, !"_ZNK18GrSurfaceProxyView8refProxyEv: argument 0"}
!20 = distinct !{!20, !"_ZNK18GrSurfaceProxyView8refProxyEv"}
!21 = !{!19}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_Z9sk_ref_spI18GrRecordingContextE5sk_spIT_EPS2_: argument 0"}
!24 = distinct !{!24, !"_Z9sk_ref_spI18GrRecordingContextE5sk_spIT_EPS2_"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_Z10sk_make_spI11SkImage_GpuJ5sk_spI18GrRecordingContextE3$_018GrSurfaceProxyViewRK11SkColorInfoEES1_IT_EDpOT0_: argument 0"}
!27 = distinct !{!27, !"_Z10sk_make_spI11SkImage_GpuJ5sk_spI18GrRecordingContextE3$_018GrSurfaceProxyViewRK11SkColorInfoEES1_IT_EDpOT0_"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN14SkSurface_Base14refCachedImageEv: argument 0"}
!30 = distinct !{!30, !"_ZN14SkSurface_Base14refCachedImageEv"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZN15GrDirectContext4privEv: argument 0"}
!33 = distinct !{!33, !"_ZN15GrDirectContext4privEv"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNK18GrSurfaceProxyView17asTextureProxyRefEv: argument 0"}
!36 = distinct !{!36, !"_ZNK18GrSurfaceProxyView17asTextureProxyRefEv"}
!37 = !{!38, !35}
!38 = distinct !{!38, !39, !"_Z9sk_ref_spI14GrTextureProxyE5sk_spIT_EPS2_: argument 0"}
!39 = distinct !{!39, !"_Z9sk_ref_spI14GrTextureProxyE5sk_spIT_EPS2_"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_Z9sk_ref_spI15GrDirectContextE5sk_spIT_EPS2_: argument 0"}
!42 = distinct !{!42, !"_Z9sk_ref_spI15GrDirectContextE5sk_spIT_EPS2_"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_Z10sk_make_spI11SkImage_GpuJ5sk_spI15GrDirectContextE3$_018GrSurfaceProxyViewRK11SkColorInfoEES1_IT_EDpOT0_: argument 0"}
!45 = distinct !{!45, !"_Z10sk_make_spI11SkImage_GpuJ5sk_spI15GrDirectContextE3$_018GrSurfaceProxyViewRK11SkColorInfoEES1_IT_EDpOT0_"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZN15GrDirectContext4privEv: argument 0"}
!48 = distinct !{!48, !"_ZN15GrDirectContext4privEv"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZNK18GrSurfaceProxyView22asRenderTargetProxyRefEv: argument 0"}
!51 = distinct !{!51, !"_ZNK18GrSurfaceProxyView22asRenderTargetProxyRefEv"}
!52 = !{!53, !50}
!53 = distinct !{!53, !54, !"_Z9sk_ref_spI19GrRenderTargetProxyE5sk_spIT_EPS2_: argument 0"}
!54 = distinct !{!54, !"_Z9sk_ref_spI19GrRenderTargetProxyE5sk_spIT_EPS2_"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_Z10sk_make_spI13SkSurface_GpuJ5sk_spI11SkGpuDeviceEEES1_IT_EDpOT0_: argument 0"}
!57 = distinct !{!57, !"_Z10sk_make_spI13SkSurface_GpuJ5sk_spI11SkGpuDeviceEEES1_IT_EDpOT0_"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZN18GrRefCntedCallback4MakeEPFvPvES0_: argument 0"}
!60 = distinct !{!60, !"_ZN18GrRefCntedCallback4MakeEPFvPvES0_"}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_Z10sk_make_spI13SkSurface_GpuJ5sk_spI11SkGpuDeviceEEES1_IT_EDpOT0_: argument 0"}
!63 = distinct !{!63, !"_Z10sk_make_spI13SkSurface_GpuJ5sk_spI11SkGpuDeviceEEES1_IT_EDpOT0_"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZN18GrRefCntedCallback4MakeEPFvPvES0_: argument 0"}
!66 = distinct !{!66, !"_ZN18GrRefCntedCallback4MakeEPFvPvES0_"}
!67 = !{!68}
!68 = distinct !{!68, !69, !"_Z9sk_ref_spI14GrTextureProxyE5sk_spIT_EPS2_: argument 0"}
!69 = distinct !{!69, !"_Z9sk_ref_spI14GrTextureProxyE5sk_spIT_EPS2_"}
!70 = !{!71}
!71 = distinct !{!71, !72, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_: argument 0"}
!72 = distinct !{!72, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_"}
!73 = !{!74}
!74 = distinct !{!74, !75, !"_ZN18GrRefCntedCallback4MakeEPFvPvES0_: argument 0"}
!75 = distinct !{!75, !"_ZN18GrRefCntedCallback4MakeEPFvPvES0_"}
!76 = !{!77}
!77 = distinct !{!77, !78, !"_Z10sk_make_spI13SkSurface_GpuJ5sk_spI11SkGpuDeviceEEES1_IT_EDpOT0_: argument 0"}
!78 = distinct !{!78, !"_Z10sk_make_spI13SkSurface_GpuJ5sk_spI11SkGpuDeviceEEES1_IT_EDpOT0_"}
