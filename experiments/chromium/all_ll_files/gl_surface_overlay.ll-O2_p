; ModuleID = '../../ui/gl/gl_surface_overlay.cc'
source_filename = "../../ui/gl/gl_surface_overlay.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gl::GLSurfaceOverlay" = type { i32, i32, %class.scoped_refptr, %"class.gfx::Rect", %"class.gfx::RectF", i8, %"class.std::__1::unique_ptr" }
%class.scoped_refptr = type { %"class.gl::GLImage"* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gfx::GpuFence"* }
%"class.gfx::GpuFence" = type { %"struct.gfx::GpuFenceHandle" }
%"struct.gfx::GpuFenceHandle" = type { %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.gl::GLImage" = type { i32 (...)**, %"class.base::RefCounted", %"class.gfx::ColorSpace" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }

@_ZN2gl16GLSurfaceOverlayC1EiN3gfx16OverlayTransformEPNS_7GLImageERKNS1_4RectERKNS1_5RectFEbNSt3__110unique_ptrINS1_8GpuFenceENSB_14default_deleteISD_EEEE = hidden unnamed_addr alias void (%"class.gl::GLSurfaceOverlay"*, i32, i32, %"class.gl::GLImage"*, %"class.gfx::Rect"*, %"class.gfx::RectF"*, i1, i64), void (%"class.gl::GLSurfaceOverlay"*, i32, i32, %"class.gl::GLImage"*, %"class.gfx::Rect"*, %"class.gfx::RectF"*, i1, i64)* @_ZN2gl16GLSurfaceOverlayC2EiN3gfx16OverlayTransformEPNS_7GLImageERKNS1_4RectERKNS1_5RectFEbNSt3__110unique_ptrINS1_8GpuFenceENSB_14default_deleteISD_EEEE
@_ZN2gl16GLSurfaceOverlayC1EOS0_ = hidden unnamed_addr alias void (%"class.gl::GLSurfaceOverlay"*, %"class.gl::GLSurfaceOverlay"*), void (%"class.gl::GLSurfaceOverlay"*, %"class.gl::GLSurfaceOverlay"*)* @_ZN2gl16GLSurfaceOverlayC2EOS0_
@_ZN2gl16GLSurfaceOverlayD1Ev = hidden unnamed_addr alias void (%"class.gl::GLSurfaceOverlay"*), void (%"class.gl::GLSurfaceOverlay"*)* @_ZN2gl16GLSurfaceOverlayD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl16GLSurfaceOverlayC2EiN3gfx16OverlayTransformEPNS_7GLImageERKNS1_4RectERKNS1_5RectFEbNSt3__110unique_ptrINS1_8GpuFenceENSB_14default_deleteISD_EEEE(%"class.gl::GLSurfaceOverlay"* nocapture, i32, i32, %"class.gl::GLImage"*, %"class.gfx::Rect"* nocapture readonly dereferenceable(16), %"class.gfx::RectF"* nocapture readonly dereferenceable(16), i1 zeroext, i64) unnamed_addr #0 align 2 {
  %9 = zext i1 %6 to i8
  %10 = getelementptr inbounds %"class.gl::GLSurfaceOverlay", %"class.gl::GLSurfaceOverlay"* %0, i64 0, i32 0
  store i32 %1, i32* %10, align 8
  %11 = getelementptr inbounds %"class.gl::GLSurfaceOverlay", %"class.gl::GLSurfaceOverlay"* %0, i64 0, i32 1
  store i32 %2, i32* %11, align 4
  %12 = getelementptr inbounds %"class.gl::GLSurfaceOverlay", %"class.gl::GLSurfaceOverlay"* %0, i64 0, i32 2, i32 0
  store %"class.gl::GLImage"* %3, %"class.gl::GLImage"** %12, align 8
  %13 = icmp eq %"class.gl::GLImage"* %3, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.gl::GLImage", %"class.gl::GLImage"* %3, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %15) #5
  br label %16

16:                                               ; preds = %14, %8
  %17 = getelementptr inbounds %"class.gl::GLSurfaceOverlay", %"class.gl::GLSurfaceOverlay"* %0, i64 0, i32 3
  %18 = bitcast %"class.gfx::Rect"* %17 to i8*
  %19 = bitcast %"class.gfx::Rect"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 4 %19, i64 16, i1 false)
  %20 = getelementptr inbounds %"class.gl::GLSurfaceOverlay", %"class.gl::GLSurfaceOverlay"* %0, i64 0, i32 4
  %21 = bitcast %"class.gfx::RectF"* %20 to i8*
  %22 = bitcast %"class.gfx::RectF"* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 4 %22, i64 16, i1 false)
  %23 = getelementptr inbounds %"class.gl::GLSurfaceOverlay", %"class.gl::GLSurfaceOverlay"* %0, i64 0, i32 5
  store i8 %9, i8* %23, align 8
  %24 = getelementptr inbounds %"class.gl::GLSurfaceOverlay", %"class.gl::GLSurfaceOverlay"* %0, i64 0, i32 6
  %25 = bitcast %"class.std::__1::unique_ptr"* %24 to i64*
  store i64 %7, i64* %25, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl16GLSurfaceOverlayC2EOS0_(%"class.gl::GLSurfaceOverlay"* nocapture, %"class.gl::GLSurfaceOverlay"* nocapture dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.gl::GLSurfaceOverlay"* %1 to i64*
  %4 = bitcast %"class.gl::GLSurfaceOverlay"* %0 to i64*
  %5 = load i64, i64* %3, align 8
  store i64 %5, i64* %4, align 8
  %6 = getelementptr inbounds %"class.gl::GLSurfaceOverlay", %"class.gl::GLSurfaceOverlay"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.gl::GLSurfaceOverlay", %"class.gl::GLSurfaceOverlay"* %1, i64 0, i32 2
  %8 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %7, i64 0, i32 0
  %9 = bitcast %class.scoped_refptr* %7 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %class.scoped_refptr* %6 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.gl::GLImage"* null, %"class.gl::GLImage"** %8, align 8
  %12 = getelementptr inbounds %"class.gl::GLSurfaceOverlay", %"class.gl::GLSurfaceOverlay"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"class.gl::GLSurfaceOverlay", %"class.gl::GLSurfaceOverlay"* %1, i64 0, i32 3
  %14 = bitcast %"class.gfx::Rect"* %12 to i8*
  %15 = bitcast %"class.gfx::Rect"* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 33, i1 false)
  %16 = getelementptr inbounds %"class.gl::GLSurfaceOverlay", %"class.gl::GLSurfaceOverlay"* %0, i64 0, i32 6
  %17 = getelementptr inbounds %"class.gl::GLSurfaceOverlay", %"class.gl::GLSurfaceOverlay"* %1, i64 0, i32 6
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.std::__1::unique_ptr"* %17 to i64*
  %20 = load i64, i64* %19, align 8
  store %"class.gfx::GpuFence"* null, %"class.gfx::GpuFence"** %18, align 8
  %21 = bitcast %"class.std::__1::unique_ptr"* %16 to i64*
  store i64 %20, i64* %21, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl16GLSurfaceOverlayD2Ev(%"class.gl::GLSurfaceOverlay"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLSurfaceOverlay", %"class.gl::GLSurfaceOverlay"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %3 = load %"class.gfx::GpuFence"*, %"class.gfx::GpuFence"** %2, align 8
  store %"class.gfx::GpuFence"* null, %"class.gfx::GpuFence"** %2, align 8
  %4 = icmp eq %"class.gfx::GpuFence"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN3gfx8GpuFenceD1Ev(%"class.gfx::GpuFence"* nonnull %3) #5
  %6 = bitcast %"class.gfx::GpuFence"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #6
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.gl::GLSurfaceOverlay", %"class.gl::GLSurfaceOverlay"* %0, i64 0, i32 2, i32 0
  %9 = load %"class.gl::GLImage"*, %"class.gl::GLImage"** %8, align 8
  %10 = icmp eq %"class.gl::GLImage"* %9, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.gl::GLImage", %"class.gl::GLImage"* %9, i64 0, i32 1
  %13 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %12, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %13) #5
  %14 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %12, i64 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %24

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %12, i64 -2
  %19 = bitcast %"class.base::RefCounted"* %18 to %"class.gl::GLImage"*
  %20 = bitcast %"class.base::RefCounted"* %18 to void (%"class.gl::GLImage"*)***
  %21 = load void (%"class.gl::GLImage"*)**, void (%"class.gl::GLImage"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.gl::GLImage"*)*, void (%"class.gl::GLImage"*)** %21, i64 21
  %23 = load void (%"class.gl::GLImage"*)*, void (%"class.gl::GLImage"*)** %22, align 8
  tail call void %23(%"class.gl::GLImage"* nonnull %19) #5
  br label %24

24:                                               ; preds = %7, %11, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl16GLSurfaceOverlay20ScheduleOverlayPlaneEj(%"class.gl::GLSurfaceOverlay"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::GLSurfaceOverlay", %"class.gl::GLSurfaceOverlay"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.gl::GLImage"*, %"class.gl::GLImage"** %3, align 8
  %5 = getelementptr inbounds %"class.gl::GLSurfaceOverlay", %"class.gl::GLSurfaceOverlay"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.gl::GLSurfaceOverlay", %"class.gl::GLSurfaceOverlay"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.gl::GLSurfaceOverlay", %"class.gl::GLSurfaceOverlay"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.gl::GLSurfaceOverlay", %"class.gl::GLSurfaceOverlay"* %0, i64 0, i32 4
  %11 = getelementptr inbounds %"class.gl::GLSurfaceOverlay", %"class.gl::GLSurfaceOverlay"* %0, i64 0, i32 5
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp ne i8 %12, 0
  %14 = getelementptr inbounds %"class.gl::GLSurfaceOverlay", %"class.gl::GLSurfaceOverlay"* %0, i64 0, i32 6
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  %17 = load i64, i64* %16, align 8
  store %"class.gfx::GpuFence"* null, %"class.gfx::GpuFence"** %15, align 8
  %18 = bitcast %"class.gl::GLImage"* %4 to i1 (%"class.gl::GLImage"*, i32, i32, i32, %"class.gfx::Rect"*, %"class.gfx::RectF"*, i1, i64)***
  %19 = load i1 (%"class.gl::GLImage"*, i32, i32, i32, %"class.gfx::Rect"*, %"class.gfx::RectF"*, i1, i64)**, i1 (%"class.gl::GLImage"*, i32, i32, i32, %"class.gfx::Rect"*, %"class.gfx::RectF"*, i1, i64)*** %18, align 8
  %20 = getelementptr inbounds i1 (%"class.gl::GLImage"*, i32, i32, i32, %"class.gfx::Rect"*, %"class.gfx::RectF"*, i1, i64)*, i1 (%"class.gl::GLImage"*, i32, i32, i32, %"class.gfx::Rect"*, %"class.gfx::RectF"*, i1, i64)** %19, i64 10
  %21 = load i1 (%"class.gl::GLImage"*, i32, i32, i32, %"class.gfx::Rect"*, %"class.gfx::RectF"*, i1, i64)*, i1 (%"class.gl::GLImage"*, i32, i32, i32, %"class.gfx::Rect"*, %"class.gfx::RectF"*, i1, i64)** %20, align 8
  %22 = tail call zeroext i1 %21(%"class.gl::GLImage"* %4, i32 %1, i32 %6, i32 %8, %"class.gfx::Rect"* dereferenceable(16) %9, %"class.gfx::RectF"* dereferenceable(16) %10, i1 zeroext %13, i64 %17) #5
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2gl16GLSurfaceOverlay5FlushEv(%"class.gl::GLSurfaceOverlay"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLSurfaceOverlay", %"class.gl::GLSurfaceOverlay"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.gl::GLImage"*, %"class.gl::GLImage"** %2, align 8
  %4 = bitcast %"class.gl::GLImage"* %3 to void (%"class.gl::GLImage"*)***
  %5 = load void (%"class.gl::GLImage"*)**, void (%"class.gl::GLImage"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.gl::GLImage"*)*, void (%"class.gl::GLImage"*)** %5, i64 12
  %7 = load void (%"class.gl::GLImage"*)*, void (%"class.gl::GLImage"*)** %6, align 8
  tail call void %7(%"class.gl::GLImage"* %3) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3gfx8GpuFenceD1Ev(%"class.gfx::GpuFence"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
