; ModuleID = '../../net/base/test_data_stream.cc'
source_filename = "../../net/base/test_data_stream.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.net::TestDataStream" = type { i32, i32, [16 x i8], i8* }

@_ZN3net14TestDataStreamC1Ev = hidden unnamed_addr alias void (%"class.net::TestDataStream"*), void (%"class.net::TestDataStream"*)* @_ZN3net14TestDataStreamC2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net14TestDataStreamC2Ev(%"class.net::TestDataStream"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::TestDataStream", %"class.net::TestDataStream"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.net::TestDataStream", %"class.net::TestDataStream"* %0, i64 0, i32 1
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %"class.net::TestDataStream", %"class.net::TestDataStream"* %0, i64 0, i32 2, i64 0
  %5 = getelementptr inbounds %"class.net::TestDataStream", %"class.net::TestDataStream"* %0, i64 0, i32 3
  store i8* %4, i8** %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net14TestDataStream5ResetEv(%"class.net::TestDataStream"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::TestDataStream", %"class.net::TestDataStream"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.net::TestDataStream", %"class.net::TestDataStream"* %0, i64 0, i32 1
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %"class.net::TestDataStream", %"class.net::TestDataStream"* %0, i64 0, i32 2, i64 0
  %5 = getelementptr inbounds %"class.net::TestDataStream", %"class.net::TestDataStream"* %0, i64 0, i32 3
  store i8* %4, i8** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14TestDataStream8GetBytesEPci(%"class.net::TestDataStream"*, i8* nocapture, i32) local_unnamed_addr #1 align 2 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %58, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.net::TestDataStream", %"class.net::TestDataStream"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.net::TestDataStream", %"class.net::TestDataStream"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.net::TestDataStream", %"class.net::TestDataStream"* %0, i64 0, i32 2, i64 0
  %9 = getelementptr inbounds %"class.net::TestDataStream", %"class.net::TestDataStream"* %0, i64 0, i32 3
  %10 = load i32, i32* %6, align 4
  br label %11

11:                                               ; preds = %5, %54
  %12 = phi i32 [ %10, %5 ], [ %49, %54 ]
  %13 = phi i8* [ %1, %5 ], [ %47, %54 ]
  %14 = phi i32 [ %2, %5 ], [ %56, %54 ]
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %16, label %41

16:                                               ; preds = %11
  %17 = load i32, i32* %7, align 8
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %7, align 8
  %19 = srem i32 %17, 10
  %20 = trunc i32 %19 to i8
  %21 = add nsw i8 %20, 48
  store i32 1, i32* %6, align 4
  store i8 %21, i8* %8, align 1
  %22 = icmp sgt i32 %17, 9
  br i1 %22, label %23, label %35

23:                                               ; preds = %16, %23
  %24 = phi i32 [ %34, %23 ], [ 1, %16 ]
  %25 = phi i32 [ %26, %23 ], [ %17, %16 ]
  %26 = udiv i32 %25, 10
  %27 = urem i32 %26, 10
  %28 = trunc i32 %27 to i8
  %29 = or i8 %28, 48
  %30 = add nsw i32 %24, 1
  store i32 %30, i32* %6, align 4
  %31 = sext i32 %24 to i64
  %32 = getelementptr inbounds %"class.net::TestDataStream", %"class.net::TestDataStream"* %0, i64 0, i32 2, i64 %31
  store i8 %29, i8* %32, align 1
  %33 = icmp ugt i32 %25, 99
  %34 = load i32, i32* %6, align 4
  br i1 %33, label %23, label %35

35:                                               ; preds = %23, %16
  %36 = phi i32 [ 1, %16 ], [ %34, %23 ]
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %6, align 4
  %38 = sext i32 %36 to i64
  %39 = getelementptr inbounds %"class.net::TestDataStream", %"class.net::TestDataStream"* %0, i64 0, i32 2, i64 %38
  store i8 46, i8* %39, align 1
  %40 = load i32, i32* %6, align 4
  br label %41

41:                                               ; preds = %11, %35
  %42 = phi i32 [ %12, %11 ], [ %40, %35 ]
  %43 = icmp slt i32 %42, %14
  %44 = select i1 %43, i32 %42, i32 %14
  %45 = load i8*, i8** %9, align 8
  %46 = sext i32 %44 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 1 %45, i64 %46, i1 false)
  %47 = getelementptr inbounds i8, i8* %13, i64 %46
  %48 = load i32, i32* %6, align 4
  %49 = sub nsw i32 %48, %44
  store i32 %49, i32* %6, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %41
  %52 = load i8*, i8** %9, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 %46
  br label %54

54:                                               ; preds = %41, %51
  %55 = phi i8* [ %53, %51 ], [ %8, %41 ]
  store i8* %55, i8** %9, align 8
  %56 = sub nsw i32 %14, %44
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %11

58:                                               ; preds = %54, %3
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3net14TestDataStream12AdvanceIndexEv(%"class.net::TestDataStream"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.net::TestDataStream", %"class.net::TestDataStream"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %30

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::TestDataStream", %"class.net::TestDataStream"* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = add nsw i32 %7, 1
  store i32 %8, i32* %6, align 8
  %9 = srem i32 %7, 10
  %10 = trunc i32 %9 to i8
  %11 = add nsw i8 %10, 48
  store i32 1, i32* %2, align 4
  %12 = getelementptr inbounds %"class.net::TestDataStream", %"class.net::TestDataStream"* %0, i64 0, i32 2, i64 0
  store i8 %11, i8* %12, align 1
  %13 = icmp sgt i32 %7, 9
  br i1 %13, label %14, label %25

14:                                               ; preds = %5, %14
  %15 = phi i32 [ %16, %14 ], [ %7, %5 ]
  %16 = udiv i32 %15, 10
  %17 = load i32, i32* %2, align 4
  %18 = urem i32 %16, 10
  %19 = trunc i32 %18 to i8
  %20 = or i8 %19, 48
  %21 = add nsw i32 %17, 1
  store i32 %21, i32* %2, align 4
  %22 = sext i32 %17 to i64
  %23 = getelementptr inbounds %"class.net::TestDataStream", %"class.net::TestDataStream"* %0, i64 0, i32 2, i64 %22
  store i8 %20, i8* %23, align 1
  %24 = icmp ugt i32 %15, 99
  br i1 %24, label %14, label %25

25:                                               ; preds = %14, %5
  %26 = load i32, i32* %2, align 4
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %2, align 4
  %28 = sext i32 %26 to i64
  %29 = getelementptr inbounds %"class.net::TestDataStream", %"class.net::TestDataStream"* %0, i64 0, i32 2, i64 %28
  store i8 46, i8* %29, align 1
  br label %30

30:                                               ; preds = %25, %1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3net14TestDataStream7ConsumeEi(%"class.net::TestDataStream"*, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.net::TestDataStream", %"class.net::TestDataStream"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = sub nsw i32 %4, %1
  store i32 %5, i32* %3, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.net::TestDataStream", %"class.net::TestDataStream"* %0, i64 0, i32 3
  %9 = load i8*, i8** %8, align 8
  %10 = sext i32 %1 to i64
  %11 = getelementptr inbounds i8, i8* %9, i64 %10
  store i8* %11, i8** %8, align 8
  br label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.net::TestDataStream", %"class.net::TestDataStream"* %0, i64 0, i32 2, i64 0
  %14 = getelementptr inbounds %"class.net::TestDataStream", %"class.net::TestDataStream"* %0, i64 0, i32 3
  store i8* %13, i8** %14, align 8
  br label %15

15:                                               ; preds = %12, %7
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net14TestDataStream11VerifyBytesEPKci(%"class.net::TestDataStream"*, i8* nocapture readonly, i32) local_unnamed_addr #4 align 2 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %57, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.net::TestDataStream", %"class.net::TestDataStream"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.net::TestDataStream", %"class.net::TestDataStream"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.net::TestDataStream", %"class.net::TestDataStream"* %0, i64 0, i32 2, i64 0
  %9 = getelementptr inbounds %"class.net::TestDataStream", %"class.net::TestDataStream"* %0, i64 0, i32 3
  %10 = load i32, i32* %6, align 4
  br label %11

11:                                               ; preds = %5, %49
  %12 = phi i32 [ %10, %5 ], [ %50, %49 ]
  %13 = phi i8* [ %1, %5 ], [ %55, %49 ]
  %14 = phi i32 [ %2, %5 ], [ %54, %49 ]
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %16, label %41

16:                                               ; preds = %11
  %17 = load i32, i32* %7, align 8
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %7, align 8
  %19 = srem i32 %17, 10
  %20 = trunc i32 %19 to i8
  %21 = add nsw i8 %20, 48
  store i32 1, i32* %6, align 4
  store i8 %21, i8* %8, align 1
  %22 = icmp sgt i32 %17, 9
  br i1 %22, label %23, label %35

23:                                               ; preds = %16, %23
  %24 = phi i32 [ %34, %23 ], [ 1, %16 ]
  %25 = phi i32 [ %26, %23 ], [ %17, %16 ]
  %26 = udiv i32 %25, 10
  %27 = urem i32 %26, 10
  %28 = trunc i32 %27 to i8
  %29 = or i8 %28, 48
  %30 = add nsw i32 %24, 1
  store i32 %30, i32* %6, align 4
  %31 = sext i32 %24 to i64
  %32 = getelementptr inbounds %"class.net::TestDataStream", %"class.net::TestDataStream"* %0, i64 0, i32 2, i64 %31
  store i8 %29, i8* %32, align 1
  %33 = icmp ugt i32 %25, 99
  %34 = load i32, i32* %6, align 4
  br i1 %33, label %23, label %35

35:                                               ; preds = %23, %16
  %36 = phi i32 [ 1, %16 ], [ %34, %23 ]
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %6, align 4
  %38 = sext i32 %36 to i64
  %39 = getelementptr inbounds %"class.net::TestDataStream", %"class.net::TestDataStream"* %0, i64 0, i32 2, i64 %38
  store i8 46, i8* %39, align 1
  %40 = load i32, i32* %6, align 4
  br label %41

41:                                               ; preds = %11, %35
  %42 = phi i32 [ %12, %11 ], [ %40, %35 ]
  %43 = icmp slt i32 %42, %14
  %44 = select i1 %43, i32 %42, i32 %14
  %45 = load i8*, i8** %9, align 8
  %46 = sext i32 %44 to i64
  %47 = tail call i32 @bcmp(i8* %13, i8* %45, i64 %46)
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %57

49:                                               ; preds = %41
  %50 = sub nsw i32 %42, %44
  store i32 %50, i32* %6, align 4
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds i8, i8* %45, i64 %46
  %53 = select i1 %51, i8* %8, i8* %52
  store i8* %53, i8** %9, align 8
  %54 = sub nsw i32 %14, %44
  %55 = getelementptr inbounds i8, i8* %13, i64 %46
  %56 = icmp eq i32 %54, 0
  br i1 %56, label %57, label %11

57:                                               ; preds = %49, %41, %3
  %58 = phi i1 [ true, %3 ], [ false, %41 ], [ true, %49 ]
  ret i1 %58
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
