; ModuleID = 'gen/third_party/blink/public/mojom/image_downloader/image_downloader.mojom-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/image_downloader/image_downloader.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::ImageDownloaderAsyncWaiter" = type { %"class.blink::mojom::ImageDownloader"* }
%"class.blink::mojom::ImageDownloader" = type { i32 (...)** }
%"class.blink::mojom::ImageDownloaderInterceptorForTesting" = type { %"class.blink::mojom::ImageDownloader" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.SkBitmap*, %class.SkBitmap*, %"class.std::__1::__compressed_pair.12" }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.11 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.5, i32, i32 }
%class.sk_sp.5 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.6" }
%"struct.std::__1::atomic.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl.9" }
%"struct.std::__1::__cxx_atomic_impl.9" = type { %"struct.std::__1::__cxx_atomic_base_impl.10" }
%"struct.std::__1::__cxx_atomic_base_impl.10" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.11 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %class.SkBitmap* }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"class.gfx::Size"*, %"class.gfx::Size"*, %"class.std::__1::__compressed_pair.19" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.gfx::Size"* }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.38, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector.24" }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.31", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.33" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.38 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.39" }>
%"class.base::RefCountedThreadSafe.39" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.40 }
%class.scoped_refptr.40 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.41", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.41" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.6" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN5blink5mojom15ImageDownloaderD2Ev = comdat any

$_ZN5blink5mojom36ImageDownloaderInterceptorForTestingD0Ev = comdat any

$_ZNSt3__16vectorI8SkBitmapNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_ = comdat any

$_ZNSt3__16vectorIN3gfx4SizeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

@.str = private unnamed_addr constant [14 x i8] c"DownloadImage\00", align 1
@.str.1 = private unnamed_addr constant [89 x i8] c"gen/third_party/blink/public/mojom/image_downloader/image_downloader.mojom-test-utils.cc\00", align 1
@_ZTVN5blink5mojom36ImageDownloaderInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::ImageDownloader"*)* @_ZN5blink5mojom15ImageDownloaderD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::ImageDownloaderInterceptorForTesting"*)* @_ZN5blink5mojom36ImageDownloaderInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::ImageDownloaderInterceptorForTesting"*, %class.GURL*, i1, i32, i32, i1, %"class.base::OnceCallback"*)* @_ZN5blink5mojom36ImageDownloaderInterceptorForTesting13DownloadImageERK4GURLbjjbN4base12OnceCallbackIFviRKNSt3__16vectorI8SkBitmapNS7_9allocatorIS9_EEEERKNS8_IN3gfx4SizeENSA_ISG_EEEEEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5blink5mojom26ImageDownloaderAsyncWaiterC1EPNS0_15ImageDownloaderE = hidden unnamed_addr alias void (%"class.blink::mojom::ImageDownloaderAsyncWaiter"*, %"class.blink::mojom::ImageDownloader"*), void (%"class.blink::mojom::ImageDownloaderAsyncWaiter"*, %"class.blink::mojom::ImageDownloader"*)* @_ZN5blink5mojom26ImageDownloaderAsyncWaiterC2EPNS0_15ImageDownloaderE
@_ZN5blink5mojom26ImageDownloaderAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::ImageDownloaderAsyncWaiter"*), void (%"class.blink::mojom::ImageDownloaderAsyncWaiter"*)* @_ZN5blink5mojom26ImageDownloaderAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom36ImageDownloaderInterceptorForTesting13DownloadImageERK4GURLbjjbN4base12OnceCallbackIFviRKNSt3__16vectorI8SkBitmapNS7_9allocatorIS9_EEEERKNS8_IN3gfx4SizeENSA_ISG_EEEEEEE(%"class.blink::mojom::ImageDownloaderInterceptorForTesting"*, %class.GURL* dereferenceable(120), i1 zeroext, i32, i32, i1 zeroext, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = bitcast %"class.blink::mojom::ImageDownloaderInterceptorForTesting"* %0 to %"class.blink::mojom::ImageDownloader"* (%"class.blink::mojom::ImageDownloaderInterceptorForTesting"*)***
  %10 = load %"class.blink::mojom::ImageDownloader"* (%"class.blink::mojom::ImageDownloaderInterceptorForTesting"*)**, %"class.blink::mojom::ImageDownloader"* (%"class.blink::mojom::ImageDownloaderInterceptorForTesting"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.blink::mojom::ImageDownloader"* (%"class.blink::mojom::ImageDownloaderInterceptorForTesting"*)*, %"class.blink::mojom::ImageDownloader"* (%"class.blink::mojom::ImageDownloaderInterceptorForTesting"*)** %10, i64 3
  %12 = load %"class.blink::mojom::ImageDownloader"* (%"class.blink::mojom::ImageDownloaderInterceptorForTesting"*)*, %"class.blink::mojom::ImageDownloader"* (%"class.blink::mojom::ImageDownloaderInterceptorForTesting"*)** %11, align 8
  %13 = tail call %"class.blink::mojom::ImageDownloader"* %12(%"class.blink::mojom::ImageDownloaderInterceptorForTesting"* %0) #11
  %14 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.base::OnceCallback"* %6 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.base::OnceCallback"* %8 to i64*
  store i64 %16, i64* %17, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %14, align 8
  %18 = bitcast %"class.blink::mojom::ImageDownloader"* %13 to void (%"class.blink::mojom::ImageDownloader"*, %class.GURL*, i1, i32, i32, i1, %"class.base::OnceCallback"*)***
  %19 = load void (%"class.blink::mojom::ImageDownloader"*, %class.GURL*, i1, i32, i32, i1, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::ImageDownloader"*, %class.GURL*, i1, i32, i32, i1, %"class.base::OnceCallback"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::mojom::ImageDownloader"*, %class.GURL*, i1, i32, i32, i1, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::ImageDownloader"*, %class.GURL*, i1, i32, i32, i1, %"class.base::OnceCallback"*)** %19, i64 2
  %21 = load void (%"class.blink::mojom::ImageDownloader"*, %class.GURL*, i1, i32, i32, i1, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::ImageDownloader"*, %class.GURL*, i1, i32, i32, i1, %"class.base::OnceCallback"*)** %20, align 8
  call void %21(%"class.blink::mojom::ImageDownloader"* %13, %class.GURL* dereferenceable(120) %1, i1 zeroext %2, i32 %3, i32 %4, i1 zeroext %5, %"class.base::OnceCallback"* nonnull %8) #11
  %22 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom26ImageDownloaderAsyncWaiterC2EPNS0_15ImageDownloaderE(%"class.blink::mojom::ImageDownloaderAsyncWaiter"* nocapture, %"class.blink::mojom::ImageDownloader"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::ImageDownloaderAsyncWaiter", %"class.blink::mojom::ImageDownloaderAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::ImageDownloader"* %1, %"class.blink::mojom::ImageDownloader"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom26ImageDownloaderAsyncWaiterD2Ev(%"class.blink::mojom::ImageDownloaderAsyncWaiter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom26ImageDownloaderAsyncWaiter13DownloadImageERK4GURLbjjbPiPNSt3__16vectorI8SkBitmapNS6_9allocatorIS8_EEEEPNS7_IN3gfx4SizeENS9_ISE_EEEE(%"class.blink::mojom::ImageDownloaderAsyncWaiter"* nocapture readonly, %class.GURL* dereferenceable(120), i1 zeroext, i32, i32, i1 zeroext, i32*, %"class.std::__1::vector"*, %"class.std::__1::vector.17"*) local_unnamed_addr #0 align 2 {
  %10 = alloca %"class.base::RunLoop", align 8
  %11 = alloca %"class.base::OnceCallback", align 8
  %12 = alloca %"class.base::Location", align 8
  %13 = ptrtoint i32* %6 to i64
  %14 = ptrtoint %"class.std::__1::vector"* %7 to i64
  %15 = ptrtoint %"class.std::__1::vector.17"* %8 to i64
  %16 = bitcast %"class.base::RunLoop"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %16) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %10, i32 0) #11
  %17 = getelementptr inbounds %"class.blink::mojom::ImageDownloaderAsyncWaiter", %"class.blink::mojom::ImageDownloaderAsyncWaiter"* %0, i64 0, i32 0
  %18 = load %"class.blink::mojom::ImageDownloader"*, %"class.blink::mojom::ImageDownloader"** %17, align 8
  %19 = ptrtoint %"class.base::RunLoop"* %10 to i64
  %20 = call i8* @_Znwm(i64 72) #12, !noalias !2
  %21 = bitcast i8* %20 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %21, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"class.std::__1::vector"*, %"class.std::__1::vector.17"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom26ImageDownloaderAsyncWaiter13DownloadImageERK4GURLbjjbPiPNSt3__16vectorI8SkBitmapNSA_9allocatorISC_EEEEPNSB_IN3gfx4SizeENSD_ISI_EEEEE3$_0JPNS_7RunLoopES9_SG_SL_EEEFviRKSF_RKSK_EE7RunOnceEPNS0_13BindStateBaseEiSR_ST_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom26ImageDownloaderAsyncWaiter13DownloadImageERK4GURLbjjbPiPNSt3__16vectorI8SkBitmapNS9_9allocatorISB_EEEEPNSA_IN3gfx4SizeENSC_ISH_EEEEE3$_0JPNS_7RunLoopES8_SF_SK_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !2
  %22 = getelementptr inbounds i8, i8* %20, i64 40
  %23 = bitcast i8* %22 to i64*
  store i64 %19, i64* %23, align 8, !noalias !2
  %24 = getelementptr inbounds i8, i8* %20, i64 48
  %25 = bitcast i8* %24 to i64*
  store i64 %13, i64* %25, align 8, !noalias !2
  %26 = getelementptr inbounds i8, i8* %20, i64 56
  %27 = bitcast i8* %26 to i64*
  store i64 %14, i64* %27, align 8, !noalias !2
  %28 = getelementptr inbounds i8, i8* %20, i64 64
  %29 = bitcast i8* %28 to i64*
  store i64 %15, i64* %29, align 8, !noalias !2
  %30 = bitcast %"class.base::OnceCallback"* %11 to i8**
  store i8* %20, i8** %30, align 8, !alias.scope !2
  %31 = bitcast %"class.blink::mojom::ImageDownloader"* %18 to void (%"class.blink::mojom::ImageDownloader"*, %class.GURL*, i1, i32, i32, i1, %"class.base::OnceCallback"*)***
  %32 = load void (%"class.blink::mojom::ImageDownloader"*, %class.GURL*, i1, i32, i32, i1, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::ImageDownloader"*, %class.GURL*, i1, i32, i32, i1, %"class.base::OnceCallback"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::mojom::ImageDownloader"*, %class.GURL*, i1, i32, i32, i1, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::ImageDownloader"*, %class.GURL*, i1, i32, i32, i1, %"class.base::OnceCallback"*)** %32, i64 2
  %34 = load void (%"class.blink::mojom::ImageDownloader"*, %class.GURL*, i1, i32, i32, i1, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::ImageDownloader"*, %class.GURL*, i1, i32, i32, i1, %"class.base::OnceCallback"*)** %33, align 8
  call void %34(%"class.blink::mojom::ImageDownloader"* %18, %class.GURL* dereferenceable(120) %1, i1 zeroext %2, i32 %3, i32 %4, i1 zeroext %5, %"class.base::OnceCallback"* nonnull %11) #11
  %35 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %11, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %35) #11
  %36 = bitcast %"class.base::Location"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %12, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.1, i64 0, i64 0), i32 62) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %10, %"class.base::Location"* nonnull dereferenceable(32) %12) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %16) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom15ImageDownloaderD2Ev(%"class.blink::mojom::ImageDownloader"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom36ImageDownloaderInterceptorForTestingD0Ev(%"class.blink::mojom::ImageDownloaderInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom26ImageDownloaderAsyncWaiter13DownloadImageERK4GURLbjjbPiPNSt3__16vectorI8SkBitmapNSA_9allocatorISC_EEEEPNSB_IN3gfx4SizeENSD_ISI_EEEEE3$_0JPNS_7RunLoopES9_SG_SL_EEEFviRKSF_RKSK_EE7RunOnceEPNS0_13BindStateBaseEiSR_ST_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32, %"class.std::__1::vector"* readonly dereferenceable(24), %"class.std::__1::vector.17"* readonly dereferenceable(24)) #0 align 2 {
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast void ()** %5 to %"class.base::RunLoop"**
  %7 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %8 = bitcast void ()** %7 to i32**
  %9 = getelementptr inbounds void ()*, void ()** %5, i64 2
  %10 = bitcast void ()** %9 to %"class.std::__1::vector"**
  %11 = getelementptr inbounds void ()*, void ()** %5, i64 3
  %12 = bitcast void ()** %11 to %"class.std::__1::vector.17"**
  %13 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %6, align 8
  %14 = load i32*, i32** %8, align 8
  %15 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %10, align 8
  %16 = load %"class.std::__1::vector.17"*, %"class.std::__1::vector.17"** %12, align 8
  store i32 %1, i32* %14, align 4
  %17 = icmp eq %"class.std::__1::vector"* %15, %2
  br i1 %17, label %23, label %18

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %20 = load %class.SkBitmap*, %class.SkBitmap** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %22 = load %class.SkBitmap*, %class.SkBitmap** %21, align 8
  tail call void @_ZNSt3__16vectorI8SkBitmapNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector"* %15, %class.SkBitmap* %20, %class.SkBitmap* %22) #11
  br label %23

23:                                               ; preds = %18, %4
  %24 = icmp eq %"class.std::__1::vector.17"* %16, %3
  br i1 %24, label %30, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %3, i64 0, i32 0, i32 0
  %27 = load %"class.gfx::Size"*, %"class.gfx::Size"** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %3, i64 0, i32 0, i32 1
  %29 = load %"class.gfx::Size"*, %"class.gfx::Size"** %28, align 8
  tail call void @_ZNSt3__16vectorIN3gfx4SizeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.17"* %16, %"class.gfx::Size"* %27, %"class.gfx::Size"* %29) #11
  br label %30

30:                                               ; preds = %23, %25
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %13) #11
  ret void
}

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI8SkBitmapNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector"*, %class.SkBitmap*, %class.SkBitmap*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %class.SkBitmap* %2 to i64
  %5 = ptrtoint %class.SkBitmap* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 56
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %class.SkBitmap** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 56
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %class.SkBitmap*
  br i1 %15, label %59, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %class.SkBitmap** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 56
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 %22
  %25 = select i1 %23, %class.SkBitmap* %24, %class.SkBitmap* %2
  %26 = icmp eq %class.SkBitmap* %25, %1
  br i1 %26, label %34, label %27

27:                                               ; preds = %17, %27
  %28 = phi %class.SkBitmap* [ %32, %27 ], [ %16, %17 ]
  %29 = phi %class.SkBitmap* [ %31, %27 ], [ %1, %17 ]
  %30 = tail call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap* %28, %class.SkBitmap* dereferenceable(56) %29) #11
  %31 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %29, i64 1
  %32 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %28, i64 1
  %33 = icmp eq %class.SkBitmap* %31, %25
  br i1 %33, label %34, label %27

34:                                               ; preds = %27, %17
  %35 = phi %class.SkBitmap* [ %16, %17 ], [ %32, %27 ]
  br i1 %23, label %36, label %51

36:                                               ; preds = %34
  %37 = load i64, i64* %19, align 8
  %38 = icmp eq %class.SkBitmap* %25, %2
  br i1 %38, label %49, label %39

39:                                               ; preds = %36
  %40 = inttoptr i64 %37 to %class.SkBitmap*
  br label %41

41:                                               ; preds = %41, %39
  %42 = phi %class.SkBitmap* [ %45, %41 ], [ %40, %39 ]
  %43 = phi %class.SkBitmap* [ %44, %41 ], [ %24, %39 ]
  tail call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* %42, %class.SkBitmap* dereferenceable(56) %43) #11
  %44 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %43, i64 1
  %45 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %42, i64 1
  %46 = icmp eq %class.SkBitmap* %44, %2
  br i1 %46, label %47, label %41

47:                                               ; preds = %41
  %48 = ptrtoint %class.SkBitmap* %45 to i64
  br label %49

49:                                               ; preds = %36, %47
  %50 = phi i64 [ %37, %36 ], [ %48, %47 ]
  store i64 %50, i64* %19, align 8
  br label %110

51:                                               ; preds = %34
  %52 = load %class.SkBitmap*, %class.SkBitmap** %18, align 8
  %53 = icmp eq %class.SkBitmap* %52, %35
  br i1 %53, label %58, label %54

54:                                               ; preds = %51, %54
  %55 = phi %class.SkBitmap* [ %56, %54 ], [ %52, %51 ]
  %56 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %55, i64 -1
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %56) #11
  %57 = icmp eq %class.SkBitmap* %56, %35
  br i1 %57, label %58, label %54

58:                                               ; preds = %54, %51
  store %class.SkBitmap* %35, %class.SkBitmap** %18, align 8
  br label %110

59:                                               ; preds = %3
  %60 = icmp eq i64 %12, 0
  br i1 %60, label %76, label %61

61:                                               ; preds = %59
  %62 = inttoptr i64 %12 to i8*
  %63 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %64 = load %class.SkBitmap*, %class.SkBitmap** %63, align 8
  %65 = icmp eq %class.SkBitmap* %64, %16
  br i1 %65, label %73, label %66

66:                                               ; preds = %61, %66
  %67 = phi %class.SkBitmap* [ %68, %66 ], [ %64, %61 ]
  %68 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %67, i64 -1
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %68) #11
  %69 = icmp eq %class.SkBitmap* %68, %16
  br i1 %69, label %70, label %66

70:                                               ; preds = %66
  %71 = bitcast %"class.std::__1::vector"* %0 to i8**
  %72 = load i8*, i8** %71, align 8
  br label %73

73:                                               ; preds = %70, %61
  %74 = phi i8* [ %72, %70 ], [ %62, %61 ]
  store %class.SkBitmap* %16, %class.SkBitmap** %63, align 8
  tail call void @_ZdlPv(i8* %74) #12
  %75 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 24, i1 false) #11
  br label %76

76:                                               ; preds = %59, %73
  %77 = phi i64 [ %10, %59 ], [ 0, %73 ]
  %78 = icmp ugt i64 %7, 329406144173384850
  br i1 %78, label %79, label %81

79:                                               ; preds = %76
  %80 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %80) #13
  unreachable

81:                                               ; preds = %76
  %82 = sdiv exact i64 %77, 56
  %83 = icmp ult i64 %82, 164703072086692425
  br i1 %83, label %84, label %88

84:                                               ; preds = %81
  %85 = shl nsw i64 %82, 1
  %86 = icmp ult i64 %85, %7
  %87 = select i1 %86, i64 %7, i64 %85
  br label %88

88:                                               ; preds = %84, %81
  %89 = phi i64 [ %87, %84 ], [ 329406144173384850, %81 ]
  %90 = mul i64 %89, 56
  %91 = tail call i8* @_Znwm(i64 %90) #12
  %92 = bitcast i8* %91 to %class.SkBitmap*
  %93 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %94 = bitcast %class.SkBitmap** %93 to i8**
  store i8* %91, i8** %94, align 8
  %95 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %91, i8** %95, align 8
  %96 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %92, i64 %89
  store %class.SkBitmap* %96, %class.SkBitmap** %8, align 8
  %97 = bitcast %class.SkBitmap** %93 to i64*
  %98 = ptrtoint i8* %91 to i64
  %99 = icmp eq %class.SkBitmap* %1, %2
  br i1 %99, label %108, label %100

100:                                              ; preds = %88, %100
  %101 = phi %class.SkBitmap* [ %104, %100 ], [ %92, %88 ]
  %102 = phi %class.SkBitmap* [ %103, %100 ], [ %1, %88 ]
  tail call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* %101, %class.SkBitmap* dereferenceable(56) %102) #11
  %103 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %102, i64 1
  %104 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %101, i64 1
  %105 = icmp eq %class.SkBitmap* %103, %2
  br i1 %105, label %106, label %100

106:                                              ; preds = %100
  %107 = ptrtoint %class.SkBitmap* %104 to i64
  br label %108

108:                                              ; preds = %88, %106
  %109 = phi i64 [ %98, %88 ], [ %107, %106 ]
  store i64 %109, i64* %97, align 8
  br label %110

110:                                              ; preds = %49, %58, %108
  ret void
}

declare dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #5

declare void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3gfx4SizeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.17"*, %"class.gfx::Size"*, %"class.gfx::Size"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.gfx::Size"* %2 to i64
  %5 = ptrtoint %"class.gfx::Size"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.gfx::Size"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.17"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.gfx::Size"*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.gfx::Size"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 %22
  %25 = select i1 %23, %"class.gfx::Size"* %24, %"class.gfx::Size"* %2
  %26 = ptrtoint %"class.gfx::Size"* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"class.gfx::Size"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #11
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 3
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast %"class.gfx::Size"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #11
  %42 = inttoptr i64 %35 to %"class.gfx::Size"*
  %43 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %42, i64 %39
  %44 = ptrtoint %"class.gfx::Size"* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %16, i64 %28
  store %"class.gfx::Size"* %48, %"class.gfx::Size"** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %"class.gfx::Size"** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #12
  %55 = bitcast %"class.std::__1::vector.17"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #11
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.17"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #13
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 2
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.17"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #13
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 2305843009213693951, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 3
  %74 = tail call i8* @_Znwm(i64 %73) #12
  %75 = bitcast i8* %74 to %"class.gfx::Size"*
  %76 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 1
  %77 = bitcast %"class.gfx::Size"** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.17"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %75, i64 %72
  store %"class.gfx::Size"* %79, %"class.gfx::Size"** %8, align 8
  %80 = bitcast %"class.gfx::Size"** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 3
  %85 = bitcast %"class.gfx::Size"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #11
  %86 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %75, i64 %84
  %87 = ptrtoint %"class.gfx::Size"* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom26ImageDownloaderAsyncWaiter13DownloadImageERK4GURLbjjbPiPNSt3__16vectorI8SkBitmapNS9_9allocatorISB_EEEEPNSA_IN3gfx4SizeENSC_ISH_EEEEE3$_0JPNS_7RunLoopES8_SF_SK_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom26ImageDownloaderAsyncWaiter13DownloadImageERK4GURLbjjbPiPNSt3__16vectorI8SkBitmapNSA_9allocatorISC_EEEEPNSB_IN3gfx4SizeENSD_ISI_EEEEE3$_0JPNS_7RunLoopERS9_RSG_RSL_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom26ImageDownloaderAsyncWaiter13DownloadImageERK4GURLbjjbPiPNSt3__16vectorI8SkBitmapNSA_9allocatorISC_EEEEPNSB_IN3gfx4SizeENSD_ISI_EEEEE3$_0JPNS_7RunLoopERS9_RSG_RSL_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIZN5blink5mojom26ImageDownloaderAsyncWaiter13DownloadImageERK4GURLbjjbPiPNSt3__16vectorI8SkBitmapNS8_9allocatorISA_EEEEPNS9_IN3gfx4SizeENSB_ISG_EEEEE3$_0JPNS_7RunLoopERS7_RSE_RSJ_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOST_DpOSU_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIZN5blink5mojom26ImageDownloaderAsyncWaiter13DownloadImageERK4GURLbjjbPiPNSt3__16vectorI8SkBitmapNS8_9allocatorISA_EEEEPNS9_IN3gfx4SizeENSB_ISG_EEEEE3$_0JPNS_7RunLoopERS7_RSE_RSJ_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOST_DpOSU_"}
