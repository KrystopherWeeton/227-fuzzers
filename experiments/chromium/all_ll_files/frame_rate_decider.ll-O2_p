; ModuleID = '../../components/viz/service/display/frame_rate_decider.cc'
source_filename = "../../components/viz/service/display/frame_rate_decider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.viz::FrameRateDecider::ScopedAggregate" = type { %"class.viz::FrameRateDecider"* }
%"class.viz::FrameRateDecider" = type <{ %"class.viz::SurfaceObserver", i8, [7 x i8], %"class.base::flat_map", %"class.base::internal::flat_tree.1", %"class.base::internal::flat_tree.1", %"class.base::flat_map", %"class.std::__1::vector.9", i64, %"class.base::TimeDelta", %"class.base::TimeDelta", i64, %"class.base::TimeDelta", %"class.viz::SurfaceManager"*, %"class.viz::FrameRateDecider::Client"*, i8, i8, [6 x i8] }>
%"class.viz::SurfaceObserver" = type { i32 (...)** }
%"class.base::internal::flat_tree.1" = type { %"class.std::__1::vector.2" }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"*, %"class.std::__1::__compressed_pair.4" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.viz::FrameSinkId"* }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type { %"class.viz::SurfaceId", i64 }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.base::TimeDelta"*, %"class.base::TimeDelta"*, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.base::TimeDelta"* }
%"class.base::TimeDelta" = type { i64 }
%"class.viz::SurfaceManager" = type { %"class.viz::SurfaceManagerDelegate"*, %"class.absl::optional", %"class.base::flat_map.16", %"class.base::flat_map.26", %"class.base::flat_map.36", %"class.base::ObserverList", %"class.base::ThreadChecker", %"class.base::internal::flat_tree.53", %"class.viz::SurfaceId", %"class.base::internal::flat_tree.53", %"class.base::TickClock"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.79", %"class.std::__1::unordered_map.103", %"class.absl::optional.129", i8, %"class.base::WeakPtrFactory.148" }
%"class.viz::SurfaceManagerDelegate" = type opaque
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.base::flat_map.16" = type { %"class.base::internal::flat_tree.17" }
%"class.base::internal::flat_tree.17" = type { %"class.std::__1::vector.18" }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { %"struct.std::__1::pair.20"*, %"struct.std::__1::pair.20"*, %"class.std::__1::__compressed_pair.21" }
%"struct.std::__1::pair.20" = type opaque
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.std::__1::pair.20"* }
%"class.base::flat_map.26" = type { %"class.base::internal::flat_tree.27" }
%"class.base::internal::flat_tree.27" = type { %"class.std::__1::vector.28" }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { %"struct.std::__1::pair.30"*, %"struct.std::__1::pair.30"*, %"class.std::__1::__compressed_pair.31" }
%"struct.std::__1::pair.30" = type opaque
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.std::__1::pair.30"* }
%"class.base::flat_map.36" = type { %"class.base::internal::flat_tree.37" }
%"class.base::internal::flat_tree.37" = type { %"class.std::__1::vector.38" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.std::__1::pair.40"*, %"struct.std::__1::pair.40"*, %"class.std::__1::__compressed_pair.41" }
%"struct.std::__1::pair.40" = type opaque
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.std::__1::pair.40"* }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.46", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.48" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::internal::flat_tree.53" = type { %"class.std::__1::vector.54" }
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"*, %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.viz::SurfaceId"* }
%"class.base::TickClock" = type opaque
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.69", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.76", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62", %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { i64 }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { float }
%"class.std::__1::unordered_map.79" = type { %"class.std::__1::__hash_table.80" }
%"class.std::__1::__hash_table.80" = type <{ %"class.std::__1::unique_ptr.81", %"class.std::__1::__compressed_pair.91", %"class.std::__1::__compressed_pair.96", %"class.std::__1::__compressed_pair.99", [4 x i8] }>
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83", %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"struct.std::__1::__hash_node_base.84"** }
%"struct.std::__1::__hash_node_base.84" = type { %"struct.std::__1::__hash_node_base.84"* }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__bucket_list_deallocator.86" }
%"class.std::__1::__bucket_list_deallocator.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"struct.std::__1::__hash_node_base.84" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"class.std::__1::unordered_map.103" = type { %"class.std::__1::__hash_table.104" }
%"class.std::__1::__hash_table.104" = type <{ %"class.std::__1::unique_ptr.105", %"class.std::__1::__compressed_pair.115", %"class.std::__1::__compressed_pair.120", %"class.std::__1::__compressed_pair.123", [4 x i8] }>
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107", %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::__hash_node_base.108"** }
%"struct.std::__1::__hash_node_base.108" = type { %"struct.std::__1::__hash_node_base.108"* }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.std::__1::__bucket_list_deallocator.110" }
%"class.std::__1::__bucket_list_deallocator.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.std::__1::__hash_node_base.108" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"class.absl::optional.129" = type { %"class.absl::optional_internal::optional_data.130" }
%"class.absl::optional_internal::optional_data.130" = type { %"class.absl::optional_internal::optional_data_base.131" }
%"class.absl::optional_internal::optional_data_base.131" = type { %"class.absl::optional_internal::optional_data_dtor_base.132" }
%"class.absl::optional_internal::optional_data_dtor_base.132" = type { i8, %union.anon.133 }
%union.anon.133 = type { %"class.base::RepeatingTimer" }
%"class.base::RepeatingTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.134" }
%"struct.std::__1::__atomic_base.134" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.135 }
%class.scoped_refptr.135 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.136", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.136" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.137" }
%"struct.std::__1::atomic.137" = type { %"struct.std::__1::__atomic_base.138" }
%"struct.std::__1::__atomic_base.138" = type { %"struct.std::__1::__atomic_base.139" }
%"struct.std::__1::__atomic_base.139" = type { %"struct.std::__1::__cxx_atomic_impl.140" }
%"struct.std::__1::__cxx_atomic_impl.140" = type { %"struct.std::__1::__cxx_atomic_base_impl.141" }
%"struct.std::__1::__cxx_atomic_base_impl.141" = type { i8 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.142 }
%class.scoped_refptr.142 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.143", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.143" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.148" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.viz::FrameRateDecider::Client" = type { i32 (...)** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__less.387" = type { i8 }
%"class.absl::optional.198" = type { %"class.absl::optional_internal::optional_data.199" }
%"class.absl::optional_internal::optional_data.199" = type { %"class.absl::optional_internal::optional_data_base.200" }
%"class.absl::optional_internal::optional_data_base.200" = type { %"class.absl::optional_internal::optional_data_dtor_base.201" }
%"class.absl::optional_internal::optional_data_dtor_base.201" = type { i8, %union.anon.202 }
%union.anon.202 = type { %"class.base::TimeDelta" }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.viz::Surface" = type { %"class.viz::SurfaceInfo", %"class.viz::SurfaceId", %"class.viz::SurfaceManager"*, %"class.base::WeakPtr", %"class.std::__1::unique_ptr.150", %"class.absl::optional.159", %"class.absl::optional.159", %"class.absl::optional.316", i8, i8, %"class.base::internal::flat_tree.53", %"class.std::__1::vector.54", %"class.base::internal::flat_tree.321", %"class.base::internal::flat_tree.53", %"class.base::internal::flat_tree.321", i8, i8, %"class.viz::SurfaceAllocationGroup"*, %"class.viz::SurfaceSavedFrameStorage", i8, %"class.base::WeakPtrFactory.356" }
%"class.viz::SurfaceInfo" = type <{ %"class.viz::SurfaceId", float, %"class.gfx::Size", [4 x i8] }>
%"class.gfx::Size" = type { i32, i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.149 }
%class.scoped_refptr.149 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.viz::SurfaceDependencyDeadline"* }
%"class.viz::SurfaceDependencyDeadline" = type { %"class.base::TickClock"*, %"class.base::TimeTicks", %"class.absl::optional.153" }
%"class.absl::optional.153" = type { %"class.absl::optional_internal::optional_data.154" }
%"class.absl::optional_internal::optional_data.154" = type { %"class.absl::optional_internal::optional_data_base.155" }
%"class.absl::optional_internal::optional_data_base.155" = type { %"class.absl::optional_internal::optional_data_dtor_base.156" }
%"class.absl::optional_internal::optional_data_dtor_base.156" = type { i8, %union.anon.157 }
%union.anon.157 = type { %"class.base::TimeTicks" }
%"class.absl::optional.159" = type { %"class.absl::optional_internal::optional_data.160" }
%"class.absl::optional_internal::optional_data.160" = type { %"class.absl::optional_internal::optional_data_base.161" }
%"class.absl::optional_internal::optional_data_base.161" = type { %"class.absl::optional_internal::optional_data_dtor_base.162" }
%"class.absl::optional_internal::optional_data_dtor_base.162" = type { i8, [7 x i8], %union.anon.163 }
%union.anon.163 = type { %"struct.viz::Surface::FrameData" }
%"struct.viz::Surface::FrameData" = type <{ %"class.viz::CompositorFrame", i64, i8, i8, i8, [5 x i8] }>
%"class.viz::CompositorFrame" = type { %"class.viz::CompositorFrameMetadata", %"class.std::__1::vector.223", %"class.std::__1::vector.244" }
%"class.viz::CompositorFrameMetadata" = type { float, %"class.gfx::Vector2dF", float, %"class.gfx::SizeF", i8, i8, i8, i32, %"class.std::__1::vector.164", %"class.std::__1::vector.181", %"class.std::__1::vector.54", %"class.viz::FrameDeadline", %"struct.viz::BeginFrameAck", i32, i8, float, %"class.absl::optional.193", %"class.absl::optional.198", i32, %"class.std::__1::unique_ptr.203", %"class.std::__1::vector.209" }
%"class.gfx::Vector2dF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.164" = type { %"class.std::__1::__vector_base.165" }
%"class.std::__1::__vector_base.165" = type { %"class.ui::LatencyInfo"*, %"class.ui::LatencyInfo"*, %"class.std::__1::__compressed_pair.176" }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map.166", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map.166" = type { %"class.base::internal::flat_tree.167" }
%"class.base::internal::flat_tree.167" = type { %"class.std::__1::vector.168" }
%"class.std::__1::vector.168" = type { %"class.std::__1::__vector_base.169" }
%"class.std::__1::__vector_base.169" = type { %"struct.std::__1::pair.170"*, %"struct.std::__1::pair.170"*, %"class.std::__1::__compressed_pair.171" }
%"struct.std::__1::pair.170" = type { i32, %"class.base::TimeTicks" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"struct.std::__1::pair.170"* }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.ui::LatencyInfo"* }
%"class.std::__1::vector.181" = type { %"class.std::__1::__vector_base.182" }
%"class.std::__1::__vector_base.182" = type { %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"*, %"class.std::__1::__compressed_pair.188" }
%"class.viz::SurfaceRange" = type { %"class.absl::optional.183", %"class.viz::SurfaceId" }
%"class.absl::optional.183" = type { %"class.absl::optional_internal::optional_data.184" }
%"class.absl::optional_internal::optional_data.184" = type { %"class.absl::optional_internal::optional_data_base.185" }
%"class.absl::optional_internal::optional_data_base.185" = type { %"class.absl::optional_internal::optional_data_dtor_base.186" }
%"class.absl::optional_internal::optional_data_dtor_base.186" = type { i8, %union.anon.187 }
%union.anon.187 = type { %"class.viz::SurfaceId" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.viz::SurfaceRange"* }
%"class.viz::FrameDeadline" = type <{ %"class.base::TimeTicks", i32, [4 x i8], %"class.base::TimeDelta", i8, [7 x i8] }>
%"struct.viz::BeginFrameAck" = type <{ %"struct.viz::BeginFrameId", i64, i8, [7 x i8] }>
%"struct.viz::BeginFrameId" = type { i64, i64 }
%"class.absl::optional.193" = type { %"class.absl::optional_internal::optional_data.194" }
%"class.absl::optional_internal::optional_data.194" = type { %"class.absl::optional_internal::optional_data_base.195" }
%"class.absl::optional_internal::optional_data_base.195" = type { %"class.absl::optional_internal::optional_data_dtor_base.196" }
%"class.absl::optional_internal::optional_data_dtor_base.196" = type { i8, %union.anon.197 }
%union.anon.197 = type { float }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.gfx::PointF" = type { float, float }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.std::__1::vector.209" = type { %"class.std::__1::__vector_base.210" }
%"class.std::__1::__vector_base.210" = type { %"class.viz::CompositorFrameTransitionDirective"*, %"class.viz::CompositorFrameTransitionDirective"*, %"class.std::__1::__compressed_pair.218" }
%"class.viz::CompositorFrameTransitionDirective" = type { i32, i32, i32, %"class.std::__1::vector.211" }
%"class.std::__1::vector.211" = type { %"class.std::__1::__vector_base.212" }
%"class.std::__1::__vector_base.212" = type { %"class.util::IdType"*, %"class.util::IdType"*, %"class.std::__1::__compressed_pair.213" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.util::IdType"* }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.viz::CompositorFrameTransitionDirective"* }
%"class.std::__1::vector.223" = type { %"class.std::__1::__vector_base.224" }
%"class.std::__1::__vector_base.224" = type { %"struct.viz::TransferableResource"*, %"struct.viz::TransferableResource"*, %"class.std::__1::__compressed_pair.239" }
%"struct.viz::TransferableResource" = type { %"class.util::IdType.225", i8, %"class.gfx::Size", i32, [4 x i8], %"struct.gpu::MailboxHolder", %"class.gfx::ColorSpace", %"class.absl::optional.229", i8, i32, i8, [7 x i8], %"class.absl::optional.234" }
%"class.util::IdType.225" = type { %"class.base::StrongAlias.226" }
%"class.base::StrongAlias.226" = type { i32 }
%"struct.gpu::MailboxHolder" = type <{ %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", i32, [4 x i8] }>
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"struct.gpu::SyncToken" = type { i8, i8, %"class.util::IdType.227", i64 }
%"class.util::IdType.227" = type { %"class.base::StrongAlias.228" }
%"class.base::StrongAlias.228" = type { i64 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.229" = type { %"class.absl::optional_internal::optional_data.230" }
%"class.absl::optional_internal::optional_data.230" = type { %"class.absl::optional_internal::optional_data_base.231" }
%"class.absl::optional_internal::optional_data_base.231" = type { %"class.absl::optional_internal::optional_data_dtor_base.232" }
%"class.absl::optional_internal::optional_data_dtor_base.232" = type { i8, %union.anon.233 }
%union.anon.233 = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.absl::optional.234" = type { %"class.absl::optional_internal::optional_data.235" }
%"class.absl::optional_internal::optional_data.235" = type { %"class.absl::optional_internal::optional_data_base.236" }
%"class.absl::optional_internal::optional_data_base.236" = type { %"class.absl::optional_internal::optional_data_dtor_base.237" }
%"class.absl::optional_internal::optional_data_dtor_base.237" = type { i8, [7 x i8], %union.anon.238 }
%union.anon.238 = type { %"struct.gpu::VulkanYCbCrInfo" }
%"struct.gpu::VulkanYCbCrInfo" = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"struct.viz::TransferableResource"* }
%"class.std::__1::vector.244" = type { %"class.std::__1::__vector_base.245" }
%"class.std::__1::__vector_base.245" = type { %"class.std::__1::unique_ptr.246"*, %"class.std::__1::unique_ptr.246"*, %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.viz::CompositorRenderPass"* }
%"class.viz::CompositorRenderPass" = type <{ %"class.viz::RenderPassInternal", %"class.util::IdType", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [4 x i8] }>
%"class.viz::RenderPassInternal" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Transform", %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.269", i8, i8, i8, i8, %"class.std::__1::vector.274", %"class.viz::QuadList", %"class.cc::ListContainer.303" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.249" }
%"class.std::__1::vector.249" = type { %"class.std::__1::__vector_base.250" }
%"class.std::__1::__vector_base.250" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.264" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.257", i32, [4 x i8] }>
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.251, i32, %"class.absl::optional.252", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.251 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.252" = type { %"class.absl::optional_internal::optional_data.253" }
%"class.absl::optional_internal::optional_data.253" = type { %"class.absl::optional_internal::optional_data_base.254" }
%"class.absl::optional_internal::optional_data_base.254" = type { %"class.absl::optional_internal::optional_data_dtor_base.255" }
%"class.absl::optional_internal::optional_data_dtor_base.255" = type { i8, %union.anon.256 }
%union.anon.256 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.257" = type { %"class.std::__1::__vector_base.258" }
%"class.std::__1::__vector_base.258" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.269" = type { %"class.absl::optional_internal::optional_data.270" }
%"class.absl::optional_internal::optional_data.270" = type { %"class.absl::optional_internal::optional_data_base.271" }
%"class.absl::optional_internal::optional_data_base.271" = type { %"class.absl::optional_internal::optional_data_dtor_base.272" }
%"class.absl::optional_internal::optional_data_dtor_base.272" = type { i8, %union.anon.273 }
%union.anon.273 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.std::__1::vector.274" = type { %"class.std::__1::__vector_base.275" }
%"class.std::__1::__vector_base.275" = type { %"class.std::__1::unique_ptr.276"*, %"class.std::__1::unique_ptr.276"*, %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.viz::CopyOutputRequest"* }
%"class.viz::CopyOutputRequest" = type { i8, %"class.base::OnceCallback", %class.scoped_refptr, %"class.gfx::Vector2d", %"class.gfx::Vector2d", %"class.absl::optional.279", %"class.absl::optional.284", %"class.absl::optional.284" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.absl::optional.279" = type { %"class.absl::optional_internal::optional_data.280" }
%"class.absl::optional_internal::optional_data.280" = type { %"class.absl::optional_internal::optional_data_base.281" }
%"class.absl::optional_internal::optional_data_base.281" = type { %"class.absl::optional_internal::optional_data_dtor_base.282" }
%"class.absl::optional_internal::optional_data_dtor_base.282" = type { i8, %union.anon.283 }
%union.anon.283 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.284" = type { %"class.absl::optional_internal::optional_data.285" }
%"class.absl::optional_internal::optional_data.285" = type { %"class.absl::optional_internal::optional_data_base.286" }
%"class.absl::optional_internal::optional_data_base.286" = type { %"class.absl::optional_internal::optional_data_dtor_base.287" }
%"class.absl::optional_internal::optional_data_dtor_base.287" = type { i8, %union.anon.288 }
%union.anon.288 = type { %"class.gfx::Rect" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"class.std::__1::unique_ptr.276"* }
%"class.viz::QuadList" = type { %"class.cc::ListContainer" }
%"class.cc::ListContainer" = type { %"class.cc::ListContainerHelper" }
%"class.cc::ListContainerHelper" = type { %"class.std::__1::unique_ptr.297" }
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.cc::ListContainerHelper::CharAllocator"* }
%"class.cc::ListContainerHelper::CharAllocator" = type opaque
%"class.cc::ListContainer.303" = type { %"class.cc::ListContainerHelper" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.std::__1::unique_ptr.246"* }
%"class.absl::optional.316" = type { %"class.absl::optional_internal::optional_data.317" }
%"class.absl::optional_internal::optional_data.317" = type { %"class.absl::optional_internal::optional_data_base.318" }
%"class.absl::optional_internal::optional_data_base.318" = type { %"class.absl::optional_internal::optional_data_dtor_base.319" }
%"class.absl::optional_internal::optional_data_dtor_base.319" = type { i8, %union.anon.320 }
%union.anon.320 = type { %"class.viz::CompositorFrame" }
%"class.base::internal::flat_tree.321" = type { %"class.std::__1::vector.322" }
%"class.std::__1::vector.322" = type { %"class.std::__1::__vector_base.323" }
%"class.std::__1::__vector_base.323" = type { %"class.viz::SurfaceAllocationGroup"**, %"class.viz::SurfaceAllocationGroup"**, %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.viz::SurfaceAllocationGroup"** }
%"class.viz::SurfaceAllocationGroup" = type opaque
%"class.viz::SurfaceSavedFrameStorage" = type { %"class.viz::Surface"*, %"class.base::internal::CancelableCallbackImpl", %"class.std::__1::unique_ptr.331" }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::OnceCallback.329", %"class.base::WeakPtrFactory.330" }
%"class.base::OnceCallback.329" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.330" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.331" = type { %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"class.viz::SurfaceSavedFrame"* }
%"class.viz::SurfaceSavedFrame" = type { %"class.viz::CompositorFrameTransitionDirective", %"class.base::OnceCallback.334", %"class.absl::optional.335", i64, i64, %"class.base::WeakPtrFactory.352" }
%"class.base::OnceCallback.334" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.335" = type { %"class.absl::optional_internal::optional_data.336" }
%"class.absl::optional_internal::optional_data.336" = type { %"class.absl::optional_internal::optional_data_base.337" }
%"class.absl::optional_internal::optional_data_base.337" = type { %"class.absl::optional_internal::optional_data_dtor_base.338" }
%"class.absl::optional_internal::optional_data_dtor_base.338" = type { i8, %union.anon.339 }
%union.anon.339 = type { %"struct.viz::SurfaceSavedFrame::FrameResult" }
%"struct.viz::SurfaceSavedFrame::FrameResult" = type { %"struct.viz::SurfaceSavedFrame::OutputCopyResult", %"class.std::__1::vector.344" }
%"struct.viz::SurfaceSavedFrame::OutputCopyResult" = type { %"struct.gpu::Mailbox", %"struct.gpu::SyncToken", %class.SkBitmap, %"struct.viz::SurfaceSavedFrame::RenderPassDrawData", i8, %"class.base::OnceCallback.343" }
%class.SkBitmap = type { %class.sk_sp.340, %class.SkPixmap, %class.sk_sp.342 }
%class.sk_sp.340 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.341, i32, i32 }
%class.sk_sp.341 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.137" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.342 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"struct.viz::SurfaceSavedFrame::RenderPassDrawData" = type { %"class.gfx::Rect", %"class.gfx::Transform", float }
%"class.base::OnceCallback.343" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector.344" = type { %"class.std::__1::__vector_base.345" }
%"class.std::__1::__vector_base.345" = type { %"class.absl::optional.346"*, %"class.absl::optional.346"*, %"class.std::__1::__compressed_pair.347" }
%"class.absl::optional.346" = type opaque
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"class.absl::optional.346"* }
%"class.base::WeakPtrFactory.352" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtrFactory.356" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.370", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.370" = type { %"class.std::__1::__vector_base.371" }
%"class.std::__1::__vector_base.371" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.372", i64, i64 }
%"class.std::__1::unique_ptr.372" = type { %"class.std::__1::__compressed_pair.373" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.374" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.383" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.390 }
%union.anon.390 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.viz::BeginFrameArgs" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.viz::BeginFrameId", i64, i32, i8, i8, i64 }
%"struct.std::__1::__split_buffer.420" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.421" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.422" }
%"struct.std::__1::__compressed_pair_elem.422" = type { %"class.std::__1::allocator"* }
%"class.std::__1::allocator" = type { i8 }
%"struct.std::__1::__split_buffer.426" = type { %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"*, %"class.std::__1::__compressed_pair.427" }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.5", %"struct.std::__1::__compressed_pair_elem.428" }
%"struct.std::__1::__compressed_pair_elem.428" = type { %"class.std::__1::allocator.7"* }
%"class.std::__1::allocator.7" = type { i8 }

$_ZN4base8flat_mapIN3viz9SurfaceIdEmNSt3__14lessIvEENS3_6vectorINS3_4pairIS2_mEENS3_9allocatorIS8_EEEEEixERKS2_ = comdat any

$_ZN20trace_event_internal13AddTraceEventIdEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_ = comdat any

$_ZNK4base9TimeDeltamiES0_ = comdat any

$_ZN3viz15SurfaceObserver24OnFirstSurfaceActivationERKNS_11SurfaceInfoE = comdat any

$_ZN3viz15SurfaceObserver18OnSurfaceActivatedERKNS_9SurfaceIdE = comdat any

$_ZN3viz15SurfaceObserver29OnSurfaceMarkedForDestructionERKNS_9SurfaceIdE = comdat any

$_ZN3viz15SurfaceObserver18OnSurfaceDestroyedERKNS_9SurfaceIdE = comdat any

$_ZN3viz15SurfaceObserver23OnSurfaceDamageExpectedERKNS_9SurfaceIdERKNS_14BeginFrameArgsE = comdat any

$_ZN3viz15SurfaceObserver23OnAddedSurfaceReferenceERKNS_9SurfaceIdES3_ = comdat any

$_ZN3viz15SurfaceObserver25OnRemovedSurfaceReferenceERKNS_9SurfaceIdES3_ = comdat any

$_ZNSt3__16__sortIRNS_6__lessIN4base9TimeDeltaES3_EEPS3_EEvT0_S7_T_ = comdat any

$_ZNSt3__17__sort5IRNS_6__lessIN4base9TimeDeltaES3_EEPS3_EEjT0_S7_S7_S7_S7_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN4base9TimeDeltaES3_EEPS3_EEbT0_S7_T_ = comdat any

$_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_mEENS5_9allocatorISA_EEEEE11equal_rangeIS3_EENS9_INS5_11__wrap_iterIPKSA_EESJ_EERKT_ = comdat any

$_ZNSt3__16vectorINS_4pairIN3viz9SurfaceIdEmEENS_9allocatorIS4_EEE7emplaceIJRKS3_mEEENS_11__wrap_iterIPS4_EENSB_IPKS4_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairIN3viz9SurfaceIdEmEERNS_9allocatorIS4_EEE12emplace_backIJRKS3_mEEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN3viz11FrameSinkIdENS_9allocatorIS2_EEE7emplaceIJRKS2_EEENS_11__wrap_iterIPS2_EENS9_IPS7_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIN3viz11FrameSinkIdERNS_9allocatorIS2_EEE12emplace_backIJRKS2_EEEvDpOT_ = comdat any

@_ZTVN3viz16FrameRateDeciderE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.viz::FrameRateDecider"*)* @_ZN3viz16FrameRateDeciderD2Ev to i8*), i8* bitcast (void (%"class.viz::FrameRateDecider"*)* @_ZN3viz16FrameRateDeciderD0Ev to i8*), i8* bitcast (void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceInfo"*)* @_ZN3viz15SurfaceObserver24OnFirstSurfaceActivationERKNS_11SurfaceInfoE to i8*), i8* bitcast (void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*)* @_ZN3viz15SurfaceObserver18OnSurfaceActivatedERKNS_9SurfaceIdE to i8*), i8* bitcast (void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*)* @_ZN3viz15SurfaceObserver29OnSurfaceMarkedForDestructionERKNS_9SurfaceIdE to i8*), i8* bitcast (void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*)* @_ZN3viz15SurfaceObserver18OnSurfaceDestroyedERKNS_9SurfaceIdE to i8*), i8* bitcast (i1 (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*, %"struct.viz::BeginFrameAck"*)* @_ZN3viz15SurfaceObserver16OnSurfaceDamagedERKNS_9SurfaceIdERKNS_13BeginFrameAckE to i8*), i8* bitcast (void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*, %"struct.viz::BeginFrameArgs"*)* @_ZN3viz15SurfaceObserver23OnSurfaceDamageExpectedERKNS_9SurfaceIdERKNS_14BeginFrameArgsE to i8*), i8* bitcast (void (%"class.viz::FrameRateDecider"*, %"class.viz::Surface"*)* @_ZN3viz16FrameRateDecider20OnSurfaceWillBeDrawnEPNS_7SurfaceE to i8*), i8* bitcast (void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"*)* @_ZN3viz15SurfaceObserver23OnAddedSurfaceReferenceERKNS_9SurfaceIdES3_ to i8*), i8* bitcast (void (%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"*, %"class.viz::SurfaceId"*)* @_ZN3viz15SurfaceObserver25OnRemovedSurfaceReferenceERKNS_9SurfaceIdES3_ to i8*)] }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [90 x i8] c"FrameRateDecider::UpdatePreferredFrameIntervalIfNeeded - not enough frame sinks to toggle\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"FrameRateDecider::UpdatePreferredFrameIntervalIfNeeded\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"min_frame_sink_interval\00", align 1
@.str.3 = private unnamed_addr constant [39 x i8] c"FrameRateDecider::SetPreferredInterval\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"new_preferred_interval\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1

@_ZN3viz16FrameRateDecider15ScopedAggregateC1EPS0_ = hidden unnamed_addr alias void (%"class.viz::FrameRateDecider::ScopedAggregate"*, %"class.viz::FrameRateDecider"*), void (%"class.viz::FrameRateDecider::ScopedAggregate"*, %"class.viz::FrameRateDecider"*)* @_ZN3viz16FrameRateDecider15ScopedAggregateC2EPS0_
@_ZN3viz16FrameRateDecider15ScopedAggregateD1Ev = hidden unnamed_addr alias void (%"class.viz::FrameRateDecider::ScopedAggregate"*), void (%"class.viz::FrameRateDecider::ScopedAggregate"*)* @_ZN3viz16FrameRateDecider15ScopedAggregateD2Ev
@_ZN3viz16FrameRateDeciderC1EPNS_14SurfaceManagerEPNS0_6ClientEbb = hidden unnamed_addr alias void (%"class.viz::FrameRateDecider"*, %"class.viz::SurfaceManager"*, %"class.viz::FrameRateDecider::Client"*, i1, i1), void (%"class.viz::FrameRateDecider"*, %"class.viz::SurfaceManager"*, %"class.viz::FrameRateDecider::Client"*, i1, i1)* @_ZN3viz16FrameRateDeciderC2EPNS_14SurfaceManagerEPNS0_6ClientEbb
@_ZN3viz16FrameRateDeciderD1Ev = hidden unnamed_addr alias void (%"class.viz::FrameRateDecider"*), void (%"class.viz::FrameRateDecider"*)* @_ZN3viz16FrameRateDeciderD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3viz16FrameRateDecider15ScopedAggregateC2EPS0_(%"class.viz::FrameRateDecider::ScopedAggregate"* nocapture, %"class.viz::FrameRateDecider"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.viz::FrameRateDecider::ScopedAggregate", %"class.viz::FrameRateDecider::ScopedAggregate"* %0, i64 0, i32 0
  store %"class.viz::FrameRateDecider"* %1, %"class.viz::FrameRateDecider"** %3, align 8
  %4 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %1, i64 0, i32 1
  store i8 1, i8* %4, align 8
  %5 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %1, i64 0, i32 4
  %6 = bitcast %"class.base::internal::flat_tree.1"* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %1, i64 0, i32 4, i32 0, i32 0, i32 1
  %9 = bitcast %"class.viz::FrameSinkId"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %1, i64 0, i32 5
  %11 = bitcast %"class.base::internal::flat_tree.1"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %1, i64 0, i32 5, i32 0, i32 0, i32 1
  %14 = bitcast %"class.viz::FrameSinkId"** %13 to i64*
  store i64 %12, i64* %14, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3viz16FrameRateDecider16StartAggregationEv(%"class.viz::FrameRateDecider"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 1
  store i8 1, i8* %2, align 8
  %3 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 4
  %4 = bitcast %"class.base::internal::flat_tree.1"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %7 = bitcast %"class.viz::FrameSinkId"** %6 to i64*
  store i64 %5, i64* %7, align 8
  %8 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 5
  %9 = bitcast %"class.base::internal::flat_tree.1"* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %12 = bitcast %"class.viz::FrameSinkId"** %11 to i64*
  store i64 %10, i64* %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16FrameRateDecider15ScopedAggregateD2Ev(%"class.viz::FrameRateDecider::ScopedAggregate"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.viz::FrameRateDecider::ScopedAggregate", %"class.viz::FrameRateDecider::ScopedAggregate"* %0, i64 0, i32 0
  %3 = load %"class.viz::FrameRateDecider"*, %"class.viz::FrameRateDecider"** %2, align 8
  %4 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %3, i64 0, i32 1
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %3, i64 0, i32 6
  %6 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %3, i64 0, i32 3
  %7 = bitcast %"class.base::flat_map"* %5 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %3, i64 0, i32 6, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %10 = bitcast %"struct.std::__1::pair"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::flat_map"* %6 to i64*
  %13 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %14 = bitcast %"struct.std::__1::pair"** %13 to i64*
  %15 = bitcast %"class.base::flat_map"* %6 to <2 x i64>*
  %16 = load <2 x i64>, <2 x i64>* %15, align 8
  %17 = bitcast %"class.base::flat_map"* %5 to <2 x i64>*
  store <2 x i64> %16, <2 x i64>* %17, align 8
  %18 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %19 = bitcast %"struct.std::__1::pair"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  store i64 %20, i64* %10, align 8
  store i64 %8, i64* %12, align 8
  store i64 %11, i64* %19, align 8
  store i64 %8, i64* %14, align 8
  tail call void @_ZN3viz16FrameRateDecider36UpdatePreferredFrameIntervalIfNeededEv(%"class.viz::FrameRateDecider"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16FrameRateDecider14EndAggregationEv(%"class.viz::FrameRateDecider"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 1
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 6
  %4 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 3
  %5 = bitcast %"class.base::flat_map"* %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast %"struct.std::__1::pair"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::flat_map"* %4 to i64*
  %11 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast %"struct.std::__1::pair"** %11 to i64*
  %13 = bitcast %"class.base::flat_map"* %4 to <2 x i64>*
  %14 = load <2 x i64>, <2 x i64>* %13, align 8
  %15 = bitcast %"class.base::flat_map"* %3 to <2 x i64>*
  store <2 x i64> %14, <2 x i64>* %15, align 8
  %16 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"struct.std::__1::pair"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %8, align 8
  store i64 %6, i64* %10, align 8
  store i64 %9, i64* %17, align 8
  store i64 %6, i64* %12, align 8
  tail call void @_ZN3viz16FrameRateDecider36UpdatePreferredFrameIntervalIfNeededEv(%"class.viz::FrameRateDecider"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16FrameRateDeciderC2EPNS_14SurfaceManagerEPNS0_6ClientEbb(%"class.viz::FrameRateDecider"*, %"class.viz::SurfaceManager"*, %"class.viz::FrameRateDecider::Client"*, i1 zeroext, i1 zeroext) unnamed_addr #1 align 2 {
  %6 = zext i1 %3 to i8
  %7 = zext i1 %4 to i8
  %8 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN3viz16FrameRateDeciderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 1
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 7
  %12 = bitcast %"class.base::flat_map"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 96, i1 false)
  %13 = tail call i8* @_Znwm(i64 8) #14
  %14 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 7, i32 0, i32 1
  %15 = bitcast %"class.std::__1::vector.9"* %11 to i8**
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds i8, i8* %13, i64 8
  %17 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %18 = bitcast %"class.base::TimeDelta"** %17 to i8**
  store i8* %16, i8** %18, align 8
  %19 = bitcast %"class.base::TimeDelta"** %14 to i64*
  %20 = bitcast i8* %13 to i64*
  store i64 16666, i64* %20, align 8
  %21 = ptrtoint i8* %16 to i64
  store i64 %21, i64* %19, align 8
  %22 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 8
  %23 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 11
  %24 = bitcast i64* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false)
  %25 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 13
  store %"class.viz::SurfaceManager"* %1, %"class.viz::SurfaceManager"** %25, align 8
  %26 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 14
  store %"class.viz::FrameRateDecider::Client"* %2, %"class.viz::FrameRateDecider::Client"** %26, align 8
  %27 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 15
  store i8 %6, i8* %27, align 8
  %28 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 16
  store i8 %7, i8* %28, align 1
  %29 = bitcast i64* %23 to <2 x i64>*
  store <2 x i64> <i64 6, i64 41666>, <2 x i64>* %29, align 8
  %30 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %1, i64 0, i32 5
  %31 = icmp eq %"class.viz::FrameRateDecider"* %0, null
  br i1 %31, label %32, label %35

32:                                               ; preds = %5
  %33 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %1, i64 0, i32 5, i32 0, i32 0, i32 1
  %34 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8
  br label %53

35:                                               ; preds = %5
  %36 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %30, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %36, align 8
  %38 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %1, i64 0, i32 5, i32 0, i32 0, i32 1
  %39 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %38, align 8
  %40 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %37, %39
  %41 = bitcast %"class.viz::FrameRateDecider"* %0 to i8*
  br i1 %40, label %50, label %42

42:                                               ; preds = %35, %47
  %43 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %48, %47 ], [ %37, %35 ]
  %44 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %43, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, %41
  br i1 %46, label %50, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %43, i64 1
  %49 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %48, %39
  br i1 %49, label %53, label %42

50:                                               ; preds = %42, %35
  %51 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %37, %35 ], [ %43, %42 ]
  %52 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %51, %39
  br i1 %52, label %53, label %126

53:                                               ; preds = %47, %32, %50
  %54 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %34, %32 ], [ %39, %50 ], [ %39, %47 ]
  %55 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %1, i64 0, i32 5, i32 2
  %56 = load i64, i64* %55, align 8
  %57 = add i64 %56, 1
  store i64 %57, i64* %55, align 8
  %58 = ptrtoint %"class.viz::FrameRateDecider"* %0 to i64
  %59 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %1, i64 0, i32 5, i32 0, i32 0, i32 1
  %60 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %1, i64 0, i32 5, i32 0, i32 0, i32 2, i32 0, i32 0
  %61 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %60, align 8
  %62 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %54, %61
  %63 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %61 to i64
  br i1 %62, label %64, label %69

64:                                               ; preds = %53
  %65 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %54 to i64*
  store i64 %58, i64* %65, align 8
  %66 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %54, i64 1
  %67 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %66 to i64
  %68 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %59 to i64*
  store i64 %67, i64* %68, align 8
  br label %126

69:                                               ; preds = %53
  %70 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %54 to i64
  %71 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %59 to i64*
  %72 = bitcast %"class.base::ObserverList"* %30 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = sub i64 %70, %73
  %75 = ashr exact i64 %74, 3
  %76 = add nsw i64 %75, 1
  %77 = icmp ugt i64 %76, 2305843009213693951
  br i1 %77, label %78, label %80

78:                                               ; preds = %69
  %79 = bitcast %"class.base::ObserverList"* %30 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %79) #15
  unreachable

80:                                               ; preds = %69
  %81 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %60 to i64*
  %82 = sub i64 %63, %73
  %83 = ashr exact i64 %82, 3
  %84 = icmp ult i64 %83, 1152921504606846975
  br i1 %84, label %85, label %93

85:                                               ; preds = %80
  %86 = ashr exact i64 %82, 2
  %87 = icmp ult i64 %86, %76
  %88 = select i1 %87, i64 %76, i64 %86
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %98, label %90

90:                                               ; preds = %85
  %91 = icmp ugt i64 %88, 2305843009213693951
  br i1 %91, label %92, label %93

92:                                               ; preds = %90
  tail call void @abort() #15
  unreachable

93:                                               ; preds = %90, %80
  %94 = phi i64 [ %88, %90 ], [ 2305843009213693951, %80 ]
  %95 = shl i64 %94, 3
  %96 = tail call i8* @_Znwm(i64 %95) #14
  %97 = bitcast i8* %96 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %98

98:                                               ; preds = %93, %85
  %99 = phi i64 [ %94, %93 ], [ 0, %85 ]
  %100 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %97, %93 ], [ null, %85 ]
  %101 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %100, i64 %75
  %102 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %100, i64 %99
  %103 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %102 to i64
  %104 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %101 to i64*
  store i64 %58, i64* %104, align 8
  %105 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %101, i64 1
  %106 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %105 to i64
  %107 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %30, i64 0, i32 0, i32 0, i32 0
  %108 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %107, align 8
  %109 = load i64, i64* %71, align 8
  %110 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %108 to i64
  %111 = sub i64 %109, %110
  %112 = ashr exact i64 %111, 3
  %113 = sub nsw i64 0, %112
  %114 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %101, i64 %113
  %115 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %114 to i64
  %116 = icmp sgt i64 %111, 0
  br i1 %116, label %117, label %121

117:                                              ; preds = %98
  %118 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %114 to i8*
  %119 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %108 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %119, i64 %111, i1 false) #13
  %120 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %107, align 8
  br label %121

121:                                              ; preds = %117, %98
  %122 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %108, %98 ], [ %120, %117 ]
  store i64 %115, i64* %72, align 8
  store i64 %106, i64* %71, align 8
  store i64 %103, i64* %81, align 8
  %123 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %122, null
  br i1 %123, label %126, label %124

124:                                              ; preds = %121
  %125 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %122 to i8*
  tail call void @_ZdlPv(i8* %125) #14
  br label %126

126:                                              ; preds = %124, %121, %64, %50
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16FrameRateDeciderD2Ev(%"class.viz::FrameRateDecider"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN3viz16FrameRateDeciderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 13
  %4 = load %"class.viz::SurfaceManager"*, %"class.viz::SurfaceManager"** %3, align 8
  %5 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %4, i64 0, i32 5, i32 0, i32 0, i32 0
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %4, i64 0, i32 5, i32 0, i32 0, i32 1
  %8 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %7, align 8
  %9 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %6, %8
  %10 = bitcast %"class.viz::FrameRateDecider"* %0 to i8*
  %11 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %8 to i64
  br i1 %9, label %20, label %12

12:                                               ; preds = %1, %17
  %13 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %18, %17 ], [ %6, %1 ]
  %14 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %13, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, %10
  br i1 %16, label %20, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %13, i64 1
  %19 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %18, %8
  br i1 %19, label %49, label %12

20:                                               ; preds = %12, %1
  %21 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %6, %1 ], [ %13, %12 ]
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, %8
  br i1 %22, label %49, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %21, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %4, i64 0, i32 5, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, -1
  store i64 %30, i64* %28, align 8
  br label %31

31:                                               ; preds = %27, %23
  %32 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %4, i64 0, i32 5, i32 1, i32 0, i32 0, i32 1
  %33 = bitcast %"class.base::internal::LinkNodeBase"** %32 to %"class.base::LinkNode"**
  %34 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %33, align 8
  %35 = getelementptr inbounds %"class.viz::SurfaceManager", %"class.viz::SurfaceManager"* %4, i64 0, i32 5, i32 1, i32 0
  %36 = icmp eq %"class.base::LinkNode"* %34, %35
  br i1 %36, label %37, label %48

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %21, i64 1
  %39 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %38 to i64
  %40 = sub i64 %11, %39
  %41 = ashr exact i64 %40, 3
  %42 = icmp eq i64 %40, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %37
  %44 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %21 to i8*
  %45 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %38 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 %40, i1 false) #13
  br label %46

46:                                               ; preds = %43, %37
  %47 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %21, i64 %41
  store %"class.base::internal::UncheckedObserverAdapter"* %47, %"class.base::internal::UncheckedObserverAdapter"** %7, align 8
  br label %49

48:                                               ; preds = %31
  store i8* null, i8** %24, align 8
  br label %49

49:                                               ; preds = %17, %20, %46, %48
  %50 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 7, i32 0, i32 0
  %51 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %50, align 8
  %52 = icmp eq %"class.base::TimeDelta"* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %49
  %54 = ptrtoint %"class.base::TimeDelta"* %51 to i64
  %55 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 7, i32 0, i32 1
  %56 = bitcast %"class.base::TimeDelta"** %55 to i64*
  store i64 %54, i64* %56, align 8
  %57 = bitcast %"class.base::TimeDelta"* %51 to i8*
  tail call void @_ZdlPv(i8* %57) #14
  br label %58

58:                                               ; preds = %49, %53
  %59 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %60 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %59, align 8
  %61 = icmp eq %"struct.std::__1::pair"* %60, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %58
  %63 = ptrtoint %"struct.std::__1::pair"* %60 to i64
  %64 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %65 = bitcast %"struct.std::__1::pair"** %64 to i64*
  store i64 %63, i64* %65, align 8
  %66 = bitcast %"struct.std::__1::pair"* %60 to i8*
  tail call void @_ZdlPv(i8* %66) #14
  br label %67

67:                                               ; preds = %58, %62
  %68 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %69 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %68, align 8
  %70 = icmp eq %"class.viz::FrameSinkId"* %69, null
  br i1 %70, label %76, label %71

71:                                               ; preds = %67
  %72 = ptrtoint %"class.viz::FrameSinkId"* %69 to i64
  %73 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %74 = bitcast %"class.viz::FrameSinkId"** %73 to i64*
  store i64 %72, i64* %74, align 8
  %75 = bitcast %"class.viz::FrameSinkId"* %69 to i8*
  tail call void @_ZdlPv(i8* %75) #14
  br label %76

76:                                               ; preds = %67, %71
  %77 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %78 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %77, align 8
  %79 = icmp eq %"class.viz::FrameSinkId"* %78, null
  br i1 %79, label %85, label %80

80:                                               ; preds = %76
  %81 = ptrtoint %"class.viz::FrameSinkId"* %78 to i64
  %82 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %83 = bitcast %"class.viz::FrameSinkId"** %82 to i64*
  store i64 %81, i64* %83, align 8
  %84 = bitcast %"class.viz::FrameSinkId"* %78 to i8*
  tail call void @_ZdlPv(i8* %84) #14
  br label %85

85:                                               ; preds = %76, %80
  %86 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %87 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %86, align 8
  %88 = icmp eq %"struct.std::__1::pair"* %87, null
  br i1 %88, label %94, label %89

89:                                               ; preds = %85
  %90 = ptrtoint %"struct.std::__1::pair"* %87 to i64
  %91 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %92 = bitcast %"struct.std::__1::pair"** %91 to i64*
  store i64 %90, i64* %92, align 8
  %93 = bitcast %"struct.std::__1::pair"* %87 to i8*
  tail call void @_ZdlPv(i8* %93) #14
  br label %94

94:                                               ; preds = %85, %89
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16FrameRateDeciderD0Ev(%"class.viz::FrameRateDecider"*) unnamed_addr #1 align 2 {
  tail call void @_ZN3viz16FrameRateDeciderD2Ev(%"class.viz::FrameRateDecider"* %0) #13
  %2 = bitcast %"class.viz::FrameRateDecider"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16FrameRateDecider26SetSupportedFrameIntervalsENSt3__16vectorIN4base9TimeDeltaENS1_9allocatorIS4_EEEE(%"class.viz::FrameRateDecider"* nocapture, %"class.std::__1::vector.9"* nocapture) local_unnamed_addr #1 align 2 {
  %3 = alloca %"struct.std::__1::__less.387", align 1
  %4 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 7
  %5 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %5, align 8
  %7 = icmp eq %"class.base::TimeDelta"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = ptrtoint %"class.base::TimeDelta"* %6 to i64
  %10 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 7, i32 0, i32 1
  %11 = bitcast %"class.base::TimeDelta"** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = bitcast %"class.base::TimeDelta"* %6 to i8*
  tail call void @_ZdlPv(i8* %12) #14
  %13 = bitcast %"class.std::__1::vector.9"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #13
  br label %14

14:                                               ; preds = %2, %8
  %15 = bitcast %"class.std::__1::vector.9"* %1 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.9"* %4 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %1, i64 0, i32 0, i32 1
  %19 = bitcast %"class.base::TimeDelta"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 7, i32 0, i32 1
  %22 = bitcast %"class.base::TimeDelta"** %21 to i64*
  store i64 %20, i64* %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %24 = bitcast %"class.base::TimeDelta"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %27 = bitcast %"class.base::TimeDelta"** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %"class.std::__1::vector.9"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #13
  %29 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %5, align 8
  %30 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %21, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__less.387", %"struct.std::__1::__less.387"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %31) #13
  call void @_ZNSt3__16__sortIRNS_6__lessIN4base9TimeDeltaES3_EEPS3_EEvT0_S7_T_(%"class.base::TimeDelta"* %29, %"class.base::TimeDelta"* %30, %"struct.std::__1::__less.387"* nonnull dereferenceable(1) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %31) #13
  call void @_ZN3viz16FrameRateDecider36UpdatePreferredFrameIntervalIfNeededEv(%"class.viz::FrameRateDecider"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16FrameRateDecider36UpdatePreferredFrameIntervalIfNeededEv(%"class.viz::FrameRateDecider"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.absl::optional.198", align 8
  %6 = alloca i64, align 8
  %7 = alloca double, align 8
  %8 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 16
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %21

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 7
  %13 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 7, i32 0, i32 1
  %14 = bitcast %"class.base::TimeDelta"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector.9"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = ashr exact i64 %18, 3
  %20 = icmp ugt i64 %19, 1
  br i1 %20, label %21, label %217

21:                                               ; preds = %1, %11
  %22 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %23 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %22, align 8
  %24 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %25 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %24, align 8
  %26 = icmp eq %"class.viz::FrameSinkId"* %23, %25
  br i1 %26, label %65, label %27

27:                                               ; preds = %21
  %28 = bitcast i32* %4 to i8*
  %29 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 14
  br label %41

30:                                               ; preds = %60
  %31 = icmp eq i32 %62, 0
  br i1 %31, label %65, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 15
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %32
  %37 = icmp sgt i32 %62, 0
  br i1 %37, label %76, label %65

38:                                               ; preds = %32
  %39 = add nsw i32 %62, %61
  %40 = icmp sgt i32 %39, 1
  br i1 %40, label %76, label %65

41:                                               ; preds = %27, %60
  %42 = phi i32 [ 0, %27 ], [ %62, %60 ]
  %43 = phi i32 [ 0, %27 ], [ %61, %60 ]
  %44 = phi %"class.viz::FrameSinkId"* [ %23, %27 ], [ %63, %60 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #13
  store i32 0, i32* %4, align 4
  %45 = load %"class.viz::FrameRateDecider::Client"*, %"class.viz::FrameRateDecider::Client"** %29, align 8
  %46 = bitcast %"class.viz::FrameRateDecider::Client"* %45 to i64 (%"class.viz::FrameRateDecider::Client"*, %"class.viz::FrameSinkId"*, i32*)***
  %47 = load i64 (%"class.viz::FrameRateDecider::Client"*, %"class.viz::FrameSinkId"*, i32*)**, i64 (%"class.viz::FrameRateDecider::Client"*, %"class.viz::FrameSinkId"*, i32*)*** %46, align 8
  %48 = getelementptr inbounds i64 (%"class.viz::FrameRateDecider::Client"*, %"class.viz::FrameSinkId"*, i32*)*, i64 (%"class.viz::FrameRateDecider::Client"*, %"class.viz::FrameSinkId"*, i32*)** %47, i64 3
  %49 = load i64 (%"class.viz::FrameRateDecider::Client"*, %"class.viz::FrameSinkId"*, i32*)*, i64 (%"class.viz::FrameRateDecider::Client"*, %"class.viz::FrameSinkId"*, i32*)** %48, align 8
  %50 = call i64 %49(%"class.viz::FrameRateDecider::Client"* %45, %"class.viz::FrameSinkId"* dereferenceable(8) %44, i32* nonnull %4) #13
  %51 = load i32, i32* %4, align 4
  switch i32 %51, label %60 [
    i32 3, label %56
    i32 1, label %52
    i32 2, label %54
  ]

52:                                               ; preds = %41
  %53 = add nsw i32 %42, 1
  br label %60

54:                                               ; preds = %41
  %55 = add nsw i32 %42, 1
  br label %60

56:                                               ; preds = %41
  %57 = icmp eq i64 %50, 9223372036854775807
  %58 = zext i1 %57 to i32
  %59 = add nsw i32 %43, %58
  br label %60

60:                                               ; preds = %52, %54, %41, %56
  %61 = phi i32 [ %43, %41 ], [ %43, %54 ], [ %43, %52 ], [ %59, %56 ]
  %62 = phi i32 [ %42, %41 ], [ %55, %54 ], [ %53, %52 ], [ %42, %56 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #13
  %63 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %44, i64 1
  %64 = icmp eq %"class.viz::FrameSinkId"* %63, %25
  br i1 %64, label %30, label %41

65:                                               ; preds = %21, %30, %36, %38
  %66 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %67 = and i8 %66, 25
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %75, label %69, !prof !3

69:                                               ; preds = %65
  %70 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #13
  %71 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #13
  %72 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %73 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #13
  store i64 %73, i64* %72, align 8
  %74 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %70, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #13
  br label %75

75:                                               ; preds = %65, %69
  call void @_ZN3viz16FrameRateDecider20SetPreferredIntervalEN4base9TimeDeltaE(%"class.viz::FrameRateDecider"* %0, i64 0)
  br label %217

76:                                               ; preds = %36, %38
  %77 = getelementptr inbounds %"class.absl::optional.198", %"class.absl::optional.198"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %77) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 -86, i64 16, i1 false)
  store i8 0, i8* %77, align 8
  %78 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %79 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %78, align 8
  %80 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %81 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %80, align 8
  %82 = icmp eq %"class.viz::FrameSinkId"* %79, %81
  br i1 %82, label %216, label %83

83:                                               ; preds = %76
  %84 = bitcast i64* %6 to i8*
  %85 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 14
  %86 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 12, i32 0
  %87 = getelementptr inbounds %"class.absl::optional.198", %"class.absl::optional.198"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %88 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %87, i64 0, i32 0
  %89 = bitcast %"class.base::TimeDelta"* %3 to i8*
  %90 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  %91 = bitcast i64* %6 to %"class.base::TimeDelta"*
  %92 = getelementptr inbounds %"class.absl::optional.198", %"class.absl::optional.198"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  br label %93

93:                                               ; preds = %83, %140
  %94 = phi i8 [ 1, %83 ], [ %141, %140 ]
  %95 = phi %"class.viz::FrameSinkId"* [ %79, %83 ], [ %142, %140 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84)
  %96 = load %"class.viz::FrameRateDecider::Client"*, %"class.viz::FrameRateDecider::Client"** %85, align 8
  %97 = bitcast %"class.viz::FrameRateDecider::Client"* %96 to i64 (%"class.viz::FrameRateDecider::Client"*, %"class.viz::FrameSinkId"*, i32*)***
  %98 = load i64 (%"class.viz::FrameRateDecider::Client"*, %"class.viz::FrameSinkId"*, i32*)**, i64 (%"class.viz::FrameRateDecider::Client"*, %"class.viz::FrameSinkId"*, i32*)*** %97, align 8
  %99 = getelementptr inbounds i64 (%"class.viz::FrameRateDecider::Client"*, %"class.viz::FrameSinkId"*, i32*)*, i64 (%"class.viz::FrameRateDecider::Client"*, %"class.viz::FrameSinkId"*, i32*)** %98, i64 3
  %100 = load i64 (%"class.viz::FrameRateDecider::Client"*, %"class.viz::FrameSinkId"*, i32*)*, i64 (%"class.viz::FrameRateDecider::Client"*, %"class.viz::FrameSinkId"*, i32*)** %99, align 8
  %101 = call i64 %100(%"class.viz::FrameRateDecider::Client"* %96, %"class.viz::FrameSinkId"* dereferenceable(8) %95, i32* null) #13
  store i64 %101, i64* %6, align 8
  %102 = icmp eq i64 %101, 9223372036854775807
  br i1 %102, label %103, label %105

103:                                              ; preds = %93
  %104 = load i64, i64* %86, align 8
  store i64 %104, i64* %6, align 8
  br label %105

105:                                              ; preds = %103, %93
  %106 = phi i64 [ %104, %103 ], [ %101, %93 ]
  %107 = load i8, i8* %77, align 8, !range !2
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %105
  store i64 %106, i64* %92, align 8
  store i8 1, i8* %77, align 8
  br label %140

110:                                              ; preds = %105
  %111 = load i64, i64* %88, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89)
  store i64 %111, i64* %90, align 8
  %112 = add i64 %111, -9223372036854775807
  %113 = icmp ult i64 %112, 2
  %114 = add i64 %106, -9223372036854775807
  %115 = icmp ult i64 %114, 2
  %116 = or i1 %113, %115
  br i1 %116, label %117, label %119

117:                                              ; preds = %110
  %118 = icmp eq i64 %111, %106
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89)
  br i1 %118, label %128, label %129

119:                                              ; preds = %110
  %120 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %3, i64 %106) #13
  %121 = icmp eq i64 %120, -9223372036854775808
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89)
  br label %129

123:                                              ; preds = %119
  %124 = icmp slt i64 %120, 0
  %125 = sub nsw i64 0, %120
  %126 = select i1 %124, i64 %125, i64 %120
  %127 = icmp ult i64 %126, 500
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89)
  br i1 %127, label %128, label %129

128:                                              ; preds = %117, %123
  br label %129

129:                                              ; preds = %117, %122, %123, %128
  %130 = phi i8 [ %94, %128 ], [ 0, %123 ], [ 0, %122 ], [ 0, %117 ]
  %131 = load i8, i8* %77, align 8, !range !2
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %133, label %134, !prof !4

133:                                              ; preds = %129
  call void @llvm.trap() #13
  unreachable

134:                                              ; preds = %129
  %135 = load i64, i64* %88, align 8
  %136 = icmp slt i64 %106, %135
  %137 = select i1 %136, %"class.base::TimeDelta"* %91, %"class.base::TimeDelta"* %87
  %138 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %137, i64 0, i32 0
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %92, align 8
  br label %140

140:                                              ; preds = %134, %109
  %141 = phi i8 [ %130, %134 ], [ %94, %109 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84)
  %142 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %95, i64 1
  %143 = icmp eq %"class.viz::FrameSinkId"* %142, %81
  br i1 %143, label %144, label %93

144:                                              ; preds = %140
  %145 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %146 = and i8 %145, 25
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %153, label %148, !prof !3

148:                                              ; preds = %144
  %149 = bitcast double* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %149) #13
  %150 = getelementptr inbounds %"class.absl::optional.198", %"class.absl::optional.198"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %151 = call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* %150) #13
  store double %151, double* %7, align 8
  %152 = call i64 @_ZN20trace_event_internal13AddTraceEventIdEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i32 8, i64 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0), double* nonnull dereferenceable(8) %7)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %149) #13
  br label %153

153:                                              ; preds = %144, %148
  %154 = and i8 %141, 1
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %166, label %156

156:                                              ; preds = %153
  %157 = load i8, i8* %8, align 1, !range !2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %166, label %159

159:                                              ; preds = %156
  %160 = load i8, i8* %77, align 8, !range !2
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %162, label %163, !prof !4

162:                                              ; preds = %159
  call void @llvm.trap() #13
  unreachable

163:                                              ; preds = %159
  %164 = getelementptr inbounds %"class.absl::optional.198", %"class.absl::optional.198"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %165 = load i64, i64* %164, align 8
  br label %214

166:                                              ; preds = %156, %153
  %167 = load i8, i8* %77, align 8, !range !2
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %170, !prof !4

169:                                              ; preds = %166
  call void @llvm.trap() #13
  unreachable

170:                                              ; preds = %166
  %171 = getelementptr inbounds %"class.absl::optional.198", %"class.absl::optional.198"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %172 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %171, i64 0, i32 0
  %173 = load i64, i64* %172, align 8
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %214, label %175

175:                                              ; preds = %170
  %176 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 7, i32 0, i32 0
  %177 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %176, align 8
  %178 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 7, i32 0, i32 1
  %179 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %178, align 8
  %180 = icmp eq %"class.base::TimeDelta"* %177, %179
  br i1 %180, label %214, label %182

181:                                              ; preds = %211
  call void @llvm.trap() #13
  unreachable

182:                                              ; preds = %175, %211
  %183 = phi %"class.base::TimeDelta"* [ %209, %211 ], [ %177, %175 ]
  %184 = phi i64 [ %208, %211 ], [ 0, %175 ]
  %185 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %183, i64 0, i32 0
  %186 = load i64, i64* %185, align 8
  %187 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* %171, i64 %186)
  %188 = icmp eq i64 %187, -9223372036854775808
  br i1 %188, label %193, label %189

189:                                              ; preds = %182
  %190 = icmp slt i64 %187, 0
  %191 = sub nsw i64 0, %187
  %192 = select i1 %190, i64 %191, i64 %187
  br label %193

193:                                              ; preds = %182, %189
  %194 = phi i64 [ %192, %189 ], [ 9223372036854775807, %182 ]
  %195 = load i8, i8* %77, align 8, !range !2
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %197, label %198, !prof !4

197:                                              ; preds = %193
  call void @llvm.trap() #13
  unreachable

198:                                              ; preds = %193
  %199 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* %171, i64 %184)
  %200 = icmp eq i64 %199, -9223372036854775808
  br i1 %200, label %205, label %201

201:                                              ; preds = %198
  %202 = icmp slt i64 %199, 0
  %203 = sub nsw i64 0, %199
  %204 = select i1 %202, i64 %203, i64 %199
  br label %205

205:                                              ; preds = %198, %201
  %206 = phi i64 [ %204, %201 ], [ 9223372036854775807, %198 ]
  %207 = icmp ult i64 %194, %206
  %208 = select i1 %207, i64 %186, i64 %184
  %209 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %183, i64 1
  %210 = icmp eq %"class.base::TimeDelta"* %209, %179
  br i1 %210, label %214, label %211

211:                                              ; preds = %205
  %212 = load i8, i8* %77, align 8, !range !2
  %213 = icmp eq i8 %212, 0
  br i1 %213, label %181, label %182, !prof !4

214:                                              ; preds = %205, %170, %175, %163
  %215 = phi i64 [ %165, %163 ], [ 0, %170 ], [ 0, %175 ], [ %208, %205 ]
  call void @_ZN3viz16FrameRateDecider20SetPreferredIntervalEN4base9TimeDeltaE(%"class.viz::FrameRateDecider"* %0, i64 %215)
  br label %216

216:                                              ; preds = %214, %76
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77) #13
  br label %217

217:                                              ; preds = %75, %216, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16FrameRateDecider20OnSurfaceWillBeDrawnEPNS_7SurfaceE(%"class.viz::FrameRateDecider"*, %"class.viz::Surface"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %176, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 16
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %20

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 7
  %12 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 7, i32 0, i32 1
  %13 = bitcast %"class.base::TimeDelta"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.9"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = ashr exact i64 %17, 3
  %19 = icmp ugt i64 %18, 1
  br i1 %19, label %20, label %176

20:                                               ; preds = %6, %10
  %21 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  br label %28

28:                                               ; preds = %20, %25
  %29 = phi i64 [ %27, %25 ], [ 0, %20 ]
  %30 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 3
  %31 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %30, i64 0, i32 0
  %32 = tail call { %"struct.std::__1::pair"*, %"struct.std::__1::pair"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_mEENS5_9allocatorISA_EEEEE11equal_rangeIS3_EENS9_INS5_11__wrap_iterIPKSA_EESJ_EERKT_(%"class.base::internal::flat_tree"* %31, %"class.viz::SurfaceId"* dereferenceable(32) %21) #13
  %33 = extractvalue { %"struct.std::__1::pair"*, %"struct.std::__1::pair"* } %32, 0
  %34 = extractvalue { %"struct.std::__1::pair"*, %"struct.std::__1::pair"* } %32, 1
  %35 = icmp eq %"struct.std::__1::pair"* %33, %34
  br i1 %35, label %40, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %38 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %37, align 8
  %39 = icmp eq %"struct.std::__1::pair"* %33, %38
  br i1 %39, label %40, label %42

40:                                               ; preds = %28, %36
  %41 = tail call dereferenceable(8) i64* @_ZN4base8flat_mapIN3viz9SurfaceIdEmNSt3__14lessIvEENS3_6vectorINS3_4pairIS2_mEENS3_9allocatorIS8_EEEEEixERKS2_(%"class.base::flat_map"* %30, %"class.viz::SurfaceId"* dereferenceable(32) %21)
  store i64 %29, i64* %41, align 8
  br label %42

42:                                               ; preds = %36, %40
  %43 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 6, i32 0
  %44 = tail call { %"struct.std::__1::pair"*, %"struct.std::__1::pair"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_mEENS5_9allocatorISA_EEEEE11equal_rangeIS3_EENS9_INS5_11__wrap_iterIPKSA_EESJ_EERKT_(%"class.base::internal::flat_tree"* %43, %"class.viz::SurfaceId"* dereferenceable(32) %21) #13
  %45 = extractvalue { %"struct.std::__1::pair"*, %"struct.std::__1::pair"* } %44, 0
  %46 = extractvalue { %"struct.std::__1::pair"*, %"struct.std::__1::pair"* } %44, 1
  %47 = icmp eq %"struct.std::__1::pair"* %45, %46
  br i1 %47, label %56, label %48

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1
  %50 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %49, align 8
  %51 = icmp eq %"struct.std::__1::pair"* %45, %50
  br i1 %51, label %56, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %45, i64 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = icmp eq i64 %54, %29
  br i1 %55, label %116, label %56

56:                                               ; preds = %42, %48, %52
  %57 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 4
  %58 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.base::internal::flat_tree.1", %"class.base::internal::flat_tree.1"* %57, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %59, align 8
  %61 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %62 = bitcast %"class.viz::FrameSinkId"** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = ptrtoint %"class.viz::FrameSinkId"* %60 to i64
  %65 = sub i64 %63, %64
  %66 = icmp eq i64 %65, 0
  %67 = inttoptr i64 %63 to %"class.viz::FrameSinkId"*
  br i1 %66, label %96, label %68

68:                                               ; preds = %56
  %69 = ashr exact i64 %65, 3
  %70 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %72 = load i32, i32* %70, align 4
  %73 = load i32, i32* %71, align 4
  br label %74

74:                                               ; preds = %92, %68
  %75 = phi %"class.viz::FrameSinkId"* [ %60, %68 ], [ %94, %92 ]
  %76 = phi i64 [ %69, %68 ], [ %93, %92 ]
  %77 = lshr i64 %76, 1
  %78 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %75, i64 %77
  %79 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %78, i64 0, i32 0
  %80 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %75, i64 %77, i32 1
  %81 = load i32, i32* %79, align 4
  %82 = icmp ult i32 %81, %72
  br i1 %82, label %88, label %83

83:                                               ; preds = %74
  %84 = icmp ult i32 %72, %81
  br i1 %84, label %92, label %85

85:                                               ; preds = %83
  %86 = load i32, i32* %80, align 4
  %87 = icmp ult i32 %86, %73
  br i1 %87, label %88, label %92

88:                                               ; preds = %85, %74
  %89 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %78, i64 1
  %90 = xor i64 %77, -1
  %91 = add i64 %76, %90
  br label %92

92:                                               ; preds = %88, %85, %83
  %93 = phi i64 [ %91, %88 ], [ %77, %85 ], [ %77, %83 ]
  %94 = phi %"class.viz::FrameSinkId"* [ %89, %88 ], [ %75, %85 ], [ %75, %83 ]
  %95 = icmp eq i64 %93, 0
  br i1 %95, label %96, label %74

96:                                               ; preds = %92, %56
  %97 = phi %"class.viz::FrameSinkId"* [ %60, %56 ], [ %94, %92 ]
  %98 = icmp eq %"class.viz::FrameSinkId"* %97, %67
  br i1 %98, label %113, label %99

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %101 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %102 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %97, i64 0, i32 0
  %103 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %97, i64 0, i32 1
  %104 = load i32, i32* %100, align 4
  %105 = load i32, i32* %102, align 4
  %106 = icmp ult i32 %104, %105
  br i1 %106, label %113, label %107

107:                                              ; preds = %99
  %108 = icmp ult i32 %105, %104
  br i1 %108, label %116, label %109

109:                                              ; preds = %107
  %110 = load i32, i32* %101, align 4
  %111 = load i32, i32* %103, align 4
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %113, label %116

113:                                              ; preds = %109, %99, %96
  %114 = getelementptr inbounds %"class.base::internal::flat_tree.1", %"class.base::internal::flat_tree.1"* %57, i64 0, i32 0
  %115 = tail call %"class.viz::FrameSinkId"* @_ZNSt3__16vectorIN3viz11FrameSinkIdENS_9allocatorIS2_EEE7emplaceIJRKS2_EEENS_11__wrap_iterIPS2_EENS9_IPS7_EEDpOT_(%"class.std::__1::vector.2"* %114, %"class.viz::FrameSinkId"* %97, %"class.viz::FrameSinkId"* dereferenceable(8) %58) #13
  br label %116

116:                                              ; preds = %113, %109, %107, %52
  %117 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 5
  %118 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 0
  %119 = getelementptr inbounds %"class.base::internal::flat_tree.1", %"class.base::internal::flat_tree.1"* %117, i64 0, i32 0, i32 0, i32 0
  %120 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %119, align 8
  %121 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %122 = bitcast %"class.viz::FrameSinkId"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = ptrtoint %"class.viz::FrameSinkId"* %120 to i64
  %125 = sub i64 %123, %124
  %126 = icmp eq i64 %125, 0
  %127 = inttoptr i64 %123 to %"class.viz::FrameSinkId"*
  br i1 %126, label %156, label %128

128:                                              ; preds = %116
  %129 = ashr exact i64 %125, 3
  %130 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %131 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %132 = load i32, i32* %130, align 4
  %133 = load i32, i32* %131, align 4
  br label %134

134:                                              ; preds = %152, %128
  %135 = phi %"class.viz::FrameSinkId"* [ %120, %128 ], [ %154, %152 ]
  %136 = phi i64 [ %129, %128 ], [ %153, %152 ]
  %137 = lshr i64 %136, 1
  %138 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %135, i64 %137
  %139 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %138, i64 0, i32 0
  %140 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %135, i64 %137, i32 1
  %141 = load i32, i32* %139, align 4
  %142 = icmp ult i32 %141, %132
  br i1 %142, label %148, label %143

143:                                              ; preds = %134
  %144 = icmp ult i32 %132, %141
  br i1 %144, label %152, label %145

145:                                              ; preds = %143
  %146 = load i32, i32* %140, align 4
  %147 = icmp ult i32 %146, %133
  br i1 %147, label %148, label %152

148:                                              ; preds = %145, %134
  %149 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %138, i64 1
  %150 = xor i64 %137, -1
  %151 = add i64 %136, %150
  br label %152

152:                                              ; preds = %148, %145, %143
  %153 = phi i64 [ %151, %148 ], [ %137, %145 ], [ %137, %143 ]
  %154 = phi %"class.viz::FrameSinkId"* [ %149, %148 ], [ %135, %145 ], [ %135, %143 ]
  %155 = icmp eq i64 %153, 0
  br i1 %155, label %156, label %134

156:                                              ; preds = %152, %116
  %157 = phi %"class.viz::FrameSinkId"* [ %120, %116 ], [ %154, %152 ]
  %158 = icmp eq %"class.viz::FrameSinkId"* %157, %127
  br i1 %158, label %173, label %159

159:                                              ; preds = %156
  %160 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %161 = getelementptr inbounds %"class.viz::Surface", %"class.viz::Surface"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %162 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %157, i64 0, i32 0
  %163 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %157, i64 0, i32 1
  %164 = load i32, i32* %160, align 4
  %165 = load i32, i32* %162, align 4
  %166 = icmp ult i32 %164, %165
  br i1 %166, label %173, label %167

167:                                              ; preds = %159
  %168 = icmp ult i32 %165, %164
  br i1 %168, label %176, label %169

169:                                              ; preds = %167
  %170 = load i32, i32* %161, align 4
  %171 = load i32, i32* %163, align 4
  %172 = icmp ult i32 %170, %171
  br i1 %172, label %173, label %176

173:                                              ; preds = %169, %159, %156
  %174 = getelementptr inbounds %"class.base::internal::flat_tree.1", %"class.base::internal::flat_tree.1"* %117, i64 0, i32 0
  %175 = tail call %"class.viz::FrameSinkId"* @_ZNSt3__16vectorIN3viz11FrameSinkIdENS_9allocatorIS2_EEE7emplaceIJRKS2_EEENS_11__wrap_iterIPS2_EENS9_IPS7_EEDpOT_(%"class.std::__1::vector.2"* %174, %"class.viz::FrameSinkId"* %157, %"class.viz::FrameSinkId"* dereferenceable(8) %118) #13
  br label %176

176:                                              ; preds = %173, %169, %167, %2, %10
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3viz16FrameRateDecider32multiple_refresh_rates_supportedEv(%"class.viz::FrameRateDecider"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 16
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %15

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 7
  %7 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 7, i32 0, i32 1
  %8 = bitcast %"class.base::TimeDelta"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.9"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 3
  %14 = icmp ugt i64 %13, 1
  br label %15

15:                                               ; preds = %1, %5
  %16 = phi i1 [ true, %1 ], [ %14, %5 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) i64* @_ZN4base8flat_mapIN3viz9SurfaceIdEmNSt3__14lessIvEENS3_6vectorINS3_4pairIS2_mEENS3_9allocatorIS8_EEEEEixERKS2_(%"class.base::flat_map"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %6 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %"struct.std::__1::pair"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = ptrtoint %"struct.std::__1::pair"* %5 to i64
  %10 = sub i64 %8, %9
  %11 = icmp eq i64 %10, 0
  %12 = inttoptr i64 %8 to %"struct.std::__1::pair"*
  br i1 %11, label %73, label %13

13:                                               ; preds = %2
  %14 = sdiv exact i64 %10, 40
  %15 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %17 = load i32, i32* %15, align 4
  %18 = load i32, i32* %16, align 4
  %19 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %21 = load i32, i32* %19, align 4
  %22 = load i32, i32* %20, align 4
  %23 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %24 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %25 = load i64, i64* %23, align 8
  %26 = load i64, i64* %24, align 8
  br label %27

27:                                               ; preds = %69, %13
  %28 = phi %"struct.std::__1::pair"* [ %5, %13 ], [ %71, %69 ]
  %29 = phi i64 [ %14, %13 ], [ %70, %69 ]
  %30 = lshr i64 %29, 1
  %31 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %28, i64 %30
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %28, i64 %30, i32 0, i32 0, i32 1
  %34 = load i32, i32* %32, align 4
  %35 = icmp ult i32 %34, %17
  br i1 %35, label %65, label %36

36:                                               ; preds = %27
  %37 = icmp ult i32 %17, %34
  br i1 %37, label %69, label %38

38:                                               ; preds = %36
  %39 = load i32, i32* %33, align 4
  %40 = icmp ult i32 %39, %18
  br i1 %40, label %65, label %41

41:                                               ; preds = %38
  %42 = icmp ult i32 %18, %39
  br i1 %42, label %69, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %28, i64 %30, i32 0, i32 1, i32 0
  %45 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %28, i64 %30, i32 0, i32 1, i32 1
  %46 = load i32, i32* %44, align 4
  %47 = icmp ult i32 %46, %21
  br i1 %47, label %65, label %48

48:                                               ; preds = %43
  %49 = icmp ult i32 %21, %46
  br i1 %49, label %69, label %50

50:                                               ; preds = %48
  %51 = load i32, i32* %45, align 4
  %52 = icmp ult i32 %51, %22
  br i1 %52, label %65, label %53

53:                                               ; preds = %50
  %54 = icmp ult i32 %22, %51
  br i1 %54, label %69, label %55

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %28, i64 %30, i32 0, i32 1, i32 2, i32 0, i32 0
  %57 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %28, i64 %30, i32 0, i32 1, i32 2, i32 0, i32 1
  %58 = load i64, i64* %56, align 8
  %59 = icmp ult i64 %58, %25
  br i1 %59, label %65, label %60

60:                                               ; preds = %55
  %61 = icmp ult i64 %25, %58
  br i1 %61, label %69, label %62

62:                                               ; preds = %60
  %63 = load i64, i64* %57, align 8
  %64 = icmp ult i64 %63, %26
  br i1 %64, label %65, label %69

65:                                               ; preds = %62, %55, %50, %43, %38, %27
  %66 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %31, i64 1
  %67 = xor i64 %30, -1
  %68 = add i64 %29, %67
  br label %69

69:                                               ; preds = %65, %62, %60, %53, %48, %41, %36
  %70 = phi i64 [ %68, %65 ], [ %30, %62 ], [ %30, %41 ], [ %30, %60 ], [ %30, %53 ], [ %30, %48 ], [ %30, %36 ]
  %71 = phi %"struct.std::__1::pair"* [ %66, %65 ], [ %28, %62 ], [ %28, %41 ], [ %28, %60 ], [ %28, %53 ], [ %28, %48 ], [ %28, %36 ]
  %72 = icmp eq i64 %70, 0
  br i1 %72, label %73, label %27

73:                                               ; preds = %69, %2
  %74 = phi %"struct.std::__1::pair"* [ %5, %2 ], [ %71, %69 ]
  %75 = icmp eq %"struct.std::__1::pair"* %74, %12
  br i1 %75, label %122, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %78 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %79 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %74, i64 0, i32 0, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %74, i64 0, i32 0, i32 0, i32 1
  %81 = load i32, i32* %77, align 4
  %82 = load i32, i32* %79, align 4
  %83 = icmp ult i32 %81, %82
  br i1 %83, label %122, label %84

84:                                               ; preds = %76
  %85 = icmp ult i32 %82, %81
  br i1 %85, label %126, label %86

86:                                               ; preds = %84
  %87 = load i32, i32* %78, align 4
  %88 = load i32, i32* %80, align 4
  %89 = icmp ult i32 %87, %88
  br i1 %89, label %122, label %90

90:                                               ; preds = %86
  %91 = icmp ult i32 %88, %87
  br i1 %91, label %126, label %92

92:                                               ; preds = %90
  %93 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %94 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %95 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %74, i64 0, i32 0, i32 1, i32 0
  %96 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %74, i64 0, i32 0, i32 1, i32 1
  %97 = load i32, i32* %93, align 4
  %98 = load i32, i32* %95, align 4
  %99 = icmp ult i32 %97, %98
  br i1 %99, label %122, label %100

100:                                              ; preds = %92
  %101 = icmp ult i32 %98, %97
  br i1 %101, label %126, label %102

102:                                              ; preds = %100
  %103 = load i32, i32* %94, align 4
  %104 = load i32, i32* %96, align 4
  %105 = icmp ult i32 %103, %104
  br i1 %105, label %122, label %106

106:                                              ; preds = %102
  %107 = icmp ult i32 %104, %103
  br i1 %107, label %126, label %108

108:                                              ; preds = %106
  %109 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %110 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %111 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %74, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0
  %112 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %74, i64 0, i32 0, i32 1, i32 2, i32 0, i32 1
  %113 = load i64, i64* %109, align 8
  %114 = load i64, i64* %111, align 8
  %115 = icmp ult i64 %113, %114
  br i1 %115, label %122, label %116

116:                                              ; preds = %108
  %117 = icmp ult i64 %114, %113
  br i1 %117, label %126, label %118

118:                                              ; preds = %116
  %119 = load i64, i64* %110, align 8
  %120 = load i64, i64* %112, align 8
  %121 = icmp ult i64 %119, %120
  br i1 %121, label %122, label %126

122:                                              ; preds = %76, %92, %102, %108, %86, %73, %118
  %123 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123) #13
  store i64 0, i64* %3, align 8
  %124 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %0, i64 0, i32 0, i32 0
  %125 = call %"struct.std::__1::pair"* @_ZNSt3__16vectorINS_4pairIN3viz9SurfaceIdEmEENS_9allocatorIS4_EEE7emplaceIJRKS3_mEEENS_11__wrap_iterIPS4_EENSB_IPKS4_EEDpOT_(%"class.std::__1::vector"* %124, %"struct.std::__1::pair"* %74, %"class.viz::SurfaceId"* dereferenceable(32) %1, i64* nonnull dereferenceable(8) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #13
  br label %126

126:                                              ; preds = %84, %100, %106, %116, %90, %122, %118
  %127 = phi %"struct.std::__1::pair"* [ %125, %122 ], [ %74, %118 ], [ %74, %90 ], [ %74, %116 ], [ %74, %106 ], [ %74, %100 ], [ %74, %84 ]
  %128 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %127, i64 0, i32 1
  ret i64* %128
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3viz16FrameRateDecider25ShouldToggleFrameIntervalEii(%"class.viz::FrameRateDecider"* nocapture readonly, i32, i32) local_unnamed_addr #4 align 2 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %14, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 15
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = icmp sgt i32 %1, 0
  br label %14

11:                                               ; preds = %5
  %12 = add nsw i32 %2, %1
  %13 = icmp sgt i32 %12, 1
  br label %14

14:                                               ; preds = %3, %11, %9
  %15 = phi i1 [ %10, %9 ], [ %13, %11 ], [ false, %3 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16FrameRateDecider20SetPreferredIntervalEN4base9TimeDeltaE(%"class.viz::FrameRateDecider"* nocapture, i64) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = alloca %"class.base::TimeDelta", align 8
  %5 = alloca %"class.base::TimeDelta", align 8
  %6 = alloca double, align 8
  %7 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 0, i32 0
  store i64 %1, i64* %7, align 8
  %8 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %9 = and i8 %8, 25
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %16, label %11, !prof !3

11:                                               ; preds = %2
  %12 = bitcast double* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #13
  %13 = call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* nonnull %5) #13
  store double %13, double* %6, align 8
  %14 = call i64 @_ZN20trace_event_internal13AddTraceEventIdEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i64 0, i64 0), i8* null, i64 0, i32 8, i64 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), double* nonnull dereferenceable(8) %6)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #13
  %15 = load i64, i64* %7, align 8
  br label %16

16:                                               ; preds = %2, %11
  %17 = phi i64 [ %1, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 9, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.base::TimeDelta"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20)
  %21 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  store i64 %17, i64* %21, align 8
  %22 = add i64 %17, -9223372036854775807
  %23 = icmp ult i64 %22, 2
  %24 = add i64 %19, -9223372036854775807
  %25 = icmp ult i64 %24, 2
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %30

27:                                               ; preds = %16
  %28 = icmp eq i64 %17, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  %29 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 8
  br i1 %28, label %41, label %45

30:                                               ; preds = %16
  %31 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %4, i64 %19) #13
  %32 = icmp eq i64 %31, -9223372036854775808
  br i1 %32, label %33, label %35

33:                                               ; preds = %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  %34 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 8
  br label %45

35:                                               ; preds = %30
  %36 = icmp slt i64 %31, 0
  %37 = sub nsw i64 0, %31
  %38 = select i1 %36, i64 %37, i64 %31
  %39 = icmp ult i64 %38, 500
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  %40 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 8
  br i1 %39, label %41, label %45

41:                                               ; preds = %27, %35
  %42 = phi i64* [ %29, %27 ], [ %40, %35 ]
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %43, 1
  br label %45

45:                                               ; preds = %27, %33, %35, %41
  %46 = phi i64* [ %42, %41 ], [ %40, %35 ], [ %34, %33 ], [ %29, %27 ]
  %47 = phi i64 [ %44, %41 ], [ 0, %35 ], [ 0, %33 ], [ 0, %27 ]
  store i64 %47, i64* %46, align 8
  %48 = load i64, i64* %7, align 8
  store i64 %48, i64* %18, align 8
  %49 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 10, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51)
  %52 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 %50, i64* %52, align 8
  %53 = add i64 %50, -9223372036854775807
  %54 = icmp ult i64 %53, 2
  %55 = add i64 %48, -9223372036854775807
  %56 = icmp ult i64 %55, 2
  %57 = or i1 %56, %54
  br i1 %57, label %58, label %60

58:                                               ; preds = %45
  %59 = icmp eq i64 %50, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51)
  br i1 %59, label %85, label %69

60:                                               ; preds = %45
  %61 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %3, i64 %48) #13
  %62 = icmp eq i64 %61, -9223372036854775808
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51)
  br label %69

64:                                               ; preds = %60
  %65 = icmp slt i64 %61, 0
  %66 = sub nsw i64 0, %61
  %67 = select i1 %65, i64 %66, i64 %61
  %68 = icmp ult i64 %67, 500
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51)
  br i1 %68, label %85, label %69

69:                                               ; preds = %58, %63, %64
  %70 = load i64, i64* %7, align 8
  %71 = load i64, i64* %49, align 8
  %72 = icmp sgt i64 %71, %70
  br i1 %72, label %78, label %73

73:                                               ; preds = %69
  %74 = load i64, i64* %46, align 8
  %75 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 11
  %76 = load i64, i64* %75, align 8
  %77 = icmp ult i64 %74, %76
  br i1 %77, label %85, label %78

78:                                               ; preds = %73, %69
  store i64 %70, i64* %49, align 8
  %79 = getelementptr inbounds %"class.viz::FrameRateDecider", %"class.viz::FrameRateDecider"* %0, i64 0, i32 14
  %80 = load %"class.viz::FrameRateDecider::Client"*, %"class.viz::FrameRateDecider::Client"** %79, align 8
  %81 = bitcast %"class.viz::FrameRateDecider::Client"* %80 to void (%"class.viz::FrameRateDecider::Client"*, i64)***
  %82 = load void (%"class.viz::FrameRateDecider::Client"*, i64)**, void (%"class.viz::FrameRateDecider::Client"*, i64)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.viz::FrameRateDecider::Client"*, i64)*, void (%"class.viz::FrameRateDecider::Client"*, i64)** %82, i64 2
  %84 = load void (%"class.viz::FrameRateDecider::Client"*, i64)*, void (%"class.viz::FrameRateDecider::Client"*, i64)** %83, align 8
  call void %84(%"class.viz::FrameRateDecider::Client"* %80, i64 %70) #13
  br label %85

85:                                               ; preds = %73, %58, %78, %64
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIdEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, double* dereferenceable(8)) local_unnamed_addr #5 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #13
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #13
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #13
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #13
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 4, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = bitcast double* %8 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0, i32 0
  store i64 %20, i64* %21, align 8
  %22 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #13
  %23 = load i8, i8* %16, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %59, label %25

25:                                               ; preds = %9, %54
  %26 = phi i64 [ %55, %54 ], [ 0, %9 ]
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 8
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %32 = bitcast %"union.base::trace_event::TraceValue"* %31 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %33 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %32, align 8
  %34 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %33, null
  br i1 %34, label %54, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %33 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %37 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, i64 1
  %39 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %38, align 8
  call void %39(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %33) #13
  %40 = load i8, i8* %27, align 1
  br label %41

41:                                               ; preds = %35, %25
  %42 = phi i8 [ %28, %25 ], [ %40, %35 ]
  %43 = icmp eq i8 %42, 9
  br i1 %43, label %44, label %54

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %46 = bitcast %"union.base::trace_event::TraceValue"* %45 to %"class.protozero::HeapBuffered"**
  %47 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %46, align 8
  %48 = icmp eq %"class.protozero::HeapBuffered"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %50) #13
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %51) #13
  %52 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %52) #13
  %53 = bitcast %"class.protozero::HeapBuffered"* %47 to i8*
  call void @_ZdlPv(i8* %53) #14
  br label %54

54:                                               ; preds = %49, %44, %41, %30
  %55 = add nuw nsw i64 %26, 1
  %56 = load i8, i8* %16, align 8
  %57 = zext i8 %56 to i64
  %58 = icmp ult i64 %55, %57
  br i1 %58, label %25, label %59

59:                                               ; preds = %54, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #13
  ret i64 %22
}

declare double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #13
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !4
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #13
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %26, i8* %27) #13
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #13
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #13
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz15SurfaceObserver24OnFirstSurfaceActivationERKNS_11SurfaceInfoE(%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceInfo"* dereferenceable(48)) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz15SurfaceObserver18OnSurfaceActivatedERKNS_9SurfaceIdE(%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"* dereferenceable(32)) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz15SurfaceObserver29OnSurfaceMarkedForDestructionERKNS_9SurfaceIdE(%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"* dereferenceable(32)) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz15SurfaceObserver18OnSurfaceDestroyedERKNS_9SurfaceIdE(%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"* dereferenceable(32)) unnamed_addr #1 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZN3viz15SurfaceObserver16OnSurfaceDamagedERKNS_9SurfaceIdERKNS_13BeginFrameAckE(%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"* dereferenceable(32), %"struct.viz::BeginFrameAck"* dereferenceable(32)) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz15SurfaceObserver23OnSurfaceDamageExpectedERKNS_9SurfaceIdERKNS_14BeginFrameArgsE(%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"* dereferenceable(32), %"struct.viz::BeginFrameArgs"* dereferenceable(64)) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz15SurfaceObserver23OnAddedSurfaceReferenceERKNS_9SurfaceIdES3_(%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"* dereferenceable(32), %"class.viz::SurfaceId"* dereferenceable(32)) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz15SurfaceObserver25OnRemovedSurfaceReferenceERKNS_9SurfaceIdES3_(%"class.viz::SurfaceObserver"*, %"class.viz::SurfaceId"* dereferenceable(32), %"class.viz::SurfaceId"* dereferenceable(32)) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #6

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #6

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #6

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #6

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #11

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #12

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #6

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRNS_6__lessIN4base9TimeDeltaES3_EEPS3_EEvT0_S7_T_(%"class.base::TimeDelta"*, %"class.base::TimeDelta"*, %"struct.std::__1::__less.387"* dereferenceable(1)) local_unnamed_addr #1 comdat {
  br label %4

4:                                                ; preds = %279, %3
  %5 = phi %"class.base::TimeDelta"* [ %1, %3 ], [ %261, %279 ]
  %6 = phi %"class.base::TimeDelta"* [ %0, %3 ], [ %15, %279 ]
  %7 = ptrtoint %"class.base::TimeDelta"* %5 to i64
  %8 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 -1
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %8, i64 0, i32 0
  %10 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %8, i64 0, i32 0
  %11 = ptrtoint %"class.base::TimeDelta"* %5 to i64
  br label %12

12:                                               ; preds = %288, %4
  %13 = phi %"class.base::TimeDelta"* [ %6, %4 ], [ %289, %288 ]
  br label %14

14:                                               ; preds = %213, %12
  %15 = phi %"class.base::TimeDelta"* [ %13, %12 ], [ %200, %213 ]
  %16 = ptrtoint %"class.base::TimeDelta"* %15 to i64
  %17 = sub i64 %7, %16
  %18 = ashr exact i64 %17, 3
  switch i64 %18, label %84 [
    i64 0, label %292
    i64 1, label %292
    i64 2, label %19
    i64 3, label %26
    i64 4, label %47
    i64 5, label %78
  ]

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %15, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 -1, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp slt i64 %23, %21
  br i1 %24, label %25, label %292

25:                                               ; preds = %19
  store i64 %23, i64* %20, align 8
  store i64 %21, i64* %22, align 8
  br label %292

26:                                               ; preds = %14
  %27 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %15, i64 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %15, i64 1, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = icmp slt i64 %30, %28
  %32 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 -1, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = icmp slt i64 %33, %30
  br i1 %31, label %41, label %35

35:                                               ; preds = %26
  br i1 %34, label %36, label %292

36:                                               ; preds = %35
  store i64 %33, i64* %29, align 8
  store i64 %30, i64* %32, align 8
  %37 = load i64, i64* %27, align 8
  %38 = load i64, i64* %29, align 8
  %39 = icmp slt i64 %38, %37
  br i1 %39, label %40, label %292

40:                                               ; preds = %36
  store i64 %38, i64* %27, align 8
  store i64 %37, i64* %29, align 8
  br label %292

41:                                               ; preds = %26
  br i1 %34, label %42, label %43

42:                                               ; preds = %41
  store i64 %33, i64* %27, align 8
  store i64 %28, i64* %32, align 8
  br label %292

43:                                               ; preds = %41
  store i64 %30, i64* %27, align 8
  store i64 %28, i64* %29, align 8
  %44 = load i64, i64* %32, align 8
  %45 = icmp slt i64 %44, %28
  br i1 %45, label %46, label %292

46:                                               ; preds = %43
  store i64 %44, i64* %29, align 8
  store i64 %28, i64* %32, align 8
  br label %292

47:                                               ; preds = %14
  %48 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %15, i64 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %15, i64 1, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = icmp slt i64 %51, %49
  %53 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %15, i64 2, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = icmp slt i64 %54, %51
  br i1 %52, label %60, label %56

56:                                               ; preds = %47
  br i1 %55, label %57, label %65

57:                                               ; preds = %56
  store i64 %54, i64* %50, align 8
  store i64 %51, i64* %53, align 8
  %58 = icmp slt i64 %54, %49
  br i1 %58, label %59, label %65

59:                                               ; preds = %57
  store i64 %54, i64* %48, align 8
  store i64 %49, i64* %50, align 8
  br label %65

60:                                               ; preds = %47
  br i1 %55, label %61, label %62

61:                                               ; preds = %60
  store i64 %54, i64* %48, align 8
  store i64 %49, i64* %53, align 8
  br label %65

62:                                               ; preds = %60
  store i64 %51, i64* %48, align 8
  store i64 %49, i64* %50, align 8
  %63 = icmp slt i64 %54, %49
  br i1 %63, label %64, label %65

64:                                               ; preds = %62
  store i64 %54, i64* %50, align 8
  store i64 %49, i64* %53, align 8
  br label %65

65:                                               ; preds = %64, %62, %61, %59, %57, %56
  %66 = phi i64 [ %49, %61 ], [ %54, %56 ], [ %51, %59 ], [ %51, %57 ], [ %49, %64 ], [ %54, %62 ]
  %67 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 -1, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = icmp slt i64 %68, %66
  br i1 %69, label %70, label %292

70:                                               ; preds = %65
  store i64 %68, i64* %53, align 8
  store i64 %66, i64* %67, align 8
  %71 = load i64, i64* %50, align 8
  %72 = load i64, i64* %53, align 8
  %73 = icmp slt i64 %72, %71
  br i1 %73, label %74, label %292

74:                                               ; preds = %70
  store i64 %72, i64* %50, align 8
  store i64 %71, i64* %53, align 8
  %75 = load i64, i64* %48, align 8
  %76 = icmp slt i64 %72, %75
  br i1 %76, label %77, label %292

77:                                               ; preds = %74
  store i64 %72, i64* %48, align 8
  store i64 %75, i64* %50, align 8
  br label %292

78:                                               ; preds = %14
  %79 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %15, i64 1
  %80 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %15, i64 2
  %81 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %15, i64 3
  %82 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 -1
  %83 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessIN4base9TimeDeltaES3_EEPS3_EEjT0_S7_S7_S7_S7_T_(%"class.base::TimeDelta"* %15, %"class.base::TimeDelta"* %79, %"class.base::TimeDelta"* %80, %"class.base::TimeDelta"* %81, %"class.base::TimeDelta"* %82, %"struct.std::__1::__less.387"* dereferenceable(1) %2)
  br label %292

84:                                               ; preds = %14
  %85 = icmp slt i64 %17, 248
  br i1 %85, label %86, label %135

86:                                               ; preds = %84
  %87 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %15, i64 2
  %88 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %15, i64 0, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %15, i64 1, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = icmp slt i64 %91, %89
  %93 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %87, i64 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = icmp slt i64 %94, %91
  br i1 %92, label %100, label %96

96:                                               ; preds = %86
  br i1 %95, label %97, label %105

97:                                               ; preds = %96
  store i64 %94, i64* %90, align 8
  store i64 %91, i64* %93, align 8
  %98 = icmp slt i64 %94, %89
  br i1 %98, label %99, label %105

99:                                               ; preds = %97
  store i64 %94, i64* %88, align 8
  store i64 %89, i64* %90, align 8
  br label %105

100:                                              ; preds = %86
  br i1 %95, label %101, label %102

101:                                              ; preds = %100
  store i64 %94, i64* %88, align 8
  store i64 %89, i64* %93, align 8
  br label %105

102:                                              ; preds = %100
  store i64 %91, i64* %88, align 8
  store i64 %89, i64* %90, align 8
  %103 = icmp slt i64 %94, %89
  br i1 %103, label %104, label %105

104:                                              ; preds = %102
  store i64 %94, i64* %90, align 8
  store i64 %89, i64* %93, align 8
  br label %105

105:                                              ; preds = %104, %102, %101, %99, %97, %96
  %106 = phi i64 [ %94, %96 ], [ %91, %97 ], [ %91, %99 ], [ %89, %101 ], [ %94, %102 ], [ %89, %104 ]
  %107 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %15, i64 3
  %108 = icmp eq %"class.base::TimeDelta"* %107, %5
  br i1 %108, label %292, label %109

109:                                              ; preds = %105, %133
  %110 = phi i64 [ %134, %133 ], [ %106, %105 ]
  %111 = phi %"class.base::TimeDelta"* [ %131, %133 ], [ %107, %105 ]
  %112 = phi %"class.base::TimeDelta"* [ %111, %133 ], [ %87, %105 ]
  %113 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %111, i64 0, i32 0
  %114 = load i64, i64* %113, align 8
  %115 = icmp slt i64 %114, %110
  br i1 %115, label %116, label %130

116:                                              ; preds = %109, %122
  %117 = phi i64 [ %125, %122 ], [ %110, %109 ]
  %118 = phi %"class.base::TimeDelta"* [ %119, %122 ], [ %111, %109 ]
  %119 = phi %"class.base::TimeDelta"* [ %123, %122 ], [ %112, %109 ]
  %120 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %118, i64 0, i32 0
  store i64 %117, i64* %120, align 8
  %121 = icmp eq %"class.base::TimeDelta"* %119, %15
  br i1 %121, label %127, label %122

122:                                              ; preds = %116
  %123 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %119, i64 -1
  %124 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %123, i64 0, i32 0
  %125 = load i64, i64* %124, align 8
  %126 = icmp slt i64 %114, %125
  br i1 %126, label %116, label %127

127:                                              ; preds = %122, %116
  %128 = phi %"class.base::TimeDelta"* [ %15, %116 ], [ %119, %122 ]
  %129 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %128, i64 0, i32 0
  store i64 %114, i64* %129, align 8
  br label %130

130:                                              ; preds = %127, %109
  %131 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %111, i64 1
  %132 = icmp eq %"class.base::TimeDelta"* %131, %5
  br i1 %132, label %292, label %133

133:                                              ; preds = %130
  %134 = load i64, i64* %113, align 8
  br label %109

135:                                              ; preds = %84
  %136 = icmp sgt i64 %17, 7992
  %137 = sdiv i64 %18, 2
  %138 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %15, i64 %137
  br i1 %136, label %139, label %144

139:                                              ; preds = %135
  %140 = sdiv i64 %18, 4
  %141 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %15, i64 %140
  %142 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %138, i64 %140
  %143 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessIN4base9TimeDeltaES3_EEPS3_EEjT0_S7_S7_S7_S7_T_(%"class.base::TimeDelta"* %15, %"class.base::TimeDelta"* %141, %"class.base::TimeDelta"* %138, %"class.base::TimeDelta"* %142, %"class.base::TimeDelta"* %8, %"struct.std::__1::__less.387"* dereferenceable(1) %2)
  br label %164

144:                                              ; preds = %135
  %145 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %15, i64 0, i32 0
  %146 = load i64, i64* %145, align 8
  %147 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %138, i64 0, i32 0
  %148 = load i64, i64* %147, align 8
  %149 = icmp slt i64 %148, %146
  %150 = load i64, i64* %9, align 8
  %151 = icmp slt i64 %150, %148
  br i1 %149, label %158, label %152

152:                                              ; preds = %144
  br i1 %151, label %153, label %164

153:                                              ; preds = %152
  store i64 %150, i64* %147, align 8
  store i64 %148, i64* %9, align 8
  %154 = load i64, i64* %145, align 8
  %155 = load i64, i64* %147, align 8
  %156 = icmp slt i64 %155, %154
  br i1 %156, label %157, label %164

157:                                              ; preds = %153
  store i64 %155, i64* %145, align 8
  store i64 %154, i64* %147, align 8
  br label %164

158:                                              ; preds = %144
  br i1 %151, label %159, label %160

159:                                              ; preds = %158
  store i64 %150, i64* %145, align 8
  store i64 %146, i64* %9, align 8
  br label %164

160:                                              ; preds = %158
  store i64 %148, i64* %145, align 8
  store i64 %146, i64* %147, align 8
  %161 = load i64, i64* %9, align 8
  %162 = icmp slt i64 %161, %146
  br i1 %162, label %163, label %164

163:                                              ; preds = %160
  store i64 %161, i64* %147, align 8
  store i64 %146, i64* %9, align 8
  br label %164

164:                                              ; preds = %163, %160, %159, %157, %153, %152, %139
  %165 = phi i32 [ %143, %139 ], [ 1, %159 ], [ 0, %152 ], [ 2, %157 ], [ 1, %153 ], [ 2, %163 ], [ 1, %160 ]
  %166 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %138, i64 0, i32 0
  %167 = load i64, i64* %166, align 8
  %168 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %15, i64 0, i32 0
  %169 = load i64, i64* %168, align 8
  %170 = icmp slt i64 %169, %167
  br i1 %170, label %224, label %171

171:                                              ; preds = %164, %217
  %172 = phi %"class.base::TimeDelta"* [ %173, %217 ], [ %8, %164 ]
  %173 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %172, i64 -1
  %174 = icmp eq %"class.base::TimeDelta"* %15, %173
  br i1 %174, label %175, label %217

175:                                              ; preds = %171
  %176 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %15, i64 1
  %177 = load i64, i64* %10, align 8
  %178 = icmp slt i64 %169, %177
  br i1 %178, label %192, label %179

179:                                              ; preds = %175
  %180 = icmp eq %"class.base::TimeDelta"* %176, %8
  br i1 %180, label %292, label %181

181:                                              ; preds = %179, %189
  %182 = phi %"class.base::TimeDelta"* [ %190, %189 ], [ %176, %179 ]
  %183 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %182, i64 0, i32 0
  %184 = load i64, i64* %183, align 8
  %185 = icmp slt i64 %169, %184
  br i1 %185, label %186, label %189

186:                                              ; preds = %181
  %187 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %182, i64 0, i32 0
  store i64 %177, i64* %187, align 8
  store i64 %184, i64* %10, align 8
  %188 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %182, i64 1
  br label %192

189:                                              ; preds = %181
  %190 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %182, i64 1
  %191 = icmp eq %"class.base::TimeDelta"* %190, %8
  br i1 %191, label %292, label %181

192:                                              ; preds = %186, %175
  %193 = phi %"class.base::TimeDelta"* [ %176, %175 ], [ %188, %186 ]
  %194 = icmp eq %"class.base::TimeDelta"* %193, %8
  br i1 %194, label %292, label %195

195:                                              ; preds = %192, %215
  %196 = phi %"class.base::TimeDelta"* [ %204, %215 ], [ %193, %192 ]
  %197 = phi %"class.base::TimeDelta"* [ %209, %215 ], [ %8, %192 ]
  %198 = load i64, i64* %168, align 8
  br label %199

199:                                              ; preds = %199, %195
  %200 = phi %"class.base::TimeDelta"* [ %196, %195 ], [ %204, %199 ]
  %201 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %200, i64 0, i32 0
  %202 = load i64, i64* %201, align 8
  %203 = icmp slt i64 %198, %202
  %204 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %200, i64 1
  br i1 %203, label %205, label %199

205:                                              ; preds = %199
  %206 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %200, i64 0, i32 0
  br label %207

207:                                              ; preds = %205, %207
  %208 = phi %"class.base::TimeDelta"* [ %209, %207 ], [ %197, %205 ]
  %209 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %208, i64 -1
  %210 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %209, i64 0, i32 0
  %211 = load i64, i64* %210, align 8
  %212 = icmp slt i64 %198, %211
  br i1 %212, label %207, label %213

213:                                              ; preds = %207
  %214 = icmp ult %"class.base::TimeDelta"* %200, %209
  br i1 %214, label %215, label %14

215:                                              ; preds = %213
  %216 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %209, i64 0, i32 0
  store i64 %211, i64* %206, align 8
  store i64 %202, i64* %216, align 8
  br label %195

217:                                              ; preds = %171
  %218 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %173, i64 0, i32 0
  %219 = load i64, i64* %218, align 8
  %220 = icmp slt i64 %219, %167
  br i1 %220, label %221, label %171

221:                                              ; preds = %217
  %222 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %173, i64 0, i32 0
  store i64 %219, i64* %168, align 8
  store i64 %169, i64* %222, align 8
  %223 = add i32 %165, 1
  br label %224

224:                                              ; preds = %164, %221
  %225 = phi i32 [ %223, %221 ], [ %165, %164 ]
  %226 = phi %"class.base::TimeDelta"* [ %173, %221 ], [ %8, %164 ]
  %227 = ptrtoint %"class.base::TimeDelta"* %15 to i64
  %228 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %15, i64 1
  %229 = icmp ult %"class.base::TimeDelta"* %228, %226
  br i1 %229, label %230, label %258

230:                                              ; preds = %224, %253
  %231 = phi %"class.base::TimeDelta"* [ %257, %253 ], [ %138, %224 ]
  %232 = phi i32 [ %255, %253 ], [ %225, %224 ]
  %233 = phi %"class.base::TimeDelta"* [ %242, %253 ], [ %228, %224 ]
  %234 = phi %"class.base::TimeDelta"* [ %247, %253 ], [ %226, %224 ]
  %235 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %231, i64 0, i32 0
  %236 = load i64, i64* %235, align 8
  br label %237

237:                                              ; preds = %237, %230
  %238 = phi %"class.base::TimeDelta"* [ %233, %230 ], [ %242, %237 ]
  %239 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %238, i64 0, i32 0
  %240 = load i64, i64* %239, align 8
  %241 = icmp slt i64 %240, %236
  %242 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %238, i64 1
  br i1 %241, label %237, label %243

243:                                              ; preds = %237
  %244 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %238, i64 0, i32 0
  br label %245

245:                                              ; preds = %243, %245
  %246 = phi %"class.base::TimeDelta"* [ %247, %245 ], [ %234, %243 ]
  %247 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %246, i64 -1
  %248 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %247, i64 0, i32 0
  %249 = load i64, i64* %248, align 8
  %250 = icmp slt i64 %249, %236
  br i1 %250, label %251, label %245

251:                                              ; preds = %245
  %252 = icmp ugt %"class.base::TimeDelta"* %238, %247
  br i1 %252, label %258, label %253

253:                                              ; preds = %251
  %254 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %247, i64 0, i32 0
  store i64 %249, i64* %244, align 8
  store i64 %240, i64* %254, align 8
  %255 = add i32 %232, 1
  %256 = icmp eq %"class.base::TimeDelta"* %231, %238
  %257 = select i1 %256, %"class.base::TimeDelta"* %247, %"class.base::TimeDelta"* %231
  br label %230

258:                                              ; preds = %251, %224
  %259 = phi %"class.base::TimeDelta"* [ %138, %224 ], [ %231, %251 ]
  %260 = phi i32 [ %225, %224 ], [ %232, %251 ]
  %261 = phi %"class.base::TimeDelta"* [ %228, %224 ], [ %238, %251 ]
  %262 = icmp eq %"class.base::TimeDelta"* %261, %259
  br i1 %262, label %271, label %263

263:                                              ; preds = %258
  %264 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %261, i64 0, i32 0
  %265 = load i64, i64* %264, align 8
  %266 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %259, i64 0, i32 0
  %267 = load i64, i64* %266, align 8
  %268 = icmp slt i64 %267, %265
  br i1 %268, label %269, label %271

269:                                              ; preds = %263
  store i64 %267, i64* %264, align 8
  store i64 %265, i64* %266, align 8
  %270 = add i32 %260, 1
  br label %271

271:                                              ; preds = %258, %269, %263
  %272 = phi i32 [ %270, %269 ], [ %260, %263 ], [ %260, %258 ]
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %281

274:                                              ; preds = %271
  %275 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN4base9TimeDeltaES3_EEPS3_EEbT0_S7_T_(%"class.base::TimeDelta"* %15, %"class.base::TimeDelta"* %261, %"struct.std::__1::__less.387"* dereferenceable(1) %2)
  %276 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %261, i64 1
  %277 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN4base9TimeDeltaES3_EEPS3_EEbT0_S7_T_(%"class.base::TimeDelta"* %276, %"class.base::TimeDelta"* %5, %"struct.std::__1::__less.387"* dereferenceable(1) %2)
  br i1 %277, label %278, label %280

278:                                              ; preds = %274
  br i1 %275, label %292, label %279

279:                                              ; preds = %278, %290
  br label %4

280:                                              ; preds = %274
  br i1 %275, label %288, label %281

281:                                              ; preds = %280, %271
  %282 = ptrtoint %"class.base::TimeDelta"* %261 to i64
  %283 = sub i64 %282, %227
  %284 = sub i64 %11, %282
  %285 = icmp slt i64 %283, %284
  br i1 %285, label %286, label %290

286:                                              ; preds = %281
  tail call void @_ZNSt3__16__sortIRNS_6__lessIN4base9TimeDeltaES3_EEPS3_EEvT0_S7_T_(%"class.base::TimeDelta"* %15, %"class.base::TimeDelta"* %261, %"struct.std::__1::__less.387"* dereferenceable(1) %2)
  %287 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %261, i64 1
  br label %288

288:                                              ; preds = %286, %280
  %289 = phi %"class.base::TimeDelta"* [ %276, %280 ], [ %287, %286 ]
  br label %12

290:                                              ; preds = %281
  %291 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %261, i64 1
  tail call void @_ZNSt3__16__sortIRNS_6__lessIN4base9TimeDeltaES3_EEPS3_EEvT0_S7_T_(%"class.base::TimeDelta"* %291, %"class.base::TimeDelta"* %5, %"struct.std::__1::__less.387"* dereferenceable(1) %2)
  br label %279

292:                                              ; preds = %278, %192, %14, %14, %179, %189, %130, %105, %77, %74, %70, %65, %46, %43, %42, %40, %36, %35, %19, %25, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRNS_6__lessIN4base9TimeDeltaES3_EEPS3_EEjT0_S7_S7_S7_S7_T_(%"class.base::TimeDelta"*, %"class.base::TimeDelta"*, %"class.base::TimeDelta"*, %"class.base::TimeDelta"*, %"class.base::TimeDelta"*, %"struct.std::__1::__less.387"* dereferenceable(1)) local_unnamed_addr #1 comdat {
  %7 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %1, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp slt i64 %10, %8
  %12 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp slt i64 %13, %10
  br i1 %11, label %22, label %15

15:                                               ; preds = %6
  br i1 %14, label %16, label %28

16:                                               ; preds = %15
  store i64 %13, i64* %9, align 8
  store i64 %10, i64* %12, align 8
  %17 = load i64, i64* %7, align 8
  %18 = load i64, i64* %9, align 8
  %19 = icmp slt i64 %18, %17
  br i1 %19, label %20, label %28

20:                                               ; preds = %16
  store i64 %18, i64* %7, align 8
  store i64 %17, i64* %9, align 8
  %21 = load i64, i64* %12, align 8
  br label %28

22:                                               ; preds = %6
  br i1 %14, label %23, label %24

23:                                               ; preds = %22
  store i64 %13, i64* %7, align 8
  store i64 %8, i64* %12, align 8
  br label %28

24:                                               ; preds = %22
  store i64 %10, i64* %7, align 8
  store i64 %8, i64* %9, align 8
  %25 = load i64, i64* %12, align 8
  %26 = icmp slt i64 %25, %8
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  store i64 %25, i64* %9, align 8
  store i64 %8, i64* %12, align 8
  br label %28

28:                                               ; preds = %27, %24, %23, %20, %16, %15
  %29 = phi i64 [ %8, %23 ], [ %13, %15 ], [ %21, %20 ], [ %10, %16 ], [ %8, %27 ], [ %25, %24 ]
  %30 = phi i32 [ 1, %23 ], [ 0, %15 ], [ 2, %20 ], [ 1, %16 ], [ 2, %27 ], [ 1, %24 ]
  %31 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = icmp slt i64 %32, %29
  br i1 %33, label %34, label %46

34:                                               ; preds = %28
  store i64 %32, i64* %12, align 8
  store i64 %29, i64* %31, align 8
  %35 = add nuw nsw i32 %30, 1
  %36 = load i64, i64* %9, align 8
  %37 = load i64, i64* %12, align 8
  %38 = icmp slt i64 %37, %36
  br i1 %38, label %39, label %46

39:                                               ; preds = %34
  store i64 %37, i64* %9, align 8
  store i64 %36, i64* %12, align 8
  %40 = add nuw nsw i32 %30, 2
  %41 = load i64, i64* %7, align 8
  %42 = load i64, i64* %9, align 8
  %43 = icmp slt i64 %42, %41
  br i1 %43, label %44, label %46

44:                                               ; preds = %39
  store i64 %42, i64* %7, align 8
  store i64 %41, i64* %9, align 8
  %45 = add nuw nsw i32 %30, 3
  br label %46

46:                                               ; preds = %28, %34, %39, %44
  %47 = phi i32 [ %45, %44 ], [ %40, %39 ], [ %35, %34 ], [ %30, %28 ]
  %48 = load i64, i64* %31, align 8
  %49 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp slt i64 %50, %48
  br i1 %51, label %52, label %69

52:                                               ; preds = %46
  store i64 %50, i64* %31, align 8
  store i64 %48, i64* %49, align 8
  %53 = add nuw nsw i32 %47, 1
  %54 = load i64, i64* %12, align 8
  %55 = load i64, i64* %31, align 8
  %56 = icmp slt i64 %55, %54
  br i1 %56, label %57, label %69

57:                                               ; preds = %52
  store i64 %55, i64* %12, align 8
  store i64 %54, i64* %31, align 8
  %58 = add nuw nsw i32 %47, 2
  %59 = load i64, i64* %9, align 8
  %60 = load i64, i64* %12, align 8
  %61 = icmp slt i64 %60, %59
  br i1 %61, label %62, label %69

62:                                               ; preds = %57
  store i64 %60, i64* %9, align 8
  store i64 %59, i64* %12, align 8
  %63 = add nuw nsw i32 %47, 3
  %64 = load i64, i64* %7, align 8
  %65 = load i64, i64* %9, align 8
  %66 = icmp slt i64 %65, %64
  br i1 %66, label %67, label %69

67:                                               ; preds = %62
  store i64 %65, i64* %7, align 8
  store i64 %64, i64* %9, align 8
  %68 = add nuw nsw i32 %47, 4
  br label %69

69:                                               ; preds = %52, %62, %67, %57, %46
  %70 = phi i32 [ %68, %67 ], [ %63, %62 ], [ %58, %57 ], [ %53, %52 ], [ %47, %46 ]
  ret i32 %70
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN4base9TimeDeltaES3_EEPS3_EEbT0_S7_T_(%"class.base::TimeDelta"*, %"class.base::TimeDelta"*, %"struct.std::__1::__less.387"* dereferenceable(1)) local_unnamed_addr #1 comdat {
  %4 = ptrtoint %"class.base::TimeDelta"* %1 to i64
  %5 = ptrtoint %"class.base::TimeDelta"* %0 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  switch i64 %7, label %73 [
    i64 0, label %130
    i64 1, label %130
    i64 2, label %8
    i64 3, label %15
    i64 4, label %36
    i64 5, label %67
  ]

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %1, i64 -1, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp slt i64 %12, %10
  br i1 %13, label %14, label %130

14:                                               ; preds = %8
  store i64 %12, i64* %9, align 8
  store i64 %10, i64* %11, align 8
  br label %130

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 1, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp slt i64 %19, %17
  %21 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %1, i64 -1, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp slt i64 %22, %19
  br i1 %20, label %30, label %24

24:                                               ; preds = %15
  br i1 %23, label %25, label %130

25:                                               ; preds = %24
  store i64 %22, i64* %18, align 8
  store i64 %19, i64* %21, align 8
  %26 = load i64, i64* %16, align 8
  %27 = load i64, i64* %18, align 8
  %28 = icmp slt i64 %27, %26
  br i1 %28, label %29, label %130

29:                                               ; preds = %25
  store i64 %27, i64* %16, align 8
  store i64 %26, i64* %18, align 8
  br label %130

30:                                               ; preds = %15
  br i1 %23, label %31, label %32

31:                                               ; preds = %30
  store i64 %22, i64* %16, align 8
  store i64 %17, i64* %21, align 8
  br label %130

32:                                               ; preds = %30
  store i64 %19, i64* %16, align 8
  store i64 %17, i64* %18, align 8
  %33 = load i64, i64* %21, align 8
  %34 = icmp slt i64 %33, %17
  br i1 %34, label %35, label %130

35:                                               ; preds = %32
  store i64 %33, i64* %18, align 8
  store i64 %17, i64* %21, align 8
  br label %130

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 1, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp slt i64 %40, %38
  %42 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 2, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = icmp slt i64 %43, %40
  br i1 %41, label %49, label %45

45:                                               ; preds = %36
  br i1 %44, label %46, label %54

46:                                               ; preds = %45
  store i64 %43, i64* %39, align 8
  store i64 %40, i64* %42, align 8
  %47 = icmp slt i64 %43, %38
  br i1 %47, label %48, label %54

48:                                               ; preds = %46
  store i64 %43, i64* %37, align 8
  store i64 %38, i64* %39, align 8
  br label %54

49:                                               ; preds = %36
  br i1 %44, label %50, label %51

50:                                               ; preds = %49
  store i64 %43, i64* %37, align 8
  store i64 %38, i64* %42, align 8
  br label %54

51:                                               ; preds = %49
  store i64 %40, i64* %37, align 8
  store i64 %38, i64* %39, align 8
  %52 = icmp slt i64 %43, %38
  br i1 %52, label %53, label %54

53:                                               ; preds = %51
  store i64 %43, i64* %39, align 8
  store i64 %38, i64* %42, align 8
  br label %54

54:                                               ; preds = %53, %51, %50, %48, %46, %45
  %55 = phi i64 [ %38, %50 ], [ %43, %45 ], [ %40, %48 ], [ %40, %46 ], [ %38, %53 ], [ %43, %51 ]
  %56 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %1, i64 -1, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = icmp slt i64 %57, %55
  br i1 %58, label %59, label %130

59:                                               ; preds = %54
  store i64 %57, i64* %42, align 8
  store i64 %55, i64* %56, align 8
  %60 = load i64, i64* %39, align 8
  %61 = load i64, i64* %42, align 8
  %62 = icmp slt i64 %61, %60
  br i1 %62, label %63, label %130

63:                                               ; preds = %59
  store i64 %61, i64* %39, align 8
  store i64 %60, i64* %42, align 8
  %64 = load i64, i64* %37, align 8
  %65 = icmp slt i64 %61, %64
  br i1 %65, label %66, label %130

66:                                               ; preds = %63
  store i64 %61, i64* %37, align 8
  store i64 %64, i64* %39, align 8
  br label %130

67:                                               ; preds = %3
  %68 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 1
  %69 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 2
  %70 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 3
  %71 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %1, i64 -1
  %72 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessIN4base9TimeDeltaES3_EEPS3_EEjT0_S7_S7_S7_S7_T_(%"class.base::TimeDelta"* %0, %"class.base::TimeDelta"* %68, %"class.base::TimeDelta"* %69, %"class.base::TimeDelta"* %70, %"class.base::TimeDelta"* %71, %"struct.std::__1::__less.387"* dereferenceable(1) %2)
  br label %130

73:                                               ; preds = %3
  %74 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 2
  %75 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 1, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = icmp slt i64 %78, %76
  %80 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %74, i64 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = icmp slt i64 %81, %78
  br i1 %79, label %87, label %83

83:                                               ; preds = %73
  br i1 %82, label %84, label %92

84:                                               ; preds = %83
  store i64 %81, i64* %77, align 8
  store i64 %78, i64* %80, align 8
  %85 = icmp slt i64 %81, %76
  br i1 %85, label %86, label %92

86:                                               ; preds = %84
  store i64 %81, i64* %75, align 8
  store i64 %76, i64* %77, align 8
  br label %92

87:                                               ; preds = %73
  br i1 %82, label %88, label %89

88:                                               ; preds = %87
  store i64 %81, i64* %75, align 8
  store i64 %76, i64* %80, align 8
  br label %92

89:                                               ; preds = %87
  store i64 %78, i64* %75, align 8
  store i64 %76, i64* %77, align 8
  %90 = icmp slt i64 %81, %76
  br i1 %90, label %91, label %92

91:                                               ; preds = %89
  store i64 %81, i64* %77, align 8
  store i64 %76, i64* %80, align 8
  br label %92

92:                                               ; preds = %83, %84, %86, %88, %89, %91
  %93 = phi i64 [ %81, %83 ], [ %78, %84 ], [ %78, %86 ], [ %76, %88 ], [ %81, %89 ], [ %76, %91 ]
  %94 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 3
  %95 = icmp eq %"class.base::TimeDelta"* %94, %1
  br i1 %95, label %130, label %96

96:                                               ; preds = %92, %124
  %97 = phi i64 [ %126, %124 ], [ %93, %92 ]
  %98 = phi %"class.base::TimeDelta"* [ %122, %124 ], [ %94, %92 ]
  %99 = phi i32 [ %121, %124 ], [ 0, %92 ]
  %100 = phi %"class.base::TimeDelta"* [ %98, %124 ], [ %74, %92 ]
  %101 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %98, i64 0, i32 0
  %102 = load i64, i64* %101, align 8
  %103 = icmp slt i64 %102, %97
  br i1 %103, label %104, label %120

104:                                              ; preds = %96, %110
  %105 = phi i64 [ %113, %110 ], [ %97, %96 ]
  %106 = phi %"class.base::TimeDelta"* [ %107, %110 ], [ %98, %96 ]
  %107 = phi %"class.base::TimeDelta"* [ %111, %110 ], [ %100, %96 ]
  %108 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %106, i64 0, i32 0
  store i64 %105, i64* %108, align 8
  %109 = icmp eq %"class.base::TimeDelta"* %107, %0
  br i1 %109, label %115, label %110

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %107, i64 -1
  %112 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %111, i64 0, i32 0
  %113 = load i64, i64* %112, align 8
  %114 = icmp slt i64 %102, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %110
  %116 = phi %"class.base::TimeDelta"* [ %0, %104 ], [ %107, %110 ]
  %117 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %116, i64 0, i32 0
  store i64 %102, i64* %117, align 8
  %118 = add i32 %99, 1
  %119 = icmp eq i32 %118, 8
  br i1 %119, label %127, label %120

120:                                              ; preds = %115, %96
  %121 = phi i32 [ %118, %115 ], [ %99, %96 ]
  %122 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %98, i64 1
  %123 = icmp eq %"class.base::TimeDelta"* %122, %1
  br i1 %123, label %130, label %124

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %98, i64 0, i32 0
  %126 = load i64, i64* %125, align 8
  br label %96

127:                                              ; preds = %115
  %128 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %98, i64 1
  %129 = icmp eq %"class.base::TimeDelta"* %128, %1
  br label %130

130:                                              ; preds = %120, %127, %92, %66, %63, %59, %54, %35, %32, %31, %29, %25, %24, %8, %14, %3, %3, %67
  %131 = phi i1 [ true, %67 ], [ true, %3 ], [ true, %3 ], [ true, %14 ], [ true, %8 ], [ true, %24 ], [ true, %25 ], [ true, %29 ], [ true, %31 ], [ true, %32 ], [ true, %35 ], [ true, %54 ], [ true, %59 ], [ true, %63 ], [ true, %66 ], [ true, %92 ], [ %129, %127 ], [ true, %120 ]
  ret i1 %131
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::pair"*, %"struct.std::__1::pair"* } @_ZNK4base8internal9flat_treeIN3viz9SurfaceIdENS0_8GetFirstENSt3__14lessIvEENS5_6vectorINS5_4pairIS3_mEENS5_9allocatorISA_EEEEE11equal_rangeIS3_EENS9_INS5_11__wrap_iterIPKSA_EESJ_EERKT_(%"class.base::internal::flat_tree"*, %"class.viz::SurfaceId"* dereferenceable(32)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__1::pair"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"struct.std::__1::pair"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"struct.std::__1::pair"*
  br i1 %10, label %74, label %12

12:                                               ; preds = %2
  %13 = sdiv exact i64 %9, 40
  %14 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %16 = load i32, i32* %14, align 4
  %17 = load i32, i32* %15, align 4
  %18 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %20 = load i32, i32* %18, align 4
  %21 = load i32, i32* %19, align 4
  %22 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %23 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %24 = load i64, i64* %22, align 8
  %25 = load i64, i64* %23, align 8
  br label %26

26:                                               ; preds = %68, %12
  %27 = phi %"struct.std::__1::pair"* [ %4, %12 ], [ %70, %68 ]
  %28 = phi i64 [ %13, %12 ], [ %69, %68 ]
  %29 = lshr i64 %28, 1
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %27, i64 %29
  %31 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %27, i64 %29, i32 0, i32 0, i32 1
  %33 = load i32, i32* %31, align 4
  %34 = icmp ult i32 %33, %16
  br i1 %34, label %64, label %35

35:                                               ; preds = %26
  %36 = icmp ult i32 %16, %33
  br i1 %36, label %68, label %37

37:                                               ; preds = %35
  %38 = load i32, i32* %32, align 4
  %39 = icmp ult i32 %38, %17
  br i1 %39, label %64, label %40

40:                                               ; preds = %37
  %41 = icmp ult i32 %17, %38
  br i1 %41, label %68, label %42

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %27, i64 %29, i32 0, i32 1, i32 0
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %27, i64 %29, i32 0, i32 1, i32 1
  %45 = load i32, i32* %43, align 4
  %46 = icmp ult i32 %45, %20
  br i1 %46, label %64, label %47

47:                                               ; preds = %42
  %48 = icmp ult i32 %20, %45
  br i1 %48, label %68, label %49

49:                                               ; preds = %47
  %50 = load i32, i32* %44, align 4
  %51 = icmp ult i32 %50, %21
  br i1 %51, label %64, label %52

52:                                               ; preds = %49
  %53 = icmp ult i32 %21, %50
  br i1 %53, label %68, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %27, i64 %29, i32 0, i32 1, i32 2, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %27, i64 %29, i32 0, i32 1, i32 2, i32 0, i32 1
  %57 = load i64, i64* %55, align 8
  %58 = icmp ult i64 %57, %24
  br i1 %58, label %64, label %59

59:                                               ; preds = %54
  %60 = icmp ult i64 %24, %57
  br i1 %60, label %68, label %61

61:                                               ; preds = %59
  %62 = load i64, i64* %56, align 8
  %63 = icmp ult i64 %62, %25
  br i1 %63, label %64, label %68

64:                                               ; preds = %61, %54, %49, %42, %37, %26
  %65 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 1
  %66 = xor i64 %29, -1
  %67 = add i64 %28, %66
  br label %68

68:                                               ; preds = %64, %61, %59, %52, %47, %40, %35
  %69 = phi i64 [ %67, %64 ], [ %29, %61 ], [ %29, %40 ], [ %29, %59 ], [ %29, %52 ], [ %29, %47 ], [ %29, %35 ]
  %70 = phi %"struct.std::__1::pair"* [ %65, %64 ], [ %27, %61 ], [ %27, %40 ], [ %27, %59 ], [ %27, %52 ], [ %27, %47 ], [ %27, %35 ]
  %71 = icmp eq i64 %69, 0
  br i1 %71, label %72, label %26

72:                                               ; preds = %68
  %73 = ptrtoint %"struct.std::__1::pair"* %70 to i64
  br label %74

74:                                               ; preds = %72, %2
  %75 = phi i64 [ %73, %72 ], [ %8, %2 ]
  %76 = phi %"struct.std::__1::pair"* [ %70, %72 ], [ %4, %2 ]
  %77 = icmp eq %"struct.std::__1::pair"* %76, %11
  br i1 %77, label %127, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %80 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %81 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %76, i64 0, i32 0, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %76, i64 0, i32 0, i32 0, i32 1
  %83 = load i32, i32* %79, align 4
  %84 = load i32, i32* %81, align 4
  %85 = icmp ult i32 %83, %84
  br i1 %85, label %127, label %86

86:                                               ; preds = %78
  %87 = icmp ult i32 %84, %83
  br i1 %87, label %124, label %88

88:                                               ; preds = %86
  %89 = load i32, i32* %80, align 4
  %90 = load i32, i32* %82, align 4
  %91 = icmp ult i32 %89, %90
  br i1 %91, label %127, label %92

92:                                               ; preds = %88
  %93 = icmp ult i32 %90, %89
  br i1 %93, label %124, label %94

94:                                               ; preds = %92
  %95 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %96 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %97 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %76, i64 0, i32 0, i32 1, i32 0
  %98 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %76, i64 0, i32 0, i32 1, i32 1
  %99 = load i32, i32* %95, align 4
  %100 = load i32, i32* %97, align 4
  %101 = icmp ult i32 %99, %100
  br i1 %101, label %127, label %102

102:                                              ; preds = %94
  %103 = icmp ult i32 %100, %99
  br i1 %103, label %124, label %104

104:                                              ; preds = %102
  %105 = load i32, i32* %96, align 4
  %106 = load i32, i32* %98, align 4
  %107 = icmp ult i32 %105, %106
  br i1 %107, label %127, label %108

108:                                              ; preds = %104
  %109 = icmp ult i32 %106, %105
  br i1 %109, label %124, label %110

110:                                              ; preds = %108
  %111 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 0
  %112 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %113 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %76, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0
  %114 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %76, i64 0, i32 0, i32 1, i32 2, i32 0, i32 1
  %115 = load i64, i64* %111, align 8
  %116 = load i64, i64* %113, align 8
  %117 = icmp ult i64 %115, %116
  br i1 %117, label %127, label %118

118:                                              ; preds = %110
  %119 = icmp ult i64 %116, %115
  br i1 %119, label %124, label %120

120:                                              ; preds = %118
  %121 = load i64, i64* %112, align 8
  %122 = load i64, i64* %114, align 8
  %123 = icmp ult i64 %121, %122
  br i1 %123, label %127, label %124

124:                                              ; preds = %86, %102, %108, %118, %92, %120
  %125 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %76, i64 1
  %126 = ptrtoint %"struct.std::__1::pair"* %125 to i64
  br label %127

127:                                              ; preds = %78, %94, %104, %110, %88, %120, %74, %124
  %128 = phi i64 [ %126, %124 ], [ %75, %74 ], [ %75, %120 ], [ %75, %88 ], [ %75, %110 ], [ %75, %104 ], [ %75, %94 ], [ %75, %78 ]
  %129 = insertvalue { %"struct.std::__1::pair"*, %"struct.std::__1::pair"* } undef, %"struct.std::__1::pair"* %76, 0
  %130 = inttoptr i64 %128 to %"struct.std::__1::pair"*
  %131 = insertvalue { %"struct.std::__1::pair"*, %"struct.std::__1::pair"* } %129, %"struct.std::__1::pair"* %130, 1
  ret { %"struct.std::__1::pair"*, %"struct.std::__1::pair"* } %131
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair"* @_ZNSt3__16vectorINS_4pairIN3viz9SurfaceIdEmEENS_9allocatorIS4_EEE7emplaceIJRKS3_mEEENS_11__wrap_iterIPS4_EENSB_IPKS4_EEDpOT_(%"class.std::__1::vector"*, %"struct.std::__1::pair"*, %"class.viz::SurfaceId"* dereferenceable(32), i64* dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca [16 x i8], align 8
  %6 = alloca %"struct.std::__1::__split_buffer.420", align 8
  %7 = ptrtoint %"struct.std::__1::pair"* %1 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %10 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  %13 = icmp ult %"struct.std::__1::pair"* %10, %12
  %14 = ptrtoint %"struct.std::__1::pair"* %10 to i64
  %15 = ptrtoint %"struct.std::__1::pair"* %12 to i64
  br i1 %13, label %16, label %100

16:                                               ; preds = %4
  %17 = icmp eq %"struct.std::__1::pair"* %10, %1
  br i1 %17, label %18, label %40

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %19, align 4
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* %22, align 4
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 1, i32 0
  %27 = load i32, i32* %26, align 8
  store i32 %27, i32* %25, align 8
  %28 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0, i32 1, i32 1
  %29 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 1, i32 1
  %30 = load i32, i32* %29, align 4
  store i32 %30, i32* %28, align 4
  %31 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0, i32 1, i32 2
  %32 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 1, i32 2
  %33 = bitcast %"class.base::UnguessableToken"* %31 to i8*
  %34 = bitcast %"class.base::UnguessableToken"* %32 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 16, i1 false) #13
  %35 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %36 = load i64, i64* %3, align 8
  store i64 %36, i64* %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 1
  %38 = ptrtoint %"struct.std::__1::pair"* %37 to i64
  %39 = bitcast %"struct.std::__1::pair"** %9 to i64*
  store i64 %38, i64* %39, align 8
  br label %246

40:                                               ; preds = %16
  %41 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41)
  %42 = bitcast %"class.viz::SurfaceId"* %2 to <4 x i32>*
  %43 = load <4 x i32>, <4 x i32>* %42, align 4
  %44 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %2, i64 0, i32 1, i32 2
  %45 = bitcast %"class.base::UnguessableToken"* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %41, i8* align 8 %45, i64 16, i1 false)
  %46 = load i64, i64* %3, align 8
  %47 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 1
  %48 = ptrtoint %"struct.std::__1::pair"* %47 to i64
  %49 = sub i64 %14, %48
  %50 = sdiv exact i64 %49, 40
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 %50
  %52 = bitcast %"struct.std::__1::pair"** %9 to i64*
  %53 = icmp ult %"struct.std::__1::pair"* %51, %10
  br i1 %53, label %70, label %56

54:                                               ; preds = %70
  %55 = ptrtoint %"struct.std::__1::pair"* %93 to i64
  br label %56

56:                                               ; preds = %54, %40
  %57 = phi i64 [ %55, %54 ], [ %14, %40 ]
  store i64 %57, i64* %52, align 8
  %58 = icmp eq i64 %49, 0
  br i1 %58, label %95, label %59

59:                                               ; preds = %56, %59
  %60 = phi %"struct.std::__1::pair"* [ %63, %59 ], [ %10, %56 ]
  %61 = phi %"struct.std::__1::pair"* [ %62, %59 ], [ %51, %56 ]
  %62 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %61, i64 -1
  %63 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %60, i64 -1
  %64 = bitcast %"struct.std::__1::pair"* %63 to i8*
  %65 = bitcast %"struct.std::__1::pair"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 32, i1 false) #13
  %66 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %61, i64 -1, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %60, i64 -1, i32 1
  store i64 %67, i64* %68, align 8
  %69 = icmp eq %"struct.std::__1::pair"* %62, %1
  br i1 %69, label %95, label %59

70:                                               ; preds = %40, %70
  %71 = phi %"struct.std::__1::pair"* [ %93, %70 ], [ %10, %40 ]
  %72 = phi %"struct.std::__1::pair"* [ %92, %70 ], [ %51, %40 ]
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %71, i64 0, i32 0, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %72, i64 0, i32 0, i32 0, i32 0
  %75 = load i32, i32* %74, align 4
  store i32 %75, i32* %73, align 4
  %76 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %71, i64 0, i32 0, i32 0, i32 1
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %72, i64 0, i32 0, i32 0, i32 1
  %78 = load i32, i32* %77, align 4
  store i32 %78, i32* %76, align 4
  %79 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %71, i64 0, i32 0, i32 1, i32 0
  %80 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %72, i64 0, i32 0, i32 1, i32 0
  %81 = load i32, i32* %80, align 8
  store i32 %81, i32* %79, align 8
  %82 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %71, i64 0, i32 0, i32 1, i32 1
  %83 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %72, i64 0, i32 0, i32 1, i32 1
  %84 = load i32, i32* %83, align 4
  store i32 %84, i32* %82, align 4
  %85 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %71, i64 0, i32 0, i32 1, i32 2
  %86 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %72, i64 0, i32 0, i32 1, i32 2
  %87 = bitcast %"class.base::UnguessableToken"* %85 to i8*
  %88 = bitcast %"class.base::UnguessableToken"* %86 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 16, i1 false) #13
  %89 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %71, i64 0, i32 1
  %90 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %72, i64 0, i32 1
  %91 = load i64, i64* %90, align 8
  store i64 %91, i64* %89, align 8
  %92 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %72, i64 1
  %93 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %71, i64 1
  %94 = icmp ult %"struct.std::__1::pair"* %92, %10
  br i1 %94, label %70, label %54

95:                                               ; preds = %59, %56
  %96 = bitcast %"struct.std::__1::pair"* %1 to <4 x i32>*
  store <4 x i32> %43, <4 x i32>* %96, align 8
  %97 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0, i32 1, i32 2
  %98 = bitcast %"class.base::UnguessableToken"* %97 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* nonnull align 8 %41, i64 16, i1 false)
  %99 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  store i64 %46, i64* %99, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41)
  br label %246

100:                                              ; preds = %4
  %101 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2
  %102 = bitcast %"struct.std::__1::__split_buffer.420"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %102) #13
  %103 = getelementptr inbounds %"struct.std::__1::__split_buffer.420", %"struct.std::__1::__split_buffer.420"* %6, i64 0, i32 0
  %104 = getelementptr inbounds %"struct.std::__1::__split_buffer.420", %"struct.std::__1::__split_buffer.420"* %6, i64 0, i32 1
  %105 = getelementptr inbounds %"struct.std::__1::__split_buffer.420", %"struct.std::__1::__split_buffer.420"* %6, i64 0, i32 2
  %106 = getelementptr inbounds %"struct.std::__1::__split_buffer.420", %"struct.std::__1::__split_buffer.420"* %6, i64 0, i32 3, i32 0, i32 0
  %107 = getelementptr inbounds %"struct.std::__1::__split_buffer.420", %"struct.std::__1::__split_buffer.420"* %6, i64 0, i32 3, i32 1, i32 0
  %108 = bitcast %"struct.std::__1::pair"** %9 to i64*
  %109 = bitcast %"class.std::__1::vector"* %0 to i64*
  %110 = bitcast %"struct.std::__1::__split_buffer.420"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %110, i8 -86, i64 40, i1 false)
  %111 = load i64, i64* %109, align 8
  %112 = sub i64 %14, %111
  %113 = sdiv exact i64 %112, 40
  %114 = add nsw i64 %113, 1
  %115 = icmp ugt i64 %114, 461168601842738790
  br i1 %115, label %116, label %118

116:                                              ; preds = %100
  %117 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %117) #15
  unreachable

118:                                              ; preds = %100
  %119 = bitcast %"struct.std::__1::pair"** %11 to i64*
  %120 = sub i64 %15, %111
  %121 = sdiv exact i64 %120, 40
  %122 = icmp ult i64 %121, 230584300921369395
  br i1 %122, label %127, label %123

123:                                              ; preds = %118
  %124 = sub i64 %7, %111
  %125 = sdiv exact i64 %124, 40
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %106, align 8
  %126 = bitcast %"class.std::__1::allocator"** %107 to %"class.std::__1::__compressed_pair"**
  store %"class.std::__1::__compressed_pair"* %101, %"class.std::__1::__compressed_pair"** %126, align 8
  br label %135

127:                                              ; preds = %118
  %128 = shl nsw i64 %121, 1
  %129 = icmp ult i64 %128, %114
  %130 = select i1 %129, i64 %114, i64 %128
  %131 = sub i64 %7, %111
  %132 = sdiv exact i64 %131, 40
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %106, align 8
  %133 = bitcast %"class.std::__1::allocator"** %107 to %"class.std::__1::__compressed_pair"**
  store %"class.std::__1::__compressed_pair"* %101, %"class.std::__1::__compressed_pair"** %133, align 8
  %134 = icmp eq i64 %130, 0
  br i1 %134, label %141, label %135

135:                                              ; preds = %127, %123
  %136 = phi i64 [ %125, %123 ], [ %132, %127 ]
  %137 = phi i64 [ 461168601842738790, %123 ], [ %130, %127 ]
  %138 = mul i64 %137, 40
  %139 = tail call i8* @_Znwm(i64 %138) #14
  %140 = bitcast i8* %139 to %"struct.std::__1::pair"*
  br label %141

141:                                              ; preds = %127, %135
  %142 = phi i64 [ %136, %135 ], [ %132, %127 ]
  %143 = phi i64 [ %137, %135 ], [ 0, %127 ]
  %144 = phi %"struct.std::__1::pair"* [ %140, %135 ], [ null, %127 ]
  store %"struct.std::__1::pair"* %144, %"struct.std::__1::pair"** %103, align 8
  %145 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %144, i64 %142
  store %"struct.std::__1::pair"* %145, %"struct.std::__1::pair"** %105, align 8
  store %"struct.std::__1::pair"* %145, %"struct.std::__1::pair"** %104, align 8
  %146 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %144, i64 %143
  store %"struct.std::__1::pair"* %146, %"struct.std::__1::pair"** %106, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairIN3viz9SurfaceIdEmEERNS_9allocatorIS4_EEE12emplace_backIJRKS3_mEEEvDpOT_(%"struct.std::__1::__split_buffer.420"* nonnull %6, %"class.viz::SurfaceId"* dereferenceable(32) %2, i64* dereferenceable(8) %3)
  %147 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %104, align 8
  %148 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  %149 = icmp eq %"struct.std::__1::pair"* %148, %1
  br i1 %149, label %176, label %150

150:                                              ; preds = %141, %150
  %151 = phi %"struct.std::__1::pair"* [ %174, %150 ], [ %147, %141 ]
  %152 = phi %"struct.std::__1::pair"* [ %153, %150 ], [ %1, %141 ]
  %153 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %152, i64 -1
  %154 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %151, i64 -1, i32 0, i32 0, i32 0
  %155 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %153, i64 0, i32 0, i32 0, i32 0
  %156 = load i32, i32* %155, align 4
  store i32 %156, i32* %154, align 4
  %157 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %151, i64 -1, i32 0, i32 0, i32 1
  %158 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %152, i64 -1, i32 0, i32 0, i32 1
  %159 = load i32, i32* %158, align 4
  store i32 %159, i32* %157, align 4
  %160 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %151, i64 -1, i32 0, i32 1, i32 0
  %161 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %152, i64 -1, i32 0, i32 1, i32 0
  %162 = load i32, i32* %161, align 8
  store i32 %162, i32* %160, align 8
  %163 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %151, i64 -1, i32 0, i32 1, i32 1
  %164 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %152, i64 -1, i32 0, i32 1, i32 1
  %165 = load i32, i32* %164, align 4
  store i32 %165, i32* %163, align 4
  %166 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %151, i64 -1, i32 0, i32 1, i32 2
  %167 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %152, i64 -1, i32 0, i32 1, i32 2
  %168 = bitcast %"class.base::UnguessableToken"* %166 to i8*
  %169 = bitcast %"class.base::UnguessableToken"* %167 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %168, i8* align 8 %169, i64 16, i1 false) #13
  %170 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %151, i64 -1, i32 1
  %171 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %152, i64 -1, i32 1
  %172 = load i64, i64* %171, align 8
  store i64 %172, i64* %170, align 8
  %173 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %104, align 8
  %174 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %173, i64 -1
  store %"struct.std::__1::pair"* %174, %"struct.std::__1::pair"** %104, align 8
  %175 = icmp eq %"struct.std::__1::pair"* %153, %148
  br i1 %175, label %176, label %150

176:                                              ; preds = %150, %141
  %177 = phi %"struct.std::__1::pair"* [ %147, %141 ], [ %174, %150 ]
  %178 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %9, align 8
  %179 = icmp eq %"struct.std::__1::pair"* %178, %1
  br i1 %179, label %180, label %186

180:                                              ; preds = %176
  %181 = ptrtoint %"struct.std::__1::pair"* %178 to i64
  %182 = ptrtoint %"struct.std::__1::pair"* %177 to i64
  %183 = bitcast %"struct.std::__1::pair"** %104 to i64*
  %184 = bitcast %"struct.std::__1::pair"** %105 to i64*
  %185 = load i64, i64* %184, align 8
  br label %220

186:                                              ; preds = %176
  %187 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %105, align 8
  br label %188

188:                                              ; preds = %188, %186
  %189 = phi %"struct.std::__1::pair"* [ %212, %188 ], [ %187, %186 ]
  %190 = phi %"struct.std::__1::pair"* [ %210, %188 ], [ %1, %186 ]
  %191 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %189, i64 0, i32 0, i32 0, i32 0
  %192 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %190, i64 0, i32 0, i32 0, i32 0
  %193 = load i32, i32* %192, align 4
  store i32 %193, i32* %191, align 4
  %194 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %189, i64 0, i32 0, i32 0, i32 1
  %195 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %190, i64 0, i32 0, i32 0, i32 1
  %196 = load i32, i32* %195, align 4
  store i32 %196, i32* %194, align 4
  %197 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %189, i64 0, i32 0, i32 1, i32 0
  %198 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %190, i64 0, i32 0, i32 1, i32 0
  %199 = load i32, i32* %198, align 8
  store i32 %199, i32* %197, align 8
  %200 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %189, i64 0, i32 0, i32 1, i32 1
  %201 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %190, i64 0, i32 0, i32 1, i32 1
  %202 = load i32, i32* %201, align 4
  store i32 %202, i32* %200, align 4
  %203 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %189, i64 0, i32 0, i32 1, i32 2
  %204 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %190, i64 0, i32 0, i32 1, i32 2
  %205 = bitcast %"class.base::UnguessableToken"* %203 to i8*
  %206 = bitcast %"class.base::UnguessableToken"* %204 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %205, i8* align 8 %206, i64 16, i1 false) #13
  %207 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %189, i64 0, i32 1
  %208 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %190, i64 0, i32 1
  %209 = load i64, i64* %208, align 8
  store i64 %209, i64* %207, align 8
  %210 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %190, i64 1
  %211 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %105, align 8
  %212 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %211, i64 1
  store %"struct.std::__1::pair"* %212, %"struct.std::__1::pair"** %105, align 8
  %213 = icmp eq %"struct.std::__1::pair"* %210, %178
  br i1 %213, label %214, label %188

214:                                              ; preds = %188
  %215 = ptrtoint %"struct.std::__1::pair"* %212 to i64
  %216 = bitcast %"struct.std::__1::pair"** %104 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = load i64, i64* %108, align 8
  %219 = bitcast %"struct.std::__1::pair"** %105 to i64*
  br label %220

220:                                              ; preds = %180, %214
  %221 = phi i64* [ %184, %180 ], [ %219, %214 ]
  %222 = phi i64 [ %185, %180 ], [ %215, %214 ]
  %223 = phi i64 [ %181, %180 ], [ %218, %214 ]
  %224 = phi i64* [ %183, %180 ], [ %216, %214 ]
  %225 = phi i64 [ %182, %180 ], [ %217, %214 ]
  %226 = load i64, i64* %109, align 8
  store i64 %225, i64* %109, align 8
  store i64 %226, i64* %224, align 8
  store i64 %222, i64* %108, align 8
  store i64 %223, i64* %221, align 8
  %227 = load i64, i64* %119, align 8
  %228 = bitcast %"struct.std::__1::pair"** %106 to i64*
  %229 = load i64, i64* %228, align 8
  store i64 %229, i64* %119, align 8
  store i64 %227, i64* %228, align 8
  %230 = bitcast %"struct.std::__1::__split_buffer.420"* %6 to i64*
  store i64 %226, i64* %230, align 8
  %231 = inttoptr i64 %226 to %"struct.std::__1::pair"*
  %232 = inttoptr i64 %223 to %"struct.std::__1::pair"*
  %233 = icmp eq %"struct.std::__1::pair"* %232, %231
  br i1 %233, label %241, label %234

234:                                              ; preds = %220
  %235 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %232, i64 -1, i32 0, i32 0, i32 0
  %236 = ptrtoint i32* %235 to i64
  %237 = sub i64 %236, %226
  %238 = udiv i64 %237, 40
  %239 = xor i64 %238, -1
  %240 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %232, i64 %239
  store %"struct.std::__1::pair"* %240, %"struct.std::__1::pair"** %105, align 8
  br label %241

241:                                              ; preds = %234, %220
  %242 = icmp eq i64 %226, 0
  br i1 %242, label %245, label %243

243:                                              ; preds = %241
  %244 = inttoptr i64 %226 to i8*
  call void @_ZdlPv(i8* %244) #14
  br label %245

245:                                              ; preds = %241, %243
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %102) #13
  br label %246

246:                                              ; preds = %18, %95, %245
  %247 = phi %"struct.std::__1::pair"* [ %1, %18 ], [ %1, %95 ], [ %147, %245 ]
  ret %"struct.std::__1::pair"* %247
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairIN3viz9SurfaceIdEmEERNS_9allocatorIS4_EEE12emplace_backIJRKS3_mEEEvDpOT_(%"struct.std::__1::__split_buffer.420"*, %"class.viz::SurfaceId"* dereferenceable(32), i64* dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer.420", %"struct.std::__1::__split_buffer.420"* %0, i64 0, i32 2
  %5 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.420", %"struct.std::__1::__split_buffer.420"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair"* %5, %7
  %9 = ptrtoint %"struct.std::__1::pair"* %7 to i64
  br i1 %8, label %10, label %106

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.420", %"struct.std::__1::__split_buffer.420"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.420", %"struct.std::__1::__split_buffer.420"* %0, i64 0, i32 0
  %14 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %13, align 8
  %15 = icmp ugt %"struct.std::__1::pair"* %12, %14
  %16 = ptrtoint %"struct.std::__1::pair"* %14 to i64
  br i1 %15, label %17, label %42

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.std::__1::pair"* %12 to i64
  %19 = sub i64 %18, %16
  %20 = sdiv exact i64 %19, 40
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 %22
  %24 = icmp eq %"struct.std::__1::pair"* %12, %5
  br i1 %24, label %38, label %25

25:                                               ; preds = %17, %25
  %26 = phi %"struct.std::__1::pair"* [ %34, %25 ], [ %23, %17 ]
  %27 = phi %"struct.std::__1::pair"* [ %33, %25 ], [ %12, %17 ]
  %28 = bitcast %"struct.std::__1::pair"* %26 to i8*
  %29 = bitcast %"struct.std::__1::pair"* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 32, i1 false) #13
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %27, i64 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %26, i64 0, i32 1
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %27, i64 1
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %26, i64 1
  %35 = icmp eq %"struct.std::__1::pair"* %33, %5
  br i1 %35, label %36, label %25

36:                                               ; preds = %25
  %37 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  br label %38

38:                                               ; preds = %36, %17
  %39 = phi %"struct.std::__1::pair"* [ %5, %17 ], [ %37, %36 ]
  %40 = phi %"struct.std::__1::pair"* [ %23, %17 ], [ %34, %36 ]
  store %"struct.std::__1::pair"* %40, %"struct.std::__1::pair"** %4, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %39, i64 %22
  store %"struct.std::__1::pair"* %41, %"struct.std::__1::pair"** %11, align 8
  br label %106

42:                                               ; preds = %10
  %43 = bitcast %"struct.std::__1::pair"** %6 to i64*
  %44 = bitcast %"struct.std::__1::__split_buffer.420"* %0 to i64*
  %45 = sub i64 %9, %16
  %46 = sdiv exact i64 %45, 40
  %47 = shl nsw i64 %46, 1
  %48 = icmp eq i64 %45, 0
  %49 = select i1 %48, i64 1, i64 %47
  %50 = icmp ugt i64 %49, 461168601842738790
  br i1 %50, label %51, label %52

51:                                               ; preds = %42
  tail call void @abort() #15
  unreachable

52:                                               ; preds = %42
  %53 = lshr i64 %49, 2
  %54 = mul i64 %49, 40
  %55 = tail call i8* @_Znwm(i64 %54) #14
  %56 = bitcast i8* %55 to %"struct.std::__1::pair"*
  %57 = ptrtoint i8* %55 to i64
  %58 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 %53
  %59 = ptrtoint %"struct.std::__1::pair"* %58 to i64
  %60 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 %49
  %61 = ptrtoint %"struct.std::__1::pair"* %60 to i64
  %62 = ptrtoint %"struct.std::__1::pair"* %12 to i64
  %63 = ptrtoint %"struct.std::__1::pair"* %5 to i64
  %64 = sub i64 %63, %62
  %65 = sdiv exact i64 %64, 40
  %66 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %58, i64 %65
  %67 = icmp eq i64 %64, 0
  br i1 %67, label %96, label %68

68:                                               ; preds = %52, %68
  %69 = phi %"struct.std::__1::pair"* [ %90, %68 ], [ %58, %52 ]
  %70 = phi %"struct.std::__1::pair"* [ %91, %68 ], [ %12, %52 ]
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 0, i32 0, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %70, i64 0, i32 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  store i32 %73, i32* %71, align 4
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 0, i32 0, i32 0, i32 1
  %75 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %70, i64 0, i32 0, i32 0, i32 1
  %76 = load i32, i32* %75, align 4
  store i32 %76, i32* %74, align 4
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 0, i32 0, i32 1, i32 0
  %78 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %70, i64 0, i32 0, i32 1, i32 0
  %79 = load i32, i32* %78, align 8
  store i32 %79, i32* %77, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 0, i32 0, i32 1, i32 1
  %81 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %70, i64 0, i32 0, i32 1, i32 1
  %82 = load i32, i32* %81, align 4
  store i32 %82, i32* %80, align 4
  %83 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 0, i32 0, i32 1, i32 2
  %84 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %70, i64 0, i32 0, i32 1, i32 2
  %85 = bitcast %"class.base::UnguessableToken"* %83 to i8*
  %86 = bitcast %"class.base::UnguessableToken"* %84 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 16, i1 false) #13
  %87 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 0, i32 1
  %88 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %70, i64 0, i32 1
  %89 = load i64, i64* %88, align 8
  store i64 %89, i64* %87, align 8
  %90 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 1
  %91 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %70, i64 1
  %92 = icmp eq %"struct.std::__1::pair"* %66, %90
  br i1 %92, label %93, label %68

93:                                               ; preds = %68
  %94 = ptrtoint %"struct.std::__1::pair"* %66 to i64
  %95 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %13, align 8
  br label %96

96:                                               ; preds = %52, %93
  %97 = phi %"struct.std::__1::pair"* [ %95, %93 ], [ %14, %52 ]
  %98 = phi i64 [ %94, %93 ], [ %59, %52 ]
  store i64 %57, i64* %44, align 8
  %99 = bitcast %"struct.std::__1::pair"** %11 to i64*
  store i64 %59, i64* %99, align 8
  %100 = bitcast %"struct.std::__1::pair"** %4 to i64*
  store i64 %98, i64* %100, align 8
  store i64 %61, i64* %43, align 8
  %101 = icmp eq %"struct.std::__1::pair"* %97, null
  %102 = inttoptr i64 %98 to %"struct.std::__1::pair"*
  br i1 %101, label %106, label %103

103:                                              ; preds = %96
  %104 = bitcast %"struct.std::__1::pair"* %97 to i8*
  tail call void @_ZdlPv(i8* %104) #14
  %105 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  br label %106

106:                                              ; preds = %103, %96, %38, %3
  %107 = phi %"struct.std::__1::pair"* [ %105, %103 ], [ %102, %96 ], [ %40, %38 ], [ %5, %3 ]
  %108 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %107, i64 0, i32 0, i32 0, i32 0
  %109 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 0
  %110 = load i32, i32* %109, align 4
  store i32 %110, i32* %108, align 4
  %111 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %107, i64 0, i32 0, i32 0, i32 1
  %112 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 0, i32 1
  %113 = load i32, i32* %112, align 4
  store i32 %113, i32* %111, align 4
  %114 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %107, i64 0, i32 0, i32 1, i32 0
  %115 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 0
  %116 = load i32, i32* %115, align 8
  store i32 %116, i32* %114, align 8
  %117 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %107, i64 0, i32 0, i32 1, i32 1
  %118 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 1
  %119 = load i32, i32* %118, align 4
  store i32 %119, i32* %117, align 4
  %120 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %107, i64 0, i32 0, i32 1, i32 2
  %121 = getelementptr inbounds %"class.viz::SurfaceId", %"class.viz::SurfaceId"* %1, i64 0, i32 1, i32 2
  %122 = bitcast %"class.base::UnguessableToken"* %120 to i8*
  %123 = bitcast %"class.base::UnguessableToken"* %121 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* align 8 %123, i64 16, i1 false) #13
  %124 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %107, i64 0, i32 1
  %125 = load i64, i64* %2, align 8
  store i64 %125, i64* %124, align 8
  %126 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %127 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %126, i64 1
  store %"struct.std::__1::pair"* %127, %"struct.std::__1::pair"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.viz::FrameSinkId"* @_ZNSt3__16vectorIN3viz11FrameSinkIdENS_9allocatorIS2_EEE7emplaceIJRKS2_EEENS_11__wrap_iterIPS2_EENS9_IPS7_EEDpOT_(%"class.std::__1::vector.2"*, %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"* dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %4 = ptrtoint %"class.viz::FrameSinkId"* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.426", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %9, align 8
  %11 = icmp ult %"class.viz::FrameSinkId"* %8, %10
  %12 = ptrtoint %"class.viz::FrameSinkId"* %8 to i64
  %13 = ptrtoint %"class.viz::FrameSinkId"* %10 to i64
  br i1 %11, label %14, label %115

14:                                               ; preds = %3
  %15 = icmp eq %"class.viz::FrameSinkId"* %8, %1
  br i1 %15, label %16, label %26

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 0
  %18 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %2, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %17, align 4
  %20 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 1
  %21 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %2, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %20, align 4
  %23 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 1
  %24 = ptrtoint %"class.viz::FrameSinkId"* %23 to i64
  %25 = bitcast %"class.viz::FrameSinkId"** %7 to i64*
  store i64 %24, i64* %25, align 8
  br label %343

26:                                               ; preds = %14
  %27 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %2, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %2, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 1
  %32 = ptrtoint %"class.viz::FrameSinkId"* %31 to i64
  %33 = sub i64 %12, %32
  %34 = ashr exact i64 %33, 3
  %35 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 %34
  %36 = bitcast %"class.viz::FrameSinkId"** %7 to i64*
  %37 = icmp ult %"class.viz::FrameSinkId"* %35, %8
  br i1 %37, label %38, label %71

38:                                               ; preds = %26
  %39 = sub nsw i64 0, %34
  %40 = getelementptr %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %8, i64 %39, i32 0
  %41 = bitcast i32* %40 to i8*
  %42 = xor i64 %4, -1
  %43 = getelementptr i8, i8* %41, i64 %42
  %44 = ptrtoint i8* %43 to i64
  %45 = lshr i64 %44, 3
  %46 = add nuw nsw i64 %45, 1
  %47 = and i64 %46, 3
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %63, label %49

49:                                               ; preds = %38, %49
  %50 = phi %"class.viz::FrameSinkId"* [ %60, %49 ], [ %8, %38 ]
  %51 = phi %"class.viz::FrameSinkId"* [ %59, %49 ], [ %35, %38 ]
  %52 = phi i64 [ %61, %49 ], [ %47, %38 ]
  %53 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %50, i64 0, i32 0
  %54 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %51, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  store i32 %55, i32* %53, align 4
  %56 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %50, i64 0, i32 1
  %57 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %51, i64 0, i32 1
  %58 = load i32, i32* %57, align 4
  store i32 %58, i32* %56, align 4
  %59 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %51, i64 1
  %60 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %50, i64 1
  %61 = add i64 %52, -1
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %49, !llvm.loop !5

63:                                               ; preds = %49, %38
  %64 = phi %"class.viz::FrameSinkId"* [ %8, %38 ], [ %60, %49 ]
  %65 = phi %"class.viz::FrameSinkId"* [ %35, %38 ], [ %59, %49 ]
  %66 = phi %"class.viz::FrameSinkId"* [ undef, %38 ], [ %60, %49 ]
  %67 = icmp ult i8* %43, inttoptr (i64 24 to i8*)
  br i1 %67, label %68, label %79

68:                                               ; preds = %79, %63
  %69 = phi %"class.viz::FrameSinkId"* [ %66, %63 ], [ %107, %79 ]
  %70 = ptrtoint %"class.viz::FrameSinkId"* %69 to i64
  br label %71

71:                                               ; preds = %68, %26
  %72 = phi i64 [ %70, %68 ], [ %12, %26 ]
  store i64 %72, i64* %36, align 8
  %73 = icmp eq i64 %33, 0
  br i1 %73, label %109, label %74

74:                                               ; preds = %71
  %75 = sub nsw i64 0, %34
  %76 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %8, i64 %75
  %77 = bitcast %"class.viz::FrameSinkId"* %76 to i8*
  %78 = bitcast %"class.viz::FrameSinkId"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %77, i8* align 4 %78, i64 %33, i1 false) #13
  br label %109

79:                                               ; preds = %63, %79
  %80 = phi %"class.viz::FrameSinkId"* [ %107, %79 ], [ %64, %63 ]
  %81 = phi %"class.viz::FrameSinkId"* [ %106, %79 ], [ %65, %63 ]
  %82 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %80, i64 0, i32 0
  %83 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %81, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  store i32 %84, i32* %82, align 4
  %85 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %80, i64 0, i32 1
  %86 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %81, i64 0, i32 1
  %87 = load i32, i32* %86, align 4
  store i32 %87, i32* %85, align 4
  %88 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %80, i64 1, i32 0
  %89 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %81, i64 1, i32 0
  %90 = load i32, i32* %89, align 4
  store i32 %90, i32* %88, align 4
  %91 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %80, i64 1, i32 1
  %92 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %81, i64 1, i32 1
  %93 = load i32, i32* %92, align 4
  store i32 %93, i32* %91, align 4
  %94 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %80, i64 2, i32 0
  %95 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %81, i64 2, i32 0
  %96 = load i32, i32* %95, align 4
  store i32 %96, i32* %94, align 4
  %97 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %80, i64 2, i32 1
  %98 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %81, i64 2, i32 1
  %99 = load i32, i32* %98, align 4
  store i32 %99, i32* %97, align 4
  %100 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %80, i64 3, i32 0
  %101 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %81, i64 3, i32 0
  %102 = load i32, i32* %101, align 4
  store i32 %102, i32* %100, align 4
  %103 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %80, i64 3, i32 1
  %104 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %81, i64 3, i32 1
  %105 = load i32, i32* %104, align 4
  store i32 %105, i32* %103, align 4
  %106 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %81, i64 4
  %107 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %80, i64 4
  %108 = icmp ult %"class.viz::FrameSinkId"* %106, %8
  br i1 %108, label %79, label %68

109:                                              ; preds = %71, %74
  %110 = bitcast %"class.viz::FrameSinkId"* %1 to i64*
  %111 = zext i32 %30 to i64
  %112 = shl nuw i64 %111, 32
  %113 = zext i32 %28 to i64
  %114 = or i64 %112, %113
  store i64 %114, i64* %110, align 4
  br label %343

115:                                              ; preds = %3
  %116 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 2
  %117 = bitcast %"struct.std::__1::__split_buffer.426"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %117) #13
  %118 = getelementptr inbounds %"struct.std::__1::__split_buffer.426", %"struct.std::__1::__split_buffer.426"* %5, i64 0, i32 0
  %119 = getelementptr inbounds %"struct.std::__1::__split_buffer.426", %"struct.std::__1::__split_buffer.426"* %5, i64 0, i32 1
  %120 = getelementptr inbounds %"struct.std::__1::__split_buffer.426", %"struct.std::__1::__split_buffer.426"* %5, i64 0, i32 2
  %121 = getelementptr inbounds %"struct.std::__1::__split_buffer.426", %"struct.std::__1::__split_buffer.426"* %5, i64 0, i32 3, i32 0, i32 0
  %122 = getelementptr inbounds %"struct.std::__1::__split_buffer.426", %"struct.std::__1::__split_buffer.426"* %5, i64 0, i32 3, i32 1, i32 0
  %123 = bitcast %"class.viz::FrameSinkId"** %7 to i64*
  %124 = bitcast %"class.std::__1::vector.2"* %0 to i64*
  %125 = bitcast %"struct.std::__1::__split_buffer.426"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %125, i8 -86, i64 40, i1 false)
  %126 = load i64, i64* %124, align 8
  %127 = sub i64 %12, %126
  %128 = ashr exact i64 %127, 3
  %129 = add nsw i64 %128, 1
  %130 = icmp ugt i64 %129, 2305843009213693951
  br i1 %130, label %131, label %133

131:                                              ; preds = %115
  %132 = bitcast %"class.std::__1::vector.2"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %132) #15
  unreachable

133:                                              ; preds = %115
  %134 = bitcast %"class.viz::FrameSinkId"** %9 to i64*
  %135 = sub i64 %13, %126
  %136 = ashr exact i64 %135, 3
  %137 = icmp ult i64 %136, 1152921504606846975
  br i1 %137, label %142, label %138

138:                                              ; preds = %133
  %139 = sub i64 %4, %126
  %140 = ashr exact i64 %139, 3
  store %"class.viz::FrameSinkId"* null, %"class.viz::FrameSinkId"** %121, align 8
  %141 = bitcast %"class.std::__1::allocator.7"** %122 to %"class.std::__1::__compressed_pair.4"**
  store %"class.std::__1::__compressed_pair.4"* %116, %"class.std::__1::__compressed_pair.4"** %141, align 8
  br label %153

142:                                              ; preds = %133
  %143 = ashr exact i64 %135, 2
  %144 = icmp ult i64 %143, %129
  %145 = select i1 %144, i64 %129, i64 %143
  %146 = sub i64 %4, %126
  %147 = ashr exact i64 %146, 3
  store %"class.viz::FrameSinkId"* null, %"class.viz::FrameSinkId"** %121, align 8
  %148 = bitcast %"class.std::__1::allocator.7"** %122 to %"class.std::__1::__compressed_pair.4"**
  store %"class.std::__1::__compressed_pair.4"* %116, %"class.std::__1::__compressed_pair.4"** %148, align 8
  %149 = icmp eq i64 %145, 0
  br i1 %149, label %159, label %150

150:                                              ; preds = %142
  %151 = icmp ugt i64 %145, 2305843009213693951
  br i1 %151, label %152, label %153

152:                                              ; preds = %150
  tail call void @abort() #15
  unreachable

153:                                              ; preds = %138, %150
  %154 = phi i64 [ 2305843009213693951, %138 ], [ %145, %150 ]
  %155 = phi i64 [ %140, %138 ], [ %147, %150 ]
  %156 = shl i64 %154, 3
  %157 = tail call i8* @_Znwm(i64 %156) #14
  %158 = bitcast i8* %157 to %"class.viz::FrameSinkId"*
  br label %159

159:                                              ; preds = %142, %153
  %160 = phi i64 [ %155, %153 ], [ %147, %142 ]
  %161 = phi i64 [ %154, %153 ], [ 0, %142 ]
  %162 = phi %"class.viz::FrameSinkId"* [ %158, %153 ], [ null, %142 ]
  store %"class.viz::FrameSinkId"* %162, %"class.viz::FrameSinkId"** %118, align 8
  %163 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %162, i64 %160
  store %"class.viz::FrameSinkId"* %163, %"class.viz::FrameSinkId"** %120, align 8
  store %"class.viz::FrameSinkId"* %163, %"class.viz::FrameSinkId"** %119, align 8
  %164 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %162, i64 %161
  store %"class.viz::FrameSinkId"* %164, %"class.viz::FrameSinkId"** %121, align 8
  call void @_ZNSt3__114__split_bufferIN3viz11FrameSinkIdERNS_9allocatorIS2_EEE12emplace_backIJRKS2_EEEvDpOT_(%"struct.std::__1::__split_buffer.426"* nonnull %5, %"class.viz::FrameSinkId"* dereferenceable(8) %2)
  %165 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %119, align 8
  %166 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %6, align 8
  %167 = icmp eq %"class.viz::FrameSinkId"* %166, %1
  br i1 %167, label %234, label %168

168:                                              ; preds = %159
  %169 = ptrtoint %"class.viz::FrameSinkId"* %166 to i64
  %170 = getelementptr %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 -1, i32 0
  %171 = ptrtoint i32* %170 to i64
  %172 = sub i64 %171, %169
  %173 = lshr i64 %172, 3
  %174 = add nuw nsw i64 %173, 1
  %175 = and i64 %174, 3
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %192, label %177

177:                                              ; preds = %168, %177
  %178 = phi %"class.viz::FrameSinkId"* [ %189, %177 ], [ %165, %168 ]
  %179 = phi %"class.viz::FrameSinkId"* [ %181, %177 ], [ %1, %168 ]
  %180 = phi i64 [ %190, %177 ], [ %175, %168 ]
  %181 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %179, i64 -1
  %182 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %178, i64 -1, i32 0
  %183 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %181, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  store i32 %184, i32* %182, align 4
  %185 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %178, i64 -1, i32 1
  %186 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %179, i64 -1, i32 1
  %187 = load i32, i32* %186, align 4
  store i32 %187, i32* %185, align 4
  %188 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %119, align 8
  %189 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %188, i64 -1
  store %"class.viz::FrameSinkId"* %189, %"class.viz::FrameSinkId"** %119, align 8
  %190 = add i64 %180, -1
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %192, label %177, !llvm.loop !7

192:                                              ; preds = %177, %168
  %193 = phi %"class.viz::FrameSinkId"* [ undef, %168 ], [ %189, %177 ]
  %194 = phi %"class.viz::FrameSinkId"* [ %165, %168 ], [ %189, %177 ]
  %195 = phi %"class.viz::FrameSinkId"* [ %1, %168 ], [ %181, %177 ]
  %196 = icmp ult i64 %172, 24
  br i1 %196, label %234, label %197

197:                                              ; preds = %192, %197
  %198 = phi %"class.viz::FrameSinkId"* [ %232, %197 ], [ %194, %192 ]
  %199 = phi %"class.viz::FrameSinkId"* [ %224, %197 ], [ %195, %192 ]
  %200 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %198, i64 -1, i32 0
  %201 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %199, i64 -1, i32 0
  %202 = load i32, i32* %201, align 4
  store i32 %202, i32* %200, align 4
  %203 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %198, i64 -1, i32 1
  %204 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %199, i64 -1, i32 1
  %205 = load i32, i32* %204, align 4
  store i32 %205, i32* %203, align 4
  %206 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %119, align 8
  %207 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %206, i64 -1
  store %"class.viz::FrameSinkId"* %207, %"class.viz::FrameSinkId"** %119, align 8
  %208 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %206, i64 -2, i32 0
  %209 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %199, i64 -2, i32 0
  %210 = load i32, i32* %209, align 4
  store i32 %210, i32* %208, align 4
  %211 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %206, i64 -2, i32 1
  %212 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %199, i64 -2, i32 1
  %213 = load i32, i32* %212, align 4
  store i32 %213, i32* %211, align 4
  %214 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %119, align 8
  %215 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %214, i64 -1
  store %"class.viz::FrameSinkId"* %215, %"class.viz::FrameSinkId"** %119, align 8
  %216 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %214, i64 -2, i32 0
  %217 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %199, i64 -3, i32 0
  %218 = load i32, i32* %217, align 4
  store i32 %218, i32* %216, align 4
  %219 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %214, i64 -2, i32 1
  %220 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %199, i64 -3, i32 1
  %221 = load i32, i32* %220, align 4
  store i32 %221, i32* %219, align 4
  %222 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %119, align 8
  %223 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %222, i64 -1
  store %"class.viz::FrameSinkId"* %223, %"class.viz::FrameSinkId"** %119, align 8
  %224 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %199, i64 -4
  %225 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %222, i64 -2, i32 0
  %226 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %224, i64 0, i32 0
  %227 = load i32, i32* %226, align 4
  store i32 %227, i32* %225, align 4
  %228 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %222, i64 -2, i32 1
  %229 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %199, i64 -4, i32 1
  %230 = load i32, i32* %229, align 4
  store i32 %230, i32* %228, align 4
  %231 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %119, align 8
  %232 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %231, i64 -1
  store %"class.viz::FrameSinkId"* %232, %"class.viz::FrameSinkId"** %119, align 8
  %233 = icmp eq %"class.viz::FrameSinkId"* %224, %166
  br i1 %233, label %234, label %197

234:                                              ; preds = %192, %197, %159
  %235 = phi %"class.viz::FrameSinkId"* [ %165, %159 ], [ %193, %192 ], [ %232, %197 ]
  %236 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %7, align 8
  %237 = icmp eq %"class.viz::FrameSinkId"* %236, %1
  br i1 %237, label %238, label %244

238:                                              ; preds = %234
  %239 = ptrtoint %"class.viz::FrameSinkId"* %236 to i64
  %240 = ptrtoint %"class.viz::FrameSinkId"* %235 to i64
  %241 = bitcast %"class.viz::FrameSinkId"** %119 to i64*
  %242 = bitcast %"class.viz::FrameSinkId"** %120 to i64*
  %243 = load i64, i64* %242, align 8
  br label %317

244:                                              ; preds = %234
  %245 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %120, align 8
  %246 = getelementptr %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %236, i64 -1, i32 0
  %247 = ptrtoint i32* %246 to i64
  %248 = sub i64 %247, %4
  %249 = lshr i64 %248, 3
  %250 = add nuw nsw i64 %249, 1
  %251 = and i64 %250, 3
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %268, label %253

253:                                              ; preds = %244, %253
  %254 = phi %"class.viz::FrameSinkId"* [ %265, %253 ], [ %245, %244 ]
  %255 = phi %"class.viz::FrameSinkId"* [ %263, %253 ], [ %1, %244 ]
  %256 = phi i64 [ %266, %253 ], [ %251, %244 ]
  %257 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %254, i64 0, i32 0
  %258 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %255, i64 0, i32 0
  %259 = load i32, i32* %258, align 4
  store i32 %259, i32* %257, align 4
  %260 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %254, i64 0, i32 1
  %261 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %255, i64 0, i32 1
  %262 = load i32, i32* %261, align 4
  store i32 %262, i32* %260, align 4
  %263 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %255, i64 1
  %264 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %120, align 8
  %265 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %264, i64 1
  store %"class.viz::FrameSinkId"* %265, %"class.viz::FrameSinkId"** %120, align 8
  %266 = add i64 %256, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %253, !llvm.loop !8

268:                                              ; preds = %253, %244
  %269 = phi %"class.viz::FrameSinkId"* [ undef, %244 ], [ %265, %253 ]
  %270 = phi %"class.viz::FrameSinkId"* [ %245, %244 ], [ %265, %253 ]
  %271 = phi %"class.viz::FrameSinkId"* [ %1, %244 ], [ %263, %253 ]
  %272 = icmp ult i64 %248, 24
  br i1 %272, label %310, label %273

273:                                              ; preds = %268, %273
  %274 = phi %"class.viz::FrameSinkId"* [ %308, %273 ], [ %270, %268 ]
  %275 = phi %"class.viz::FrameSinkId"* [ %306, %273 ], [ %271, %268 ]
  %276 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %274, i64 0, i32 0
  %277 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %275, i64 0, i32 0
  %278 = load i32, i32* %277, align 4
  store i32 %278, i32* %276, align 4
  %279 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %274, i64 0, i32 1
  %280 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %275, i64 0, i32 1
  %281 = load i32, i32* %280, align 4
  store i32 %281, i32* %279, align 4
  %282 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %120, align 8
  %283 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %282, i64 1
  store %"class.viz::FrameSinkId"* %283, %"class.viz::FrameSinkId"** %120, align 8
  %284 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %283, i64 0, i32 0
  %285 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %275, i64 1, i32 0
  %286 = load i32, i32* %285, align 4
  store i32 %286, i32* %284, align 4
  %287 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %282, i64 1, i32 1
  %288 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %275, i64 1, i32 1
  %289 = load i32, i32* %288, align 4
  store i32 %289, i32* %287, align 4
  %290 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %120, align 8
  %291 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %290, i64 1
  store %"class.viz::FrameSinkId"* %291, %"class.viz::FrameSinkId"** %120, align 8
  %292 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %291, i64 0, i32 0
  %293 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %275, i64 2, i32 0
  %294 = load i32, i32* %293, align 4
  store i32 %294, i32* %292, align 4
  %295 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %290, i64 1, i32 1
  %296 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %275, i64 2, i32 1
  %297 = load i32, i32* %296, align 4
  store i32 %297, i32* %295, align 4
  %298 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %120, align 8
  %299 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %298, i64 1
  store %"class.viz::FrameSinkId"* %299, %"class.viz::FrameSinkId"** %120, align 8
  %300 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %299, i64 0, i32 0
  %301 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %275, i64 3, i32 0
  %302 = load i32, i32* %301, align 4
  store i32 %302, i32* %300, align 4
  %303 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %298, i64 1, i32 1
  %304 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %275, i64 3, i32 1
  %305 = load i32, i32* %304, align 4
  store i32 %305, i32* %303, align 4
  %306 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %275, i64 4
  %307 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %120, align 8
  %308 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %307, i64 1
  store %"class.viz::FrameSinkId"* %308, %"class.viz::FrameSinkId"** %120, align 8
  %309 = icmp eq %"class.viz::FrameSinkId"* %306, %236
  br i1 %309, label %310, label %273

310:                                              ; preds = %273, %268
  %311 = phi %"class.viz::FrameSinkId"* [ %269, %268 ], [ %308, %273 ]
  %312 = ptrtoint %"class.viz::FrameSinkId"* %311 to i64
  %313 = bitcast %"class.viz::FrameSinkId"** %119 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = load i64, i64* %123, align 8
  %316 = bitcast %"class.viz::FrameSinkId"** %120 to i64*
  br label %317

317:                                              ; preds = %238, %310
  %318 = phi i64* [ %242, %238 ], [ %316, %310 ]
  %319 = phi i64 [ %243, %238 ], [ %312, %310 ]
  %320 = phi i64 [ %239, %238 ], [ %315, %310 ]
  %321 = phi i64* [ %241, %238 ], [ %313, %310 ]
  %322 = phi i64 [ %240, %238 ], [ %314, %310 ]
  %323 = load i64, i64* %124, align 8
  store i64 %322, i64* %124, align 8
  store i64 %323, i64* %321, align 8
  store i64 %319, i64* %123, align 8
  store i64 %320, i64* %318, align 8
  %324 = load i64, i64* %134, align 8
  %325 = bitcast %"class.viz::FrameSinkId"** %121 to i64*
  %326 = load i64, i64* %325, align 8
  store i64 %326, i64* %134, align 8
  store i64 %324, i64* %325, align 8
  %327 = bitcast %"struct.std::__1::__split_buffer.426"* %5 to i64*
  store i64 %323, i64* %327, align 8
  %328 = inttoptr i64 %323 to %"class.viz::FrameSinkId"*
  %329 = inttoptr i64 %320 to %"class.viz::FrameSinkId"*
  %330 = icmp eq %"class.viz::FrameSinkId"* %329, %328
  br i1 %330, label %338, label %331

331:                                              ; preds = %317
  %332 = getelementptr %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %329, i64 -1, i32 0
  %333 = ptrtoint i32* %332 to i64
  %334 = sub i64 %333, %323
  %335 = lshr i64 %334, 3
  %336 = xor i64 %335, -1
  %337 = getelementptr %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %329, i64 %336
  store %"class.viz::FrameSinkId"* %337, %"class.viz::FrameSinkId"** %120, align 8
  br label %338

338:                                              ; preds = %331, %317
  %339 = icmp eq i64 %323, 0
  br i1 %339, label %342, label %340

340:                                              ; preds = %338
  %341 = inttoptr i64 %323 to i8*
  call void @_ZdlPv(i8* %341) #14
  br label %342

342:                                              ; preds = %338, %340
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %117) #13
  br label %343

343:                                              ; preds = %16, %109, %342
  %344 = phi %"class.viz::FrameSinkId"* [ %1, %16 ], [ %1, %109 ], [ %165, %342 ]
  ret %"class.viz::FrameSinkId"* %344
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN3viz11FrameSinkIdERNS_9allocatorIS2_EEE12emplace_backIJRKS2_EEEvDpOT_(%"struct.std::__1::__split_buffer.426"*, %"class.viz::FrameSinkId"* dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.426", %"struct.std::__1::__split_buffer.426"* %0, i64 0, i32 2
  %4 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.426", %"struct.std::__1::__split_buffer.426"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %5, align 8
  %7 = icmp eq %"class.viz::FrameSinkId"* %4, %6
  %8 = ptrtoint %"class.viz::FrameSinkId"* %6 to i64
  br i1 %7, label %9, label %127

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.426", %"struct.std::__1::__split_buffer.426"* %0, i64 0, i32 1
  %11 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.426", %"struct.std::__1::__split_buffer.426"* %0, i64 0, i32 0
  %13 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %12, align 8
  %14 = icmp ugt %"class.viz::FrameSinkId"* %11, %13
  %15 = ptrtoint %"class.viz::FrameSinkId"* %13 to i64
  br i1 %14, label %16, label %35

16:                                               ; preds = %9
  %17 = ptrtoint %"class.viz::FrameSinkId"* %11 to i64
  %18 = sub i64 %17, %15
  %19 = ashr exact i64 %18, 3
  %20 = add nsw i64 %19, 1
  %21 = sdiv i64 %20, -2
  %22 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %11, i64 %21
  %23 = ptrtoint %"class.viz::FrameSinkId"* %4 to i64
  %24 = sub i64 %23, %17
  %25 = ashr exact i64 %24, 3
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %16
  %28 = bitcast %"class.viz::FrameSinkId"* %22 to i8*
  %29 = bitcast %"class.viz::FrameSinkId"* %11 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 %29, i64 %24, i1 false) #13
  %30 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %10, align 8
  br label %31

31:                                               ; preds = %16, %27
  %32 = phi %"class.viz::FrameSinkId"* [ %11, %16 ], [ %30, %27 ]
  %33 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %22, i64 %25
  store %"class.viz::FrameSinkId"* %33, %"class.viz::FrameSinkId"** %3, align 8
  %34 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %32, i64 %21
  store %"class.viz::FrameSinkId"* %34, %"class.viz::FrameSinkId"** %10, align 8
  br label %127

35:                                               ; preds = %9
  %36 = bitcast %"class.viz::FrameSinkId"** %5 to i64*
  %37 = bitcast %"struct.std::__1::__split_buffer.426"* %0 to i64*
  %38 = sub i64 %8, %15
  %39 = ashr exact i64 %38, 2
  %40 = icmp eq i64 %38, 0
  %41 = select i1 %40, i64 1, i64 %39
  %42 = icmp ugt i64 %41, 2305843009213693951
  br i1 %42, label %43, label %44

43:                                               ; preds = %35
  tail call void @abort() #15
  unreachable

44:                                               ; preds = %35
  %45 = lshr i64 %41, 2
  %46 = shl i64 %41, 3
  %47 = tail call i8* @_Znwm(i64 %46) #14
  %48 = bitcast i8* %47 to %"class.viz::FrameSinkId"*
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %48, i64 %45
  %51 = ptrtoint %"class.viz::FrameSinkId"* %50 to i64
  %52 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %48, i64 %41
  %53 = ptrtoint %"class.viz::FrameSinkId"* %52 to i64
  %54 = ptrtoint %"class.viz::FrameSinkId"* %11 to i64
  %55 = ptrtoint %"class.viz::FrameSinkId"* %4 to i64
  %56 = sub i64 %55, %54
  %57 = ashr exact i64 %56, 3
  %58 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %50, i64 %57
  %59 = icmp eq i64 %56, 0
  br i1 %59, label %117, label %60

60:                                               ; preds = %44
  %61 = add i64 %56, -8
  %62 = lshr i64 %61, 3
  %63 = add nuw nsw i64 %62, 1
  %64 = and i64 %63, 3
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %80, label %66

66:                                               ; preds = %60, %66
  %67 = phi %"class.viz::FrameSinkId"* [ %76, %66 ], [ %50, %60 ]
  %68 = phi %"class.viz::FrameSinkId"* [ %77, %66 ], [ %11, %60 ]
  %69 = phi i64 [ %78, %66 ], [ %64, %60 ]
  %70 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %67, i64 0, i32 0
  %71 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %68, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  store i32 %72, i32* %70, align 4
  %73 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %67, i64 0, i32 1
  %74 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %68, i64 0, i32 1
  %75 = load i32, i32* %74, align 4
  store i32 %75, i32* %73, align 4
  %76 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %67, i64 1
  %77 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %68, i64 1
  %78 = add i64 %69, -1
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %66, !llvm.loop !9

80:                                               ; preds = %66, %60
  %81 = phi %"class.viz::FrameSinkId"* [ %50, %60 ], [ %76, %66 ]
  %82 = phi %"class.viz::FrameSinkId"* [ %11, %60 ], [ %77, %66 ]
  %83 = icmp ult i64 %61, 24
  br i1 %83, label %114, label %84

84:                                               ; preds = %80, %84
  %85 = phi %"class.viz::FrameSinkId"* [ %111, %84 ], [ %81, %80 ]
  %86 = phi %"class.viz::FrameSinkId"* [ %112, %84 ], [ %82, %80 ]
  %87 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %85, i64 0, i32 0
  %88 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %86, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  store i32 %89, i32* %87, align 4
  %90 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %85, i64 0, i32 1
  %91 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %86, i64 0, i32 1
  %92 = load i32, i32* %91, align 4
  store i32 %92, i32* %90, align 4
  %93 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %85, i64 1, i32 0
  %94 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %86, i64 1, i32 0
  %95 = load i32, i32* %94, align 4
  store i32 %95, i32* %93, align 4
  %96 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %85, i64 1, i32 1
  %97 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %86, i64 1, i32 1
  %98 = load i32, i32* %97, align 4
  store i32 %98, i32* %96, align 4
  %99 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %85, i64 2, i32 0
  %100 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %86, i64 2, i32 0
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %99, align 4
  %102 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %85, i64 2, i32 1
  %103 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %86, i64 2, i32 1
  %104 = load i32, i32* %103, align 4
  store i32 %104, i32* %102, align 4
  %105 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %85, i64 3, i32 0
  %106 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %86, i64 3, i32 0
  %107 = load i32, i32* %106, align 4
  store i32 %107, i32* %105, align 4
  %108 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %85, i64 3, i32 1
  %109 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %86, i64 3, i32 1
  %110 = load i32, i32* %109, align 4
  store i32 %110, i32* %108, align 4
  %111 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %85, i64 4
  %112 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %86, i64 4
  %113 = icmp eq %"class.viz::FrameSinkId"* %58, %111
  br i1 %113, label %114, label %84

114:                                              ; preds = %84, %80
  %115 = ptrtoint %"class.viz::FrameSinkId"* %58 to i64
  %116 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %12, align 8
  br label %117

117:                                              ; preds = %44, %114
  %118 = phi %"class.viz::FrameSinkId"* [ %116, %114 ], [ %13, %44 ]
  %119 = phi i64 [ %115, %114 ], [ %51, %44 ]
  store i64 %49, i64* %37, align 8
  %120 = bitcast %"class.viz::FrameSinkId"** %10 to i64*
  store i64 %51, i64* %120, align 8
  %121 = bitcast %"class.viz::FrameSinkId"** %3 to i64*
  store i64 %119, i64* %121, align 8
  store i64 %53, i64* %36, align 8
  %122 = icmp eq %"class.viz::FrameSinkId"* %118, null
  %123 = inttoptr i64 %119 to %"class.viz::FrameSinkId"*
  br i1 %122, label %127, label %124

124:                                              ; preds = %117
  %125 = bitcast %"class.viz::FrameSinkId"* %118 to i8*
  tail call void @_ZdlPv(i8* %125) #14
  %126 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %3, align 8
  br label %127

127:                                              ; preds = %124, %117, %31, %2
  %128 = phi %"class.viz::FrameSinkId"* [ %126, %124 ], [ %123, %117 ], [ %33, %31 ], [ %4, %2 ]
  %129 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %128, i64 0, i32 0
  %130 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  store i32 %131, i32* %129, align 4
  %132 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %128, i64 0, i32 1
  %133 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 1
  %134 = load i32, i32* %133, align 4
  store i32 %134, i32* %132, align 4
  %135 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %3, align 8
  %136 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %135, i64 1
  store %"class.viz::FrameSinkId"* %136, %"class.viz::FrameSinkId"** %3, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #11

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #11

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #11

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = distinct !{!7, !6}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !6}
