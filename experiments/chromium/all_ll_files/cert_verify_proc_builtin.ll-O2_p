; ModuleID = '../../net/cert/cert_verify_proc_builtin.cc'
source_filename = "../../net/cert/cert_verify_proc_builtin.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::(anonymous namespace)::CertVerifyProcTrustStore" = type { %"class.net::SystemTrustStore"*, %"class.net::TrustStoreInMemory", %"class.net::TrustStoreCollection" }
%"class.net::SystemTrustStore" = type { i32 (...)** }
%"class.net::TrustStoreInMemory" = type { %"class.net::TrustStore", %"class.std::__1::unordered_multimap.211" }
%"class.net::TrustStore" = type { %"class.net::CertIssuerSource" }
%"class.net::CertIssuerSource" = type { i32 (...)** }
%"class.std::__1::unordered_multimap.211" = type { %"class.std::__1::__hash_table.212" }
%"class.std::__1::__hash_table.212" = type <{ %"class.std::__1::unique_ptr.213", %"class.std::__1::__compressed_pair.223", %"class.std::__1::__compressed_pair.228", %"class.std::__1::__compressed_pair.231", [4 x i8] }>
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215", %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"struct.std::__1::__hash_node_base.216"** }
%"struct.std::__1::__hash_node_base.216" = type { %"struct.std::__1::__hash_node_base.216"* }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.std::__1::__bucket_list_deallocator.218" }
%"class.std::__1::__bucket_list_deallocator.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"struct.std::__1::__hash_node_base.216" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { float }
%"class.net::TrustStoreCollection" = type { %"class.net::TrustStore", %"class.std::__1::vector.235" }
%"class.std::__1::vector.235" = type { %"class.std::__1::__vector_base.236" }
%"class.std::__1::__vector_base.236" = type { %"class.net::TrustStore"**, %"class.net::TrustStore"**, %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.net::TrustStore"** }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.net::CertVerifyProcBuiltinResultDebugData" = type { %"class.base::SupportsUserData::Data", %"class.base::Time", %"struct.net::der::GeneralizedTime" }
%"class.base::SupportsUserData::Data" = type { i32 (...)** }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.net::der::GeneralizedTime" = type { i16, i8, i8, i8, i8, i8 }
%"class.base::SupportsUserData" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing", [7 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.net::CertVerifyProc" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.net::CertNetFetcher" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.15", [4 x i8] }>
%"class.base::RefCountedThreadSafe.15" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::(anonymous namespace)::CertVerifyProcBuiltin" = type { %"class.net::CertVerifyProc.base", %class.scoped_refptr.14, %"class.std::__1::unique_ptr.16" }
%"class.net::CertVerifyProc.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%class.scoped_refptr.14 = type { %"class.net::CertNetFetcher"* }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.net::SystemTrustStore"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.23", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.34", %"class.std::__1::vector.38" }
%"class.base::RefCountedThreadSafe.23" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::unique_ptr.34"*, %"class.std::__1::unique_ptr.34"*, %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.std::__1::unique_ptr.34"* }
%"class.net::CRLSet" = type { %"class.base::RefCountedThreadSafe.45", i32, i64, %"class.std::__1::unordered_map", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::unordered_map", %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.45" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.46", %"class.std::__1::__compressed_pair.54", %"class.std::__1::__compressed_pair.59", %"class.std::__1::__compressed_pair.61", [4 x i8] }>
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48", %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"class.std::__1::vector.65" = type { %"class.std::__1::__vector_base.66" }
%"class.std::__1::__vector_base.66" = type { %class.scoped_refptr.67*, %class.scoped_refptr.67*, %"class.std::__1::__compressed_pair.68" }
%class.scoped_refptr.67 = type { %"class.net::X509Certificate"* }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %class.scoped_refptr.67* }
%"class.net::CertVerifyResult" = type <{ %"class.base::SupportsUserData.base", [7 x i8], %class.scoped_refptr.67, i32, i8, i8, i8, i8, i8, [7 x i8], %"class.std::__1::vector.73", i8, i8, [2 x i8], %"struct.net::OCSPVerifyResult", [4 x i8], %"class.std::__1::vector.81", i32, [4 x i8] }>
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.76" }
%"class.net::HashValue" = type { i32, %union.anon.75 }
%union.anon.75 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.net::HashValue"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%"class.std::__1::vector.81" = type { %"class.std::__1::__vector_base.82" }
%"class.std::__1::__vector_base.82" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.85" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.83, i32, [4 x i8] }>
%class.scoped_refptr.83 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.84", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.84" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.90" }
%"class.base::time_internal::TimeBase.90" = type { i64 }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector.91", %"class.std::__1::vector.98" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.93" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.98" = type { %"class.std::__1::__vector_base.99" }
%"class.std::__1::__vector_base.99" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.100" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.314" }
%"union.absl::variant_internal::DestructibleUnionImpl.314" = type { %"union.absl::variant_internal::DestructibleUnionImpl.315" }
%"union.absl::variant_internal::DestructibleUnionImpl.315" = type { %"union.absl::variant_internal::DestructibleUnionImpl.316" }
%"union.absl::variant_internal::DestructibleUnionImpl.316" = type { %"union.absl::variant_internal::DestructibleUnionImpl.317" }
%"union.absl::variant_internal::DestructibleUnionImpl.317" = type { %"class.std::__1::basic_string" }
%"class.std::__1::set.281" = type { %"class.std::__1::__tree.282" }
%"class.std::__1::__tree.282" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.283", %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.net::der::Input" = type { i8*, i64 }
%"class.net::(anonymous namespace)::PathBuilderDelegateImpl" = type { %"class.net::SimplePathBuilderDelegate.base", %"class.net::CRLSet"*, %"class.net::CertNetFetcher"*, i32, i32, %"class.net::(anonymous namespace)::CertVerifyProcTrustStore"*, %"class.base::BasicStringPiece", %"class.net::EVRootCAMetadata"*, i8* }
%"class.net::SimplePathBuilderDelegate.base" = type <{ %"class.net::CertPathBuilderDelegate", i64, i32 }>
%"class.net::CertPathBuilderDelegate" = type { %"class.net::VerifyCertificateChainDelegate" }
%"class.net::VerifyCertificateChainDelegate" = type { i32 (...)** }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.net::EVRootCAMetadata" = type { %"class.std::__1::map.243", %"class.std::__1::set" }
%"class.std::__1::map.243" = type { %"class.std::__1::__tree.244" }
%"class.std::__1::__tree.244" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.245", %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.254" }
%"class.std::__1::__tree.254" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.255", %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.net::CertPathBuilder" = type <{ %"struct.net::CertPathBuilder::Result", %"class.std::__1::unique_ptr.356", %"class.net::CertPathBuilderDelegate"*, %"struct.net::der::GeneralizedTime", i32, i32, %"class.std::__1::set.281", i32, i32, i32, [4 x i8], %"class.base::TimeTicks", i8, [7 x i8] }>
%"struct.net::CertPathBuilder::Result" = type <{ %"class.base::SupportsUserData.base", [7 x i8], %"class.std::__1::vector.269", i64, i8, i8, [6 x i8] }>
%"class.std::__1::vector.269" = type { %"class.std::__1::__vector_base.270" }
%"class.std::__1::__vector_base.270" = type { %"class.std::__1::unique_ptr.271"*, %"class.std::__1::unique_ptr.271"*, %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"struct.net::CertPathBuilderResultPath"* }
%"struct.net::CertPathBuilderResultPath" = type { %"class.std::__1::vector.274", %"struct.net::CertificateTrust", %"class.std::__1::set.281", %"class.std::__1::unique_ptr.289", %"class.net::CertPathErrors" }
%"class.std::__1::vector.274" = type { %"class.std::__1::__vector_base.275" }
%"class.std::__1::__vector_base.275" = type { %class.scoped_refptr.105*, %class.scoped_refptr.105*, %"class.std::__1::__compressed_pair.276" }
%class.scoped_refptr.105 = type { %"class.net::ParsedCertificate"* }
%"class.net::ParsedCertificate" = type { %"class.base::RefCountedThreadSafe.106", %"class.std::__1::unique_ptr.34", %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::BitString", %"struct.net::ParsedTbsCertificate", %"class.std::__1::unique_ptr.107", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"struct.net::ParsedBasicConstraints", i8, [3 x i8], %"class.net::der::BitString", i8, %"class.std::__1::vector.119", %"struct.net::ParsedExtension", %"class.std::__1::unique_ptr.126", %"class.std::__1::unique_ptr.132", i8, [7 x i8], %"struct.net::ParsedExtension", %"class.std::__1::vector.138", %"class.std::__1::vector.138", i8, %"class.std::__1::vector.119", i8, %"struct.net::ParsedPolicyConstraints", i8, %"class.std::__1::vector.145", i8, i8, %"class.absl::optional", %"class.absl::optional.153", %"class.std::__1::map.162" }
%"class.base::RefCountedThreadSafe.106" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ParsedTbsCertificate" = type { i32, %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::Input", %"struct.net::der::GeneralizedTime", %"struct.net::der::GeneralizedTime", %"class.net::der::Input", %"class.net::der::Input", i8, [7 x i8], %"class.net::der::BitString", i8, [7 x i8], %"class.net::der::BitString", i8, %"class.net::der::Input" }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.net::SignatureAlgorithm"* }
%"class.net::SignatureAlgorithm" = type { i32, i32, %"class.std::__1::unique_ptr.110" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.net::SignatureAlgorithmParameters"* }
%"class.net::SignatureAlgorithmParameters" = type { i32 (...)** }
%"struct.net::ParsedBasicConstraints" = type { i8, i8, i8 }
%"class.net::der::BitString" = type <{ %"class.net::der::Input", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"struct.net::GeneralNames"* }
%"struct.net::GeneralNames" = type opaque
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.net::NameConstraints"* }
%"class.net::NameConstraints" = type opaque
%"struct.net::ParsedExtension" = type <{ %"class.net::der::Input", %"class.net::der::Input", i8, [7 x i8] }>
%"class.std::__1::vector.138" = type { %"class.std::__1::__vector_base.139" }
%"class.std::__1::__vector_base.139" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.base::BasicStringPiece"* }
%"class.std::__1::vector.119" = type { %"class.std::__1::__vector_base.120" }
%"class.std::__1::__vector_base.120" = type { %"class.net::der::Input"*, %"class.net::der::Input"*, %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.net::der::Input"* }
%"struct.net::ParsedPolicyConstraints" = type { i8, i8, i8, i8 }
%"class.std::__1::vector.145" = type { %"class.std::__1::__vector_base.146" }
%"class.std::__1::__vector_base.146" = type { %"struct.net::ParsedPolicyMapping"*, %"struct.net::ParsedPolicyMapping"*, %"class.std::__1::__compressed_pair.147" }
%"struct.net::ParsedPolicyMapping" = type { %"class.net::der::Input", %"class.net::der::Input" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"struct.net::ParsedPolicyMapping"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.152 }
%union.anon.152 = type { %"struct.net::ParsedAuthorityKeyIdentifier" }
%"struct.net::ParsedAuthorityKeyIdentifier" = type { %"class.absl::optional.153", %"class.absl::optional.153", %"class.absl::optional.153" }
%"class.absl::optional.153" = type { %"class.absl::optional_internal::optional_data.154" }
%"class.absl::optional_internal::optional_data.154" = type { %"class.absl::optional_internal::optional_data_base.155" }
%"class.absl::optional_internal::optional_data_base.155" = type { %"class.absl::optional_internal::optional_data_dtor_base.156" }
%"class.absl::optional_internal::optional_data_dtor_base.156" = type { i8, %union.anon.157 }
%union.anon.157 = type { %"class.net::der::Input" }
%"class.std::__1::map.162" = type { %"class.std::__1::__tree.163" }
%"class.std::__1::__tree.163" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %class.scoped_refptr.105* }
%"struct.net::CertificateTrust" = type { i32 }
%"class.std::__1::unique_ptr.289" = type { %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.net::CertPathBuilderDelegateData"* }
%"class.net::CertPathBuilderDelegateData" = type { i32 (...)** }
%"class.net::CertPathErrors" = type { %"class.std::__1::vector.295", %"class.net::CertErrors" }
%"class.std::__1::vector.295" = type { %"class.std::__1::__vector_base.296" }
%"class.std::__1::__vector_base.296" = type { %"class.net::CertErrors"*, %"class.net::CertErrors"*, %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.net::CertErrors"* }
%"class.net::CertErrors" = type { %"class.std::__1::vector.173" }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"struct.net::CertError"*, %"struct.net::CertError"*, %"class.std::__1::__compressed_pair.181" }
%"struct.net::CertError" = type { i32, i8*, %"class.std::__1::unique_ptr.175" }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.net::CertErrorParams"* }
%"class.net::CertErrorParams" = type opaque
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"struct.net::CertError"* }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.std::__1::unique_ptr.271"* }
%"class.std::__1::unique_ptr.356" = type { %"class.std::__1::__compressed_pair.357" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.net::CertPathIter"* }
%"class.net::CertPathIter" = type opaque
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"struct.net::ParseCertificateOptions" = type { i8 }
%"class.net::CertIssuerSourceStatic" = type { %"class.net::CertIssuerSource", %"class.std::__1::unordered_multimap" }
%"class.std::__1::unordered_multimap" = type { %"class.std::__1::__hash_table.186" }
%"class.std::__1::__hash_table.186" = type <{ %"class.std::__1::unique_ptr.187", %"class.std::__1::__compressed_pair.197", %"class.std::__1::__compressed_pair.202", %"class.std::__1::__compressed_pair.205", [4 x i8] }>
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189", %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"struct.std::__1::__hash_node_base.190"** }
%"struct.std::__1::__hash_node_base.190" = type { %"struct.std::__1::__hash_node_base.190"* }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.std::__1::__bucket_list_deallocator.192" }
%"class.std::__1::__bucket_list_deallocator.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"struct.std::__1::__hash_node_base.190" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"class.std::__1::vector.262" = type { %"class.std::__1::__vector_base.263" }
%"class.std::__1::__vector_base.263" = type { %"struct.net::(anonymous namespace)::BuildPathAttempt"*, %"struct.net::(anonymous namespace)::BuildPathAttempt"*, %"class.std::__1::__compressed_pair.264" }
%"struct.net::(anonymous namespace)::BuildPathAttempt" = type { i32, i32 }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"struct.net::(anonymous namespace)::BuildPathAttempt"* }
%"class.net::TestRootCerts" = type { %"class.net::TrustStoreInMemory" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.net::der::Input" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.net::SimplePathBuilderDelegate" = type <{ %"class.net::CertPathBuilderDelegate", i64, i32, [4 x i8] }>
%"class.net::CertIssuerSourceAia" = type { %"class.net::CertIssuerSource", %class.scoped_refptr.14 }
%"class.net::(anonymous namespace)::PathBuilderDelegateDataImpl" = type { %"class.net::CertPathBuilderDelegateData", %"struct.net::OCSPVerifyResult" }
%struct.evp_pkey_st = type { i32, i32, %union.anon.368, %struct.evp_pkey_asn1_method_st* }
%union.anon.368 = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%"struct.net::RevocationPolicy" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN4base16SupportsUserData4DataD2Ev = comdat any

$_ZN3net36CertVerifyProcBuiltinResultDebugDataD0Ev = comdat any

$_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE = comdat any

$_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE15__assign_uniqueIPKS3_EEvT_SC_ = comdat any

$_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE20__node_assign_uniqueERKS3_PNS_11__tree_nodeIS3_PvEE = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrI16crypto_buffer_stN4bssl8internal7DeleterIS2_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

@_ZTVN3net36CertVerifyProcBuiltinResultDebugDataE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::SupportsUserData::Data"*)* @_ZN4base16SupportsUserData4DataD2Ev to i8*), i8* bitcast (void (%"class.net::CertVerifyProcBuiltinResultDebugData"*)* @_ZN3net36CertVerifyProcBuiltinResultDebugDataD0Ev to i8*), i8* bitcast (%"class.base::SupportsUserData::Data"* (%"class.net::CertVerifyProcBuiltinResultDebugData"*)* @_ZN3net36CertVerifyProcBuiltinResultDebugData5CloneEv to i8*)] }, align 8
@_ZN3net12_GLOBAL__N_119kResultDebugDataKeyE = internal global i8* bitcast (i8** @_ZN3net12_GLOBAL__N_119kResultDebugDataKeyE to i8*), align 8
@_ZTVN3net12_GLOBAL__N_121CertVerifyProcBuiltinE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.net::(anonymous namespace)::CertVerifyProcBuiltin"*)* @_ZNK3net12_GLOBAL__N_121CertVerifyProcBuiltin30SupportsAdditionalTrustAnchorsEv to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::CertVerifyProcBuiltin"*)* @_ZN3net12_GLOBAL__N_121CertVerifyProcBuiltinD2Ev to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::CertVerifyProcBuiltin"*)* @_ZN3net12_GLOBAL__N_121CertVerifyProcBuiltinD0Ev to i8*), i8* bitcast (i32 (%"class.net::(anonymous namespace)::CertVerifyProcBuiltin"*, %"class.net::X509Certificate"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i32, %"class.net::CRLSet"*, %"class.std::__1::vector.65"*, %"class.net::CertVerifyResult"*, %"class.net::NetLogWithSource"*)* @_ZN3net12_GLOBAL__N_121CertVerifyProcBuiltin14VerifyInternalEPNS_15X509CertificateERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_SC_iPNS_6CRLSetERKNS4_6vectorI13scoped_refptrIS2_ENS8_ISH_EEEEPNS_16CertVerifyResultERKNS_16NetLogWithSourceE to i8*)] }, align 8
@__const._ZN3net12_GLOBAL__N_121CertVerifyProcBuiltin14VerifyInternalEPNS_15X509CertificateERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_SC_iPNS_6CRLSetERKNS4_6vectorI13scoped_refptrIS2_ENS8_ISH_EEEEPNS_16CertVerifyResultERKNS_16NetLogWithSourceE.trust_store = private unnamed_addr constant %"class.net::(anonymous namespace)::CertVerifyProcTrustStore" { %"class.net::SystemTrustStore"* inttoptr (i64 -6148914691236517206 to %"class.net::SystemTrustStore"*), %"class.net::TrustStoreInMemory" { %"class.net::TrustStore" { %"class.net::CertIssuerSource" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) } }, %"class.std::__1::unordered_multimap.211" { %"class.std::__1::__hash_table.212" <{ %"class.std::__1::unique_ptr.213" { %"class.std::__1::__compressed_pair.214" { %"struct.std::__1::__compressed_pair_elem.215" { %"struct.std::__1::__hash_node_base.216"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.216"**) }, %"struct.std::__1::__compressed_pair_elem.217" { %"class.std::__1::__bucket_list_deallocator.218" { %"class.std::__1::__compressed_pair.219" { %"struct.std::__1::__compressed_pair_elem.2" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.223" { %"struct.std::__1::__compressed_pair_elem.224" { %"struct.std::__1::__hash_node_base.216" { %"struct.std::__1::__hash_node_base.216"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.216"*) } } }, %"class.std::__1::__compressed_pair.228" { %"struct.std::__1::__compressed_pair_elem.2" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.231" { %"struct.std::__1::__compressed_pair_elem.62" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> } }, %"class.net::TrustStoreCollection" { %"class.net::TrustStore" { %"class.net::CertIssuerSource" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) } }, %"class.std::__1::vector.235" { %"class.std::__1::__vector_base.236" { %"class.net::TrustStore"** inttoptr (i64 -6148914691236517206 to %"class.net::TrustStore"**), %"class.net::TrustStore"** inttoptr (i64 -6148914691236517206 to %"class.net::TrustStore"**), %"class.std::__1::__compressed_pair.237" { %"struct.std::__1::__compressed_pair_elem.238" { %"class.net::TrustStore"** inttoptr (i64 -6148914691236517206 to %"class.net::TrustStore"**) } } } } } }, align 8
@_ZN3net11cert_errors24kUnableToCheckRevocationE = external local_unnamed_addr constant i8*, align 8
@.str.3 = private unnamed_addr constant [12 x i8] c"certificate\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"errors\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"is_ev_attempt\00", align 1
@.str.9 = private unnamed_addr constant [14 x i8] c"digest_policy\00", align 1
@.str.10 = private unnamed_addr constant [43 x i8] c"../../net/cert/cert_verify_proc_builtin.cc\00", align 1
@.str.11 = private unnamed_addr constant [43 x i8] c"No net_fetcher for performing AIA chasing.\00", align 1
@_ZTVN3net12_GLOBAL__N_123PathBuilderDelegateImplE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.net::SimplePathBuilderDelegate"*, %"class.net::SignatureAlgorithm"*, %"class.net::CertErrors"*)* @_ZN3net25SimplePathBuilderDelegate30IsSignatureAlgorithmAcceptableERKNS_18SignatureAlgorithmEPNS_10CertErrorsE to i8*), i8* bitcast (i1 (%"class.net::SimplePathBuilderDelegate"*, %struct.evp_pkey_st*, %"class.net::CertErrors"*)* @_ZN3net25SimplePathBuilderDelegate21IsPublicKeyAcceptableEP11evp_pkey_stPNS_10CertErrorsE to i8*), i8* bitcast (void (%"class.net::VerifyCertificateChainDelegate"*)* @_ZN3net30VerifyCertificateChainDelegateD2Ev to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::PathBuilderDelegateImpl"*)* @_ZN3net12_GLOBAL__N_123PathBuilderDelegateImplD0Ev to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::PathBuilderDelegateImpl"*, %"class.net::CertPathBuilder"*, %"struct.net::CertPathBuilderResultPath"*)* @_ZN3net12_GLOBAL__N_123PathBuilderDelegateImpl26CheckPathAfterVerificationERKNS_15CertPathBuilderEPNS_25CertPathBuilderResultPathE to i8*)] }, align 8
@.str.12 = private unnamed_addr constant [32 x i8] c"Path does not have an EV policy\00", align 1
@_ZTVN3net12_GLOBAL__N_127PathBuilderDelegateDataImplE = internal unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::(anonymous namespace)::PathBuilderDelegateDataImpl"*)* @_ZN3net12_GLOBAL__N_127PathBuilderDelegateDataImplD2Ev to i8*), i8* bitcast (void (%"class.net::(anonymous namespace)::PathBuilderDelegateDataImpl"*)* @_ZN3net12_GLOBAL__N_127PathBuilderDelegateDataImplD0Ev to i8*)] }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.13 = private unnamed_addr constant [9 x i8] c"is_valid\00", align 1
@.str.14 = private unnamed_addr constant [16 x i8] c"last_cert_trust\00", align 1
@.str.15 = private unnamed_addr constant [13 x i8] c"certificates\00", align 1
@.str.16 = private unnamed_addr constant [15 x i8] c"has_valid_path\00", align 1
@.str.17 = private unnamed_addr constant [18 x i8] c"best_result_index\00", align 1
@.str.18 = private unnamed_addr constant [25 x i8] c"exceeded_iteration_limit\00", align 1
@.str.19 = private unnamed_addr constant [18 x i8] c"exceeded_deadline\00", align 1
@_ZN3net11cert_errors31kUnacceptableSignatureAlgorithmE = external local_unnamed_addr constant i8*, align 8
@.str.20 = private unnamed_addr constant [63 x i8] c"path_is_valid || IsCertStatusError(verify_result->cert_status)\00", align 1
@.str.21 = private unnamed_addr constant [27 x i8] c"CertVerifyProcBuiltin for \00", align 1
@.str.22 = private unnamed_addr constant [10 x i8] c" failed:\0A\00", align 1
@_ZN3net11cert_errors19kCertificateRevokedE = external local_unnamed_addr constant i8*, align 8
@_ZN3net11cert_errors22kNoRevocationMechanismE = external local_unnamed_addr constant i8*, align 8
@_ZN3net11cert_errors22kUnacceptablePublicKeyE = external local_unnamed_addr constant i8*, align 8
@_ZN3net11cert_errors23kValidityFailedNotAfterE = external local_unnamed_addr constant i8*, align 8
@_ZN3net11cert_errors24kValidityFailedNotBeforeE = external local_unnamed_addr constant i8*, align 8
@_ZN3net11cert_errors23kDistrustedByTrustStoreE = external local_unnamed_addr constant i8*, align 8
@_ZN3net11cert_errors23kVerifySignedDataFailedE = external local_unnamed_addr constant i8*, align 8

@_ZN3net36CertVerifyProcBuiltinResultDebugDataC1EN4base4TimeERKNS_3der15GeneralizedTimeE = hidden unnamed_addr alias void (%"class.net::CertVerifyProcBuiltinResultDebugData"*, i64, %"struct.net::der::GeneralizedTime"*), void (%"class.net::CertVerifyProcBuiltinResultDebugData"*, i64, %"struct.net::der::GeneralizedTime"*)* @_ZN3net36CertVerifyProcBuiltinResultDebugDataC2EN4base4TimeERKNS_3der15GeneralizedTimeE

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3net36CertVerifyProcBuiltinResultDebugDataC2EN4base4TimeERKNS_3der15GeneralizedTimeE(%"class.net::CertVerifyProcBuiltinResultDebugData"* nocapture, i64, %"struct.net::der::GeneralizedTime"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::CertVerifyProcBuiltinResultDebugData", %"class.net::CertVerifyProcBuiltinResultDebugData"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net36CertVerifyProcBuiltinResultDebugDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.net::CertVerifyProcBuiltinResultDebugData", %"class.net::CertVerifyProcBuiltinResultDebugData"* %0, i64 0, i32 1, i32 0, i32 0
  store i64 %1, i64* %5, align 8
  %6 = getelementptr inbounds %"class.net::CertVerifyProcBuiltinResultDebugData", %"class.net::CertVerifyProcBuiltinResultDebugData"* %0, i64 0, i32 2
  %7 = bitcast %"struct.net::der::GeneralizedTime"* %2 to i64*
  %8 = bitcast %"struct.net::der::GeneralizedTime"* %6 to i64*
  %9 = load i64, i64* %7, align 2
  store i64 %9, i64* %8, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::CertVerifyProcBuiltinResultDebugData"* @_ZN3net36CertVerifyProcBuiltinResultDebugData3GetEPKN4base16SupportsUserDataE(%"class.base::SupportsUserData"*) local_unnamed_addr #2 align 2 {
  %2 = load i8*, i8** @_ZN3net12_GLOBAL__N_119kResultDebugDataKeyE, align 8
  %3 = tail call %"class.base::SupportsUserData::Data"* @_ZNK4base16SupportsUserData11GetUserDataEPKv(%"class.base::SupportsUserData"* %0, i8* %2) #12
  %4 = bitcast %"class.base::SupportsUserData::Data"* %3 to %"class.net::CertVerifyProcBuiltinResultDebugData"*
  ret %"class.net::CertVerifyProcBuiltinResultDebugData"* %4
}

declare %"class.base::SupportsUserData::Data"* @_ZNK4base16SupportsUserData11GetUserDataEPKv(%"class.base::SupportsUserData"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net36CertVerifyProcBuiltinResultDebugData6CreateEPN4base16SupportsUserDataENS1_4TimeERKNS_3der15GeneralizedTimeE(%"class.base::SupportsUserData"*, i64, %"struct.net::der::GeneralizedTime"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %4 = load i8*, i8** @_ZN3net12_GLOBAL__N_119kResultDebugDataKeyE, align 8
  %5 = tail call i8* @_Znwm(i64 24) #13
  %6 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net36CertVerifyProcBuiltinResultDebugDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds i8, i8* %5, i64 8
  %8 = bitcast i8* %7 to i64*
  store i64 %1, i64* %8, align 8
  %9 = getelementptr inbounds i8, i8* %5, i64 16
  %10 = bitcast %"struct.net::der::GeneralizedTime"* %2 to i64*
  %11 = bitcast i8* %9 to i64*
  %12 = load i64, i64* %10, align 2
  store i64 %12, i64* %11, align 8
  %13 = bitcast i8* %5 to %"class.base::SupportsUserData::Data"*
  tail call void @_ZN4base16SupportsUserData11SetUserDataEPKvNSt3__110unique_ptrINS0_4DataENS3_14default_deleteIS5_EEEE(%"class.base::SupportsUserData"* %0, i8* %4, %"class.base::SupportsUserData::Data"* nonnull %13) #12
  ret void
}

declare void @_ZN4base16SupportsUserData11SetUserDataEPKvNSt3__110unique_ptrINS0_4DataENS3_14default_deleteIS5_EEEE(%"class.base::SupportsUserData"*, i8*, %"class.base::SupportsUserData::Data"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::SupportsUserData::Data"* @_ZN3net36CertVerifyProcBuiltinResultDebugData5CloneEv(%"class.net::CertVerifyProcBuiltinResultDebugData"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #13
  %3 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net36CertVerifyProcBuiltinResultDebugDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = getelementptr inbounds %"class.net::CertVerifyProcBuiltinResultDebugData", %"class.net::CertVerifyProcBuiltinResultDebugData"* %0, i64 0, i32 1
  %6 = bitcast %"class.base::Time"* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %6, i64 16, i1 false) #12
  %7 = bitcast i8* %2 to %"class.base::SupportsUserData::Data"*
  ret %"class.base::SupportsUserData::Data"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::CertVerifyProc"* @_ZN3net27CreateCertVerifyProcBuiltinE13scoped_refptrINS_14CertNetFetcherEENSt3__110unique_ptrINS_16SystemTrustStoreENS3_14default_deleteIS5_EEEE(%"class.net::CertNetFetcher"*, %"class.net::SystemTrustStore"*) local_unnamed_addr #2 {
  %3 = ptrtoint %"class.net::CertNetFetcher"* %0 to i64
  %4 = ptrtoint %"class.net::SystemTrustStore"* %1 to i64
  %5 = tail call i8* @_Znwm(i64 32) #13
  %6 = bitcast i8* %5 to %"class.net::CertVerifyProc"*
  tail call void @_ZN3net14CertVerifyProcC2Ev(%"class.net::CertVerifyProc"* nonnull %6) #12
  %7 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net12_GLOBAL__N_121CertVerifyProcBuiltinE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %5, i64 16
  %9 = bitcast i8* %8 to i64*
  store i64 %3, i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %5, i64 24
  %11 = bitcast i8* %10 to i64*
  store i64 %4, i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %5, i64 8
  %13 = bitcast i8* %12 to i32*
  %14 = atomicrmw add i32* %13, i32 1 monotonic
  ret %"class.net::CertVerifyProc"* %6
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN3net43GetCertVerifyProcBuiltinTimeLimitForTestingEv() local_unnamed_addr #4 {
  ret i64 60000000
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base16SupportsUserData4DataD2Ev(%"class.base::SupportsUserData::Data"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net36CertVerifyProcBuiltinResultDebugDataD0Ev(%"class.net::CertVerifyProcBuiltinResultDebugData"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.net::CertVerifyProcBuiltinResultDebugData"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN3net14CertVerifyProcC2Ev(%"class.net::CertVerifyProc"*) unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZNK3net12_GLOBAL__N_121CertVerifyProcBuiltin30SupportsAdditionalTrustAnchorsEv(%"class.net::(anonymous namespace)::CertVerifyProcBuiltin"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_121CertVerifyProcBuiltinD2Ev(%"class.net::(anonymous namespace)::CertVerifyProcBuiltin"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::CertVerifyProcBuiltin", %"class.net::(anonymous namespace)::CertVerifyProcBuiltin"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net12_GLOBAL__N_121CertVerifyProcBuiltinE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::CertVerifyProcBuiltin", %"class.net::(anonymous namespace)::CertVerifyProcBuiltin"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.net::SystemTrustStore"*, %"class.net::SystemTrustStore"** %3, align 8
  store %"class.net::SystemTrustStore"* null, %"class.net::SystemTrustStore"** %3, align 8
  %5 = icmp eq %"class.net::SystemTrustStore"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.net::SystemTrustStore"* %4 to void (%"class.net::SystemTrustStore"*)***
  %8 = load void (%"class.net::SystemTrustStore"*)**, void (%"class.net::SystemTrustStore"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.net::SystemTrustStore"*)*, void (%"class.net::SystemTrustStore"*)** %8, i64 1
  %10 = load void (%"class.net::SystemTrustStore"*)*, void (%"class.net::SystemTrustStore"*)** %9, align 8
  tail call void %10(%"class.net::SystemTrustStore"* nonnull %4) #12
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.net::(anonymous namespace)::CertVerifyProcBuiltin", %"class.net::(anonymous namespace)::CertVerifyProcBuiltin"* %0, i64 0, i32 1, i32 0
  %13 = load %"class.net::CertNetFetcher"*, %"class.net::CertNetFetcher"** %12, align 8
  %14 = icmp eq %"class.net::CertNetFetcher"* %13, null
  br i1 %14, label %27, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.net::CertNetFetcher", %"class.net::CertNetFetcher"* %13, i64 0, i32 1
  %17 = getelementptr inbounds %"class.base::RefCountedThreadSafe.15", %"class.base::RefCountedThreadSafe.15"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i32* %17, i32 1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %27

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe.15", %"class.base::RefCountedThreadSafe.15"* %16, i64 -2
  %22 = bitcast %"class.base::RefCountedThreadSafe.15"* %21 to %"class.net::CertNetFetcher"*
  %23 = bitcast %"class.base::RefCountedThreadSafe.15"* %21 to void (%"class.net::CertNetFetcher"*)***
  %24 = load void (%"class.net::CertNetFetcher"*)**, void (%"class.net::CertNetFetcher"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.net::CertNetFetcher"*)*, void (%"class.net::CertNetFetcher"*)** %24, i64 5
  %26 = load void (%"class.net::CertNetFetcher"*)*, void (%"class.net::CertNetFetcher"*)** %25, align 8
  tail call void %26(%"class.net::CertNetFetcher"* nonnull %22) #12
  br label %27

27:                                               ; preds = %11, %15, %20
  %28 = bitcast %"class.net::(anonymous namespace)::CertVerifyProcBuiltin"* %0 to %"class.net::CertVerifyProc"*
  tail call void @_ZN3net14CertVerifyProcD2Ev(%"class.net::CertVerifyProc"* %28) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_121CertVerifyProcBuiltinD0Ev(%"class.net::(anonymous namespace)::CertVerifyProcBuiltin"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::CertVerifyProcBuiltin", %"class.net::(anonymous namespace)::CertVerifyProcBuiltin"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3net12_GLOBAL__N_121CertVerifyProcBuiltinE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::CertVerifyProcBuiltin", %"class.net::(anonymous namespace)::CertVerifyProcBuiltin"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.net::SystemTrustStore"*, %"class.net::SystemTrustStore"** %3, align 8
  store %"class.net::SystemTrustStore"* null, %"class.net::SystemTrustStore"** %3, align 8
  %5 = icmp eq %"class.net::SystemTrustStore"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.net::SystemTrustStore"* %4 to void (%"class.net::SystemTrustStore"*)***
  %8 = load void (%"class.net::SystemTrustStore"*)**, void (%"class.net::SystemTrustStore"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.net::SystemTrustStore"*)*, void (%"class.net::SystemTrustStore"*)** %8, i64 1
  %10 = load void (%"class.net::SystemTrustStore"*)*, void (%"class.net::SystemTrustStore"*)** %9, align 8
  tail call void %10(%"class.net::SystemTrustStore"* nonnull %4) #12
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.net::(anonymous namespace)::CertVerifyProcBuiltin", %"class.net::(anonymous namespace)::CertVerifyProcBuiltin"* %0, i64 0, i32 1, i32 0
  %13 = load %"class.net::CertNetFetcher"*, %"class.net::CertNetFetcher"** %12, align 8
  %14 = icmp eq %"class.net::CertNetFetcher"* %13, null
  br i1 %14, label %27, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.net::CertNetFetcher", %"class.net::CertNetFetcher"* %13, i64 0, i32 1
  %17 = getelementptr inbounds %"class.base::RefCountedThreadSafe.15", %"class.base::RefCountedThreadSafe.15"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i32* %17, i32 1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %27

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe.15", %"class.base::RefCountedThreadSafe.15"* %16, i64 -2
  %22 = bitcast %"class.base::RefCountedThreadSafe.15"* %21 to %"class.net::CertNetFetcher"*
  %23 = bitcast %"class.base::RefCountedThreadSafe.15"* %21 to void (%"class.net::CertNetFetcher"*)***
  %24 = load void (%"class.net::CertNetFetcher"*)**, void (%"class.net::CertNetFetcher"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.net::CertNetFetcher"*)*, void (%"class.net::CertNetFetcher"*)** %24, i64 5
  %26 = load void (%"class.net::CertNetFetcher"*)*, void (%"class.net::CertNetFetcher"*)** %25, align 8
  tail call void %26(%"class.net::CertNetFetcher"* nonnull %22) #12
  br label %27

27:                                               ; preds = %11, %15, %20
  %28 = bitcast %"class.net::(anonymous namespace)::CertVerifyProcBuiltin"* %0 to %"class.net::CertVerifyProc"*
  tail call void @_ZN3net14CertVerifyProcD2Ev(%"class.net::CertVerifyProc"* %28) #12
  %29 = bitcast %"class.net::(anonymous namespace)::CertVerifyProcBuiltin"* %0 to i8*
  tail call void @_ZdlPv(i8* %29) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN3net12_GLOBAL__N_121CertVerifyProcBuiltin14VerifyInternalEPNS_15X509CertificateERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_SC_iPNS_6CRLSetERKNS4_6vectorI13scoped_refptrIS2_ENS8_ISH_EEEEPNS_16CertVerifyResultERKNS_16NetLogWithSourceE(%"class.net::(anonymous namespace)::CertVerifyProcBuiltin"* nocapture readonly, %"class.net::X509Certificate"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* nocapture readnone dereferenceable(24), i32, %"class.net::CRLSet"*, %"class.std::__1::vector.65"* nocapture readonly dereferenceable(24), %"class.net::CertVerifyResult"*, %"class.net::NetLogWithSource"* dereferenceable(24)) unnamed_addr #2 align 2 {
  %11 = alloca %"class.std::__1::vector.38", align 16
  %12 = alloca %"class.std::__1::unique_ptr.34", align 8
  %13 = alloca %"class.std::__1::vector.38", align 16
  %14 = alloca %"class.net::HashValue", align 4
  %15 = alloca %"class.logging::CheckError", align 8
  %16 = alloca %"class.logging::LogMessage", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.base::Value", align 8
  %20 = alloca %"class.std::__1::basic_string", align 8
  %21 = alloca %"class.base::Value", align 8
  %22 = alloca %"class.base::Value", align 8
  %23 = alloca %"class.std::__1::set.281", align 8
  %24 = alloca [1 x %"class.net::der::Input"], align 8
  %25 = alloca %"class.net::(anonymous namespace)::PathBuilderDelegateImpl", align 8
  %26 = alloca %"class.net::CertPathBuilder", align 8
  %27 = alloca %"class.logging::LogMessage", align 8
  %28 = alloca %"class.base::DictionaryValue", align 8
  %29 = alloca %"class.base::Value", align 8
  %30 = alloca %"struct.net::ParseCertificateOptions", align 1
  %31 = alloca %"class.std::__1::set.281", align 8
  %32 = alloca %"struct.net::ParseCertificateOptions", align 1
  %33 = alloca %"class.base::Value", align 8
  %34 = alloca %"class.net::CertErrors", align 8
  %35 = alloca %"class.base::Value", align 8
  %36 = alloca %"struct.net::ParseCertificateOptions", align 1
  %37 = alloca %"class.base::Time", align 8
  %38 = alloca i64, align 8
  %39 = alloca i64, align 8
  %40 = bitcast i64* %39 to %"struct.net::der::GeneralizedTime"*
  %41 = alloca %"class.net::CertErrors", align 8
  %42 = alloca %"class.net::CertIssuerSourceStatic", align 8
  %43 = alloca %"class.net::(anonymous namespace)::CertVerifyProcTrustStore", align 8
  %44 = alloca %"class.net::CertErrors", align 8
  %45 = alloca i8, align 1
  %46 = alloca %"class.std::__1::vector.262", align 8
  %47 = alloca %"struct.net::CertPathBuilder::Result", align 8
  %48 = alloca %"struct.net::CertPathBuilder::Result", align 8
  %49 = alloca %"class.std::__1::basic_string", align 8
  %50 = bitcast %"class.base::Time"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #12
  %51 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %37, i64 0, i32 0, i32 0
  %52 = tail call i64 @_ZN4base4Time3NowEv() #12
  store i64 %52, i64* %51, align 8
  %53 = bitcast i64* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53)
  %54 = tail call i64 @_ZN4base9TimeTicks3NowEv() #12
  %55 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %54, i64 60000000) #12
  %56 = extractvalue { i64, i1 } %55, 1
  %57 = extractvalue { i64, i1 } %55, 0
  %58 = select i1 %56, i64 9223372036854775807, i64 %57, !prof !2
  store i64 %58, i64* %38, align 8
  %59 = bitcast i64* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #12
  store i64 -6148914691236517206, i64* %39, align 8
  %60 = call zeroext i1 @_ZN3net3der27EncodeTimeAsGeneralizedTimeERKN4base4TimeEPNS0_15GeneralizedTimeE(%"class.base::Time"* nonnull dereferenceable(8) %37, %"struct.net::der::GeneralizedTime"* nonnull %40) #12
  br i1 %60, label %65, label %61

61:                                               ; preds = %10
  %62 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 3
  %63 = load i32, i32* %62, align 8
  %64 = or i32 %63, 4
  store i32 %64, i32* %62, align 8
  br label %1111

65:                                               ; preds = %10
  %66 = bitcast %"class.net::CertVerifyResult"* %8 to %"class.base::SupportsUserData"*
  %67 = load i64, i64* %51, align 8
  %68 = load i8*, i8** @_ZN3net12_GLOBAL__N_119kResultDebugDataKeyE, align 8
  %69 = call i8* @_Znwm(i64 24) #13
  %70 = bitcast i8* %69 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net36CertVerifyProcBuiltinResultDebugDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %70, align 8
  %71 = getelementptr inbounds i8, i8* %69, i64 8
  %72 = bitcast i8* %71 to i64*
  store i64 %67, i64* %72, align 8
  %73 = getelementptr inbounds i8, i8* %69, i64 16
  %74 = bitcast i8* %73 to i64*
  %75 = load i64, i64* %39, align 8
  store i64 %75, i64* %74, align 8
  %76 = bitcast i8* %69 to %"class.base::SupportsUserData::Data"*
  call void @_ZN4base16SupportsUserData11SetUserDataEPKvNSt3__110unique_ptrINS0_4DataENS3_14default_deleteIS5_EEEE(%"class.base::SupportsUserData"* %66, i8* %68, %"class.base::SupportsUserData::Data"* nonnull %76) #12
  %77 = bitcast %"class.net::CertErrors"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #12
  %78 = bitcast %"class.net::CertErrors"* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 -86, i64 24, i1 false)
  call void @_ZN3net10CertErrorsC1Ev(%"class.net::CertErrors"* nonnull %41) #12
  %79 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %80 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %79, align 8
  %81 = icmp eq %struct.crypto_buffer_st* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %65
  %83 = call i32 @CRYPTO_BUFFER_up_ref(%struct.crypto_buffer_st* nonnull %80) #12
  br label %84

84:                                               ; preds = %82, %65
  %85 = getelementptr inbounds %"struct.net::ParseCertificateOptions", %"struct.net::ParseCertificateOptions"* %36, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %85) #12
  %86 = call i8 @_ZN3net9x509_util30DefaultParseCertificateOptionsEv() #12
  store i8 %86, i8* %85, align 1
  %87 = call %"class.net::ParsedCertificate"* @_ZN3net17ParsedCertificate6CreateENSt3__110unique_ptrI16crypto_buffer_stN4bssl8internal7DeleterIS3_EEEERKNS_23ParseCertificateOptionsEPNS_10CertErrorsE(%struct.crypto_buffer_st* %80, %"struct.net::ParseCertificateOptions"* nonnull dereferenceable(1) %36, %"class.net::CertErrors"* nonnull %41) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %85) #12
  %88 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %9, i64 0, i32 1
  %89 = load %"class.net::NetLog"*, %"class.net::NetLog"** %88, align 8
  %90 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %89, i64 0, i32 3
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %97, label %93, !prof !3

93:                                               ; preds = %84
  %94 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %9, i64 0, i32 0
  %95 = bitcast %"class.base::Value"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %95) #12
  %96 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %79, align 8, !noalias !4
  call fastcc void @_ZN3net12_GLOBAL__N_116NetLogCertParamsEPK16crypto_buffer_stRKNS_10CertErrorsE(%"class.base::Value"* nonnull sret %35, %struct.crypto_buffer_st* %96, %"class.net::CertErrors"* nonnull dereferenceable(24) %41) #12
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %89, i32 380, %"struct.net::NetLogSource"* dereferenceable(16) %94, i32 0, %"class.base::Value"* nonnull dereferenceable(32) %35) #12
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %35) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %95) #12
  br label %97

97:                                               ; preds = %84, %93
  %98 = icmp eq %"class.net::ParsedCertificate"* %87, null
  br i1 %98, label %99, label %103

99:                                               ; preds = %97
  %100 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 3
  %101 = load i32, i32* %100, align 8
  %102 = or i32 %101, 128
  store i32 %102, i32* %100, align 8
  call void @_ZN3net10CertErrorsD1Ev(%"class.net::CertErrors"* nonnull %41) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #12
  br label %1111

103:                                              ; preds = %97
  call void @_ZN3net10CertErrorsD1Ev(%"class.net::CertErrors"* nonnull %41) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #12
  %104 = bitcast %"class.net::CertIssuerSourceStatic"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %104) #12
  %105 = getelementptr inbounds %"class.net::CertIssuerSourceStatic", %"class.net::CertIssuerSourceStatic"* %42, i64 0, i32 1, i32 0, i32 3, i32 0, i32 0
  %106 = bitcast %"class.net::CertIssuerSourceStatic"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %106, i8 -86, i64 40, i1 false)
  store float 0xFFFFFFFFE0000000, float* %105, align 8
  %107 = getelementptr inbounds %"class.net::CertIssuerSourceStatic", %"class.net::CertIssuerSourceStatic"* %42, i64 0, i32 1, i32 0, i32 4, i64 0
  %108 = bitcast i8* %107 to i32*
  store i32 -1431655766, i32* %108, align 4
  call void @_ZN3net22CertIssuerSourceStaticC1Ev(%"class.net::CertIssuerSourceStatic"* nonnull %42) #12
  %109 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %1, i64 0, i32 7, i32 0, i32 0
  %110 = load %"class.std::__1::unique_ptr.34"*, %"class.std::__1::unique_ptr.34"** %109, align 8
  %111 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %1, i64 0, i32 7, i32 0, i32 1
  %112 = load %"class.std::__1::unique_ptr.34"*, %"class.std::__1::unique_ptr.34"** %111, align 8
  %113 = icmp eq %"class.std::__1::unique_ptr.34"* %110, %112
  br i1 %113, label %141, label %114

114:                                              ; preds = %103
  %115 = bitcast %"class.net::CertErrors"* %34 to i8*
  %116 = getelementptr inbounds %"struct.net::ParseCertificateOptions", %"struct.net::ParseCertificateOptions"* %32, i64 0, i32 0
  %117 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %9, i64 0, i32 0
  %118 = bitcast %"class.base::Value"* %33 to i8*
  br label %119

119:                                              ; preds = %138, %114
  %120 = phi %"class.std::__1::unique_ptr.34"* [ %110, %114 ], [ %139, %138 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %115, i8 -86, i64 24, i1 false) #12
  call void @_ZN3net10CertErrorsC1Ev(%"class.net::CertErrors"* nonnull %34) #12
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %120, i64 0, i32 0, i32 0, i32 0
  %122 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %121, align 8
  %123 = icmp eq %struct.crypto_buffer_st* %122, null
  br i1 %123, label %126, label %124

124:                                              ; preds = %119
  %125 = call i32 @CRYPTO_BUFFER_up_ref(%struct.crypto_buffer_st* nonnull %122) #12
  br label %126

126:                                              ; preds = %124, %119
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %116) #12
  %127 = call i8 @_ZN3net9x509_util30DefaultParseCertificateOptionsEv() #12
  store i8 %127, i8* %116, align 1
  %128 = call %"class.net::ParsedCertificate"* @_ZN3net17ParsedCertificate6CreateENSt3__110unique_ptrI16crypto_buffer_stN4bssl8internal7DeleterIS3_EEEERKNS_23ParseCertificateOptionsEPNS_10CertErrorsE(%struct.crypto_buffer_st* %122, %"struct.net::ParseCertificateOptions"* nonnull dereferenceable(1) %32, %"class.net::CertErrors"* nonnull %34) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %116) #12
  %129 = load %"class.net::NetLog"*, %"class.net::NetLog"** %88, align 8
  %130 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %129, i64 0, i32 3
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %135, label %133, !prof !3

133:                                              ; preds = %126
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %118) #12
  %134 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %121, align 8, !noalias !7
  call fastcc void @_ZN3net12_GLOBAL__N_116NetLogCertParamsEPK16crypto_buffer_stRKNS_10CertErrorsE(%"class.base::Value"* nonnull sret %33, %struct.crypto_buffer_st* %134, %"class.net::CertErrors"* nonnull dereferenceable(24) %34) #12
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %129, i32 381, %"struct.net::NetLogSource"* dereferenceable(16) %117, i32 0, %"class.base::Value"* nonnull dereferenceable(32) %33) #12
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %33) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %118) #12
  br label %135

135:                                              ; preds = %133, %126
  %136 = icmp eq %"class.net::ParsedCertificate"* %128, null
  br i1 %136, label %138, label %137

137:                                              ; preds = %135
  call void @_ZN3net22CertIssuerSourceStatic7AddCertE13scoped_refptrINS_17ParsedCertificateEE(%"class.net::CertIssuerSourceStatic"* nonnull %42, %"class.net::ParsedCertificate"* nonnull %128) #12
  br label %138

138:                                              ; preds = %137, %135
  call void @_ZN3net10CertErrorsD1Ev(%"class.net::CertErrors"* nonnull %34) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #12
  %139 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %120, i64 1
  %140 = icmp eq %"class.std::__1::unique_ptr.34"* %139, %112
  br i1 %140, label %141, label %119

141:                                              ; preds = %138, %103
  %142 = bitcast %"class.net::(anonymous namespace)::CertVerifyProcTrustStore"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %142) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %142, i8* align 8 bitcast (%"class.net::(anonymous namespace)::CertVerifyProcTrustStore"* @__const._ZN3net12_GLOBAL__N_121CertVerifyProcBuiltin14VerifyInternalEPNS_15X509CertificateERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_SC_iPNS_6CRLSetERKNS4_6vectorI13scoped_refptrIS2_ENS8_ISH_EEEEPNS_16CertVerifyResultERKNS_16NetLogWithSourceE.trust_store to i8*), i64 88, i1 false)
  %143 = getelementptr inbounds %"class.net::(anonymous namespace)::CertVerifyProcBuiltin", %"class.net::(anonymous namespace)::CertVerifyProcBuiltin"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %144 = bitcast %"class.net::SystemTrustStore"** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = getelementptr inbounds %"class.net::(anonymous namespace)::CertVerifyProcTrustStore", %"class.net::(anonymous namespace)::CertVerifyProcTrustStore"* %43, i64 0, i32 0
  %147 = bitcast %"class.net::(anonymous namespace)::CertVerifyProcTrustStore"* %43 to i64*
  store i64 %145, i64* %147, align 8
  %148 = getelementptr inbounds %"class.net::(anonymous namespace)::CertVerifyProcTrustStore", %"class.net::(anonymous namespace)::CertVerifyProcTrustStore"* %43, i64 0, i32 1
  call void @_ZN3net18TrustStoreInMemoryC1Ev(%"class.net::TrustStoreInMemory"* %148) #12
  %149 = getelementptr inbounds %"class.net::(anonymous namespace)::CertVerifyProcTrustStore", %"class.net::(anonymous namespace)::CertVerifyProcTrustStore"* %43, i64 0, i32 2
  call void @_ZN3net20TrustStoreCollectionC1Ev(%"class.net::TrustStoreCollection"* %149) #12
  %150 = getelementptr inbounds %"class.net::TrustStoreInMemory", %"class.net::TrustStoreInMemory"* %148, i64 0, i32 0
  call void @_ZN3net20TrustStoreCollection13AddTrustStoreEPNS_10TrustStoreE(%"class.net::TrustStoreCollection"* %149, %"class.net::TrustStore"* %150) #12
  %151 = load %"class.net::SystemTrustStore"*, %"class.net::SystemTrustStore"** %146, align 8
  %152 = bitcast %"class.net::SystemTrustStore"* %151 to %"class.net::TrustStore"* (%"class.net::SystemTrustStore"*)***
  %153 = load %"class.net::TrustStore"* (%"class.net::SystemTrustStore"*)**, %"class.net::TrustStore"* (%"class.net::SystemTrustStore"*)*** %152, align 8
  %154 = getelementptr inbounds %"class.net::TrustStore"* (%"class.net::SystemTrustStore"*)*, %"class.net::TrustStore"* (%"class.net::SystemTrustStore"*)** %153, i64 2
  %155 = load %"class.net::TrustStore"* (%"class.net::SystemTrustStore"*)*, %"class.net::TrustStore"* (%"class.net::SystemTrustStore"*)** %154, align 8
  %156 = call %"class.net::TrustStore"* %155(%"class.net::SystemTrustStore"* %151) #12
  call void @_ZN3net20TrustStoreCollection13AddTrustStoreEPNS_10TrustStoreE(%"class.net::TrustStoreCollection"* %149, %"class.net::TrustStore"* %156) #12
  %157 = call zeroext i1 @_ZN3net13TestRootCerts11HasInstanceEv() #12
  br i1 %157, label %158, label %161

158:                                              ; preds = %141
  %159 = call %"class.net::TestRootCerts"* @_ZN3net13TestRootCerts11GetInstanceEv() #12
  %160 = getelementptr inbounds %"class.net::TestRootCerts", %"class.net::TestRootCerts"* %159, i64 0, i32 0, i32 0
  call void @_ZN3net20TrustStoreCollection13AddTrustStoreEPNS_10TrustStoreE(%"class.net::TrustStoreCollection"* %149, %"class.net::TrustStore"* %160) #12
  br label %161

161:                                              ; preds = %141, %158
  %162 = getelementptr inbounds %"class.std::__1::vector.65", %"class.std::__1::vector.65"* %7, i64 0, i32 0, i32 0
  %163 = load %class.scoped_refptr.67*, %class.scoped_refptr.67** %162, align 8
  %164 = getelementptr inbounds %"class.std::__1::vector.65", %"class.std::__1::vector.65"* %7, i64 0, i32 0, i32 1
  %165 = load %class.scoped_refptr.67*, %class.scoped_refptr.67** %164, align 8
  %166 = icmp eq %class.scoped_refptr.67* %163, %165
  br i1 %166, label %173, label %167

167:                                              ; preds = %161
  %168 = bitcast %"class.net::CertErrors"* %44 to i8*
  %169 = getelementptr inbounds %"struct.net::ParseCertificateOptions", %"struct.net::ParseCertificateOptions"* %30, i64 0, i32 0
  %170 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %9, i64 0, i32 0
  %171 = bitcast %"class.base::Value"* %29 to i8*
  %172 = bitcast %"class.net::CertErrors"* %44 to i8*
  br label %208

173:                                              ; preds = %242, %161
  %174 = call %"class.net::EVRootCAMetadata"* @_ZN3net16EVRootCAMetadata11GetInstanceEv() #12
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %45) #12
  store i8 0, i8* %45, align 1
  %175 = bitcast %"class.std::__1::vector.262"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %175) #12
  %176 = getelementptr inbounds %"class.std::__1::vector.262", %"class.std::__1::vector.262"* %46, i64 0, i32 0, i32 0
  %177 = getelementptr inbounds %"class.std::__1::vector.262", %"class.std::__1::vector.262"* %46, i64 0, i32 0, i32 1
  %178 = getelementptr inbounds %"class.std::__1::vector.262", %"class.std::__1::vector.262"* %46, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %175, i8 0, i64 24, i1 false) #12
  %179 = bitcast %"class.std::__1::set.281"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %179) #12
  %180 = getelementptr inbounds %"class.std::__1::set.281", %"class.std::__1::set.281"* %31, i64 0, i32 0, i32 0
  %181 = getelementptr inbounds %"class.std::__1::set.281", %"class.std::__1::set.281"* %31, i64 0, i32 0, i32 2, i32 0, i32 0
  %182 = getelementptr inbounds %"class.std::__1::set.281", %"class.std::__1::set.281"* %31, i64 0, i32 0, i32 1, i32 0, i32 0
  %183 = getelementptr inbounds %"class.std::__1::set.281", %"class.std::__1::set.281"* %31, i64 0, i32 0
  %184 = bitcast %"class.std::__1::__tree_end_node"* %182 to %"class.std::__1::__tree_node"**
  store i64 0, i64* %181, align 8
  store %"class.std::__1::__tree_end_node"* %182, %"class.std::__1::__tree_end_node"** %180, align 8
  %185 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %182, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %185, align 8
  %186 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %87, i64 0, i32 25
  %187 = load i8, i8* %186, align 8, !range !10
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %203, label %189

189:                                              ; preds = %173
  %190 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %87, i64 0, i32 26, i32 0, i32 0
  %191 = load %"class.net::der::Input"*, %"class.net::der::Input"** %190, align 8
  %192 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %87, i64 0, i32 26, i32 0, i32 1
  %193 = load %"class.net::der::Input"*, %"class.net::der::Input"** %192, align 8
  %194 = icmp eq %"class.net::der::Input"* %191, %193
  br i1 %194, label %203, label %195

195:                                              ; preds = %189, %200
  %196 = phi %"class.net::der::Input"* [ %201, %200 ], [ %191, %189 ]
  %197 = call zeroext i1 @_ZNK3net16EVRootCAMetadata23IsEVPolicyOIDGivenBytesERKNS_3der5InputE(%"class.net::EVRootCAMetadata"* %174, %"class.net::der::Input"* dereferenceable(16) %196) #12
  br i1 %197, label %198, label %200

198:                                              ; preds = %195
  %199 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.282"* nonnull %183, %"class.net::der::Input"* dereferenceable(16) %196, %"class.net::der::Input"* dereferenceable(16) %196) #12
  br label %200

200:                                              ; preds = %198, %195
  %201 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %196, i64 1
  %202 = icmp eq %"class.net::der::Input"* %201, %193
  br i1 %202, label %204, label %195

203:                                              ; preds = %173, %189
  call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.282"* nonnull %183, %"class.std::__1::__tree_node"* null) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %179) #12
  br label %304

204:                                              ; preds = %200
  %205 = load i64, i64* %181, align 8
  %206 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %184, align 8
  %207 = icmp eq i64 %205, 0
  call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.282"* nonnull %183, %"class.std::__1::__tree_node"* %206) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %179) #12
  br i1 %207, label %304, label %245

208:                                              ; preds = %167, %242
  %209 = phi %class.scoped_refptr.67* [ %163, %167 ], [ %243, %242 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %168) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %172, i8 -86, i64 24, i1 false)
  call void @_ZN3net10CertErrorsC1Ev(%"class.net::CertErrors"* nonnull %44) #12
  %210 = getelementptr inbounds %class.scoped_refptr.67, %class.scoped_refptr.67* %209, i64 0, i32 0
  %211 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %210, align 8
  %212 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %211, i64 0, i32 6, i32 0, i32 0, i32 0
  %213 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %212, align 8
  %214 = icmp eq %struct.crypto_buffer_st* %213, null
  br i1 %214, label %217, label %215

215:                                              ; preds = %208
  %216 = call i32 @CRYPTO_BUFFER_up_ref(%struct.crypto_buffer_st* nonnull %213) #12
  br label %217

217:                                              ; preds = %208, %215
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %169) #12
  %218 = call i8 @_ZN3net9x509_util30DefaultParseCertificateOptionsEv() #12
  store i8 %218, i8* %169, align 1
  %219 = call %"class.net::ParsedCertificate"* @_ZN3net17ParsedCertificate6CreateENSt3__110unique_ptrI16crypto_buffer_stN4bssl8internal7DeleterIS3_EEEERKNS_23ParseCertificateOptionsEPNS_10CertErrorsE(%struct.crypto_buffer_st* %213, %"struct.net::ParseCertificateOptions"* nonnull dereferenceable(1) %30, %"class.net::CertErrors"* nonnull %44) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %169) #12
  %220 = ptrtoint %"class.net::ParsedCertificate"* %219 to i64
  %221 = icmp eq %"class.net::ParsedCertificate"* %219, null
  br i1 %221, label %223, label %222

222:                                              ; preds = %217
  call void @_ZN3net18TrustStoreInMemory14AddTrustAnchorE13scoped_refptrINS_17ParsedCertificateEE(%"class.net::TrustStoreInMemory"* %148, %"class.net::ParsedCertificate"* nonnull %219) #12
  br label %223

223:                                              ; preds = %217, %222
  %224 = phi i64 [ 0, %222 ], [ %220, %217 ]
  %225 = load %"class.net::NetLog"*, %"class.net::NetLog"** %88, align 8
  %226 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %225, i64 0, i32 3
  %227 = load atomic i32, i32* %226 monotonic, align 4
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %233, label %229, !prof !3

229:                                              ; preds = %223
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %171) #12
  %230 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %210, align 8, !noalias !11
  %231 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %230, i64 0, i32 6, i32 0, i32 0, i32 0
  %232 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %231, align 8, !noalias !11
  call fastcc void @_ZN3net12_GLOBAL__N_116NetLogCertParamsEPK16crypto_buffer_stRKNS_10CertErrorsE(%"class.base::Value"* nonnull sret %29, %struct.crypto_buffer_st* %232, %"class.net::CertErrors"* nonnull dereferenceable(24) %44) #12
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %225, i32 382, %"struct.net::NetLogSource"* dereferenceable(16) %170, i32 0, %"class.base::Value"* nonnull dereferenceable(32) %29) #12
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %29) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %171) #12
  br label %233

233:                                              ; preds = %223, %229
  %234 = inttoptr i64 %224 to %"class.net::ParsedCertificate"*
  %235 = icmp eq i64 %224, 0
  br i1 %235, label %242, label %236

236:                                              ; preds = %233
  %237 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %234, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %238 = atomicrmw sub i32* %237, i32 1 acq_rel
  %239 = icmp eq i32 %238, 1
  br i1 %239, label %240, label %242

240:                                              ; preds = %236
  call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %234) #12
  %241 = inttoptr i64 %224 to i8*
  call void @_ZdlPv(i8* %241) #13
  br label %242

242:                                              ; preds = %233, %236, %240
  call void @_ZN3net10CertErrorsD1Ev(%"class.net::CertErrors"* nonnull %44) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %168) #12
  %243 = getelementptr inbounds %class.scoped_refptr.67, %class.scoped_refptr.67* %209, i64 1
  %244 = icmp eq %class.scoped_refptr.67* %243, %165
  br i1 %244, label %173, label %208

245:                                              ; preds = %204
  %246 = load %"struct.net::(anonymous namespace)::BuildPathAttempt"*, %"struct.net::(anonymous namespace)::BuildPathAttempt"** %177, align 8
  %247 = load %"struct.net::(anonymous namespace)::BuildPathAttempt"*, %"struct.net::(anonymous namespace)::BuildPathAttempt"** %178, align 8
  %248 = icmp ult %"struct.net::(anonymous namespace)::BuildPathAttempt"* %246, %247
  %249 = ptrtoint %"struct.net::(anonymous namespace)::BuildPathAttempt"* %247 to i64
  br i1 %248, label %250, label %256

250:                                              ; preds = %245
  %251 = getelementptr inbounds %"struct.net::(anonymous namespace)::BuildPathAttempt", %"struct.net::(anonymous namespace)::BuildPathAttempt"* %246, i64 0, i32 0
  store i32 0, i32* %251, align 4
  %252 = getelementptr inbounds %"struct.net::(anonymous namespace)::BuildPathAttempt", %"struct.net::(anonymous namespace)::BuildPathAttempt"* %246, i64 0, i32 1
  store i32 0, i32* %252, align 4
  %253 = getelementptr inbounds %"struct.net::(anonymous namespace)::BuildPathAttempt", %"struct.net::(anonymous namespace)::BuildPathAttempt"* %246, i64 1
  %254 = ptrtoint %"struct.net::(anonymous namespace)::BuildPathAttempt"* %253 to i64
  %255 = bitcast %"struct.net::(anonymous namespace)::BuildPathAttempt"** %177 to i64*
  store i64 %254, i64* %255, align 8
  br label %304

256:                                              ; preds = %245
  %257 = ptrtoint %"struct.net::(anonymous namespace)::BuildPathAttempt"* %246 to i64
  %258 = bitcast %"struct.net::(anonymous namespace)::BuildPathAttempt"** %177 to i64*
  %259 = bitcast %"class.std::__1::vector.262"* %46 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = sub i64 %257, %260
  %262 = ashr exact i64 %261, 3
  %263 = add nsw i64 %262, 1
  %264 = icmp ugt i64 %263, 2305843009213693951
  br i1 %264, label %265, label %267

265:                                              ; preds = %256
  %266 = bitcast %"class.std::__1::vector.262"* %46 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %266) #14
  unreachable

267:                                              ; preds = %256
  %268 = bitcast %"struct.net::(anonymous namespace)::BuildPathAttempt"** %178 to i64*
  %269 = sub i64 %249, %260
  %270 = ashr exact i64 %269, 3
  %271 = icmp ult i64 %270, 1152921504606846975
  br i1 %271, label %272, label %280

272:                                              ; preds = %267
  %273 = ashr exact i64 %269, 2
  %274 = icmp ult i64 %273, %263
  %275 = select i1 %274, i64 %263, i64 %273
  %276 = icmp eq i64 %275, 0
  br i1 %276, label %285, label %277

277:                                              ; preds = %272
  %278 = icmp ugt i64 %275, 2305843009213693951
  br i1 %278, label %279, label %280

279:                                              ; preds = %277
  call void @abort() #14
  unreachable

280:                                              ; preds = %277, %267
  %281 = phi i64 [ %275, %277 ], [ 2305843009213693951, %267 ]
  %282 = shl i64 %281, 3
  %283 = call i8* @_Znwm(i64 %282) #13
  %284 = bitcast i8* %283 to %"struct.net::(anonymous namespace)::BuildPathAttempt"*
  br label %285

285:                                              ; preds = %280, %272
  %286 = phi i64 [ %281, %280 ], [ 0, %272 ]
  %287 = phi i8* [ %283, %280 ], [ null, %272 ]
  %288 = phi %"struct.net::(anonymous namespace)::BuildPathAttempt"* [ %284, %280 ], [ null, %272 ]
  %289 = getelementptr inbounds %"struct.net::(anonymous namespace)::BuildPathAttempt", %"struct.net::(anonymous namespace)::BuildPathAttempt"* %288, i64 %262
  %290 = getelementptr inbounds %"struct.net::(anonymous namespace)::BuildPathAttempt", %"struct.net::(anonymous namespace)::BuildPathAttempt"* %288, i64 %286
  %291 = ptrtoint %"struct.net::(anonymous namespace)::BuildPathAttempt"* %290 to i64
  %292 = getelementptr inbounds %"struct.net::(anonymous namespace)::BuildPathAttempt", %"struct.net::(anonymous namespace)::BuildPathAttempt"* %289, i64 0, i32 0
  store i32 0, i32* %292, align 4
  %293 = getelementptr inbounds %"struct.net::(anonymous namespace)::BuildPathAttempt", %"struct.net::(anonymous namespace)::BuildPathAttempt"* %288, i64 %262, i32 1
  store i32 0, i32* %293, align 4
  %294 = getelementptr inbounds %"struct.net::(anonymous namespace)::BuildPathAttempt", %"struct.net::(anonymous namespace)::BuildPathAttempt"* %289, i64 1
  %295 = ptrtoint %"struct.net::(anonymous namespace)::BuildPathAttempt"* %294 to i64
  %296 = ptrtoint %"struct.net::(anonymous namespace)::BuildPathAttempt"* %288 to i64
  %297 = icmp sgt i64 %261, 0
  br i1 %297, label %298, label %300

298:                                              ; preds = %285
  %299 = inttoptr i64 %260 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %287, i8* align 4 %299, i64 %261, i1 false) #12
  br label %300

300:                                              ; preds = %298, %285
  store i64 %296, i64* %259, align 8
  store i64 %295, i64* %258, align 8
  store i64 %291, i64* %268, align 8
  %301 = icmp eq i64 %260, 0
  br i1 %301, label %304, label %302

302:                                              ; preds = %300
  %303 = inttoptr i64 %260 to i8*
  call void @_ZdlPv(i8* %303) #13
  br label %304

304:                                              ; preds = %204, %302, %300, %250, %203
  %305 = load %"struct.net::(anonymous namespace)::BuildPathAttempt"*, %"struct.net::(anonymous namespace)::BuildPathAttempt"** %177, align 8
  %306 = load %"struct.net::(anonymous namespace)::BuildPathAttempt"*, %"struct.net::(anonymous namespace)::BuildPathAttempt"** %178, align 8
  %307 = icmp ult %"struct.net::(anonymous namespace)::BuildPathAttempt"* %305, %306
  %308 = ptrtoint %"struct.net::(anonymous namespace)::BuildPathAttempt"* %306 to i64
  br i1 %307, label %309, label %316

309:                                              ; preds = %304
  %310 = getelementptr inbounds %"struct.net::(anonymous namespace)::BuildPathAttempt", %"struct.net::(anonymous namespace)::BuildPathAttempt"* %305, i64 0, i32 0
  store i32 1, i32* %310, align 4
  %311 = getelementptr inbounds %"struct.net::(anonymous namespace)::BuildPathAttempt", %"struct.net::(anonymous namespace)::BuildPathAttempt"* %305, i64 0, i32 1
  store i32 0, i32* %311, align 4
  %312 = getelementptr inbounds %"struct.net::(anonymous namespace)::BuildPathAttempt", %"struct.net::(anonymous namespace)::BuildPathAttempt"* %305, i64 1
  %313 = ptrtoint %"struct.net::(anonymous namespace)::BuildPathAttempt"* %312 to i64
  %314 = bitcast %"struct.net::(anonymous namespace)::BuildPathAttempt"** %177 to i64*
  store i64 %313, i64* %314, align 8
  %315 = bitcast %"class.std::__1::vector.262"* %46 to i64*
  br label %364

316:                                              ; preds = %304
  %317 = ptrtoint %"struct.net::(anonymous namespace)::BuildPathAttempt"* %305 to i64
  %318 = bitcast %"struct.net::(anonymous namespace)::BuildPathAttempt"** %177 to i64*
  %319 = bitcast %"class.std::__1::vector.262"* %46 to i64*
  %320 = load i64, i64* %319, align 8
  %321 = sub i64 %317, %320
  %322 = ashr exact i64 %321, 3
  %323 = add nsw i64 %322, 1
  %324 = icmp ugt i64 %323, 2305843009213693951
  br i1 %324, label %325, label %327

325:                                              ; preds = %316
  %326 = bitcast %"class.std::__1::vector.262"* %46 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %326) #14
  unreachable

327:                                              ; preds = %316
  %328 = bitcast %"struct.net::(anonymous namespace)::BuildPathAttempt"** %178 to i64*
  %329 = sub i64 %308, %320
  %330 = ashr exact i64 %329, 3
  %331 = icmp ult i64 %330, 1152921504606846975
  br i1 %331, label %332, label %340

332:                                              ; preds = %327
  %333 = ashr exact i64 %329, 2
  %334 = icmp ult i64 %333, %323
  %335 = select i1 %334, i64 %323, i64 %333
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %345, label %337

337:                                              ; preds = %332
  %338 = icmp ugt i64 %335, 2305843009213693951
  br i1 %338, label %339, label %340

339:                                              ; preds = %337
  call void @abort() #14
  unreachable

340:                                              ; preds = %337, %327
  %341 = phi i64 [ %335, %337 ], [ 2305843009213693951, %327 ]
  %342 = shl i64 %341, 3
  %343 = call i8* @_Znwm(i64 %342) #13
  %344 = bitcast i8* %343 to %"struct.net::(anonymous namespace)::BuildPathAttempt"*
  br label %345

345:                                              ; preds = %340, %332
  %346 = phi i64 [ %341, %340 ], [ 0, %332 ]
  %347 = phi i8* [ %343, %340 ], [ null, %332 ]
  %348 = phi %"struct.net::(anonymous namespace)::BuildPathAttempt"* [ %344, %340 ], [ null, %332 ]
  %349 = getelementptr inbounds %"struct.net::(anonymous namespace)::BuildPathAttempt", %"struct.net::(anonymous namespace)::BuildPathAttempt"* %348, i64 %322
  %350 = getelementptr inbounds %"struct.net::(anonymous namespace)::BuildPathAttempt", %"struct.net::(anonymous namespace)::BuildPathAttempt"* %348, i64 %346
  %351 = ptrtoint %"struct.net::(anonymous namespace)::BuildPathAttempt"* %350 to i64
  %352 = getelementptr inbounds %"struct.net::(anonymous namespace)::BuildPathAttempt", %"struct.net::(anonymous namespace)::BuildPathAttempt"* %349, i64 0, i32 0
  store i32 1, i32* %352, align 4
  %353 = getelementptr inbounds %"struct.net::(anonymous namespace)::BuildPathAttempt", %"struct.net::(anonymous namespace)::BuildPathAttempt"* %348, i64 %322, i32 1
  store i32 0, i32* %353, align 4
  %354 = getelementptr inbounds %"struct.net::(anonymous namespace)::BuildPathAttempt", %"struct.net::(anonymous namespace)::BuildPathAttempt"* %349, i64 1
  %355 = ptrtoint %"struct.net::(anonymous namespace)::BuildPathAttempt"* %354 to i64
  %356 = ptrtoint %"struct.net::(anonymous namespace)::BuildPathAttempt"* %348 to i64
  %357 = icmp sgt i64 %321, 0
  br i1 %357, label %358, label %360

358:                                              ; preds = %345
  %359 = inttoptr i64 %320 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %347, i8* align 4 %359, i64 %321, i1 false) #12
  br label %360

360:                                              ; preds = %358, %345
  store i64 %356, i64* %319, align 8
  store i64 %355, i64* %318, align 8
  store i64 %351, i64* %328, align 8
  %361 = icmp eq i64 %320, 0
  br i1 %361, label %364, label %362

362:                                              ; preds = %360
  %363 = inttoptr i64 %320 to i8*
  call void @_ZdlPv(i8* %363) #13
  br label %364

364:                                              ; preds = %309, %360, %362
  %365 = phi i64* [ %315, %309 ], [ %319, %360 ], [ %319, %362 ]
  %366 = phi i64* [ %314, %309 ], [ %318, %360 ], [ %318, %362 ]
  %367 = bitcast %"struct.net::CertPathBuilder::Result"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %367) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %367, i8 -86, i64 80, i1 false)
  call void @_ZN3net15CertPathBuilder6ResultC1Ev(%"struct.net::CertPathBuilder::Result"* nonnull %47) #12
  %368 = load i64, i64* %366, align 8
  %369 = load i64, i64* %365, align 8
  %370 = icmp eq i64 %368, %369
  br i1 %370, label %695, label %371

371:                                              ; preds = %364
  %372 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %9, i64 0, i32 0
  %373 = bitcast %"class.base::DictionaryValue"* %28 to i8*
  %374 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %28, i64 0, i32 0
  %375 = bitcast %"struct.net::CertPathBuilder::Result"* %48 to i8*
  %376 = getelementptr inbounds %"class.net::(anonymous namespace)::CertVerifyProcBuiltin", %"class.net::(anonymous namespace)::CertVerifyProcBuiltin"* %0, i64 0, i32 1, i32 0
  %377 = bitcast %"class.std::__1::set.281"* %23 to i8*
  %378 = getelementptr inbounds %"class.std::__1::set.281", %"class.std::__1::set.281"* %23, i64 0, i32 0, i32 0
  %379 = getelementptr inbounds %"class.std::__1::set.281", %"class.std::__1::set.281"* %23, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %380 = getelementptr inbounds %"class.std::__1::set.281", %"class.std::__1::set.281"* %23, i64 0, i32 0, i32 1, i32 0, i32 0
  %381 = bitcast %"class.std::__1::__tree_node_base"** %379 to i8*
  %382 = bitcast [1 x %"class.net::der::Input"]* %24 to i8*
  %383 = getelementptr inbounds [1 x %"class.net::der::Input"], [1 x %"class.net::der::Input"]* %24, i64 0, i64 0
  %384 = getelementptr inbounds [1 x %"class.net::der::Input"], [1 x %"class.net::der::Input"]* %24, i64 0, i64 0, i32 0
  %385 = getelementptr inbounds [1 x %"class.net::der::Input"], [1 x %"class.net::der::Input"]* %24, i64 0, i64 0, i32 1
  %386 = getelementptr inbounds %"class.std::__1::set.281", %"class.std::__1::set.281"* %23, i64 0, i32 0
  %387 = getelementptr inbounds [1 x %"class.net::der::Input"], [1 x %"class.net::der::Input"]* %24, i64 0, i64 1
  %388 = getelementptr inbounds %"class.std::__1::set.281", %"class.std::__1::set.281"* %23, i64 0, i32 0, i32 2, i32 0, i32 0
  %389 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %380, i64 0, i32 0
  %390 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %87, i64 0, i32 26, i32 0, i32 0
  %391 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %87, i64 0, i32 26, i32 0, i32 1
  %392 = bitcast %"class.net::(anonymous namespace)::PathBuilderDelegateImpl"* %25 to i8*
  %393 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %394 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %393, i64 0, i32 1, i32 0
  %395 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %396 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %397 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %398 = bitcast %"class.net::(anonymous namespace)::PathBuilderDelegateImpl"* %25 to %"class.net::SimplePathBuilderDelegate"*
  %399 = getelementptr inbounds %"class.net::(anonymous namespace)::PathBuilderDelegateImpl", %"class.net::(anonymous namespace)::PathBuilderDelegateImpl"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %400 = getelementptr inbounds %"class.net::(anonymous namespace)::PathBuilderDelegateImpl", %"class.net::(anonymous namespace)::PathBuilderDelegateImpl"* %25, i64 0, i32 1
  %401 = getelementptr inbounds %"class.net::(anonymous namespace)::PathBuilderDelegateImpl", %"class.net::(anonymous namespace)::PathBuilderDelegateImpl"* %25, i64 0, i32 2
  %402 = getelementptr inbounds %"class.net::(anonymous namespace)::PathBuilderDelegateImpl", %"class.net::(anonymous namespace)::PathBuilderDelegateImpl"* %25, i64 0, i32 3
  %403 = getelementptr inbounds %"class.net::(anonymous namespace)::PathBuilderDelegateImpl", %"class.net::(anonymous namespace)::PathBuilderDelegateImpl"* %25, i64 0, i32 4
  %404 = getelementptr inbounds %"class.net::(anonymous namespace)::PathBuilderDelegateImpl", %"class.net::(anonymous namespace)::PathBuilderDelegateImpl"* %25, i64 0, i32 5
  %405 = getelementptr inbounds %"class.net::(anonymous namespace)::PathBuilderDelegateImpl", %"class.net::(anonymous namespace)::PathBuilderDelegateImpl"* %25, i64 0, i32 6, i32 0
  %406 = getelementptr inbounds %"class.net::(anonymous namespace)::PathBuilderDelegateImpl", %"class.net::(anonymous namespace)::PathBuilderDelegateImpl"* %25, i64 0, i32 6, i32 1
  %407 = getelementptr inbounds %"class.net::(anonymous namespace)::PathBuilderDelegateImpl", %"class.net::(anonymous namespace)::PathBuilderDelegateImpl"* %25, i64 0, i32 7
  %408 = getelementptr inbounds %"class.net::(anonymous namespace)::PathBuilderDelegateImpl", %"class.net::(anonymous namespace)::PathBuilderDelegateImpl"* %25, i64 0, i32 8
  %409 = bitcast %"class.net::CertPathBuilder"* %26 to i8*
  %410 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %87, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %411 = getelementptr inbounds %"class.net::(anonymous namespace)::CertVerifyProcTrustStore", %"class.net::(anonymous namespace)::CertVerifyProcTrustStore"* %43, i64 0, i32 2, i32 0
  %412 = getelementptr inbounds %"class.net::(anonymous namespace)::PathBuilderDelegateImpl", %"class.net::(anonymous namespace)::PathBuilderDelegateImpl"* %25, i64 0, i32 0, i32 0
  %413 = getelementptr inbounds %"class.net::CertIssuerSourceStatic", %"class.net::CertIssuerSourceStatic"* %42, i64 0, i32 0
  %414 = bitcast %"class.logging::LogMessage"* %27 to i8*
  %415 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %27, i64 0, i32 2
  %416 = bitcast %"class.std::__1::basic_ostringstream"* %415 to %"class.std::__1::basic_ostream"*
  %417 = getelementptr inbounds %"class.net::(anonymous namespace)::PathBuilderDelegateImpl", %"class.net::(anonymous namespace)::PathBuilderDelegateImpl"* %25, i64 0, i32 0, i32 0, i32 0
  %418 = bitcast %"class.std::__1::__tree_end_node"* %380 to %"class.std::__1::__tree_node"**
  %419 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %47, i64 0, i32 2, i32 0, i32 0
  %420 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %47, i64 0, i32 2, i32 0, i32 1
  %421 = bitcast %"class.base::Value"* %21 to i8*
  %422 = bitcast %"class.base::Value"* %19 to i8*
  %423 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  %424 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %425 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %426 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %425, i64 0, i32 1, i32 0
  %427 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %428 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %429 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %430 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %431 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %430, i64 0, i32 1, i32 0
  %432 = bitcast %"class.base::Value"* %22 to i8*
  %433 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %47, i64 0, i32 3
  %434 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %47, i64 0, i32 4
  %435 = getelementptr inbounds %"struct.net::CertPathBuilder::Result", %"struct.net::CertPathBuilder::Result"* %47, i64 0, i32 5
  %436 = load i8*, i8** @_ZN3net11cert_errors24kUnableToCheckRevocationE, align 8
  %437 = load i8*, i8** @_ZN3net11cert_errors31kUnacceptableSignatureAlgorithmE, align 8
  %438 = bitcast %"struct.net::(anonymous namespace)::BuildPathAttempt"** %178 to i64*
  %439 = load i64, i64* %38, align 8
  br label %440

440:                                              ; preds = %371, %684
  %441 = phi i64 [ %369, %371 ], [ %687, %684 ]
  %442 = phi i64 [ %439, %371 ], [ %467, %684 ]
  %443 = phi i64 [ 0, %371 ], [ %685, %684 ]
  %444 = inttoptr i64 %441 to %"struct.net::(anonymous namespace)::BuildPathAttempt"*
  %445 = getelementptr inbounds %"struct.net::(anonymous namespace)::BuildPathAttempt", %"struct.net::(anonymous namespace)::BuildPathAttempt"* %444, i64 %443
  %446 = getelementptr inbounds %"struct.net::(anonymous namespace)::BuildPathAttempt", %"struct.net::(anonymous namespace)::BuildPathAttempt"* %445, i64 0, i32 0
  %447 = load i32, i32* %446, align 4
  %448 = load %"class.net::NetLog"*, %"class.net::NetLog"** %88, align 8
  %449 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %448, i64 0, i32 3
  %450 = load atomic i32, i32* %449 monotonic, align 4
  %451 = icmp eq i32 %450, 0
  br i1 %451, label %460, label %452, !prof !3

452:                                              ; preds = %440
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %373) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %373, i8 -86, i64 32, i1 false) #12, !alias.scope !14
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %28) #12
  %453 = icmp eq i32 %447, 0
  br i1 %453, label %454, label %456

454:                                              ; preds = %452
  %455 = call %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"* nonnull %374, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0), i64 13, i1 zeroext true) #12
  br label %456

456:                                              ; preds = %454, %452
  %457 = getelementptr inbounds %"struct.net::(anonymous namespace)::BuildPathAttempt", %"struct.net::(anonymous namespace)::BuildPathAttempt"* %444, i64 %443, i32 1
  %458 = load i32, i32* %457, align 4
  %459 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %374, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i64 0, i64 0), i64 13, i32 %458) #12
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %448, i32 383, %"struct.net::NetLogSource"* dereferenceable(16) %372, i32 1, %"class.base::Value"* nonnull dereferenceable(32) %374) #12
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %374) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %373) #12
  br label %460

460:                                              ; preds = %440, %456
  %461 = call i64 @_ZN4base9TimeTicks3NowEv() #12
  %462 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %461, i64 5000000) #12
  %463 = extractvalue { i64, i1 } %462, 1
  %464 = extractvalue { i64, i1 } %462, 0
  %465 = select i1 %463, i64 9223372036854775807, i64 %464, !prof !2
  %466 = icmp slt i64 %442, %465
  %467 = select i1 %466, i64 %465, i64 %442
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %375) #12
  %468 = load i32, i32* %446, align 4
  %469 = getelementptr inbounds %"struct.net::(anonymous namespace)::BuildPathAttempt", %"struct.net::(anonymous namespace)::BuildPathAttempt"* %444, i64 %443, i32 1
  %470 = load i32, i32* %469, align 4
  %471 = load %"class.net::CertNetFetcher"*, %"class.net::CertNetFetcher"** %376, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %377) #12, !noalias !17
  call void @llvm.memset.p0i8.i64(i8* align 8 %381, i8 0, i64 16, i1 false) #12, !noalias !17
  store %"class.std::__1::__tree_end_node"* %380, %"class.std::__1::__tree_end_node"** %378, align 8, !noalias !17
  %472 = icmp eq i32 %468, 0
  br i1 %472, label %473, label %488

473:                                              ; preds = %460
  store i64 0, i64* %388, align 8, !noalias !17
  store %"class.std::__1::__tree_end_node"* %380, %"class.std::__1::__tree_end_node"** %378, align 8, !noalias !17
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %389, align 8, !noalias !17
  %474 = load i8, i8* %186, align 8, !range !10
  %475 = icmp eq i8 %474, 0
  br i1 %475, label %492, label %476

476:                                              ; preds = %473
  %477 = load %"class.net::der::Input"*, %"class.net::der::Input"** %390, align 8
  %478 = load %"class.net::der::Input"*, %"class.net::der::Input"** %391, align 8
  %479 = icmp eq %"class.net::der::Input"* %477, %478
  br i1 %479, label %492, label %480

480:                                              ; preds = %476, %485
  %481 = phi %"class.net::der::Input"* [ %486, %485 ], [ %477, %476 ]
  %482 = call zeroext i1 @_ZNK3net16EVRootCAMetadata23IsEVPolicyOIDGivenBytesERKNS_3der5InputE(%"class.net::EVRootCAMetadata"* %174, %"class.net::der::Input"* dereferenceable(16) %481) #12
  br i1 %482, label %483, label %485

483:                                              ; preds = %480
  %484 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.282"* nonnull %386, %"class.net::der::Input"* dereferenceable(16) %481, %"class.net::der::Input"* dereferenceable(16) %481) #12
  br label %485

485:                                              ; preds = %483, %480
  %486 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %481, i64 1
  %487 = icmp eq %"class.net::der::Input"* %486, %478
  br i1 %487, label %492, label %480

488:                                              ; preds = %460
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %382) #12, !noalias !17
  %489 = call { i8*, i64 } @_ZN3net9AnyPolicyEv() #12
  %490 = extractvalue { i8*, i64 } %489, 0
  store i8* %490, i8** %384, align 8, !noalias !17
  %491 = extractvalue { i8*, i64 } %489, 1
  store i64 %491, i64* %385, align 8, !noalias !17
  call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE15__assign_uniqueIPKS3_EEvT_SC_(%"class.std::__1::__tree.282"* nonnull %386, %"class.net::der::Input"* nonnull %383, %"class.net::der::Input"* %387) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %382) #12, !noalias !17
  br label %492

492:                                              ; preds = %485, %488, %476, %473
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %392) #12, !noalias !17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %392, i8 -86, i64 88, i1 false) #12, !noalias !17
  %493 = load i8, i8* %394, align 1, !noalias !17
  %494 = icmp slt i8 %493, 0
  %495 = load i8*, i8** %395, align 8, !noalias !17
  %496 = select i1 %494, i8* %495, i8* %396
  %497 = load i64, i64* %397, align 8, !noalias !17
  %498 = zext i8 %493 to i64
  %499 = select i1 %494, i64 %497, i64 %498
  call void @_ZN3net25SimplePathBuilderDelegateC2EmNS0_12DigestPolicyE(%"class.net::SimplePathBuilderDelegate"* nonnull %398, i64 1024, i32 %470) #12, !noalias !17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3net12_GLOBAL__N_123PathBuilderDelegateImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %399, align 8, !noalias !17
  store %"class.net::CRLSet"* %6, %"class.net::CRLSet"** %400, align 8, !noalias !17
  store %"class.net::CertNetFetcher"* %471, %"class.net::CertNetFetcher"** %401, align 8, !noalias !17
  store i32 %468, i32* %402, align 8, !noalias !17
  store i32 %5, i32* %403, align 4, !noalias !17
  store %"class.net::(anonymous namespace)::CertVerifyProcTrustStore"* %43, %"class.net::(anonymous namespace)::CertVerifyProcTrustStore"** %404, align 8, !noalias !17
  store i8* %496, i8** %405, align 8, !noalias !17
  store i64 %499, i64* %406, align 8, !noalias !17
  store %"class.net::EVRootCAMetadata"* %174, %"class.net::EVRootCAMetadata"** %407, align 8, !noalias !17
  store i8* %45, i8** %408, align 8, !noalias !17
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %409) #12, !noalias !17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %409, i8 -86, i64 168, i1 false) #12, !noalias !17
  %500 = atomicrmw add i32* %410, i32 1 monotonic
  call void @_ZN3net15CertPathBuilderC1E13scoped_refptrINS_17ParsedCertificateEEPNS_10TrustStoreEPNS_23CertPathBuilderDelegateERKNS_3der15GeneralizedTimeENS_10KeyPurposeENS_21InitialExplicitPolicyERKNSt3__13setINS8_5InputENSE_4lessISG_EENSE_9allocatorISG_EEEENS_27InitialPolicyMappingInhibitENS_23InitialAnyPolicyInhibitE(%"class.net::CertPathBuilder"* nonnull %26, %"class.net::ParsedCertificate"* nonnull %87, %"class.net::TrustStore"* %411, %"class.net::CertPathBuilderDelegate"* nonnull %412, %"struct.net::der::GeneralizedTime"* nonnull dereferenceable(8) %40, i32 1, i32 0, %"class.std::__1::set.281"* nonnull dereferenceable(24) %23, i32 0, i32 0) #12, !noalias !17
  call void @_ZN3net15CertPathBuilder19AddCertIssuerSourceEPNS_16CertIssuerSourceE(%"class.net::CertPathBuilder"* nonnull %26, %"class.net::CertIssuerSource"* nonnull %413) #12, !noalias !17
  %501 = icmp eq %"class.net::CertNetFetcher"* %471, null
  br i1 %501, label %508, label %502

502:                                              ; preds = %492
  %503 = call i8* @_Znwm(i64 16) #13
  %504 = bitcast i8* %503 to %"class.net::CertIssuerSourceAia"*
  %505 = getelementptr inbounds %"class.net::CertNetFetcher", %"class.net::CertNetFetcher"* %471, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %506 = atomicrmw add i32* %505, i32 1 monotonic, !noalias !17
  call void @_ZN3net19CertIssuerSourceAiaC1E13scoped_refptrINS_14CertNetFetcherEE(%"class.net::CertIssuerSourceAia"* nonnull %504, %"class.net::CertNetFetcher"* nonnull %471) #12
  %507 = bitcast i8* %503 to %"class.net::CertIssuerSource"*
  call void @_ZN3net15CertPathBuilder19AddCertIssuerSourceEPNS_16CertIssuerSourceE(%"class.net::CertPathBuilder"* nonnull %26, %"class.net::CertIssuerSource"* nonnull %507) #12
  br label %512

508:                                              ; preds = %492
  %509 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %509, label %510, label %512

510:                                              ; preds = %508
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %414) #12, !noalias !17
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %27, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10, i64 0, i64 0), i32 601, i32 2) #12
  %511 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %416, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.11, i64 0, i64 0), i64 42) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %27) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %414) #12, !noalias !17
  br label %512

512:                                              ; preds = %510, %508, %502
  %513 = phi %"class.net::CertIssuerSourceAia"* [ %504, %502 ], [ null, %508 ], [ null, %510 ]
  call void @_ZN3net15CertPathBuilder17SetIterationLimitEj(%"class.net::CertPathBuilder"* nonnull %26, i32 25000) #12, !noalias !17
  call void @_ZN3net15CertPathBuilder11SetDeadlineEN4base9TimeTicksE(%"class.net::CertPathBuilder"* nonnull %26, i64 %467) #12, !noalias !17
  call void @_ZN3net15CertPathBuilder3RunEv(%"struct.net::CertPathBuilder::Result"* nonnull sret %48, %"class.net::CertPathBuilder"* nonnull %26) #12
  %514 = icmp eq %"class.net::CertIssuerSourceAia"* %513, null
  br i1 %514, label %520, label %515

515:                                              ; preds = %512
  %516 = bitcast %"class.net::CertIssuerSourceAia"* %513 to void (%"class.net::CertIssuerSourceAia"*)***
  %517 = load void (%"class.net::CertIssuerSourceAia"*)**, void (%"class.net::CertIssuerSourceAia"*)*** %516, align 8, !noalias !17
  %518 = getelementptr inbounds void (%"class.net::CertIssuerSourceAia"*)*, void (%"class.net::CertIssuerSourceAia"*)** %517, i64 1
  %519 = load void (%"class.net::CertIssuerSourceAia"*)*, void (%"class.net::CertIssuerSourceAia"*)** %518, align 8
  call void %519(%"class.net::CertIssuerSourceAia"* nonnull %513) #12
  br label %520

520:                                              ; preds = %512, %515
  call void @_ZN3net15CertPathBuilderD1Ev(%"class.net::CertPathBuilder"* nonnull %26) #12
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %409) #12, !noalias !17
  call void @_ZN3net30VerifyCertificateChainDelegateD2Ev(%"class.net::VerifyCertificateChainDelegate"* nonnull %417) #12
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %392) #12, !noalias !17
  %521 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %418, align 8, !noalias !17
  call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.282"* nonnull %386, %"class.std::__1::__tree_node"* %521) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %377) #12, !noalias !17
  %522 = call dereferenceable(80) %"struct.net::CertPathBuilder::Result"* @_ZN3net15CertPathBuilder6ResultaSEOS1_(%"struct.net::CertPathBuilder::Result"* nonnull %47, %"struct.net::CertPathBuilder::Result"* nonnull dereferenceable(80) %48) #12
  call void @_ZN3net15CertPathBuilder6ResultD1Ev(%"struct.net::CertPathBuilder::Result"* nonnull %48) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %375) #12
  %523 = load %"class.std::__1::unique_ptr.271"*, %"class.std::__1::unique_ptr.271"** %419, align 8
  %524 = load %"class.std::__1::unique_ptr.271"*, %"class.std::__1::unique_ptr.271"** %420, align 8
  %525 = icmp eq %"class.std::__1::unique_ptr.271"* %523, %524
  %526 = load %"class.net::NetLog"*, %"class.net::NetLog"** %88, align 8
  %527 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %526, i64 0, i32 3
  %528 = load atomic i32, i32* %527 monotonic, align 4
  %529 = icmp eq i32 %528, 0
  br i1 %525, label %530, label %551

530:                                              ; preds = %606, %520
  %531 = phi %"class.net::NetLog"* [ %526, %520 ], [ %607, %606 ]
  %532 = phi i1 [ %529, %520 ], [ %612, %606 ]
  br i1 %532, label %549, label %533, !prof !3

533:                                              ; preds = %530
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %432) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %432, i8 -86, i64 32, i1 false) #12, !alias.scope !20
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %22, i8 zeroext 6) #12
  %534 = call zeroext i1 @_ZNK3net15CertPathBuilder6Result12HasValidPathEv(%"struct.net::CertPathBuilder::Result"* nonnull %47) #12
  %535 = call %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"* nonnull %22, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.16, i64 0, i64 0), i64 14, i1 zeroext %534) #12
  %536 = load i64, i64* %433, align 8, !noalias !25
  %537 = trunc i64 %536 to i32
  %538 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %22, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i64 17, i32 %537) #12
  %539 = load i8, i8* %434, align 8, !range !10, !noalias !25
  %540 = icmp eq i8 %539, 0
  br i1 %540, label %543, label %541

541:                                              ; preds = %533
  %542 = call %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"* nonnull %22, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.18, i64 0, i64 0), i64 24, i1 zeroext true) #12
  br label %543

543:                                              ; preds = %541, %533
  %544 = load i8, i8* %435, align 1, !range !10, !noalias !25
  %545 = icmp eq i8 %544, 0
  br i1 %545, label %548, label %546

546:                                              ; preds = %543
  %547 = call %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"* nonnull %22, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i64 17, i1 zeroext true) #12
  br label %548

548:                                              ; preds = %546, %543
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %531, i32 383, %"struct.net::NetLogSource"* dereferenceable(16) %372, i32 2, %"class.base::Value"* nonnull dereferenceable(32) %22) #12
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %432) #12
  br label %549

549:                                              ; preds = %530, %548
  %550 = call zeroext i1 @_ZNK3net15CertPathBuilder6Result12HasValidPathEv(%"struct.net::CertPathBuilder::Result"* nonnull %47) #12
  br i1 %550, label %693, label %613

551:                                              ; preds = %520, %606
  %552 = phi %"class.net::NetLog"* [ %607, %606 ], [ %526, %520 ]
  %553 = phi i1 [ %612, %606 ], [ %529, %520 ]
  %554 = phi %"class.std::__1::unique_ptr.271"* [ %608, %606 ], [ %523, %520 ]
  br i1 %553, label %606, label %555, !prof !3

555:                                              ; preds = %551
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %421) #12
  %556 = getelementptr inbounds %"class.std::__1::unique_ptr.271", %"class.std::__1::unique_ptr.271"* %554, i64 0, i32 0, i32 0, i32 0
  %557 = load %"struct.net::CertPathBuilderResultPath"*, %"struct.net::CertPathBuilderResultPath"** %556, align 8, !noalias !26
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %421, i8 -86, i64 32, i1 false) #12, !alias.scope !29
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %21, i8 zeroext 6) #12
  %558 = call zeroext i1 @_ZNK3net25CertPathBuilderResultPath7IsValidEv(%"struct.net::CertPathBuilderResultPath"* %557) #12
  %559 = call %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"* nonnull %21, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i64 0, i64 0), i64 8, i1 zeroext %558) #12
  %560 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %557, i64 0, i32 1, i32 0
  %561 = load i32, i32* %560, align 8, !noalias !32
  %562 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %21, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i64 0, i64 0), i64 15, i32 %561) #12
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %422) #12, !noalias !29
  %563 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %557, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %422, i8 -86, i64 32, i1 false) #12, !alias.scope !33, !noalias !29
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %19, i8 zeroext 7) #12
  %564 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %557, i64 0, i32 0, i32 0, i32 0
  %565 = load %class.scoped_refptr.105*, %class.scoped_refptr.105** %564, align 8, !noalias !36
  %566 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %557, i64 0, i32 0, i32 0, i32 1
  %567 = load %class.scoped_refptr.105*, %class.scoped_refptr.105** %566, align 8, !noalias !36
  %568 = icmp eq %class.scoped_refptr.105* %565, %567
  br i1 %568, label %585, label %569

569:                                              ; preds = %555, %582
  %570 = phi %class.scoped_refptr.105* [ %583, %582 ], [ %565, %555 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %423) #12, !noalias !37
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %423, i8 0, i64 24, i1 false) #12, !noalias !37
  %571 = getelementptr inbounds %class.scoped_refptr.105, %class.scoped_refptr.105* %570, i64 0, i32 0
  %572 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %571, align 8
  %573 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %572, i64 0, i32 2
  %574 = call { i8*, i64 } @_ZNK3net3der5Input13AsStringPieceEv(%"class.net::der::Input"* %573) #12
  %575 = extractvalue { i8*, i64 } %574, 0
  %576 = extractvalue { i8*, i64 } %574, 1
  %577 = call zeroext i1 @_ZN3net15X509Certificate20GetPEMEncodedFromDEREN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(i8* %575, i64 %576, %"class.std::__1::basic_string"* nonnull %18) #12
  call void @_ZN4base5Value6AppendEONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"* nonnull %19, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %18) #12
  %578 = load i8, i8* %426, align 1, !noalias !37
  %579 = icmp slt i8 %578, 0
  br i1 %579, label %580, label %582

580:                                              ; preds = %569
  %581 = load i8*, i8** %424, align 8, !noalias !37
  call void @_ZdlPv(i8* %581) #13
  br label %582

582:                                              ; preds = %580, %569
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %423) #12, !noalias !37
  %583 = getelementptr inbounds %class.scoped_refptr.105, %class.scoped_refptr.105* %570, i64 1
  %584 = icmp eq %class.scoped_refptr.105* %583, %567
  br i1 %584, label %585, label %569

585:                                              ; preds = %582, %555
  %586 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %21, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %19) #12
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %19) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %422) #12, !noalias !29
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %427) #12, !noalias !29
  %587 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %557, i64 0, i32 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %427, i8 -86, i64 24, i1 false) #12, !noalias !29
  call void @_ZNK3net14CertPathErrors13ToDebugStringERKNSt3__16vectorI13scoped_refptrINS_17ParsedCertificateEENS1_9allocatorIS5_EEEE(%"class.std::__1::basic_string"* nonnull sret %20, %"class.net::CertPathErrors"* %587, %"class.std::__1::vector.274"* dereferenceable(24) %563) #12
  %588 = load i8, i8* %431, align 1, !noalias !29
  %589 = icmp slt i8 %588, 0
  %590 = load i64, i64* %429, align 8, !noalias !29
  %591 = zext i8 %588 to i64
  %592 = select i1 %589, i64 %590, i64 %591
  %593 = icmp eq i64 %592, 0
  br i1 %593, label %599, label %594

594:                                              ; preds = %585
  %595 = load i8*, i8** %428, align 8, !noalias !29
  %596 = select i1 %589, i8* %595, i8* %427
  %597 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"* nonnull %21, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i64 6, i8* %596, i64 %592) #12
  %598 = load i8, i8* %431, align 1, !noalias !29
  br label %599

599:                                              ; preds = %594, %585
  %600 = phi i8 [ %598, %594 ], [ %588, %585 ]
  %601 = icmp slt i8 %600, 0
  br i1 %601, label %602, label %604

602:                                              ; preds = %599
  %603 = load i8*, i8** %428, align 8, !noalias !29
  call void @_ZdlPv(i8* %603) #13
  br label %604

604:                                              ; preds = %602, %599
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %427) #12, !noalias !29
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %552, i32 384, %"struct.net::NetLogSource"* dereferenceable(16) %372, i32 0, %"class.base::Value"* nonnull dereferenceable(32) %21) #12
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %21) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %421) #12
  %605 = load %"class.net::NetLog"*, %"class.net::NetLog"** %88, align 8
  br label %606

606:                                              ; preds = %551, %604
  %607 = phi %"class.net::NetLog"* [ %552, %551 ], [ %605, %604 ]
  %608 = getelementptr inbounds %"class.std::__1::unique_ptr.271", %"class.std::__1::unique_ptr.271"* %554, i64 1
  %609 = icmp eq %"class.std::__1::unique_ptr.271"* %608, %524
  %610 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %607, i64 0, i32 3
  %611 = load atomic i32, i32* %610 monotonic, align 4
  %612 = icmp eq i32 %611, 0
  br i1 %609, label %530, label %551

613:                                              ; preds = %549
  %614 = load i8, i8* %435, align 1, !range !10
  %615 = icmp eq i8 %614, 0
  br i1 %615, label %620, label %616

616:                                              ; preds = %613
  %617 = icmp eq i32 %447, 0
  br i1 %617, label %618, label %691

618:                                              ; preds = %616
  %619 = call zeroext i1 @_ZNK3net15CertPathBuilder6Result20AnyPathContainsErrorEPKv(%"struct.net::CertPathBuilder::Result"* nonnull %47, i8* %436) #12
  br i1 %619, label %684, label %692

620:                                              ; preds = %613
  %621 = load i32, i32* %469, align 4
  %622 = icmp eq i32 %621, 0
  br i1 %622, label %623, label %684

623:                                              ; preds = %620
  %624 = call zeroext i1 @_ZNK3net15CertPathBuilder6Result20AnyPathContainsErrorEPKv(%"struct.net::CertPathBuilder::Result"* nonnull %47, i8* %437) #12
  br i1 %624, label %625, label %684

625:                                              ; preds = %623
  %626 = bitcast %"struct.net::(anonymous namespace)::BuildPathAttempt"* %445 to i64*
  %627 = load i64, i64* %626, align 4
  %628 = load %"struct.net::(anonymous namespace)::BuildPathAttempt"*, %"struct.net::(anonymous namespace)::BuildPathAttempt"** %177, align 8
  %629 = load %"struct.net::(anonymous namespace)::BuildPathAttempt"*, %"struct.net::(anonymous namespace)::BuildPathAttempt"** %178, align 8
  %630 = icmp eq %"struct.net::(anonymous namespace)::BuildPathAttempt"* %628, %629
  %631 = ptrtoint %"struct.net::(anonymous namespace)::BuildPathAttempt"* %629 to i64
  br i1 %630, label %638, label %632

632:                                              ; preds = %625
  %633 = bitcast %"struct.net::(anonymous namespace)::BuildPathAttempt"* %628 to i64*
  %634 = and i64 %627, 4294967295
  %635 = or i64 %634, 4294967296
  store i64 %635, i64* %633, align 4
  %636 = getelementptr inbounds %"struct.net::(anonymous namespace)::BuildPathAttempt", %"struct.net::(anonymous namespace)::BuildPathAttempt"* %628, i64 1
  %637 = ptrtoint %"struct.net::(anonymous namespace)::BuildPathAttempt"* %636 to i64
  store i64 %637, i64* %366, align 8
  br label %684

638:                                              ; preds = %625
  %639 = ptrtoint %"struct.net::(anonymous namespace)::BuildPathAttempt"* %628 to i64
  %640 = load i64, i64* %365, align 8
  %641 = sub i64 %639, %640
  %642 = ashr exact i64 %641, 3
  %643 = add nsw i64 %642, 1
  %644 = icmp ugt i64 %643, 2305843009213693951
  br i1 %644, label %645, label %647

645:                                              ; preds = %638
  %646 = bitcast %"class.std::__1::vector.262"* %46 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %646) #14
  unreachable

647:                                              ; preds = %638
  %648 = sub i64 %631, %640
  %649 = ashr exact i64 %648, 3
  %650 = icmp ult i64 %649, 1152921504606846975
  br i1 %650, label %651, label %659

651:                                              ; preds = %647
  %652 = ashr exact i64 %648, 2
  %653 = icmp ult i64 %652, %643
  %654 = select i1 %653, i64 %643, i64 %652
  %655 = icmp eq i64 %654, 0
  br i1 %655, label %664, label %656

656:                                              ; preds = %651
  %657 = icmp ugt i64 %654, 2305843009213693951
  br i1 %657, label %658, label %659

658:                                              ; preds = %656
  call void @abort() #14
  unreachable

659:                                              ; preds = %656, %647
  %660 = phi i64 [ %654, %656 ], [ 2305843009213693951, %647 ]
  %661 = shl i64 %660, 3
  %662 = call i8* @_Znwm(i64 %661) #13
  %663 = bitcast i8* %662 to %"struct.net::(anonymous namespace)::BuildPathAttempt"*
  br label %664

664:                                              ; preds = %659, %651
  %665 = phi i64 [ %660, %659 ], [ 0, %651 ]
  %666 = phi i8* [ %662, %659 ], [ null, %651 ]
  %667 = phi %"struct.net::(anonymous namespace)::BuildPathAttempt"* [ %663, %659 ], [ null, %651 ]
  %668 = getelementptr inbounds %"struct.net::(anonymous namespace)::BuildPathAttempt", %"struct.net::(anonymous namespace)::BuildPathAttempt"* %667, i64 %642
  %669 = getelementptr inbounds %"struct.net::(anonymous namespace)::BuildPathAttempt", %"struct.net::(anonymous namespace)::BuildPathAttempt"* %667, i64 %665
  %670 = ptrtoint %"struct.net::(anonymous namespace)::BuildPathAttempt"* %669 to i64
  %671 = bitcast %"struct.net::(anonymous namespace)::BuildPathAttempt"* %668 to i64*
  %672 = and i64 %627, 4294967295
  %673 = or i64 %672, 4294967296
  store i64 %673, i64* %671, align 4
  %674 = getelementptr inbounds %"struct.net::(anonymous namespace)::BuildPathAttempt", %"struct.net::(anonymous namespace)::BuildPathAttempt"* %668, i64 1
  %675 = ptrtoint %"struct.net::(anonymous namespace)::BuildPathAttempt"* %674 to i64
  %676 = ptrtoint %"struct.net::(anonymous namespace)::BuildPathAttempt"* %667 to i64
  %677 = icmp sgt i64 %641, 0
  br i1 %677, label %678, label %680

678:                                              ; preds = %664
  %679 = inttoptr i64 %640 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %666, i8* align 4 %679, i64 %641, i1 false) #12
  br label %680

680:                                              ; preds = %678, %664
  store i64 %676, i64* %365, align 8
  store i64 %675, i64* %366, align 8
  store i64 %670, i64* %438, align 8
  %681 = icmp eq i64 %640, 0
  br i1 %681, label %684, label %682

682:                                              ; preds = %680
  %683 = inttoptr i64 %640 to i8*
  call void @_ZdlPv(i8* %683) #13
  br label %684

684:                                              ; preds = %618, %623, %620, %632, %680, %682
  %685 = add nuw i64 %443, 1
  %686 = load i64, i64* %366, align 8
  %687 = load i64, i64* %365, align 8
  %688 = sub i64 %686, %687
  %689 = ashr exact i64 %688, 3
  %690 = icmp ult i64 %685, %689
  br i1 %690, label %440, label %694

691:                                              ; preds = %616
  store i64 %467, i64* %38, align 8
  br label %695

692:                                              ; preds = %618
  store i64 %467, i64* %38, align 8
  br label %695

693:                                              ; preds = %549
  store i64 %467, i64* %38, align 8
  br label %695

694:                                              ; preds = %684
  store i64 %467, i64* %38, align 8
  br label %695

695:                                              ; preds = %364, %694, %693, %692, %691
  %696 = phi i32 [ %447, %694 ], [ %447, %693 ], [ 0, %692 ], [ %447, %691 ], [ 1, %364 ]
  %697 = load i8, i8* %45, align 1, !range !10
  %698 = icmp eq i8 %697, 0
  %699 = bitcast %"struct.net::CertPathBuilder::Result"* %47 to %"class.base::SupportsUserData"*
  call void @_ZN4base16SupportsUserData13CloneDataFromERKS0_(%"class.base::SupportsUserData"* %66, %"class.base::SupportsUserData"* nonnull dereferenceable(40) %699) #12
  %700 = call %"struct.net::CertPathBuilderResultPath"* @_ZNK3net15CertPathBuilder6Result26GetBestPathPossiblyInvalidEv(%"struct.net::CertPathBuilder::Result"* nonnull %47) #12
  %701 = icmp eq %"struct.net::CertPathBuilderResultPath"* %700, null
  br i1 %701, label %702, label %706

702:                                              ; preds = %695
  %703 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 3
  %704 = load i32, i32* %703, align 8
  %705 = or i32 %704, 4
  store i32 %705, i32* %703, align 8
  br label %1098

706:                                              ; preds = %695
  %707 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 10
  %708 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %700, i64 0, i32 0, i32 0, i32 0
  %709 = load %class.scoped_refptr.105*, %class.scoped_refptr.105** %708, align 8
  %710 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %700, i64 0, i32 0, i32 0, i32 1
  %711 = load %class.scoped_refptr.105*, %class.scoped_refptr.105** %710, align 8
  %712 = icmp eq %class.scoped_refptr.105* %709, %711
  br i1 %712, label %792, label %713

713:                                              ; preds = %706
  %714 = bitcast %"class.net::HashValue"* %14 to i8*
  %715 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %14, i64 0, i32 1, i32 0, i32 0, i64 0
  %716 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %14, i64 0, i32 0
  %717 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 10, i32 0, i32 1
  %718 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %719 = bitcast %"class.net::HashValue"** %717 to i64*
  %720 = bitcast %"class.std::__1::vector.73"* %707 to i64*
  %721 = bitcast %"class.net::HashValue"** %718 to i64*
  %722 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %707, i64 0, i32 0, i32 0
  br label %723

723:                                              ; preds = %789, %713
  %724 = phi %class.scoped_refptr.105* [ %709, %713 ], [ %790, %789 ]
  %725 = getelementptr inbounds %class.scoped_refptr.105, %class.scoped_refptr.105* %724, i64 0, i32 0
  %726 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %725, align 8
  %727 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %726, i64 0, i32 6, i32 7
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %714) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %715, i8 -86, i64 32, i1 false) #12
  store i32 0, i32* %716, align 4
  %728 = call { i8*, i64 } @_ZNK3net3der5Input13AsStringPieceEv(%"class.net::der::Input"* %727) #12
  %729 = extractvalue { i8*, i64 } %728, 0
  %730 = extractvalue { i8*, i64 } %728, 1
  %731 = call i8* @_ZN3net9HashValue4dataEv(%"class.net::HashValue"* nonnull %14) #12
  call void @_ZN6crypto16SHA256HashStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPvm(i8* %729, i64 %730, i8* %731, i64 32) #12
  %732 = load %"class.net::HashValue"*, %"class.net::HashValue"** %717, align 8
  %733 = load %"class.net::HashValue"*, %"class.net::HashValue"** %718, align 8
  %734 = icmp eq %"class.net::HashValue"* %732, %733
  %735 = ptrtoint %"class.net::HashValue"* %733 to i64
  br i1 %734, label %740, label %736

736:                                              ; preds = %723
  %737 = bitcast %"class.net::HashValue"* %732 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %737, i8* nonnull align 4 %714, i64 36, i1 false) #12
  %738 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %732, i64 1
  %739 = ptrtoint %"class.net::HashValue"* %738 to i64
  store i64 %739, i64* %719, align 8
  br label %789

740:                                              ; preds = %723
  %741 = ptrtoint %"class.net::HashValue"* %732 to i64
  %742 = load i64, i64* %720, align 8
  %743 = sub i64 %741, %742
  %744 = sdiv exact i64 %743, 36
  %745 = add nsw i64 %744, 1
  %746 = icmp ugt i64 %745, 512409557603043100
  br i1 %746, label %747, label %749

747:                                              ; preds = %740
  %748 = bitcast %"class.std::__1::vector.73"* %707 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %748) #14
  unreachable

749:                                              ; preds = %740
  %750 = sub i64 %735, %742
  %751 = sdiv exact i64 %750, 36
  %752 = icmp ult i64 %751, 256204778801521550
  br i1 %752, label %753, label %758

753:                                              ; preds = %749
  %754 = shl nsw i64 %751, 1
  %755 = icmp ult i64 %754, %745
  %756 = select i1 %755, i64 %745, i64 %754
  %757 = icmp eq i64 %756, 0
  br i1 %757, label %763, label %758

758:                                              ; preds = %753, %749
  %759 = phi i64 [ %756, %753 ], [ 512409557603043100, %749 ]
  %760 = mul i64 %759, 36
  %761 = call i8* @_Znwm(i64 %760) #13
  %762 = bitcast i8* %761 to %"class.net::HashValue"*
  br label %763

763:                                              ; preds = %758, %753
  %764 = phi i64 [ %759, %758 ], [ 0, %753 ]
  %765 = phi %"class.net::HashValue"* [ %762, %758 ], [ null, %753 ]
  %766 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %765, i64 %744
  %767 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %765, i64 %764
  %768 = ptrtoint %"class.net::HashValue"* %767 to i64
  %769 = bitcast %"class.net::HashValue"* %766 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %769, i8* nonnull align 4 %714, i64 36, i1 false) #12
  %770 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %766, i64 1
  %771 = ptrtoint %"class.net::HashValue"* %770 to i64
  %772 = load %"class.net::HashValue"*, %"class.net::HashValue"** %722, align 8
  %773 = load i64, i64* %719, align 8
  %774 = ptrtoint %"class.net::HashValue"* %772 to i64
  %775 = sub i64 %773, %774
  %776 = sdiv exact i64 %775, -36
  %777 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %766, i64 %776
  %778 = ptrtoint %"class.net::HashValue"* %777 to i64
  %779 = icmp sgt i64 %775, 0
  br i1 %779, label %780, label %784

780:                                              ; preds = %763
  %781 = bitcast %"class.net::HashValue"* %777 to i8*
  %782 = bitcast %"class.net::HashValue"* %772 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %781, i8* align 4 %782, i64 %775, i1 false) #12
  %783 = load %"class.net::HashValue"*, %"class.net::HashValue"** %722, align 8
  br label %784

784:                                              ; preds = %780, %763
  %785 = phi %"class.net::HashValue"* [ %772, %763 ], [ %783, %780 ]
  store i64 %778, i64* %720, align 8
  store i64 %771, i64* %719, align 8
  store i64 %768, i64* %721, align 8
  %786 = icmp eq %"class.net::HashValue"* %785, null
  br i1 %786, label %789, label %787

787:                                              ; preds = %784
  %788 = bitcast %"class.net::HashValue"* %785 to i8*
  call void @_ZdlPv(i8* %788) #13
  br label %789

789:                                              ; preds = %787, %784, %736
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %714) #12
  %790 = getelementptr inbounds %class.scoped_refptr.105, %class.scoped_refptr.105* %724, i64 1
  %791 = icmp eq %class.scoped_refptr.105* %790, %711
  br i1 %791, label %792, label %723

792:                                              ; preds = %789, %706
  %793 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 10, i32 0, i32 1
  %794 = load %"class.net::HashValue"*, %"class.net::HashValue"** %793, align 8
  %795 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 11
  %796 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %707, i64 0, i32 0, i32 0
  %797 = load %"class.net::HashValue"*, %"class.net::HashValue"** %796, align 8
  %798 = icmp eq %"class.net::HashValue"* %794, %797
  br i1 %798, label %805, label %799

799:                                              ; preds = %792
  %800 = load i8, i8* %795, align 8, !range !10
  br label %801

801:                                              ; preds = %809, %799
  %802 = phi i8 [ %813, %809 ], [ %800, %799 ]
  %803 = phi %"class.net::HashValue"* [ %810, %809 ], [ %794, %799 ]
  %804 = icmp eq i8 %802, 0
  br i1 %804, label %809, label %805

805:                                              ; preds = %809, %801, %792
  %806 = call zeroext i1 @_ZNK3net25CertPathBuilderResultPath7IsValidEv(%"struct.net::CertPathBuilderResultPath"* nonnull %700) #12
  %807 = call %"class.net::ParsedCertificate"* @_ZNK3net25CertPathBuilderResultPath14GetTrustedCertEv(%"struct.net::CertPathBuilderResultPath"* nonnull %700) #12
  %808 = icmp eq %"class.net::ParsedCertificate"* %807, null
  br i1 %808, label %831, label %816

809:                                              ; preds = %801
  %810 = getelementptr inbounds %"class.net::HashValue", %"class.net::HashValue"* %803, i64 -1
  %811 = call i32 @_ZN3net35GetNetTrustAnchorHistogramIdForSPKIERKNS_9HashValueE(%"class.net::HashValue"* dereferenceable(36) %810) #12
  %812 = icmp ne i32 %811, 0
  %813 = zext i1 %812 to i8
  store i8 %813, i8* %795, align 8
  %814 = load %"class.net::HashValue"*, %"class.net::HashValue"** %796, align 8
  %815 = icmp eq %"class.net::HashValue"* %810, %814
  br i1 %815, label %805, label %801

816:                                              ; preds = %805
  %817 = load i8, i8* %795, align 8, !range !10
  %818 = icmp eq i8 %817, 0
  br i1 %818, label %819, label %827

819:                                              ; preds = %816
  %820 = load %"class.net::SystemTrustStore"*, %"class.net::SystemTrustStore"** %146, align 8
  %821 = bitcast %"class.net::SystemTrustStore"* %820 to i1 (%"class.net::SystemTrustStore"*, %"class.net::ParsedCertificate"*)***
  %822 = load i1 (%"class.net::SystemTrustStore"*, %"class.net::ParsedCertificate"*)**, i1 (%"class.net::SystemTrustStore"*, %"class.net::ParsedCertificate"*)*** %821, align 8
  %823 = getelementptr inbounds i1 (%"class.net::SystemTrustStore"*, %"class.net::ParsedCertificate"*)*, i1 (%"class.net::SystemTrustStore"*, %"class.net::ParsedCertificate"*)** %822, i64 4
  %824 = load i1 (%"class.net::SystemTrustStore"*, %"class.net::ParsedCertificate"*)*, i1 (%"class.net::SystemTrustStore"*, %"class.net::ParsedCertificate"*)** %823, align 8
  %825 = call zeroext i1 %824(%"class.net::SystemTrustStore"* %820, %"class.net::ParsedCertificate"* nonnull %807) #12
  %826 = zext i1 %825 to i8
  store i8 %826, i8* %795, align 8
  br label %827

827:                                              ; preds = %819, %816
  %828 = call zeroext i1 @_ZNK3net18TrustStoreInMemory8ContainsEPKNS_17ParsedCertificateE(%"class.net::TrustStoreInMemory"* %148, %"class.net::ParsedCertificate"* nonnull %807) #12
  %829 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 12
  %830 = zext i1 %828 to i8
  store i8 %830, i8* %829, align 1
  br label %831

831:                                              ; preds = %827, %805
  %832 = icmp eq i32 %696, 0
  %833 = and i1 %832, %806
  br i1 %833, label %834, label %838

834:                                              ; preds = %831
  %835 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 3
  %836 = load i32, i32* %835, align 8
  %837 = or i32 %836, 65536
  store i32 %837, i32* %835, align 8
  br label %838

838:                                              ; preds = %834, %831
  br i1 %698, label %843, label %839

839:                                              ; preds = %838
  %840 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 3
  %841 = load i32, i32* %840, align 8
  %842 = or i32 %841, 131072
  store i32 %842, i32* %840, align 8
  br label %843

843:                                              ; preds = %838, %839
  %844 = bitcast %"class.std::__1::vector.38"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %844) #12
  %845 = bitcast %"class.std::__1::vector.38"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %845) #12
  %846 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %11, i64 0, i32 0, i32 0
  %847 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %11, i64 0, i32 0, i32 1
  %848 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %845, i8 0, i64 24, i1 false) #12
  %849 = bitcast %class.scoped_refptr.105** %710 to i64*
  %850 = load i64, i64* %849, align 8
  %851 = bitcast %"struct.net::CertPathBuilderResultPath"* %700 to i64*
  %852 = load i64, i64* %851, align 8
  %853 = sub i64 %850, %852
  %854 = ashr exact i64 %853, 3
  %855 = icmp ugt i64 %854, 1
  br i1 %855, label %856, label %860

856:                                              ; preds = %843
  %857 = bitcast %"class.std::__1::unique_ptr.34"* %12 to i8*
  %858 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %12, i64 0, i32 0, i32 0, i32 0
  %859 = bitcast %"class.std::__1::unique_ptr.34"** %847 to i64*
  br label %917

860:                                              ; preds = %941, %843
  %861 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %79, align 8
  %862 = icmp eq %struct.crypto_buffer_st* %861, null
  br i1 %862, label %865, label %863

863:                                              ; preds = %860
  %864 = call i32 @CRYPTO_BUFFER_up_ref(%struct.crypto_buffer_st* nonnull %861) #12
  br label %865

865:                                              ; preds = %863, %860
  %866 = bitcast %"class.std::__1::vector.38"* %11 to <2 x i64>*
  %867 = load <2 x i64>, <2 x i64>* %866, align 16
  %868 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %13, i64 0, i32 0, i32 1
  %869 = bitcast %"class.std::__1::vector.38"* %13 to <2 x i64>*
  store <2 x i64> %867, <2 x i64>* %869, align 16
  %870 = bitcast %"class.std::__1::unique_ptr.34"** %848 to i64*
  %871 = load i64, i64* %870, align 16
  %872 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  %873 = bitcast %"class.std::__1::unique_ptr.34"** %872 to i64*
  store i64 %871, i64* %873, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %845, i8 0, i64 24, i1 false) #12
  %874 = call %"class.net::X509Certificate"* @_ZN3net15X509Certificate16CreateFromBufferENSt3__110unique_ptrI16crypto_buffer_stN4bssl8internal7DeleterIS3_EEEENS1_6vectorIS8_NS1_9allocatorIS8_EEEE(%struct.crypto_buffer_st* %861, %"class.std::__1::vector.38"* nonnull %13) #12
  %875 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %13, i64 0, i32 0, i32 0
  %876 = load %"class.std::__1::unique_ptr.34"*, %"class.std::__1::unique_ptr.34"** %875, align 16
  %877 = icmp eq %"class.std::__1::unique_ptr.34"* %876, null
  br i1 %877, label %896, label %878

878:                                              ; preds = %865
  %879 = bitcast %"class.std::__1::unique_ptr.34"* %876 to i8*
  %880 = load %"class.std::__1::unique_ptr.34"*, %"class.std::__1::unique_ptr.34"** %868, align 8
  %881 = icmp eq %"class.std::__1::unique_ptr.34"* %880, %876
  br i1 %881, label %894, label %882

882:                                              ; preds = %878, %889
  %883 = phi %"class.std::__1::unique_ptr.34"* [ %884, %889 ], [ %880, %878 ]
  %884 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %883, i64 -1
  %885 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %884, i64 0, i32 0, i32 0, i32 0
  %886 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %885, align 8
  store %struct.crypto_buffer_st* null, %struct.crypto_buffer_st** %885, align 8
  %887 = icmp eq %struct.crypto_buffer_st* %886, null
  br i1 %887, label %889, label %888

888:                                              ; preds = %882
  call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* nonnull %886) #12
  br label %889

889:                                              ; preds = %888, %882
  %890 = icmp eq %"class.std::__1::unique_ptr.34"* %884, %876
  br i1 %890, label %891, label %882

891:                                              ; preds = %889
  %892 = bitcast %"class.std::__1::vector.38"* %13 to i8**
  %893 = load i8*, i8** %892, align 16
  br label %894

894:                                              ; preds = %891, %878
  %895 = phi i8* [ %893, %891 ], [ %879, %878 ]
  store %"class.std::__1::unique_ptr.34"* %876, %"class.std::__1::unique_ptr.34"** %868, align 8
  call void @_ZdlPv(i8* %895) #13
  br label %896

896:                                              ; preds = %894, %865
  %897 = load %"class.std::__1::unique_ptr.34"*, %"class.std::__1::unique_ptr.34"** %846, align 16
  %898 = icmp eq %"class.std::__1::unique_ptr.34"* %897, null
  br i1 %898, label %948, label %899

899:                                              ; preds = %896
  %900 = bitcast %"class.std::__1::unique_ptr.34"* %897 to i8*
  %901 = load %"class.std::__1::unique_ptr.34"*, %"class.std::__1::unique_ptr.34"** %847, align 8
  %902 = icmp eq %"class.std::__1::unique_ptr.34"* %901, %897
  br i1 %902, label %915, label %903

903:                                              ; preds = %899, %910
  %904 = phi %"class.std::__1::unique_ptr.34"* [ %905, %910 ], [ %901, %899 ]
  %905 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %904, i64 -1
  %906 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %905, i64 0, i32 0, i32 0, i32 0
  %907 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %906, align 8
  store %struct.crypto_buffer_st* null, %struct.crypto_buffer_st** %906, align 8
  %908 = icmp eq %struct.crypto_buffer_st* %907, null
  br i1 %908, label %910, label %909

909:                                              ; preds = %903
  call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* nonnull %907) #12
  br label %910

910:                                              ; preds = %909, %903
  %911 = icmp eq %"class.std::__1::unique_ptr.34"* %905, %897
  br i1 %911, label %912, label %903

912:                                              ; preds = %910
  %913 = bitcast %"class.std::__1::vector.38"* %11 to i8**
  %914 = load i8*, i8** %913, align 16
  br label %915

915:                                              ; preds = %912, %899
  %916 = phi i8* [ %914, %912 ], [ %900, %899 ]
  store %"class.std::__1::unique_ptr.34"* %897, %"class.std::__1::unique_ptr.34"** %847, align 8
  call void @_ZdlPv(i8* %916) #13
  br label %948

917:                                              ; preds = %941, %856
  %918 = phi i64 [ %852, %856 ], [ %944, %941 ]
  %919 = phi i64 [ 1, %856 ], [ %942, %941 ]
  %920 = inttoptr i64 %918 to %class.scoped_refptr.105*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %857) #12
  %921 = getelementptr inbounds %class.scoped_refptr.105, %class.scoped_refptr.105* %920, i64 %919, i32 0
  %922 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %921, align 8
  %923 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %922, i64 0, i32 2, i32 0
  %924 = load i8*, i8** %923, align 8
  %925 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %922, i64 0, i32 2, i32 1
  %926 = load i64, i64* %925, align 8
  %927 = call %struct.crypto_buffer_st* @_ZN3net15X509Certificate25CreateCertBufferFromBytesEPKcm(i8* %924, i64 %926) #12
  store %struct.crypto_buffer_st* %927, %struct.crypto_buffer_st** %858, align 8
  %928 = load %"class.std::__1::unique_ptr.34"*, %"class.std::__1::unique_ptr.34"** %847, align 8
  %929 = load %"class.std::__1::unique_ptr.34"*, %"class.std::__1::unique_ptr.34"** %848, align 16
  %930 = icmp ult %"class.std::__1::unique_ptr.34"* %928, %929
  br i1 %930, label %931, label %936

931:                                              ; preds = %917
  %932 = ptrtoint %struct.crypto_buffer_st* %927 to i64
  store %struct.crypto_buffer_st* null, %struct.crypto_buffer_st** %858, align 8
  %933 = bitcast %"class.std::__1::unique_ptr.34"* %928 to i64*
  store i64 %932, i64* %933, align 8
  %934 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %928, i64 1
  %935 = ptrtoint %"class.std::__1::unique_ptr.34"* %934 to i64
  store i64 %935, i64* %859, align 8
  br label %937

936:                                              ; preds = %917
  call void @_ZNSt3__16vectorINS_10unique_ptrI16crypto_buffer_stN4bssl8internal7DeleterIS2_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.38"* nonnull %11, %"class.std::__1::unique_ptr.34"* nonnull dereferenceable(8) %12) #12
  br label %937

937:                                              ; preds = %936, %931
  %938 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %858, align 8
  store %struct.crypto_buffer_st* null, %struct.crypto_buffer_st** %858, align 8
  %939 = icmp eq %struct.crypto_buffer_st* %938, null
  br i1 %939, label %941, label %940

940:                                              ; preds = %937
  call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* nonnull %938) #12
  br label %941

941:                                              ; preds = %940, %937
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %857) #12
  %942 = add nuw i64 %919, 1
  %943 = load i64, i64* %849, align 8
  %944 = load i64, i64* %851, align 8
  %945 = sub i64 %943, %944
  %946 = ashr exact i64 %945, 3
  %947 = icmp ult i64 %942, %946
  br i1 %947, label %917, label %860

948:                                              ; preds = %915, %896
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %845) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %844) #12
  %949 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 2
  %950 = ptrtoint %"class.net::X509Certificate"* %874 to i64
  %951 = bitcast %class.scoped_refptr.67* %949 to i64*
  %952 = getelementptr inbounds %class.scoped_refptr.67, %class.scoped_refptr.67* %949, i64 0, i32 0
  %953 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %952, align 8
  store i64 %950, i64* %951, align 8
  %954 = icmp eq %"class.net::X509Certificate"* %953, null
  br i1 %954, label %961, label %955

955:                                              ; preds = %948
  %956 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %953, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %957 = atomicrmw sub i32* %956, i32 1 acq_rel
  %958 = icmp eq i32 %957, 1
  br i1 %958, label %959, label %961

959:                                              ; preds = %955
  call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %953) #12
  %960 = bitcast %"class.net::X509Certificate"* %953 to i8*
  call void @_ZdlPv(i8* %960) #13
  br label %961

961:                                              ; preds = %959, %955, %948
  %962 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %700, i64 0, i32 4
  %963 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 3
  %964 = call zeroext i1 @_ZNK3net14CertPathErrors28ContainsAnyErrorWithSeverityENS_9CertError8SeverityE(%"class.net::CertPathErrors"* %962, i32 0) #12
  br i1 %964, label %965, label %1015

965:                                              ; preds = %961
  %966 = load i8*, i8** @_ZN3net11cert_errors19kCertificateRevokedE, align 8
  %967 = call zeroext i1 @_ZNK3net14CertPathErrors13ContainsErrorEPKv(%"class.net::CertPathErrors"* %962, i8* %966) #12
  br i1 %967, label %968, label %971

968:                                              ; preds = %965
  %969 = load i32, i32* %963, align 4
  %970 = or i32 %969, 64
  store i32 %970, i32* %963, align 4
  br label %971

971:                                              ; preds = %968, %965
  %972 = load i8*, i8** @_ZN3net11cert_errors22kNoRevocationMechanismE, align 8
  %973 = call zeroext i1 @_ZNK3net14CertPathErrors13ContainsErrorEPKv(%"class.net::CertPathErrors"* %962, i8* %972) #12
  br i1 %973, label %974, label %977

974:                                              ; preds = %971
  %975 = load i32, i32* %963, align 4
  %976 = or i32 %975, 16
  store i32 %976, i32* %963, align 4
  br label %977

977:                                              ; preds = %974, %971
  %978 = load i8*, i8** @_ZN3net11cert_errors24kUnableToCheckRevocationE, align 8
  %979 = call zeroext i1 @_ZNK3net14CertPathErrors13ContainsErrorEPKv(%"class.net::CertPathErrors"* %962, i8* %978) #12
  br i1 %979, label %980, label %983

980:                                              ; preds = %977
  %981 = load i32, i32* %963, align 4
  %982 = or i32 %981, 32
  store i32 %982, i32* %963, align 4
  br label %983

983:                                              ; preds = %980, %977
  %984 = load i8*, i8** @_ZN3net11cert_errors22kUnacceptablePublicKeyE, align 8
  %985 = call zeroext i1 @_ZNK3net14CertPathErrors13ContainsErrorEPKv(%"class.net::CertPathErrors"* %962, i8* %984) #12
  br i1 %985, label %986, label %989

986:                                              ; preds = %983
  %987 = load i32, i32* %963, align 4
  %988 = or i32 %987, 2048
  store i32 %988, i32* %963, align 4
  br label %989

989:                                              ; preds = %986, %983
  %990 = load i8*, i8** @_ZN3net11cert_errors23kValidityFailedNotAfterE, align 8
  %991 = call zeroext i1 @_ZNK3net14CertPathErrors13ContainsErrorEPKv(%"class.net::CertPathErrors"* %962, i8* %990) #12
  br i1 %991, label %995, label %992

992:                                              ; preds = %989
  %993 = load i8*, i8** @_ZN3net11cert_errors24kValidityFailedNotBeforeE, align 8
  %994 = call zeroext i1 @_ZNK3net14CertPathErrors13ContainsErrorEPKv(%"class.net::CertPathErrors"* %962, i8* %993) #12
  br i1 %994, label %995, label %998

995:                                              ; preds = %992, %989
  %996 = load i32, i32* %963, align 4
  %997 = or i32 %996, 2
  store i32 %997, i32* %963, align 4
  br label %998

998:                                              ; preds = %995, %992
  %999 = load i8*, i8** @_ZN3net11cert_errors23kDistrustedByTrustStoreE, align 8
  %1000 = call zeroext i1 @_ZNK3net14CertPathErrors13ContainsErrorEPKv(%"class.net::CertPathErrors"* %962, i8* %999) #12
  br i1 %1000, label %1006, label %1001

1001:                                             ; preds = %998
  %1002 = load i8*, i8** @_ZN3net11cert_errors23kVerifySignedDataFailedE, align 8
  %1003 = call zeroext i1 @_ZNK3net14CertPathErrors13ContainsErrorEPKv(%"class.net::CertPathErrors"* %962, i8* %1002) #12
  br i1 %1003, label %1006, label %1004

1004:                                             ; preds = %1001
  %1005 = load i32, i32* %963, align 4
  br label %1009

1006:                                             ; preds = %1001, %998
  %1007 = load i32, i32* %963, align 4
  %1008 = or i32 %1007, 4
  store i32 %1008, i32* %963, align 4
  br label %1009

1009:                                             ; preds = %1006, %1004
  %1010 = phi i32 [ %1005, %1004 ], [ %1008, %1006 ]
  %1011 = and i32 %1010, -16711681
  %1012 = icmp eq i32 %1011, 0
  br i1 %1012, label %1013, label %1015

1013:                                             ; preds = %1009
  %1014 = or i32 %1010, 128
  store i32 %1014, i32* %963, align 4
  br label %1015

1015:                                             ; preds = %1013, %1009, %961
  br i1 %806, label %1063, label %1016

1016:                                             ; preds = %1015
  %1017 = load i32, i32* %963, align 8
  %1018 = and i32 %1017, -16711681
  %1019 = icmp eq i32 %1018, 0
  br i1 %1019, label %1020, label %1023

1020:                                             ; preds = %1016
  %1021 = bitcast %"class.logging::CheckError"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1021) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %15, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10, i64 0, i64 0), i32 676, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.20, i64 0, i64 0)) #12
  %1022 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %15) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1021) #12
  br label %1023

1023:                                             ; preds = %1020, %1016
  %1024 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %1024, label %1025, label %1063

1025:                                             ; preds = %1023
  %1026 = bitcast %"class.logging::LogMessage"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %1026) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %16, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10, i64 0, i64 0), i32 679, i32 2) #12
  %1027 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %16, i64 0, i32 2
  %1028 = bitcast %"class.std::__1::basic_ostringstream"* %1027 to %"class.std::__1::basic_ostream"*
  %1029 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1028, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i64 26) #12
  %1030 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1031 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1030, i64 0, i32 1, i32 0
  %1032 = load i8, i8* %1031, align 1
  %1033 = icmp slt i8 %1032, 0
  %1034 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1035 = load i8*, i8** %1034, align 8
  %1036 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1037 = load i64, i64* %1036, align 8
  %1038 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %1039 = zext i8 %1032 to i64
  %1040 = select i1 %1033, i8* %1035, i8* %1038
  %1041 = select i1 %1033, i64 %1037, i64 %1039
  %1042 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1029, i8* %1040, i64 %1041) #12
  %1043 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1042, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i64 0, i64 0), i64 9) #12
  %1044 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1044) #12
  %1045 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %700, i64 0, i32 0
  call void @_ZNK3net14CertPathErrors13ToDebugStringERKNSt3__16vectorI13scoped_refptrINS_17ParsedCertificateEENS1_9allocatorIS5_EEEE(%"class.std::__1::basic_string"* nonnull sret %17, %"class.net::CertPathErrors"* %962, %"class.std::__1::vector.274"* dereferenceable(24) %1045) #12
  %1046 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1047 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1046, i64 0, i32 1, i32 0
  %1048 = load i8, i8* %1047, align 1
  %1049 = icmp slt i8 %1048, 0
  %1050 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1051 = load i8*, i8** %1050, align 8
  %1052 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1053 = load i64, i64* %1052, align 8
  %1054 = zext i8 %1048 to i64
  %1055 = select i1 %1049, i8* %1051, i8* %1044
  %1056 = select i1 %1049, i64 %1053, i64 %1054
  %1057 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1043, i8* %1055, i64 %1056) #12
  %1058 = load i8, i8* %1047, align 1
  %1059 = icmp slt i8 %1058, 0
  br i1 %1059, label %1060, label %1062

1060:                                             ; preds = %1025
  %1061 = load i8*, i8** %1050, align 8
  call void @_ZdlPv(i8* %1061) #13
  br label %1062

1062:                                             ; preds = %1060, %1025
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1044) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %1026) #12
  br label %1063

1063:                                             ; preds = %1062, %1023, %1015
  %1064 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %700, i64 0, i32 3, i32 0, i32 0, i32 0
  %1065 = bitcast %"class.net::CertPathBuilderDelegateData"** %1064 to %"class.net::(anonymous namespace)::PathBuilderDelegateDataImpl"**
  %1066 = load %"class.net::(anonymous namespace)::PathBuilderDelegateDataImpl"*, %"class.net::(anonymous namespace)::PathBuilderDelegateDataImpl"** %1065, align 8
  %1067 = icmp eq %"class.net::(anonymous namespace)::PathBuilderDelegateDataImpl"* %1066, null
  br i1 %1067, label %1074, label %1068

1068:                                             ; preds = %1063
  %1069 = getelementptr inbounds %"class.net::(anonymous namespace)::PathBuilderDelegateDataImpl", %"class.net::(anonymous namespace)::PathBuilderDelegateDataImpl"* %1066, i64 0, i32 1
  %1070 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 14
  %1071 = bitcast %"struct.net::OCSPVerifyResult"* %1069 to i64*
  %1072 = bitcast %"struct.net::OCSPVerifyResult"* %1070 to i64*
  %1073 = load i64, i64* %1071, align 4
  store i64 %1073, i64* %1072, align 4
  br label %1074

1074:                                             ; preds = %1068, %1063
  %1075 = load i32, i32* %963, align 8
  %1076 = and i32 %1075, -16711681
  %1077 = icmp eq i32 %1076, 0
  br i1 %1077, label %1081, label %1078

1078:                                             ; preds = %1074
  %1079 = call i32 @_ZN3net23MapCertStatusToNetErrorEj(i32 %1075) #12
  %1080 = icmp eq i32 %1079, 0
  br i1 %1080, label %1081, label %1098

1081:                                             ; preds = %1074, %1078
  %1082 = bitcast %"class.std::__1::basic_string"* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1082) #12
  %1083 = bitcast %"class.std::__1::basic_string"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1084 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1083, i64 0, i32 1, i32 0
  store i8 8, i8* %1084, align 1
  %1085 = bitcast %"class.std::__1::basic_string"* %49 to i64*
  store i64 7956018225701274158, i64* %1085, align 8
  %1086 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1087 = bitcast i64* %1086 to i8*
  store i8 0, i8* %1087, align 8
  %1088 = getelementptr inbounds %"class.net::CertVerifyResult", %"class.net::CertVerifyResult"* %8, i64 0, i32 2, i32 0
  %1089 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %1088, align 8
  %1090 = load i8, i8* %795, align 8, !range !10
  %1091 = icmp ne i8 %1090, 0
  call void @_ZN3net14CertVerifyProc27LogNameNormalizationMetricsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS_15X509CertificateEb(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %49, %"class.net::X509Certificate"* %1089, i1 zeroext %1091) #12
  %1092 = load i8, i8* %1084, align 1
  %1093 = icmp slt i8 %1092, 0
  br i1 %1093, label %1094, label %1097

1094:                                             ; preds = %1081
  %1095 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1096 = load i8*, i8** %1095, align 8
  call void @_ZdlPv(i8* %1096) #13
  br label %1097

1097:                                             ; preds = %1081, %1094
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1082) #12
  br label %1098

1098:                                             ; preds = %702, %1097, %1078
  %1099 = phi i32 [ 0, %1097 ], [ %1079, %1078 ], [ -202, %702 ]
  call void @_ZN3net15CertPathBuilder6ResultD1Ev(%"struct.net::CertPathBuilder::Result"* nonnull %47) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %367) #12
  %1100 = load %"struct.net::(anonymous namespace)::BuildPathAttempt"*, %"struct.net::(anonymous namespace)::BuildPathAttempt"** %176, align 8
  %1101 = icmp eq %"struct.net::(anonymous namespace)::BuildPathAttempt"* %1100, null
  br i1 %1101, label %1105, label %1102

1102:                                             ; preds = %1098
  %1103 = ptrtoint %"struct.net::(anonymous namespace)::BuildPathAttempt"* %1100 to i64
  store i64 %1103, i64* %366, align 8
  %1104 = bitcast %"struct.net::(anonymous namespace)::BuildPathAttempt"* %1100 to i8*
  call void @_ZdlPv(i8* %1104) #13
  br label %1105

1105:                                             ; preds = %1102, %1098
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %175) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %45) #12
  call void @_ZN3net20TrustStoreCollectionD1Ev(%"class.net::TrustStoreCollection"* %149) #12
  call void @_ZN3net18TrustStoreInMemoryD1Ev(%"class.net::TrustStoreInMemory"* %148) #12
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %142) #12
  call void @_ZN3net22CertIssuerSourceStaticD1Ev(%"class.net::CertIssuerSourceStatic"* nonnull %42) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %104) #12
  %1106 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %87, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1107 = atomicrmw sub i32* %1106, i32 1 acq_rel
  %1108 = icmp eq i32 %1107, 1
  br i1 %1108, label %1109, label %1111

1109:                                             ; preds = %1105
  call void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"* nonnull %87) #12
  %1110 = bitcast %"class.net::ParsedCertificate"* %87 to i8*
  call void @_ZdlPv(i8* %1110) #13
  br label %1111

1111:                                             ; preds = %1109, %1105, %99, %61
  %1112 = phi i32 [ -202, %61 ], [ -207, %99 ], [ %1099, %1105 ], [ %1099, %1109 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #12
  ret i32 %1112
}

; Function Attrs: nounwind
declare void @_ZN3net14CertVerifyProcD2Ev(%"class.net::CertVerifyProc"*) unnamed_addr #8

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #3

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #3

declare zeroext i1 @_ZN3net3der27EncodeTimeAsGeneralizedTimeERKN4base4TimeEPNS0_15GeneralizedTimeE(%"class.base::Time"* dereferenceable(8), %"struct.net::der::GeneralizedTime"*) local_unnamed_addr #3

declare void @_ZN3net10CertErrorsC1Ev(%"class.net::CertErrors"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net10CertErrorsD1Ev(%"class.net::CertErrors"*) unnamed_addr #8

declare void @_ZN3net22CertIssuerSourceStaticC1Ev(%"class.net::CertIssuerSourceStatic"*) unnamed_addr #3

declare %"class.net::EVRootCAMetadata"* @_ZN3net16EVRootCAMetadata11GetInstanceEv() local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN3net15CertPathBuilder6ResultC1Ev(%"struct.net::CertPathBuilder::Result"*) unnamed_addr #3

declare dereferenceable(80) %"struct.net::CertPathBuilder::Result"* @_ZN3net15CertPathBuilder6ResultaSEOS1_(%"struct.net::CertPathBuilder::Result"*, %"struct.net::CertPathBuilder::Result"* dereferenceable(80)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net15CertPathBuilder6ResultD1Ev(%"struct.net::CertPathBuilder::Result"*) unnamed_addr #8

declare zeroext i1 @_ZNK3net15CertPathBuilder6Result12HasValidPathEv(%"struct.net::CertPathBuilder::Result"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK3net15CertPathBuilder6Result20AnyPathContainsErrorEPKv(%"struct.net::CertPathBuilder::Result"*, i8*) local_unnamed_addr #3

declare void @_ZN3net14CertVerifyProc27LogNameNormalizationMetricsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS_15X509CertificateEb(%"class.std::__1::basic_string"* dereferenceable(24), %"class.net::X509Certificate"*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net22CertIssuerSourceStaticD1Ev(%"class.net::CertIssuerSourceStatic"*) unnamed_addr #8

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #9

declare %"class.net::ParsedCertificate"* @_ZN3net17ParsedCertificate6CreateENSt3__110unique_ptrI16crypto_buffer_stN4bssl8internal7DeleterIS3_EEEERKNS_23ParseCertificateOptionsEPNS_10CertErrorsE(%struct.crypto_buffer_st*, %"struct.net::ParseCertificateOptions"* dereferenceable(1), %"class.net::CertErrors"*) local_unnamed_addr #3

declare i8 @_ZN3net9x509_util30DefaultParseCertificateOptionsEv() local_unnamed_addr #3

declare i32 @CRYPTO_BUFFER_up_ref(%struct.crypto_buffer_st*) local_unnamed_addr #3

declare void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"*, i32, %"struct.net::NetLogSource"* dereferenceable(16), i32, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3net12_GLOBAL__N_116NetLogCertParamsEPK16crypto_buffer_stRKNS_10CertErrorsE(%"class.base::Value"* noalias sret, %struct.crypto_buffer_st*, %"class.net::CertErrors"* dereferenceable(24)) unnamed_addr #2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.base::Value"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 32, i1 false)
  tail call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* %0, i8 zeroext 6) #12
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #12
  %9 = tail call { i8*, i64 } @_ZN3net9x509_util25CryptoBufferAsStringPieceEPK16crypto_buffer_st(%struct.crypto_buffer_st* %1) #12
  %10 = extractvalue { i8*, i64 } %9, 0
  %11 = extractvalue { i8*, i64 } %9, 1
  %12 = call zeroext i1 @_ZN3net15X509Certificate20GetPEMEncodedFromDEREN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(i8* %10, i64 %11, %"class.std::__1::basic_string"* nonnull %4) #12
  br i1 %12, label %13, label %25

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = load i8*, i8** %8, align 8
  %20 = select i1 %18, i8* %19, i8* %7
  %21 = load i64, i64* %14, align 8
  %22 = zext i8 %17 to i64
  %23 = select i1 %18, i64 %21, i64 %22
  %24 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), i64 11, i8* %20, i64 %23) #12
  br label %25

25:                                               ; preds = %13, %3
  %26 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #12
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false)
  call void @_ZNK3net10CertErrors13ToDebugStringEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.net::CertErrors"* %2) #12
  %30 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = load i64, i64* %28, align 8
  %35 = zext i8 %32 to i64
  %36 = select i1 %33, i64 %34, i64 %35
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %25
  %39 = load i8*, i8** %27, align 8
  %40 = select i1 %33, i8* %39, i8* %26
  %41 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i64 6, i8* %40, i64 %36) #12
  %42 = load i8, i8* %31, align 1
  br label %43

43:                                               ; preds = %38, %25
  %44 = phi i8 [ %42, %38 ], [ %32, %25 ]
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %43
  %47 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %47) #13
  br label %48

48:                                               ; preds = %43, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #12
  %49 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %48
  %54 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %54) #13
  br label %55

55:                                               ; preds = %48, %53
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #12
  ret void
}

declare void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"*, i8 zeroext) unnamed_addr #3

declare zeroext i1 @_ZN3net15X509Certificate20GetPEMEncodedFromDEREN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #3

declare { i8*, i64 } @_ZN3net9x509_util25CryptoBufferAsStringPieceEPK16crypto_buffer_st(%struct.crypto_buffer_st*) local_unnamed_addr #3

declare %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"*, i8*, i64, i8*, i64) local_unnamed_addr #3

declare void @_ZNK3net10CertErrors13ToDebugStringEv(%"class.std::__1::basic_string"* sret, %"class.net::CertErrors"*) local_unnamed_addr #3

declare void @_ZN3net22CertIssuerSourceStatic7AddCertE13scoped_refptrINS_17ParsedCertificateEE(%"class.net::CertIssuerSourceStatic"*, %"class.net::ParsedCertificate"*) local_unnamed_addr #3

declare void @_ZN3net18TrustStoreInMemoryC1Ev(%"class.net::TrustStoreInMemory"*) unnamed_addr #3

declare void @_ZN3net20TrustStoreCollectionC1Ev(%"class.net::TrustStoreCollection"*) unnamed_addr #3

declare void @_ZN3net20TrustStoreCollection13AddTrustStoreEPNS_10TrustStoreE(%"class.net::TrustStoreCollection"*, %"class.net::TrustStore"*) local_unnamed_addr #3

declare zeroext i1 @_ZN3net13TestRootCerts11HasInstanceEv() local_unnamed_addr #3

declare %"class.net::TestRootCerts"* @_ZN3net13TestRootCerts11GetInstanceEv() local_unnamed_addr #3

declare void @_ZN3net18TrustStoreInMemory14AddTrustAnchorE13scoped_refptrINS_17ParsedCertificateEE(%"class.net::TrustStoreInMemory"*, %"class.net::ParsedCertificate"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net17ParsedCertificateD1Ev(%"class.net::ParsedCertificate"*) unnamed_addr #8

declare zeroext i1 @_ZNK3net16EVRootCAMetadata23IsEVPolicyOIDGivenBytesERKNS_3der5InputE(%"class.net::EVRootCAMetadata"*, %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.282"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.282"* %0, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.282"* %0, %"class.std::__1::__tree_node"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.282"*, %"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.282", %"class.std::__1::__tree.282"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %35, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.282", %"class.std::__1::__tree.282"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %31, %8
  %11 = phi %"class.std::__1::__tree_node"* [ %34, %31 ], [ %6, %8 ]
  %12 = phi %"class.std::__1::__tree_node_base"** [ %33, %31 ], [ %9, %8 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 1
  %14 = tail call zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %1, %"class.net::der::Input"* dereferenceable(16) %13) #12
  br i1 %14, label %15, label %21

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %31

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %37

21:                                               ; preds = %10
  %22 = tail call zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %13, %"class.net::der::Input"* dereferenceable(16) %1) #12
  br i1 %22, label %23, label %29

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 1
  %25 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node_base"* %25, null
  br i1 %26, label %27, label %31

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %37

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %37

31:                                               ; preds = %23, %15
  %32 = phi %"class.std::__1::__tree_node_base"* [ %17, %15 ], [ %25, %23 ]
  %33 = phi %"class.std::__1::__tree_node_base"** [ %16, %15 ], [ %24, %23 ]
  %34 = bitcast %"class.std::__1::__tree_node_base"* %32 to %"class.std::__1::__tree_node"*
  br label %10

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %37

37:                                               ; preds = %19, %27, %29, %35
  %38 = phi %"class.std::__1::__tree_end_node"* [ %4, %35 ], [ %20, %19 ], [ %28, %27 ], [ %30, %29 ]
  %39 = phi %"class.std::__1::__tree_node_base"** [ %36, %35 ], [ %16, %19 ], [ %24, %27 ], [ %12, %29 ]
  %40 = bitcast %"class.std::__1::__tree_node_base"** %39 to %"class.std::__1::__tree_node"**
  %41 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node"* %41, null
  br i1 %42, label %43, label %68

43:                                               ; preds = %37
  %44 = tail call i8* @_Znwm(i64 48) #13, !noalias !38
  %45 = getelementptr inbounds i8, i8* %44, i64 32
  %46 = bitcast %"class.net::der::Input"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 16, i1 false) #12, !noalias !38
  %47 = bitcast i8* %44 to %"class.std::__1::__tree_node"*
  %48 = bitcast i8* %44 to %"class.std::__1::__tree_node_base"*
  %49 = getelementptr inbounds i8, i8* %44, i64 16
  %50 = bitcast i8* %49 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %38, %"class.std::__1::__tree_end_node"** %50, align 8
  %51 = bitcast %"class.std::__1::__tree_node_base"** %39 to i8**
  store i8* %44, i8** %51, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree.282", %"class.std::__1::__tree.282"* %0, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 0, i32 0
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, null
  br i1 %56, label %61, label %57

57:                                               ; preds = %43
  %58 = ptrtoint %"class.std::__1::__tree_node_base"* %55 to i64
  %59 = bitcast %"class.std::__1::__tree.282"* %0 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  br label %61

61:                                               ; preds = %57, %43
  %62 = phi %"class.std::__1::__tree_node_base"* [ %48, %43 ], [ %60, %57 ]
  %63 = getelementptr inbounds %"class.std::__1::__tree.282", %"class.std::__1::__tree.282"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %64, %"class.std::__1::__tree_node_base"* %62) #12
  %65 = getelementptr inbounds %"class.std::__1::__tree.282", %"class.std::__1::__tree.282"* %0, i64 0, i32 2, i32 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, 1
  store i64 %67, i64* %65, align 8
  br label %68

68:                                               ; preds = %61, %37
  %69 = phi i8 [ 1, %61 ], [ 0, %37 ]
  %70 = phi %"class.std::__1::__tree_node"* [ %47, %61 ], [ %41, %37 ]
  %71 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %70, i64 0, i32 0, i32 0
  %72 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %71, 0
  %73 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %72, i8 %69, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %73
}

declare zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #2 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !10
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !10
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !10
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #8

declare void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"*) unnamed_addr #3

declare %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"*, i8*, i64, i1 zeroext) local_unnamed_addr #3

declare %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"*, i8*, i64, i32) local_unnamed_addr #3

declare { i8*, i64 } @_ZN3net9AnyPolicyEv() local_unnamed_addr #3

declare void @_ZN3net15CertPathBuilderC1E13scoped_refptrINS_17ParsedCertificateEEPNS_10TrustStoreEPNS_23CertPathBuilderDelegateERKNS_3der15GeneralizedTimeENS_10KeyPurposeENS_21InitialExplicitPolicyERKNSt3__13setINS8_5InputENSE_4lessISG_EENSE_9allocatorISG_EEEENS_27InitialPolicyMappingInhibitENS_23InitialAnyPolicyInhibitE(%"class.net::CertPathBuilder"*, %"class.net::ParsedCertificate"*, %"class.net::TrustStore"*, %"class.net::CertPathBuilderDelegate"*, %"struct.net::der::GeneralizedTime"* dereferenceable(8), i32, i32, %"class.std::__1::set.281"* dereferenceable(24), i32, i32) unnamed_addr #3

declare void @_ZN3net15CertPathBuilder19AddCertIssuerSourceEPNS_16CertIssuerSourceE(%"class.net::CertPathBuilder"*, %"class.net::CertIssuerSource"*) local_unnamed_addr #3

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #3

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #8

declare void @_ZN3net15CertPathBuilder17SetIterationLimitEj(%"class.net::CertPathBuilder"*, i32) local_unnamed_addr #3

declare void @_ZN3net15CertPathBuilder11SetDeadlineEN4base9TimeTicksE(%"class.net::CertPathBuilder"*, i64) local_unnamed_addr #3

declare void @_ZN3net15CertPathBuilder3RunEv(%"struct.net::CertPathBuilder::Result"* sret, %"class.net::CertPathBuilder"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net15CertPathBuilderD1Ev(%"class.net::CertPathBuilder"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN3net30VerifyCertificateChainDelegateD2Ev(%"class.net::VerifyCertificateChainDelegate"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE15__assign_uniqueIPKS3_EEvT_SC_(%"class.std::__1::__tree.282"*, %"class.net::der::Input"*, %"class.net::der::Input"*) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.282", %"class.std::__1::__tree.282"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %173, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.std::__1::__tree.282", %"class.std::__1::__tree.282"* %0, i64 0, i32 0
  %9 = bitcast %"class.std::__1::__tree.282"* %0 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree.282", %"class.std::__1::__tree.282"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %13, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* null, %"class.std::__1::__tree_end_node"** %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::__tree_end_node"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #12
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %15, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  %19 = bitcast %"class.std::__1::__tree_node_base"* %17 to %"class.std::__1::__tree_node"*
  %20 = select i1 %18, %"class.std::__1::__tree_node"* %10, %"class.std::__1::__tree_node"* %19
  %21 = ptrtoint %"class.std::__1::__tree_node"* %20 to i64
  %22 = icmp eq %"class.std::__1::__tree_node"* %20, null
  br i1 %22, label %153, label %23

23:                                               ; preds = %7
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 0, i32 2
  %25 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_end_node"* %25, null
  br i1 %26, label %72, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.std::__1::__tree_node"* %20 to %"class.std::__1::__tree_node_base"*
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 0, i32 0
  %30 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node_base"* %30, %28
  br i1 %31, label %32, label %51

32:                                               ; preds = %27
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %29, align 8
  %33 = bitcast %"class.std::__1::__tree_end_node"** %24 to %"class.std::__1::__tree_node"**
  %34 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 0, i32 1
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %72, label %38

38:                                               ; preds = %32, %47
  %39 = phi %"class.std::__1::__tree_node_base"* [ %48, %47 ], [ %36, %32 ]
  %40 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, null
  br i1 %42, label %43, label %47

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %39, i64 0, i32 1
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node_base"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %43, %38
  %48 = phi %"class.std::__1::__tree_node_base"* [ %41, %38 ], [ %45, %43 ]
  br label %38

49:                                               ; preds = %43
  %50 = bitcast %"class.std::__1::__tree_node_base"* %39 to %"class.std::__1::__tree_node"*
  br label %72

51:                                               ; preds = %27
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %52, align 8
  %53 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %24, align 8
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 0, i32 0
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, null
  br i1 %56, label %57, label %59

57:                                               ; preds = %51
  %58 = bitcast %"class.std::__1::__tree_end_node"* %53 to %"class.std::__1::__tree_node"*
  br label %72

59:                                               ; preds = %51, %68
  %60 = phi %"class.std::__1::__tree_node_base"* [ %69, %68 ], [ %55, %51 ]
  %61 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, null
  br i1 %63, label %64, label %68

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %60, i64 0, i32 1
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %64, %59
  %69 = phi %"class.std::__1::__tree_node_base"* [ %62, %59 ], [ %66, %64 ]
  br label %59

70:                                               ; preds = %64
  %71 = bitcast %"class.std::__1::__tree_node_base"* %60 to %"class.std::__1::__tree_node"*
  br label %72

72:                                               ; preds = %23, %32, %49, %57, %70
  %73 = phi %"class.std::__1::__tree_node"* [ %50, %49 ], [ %58, %57 ], [ %71, %70 ], [ null, %23 ], [ %34, %32 ]
  %74 = ptrtoint %"class.std::__1::__tree_node"* %73 to i64
  %75 = icmp eq %"class.net::der::Input"* %1, %2
  %76 = or i1 %22, %75
  br i1 %76, label %153, label %77

77:                                               ; preds = %72, %143
  %78 = phi %"class.std::__1::__tree_node"* [ %147, %143 ], [ %20, %72 ]
  %79 = phi %"class.net::der::Input"* [ %146, %143 ], [ %1, %72 ]
  %80 = phi i64 [ %145, %143 ], [ %74, %72 ]
  %81 = phi i64 [ %144, %143 ], [ %21, %72 ]
  %82 = tail call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE20__node_assign_uniqueERKS3_PNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.282"* %0, %"class.net::der::Input"* dereferenceable(16) %79, %"class.std::__1::__tree_node"* nonnull %78)
  %83 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %82, 1
  %84 = and i8 %83, 1
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %143, label %86

86:                                               ; preds = %77
  %87 = icmp eq i64 %80, 0
  br i1 %87, label %88, label %90

88:                                               ; preds = %86
  %89 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %79, i64 1
  tail call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.282"* %0, %"class.std::__1::__tree_node"* null) #12
  br label %173

90:                                               ; preds = %86
  %91 = inttoptr i64 %80 to %"class.std::__1::__tree_node"*
  %92 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %91, i64 0, i32 0, i32 2
  %93 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %92, align 8
  %94 = icmp eq %"class.std::__1::__tree_end_node"* %93, null
  br i1 %94, label %140, label %95

95:                                               ; preds = %90
  %96 = inttoptr i64 %80 to %"class.std::__1::__tree_node_base"*
  %97 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %93, i64 0, i32 0
  %98 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %97, align 8
  %99 = icmp eq %"class.std::__1::__tree_node_base"* %98, %96
  br i1 %99, label %100, label %119

100:                                              ; preds = %95
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %97, align 8
  %101 = bitcast %"class.std::__1::__tree_end_node"** %92 to %"class.std::__1::__tree_node"**
  %102 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %101, align 8
  %103 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %102, i64 0, i32 0, i32 1
  %104 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %103, align 8
  %105 = icmp eq %"class.std::__1::__tree_node_base"* %104, null
  br i1 %105, label %140, label %106

106:                                              ; preds = %100, %115
  %107 = phi %"class.std::__1::__tree_node_base"* [ %116, %115 ], [ %104, %100 ]
  %108 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %107, i64 0, i32 0, i32 0
  %109 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %108, align 8
  %110 = icmp eq %"class.std::__1::__tree_node_base"* %109, null
  br i1 %110, label %111, label %115

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %107, i64 0, i32 1
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %112, align 8
  %114 = icmp eq %"class.std::__1::__tree_node_base"* %113, null
  br i1 %114, label %117, label %115

115:                                              ; preds = %111, %106
  %116 = phi %"class.std::__1::__tree_node_base"* [ %109, %106 ], [ %113, %111 ]
  br label %106

117:                                              ; preds = %111
  %118 = bitcast %"class.std::__1::__tree_node_base"* %107 to %"class.std::__1::__tree_node"*
  br label %140

119:                                              ; preds = %95
  %120 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %93, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %120, align 8
  %121 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %92, align 8
  %122 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %121, i64 0, i32 0
  %123 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %122, align 8
  %124 = icmp eq %"class.std::__1::__tree_node_base"* %123, null
  br i1 %124, label %125, label %127

125:                                              ; preds = %119
  %126 = bitcast %"class.std::__1::__tree_end_node"* %121 to %"class.std::__1::__tree_node"*
  br label %140

127:                                              ; preds = %119, %136
  %128 = phi %"class.std::__1::__tree_node_base"* [ %137, %136 ], [ %123, %119 ]
  %129 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %128, i64 0, i32 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, null
  br i1 %131, label %132, label %136

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %128, i64 0, i32 1
  %134 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %133, align 8
  %135 = icmp eq %"class.std::__1::__tree_node_base"* %134, null
  br i1 %135, label %138, label %136

136:                                              ; preds = %132, %127
  %137 = phi %"class.std::__1::__tree_node_base"* [ %130, %127 ], [ %134, %132 ]
  br label %127

138:                                              ; preds = %132
  %139 = bitcast %"class.std::__1::__tree_node_base"* %128 to %"class.std::__1::__tree_node"*
  br label %140

140:                                              ; preds = %138, %125, %117, %100, %90
  %141 = phi %"class.std::__1::__tree_node"* [ %118, %117 ], [ %126, %125 ], [ %139, %138 ], [ null, %90 ], [ %102, %100 ]
  %142 = ptrtoint %"class.std::__1::__tree_node"* %141 to i64
  br label %143

143:                                              ; preds = %140, %77
  %144 = phi i64 [ %81, %77 ], [ %80, %140 ]
  %145 = phi i64 [ %80, %77 ], [ %142, %140 ]
  %146 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %79, i64 1
  %147 = inttoptr i64 %144 to %"class.std::__1::__tree_node"*
  %148 = icmp eq i64 %144, 0
  %149 = icmp eq %"class.net::der::Input"* %146, %2
  %150 = or i1 %148, %149
  br i1 %150, label %151, label %77

151:                                              ; preds = %143
  %152 = inttoptr i64 %144 to %"class.std::__1::__tree_node"*
  br label %153

153:                                              ; preds = %151, %7, %72
  %154 = phi i64 [ %74, %72 ], [ %21, %7 ], [ %145, %151 ]
  %155 = phi %"class.net::der::Input"* [ %1, %72 ], [ %1, %7 ], [ %146, %151 ]
  %156 = phi %"class.std::__1::__tree_node"* [ %20, %72 ], [ null, %7 ], [ %152, %151 ]
  tail call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.282"* %0, %"class.std::__1::__tree_node"* %156) #12
  %157 = inttoptr i64 %154 to %"class.std::__1::__tree_node"*
  %158 = icmp eq i64 %154, 0
  br i1 %158, label %173, label %159

159:                                              ; preds = %153
  %160 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %157, i64 0, i32 0, i32 2
  %161 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %160, align 8
  %162 = icmp eq %"class.std::__1::__tree_end_node"* %161, null
  br i1 %162, label %171, label %163

163:                                              ; preds = %159, %163
  %164 = phi %"class.std::__1::__tree_end_node"* [ %167, %163 ], [ %161, %159 ]
  %165 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %164, i64 2
  %166 = bitcast %"class.std::__1::__tree_end_node"* %165 to %"class.std::__1::__tree_end_node"**
  %167 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %166, align 8
  %168 = icmp eq %"class.std::__1::__tree_end_node"* %167, null
  br i1 %168, label %169, label %163

169:                                              ; preds = %163
  %170 = bitcast %"class.std::__1::__tree_end_node"* %164 to %"class.std::__1::__tree_node"*
  br label %171

171:                                              ; preds = %169, %159
  %172 = phi %"class.std::__1::__tree_node"* [ %157, %159 ], [ %170, %169 ]
  tail call void @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.282"* %0, %"class.std::__1::__tree_node"* %172) #12
  br label %173

173:                                              ; preds = %88, %171, %153, %3
  %174 = phi %"class.net::der::Input"* [ %1, %3 ], [ %155, %153 ], [ %155, %171 ], [ %89, %88 ]
  %175 = icmp eq %"class.net::der::Input"* %174, %2
  br i1 %175, label %181, label %176

176:                                              ; preds = %173, %176
  %177 = phi %"class.net::der::Input"* [ %179, %176 ], [ %174, %173 ]
  %178 = tail call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.282"* %0, %"class.net::der::Input"* dereferenceable(16) %177, %"class.net::der::Input"* dereferenceable(16) %177) #12
  %179 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %177, i64 1
  %180 = icmp eq %"class.net::der::Input"* %179, %2
  br i1 %180, label %181, label %176

181:                                              ; preds = %176, %173
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE20__node_assign_uniqueERKS3_PNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.282"*, %"class.net::der::Input"* dereferenceable(16), %"class.std::__1::__tree_node"*) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.282", %"class.std::__1::__tree.282"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %35, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.282", %"class.std::__1::__tree.282"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %31, %8
  %11 = phi %"class.std::__1::__tree_node"* [ %34, %31 ], [ %6, %8 ]
  %12 = phi %"class.std::__1::__tree_node_base"** [ %33, %31 ], [ %9, %8 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 1
  %14 = tail call zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %1, %"class.net::der::Input"* dereferenceable(16) %13) #12
  br i1 %14, label %15, label %21

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %31

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %37

21:                                               ; preds = %10
  %22 = tail call zeroext i1 @_ZN3net3derltERKNS0_5InputES3_(%"class.net::der::Input"* dereferenceable(16) %13, %"class.net::der::Input"* dereferenceable(16) %1) #12
  br i1 %22, label %23, label %29

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 1
  %25 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node_base"* %25, null
  br i1 %26, label %27, label %31

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %37

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %37

31:                                               ; preds = %23, %15
  %32 = phi %"class.std::__1::__tree_node_base"* [ %17, %15 ], [ %25, %23 ]
  %33 = phi %"class.std::__1::__tree_node_base"** [ %16, %15 ], [ %24, %23 ]
  %34 = bitcast %"class.std::__1::__tree_node_base"* %32 to %"class.std::__1::__tree_node"*
  br label %10

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %37

37:                                               ; preds = %19, %27, %29, %35
  %38 = phi %"class.std::__1::__tree_end_node"* [ %4, %35 ], [ %20, %19 ], [ %28, %27 ], [ %30, %29 ]
  %39 = phi %"class.std::__1::__tree_node_base"** [ %36, %35 ], [ %16, %19 ], [ %24, %27 ], [ %12, %29 ]
  %40 = bitcast %"class.std::__1::__tree_node_base"** %39 to %"class.std::__1::__tree_node"**
  %41 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node"* %41, null
  br i1 %42, label %43, label %66

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2, i64 0, i32 1
  %45 = bitcast %"class.net::der::Input"* %44 to i8*
  %46 = bitcast %"class.net::der::Input"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 16, i1 false)
  %47 = bitcast %"class.std::__1::__tree_node"* %2 to %"class.std::__1::__tree_node_base"*
  %48 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %2, i64 0, i32 0, i32 2
  %49 = bitcast %"class.std::__1::__tree_node"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %38, %"class.std::__1::__tree_end_node"** %48, align 8
  store %"class.std::__1::__tree_node"* %2, %"class.std::__1::__tree_node"** %40, align 8
  %50 = getelementptr inbounds %"class.std::__1::__tree.282", %"class.std::__1::__tree.282"* %0, i64 0, i32 0
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %50, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, null
  br i1 %54, label %59, label %55

55:                                               ; preds = %43
  %56 = ptrtoint %"class.std::__1::__tree_node_base"* %53 to i64
  %57 = bitcast %"class.std::__1::__tree.282"* %0 to i64*
  store i64 %56, i64* %57, align 8
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  br label %59

59:                                               ; preds = %43, %55
  %60 = phi %"class.std::__1::__tree_node_base"* [ %47, %43 ], [ %58, %55 ]
  %61 = getelementptr inbounds %"class.std::__1::__tree.282", %"class.std::__1::__tree.282"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"* %60) #12
  %63 = getelementptr inbounds %"class.std::__1::__tree.282", %"class.std::__1::__tree.282"* %0, i64 0, i32 2, i32 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %64, 1
  store i64 %65, i64* %63, align 8
  br label %66

66:                                               ; preds = %59, %37
  %67 = phi i8 [ 1, %59 ], [ 0, %37 ]
  %68 = phi %"class.std::__1::__tree_node"* [ %2, %59 ], [ %41, %37 ]
  %69 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %68, i64 0, i32 0, i32 0
  %70 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %69, 0
  %71 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %70, i8 %67, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %71
}

declare void @_ZN3net25SimplePathBuilderDelegateC2EmNS0_12DigestPolicyE(%"class.net::SimplePathBuilderDelegate"*, i64, i32) unnamed_addr #3

declare zeroext i1 @_ZN3net25SimplePathBuilderDelegate30IsSignatureAlgorithmAcceptableERKNS_18SignatureAlgorithmEPNS_10CertErrorsE(%"class.net::SimplePathBuilderDelegate"*, %"class.net::SignatureAlgorithm"* dereferenceable(16), %"class.net::CertErrors"*) unnamed_addr #3

declare zeroext i1 @_ZN3net25SimplePathBuilderDelegate21IsPublicKeyAcceptableEP11evp_pkey_stPNS_10CertErrorsE(%"class.net::SimplePathBuilderDelegate"*, %struct.evp_pkey_st*, %"class.net::CertErrors"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_123PathBuilderDelegateImplD0Ev(%"class.net::(anonymous namespace)::PathBuilderDelegateImpl"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::PathBuilderDelegateImpl", %"class.net::(anonymous namespace)::PathBuilderDelegateImpl"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN3net30VerifyCertificateChainDelegateD2Ev(%"class.net::VerifyCertificateChainDelegate"* %2) #12
  %3 = bitcast %"class.net::(anonymous namespace)::PathBuilderDelegateImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_123PathBuilderDelegateImpl26CheckPathAfterVerificationERKNS_15CertPathBuilderEPNS_25CertPathBuilderResultPathE(%"class.net::(anonymous namespace)::PathBuilderDelegateImpl"* nocapture readonly, %"class.net::CertPathBuilder"* nocapture readonly dereferenceable(168), %"struct.net::CertPathBuilderResultPath"*) unnamed_addr #2 align 2 {
  %4 = alloca %"struct.net::RevocationPolicy", align 1
  %5 = alloca %"struct.net::RevocationPolicy", align 1
  %6 = alloca %"struct.net::RevocationPolicy", align 1
  %7 = alloca %"struct.net::SHA256HashValue", align 1
  %8 = alloca %"struct.net::RevocationPolicy", align 1
  %9 = tail call zeroext i1 @_ZNK3net25CertPathBuilderResultPath7IsValidEv(%"struct.net::CertPathBuilderResultPath"* %2) #12
  br i1 %9, label %10, label %174

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.net::(anonymous namespace)::PathBuilderDelegateImpl", %"class.net::(anonymous namespace)::PathBuilderDelegateImpl"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %71

14:                                               ; preds = %10
  %15 = tail call %"class.net::ParsedCertificate"* @_ZNK3net25CertPathBuilderResultPath14GetTrustedCertEv(%"struct.net::CertPathBuilderResultPath"* %2) #12
  %16 = icmp eq %"class.net::ParsedCertificate"* %15, null
  br i1 %16, label %68, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"struct.net::SHA256HashValue", %"struct.net::SHA256HashValue"* %7, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %15, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %18, i8 -86, i64 32, i1 false) #12
  %20 = tail call { i8*, i64 } @_ZNK3net3der5Input13AsStringPieceEv(%"class.net::der::Input"* %19) #12
  %21 = extractvalue { i8*, i64 } %20, 0
  %22 = extractvalue { i8*, i64 } %20, 1
  call void @_ZN6crypto16SHA256HashStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPvm(i8* %21, i64 %22, i8* nonnull %18, i64 32) #12
  %23 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %2, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %23, align 8
  %25 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %2, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %26 = icmp eq %"class.std::__1::__tree_end_node"* %24, %25
  br i1 %26, label %66, label %27

27:                                               ; preds = %17
  %28 = getelementptr inbounds %"class.net::(anonymous namespace)::PathBuilderDelegateImpl", %"class.net::(anonymous namespace)::PathBuilderDelegateImpl"* %0, i64 0, i32 7
  br label %29

29:                                               ; preds = %63, %27
  %30 = phi %"class.std::__1::__tree_end_node"* [ %24, %27 ], [ %64, %63 ]
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %30, i64 4
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.net::der::Input"*
  %33 = load %"class.net::EVRootCAMetadata"*, %"class.net::EVRootCAMetadata"** %28, align 8
  %34 = call zeroext i1 @_ZNK3net16EVRootCAMetadata24HasEVPolicyOIDGivenBytesERKNS_15SHA256HashValueERKNS_3der5InputE(%"class.net::EVRootCAMetadata"* %33, %"struct.net::SHA256HashValue"* nonnull dereferenceable(32) %7, %"class.net::der::Input"* dereferenceable(16) %32) #12
  br i1 %34, label %67, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %30, i64 1, i32 0
  %37 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %36, align 8
  %38 = icmp eq %"class.std::__1::__tree_node_base"* %37, null
  br i1 %38, label %39, label %47

39:                                               ; preds = %35
  %40 = bitcast %"class.std::__1::__tree_end_node"* %30 to %"class.std::__1::__tree_node_base"*
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %30, i64 2
  %42 = bitcast %"class.std::__1::__tree_end_node"* %41 to %"class.std::__1::__tree_end_node"**
  %43 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %43, i64 0, i32 0
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node_base"* %45, %40
  br i1 %46, label %63, label %54

47:                                               ; preds = %35, %47
  %48 = phi %"class.std::__1::__tree_node_base"* [ %50, %47 ], [ %37, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %48, i64 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %47

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %48, i64 0, i32 0
  br label %63

54:                                               ; preds = %39, %54
  %55 = phi %"class.std::__1::__tree_end_node"** [ %58, %54 ], [ %42, %39 ]
  %56 = bitcast %"class.std::__1::__tree_end_node"** %55 to %"class.std::__1::__tree_node_base"**
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %57, i64 0, i32 2
  %59 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %58, align 8
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %59, i64 0, i32 0
  %61 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_node_base"* %61, %57
  br i1 %62, label %63, label %54

63:                                               ; preds = %54, %52, %39
  %64 = phi %"class.std::__1::__tree_end_node"* [ %53, %52 ], [ %43, %39 ], [ %59, %54 ]
  %65 = icmp eq %"class.std::__1::__tree_end_node"* %64, %25
  br i1 %65, label %66, label %29

66:                                               ; preds = %63, %17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #12
  br label %68

67:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #12
  br label %71

68:                                               ; preds = %14, %66
  %69 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %2, i64 0, i32 4
  %70 = call %"class.net::CertErrors"* @_ZN3net14CertPathErrors16GetErrorsForCertEm(%"class.net::CertPathErrors"* %69, i64 0) #12
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %70, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.12, i64 0, i64 0)) #12
  br label %174

71:                                               ; preds = %67, %10
  %72 = getelementptr inbounds %"struct.net::RevocationPolicy", %"struct.net::RevocationPolicy"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %72) #12
  store i8 -86, i8* %72, align 1
  %73 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %2, i64 0, i32 0
  %74 = getelementptr inbounds %"struct.net::RevocationPolicy", %"struct.net::RevocationPolicy"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %74)
  %75 = getelementptr inbounds %"class.net::(anonymous namespace)::PathBuilderDelegateImpl", %"class.net::(anonymous namespace)::PathBuilderDelegateImpl"* %0, i64 0, i32 4
  %76 = load i32, i32* %75, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %101, label %79

79:                                               ; preds = %71
  %80 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %2, i64 0, i32 0, i32 0, i32 0
  %81 = load %class.scoped_refptr.105*, %class.scoped_refptr.105** %80, align 8
  %82 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %2, i64 0, i32 0, i32 0, i32 1
  %83 = load %class.scoped_refptr.105*, %class.scoped_refptr.105** %82, align 8
  %84 = icmp eq %class.scoped_refptr.105* %81, %83
  br i1 %84, label %101, label %85

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.net::(anonymous namespace)::PathBuilderDelegateImpl", %"class.net::(anonymous namespace)::PathBuilderDelegateImpl"* %0, i64 0, i32 5
  %87 = load %"class.net::(anonymous namespace)::CertVerifyProcTrustStore"*, %"class.net::(anonymous namespace)::CertVerifyProcTrustStore"** %86, align 8
  %88 = getelementptr inbounds %class.scoped_refptr.105, %class.scoped_refptr.105* %83, i64 -1, i32 0
  %89 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %88, align 8
  %90 = getelementptr inbounds %"class.net::(anonymous namespace)::CertVerifyProcTrustStore", %"class.net::(anonymous namespace)::CertVerifyProcTrustStore"* %87, i64 0, i32 0
  %91 = load %"class.net::SystemTrustStore"*, %"class.net::SystemTrustStore"** %90, align 8
  %92 = bitcast %"class.net::SystemTrustStore"* %91 to i1 (%"class.net::SystemTrustStore"*, %"class.net::ParsedCertificate"*)***
  %93 = load i1 (%"class.net::SystemTrustStore"*, %"class.net::ParsedCertificate"*)**, i1 (%"class.net::SystemTrustStore"*, %"class.net::ParsedCertificate"*)*** %92, align 8
  %94 = getelementptr inbounds i1 (%"class.net::SystemTrustStore"*, %"class.net::ParsedCertificate"*)*, i1 (%"class.net::SystemTrustStore"*, %"class.net::ParsedCertificate"*)** %93, i64 4
  %95 = load i1 (%"class.net::SystemTrustStore"*, %"class.net::ParsedCertificate"*)*, i1 (%"class.net::SystemTrustStore"*, %"class.net::ParsedCertificate"*)** %94, align 8
  %96 = call zeroext i1 %95(%"class.net::SystemTrustStore"* %91, %"class.net::ParsedCertificate"* %89) #12
  br i1 %96, label %101, label %97

97:                                               ; preds = %85
  store i8 -86, i8* %74, align 1
  call void @_ZN3net16RevocationPolicyC1Ev(%"struct.net::RevocationPolicy"* nonnull %6) #12
  %98 = load i8, i8* %74, align 1
  %99 = and i8 %98, -16
  %100 = or i8 %99, 3
  br label %120

101:                                              ; preds = %85, %79, %71
  %102 = load i32, i32* %11, align 8
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %108

104:                                              ; preds = %101
  store i8 -86, i8* %74, align 1
  call void @_ZN3net16RevocationPolicyC1Ev(%"struct.net::RevocationPolicy"* nonnull %6) #12
  %105 = load i8, i8* %74, align 1
  %106 = and i8 %105, -16
  %107 = or i8 %106, 3
  br label %120

108:                                              ; preds = %101
  %109 = load i32, i32* %75, align 4
  %110 = and i32 %109, 1
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %115, label %112

112:                                              ; preds = %108
  store i8 -86, i8* %74, align 1
  call void @_ZN3net16RevocationPolicyC1Ev(%"struct.net::RevocationPolicy"* nonnull %6) #12
  %113 = load i8, i8* %74, align 1
  %114 = or i8 %113, 15
  br label %120

115:                                              ; preds = %108
  %116 = getelementptr inbounds %"struct.net::RevocationPolicy", %"struct.net::RevocationPolicy"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %116) #12
  store i8 -86, i8* %116, align 1
  call void @_ZN3net16RevocationPolicyC1Ev(%"struct.net::RevocationPolicy"* nonnull %5) #12
  %117 = load i8, i8* %116, align 1
  %118 = and i8 %117, -16
  %119 = or i8 %118, 12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %116) #12
  br label %120

120:                                              ; preds = %97, %104, %112, %115
  %121 = phi i8 [ %100, %97 ], [ %107, %104 ], [ %114, %112 ], [ %119, %115 ]
  %122 = phi i8 [ 0, %97 ], [ 1, %104 ], [ 0, %112 ], [ 0, %115 ]
  store i8 %121, i8* %74, align 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %74)
  store i8 %121, i8* %72, align 1
  %123 = getelementptr inbounds %"class.net::(anonymous namespace)::PathBuilderDelegateImpl", %"class.net::(anonymous namespace)::PathBuilderDelegateImpl"* %0, i64 0, i32 1
  %124 = load %"class.net::CRLSet"*, %"class.net::CRLSet"** %123, align 8
  %125 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %2, i64 0, i32 4
  %126 = call i32 @_ZN3net31CheckChainRevocationUsingCRLSetEPKNS_6CRLSetERKNSt3__16vectorI13scoped_refptrINS_17ParsedCertificateEENS3_9allocatorIS7_EEEEPNS_14CertPathErrorsE(%"class.net::CRLSet"* %124, %"class.std::__1::vector.274"* dereferenceable(24) %73, %"class.net::CertPathErrors"* %125) #12
  switch i32 %126, label %134 [
    i32 0, label %173
    i32 2, label %127
  ]

127:                                              ; preds = %120
  %128 = icmp eq i8 %122, 0
  br i1 %128, label %134, label %129

129:                                              ; preds = %127
  %130 = getelementptr inbounds %"struct.net::RevocationPolicy", %"struct.net::RevocationPolicy"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %130)
  store i8 -86, i8* %130, align 1
  call void @_ZN3net16RevocationPolicyC1Ev(%"struct.net::RevocationPolicy"* nonnull %4) #12
  %131 = load i8, i8* %130, align 1
  %132 = and i8 %131, -16
  %133 = or i8 %132, 12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %130)
  store i8 %133, i8* %72, align 1
  br label %134

134:                                              ; preds = %127, %129, %120
  %135 = phi i8 [ %121, %127 ], [ %133, %129 ], [ %121, %120 ]
  %136 = and i8 %135, 1
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %141, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.net::(anonymous namespace)::PathBuilderDelegateImpl", %"class.net::(anonymous namespace)::PathBuilderDelegateImpl"* %0, i64 0, i32 8
  %140 = load i8*, i8** %139, align 8
  store i8 1, i8* %140, align 1
  br label %141

141:                                              ; preds = %134, %138
  %142 = getelementptr inbounds %"class.net::CertPathBuilder", %"class.net::CertPathBuilder"* %1, i64 0, i32 11, i32 0, i32 0
  %143 = load i64, i64* %142, align 8
  %144 = getelementptr inbounds %"class.net::(anonymous namespace)::PathBuilderDelegateImpl", %"class.net::(anonymous namespace)::PathBuilderDelegateImpl"* %0, i64 0, i32 6, i32 0
  %145 = load i8*, i8** %144, align 8
  %146 = getelementptr inbounds %"class.net::(anonymous namespace)::PathBuilderDelegateImpl", %"class.net::(anonymous namespace)::PathBuilderDelegateImpl"* %0, i64 0, i32 6, i32 1
  %147 = load i64, i64* %146, align 8
  %148 = getelementptr inbounds %"class.net::(anonymous namespace)::PathBuilderDelegateImpl", %"class.net::(anonymous namespace)::PathBuilderDelegateImpl"* %0, i64 0, i32 2
  %149 = load %"class.net::CertNetFetcher"*, %"class.net::CertNetFetcher"** %148, align 8
  %150 = getelementptr inbounds %"struct.net::CertPathBuilderResultPath", %"struct.net::CertPathBuilderResultPath"* %2, i64 0, i32 3, i32 0, i32 0, i32 0
  %151 = load %"class.net::CertPathBuilderDelegateData"*, %"class.net::CertPathBuilderDelegateData"** %150, align 8
  %152 = icmp eq %"class.net::CertPathBuilderDelegateData"* %151, null
  %153 = bitcast %"class.net::CertPathBuilderDelegateData"* %151 to %"class.net::(anonymous namespace)::PathBuilderDelegateDataImpl"*
  br i1 %152, label %154, label %170

154:                                              ; preds = %141
  %155 = call i8* @_Znwm(i64 16) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %155, i8 0, i64 16, i1 false) #12
  %156 = bitcast i8* %155 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net12_GLOBAL__N_127PathBuilderDelegateDataImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %156, align 8
  %157 = getelementptr inbounds i8, i8* %155, i64 8
  %158 = bitcast i8* %157 to %"struct.net::OCSPVerifyResult"*
  call void @_ZN3net16OCSPVerifyResultC1Ev(%"struct.net::OCSPVerifyResult"* %158) #12
  %159 = load %"class.net::CertPathBuilderDelegateData"*, %"class.net::CertPathBuilderDelegateData"** %150, align 8
  %160 = bitcast %"class.net::CertPathBuilderDelegateData"** %150 to i8**
  store i8* %155, i8** %160, align 8
  %161 = icmp eq %"class.net::CertPathBuilderDelegateData"* %159, null
  %162 = bitcast i8* %155 to %"class.net::(anonymous namespace)::PathBuilderDelegateDataImpl"*
  br i1 %161, label %170, label %163

163:                                              ; preds = %154
  %164 = bitcast %"class.net::CertPathBuilderDelegateData"* %159 to void (%"class.net::CertPathBuilderDelegateData"*)***
  %165 = load void (%"class.net::CertPathBuilderDelegateData"*)**, void (%"class.net::CertPathBuilderDelegateData"*)*** %164, align 8
  %166 = getelementptr inbounds void (%"class.net::CertPathBuilderDelegateData"*)*, void (%"class.net::CertPathBuilderDelegateData"*)** %165, i64 1
  %167 = load void (%"class.net::CertPathBuilderDelegateData"*)*, void (%"class.net::CertPathBuilderDelegateData"*)** %166, align 8
  call void %167(%"class.net::CertPathBuilderDelegateData"* nonnull %159) #12
  %168 = bitcast %"class.net::CertPathBuilderDelegateData"** %150 to %"class.net::(anonymous namespace)::PathBuilderDelegateDataImpl"**
  %169 = load %"class.net::(anonymous namespace)::PathBuilderDelegateDataImpl"*, %"class.net::(anonymous namespace)::PathBuilderDelegateDataImpl"** %168, align 8
  br label %170

170:                                              ; preds = %141, %154, %163
  %171 = phi %"class.net::(anonymous namespace)::PathBuilderDelegateDataImpl"* [ %153, %141 ], [ %162, %154 ], [ %169, %163 ]
  %172 = getelementptr inbounds %"class.net::(anonymous namespace)::PathBuilderDelegateDataImpl", %"class.net::(anonymous namespace)::PathBuilderDelegateDataImpl"* %171, i64 0, i32 1
  call void @_ZN3net29CheckValidatedChainRevocationERKNSt3__16vectorI13scoped_refptrINS_17ParsedCertificateEENS0_9allocatorIS4_EEEERKNS_16RevocationPolicyEN4base9TimeTicksENSD_16BasicStringPieceIcNS0_11char_traitsIcEEEEPNS_14CertNetFetcherEPNS_14CertPathErrorsEPNS_16OCSPVerifyResultE(%"class.std::__1::vector.274"* dereferenceable(24) %73, %"struct.net::RevocationPolicy"* nonnull dereferenceable(1) %8, i64 %143, i8* %145, i64 %147, %"class.net::CertNetFetcher"* %149, %"class.net::CertPathErrors"* %125, %"struct.net::OCSPVerifyResult"* %172) #12
  br label %173

173:                                              ; preds = %120, %170
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %72) #12
  br label %174

174:                                              ; preds = %3, %173, %68
  ret void
}

declare zeroext i1 @_ZNK3net25CertPathBuilderResultPath7IsValidEv(%"struct.net::CertPathBuilderResultPath"*) local_unnamed_addr #3

declare %"class.net::CertErrors"* @_ZN3net14CertPathErrors16GetErrorsForCertEm(%"class.net::CertPathErrors"*, i64) local_unnamed_addr #3

declare void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"*, i8*) local_unnamed_addr #3

declare i32 @_ZN3net31CheckChainRevocationUsingCRLSetEPKNS_6CRLSetERKNSt3__16vectorI13scoped_refptrINS_17ParsedCertificateEENS3_9allocatorIS7_EEEEPNS_14CertPathErrorsE(%"class.net::CRLSet"*, %"class.std::__1::vector.274"* dereferenceable(24), %"class.net::CertPathErrors"*) local_unnamed_addr #3

declare void @_ZN3net29CheckValidatedChainRevocationERKNSt3__16vectorI13scoped_refptrINS_17ParsedCertificateEENS0_9allocatorIS4_EEEERKNS_16RevocationPolicyEN4base9TimeTicksENSD_16BasicStringPieceIcNS0_11char_traitsIcEEEEPNS_14CertNetFetcherEPNS_14CertPathErrorsEPNS_16OCSPVerifyResultE(%"class.std::__1::vector.274"* dereferenceable(24), %"struct.net::RevocationPolicy"* dereferenceable(1), i64, i8*, i64, %"class.net::CertNetFetcher"*, %"class.net::CertPathErrors"*, %"struct.net::OCSPVerifyResult"*) local_unnamed_addr #3

declare %"class.net::ParsedCertificate"* @_ZNK3net25CertPathBuilderResultPath14GetTrustedCertEv(%"struct.net::CertPathBuilderResultPath"*) local_unnamed_addr #3

declare void @_ZN6crypto16SHA256HashStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPvm(i8*, i64, i8*, i64) local_unnamed_addr #3

declare { i8*, i64 } @_ZNK3net3der5Input13AsStringPieceEv(%"class.net::der::Input"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK3net16EVRootCAMetadata24HasEVPolicyOIDGivenBytesERKNS_15SHA256HashValueERKNS_3der5InputE(%"class.net::EVRootCAMetadata"*, %"struct.net::SHA256HashValue"* dereferenceable(32), %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN3net16RevocationPolicyC1Ev(%"struct.net::RevocationPolicy"*) unnamed_addr #3

declare void @_ZN3net16OCSPVerifyResultC1Ev(%"struct.net::OCSPVerifyResult"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_127PathBuilderDelegateDataImplD2Ev(%"class.net::(anonymous namespace)::PathBuilderDelegateDataImpl"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::PathBuilderDelegateDataImpl", %"class.net::(anonymous namespace)::PathBuilderDelegateDataImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net12_GLOBAL__N_127PathBuilderDelegateDataImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::PathBuilderDelegateDataImpl", %"class.net::(anonymous namespace)::PathBuilderDelegateDataImpl"* %0, i64 0, i32 1
  tail call void @_ZN3net16OCSPVerifyResultD1Ev(%"struct.net::OCSPVerifyResult"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3net12_GLOBAL__N_127PathBuilderDelegateDataImplD0Ev(%"class.net::(anonymous namespace)::PathBuilderDelegateDataImpl"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.net::(anonymous namespace)::PathBuilderDelegateDataImpl", %"class.net::(anonymous namespace)::PathBuilderDelegateDataImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net12_GLOBAL__N_127PathBuilderDelegateDataImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::(anonymous namespace)::PathBuilderDelegateDataImpl", %"class.net::(anonymous namespace)::PathBuilderDelegateDataImpl"* %0, i64 0, i32 1
  tail call void @_ZN3net16OCSPVerifyResultD1Ev(%"struct.net::OCSPVerifyResult"* %3) #12
  %4 = bitcast %"class.net::(anonymous namespace)::PathBuilderDelegateDataImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net16OCSPVerifyResultD1Ev(%"struct.net::OCSPVerifyResult"*) unnamed_addr #8

declare void @_ZN3net19CertIssuerSourceAiaC1E13scoped_refptrINS_14CertNetFetcherEE(%"class.net::CertIssuerSourceAia"*, %"class.net::CertNetFetcher"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #2 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !10
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #2 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #13
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #8

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #8

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

declare %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"*, i8*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #3

declare void @_ZNK3net14CertPathErrors13ToDebugStringERKNSt3__16vectorI13scoped_refptrINS_17ParsedCertificateEENS1_9allocatorIS5_EEEE(%"class.std::__1::basic_string"* sret, %"class.net::CertPathErrors"*, %"class.std::__1::vector.274"* dereferenceable(24)) local_unnamed_addr #3

declare void @_ZN4base5Value6AppendEONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

declare void @_ZN4base16SupportsUserData13CloneDataFromERKS0_(%"class.base::SupportsUserData"*, %"class.base::SupportsUserData"* dereferenceable(40)) local_unnamed_addr #3

declare %"struct.net::CertPathBuilderResultPath"* @_ZNK3net15CertPathBuilder6Result26GetBestPathPossiblyInvalidEv(%"struct.net::CertPathBuilder::Result"*) local_unnamed_addr #3

declare i32 @_ZN3net35GetNetTrustAnchorHistogramIdForSPKIERKNS_9HashValueE(%"class.net::HashValue"* dereferenceable(36)) local_unnamed_addr #3

declare i32 @_ZN3net23MapCertStatusToNetErrorEj(i32) local_unnamed_addr #3

declare i8* @_ZN3net9HashValue4dataEv(%"class.net::HashValue"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK3net18TrustStoreInMemory8ContainsEPKNS_17ParsedCertificateE(%"class.net::TrustStoreInMemory"*, %"class.net::ParsedCertificate"*) local_unnamed_addr #3

declare %"class.net::X509Certificate"* @_ZN3net15X509Certificate16CreateFromBufferENSt3__110unique_ptrI16crypto_buffer_stN4bssl8internal7DeleterIS3_EEEENS1_6vectorIS8_NS1_9allocatorIS8_EEEE(%struct.crypto_buffer_st*, %"class.std::__1::vector.38"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrI16crypto_buffer_stN4bssl8internal7DeleterIS2_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.34"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.34"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.38"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.38"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.34"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.34"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.34"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.34"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.34"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %struct.crypto_buffer_st* null, %struct.crypto_buffer_st** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.34"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.34"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.34"*, %"class.std::__1::unique_ptr.34"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.34"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.34"*, %"class.std::__1::unique_ptr.34"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.34"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %struct.crypto_buffer_st** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.34"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.34"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.34"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %struct.crypto_buffer_st* null, %struct.crypto_buffer_st** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.34"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !41

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.34"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.34"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.34"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.34"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.34"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.34"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %struct.crypto_buffer_st* null, %struct.crypto_buffer_st** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.34"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.34"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %struct.crypto_buffer_st* null, %struct.crypto_buffer_st** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.34"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.34"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %struct.crypto_buffer_st* null, %struct.crypto_buffer_st** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.34"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.34"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %struct.crypto_buffer_st* null, %struct.crypto_buffer_st** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.34"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.34"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %struct.crypto_buffer_st* null, %struct.crypto_buffer_st** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.34"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.34"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %struct.crypto_buffer_st* null, %struct.crypto_buffer_st** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.34"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.34"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %struct.crypto_buffer_st* null, %struct.crypto_buffer_st** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.34"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.34"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %struct.crypto_buffer_st* null, %struct.crypto_buffer_st** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.34"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.34"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.34"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.34"*, %"class.std::__1::unique_ptr.34"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.34"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.34"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.34"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.34"*
  %138 = icmp eq %"class.std::__1::unique_ptr.34"* %133, %137
  br i1 %138, label %148, label %139

139:                                              ; preds = %132, %146
  %140 = phi %"class.std::__1::unique_ptr.34"* [ %141, %146 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %142, align 8
  store %struct.crypto_buffer_st* null, %struct.crypto_buffer_st** %142, align 8
  %144 = icmp eq %struct.crypto_buffer_st* %143, null
  br i1 %144, label %146, label %145

145:                                              ; preds = %139
  tail call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* nonnull %143) #12
  br label %146

146:                                              ; preds = %145, %139
  %147 = icmp eq %"class.std::__1::unique_ptr.34"* %141, %137
  br i1 %147, label %148, label %139

148:                                              ; preds = %146, %132
  %149 = icmp eq i64 %135, 0
  br i1 %149, label %152, label %150

150:                                              ; preds = %148
  %151 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %151) #13
  br label %152

152:                                              ; preds = %148, %150
  ret void
}

declare %struct.crypto_buffer_st* @_ZN3net15X509Certificate25CreateCertBufferFromBytesEPKcm(i8*, i64) local_unnamed_addr #3

declare void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"*) unnamed_addr #8

declare zeroext i1 @_ZNK3net14CertPathErrors13ContainsErrorEPKv(%"class.net::CertPathErrors"*, i8*) local_unnamed_addr #3

declare zeroext i1 @_ZNK3net14CertPathErrors28ContainsAnyErrorWithSeverityENS_9CertError8SeverityE(%"class.net::CertPathErrors"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net20TrustStoreCollectionD1Ev(%"class.net::TrustStoreCollection"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN3net18TrustStoreInMemoryD1Ev(%"class.net::TrustStoreInMemory"*) unnamed_addr #8

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZZN3net12_GLOBAL__N_121CertVerifyProcBuiltin14VerifyInternalEPNS_15X509CertificateERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_SC_iPNS_6CRLSetERKNS4_6vectorI13scoped_refptrIS2_ENS8_ISH_EEEEPNS_16CertVerifyResultERKNS_16NetLogWithSourceEENK3$_1clEv: argument 0"}
!6 = distinct !{!6, !"_ZZN3net12_GLOBAL__N_121CertVerifyProcBuiltin14VerifyInternalEPNS_15X509CertificateERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_SC_iPNS_6CRLSetERKNS4_6vectorI13scoped_refptrIS2_ENS8_ISH_EEEEPNS_16CertVerifyResultERKNS_16NetLogWithSourceEENK3$_1clEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZZN3net12_GLOBAL__N_130AddIntermediatesToIssuerSourceEPNS_15X509CertificateEPNS_22CertIssuerSourceStaticERKNS_16NetLogWithSourceEENK3$_0clEv: argument 0"}
!9 = distinct !{!9, !"_ZZN3net12_GLOBAL__N_130AddIntermediatesToIssuerSourceEPNS_15X509CertificateEPNS_22CertIssuerSourceStaticERKNS_16NetLogWithSourceEENK3$_0clEv"}
!10 = !{i8 0, i8 2}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZZN3net12_GLOBAL__N_121CertVerifyProcBuiltin14VerifyInternalEPNS_15X509CertificateERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_SC_iPNS_6CRLSetERKNS4_6vectorI13scoped_refptrIS2_ENS8_ISH_EEEEPNS_16CertVerifyResultERKNS_16NetLogWithSourceEENK3$_2clEv: argument 0"}
!13 = distinct !{!13, !"_ZZN3net12_GLOBAL__N_121CertVerifyProcBuiltin14VerifyInternalEPNS_15X509CertificateERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_SC_iPNS_6CRLSetERKNS4_6vectorI13scoped_refptrIS2_ENS8_ISH_EEEEPNS_16CertVerifyResultERKNS_16NetLogWithSourceEENK3$_2clEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZZN3net12_GLOBAL__N_121CertVerifyProcBuiltin14VerifyInternalEPNS_15X509CertificateERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_SC_iPNS_6CRLSetERKNS4_6vectorI13scoped_refptrIS2_ENS8_ISH_EEEEPNS_16CertVerifyResultERKNS_16NetLogWithSourceEENK3$_3clEv: argument 0"}
!16 = distinct !{!16, !"_ZZN3net12_GLOBAL__N_121CertVerifyProcBuiltin14VerifyInternalEPNS_15X509CertificateERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_SC_iPNS_6CRLSetERKNS4_6vectorI13scoped_refptrIS2_ENS8_ISH_EEEEPNS_16CertVerifyResultERKNS_16NetLogWithSourceEENK3$_3clEv"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN3net12_GLOBAL__N_112TryBuildPathERK13scoped_refptrINS_17ParsedCertificateEEPNS_22CertIssuerSourceStaticEPNS0_24CertVerifyProcTrustStoreERKNS_3der15GeneralizedTimeEN4base9TimeTicksENS0_16VerificationTypeENS_25SimplePathBuilderDelegate12DigestPolicyEiRKNSt3__112basic_stringIcNSJ_11char_traitsIcEENSJ_9allocatorIcEEEEPKNS_6CRLSetEPNS_14CertNetFetcherEPKNS_16EVRootCAMetadataEPb: argument 0"}
!19 = distinct !{!19, !"_ZN3net12_GLOBAL__N_112TryBuildPathERK13scoped_refptrINS_17ParsedCertificateEEPNS_22CertIssuerSourceStaticEPNS0_24CertVerifyProcTrustStoreERKNS_3der15GeneralizedTimeEN4base9TimeTicksENS0_16VerificationTypeENS_25SimplePathBuilderDelegate12DigestPolicyEiRKNSt3__112basic_stringIcNSJ_11char_traitsIcEENSJ_9allocatorIcEEEEPKNS_6CRLSetEPNS_14CertNetFetcherEPKNS_16EVRootCAMetadataEPb"}
!20 = !{!21, !23}
!21 = distinct !{!21, !22, !"_ZN3net12_GLOBAL__N_123NetLogPathBuilderResultERKNS_15CertPathBuilder6ResultE: argument 0"}
!22 = distinct !{!22, !"_ZN3net12_GLOBAL__N_123NetLogPathBuilderResultERKNS_15CertPathBuilder6ResultE"}
!23 = distinct !{!23, !24, !"_ZZN3net12_GLOBAL__N_121CertVerifyProcBuiltin14VerifyInternalEPNS_15X509CertificateERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_SC_iPNS_6CRLSetERKNS4_6vectorI13scoped_refptrIS2_ENS8_ISH_EEEEPNS_16CertVerifyResultERKNS_16NetLogWithSourceEENK3$_5clEv: argument 0"}
!24 = distinct !{!24, !"_ZZN3net12_GLOBAL__N_121CertVerifyProcBuiltin14VerifyInternalEPNS_15X509CertificateERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_SC_iPNS_6CRLSetERKNS4_6vectorI13scoped_refptrIS2_ENS8_ISH_EEEEPNS_16CertVerifyResultERKNS_16NetLogWithSourceEENK3$_5clEv"}
!25 = !{!21}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZZN3net12_GLOBAL__N_121CertVerifyProcBuiltin14VerifyInternalEPNS_15X509CertificateERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_SC_iPNS_6CRLSetERKNS4_6vectorI13scoped_refptrIS2_ENS8_ISH_EEEEPNS_16CertVerifyResultERKNS_16NetLogWithSourceEENK3$_4clEv: argument 0"}
!28 = distinct !{!28, !"_ZZN3net12_GLOBAL__N_121CertVerifyProcBuiltin14VerifyInternalEPNS_15X509CertificateERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESC_SC_iPNS_6CRLSetERKNS4_6vectorI13scoped_refptrIS2_ENS8_ISH_EEEEPNS_16CertVerifyResultERKNS_16NetLogWithSourceEENK3$_4clEv"}
!29 = !{!30, !27}
!30 = distinct !{!30, !31, !"_ZN3net12_GLOBAL__N_127NetLogPathBuilderResultPathERKNS_25CertPathBuilderResultPathE: argument 0"}
!31 = distinct !{!31, !"_ZN3net12_GLOBAL__N_127NetLogPathBuilderResultPathERKNS_25CertPathBuilderResultPathE"}
!32 = !{!30}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZN3net12_GLOBAL__N_116PEMCertListValueERKNSt3__16vectorI13scoped_refptrINS_17ParsedCertificateEENS1_9allocatorIS5_EEEE: argument 0"}
!35 = distinct !{!35, !"_ZN3net12_GLOBAL__N_116PEMCertListValueERKNSt3__16vectorI13scoped_refptrINS_17ParsedCertificateEENS1_9allocatorIS5_EEEE"}
!36 = !{!34, !30}
!37 = !{!34, !30, !27}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_: argument 0"}
!40 = distinct !{!40, !"_ZNSt3__16__treeIN3net3der5InputENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_"}
!41 = distinct !{!41, !42}
!42 = !{!"llvm.loop.unroll.disable"}
