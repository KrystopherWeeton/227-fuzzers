; ModuleID = '../../third_party/skia/src/pathops/SkOpSpan.cpp'
source_filename = "../../third_party/skia/src/pathops/SkOpSpan.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkOpPtT = type <{ double, %struct.SkPoint, %class.SkOpSpanBase*, %class.SkOpPtT*, i8, i8, i8, [5 x i8] }>
%struct.SkPoint = type { float, float }
%class.SkOpSpanBase = type <{ %class.SkOpPtT, %class.SkOpSegment*, %class.SkOpSpanBase*, %class.SkOpAngle*, %class.SkOpSpan*, i32, i8, i8, [2 x i8] }>
%class.SkOpSegment = type <{ %class.SkOpSpan, %class.SkOpSpanBase, %class.SkOpContour*, %class.SkOpSegment*, %class.SkOpSegment*, %struct.SkPoint*, %struct.SkPathOpsBounds, float, i32, i32, i32, i8, [7 x i8] }>
%class.SkOpSpan = type <{ %class.SkOpSpanBase.base, [2 x i8], %class.SkOpSpan*, %class.SkOpAngle*, %class.SkOpSpanBase*, i32, i32, i32, i32, i32, i8, i8, [2 x i8] }>
%class.SkOpSpanBase.base = type <{ %class.SkOpPtT, %class.SkOpSegment*, %class.SkOpSpanBase*, %class.SkOpAngle*, %class.SkOpSpan*, i32, i8, i8 }>
%class.SkOpContour = type <{ %class.SkOpGlobalState*, %class.SkOpSegment, %class.SkOpSegment*, %class.SkOpContour*, %struct.SkPathOpsBounds, i32, i32, i32, i8, i8, i8, i8, i8, [7 x i8] }>
%class.SkOpGlobalState = type <{ %class.SkArenaAlloc*, %class.SkOpCoincidence*, %class.SkOpContourHead*, i32, i8, i8, i8, i8 }>
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%class.SkOpCoincidence = type <{ %class.SkCoincidentSpans*, %class.SkCoincidentSpans*, %class.SkOpGlobalState*, i8, i8, i8, i8, i8, [3 x i8] }>
%class.SkCoincidentSpans = type { %class.SkCoincidentSpans*, %class.SkOpPtT*, %class.SkOpPtT*, %class.SkOpPtT*, %class.SkOpPtT* }
%class.SkOpContourHead = type { %class.SkOpContour.base, [7 x i8] }
%class.SkOpContour.base = type <{ %class.SkOpGlobalState*, %class.SkOpSegment, %class.SkOpSegment*, %class.SkOpContour*, %struct.SkPathOpsBounds, i32, i32, i32, i8, i8, i8, i8, i8 }>
%struct.SkPathOpsBounds = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%class.SkOpAngle = type <{ %struct.SkDCurve, %class.SkDCurveSweep, double, %class.SkLineParameters, %class.SkOpAngle*, %class.SkOpSpanBase*, %class.SkOpSpanBase*, %class.SkOpSpanBase*, %class.SkOpSpanBase*, i32, i8, i8, i8, i8, i8, i8, i8, [5 x i8] }>
%struct.SkDCurve = type { %union.anon }
%union.anon = type { %struct.SkDCubic }
%struct.SkDCubic = type { [4 x %struct.SkDPoint] }
%struct.SkDPoint = type { double, double }
%class.SkDCurveSweep = type <{ %struct.SkDCurve, [2 x %struct.SkDVector], i8, i8, [6 x i8] }>
%struct.SkDVector = type { double, double }
%class.SkLineParameters = type { double, double, double }

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK7SkOpPtT5aliasEv(%class.SkOpPtT* readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %0, i64 0, i32 2
  %3 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %2, align 8
  %4 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %3, i64 0, i32 0
  %5 = icmp ne %class.SkOpPtT* %4, %0
  ret i1 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.SkOpPtT* @_ZNK7SkOpPtT6activeEv(%class.SkOpPtT* readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %0, i64 0, i32 3
  %7 = load %class.SkOpPtT*, %class.SkOpPtT** %6, align 8
  %8 = icmp eq %class.SkOpPtT* %7, %0
  br i1 %8, label %25, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %0, i64 0, i32 2
  %11 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %10, align 8
  br label %12

12:                                               ; preds = %9, %21
  %13 = phi %class.SkOpPtT* [ %7, %9 ], [ %23, %21 ]
  %14 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %13, i64 0, i32 2
  %15 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %14, align 8
  %16 = icmp eq %class.SkOpSpanBase* %15, %11
  br i1 %16, label %17, label %21

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %13, i64 0, i32 4
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %17, %12
  %22 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %13, i64 0, i32 3
  %23 = load %class.SkOpPtT*, %class.SkOpPtT** %22, align 8
  %24 = icmp eq %class.SkOpPtT* %23, %0
  br i1 %24, label %25, label %12

25:                                               ; preds = %21, %17, %5, %1
  %26 = phi %class.SkOpPtT* [ %0, %1 ], [ null, %5 ], [ null, %21 ], [ %13, %17 ]
  ret %class.SkOpPtT* %26
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK7SkOpPtT8containsEPKS_(%class.SkOpPtT* readonly, %class.SkOpPtT* readnone) local_unnamed_addr #0 align 2 {
  br label %3

3:                                                ; preds = %8, %2
  %4 = phi %class.SkOpPtT* [ %0, %2 ], [ %6, %8 ]
  %5 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %4, i64 0, i32 3
  %6 = load %class.SkOpPtT*, %class.SkOpPtT** %5, align 8
  %7 = icmp eq %class.SkOpPtT* %6, %0
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  %9 = icmp eq %class.SkOpPtT* %6, %1
  br i1 %9, label %10, label %3

10:                                               ; preds = %3, %8
  %11 = phi i1 [ true, %8 ], [ false, %3 ]
  ret i1 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK7SkOpPtT8containsEPK11SkOpSegmentRK7SkPoint(%class.SkOpPtT* readonly, %class.SkOpSegment* readnone, %struct.SkPoint* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %0, i64 0, i32 3
  %5 = load %class.SkOpPtT*, %class.SkOpPtT** %4, align 8
  %6 = icmp eq %class.SkOpPtT* %5, %0
  br i1 %6, label %31, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 1
  %11 = load float, float* %10, align 4
  br label %12

12:                                               ; preds = %7, %27
  %13 = phi %class.SkOpPtT* [ %5, %7 ], [ %29, %27 ]
  %14 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %13, i64 0, i32 1, i32 0
  %15 = load float, float* %14, align 4
  %16 = fcmp oeq float %15, %9
  br i1 %16, label %17, label %27

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %13, i64 0, i32 1, i32 1
  %19 = load float, float* %18, align 4
  %20 = fcmp oeq float %19, %11
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %13, i64 0, i32 2
  %23 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %22, align 8
  %24 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %23, i64 0, i32 1
  %25 = load %class.SkOpSegment*, %class.SkOpSegment** %24, align 8
  %26 = icmp eq %class.SkOpSegment* %25, %1
  br i1 %26, label %31, label %27

27:                                               ; preds = %12, %21, %17
  %28 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %13, i64 0, i32 3
  %29 = load %class.SkOpPtT*, %class.SkOpPtT** %28, align 8
  %30 = icmp eq %class.SkOpPtT* %29, %0
  br i1 %30, label %31, label %12

31:                                               ; preds = %21, %27, %3
  %32 = phi i1 [ false, %3 ], [ false, %27 ], [ true, %21 ]
  ret i1 %32
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.SkOpSegment* @_ZNK7SkOpPtT7segmentEv(%class.SkOpPtT* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %0, i64 0, i32 2
  %3 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %2, align 8
  %4 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %3, i64 0, i32 1
  %5 = load %class.SkOpSegment*, %class.SkOpSegment** %4, align 8
  ret %class.SkOpSegment* %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK7SkOpPtT8containsEPK11SkOpSegmentd(%class.SkOpPtT* readonly, %class.SkOpSegment* readnone, double) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %0, i64 0, i32 3
  %5 = load %class.SkOpPtT*, %class.SkOpPtT** %4, align 8
  %6 = icmp eq %class.SkOpPtT* %5, %0
  br i1 %6, label %22, label %7

7:                                                ; preds = %3, %18
  %8 = phi %class.SkOpPtT* [ %20, %18 ], [ %5, %3 ]
  %9 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %8, i64 0, i32 0
  %10 = load double, double* %9, align 8
  %11 = fcmp oeq double %10, %2
  br i1 %11, label %12, label %18

12:                                               ; preds = %7
  %13 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %8, i64 0, i32 2
  %14 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %13, align 8
  %15 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %14, i64 0, i32 1
  %16 = load %class.SkOpSegment*, %class.SkOpSegment** %15, align 8
  %17 = icmp eq %class.SkOpSegment* %16, %1
  br i1 %17, label %22, label %18

18:                                               ; preds = %12, %7
  %19 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %8, i64 0, i32 3
  %20 = load %class.SkOpPtT*, %class.SkOpPtT** %19, align 8
  %21 = icmp eq %class.SkOpPtT* %20, %0
  br i1 %21, label %22, label %7

22:                                               ; preds = %12, %18, %3
  %23 = phi i1 [ false, %3 ], [ false, %18 ], [ true, %12 ]
  ret i1 %23
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.SkOpPtT* @_ZNK7SkOpPtT8containsEPK11SkOpSegment(%class.SkOpPtT* readonly, %class.SkOpSegment* readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %0, i64 0, i32 3
  %4 = load %class.SkOpPtT*, %class.SkOpPtT** %3, align 8
  %5 = icmp eq %class.SkOpPtT* %4, %0
  br i1 %5, label %21, label %6

6:                                                ; preds = %2, %17
  %7 = phi %class.SkOpPtT* [ %19, %17 ], [ %4, %2 ]
  %8 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %7, i64 0, i32 2
  %9 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %8, align 8
  %10 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %9, i64 0, i32 1
  %11 = load %class.SkOpSegment*, %class.SkOpSegment** %10, align 8
  %12 = icmp eq %class.SkOpSegment* %11, %1
  br i1 %12, label %13, label %17

13:                                               ; preds = %6
  %14 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %7, i64 0, i32 4
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %13, %6
  %18 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %7, i64 0, i32 3
  %19 = load %class.SkOpPtT*, %class.SkOpPtT** %18, align 8
  %20 = icmp eq %class.SkOpPtT* %19, %0
  br i1 %20, label %21, label %6

21:                                               ; preds = %17, %13, %2
  %22 = phi %class.SkOpPtT* [ null, %2 ], [ %7, %13 ], [ null, %17 ]
  ret %class.SkOpPtT* %22
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.SkOpContour* @_ZNK7SkOpPtT7contourEv(%class.SkOpPtT* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %0, i64 0, i32 2
  %3 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %2, align 8
  %4 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %3, i64 0, i32 1
  %5 = load %class.SkOpSegment*, %class.SkOpSegment** %4, align 8
  %6 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %5, i64 0, i32 2
  %7 = load %class.SkOpContour*, %class.SkOpContour** %6, align 8
  ret %class.SkOpContour* %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.SkOpPtT* @_ZNK7SkOpPtT4findEPK11SkOpSegment(%class.SkOpPtT* readonly, %class.SkOpSegment* readnone) local_unnamed_addr #0 align 2 {
  br label %3

3:                                                ; preds = %14, %2
  %4 = phi %class.SkOpPtT* [ %0, %2 ], [ %16, %14 ]
  %5 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %4, i64 0, i32 2
  %6 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %5, align 8
  %7 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %6, i64 0, i32 1
  %8 = load %class.SkOpSegment*, %class.SkOpSegment** %7, align 8
  %9 = icmp eq %class.SkOpSegment* %8, %1
  br i1 %9, label %10, label %14

10:                                               ; preds = %3
  %11 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %4, i64 0, i32 4
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %10, %3
  %15 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %4, i64 0, i32 3
  %16 = load %class.SkOpPtT*, %class.SkOpPtT** %15, align 8
  %17 = icmp eq %class.SkOpPtT* %16, %0
  br i1 %17, label %18, label %3

18:                                               ; preds = %10, %14
  %19 = phi %class.SkOpPtT* [ %4, %10 ], [ null, %14 ]
  ret %class.SkOpPtT* %19
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.SkOpGlobalState* @_ZNK7SkOpPtT11globalStateEv(%class.SkOpPtT* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %0, i64 0, i32 2
  %3 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %2, align 8
  %4 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %3, i64 0, i32 1
  %5 = load %class.SkOpSegment*, %class.SkOpSegment** %4, align 8
  %6 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %5, i64 0, i32 2
  %7 = load %class.SkOpContour*, %class.SkOpContour** %6, align 8
  %8 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %7, i64 0, i32 0
  %9 = load %class.SkOpGlobalState*, %class.SkOpGlobalState** %8, align 8
  ret %class.SkOpGlobalState* %9
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN7SkOpPtT4initEP12SkOpSpanBasedRK7SkPointb(%class.SkOpPtT*, %class.SkOpSpanBase*, double, %struct.SkPoint* nocapture readonly dereferenceable(8), i1 zeroext) local_unnamed_addr #1 align 2 {
  %6 = zext i1 %4 to i8
  %7 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %0, i64 0, i32 0
  store double %2, double* %7, align 8
  %8 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %0, i64 0, i32 1
  %9 = bitcast %struct.SkPoint* %3 to i64*
  %10 = bitcast %struct.SkPoint* %8 to i64*
  %11 = load i64, i64* %9, align 4
  store i64 %11, i64* %10, align 8
  %12 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %0, i64 0, i32 2
  store %class.SkOpSpanBase* %1, %class.SkOpSpanBase** %12, align 8
  %13 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %0, i64 0, i32 3
  store %class.SkOpPtT* %0, %class.SkOpPtT** %13, align 8
  %14 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %0, i64 0, i32 5
  store i8 %6, i8* %14, align 1
  %15 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %0, i64 0, i32 4
  store i8 0, i8* %15, align 8
  %16 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %0, i64 0, i32 6
  store i8 0, i8* %16, align 2
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK7SkOpPtT5onEndEv(%class.SkOpPtT* readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %0, i64 0, i32 2
  %3 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %2, align 8
  %4 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %3, i64 0, i32 0
  %5 = icmp eq %class.SkOpPtT* %4, %0
  br i1 %5, label %6, label %14

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %3, i64 0, i32 1
  %8 = load %class.SkOpSegment*, %class.SkOpSegment** %7, align 8
  %9 = bitcast %class.SkOpSegment* %8 to %class.SkOpSpanBase*
  %10 = icmp eq %class.SkOpSpanBase* %3, %9
  br i1 %10, label %14, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %8, i64 0, i32 1
  %13 = icmp eq %class.SkOpSpanBase* %3, %12
  br label %14

14:                                               ; preds = %6, %11, %1
  %15 = phi i1 [ false, %1 ], [ true, %6 ], [ %13, %11 ]
  ret i1 %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK7SkOpPtT13ptAlreadySeenEPKS_(%class.SkOpPtT* readonly, %class.SkOpPtT* readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %0, i64 0, i32 1, i32 1
  %4 = icmp eq %class.SkOpPtT* %1, %0
  br i1 %4, label %22, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %0, i64 0, i32 1, i32 0
  %7 = load float, float* %6, align 4
  br label %8

8:                                                ; preds = %5, %18
  %9 = phi %class.SkOpPtT* [ %1, %5 ], [ %20, %18 ]
  %10 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %9, i64 0, i32 1, i32 0
  %11 = load float, float* %10, align 4
  %12 = fcmp oeq float %7, %11
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = load float, float* %3, align 4
  %15 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %9, i64 0, i32 1, i32 1
  %16 = load float, float* %15, align 4
  %17 = fcmp oeq float %14, %16
  br i1 %17, label %22, label %18

18:                                               ; preds = %8, %13
  %19 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %9, i64 0, i32 3
  %20 = load %class.SkOpPtT*, %class.SkOpPtT** %19, align 8
  %21 = icmp eq %class.SkOpPtT* %20, %0
  br i1 %21, label %22, label %8

22:                                               ; preds = %13, %18, %2
  %23 = phi i1 [ false, %2 ], [ false, %18 ], [ true, %13 ]
  ret i1 %23
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.SkOpPtT* @_ZN7SkOpPtT4prevEv(%class.SkOpPtT* readonly) local_unnamed_addr #0 align 2 {
  br label %2

2:                                                ; preds = %2, %1
  %3 = phi %class.SkOpPtT* [ %0, %1 ], [ %5, %2 ]
  %4 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %3, i64 0, i32 3
  %5 = load %class.SkOpPtT*, %class.SkOpPtT** %4, align 8
  %6 = icmp eq %class.SkOpPtT* %5, %0
  br i1 %6, label %7, label %2

7:                                                ; preds = %2
  ret %class.SkOpPtT* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.SkOpSegment* @_ZN7SkOpPtT7segmentEv(%class.SkOpPtT* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %0, i64 0, i32 2
  %3 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %2, align 8
  %4 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %3, i64 0, i32 1
  %5 = load %class.SkOpSegment*, %class.SkOpSegment** %4, align 8
  ret %class.SkOpSegment* %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7SkOpPtT10setDeletedEv(%class.SkOpPtT* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %0, i64 0, i32 4
  store i8 1, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12SkOpSpanBase6addOppEPS_(%class.SkOpSpanBase*, %class.SkOpSpanBase*) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %1, i64 0, i32 0
  %5 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %1, i64 0, i32 0, i32 3
  %6 = load %class.SkOpPtT*, %class.SkOpPtT** %5, align 8
  %7 = icmp eq %class.SkOpPtT* %6, %3
  br i1 %7, label %52, label %8

8:                                                ; preds = %2, %13
  %9 = phi %class.SkOpPtT* [ %11, %13 ], [ %6, %2 ]
  %10 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %9, i64 0, i32 3
  %11 = load %class.SkOpPtT*, %class.SkOpPtT** %10, align 8
  %12 = icmp eq %class.SkOpPtT* %11, %4
  br i1 %12, label %15, label %13

13:                                               ; preds = %8
  %14 = icmp eq %class.SkOpPtT* %11, %3
  br i1 %14, label %52, label %8

15:                                               ; preds = %8
  %16 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %9, i64 0, i32 3
  %17 = icmp eq %class.SkOpPtT* %9, null
  br i1 %17, label %52, label %18

18:                                               ; preds = %15
  %19 = tail call zeroext i1 @_ZN12SkOpSpanBase12mergeMatchesEPS_(%class.SkOpSpanBase* %0, %class.SkOpSpanBase* %1)
  br i1 %19, label %20, label %52

20:                                               ; preds = %18
  %21 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %0, i64 0, i32 0, i32 3
  %22 = bitcast %class.SkOpPtT** %21 to i64*
  %23 = load i64, i64* %22, align 8
  store %class.SkOpPtT* %4, %class.SkOpPtT** %21, align 8
  %24 = bitcast %class.SkOpPtT** %16 to i64*
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %0, i64 0, i32 1
  %26 = load %class.SkOpSegment*, %class.SkOpSegment** %25, align 8
  %27 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %26, i64 0, i32 2
  %28 = load %class.SkOpContour*, %class.SkOpContour** %27, align 8
  %29 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %28, i64 0, i32 0
  %30 = load %class.SkOpGlobalState*, %class.SkOpGlobalState** %29, align 8
  %31 = getelementptr inbounds %class.SkOpGlobalState, %class.SkOpGlobalState* %30, i64 0, i32 1
  %32 = load %class.SkOpCoincidence*, %class.SkOpCoincidence** %31, align 8
  %33 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %32, i64 0, i32 0
  %34 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %33, align 8
  %35 = icmp eq %class.SkCoincidentSpans* %34, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %20
  %37 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %32, i64 0, i32 1
  %38 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %37, align 8
  %39 = icmp eq %class.SkCoincidentSpans* %38, null
  br i1 %39, label %52, label %40

40:                                               ; preds = %36, %20
  br label %41

41:                                               ; preds = %40, %47
  %42 = phi %class.SkOpPtT* [ %49, %47 ], [ %3, %40 ]
  %43 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %42, i64 0, i32 6
  %44 = load i8, i8* %43, align 2, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %47, label %46

46:                                               ; preds = %41
  tail call void @_ZN15SkOpCoincidence13markCollapsedEP7SkOpPtT(%class.SkOpCoincidence* %32, %class.SkOpPtT* %42) #7
  br label %47

47:                                               ; preds = %46, %41
  %48 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %42, i64 0, i32 3
  %49 = load %class.SkOpPtT*, %class.SkOpPtT** %48, align 8
  %50 = icmp eq %class.SkOpPtT* %49, %3
  br i1 %50, label %51, label %41

51:                                               ; preds = %47
  tail call void @_ZN15SkOpCoincidence14releaseDeletedEv(%class.SkOpCoincidence* %32) #7
  br label %52

52:                                               ; preds = %13, %2, %51, %36, %15, %18
  %53 = phi i1 [ false, %18 ], [ true, %15 ], [ true, %36 ], [ true, %51 ], [ true, %2 ], [ true, %13 ]
  ret i1 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12SkOpSpanBase12mergeMatchesEPS_(%class.SkOpSpanBase*, %class.SkOpSpanBase*) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %1, i64 0, i32 0
  br label %5

5:                                                ; preds = %127, %2
  %6 = phi %class.SkOpPtT* [ %3, %2 ], [ %12, %127 ]
  %7 = phi i32 [ 1000000, %2 ], [ %8, %127 ]
  %8 = add nsw i32 %7, -1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %157, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %6, i64 0, i32 3
  %12 = load %class.SkOpPtT*, %class.SkOpPtT** %11, align 8
  %13 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %6, i64 0, i32 4
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %127

16:                                               ; preds = %10
  %17 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %6, i64 0, i32 2
  %18 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %17, align 8
  %19 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %18, i64 0, i32 1
  %20 = load %class.SkOpSegment*, %class.SkOpSegment** %19, align 8
  %21 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %20, i64 0, i32 9
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %20, i64 0, i32 8
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %127, label %26

26:                                               ; preds = %16, %123
  %27 = phi %class.SkOpPtT* [ %125, %123 ], [ %4, %16 ]
  %28 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %27, i64 0, i32 2
  %29 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %28, align 8
  %30 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %29, i64 0, i32 1
  %31 = load %class.SkOpSegment*, %class.SkOpSegment** %30, align 8
  %32 = icmp eq %class.SkOpSegment* %31, %20
  br i1 %32, label %33, label %123

33:                                               ; preds = %26
  %34 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %27, i64 0, i32 4
  %35 = load i8, i8* %34, align 8, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %123

37:                                               ; preds = %33
  %38 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %27, i64 0, i32 2
  %39 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %29, i64 0, i32 1
  %40 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %27, i64 0, i32 4
  %41 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %27, i64 0, i32 0
  %42 = load double, double* %41, align 8
  %43 = fcmp oeq double %42, 0.000000e+00
  %44 = fcmp oeq double %42, 1.000000e+00
  %45 = or i1 %43, %44
  br i1 %45, label %81, label %46

46:                                               ; preds = %37
  %47 = bitcast %class.SkOpSpanBase* %29 to %class.SkOpSpan*
  %48 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %29, i64 0, i32 4
  %49 = load %class.SkOpSpan*, %class.SkOpSpan** %48, align 8
  %50 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %29, i64 1, i32 0, i32 2
  %51 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %50, align 8
  %52 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %49, i64 0, i32 4
  store %class.SkOpSpanBase* %51, %class.SkOpSpanBase** %52, align 8
  %53 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %51, i64 0, i32 4
  store %class.SkOpSpan* %49, %class.SkOpSpan** %53, align 8
  %54 = load %class.SkOpSegment*, %class.SkOpSegment** %39, align 8
  tail call void @_ZN11SkOpSegment7releaseEPK8SkOpSpan(%class.SkOpSegment* %54, %class.SkOpSpan* %47) #7
  %55 = load %class.SkOpSegment*, %class.SkOpSegment** %39, align 8
  %56 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %55, i64 0, i32 2
  %57 = load %class.SkOpContour*, %class.SkOpContour** %56, align 8
  %58 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %57, i64 0, i32 0
  %59 = load %class.SkOpGlobalState*, %class.SkOpGlobalState** %58, align 8
  %60 = getelementptr inbounds %class.SkOpGlobalState, %class.SkOpGlobalState* %59, i64 0, i32 1
  %61 = load %class.SkOpCoincidence*, %class.SkOpCoincidence** %60, align 8
  %62 = icmp eq %class.SkOpCoincidence* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %46
  %64 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %29, i64 0, i32 0
  tail call void @_ZN15SkOpCoincidence5fixUpEP7SkOpPtTPKS0_(%class.SkOpCoincidence* nonnull %61, %class.SkOpPtT* %64, %class.SkOpPtT* %6) #7
  br label %65

65:                                               ; preds = %63, %46
  %66 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %29, i64 0, i32 0
  %67 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %29, i64 0, i32 0, i32 4
  store i8 1, i8* %67, align 8
  %68 = bitcast %class.SkOpSpanBase** %17 to i64*
  %69 = load i64, i64* %68, align 8
  br label %70

70:                                               ; preds = %77, %65
  %71 = phi %class.SkOpPtT* [ %66, %65 ], [ %79, %77 ]
  %72 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %71, i64 0, i32 2
  %73 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %72, align 8
  %74 = icmp eq %class.SkOpSpanBase* %73, %29
  br i1 %74, label %75, label %77

75:                                               ; preds = %70
  %76 = bitcast %class.SkOpSpanBase** %72 to i64*
  store i64 %69, i64* %76, align 8
  br label %77

77:                                               ; preds = %75, %70
  %78 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %71, i64 0, i32 3
  %79 = load %class.SkOpPtT*, %class.SkOpPtT** %78, align 8
  %80 = icmp eq %class.SkOpPtT* %79, %66
  br i1 %80, label %127, label %70

81:                                               ; preds = %37
  %82 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %6, i64 0, i32 0
  %83 = load double, double* %82, align 8
  %84 = fcmp oeq double %83, 0.000000e+00
  %85 = fcmp oeq double %83, 1.000000e+00
  %86 = or i1 %84, %85
  br i1 %86, label %122, label %87

87:                                               ; preds = %81
  %88 = bitcast %class.SkOpSpanBase* %18 to %class.SkOpSpan*
  %89 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %18, i64 0, i32 4
  %90 = load %class.SkOpSpan*, %class.SkOpSpan** %89, align 8
  %91 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %18, i64 1, i32 0, i32 2
  %92 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %91, align 8
  %93 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %90, i64 0, i32 4
  store %class.SkOpSpanBase* %92, %class.SkOpSpanBase** %93, align 8
  %94 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %92, i64 0, i32 4
  store %class.SkOpSpan* %90, %class.SkOpSpan** %94, align 8
  %95 = load %class.SkOpSegment*, %class.SkOpSegment** %19, align 8
  tail call void @_ZN11SkOpSegment7releaseEPK8SkOpSpan(%class.SkOpSegment* %95, %class.SkOpSpan* %88) #7
  %96 = load %class.SkOpSegment*, %class.SkOpSegment** %19, align 8
  %97 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %96, i64 0, i32 2
  %98 = load %class.SkOpContour*, %class.SkOpContour** %97, align 8
  %99 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %98, i64 0, i32 0
  %100 = load %class.SkOpGlobalState*, %class.SkOpGlobalState** %99, align 8
  %101 = getelementptr inbounds %class.SkOpGlobalState, %class.SkOpGlobalState* %100, i64 0, i32 1
  %102 = load %class.SkOpCoincidence*, %class.SkOpCoincidence** %101, align 8
  %103 = icmp eq %class.SkOpCoincidence* %102, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %87
  %105 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %18, i64 0, i32 0
  tail call void @_ZN15SkOpCoincidence5fixUpEP7SkOpPtTPKS0_(%class.SkOpCoincidence* nonnull %102, %class.SkOpPtT* %105, %class.SkOpPtT* %27) #7
  br label %106

106:                                              ; preds = %104, %87
  %107 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %18, i64 0, i32 0
  %108 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %18, i64 0, i32 0, i32 4
  store i8 1, i8* %108, align 8
  %109 = bitcast %class.SkOpSpanBase** %38 to i64*
  %110 = load i64, i64* %109, align 8
  br label %111

111:                                              ; preds = %118, %106
  %112 = phi %class.SkOpPtT* [ %107, %106 ], [ %120, %118 ]
  %113 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %112, i64 0, i32 2
  %114 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %113, align 8
  %115 = icmp eq %class.SkOpSpanBase* %114, %18
  br i1 %115, label %116, label %118

116:                                              ; preds = %111
  %117 = bitcast %class.SkOpSpanBase** %113 to i64*
  store i64 %110, i64* %117, align 8
  br label %118

118:                                              ; preds = %116, %111
  %119 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %112, i64 0, i32 3
  %120 = load %class.SkOpPtT*, %class.SkOpPtT** %119, align 8
  %121 = icmp eq %class.SkOpPtT* %120, %107
  br i1 %121, label %127, label %111

122:                                              ; preds = %81
  tail call void @_ZN11SkOpSegment11markAllDoneEv(%class.SkOpSegment* %20) #7
  store i8 1, i8* %13, align 8
  store i8 1, i8* %40, align 8
  br label %127

123:                                              ; preds = %33, %26
  %124 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %27, i64 0, i32 3
  %125 = load %class.SkOpPtT*, %class.SkOpPtT** %124, align 8
  %126 = icmp eq %class.SkOpPtT* %125, %4
  br i1 %126, label %127, label %26

127:                                              ; preds = %123, %77, %118, %10, %16, %122
  %128 = icmp eq %class.SkOpPtT* %12, %3
  br i1 %128, label %129, label %5

129:                                              ; preds = %127
  %130 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %0, i64 0, i32 1
  %131 = load %class.SkOpSegment*, %class.SkOpSegment** %130, align 8
  %132 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %131, i64 0, i32 2
  %133 = load %class.SkOpContour*, %class.SkOpContour** %132, align 8
  %134 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %133, i64 0, i32 0
  %135 = load %class.SkOpGlobalState*, %class.SkOpGlobalState** %134, align 8
  %136 = getelementptr inbounds %class.SkOpGlobalState, %class.SkOpGlobalState* %135, i64 0, i32 1
  %137 = load %class.SkOpCoincidence*, %class.SkOpCoincidence** %136, align 8
  %138 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %137, i64 0, i32 0
  %139 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %138, align 8
  %140 = icmp eq %class.SkCoincidentSpans* %139, null
  br i1 %140, label %141, label %145

141:                                              ; preds = %129
  %142 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %137, i64 0, i32 1
  %143 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %142, align 8
  %144 = icmp eq %class.SkCoincidentSpans* %143, null
  br i1 %144, label %157, label %145

145:                                              ; preds = %141, %129
  br label %146

146:                                              ; preds = %145, %152
  %147 = phi %class.SkOpPtT* [ %154, %152 ], [ %3, %145 ]
  %148 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %147, i64 0, i32 6
  %149 = load i8, i8* %148, align 2, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %152, label %151

151:                                              ; preds = %146
  tail call void @_ZN15SkOpCoincidence13markCollapsedEP7SkOpPtT(%class.SkOpCoincidence* %137, %class.SkOpPtT* %147) #7
  br label %152

152:                                              ; preds = %151, %146
  %153 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %147, i64 0, i32 3
  %154 = load %class.SkOpPtT*, %class.SkOpPtT** %153, align 8
  %155 = icmp eq %class.SkOpPtT* %154, %3
  br i1 %155, label %156, label %146

156:                                              ; preds = %152
  tail call void @_ZN15SkOpCoincidence14releaseDeletedEv(%class.SkOpCoincidence* %137) #7
  br label %157

157:                                              ; preds = %5, %156, %141
  %158 = phi i1 [ true, %141 ], [ true, %156 ], [ false, %5 ]
  ret i1 %158
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkOpSpanBase28checkForCollapsedCoincidenceEv(%class.SkOpSpanBase*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %0, i64 0, i32 1
  %3 = load %class.SkOpSegment*, %class.SkOpSegment** %2, align 8
  %4 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %3, i64 0, i32 2
  %5 = load %class.SkOpContour*, %class.SkOpContour** %4, align 8
  %6 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %5, i64 0, i32 0
  %7 = load %class.SkOpGlobalState*, %class.SkOpGlobalState** %6, align 8
  %8 = getelementptr inbounds %class.SkOpGlobalState, %class.SkOpGlobalState* %7, i64 0, i32 1
  %9 = load %class.SkOpCoincidence*, %class.SkOpCoincidence** %8, align 8
  %10 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %9, i64 0, i32 0
  %11 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %10, align 8
  %12 = icmp eq %class.SkCoincidentSpans* %11, null
  br i1 %12, label %13, label %17

13:                                               ; preds = %1
  %14 = getelementptr inbounds %class.SkOpCoincidence, %class.SkOpCoincidence* %9, i64 0, i32 1
  %15 = load %class.SkCoincidentSpans*, %class.SkCoincidentSpans** %14, align 8
  %16 = icmp eq %class.SkCoincidentSpans* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %1, %13
  %18 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %0, i64 0, i32 0
  br label %19

19:                                               ; preds = %25, %17
  %20 = phi %class.SkOpPtT* [ %18, %17 ], [ %27, %25 ]
  %21 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %20, i64 0, i32 6
  %22 = load i8, i8* %21, align 2, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %25, label %24

24:                                               ; preds = %19
  tail call void @_ZN15SkOpCoincidence13markCollapsedEP7SkOpPtT(%class.SkOpCoincidence* %9, %class.SkOpPtT* %20) #7
  br label %25

25:                                               ; preds = %19, %24
  %26 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %20, i64 0, i32 3
  %27 = load %class.SkOpPtT*, %class.SkOpPtT** %26, align 8
  %28 = icmp eq %class.SkOpPtT* %27, %18
  br i1 %28, label %29, label %19

29:                                               ; preds = %25
  tail call void @_ZN15SkOpCoincidence14releaseDeletedEv(%class.SkOpCoincidence* %9) #7
  br label %30

30:                                               ; preds = %13, %29
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK12SkOpSpanBase9collapsedEdd(%class.SkOpSpanBase* readonly, double, double) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %0, i64 0, i32 0
  %5 = bitcast %class.SkOpSpanBase* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %0, i64 0, i32 1
  %8 = load %class.SkOpSegment*, %class.SkOpSegment** %7, align 8
  %9 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %0, i64 0, i32 0, i32 3
  %10 = bitcast i64 %6 to double
  br label %11

11:                                               ; preds = %52, %3
  %12 = phi double [ %38, %52 ], [ %10, %3 ]
  %13 = phi i64 [ %42, %52 ], [ %6, %3 ]
  %14 = phi %class.SkOpPtT* [ %53, %52 ], [ null, %3 ]
  %15 = phi %class.SkOpPtT* [ %21, %52 ], [ %4, %3 ]
  %16 = phi i32 [ %24, %52 ], [ 100000, %3 ]
  br label %17

17:                                               ; preds = %11, %28
  %18 = phi %class.SkOpPtT* [ %21, %28 ], [ %15, %11 ]
  %19 = phi i32 [ %24, %28 ], [ %16, %11 ]
  %20 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %18, i64 0, i32 3
  %21 = load %class.SkOpPtT*, %class.SkOpPtT** %20, align 8
  %22 = icmp eq %class.SkOpPtT* %21, %4
  br i1 %22, label %54, label %23

23:                                               ; preds = %17
  %24 = add nsw i32 %19, -1
  %25 = icmp eq i32 %24, 0
  %26 = icmp eq %class.SkOpPtT* %21, %14
  %27 = or i1 %25, %26
  br i1 %27, label %54, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %21, i64 0, i32 2
  %30 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %29, align 8
  %31 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %30, i64 0, i32 1
  %32 = load %class.SkOpSegment*, %class.SkOpSegment** %31, align 8
  %33 = icmp eq %class.SkOpSegment* %32, %8
  br i1 %33, label %34, label %17

34:                                               ; preds = %28
  %35 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %21, i64 0, i32 0
  %36 = load double, double* %35, align 8
  %37 = fcmp olt double %36, %12
  %38 = select i1 %37, double %36, double %12
  %39 = bitcast i64 %13 to double
  %40 = fcmp ogt double %36, %39
  %41 = select i1 %40, double %36, double %39
  %42 = bitcast double %41 to i64
  %43 = fsub double %38, %1
  %44 = fsub double %41, %1
  %45 = fmul double %44, %43
  %46 = fcmp ugt double %45, 0.000000e+00
  br i1 %46, label %52, label %47

47:                                               ; preds = %34
  %48 = fsub double %38, %2
  %49 = fsub double %41, %2
  %50 = fmul double %49, %48
  %51 = fcmp ugt double %50, 0.000000e+00
  br i1 %51, label %52, label %54

52:                                               ; preds = %47, %34
  %53 = load %class.SkOpPtT*, %class.SkOpPtT** %9, align 8
  br label %11

54:                                               ; preds = %47, %17, %23
  %55 = phi i32 [ 2, %23 ], [ 0, %17 ], [ 1, %47 ]
  ret i32 %55
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK12SkOpSpanBase8containsEPKS_(%class.SkOpSpanBase* readonly, %class.SkOpSpanBase* readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %1, i64 0, i32 0
  br label %5

5:                                                ; preds = %10, %2
  %6 = phi %class.SkOpPtT* [ %3, %2 ], [ %8, %10 ]
  %7 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %6, i64 0, i32 3
  %8 = load %class.SkOpPtT*, %class.SkOpPtT** %7, align 8
  %9 = icmp eq %class.SkOpPtT* %8, %3
  br i1 %9, label %12, label %10

10:                                               ; preds = %5
  %11 = icmp eq %class.SkOpPtT* %8, %4
  br i1 %11, label %12, label %5

12:                                               ; preds = %5, %10
  %13 = phi i1 [ true, %10 ], [ false, %5 ]
  ret i1 %13
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.SkOpPtT* @_ZNK12SkOpSpanBase8containsEPK11SkOpSegment(%class.SkOpSpanBase* readonly, %class.SkOpSegment* readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %0, i64 0, i32 0, i32 3
  %5 = load %class.SkOpPtT*, %class.SkOpPtT** %4, align 8
  %6 = icmp eq %class.SkOpPtT* %5, %3
  br i1 %6, label %25, label %7

7:                                                ; preds = %2, %21
  %8 = phi %class.SkOpPtT* [ %23, %21 ], [ %5, %2 ]
  %9 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %8, i64 0, i32 4
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %21

12:                                               ; preds = %7
  %13 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %8, i64 0, i32 2
  %14 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %13, align 8
  %15 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %14, i64 0, i32 1
  %16 = load %class.SkOpSegment*, %class.SkOpSegment** %15, align 8
  %17 = icmp eq %class.SkOpSegment* %16, %1
  %18 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %14, i64 0, i32 0
  %19 = icmp eq %class.SkOpPtT* %18, %8
  %20 = and i1 %17, %19
  br i1 %20, label %25, label %21

21:                                               ; preds = %12, %7
  %22 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %8, i64 0, i32 3
  %23 = load %class.SkOpPtT*, %class.SkOpPtT** %22, align 8
  %24 = icmp eq %class.SkOpPtT* %23, %3
  br i1 %24, label %25, label %7

25:                                               ; preds = %21, %12, %2
  %26 = phi %class.SkOpPtT* [ null, %2 ], [ %8, %12 ], [ null, %21 ]
  ret %class.SkOpPtT* %26
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK12SkOpSpanBase15containsCoinEndEPK11SkOpSegment(%class.SkOpSpanBase* readonly, %class.SkOpSegment* readnone) local_unnamed_addr #0 align 2 {
  br label %3

3:                                                ; preds = %8, %2
  %4 = phi %class.SkOpSpanBase* [ %0, %2 ], [ %6, %8 ]
  %5 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %4, i64 0, i32 2
  %6 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %5, align 8
  %7 = icmp eq %class.SkOpSpanBase* %6, %0
  br i1 %7, label %12, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %6, i64 0, i32 1
  %10 = load %class.SkOpSegment*, %class.SkOpSegment** %9, align 8
  %11 = icmp eq %class.SkOpSegment* %10, %1
  br i1 %11, label %12, label %3

12:                                               ; preds = %3, %8
  %13 = phi i1 [ true, %8 ], [ false, %3 ]
  ret i1 %13
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.SkOpContour* @_ZNK12SkOpSpanBase7contourEv(%class.SkOpSpanBase* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %0, i64 0, i32 1
  %3 = load %class.SkOpSegment*, %class.SkOpSegment** %2, align 8
  %4 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %3, i64 0, i32 2
  %5 = load %class.SkOpContour*, %class.SkOpContour** %4, align 8
  ret %class.SkOpContour* %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.SkOpGlobalState* @_ZNK12SkOpSpanBase11globalStateEv(%class.SkOpSpanBase* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %0, i64 0, i32 1
  %3 = load %class.SkOpSegment*, %class.SkOpSegment** %2, align 8
  %4 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %3, i64 0, i32 2
  %5 = load %class.SkOpContour*, %class.SkOpContour** %4, align 8
  %6 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %5, i64 0, i32 0
  %7 = load %class.SkOpGlobalState*, %class.SkOpGlobalState** %6, align 8
  ret %class.SkOpGlobalState* %7
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN12SkOpSpanBase8initBaseEP11SkOpSegmentP8SkOpSpandRK7SkPoint(%class.SkOpSpanBase*, %class.SkOpSegment*, %class.SkOpSpan*, double, %struct.SkPoint* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %0, i64 0, i32 1
  store %class.SkOpSegment* %1, %class.SkOpSegment** %6, align 8
  %7 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %0, i64 0, i32 0
  %8 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %0, i64 0, i32 0, i32 0
  store double %3, double* %8, align 8
  %9 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %0, i64 0, i32 0, i32 1
  %10 = bitcast %struct.SkPoint* %4 to i64*
  %11 = bitcast %struct.SkPoint* %9 to i64*
  %12 = load i64, i64* %10, align 4
  store i64 %12, i64* %11, align 8
  %13 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %0, i64 0, i32 0, i32 2
  store %class.SkOpSpanBase* %0, %class.SkOpSpanBase** %13, align 8
  %14 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %0, i64 0, i32 0, i32 3
  store %class.SkOpPtT* %7, %class.SkOpPtT** %14, align 8
  %15 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %0, i64 0, i32 0, i32 5
  store i8 0, i8* %15, align 1
  %16 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %0, i64 0, i32 0, i32 6
  store i8 0, i8* %17, align 2
  %18 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %0, i64 0, i32 2
  store %class.SkOpSpanBase* %0, %class.SkOpSpanBase** %18, align 8
  %19 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %0, i64 0, i32 3
  store %class.SkOpAngle* null, %class.SkOpAngle** %19, align 8
  %20 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %0, i64 0, i32 4
  store %class.SkOpSpan* %2, %class.SkOpSpan** %20, align 8
  %21 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %0, i64 0, i32 5
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %0, i64 0, i32 6
  store i8 1, i8* %22, align 4
  %23 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %0, i64 0, i32 7
  store i8 0, i8* %23, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkOpSpanBase5mergeEP8SkOpSpan(%class.SkOpSpanBase*, %class.SkOpSpan*) local_unnamed_addr #3 align 2 {
  %3 = bitcast %class.SkOpSpan* %1 to %class.SkOpSpanBase*
  %4 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %1, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %0, i64 0, i32 0
  %6 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %1, i64 0, i32 0, i32 4
  %7 = load %class.SkOpSpan*, %class.SkOpSpan** %6, align 8
  %8 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %1, i64 0, i32 4
  %9 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %8, align 8
  %10 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %7, i64 0, i32 4
  store %class.SkOpSpanBase* %9, %class.SkOpSpanBase** %10, align 8
  %11 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %9, i64 0, i32 4
  store %class.SkOpSpan* %7, %class.SkOpSpan** %11, align 8
  %12 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %1, i64 0, i32 0, i32 1
  %13 = load %class.SkOpSegment*, %class.SkOpSegment** %12, align 8
  tail call void @_ZN11SkOpSegment7releaseEPK8SkOpSpan(%class.SkOpSegment* %13, %class.SkOpSpan* %1) #7
  %14 = load %class.SkOpSegment*, %class.SkOpSegment** %12, align 8
  %15 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %14, i64 0, i32 2
  %16 = load %class.SkOpContour*, %class.SkOpContour** %15, align 8
  %17 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %16, i64 0, i32 0
  %18 = load %class.SkOpGlobalState*, %class.SkOpGlobalState** %17, align 8
  %19 = getelementptr inbounds %class.SkOpGlobalState, %class.SkOpGlobalState* %18, i64 0, i32 1
  %20 = load %class.SkOpCoincidence*, %class.SkOpCoincidence** %19, align 8
  %21 = icmp eq %class.SkOpCoincidence* %20, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %2
  tail call void @_ZN15SkOpCoincidence5fixUpEP7SkOpPtTPKS0_(%class.SkOpCoincidence* nonnull %20, %class.SkOpPtT* %4, %class.SkOpPtT* %5) #7
  br label %23

23:                                               ; preds = %22, %2
  %24 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %1, i64 0, i32 0, i32 0, i32 4
  store i8 1, i8* %24, align 8
  %25 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %0, i64 0, i32 0, i32 2
  %26 = bitcast %class.SkOpSpanBase** %25 to i64*
  %27 = load i64, i64* %26, align 8
  br label %28

28:                                               ; preds = %35, %23
  %29 = phi %class.SkOpPtT* [ %4, %23 ], [ %37, %35 ]
  %30 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %29, i64 0, i32 2
  %31 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %30, align 8
  %32 = icmp eq %class.SkOpSpanBase* %31, %3
  br i1 %32, label %33, label %35

33:                                               ; preds = %28
  %34 = bitcast %class.SkOpSpanBase** %30 to i64*
  store i64 %27, i64* %34, align 8
  br label %35

35:                                               ; preds = %33, %28
  %36 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %29, i64 0, i32 3
  %37 = load %class.SkOpPtT*, %class.SkOpPtT** %36, align 8
  %38 = icmp eq %class.SkOpPtT* %37, %4
  br i1 %38, label %39, label %28

39:                                               ; preds = %35, %44
  %40 = phi %class.SkOpPtT* [ %42, %44 ], [ %5, %35 ]
  %41 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %40, i64 0, i32 3
  %42 = load %class.SkOpPtT*, %class.SkOpPtT** %41, align 8
  %43 = icmp eq %class.SkOpPtT* %42, %5
  br i1 %43, label %46, label %44

44:                                               ; preds = %39
  %45 = icmp eq %class.SkOpPtT* %42, %4
  br i1 %45, label %95, label %39

46:                                               ; preds = %39
  %47 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %1, i64 0, i32 0, i32 0, i32 3
  %48 = load %class.SkOpPtT*, %class.SkOpPtT** %47, align 8
  %49 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %0, i64 0, i32 0, i32 3
  %50 = bitcast %class.SkOpPtT** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %class.SkOpPtT** %47 to i64*
  store i64 %51, i64* %52, align 8
  store %class.SkOpPtT* %4, %class.SkOpPtT** %49, align 8
  %53 = icmp eq %class.SkOpPtT* %48, %4
  br i1 %53, label %89, label %54

54:                                               ; preds = %46
  %55 = load %class.SkOpPtT*, %class.SkOpPtT** %47, align 8
  %56 = ptrtoint %class.SkOpPtT* %55 to i64
  br label %57

57:                                               ; preds = %54, %85
  %58 = phi i64 [ %86, %85 ], [ %56, %54 ]
  %59 = phi %class.SkOpPtT* [ %87, %85 ], [ %55, %54 ]
  %60 = phi %class.SkOpPtT* [ %62, %85 ], [ %48, %54 ]
  %61 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %60, i64 0, i32 3
  %62 = load %class.SkOpPtT*, %class.SkOpPtT** %61, align 8
  %63 = icmp eq %class.SkOpPtT* %59, %4
  br i1 %63, label %82, label %64

64:                                               ; preds = %57
  %65 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %60, i64 0, i32 2
  %66 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %65, align 8
  %67 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %60, i64 0, i32 0
  br label %68

68:                                               ; preds = %64, %80
  %69 = phi %class.SkOpPtT* [ %59, %64 ], [ %71, %80 ]
  %70 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %69, i64 0, i32 3
  %71 = load %class.SkOpPtT*, %class.SkOpPtT** %70, align 8
  %72 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %71, i64 0, i32 2
  %73 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %72, align 8
  %74 = icmp eq %class.SkOpSpanBase* %73, %66
  br i1 %74, label %75, label %80

75:                                               ; preds = %68
  %76 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %71, i64 0, i32 0
  %77 = load double, double* %76, align 8
  %78 = load double, double* %67, align 8
  %79 = fcmp oeq double %77, %78
  br i1 %79, label %85, label %80

80:                                               ; preds = %68, %75
  %81 = icmp eq %class.SkOpPtT* %71, %4
  br i1 %81, label %82, label %68

82:                                               ; preds = %80, %57
  %83 = bitcast %class.SkOpPtT** %61 to i64*
  store i64 %58, i64* %83, align 8
  store %class.SkOpPtT* %60, %class.SkOpPtT** %47, align 8
  %84 = ptrtoint %class.SkOpPtT* %60 to i64
  br label %85

85:                                               ; preds = %75, %82
  %86 = phi i64 [ %84, %82 ], [ %58, %75 ]
  %87 = phi %class.SkOpPtT* [ %60, %82 ], [ %59, %75 ]
  %88 = icmp eq %class.SkOpPtT* %62, %4
  br i1 %88, label %89, label %57

89:                                               ; preds = %85, %46
  %90 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %1, i64 0, i32 0, i32 5
  %91 = load i32, i32* %90, align 8
  %92 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %0, i64 0, i32 5
  %93 = load i32, i32* %92, align 8
  %94 = add nsw i32 %93, %91
  store i32 %94, i32* %92, align 8
  br label %95

95:                                               ; preds = %44, %89
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkOpSpan7releaseEPK7SkOpPtT(%class.SkOpSpan*, %class.SkOpPtT*) local_unnamed_addr #3 align 2 {
  %3 = bitcast %class.SkOpSpan* %0 to %class.SkOpSpanBase*
  %4 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 0, i32 4
  %5 = load %class.SkOpSpan*, %class.SkOpSpan** %4, align 8
  %6 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 4
  %7 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %6, align 8
  %8 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %5, i64 0, i32 4
  store %class.SkOpSpanBase* %7, %class.SkOpSpanBase** %8, align 8
  %9 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %7, i64 0, i32 4
  store %class.SkOpSpan* %5, %class.SkOpSpan** %9, align 8
  %10 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 0, i32 1
  %11 = load %class.SkOpSegment*, %class.SkOpSegment** %10, align 8
  tail call void @_ZN11SkOpSegment7releaseEPK8SkOpSpan(%class.SkOpSegment* %11, %class.SkOpSpan* %0) #7
  %12 = load %class.SkOpSegment*, %class.SkOpSegment** %10, align 8
  %13 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %12, i64 0, i32 2
  %14 = load %class.SkOpContour*, %class.SkOpContour** %13, align 8
  %15 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %14, i64 0, i32 0
  %16 = load %class.SkOpGlobalState*, %class.SkOpGlobalState** %15, align 8
  %17 = getelementptr inbounds %class.SkOpGlobalState, %class.SkOpGlobalState* %16, i64 0, i32 1
  %18 = load %class.SkOpCoincidence*, %class.SkOpCoincidence** %17, align 8
  %19 = icmp eq %class.SkOpCoincidence* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %2
  %21 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 0, i32 0
  tail call void @_ZN15SkOpCoincidence5fixUpEP7SkOpPtTPKS0_(%class.SkOpCoincidence* nonnull %18, %class.SkOpPtT* %21, %class.SkOpPtT* %1) #7
  br label %22

22:                                               ; preds = %2, %20
  %23 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 0, i32 0, i32 4
  store i8 1, i8* %24, align 8
  %25 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %1, i64 0, i32 2
  %26 = bitcast %class.SkOpSpanBase** %25 to i64*
  %27 = load i64, i64* %26, align 8
  br label %28

28:                                               ; preds = %35, %22
  %29 = phi %class.SkOpPtT* [ %23, %22 ], [ %37, %35 ]
  %30 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %29, i64 0, i32 2
  %31 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %30, align 8
  %32 = icmp eq %class.SkOpSpanBase* %31, %3
  br i1 %32, label %33, label %35

33:                                               ; preds = %28
  %34 = bitcast %class.SkOpSpanBase** %30 to i64*
  store i64 %27, i64* %34, align 8
  br label %35

35:                                               ; preds = %28, %33
  %36 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %29, i64 0, i32 3
  %37 = load %class.SkOpPtT*, %class.SkOpPtT** %36, align 8
  %38 = icmp eq %class.SkOpPtT* %37, %23
  br i1 %38, label %39, label %28

39:                                               ; preds = %35
  ret void
}

declare void @_ZN15SkOpCoincidence13markCollapsedEP7SkOpPtT(%class.SkOpCoincidence*, %class.SkOpPtT*) local_unnamed_addr #5

declare void @_ZN15SkOpCoincidence14releaseDeletedEv(%class.SkOpCoincidence*) local_unnamed_addr #5

declare void @_ZN11SkOpSegment11markAllDoneEv(%class.SkOpSegment*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8SkOpSpan14computeWindSumEv(%class.SkOpSpan*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 0, i32 1
  %3 = load %class.SkOpSegment*, %class.SkOpSegment** %2, align 8
  %4 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %3, i64 0, i32 2
  %5 = load %class.SkOpContour*, %class.SkOpContour** %4, align 8
  %6 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %5, i64 0, i32 0
  %7 = load %class.SkOpGlobalState*, %class.SkOpGlobalState** %6, align 8
  %8 = getelementptr inbounds %class.SkOpGlobalState, %class.SkOpGlobalState* %7, i64 0, i32 2
  %9 = bitcast %class.SkOpContourHead** %8 to %class.SkOpContour**
  %10 = load %class.SkOpContour*, %class.SkOpContour** %9, align 8
  %11 = tail call zeroext i1 @_ZN8SkOpSpan11sortableTopEP11SkOpContour(%class.SkOpSpan* %0, %class.SkOpContour* %10) #7
  br i1 %11, label %14, label %12

12:                                               ; preds = %1
  %13 = tail call zeroext i1 @_ZN8SkOpSpan11sortableTopEP11SkOpContour(%class.SkOpSpan* %0, %class.SkOpContour* %10) #7
  br i1 %13, label %14, label %17

14:                                               ; preds = %31, %29, %27, %25, %23, %21, %19, %17, %12, %1
  %15 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 5
  %16 = load i32, i32* %15, align 8
  ret i32 %16

17:                                               ; preds = %12
  %18 = tail call zeroext i1 @_ZN8SkOpSpan11sortableTopEP11SkOpContour(%class.SkOpSpan* %0, %class.SkOpContour* %10) #7
  br i1 %18, label %14, label %19

19:                                               ; preds = %17
  %20 = tail call zeroext i1 @_ZN8SkOpSpan11sortableTopEP11SkOpContour(%class.SkOpSpan* %0, %class.SkOpContour* %10) #7
  br i1 %20, label %14, label %21

21:                                               ; preds = %19
  %22 = tail call zeroext i1 @_ZN8SkOpSpan11sortableTopEP11SkOpContour(%class.SkOpSpan* %0, %class.SkOpContour* %10) #7
  br i1 %22, label %14, label %23

23:                                               ; preds = %21
  %24 = tail call zeroext i1 @_ZN8SkOpSpan11sortableTopEP11SkOpContour(%class.SkOpSpan* %0, %class.SkOpContour* %10) #7
  br i1 %24, label %14, label %25

25:                                               ; preds = %23
  %26 = tail call zeroext i1 @_ZN8SkOpSpan11sortableTopEP11SkOpContour(%class.SkOpSpan* %0, %class.SkOpContour* %10) #7
  br i1 %26, label %14, label %27

27:                                               ; preds = %25
  %28 = tail call zeroext i1 @_ZN8SkOpSpan11sortableTopEP11SkOpContour(%class.SkOpSpan* %0, %class.SkOpContour* %10) #7
  br i1 %28, label %14, label %29

29:                                               ; preds = %27
  %30 = tail call zeroext i1 @_ZN8SkOpSpan11sortableTopEP11SkOpContour(%class.SkOpSpan* %0, %class.SkOpContour* %10) #7
  br i1 %30, label %14, label %31

31:                                               ; preds = %29
  %32 = tail call zeroext i1 @_ZN8SkOpSpan11sortableTopEP11SkOpContour(%class.SkOpSpan* %0, %class.SkOpContour* %10) #7
  br label %14
}

declare zeroext i1 @_ZN8SkOpSpan11sortableTopEP11SkOpContour(%class.SkOpSpan*, %class.SkOpContour*) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8SkOpSpan19containsCoincidenceEPK11SkOpSegment(%class.SkOpSpan* readonly, %class.SkOpSegment* readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 2
  %4 = load %class.SkOpSpan*, %class.SkOpSpan** %3, align 8
  br label %5

5:                                                ; preds = %10, %2
  %6 = phi %class.SkOpSpan* [ %4, %2 ], [ %12, %10 ]
  %7 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %6, i64 0, i32 0, i32 1
  %8 = load %class.SkOpSegment*, %class.SkOpSegment** %7, align 8
  %9 = icmp eq %class.SkOpSegment* %8, %1
  br i1 %9, label %14, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %6, i64 0, i32 2
  %12 = load %class.SkOpSpan*, %class.SkOpSpan** %11, align 8
  %13 = icmp eq %class.SkOpSpan* %12, %0
  br i1 %13, label %14, label %5

14:                                               ; preds = %10, %5
  %15 = phi i1 [ true, %5 ], [ false, %10 ]
  ret i1 %15
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN8SkOpSpan4initEP11SkOpSegmentPS_dRK7SkPoint(%class.SkOpSpan*, %class.SkOpSegment*, %class.SkOpSpan*, double, %struct.SkPoint* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 0, i32 1
  store %class.SkOpSegment* %1, %class.SkOpSegment** %6, align 8
  %7 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 0, i32 0, i32 0
  store double %3, double* %8, align 8
  %9 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast %struct.SkPoint* %4 to i64*
  %11 = bitcast %struct.SkPoint* %9 to i64*
  %12 = load i64, i64* %10, align 4
  store i64 %12, i64* %11, align 8
  %13 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 0, i32 0, i32 2
  %14 = bitcast %class.SkOpSpanBase** %13 to %class.SkOpSpan**
  store %class.SkOpSpan* %0, %class.SkOpSpan** %14, align 8
  %15 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 0, i32 0, i32 3
  store %class.SkOpPtT* %7, %class.SkOpPtT** %15, align 8
  %16 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 0, i32 0, i32 5
  store i8 0, i8* %16, align 1
  %17 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 0, i32 0, i32 4
  store i8 0, i8* %17, align 8
  %18 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 0, i32 0, i32 6
  store i8 0, i8* %18, align 2
  %19 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 0, i32 2
  %20 = bitcast %class.SkOpSpanBase** %19 to %class.SkOpSpan**
  store %class.SkOpSpan* %0, %class.SkOpSpan** %20, align 8
  %21 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 0, i32 3
  store %class.SkOpAngle* null, %class.SkOpAngle** %21, align 8
  %22 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 0, i32 4
  store %class.SkOpSpan* %2, %class.SkOpSpan** %22, align 8
  %23 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 0, i32 5
  store i32 0, i32* %23, align 8
  %24 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 0, i32 6
  store i8 1, i8* %24, align 4
  %25 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 0, i32 7
  %26 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 2
  store %class.SkOpSpan* %0, %class.SkOpSpan** %26, align 8
  %27 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 3
  store %class.SkOpAngle* null, %class.SkOpAngle** %27, align 8
  %28 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 6
  store i32 -2147483647, i32* %28, align 4
  %29 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 5
  store i32 -2147483647, i32* %29, align 8
  %30 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 7
  store i32 1, i32* %30, align 8
  %31 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 8
  store i8 0, i8* %25, align 1
  %32 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %1, i64 0, i32 8
  %33 = bitcast i32* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %33, i8 0, i64 9, i1 false)
  %34 = load i32, i32* %32, align 4
  %35 = add nsw i32 %34, 1
  store i32 %35, i32* %32, align 4
  %36 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 11
  store i8 0, i8* %36, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkOpSpan17insertCoincidenceEPK11SkOpSegmentbb(%class.SkOpSpan*, %class.SkOpSegment* readnone, i1 zeroext, i1 zeroext) local_unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 2
  %6 = load %class.SkOpSpan*, %class.SkOpSpan** %5, align 8
  br label %7

7:                                                ; preds = %12, %4
  %8 = phi %class.SkOpSpan* [ %6, %4 ], [ %14, %12 ]
  %9 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %8, i64 0, i32 0, i32 1
  %10 = load %class.SkOpSegment*, %class.SkOpSegment** %9, align 8
  %11 = icmp eq %class.SkOpSegment* %10, %1
  br i1 %11, label %102, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %8, i64 0, i32 2
  %14 = load %class.SkOpSpan*, %class.SkOpSpan** %13, align 8
  %15 = icmp eq %class.SkOpSpan* %14, %0
  br i1 %15, label %16, label %7

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 0, i32 0
  br label %18

18:                                               ; preds = %23, %16
  %19 = phi %class.SkOpPtT* [ %17, %16 ], [ %21, %23 ]
  %20 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %19, i64 0, i32 3
  %21 = load %class.SkOpPtT*, %class.SkOpPtT** %20, align 8
  %22 = icmp eq %class.SkOpPtT* %21, %17
  br i1 %22, label %102, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %21, i64 0, i32 2
  %25 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %24, align 8
  %26 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %25, i64 0, i32 1
  %27 = load %class.SkOpSegment*, %class.SkOpSegment** %26, align 8
  %28 = icmp eq %class.SkOpSegment* %27, %1
  br i1 %28, label %29, label %18

29:                                               ; preds = %23
  br i1 %3, label %73, label %30

30:                                               ; preds = %29
  %31 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 4
  %32 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %31, align 8
  %33 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %32, i64 0, i32 0
  %34 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %32, i64 0, i32 0, i32 3
  %35 = load %class.SkOpPtT*, %class.SkOpPtT** %34, align 8
  %36 = icmp eq %class.SkOpPtT* %35, %33
  br i1 %36, label %102, label %37

37:                                               ; preds = %30, %51
  %38 = phi %class.SkOpPtT* [ %53, %51 ], [ %35, %30 ]
  %39 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %38, i64 0, i32 4
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %51

42:                                               ; preds = %37
  %43 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %38, i64 0, i32 2
  %44 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %43, align 8
  %45 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %44, i64 0, i32 1
  %46 = load %class.SkOpSegment*, %class.SkOpSegment** %45, align 8
  %47 = icmp eq %class.SkOpSegment* %46, %1
  %48 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %44, i64 0, i32 0
  %49 = icmp eq %class.SkOpPtT* %48, %38
  %50 = and i1 %47, %49
  br i1 %50, label %55, label %51

51:                                               ; preds = %42, %37
  %52 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %38, i64 0, i32 3
  %53 = load %class.SkOpPtT*, %class.SkOpPtT** %52, align 8
  %54 = icmp eq %class.SkOpPtT* %53, %33
  br i1 %54, label %102, label %37

55:                                               ; preds = %42
  %56 = icmp eq %class.SkOpPtT* %38, null
  br i1 %56, label %102, label %57

57:                                               ; preds = %55
  %58 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %25, i64 0, i32 0
  %59 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %25, i64 0, i32 0, i32 0
  %60 = load double, double* %59, align 8
  %61 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %44, i64 0, i32 0, i32 0
  %62 = load double, double* %61, align 8
  %63 = fcmp olt double %60, %62
  %64 = select i1 %63, %class.SkOpPtT* %58, %class.SkOpPtT* %38
  %65 = getelementptr inbounds %class.SkOpPtT, %class.SkOpPtT* %64, i64 0, i32 2
  %66 = load %class.SkOpSpanBase*, %class.SkOpSpanBase** %65, align 8
  %67 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %66, i64 0, i32 0, i32 0
  %68 = load double, double* %67, align 8
  %69 = fcmp une double %68, 1.000000e+00
  %70 = bitcast %class.SkOpSpanBase* %66 to %class.SkOpSpan*
  %71 = icmp ne %class.SkOpSpanBase* %66, null
  %72 = and i1 %71, %69
  br i1 %72, label %85, label %102

73:                                               ; preds = %29
  br i1 %2, label %74, label %78

74:                                               ; preds = %73
  %75 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %25, i64 0, i32 4
  %76 = load %class.SkOpSpan*, %class.SkOpSpan** %75, align 8
  %77 = icmp eq %class.SkOpSpan* %76, null
  br i1 %77, label %102, label %85

78:                                               ; preds = %73
  %79 = getelementptr inbounds %class.SkOpSpanBase, %class.SkOpSpanBase* %25, i64 0, i32 0, i32 0
  %80 = load double, double* %79, align 8
  %81 = fcmp une double %80, 1.000000e+00
  %82 = bitcast %class.SkOpSpanBase* %25 to %class.SkOpSpan*
  %83 = icmp ne %class.SkOpSpanBase* %25, null
  %84 = and i1 %83, %81
  br i1 %84, label %85, label %102

85:                                               ; preds = %74, %78, %57
  %86 = phi %class.SkOpSpan* [ %76, %74 ], [ %70, %57 ], [ %82, %78 ]
  %87 = icmp eq %class.SkOpSpan* %6, %0
  br i1 %87, label %95, label %88

88:                                               ; preds = %85, %91
  %89 = phi %class.SkOpSpan* [ %93, %91 ], [ %6, %85 ]
  %90 = icmp eq %class.SkOpSpan* %89, %86
  br i1 %90, label %102, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %89, i64 0, i32 2
  %93 = load %class.SkOpSpan*, %class.SkOpSpan** %92, align 8
  %94 = icmp eq %class.SkOpSpan* %93, %0
  br i1 %94, label %95, label %88

95:                                               ; preds = %91, %85
  %96 = bitcast %class.SkOpSpan* %0 to %class.SkOpSpanBase*
  tail call void @_ZNK12SkOpSpanBase13debugValidateEv(%class.SkOpSpanBase* %96) #7
  %97 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %86, i64 0, i32 2
  %98 = bitcast %class.SkOpSpan** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %class.SkOpSpan** %5 to i64*
  %101 = load i64, i64* %100, align 8
  store i64 %101, i64* %98, align 8
  store i64 %99, i64* %100, align 8
  tail call void @_ZNK12SkOpSpanBase13debugValidateEv(%class.SkOpSpanBase* %96) #7
  br label %102

102:                                              ; preds = %7, %18, %51, %88, %74, %55, %30, %57, %95, %78
  %103 = phi i1 [ false, %74 ], [ false, %78 ], [ true, %95 ], [ false, %55 ], [ false, %57 ], [ false, %30 ], [ true, %88 ], [ false, %51 ], [ true, %18 ], [ true, %7 ]
  ret i1 %103
}

declare void @_ZN11SkOpSegment7releaseEPK8SkOpSpan(%class.SkOpSegment*, %class.SkOpSpan*) local_unnamed_addr #5

declare void @_ZN15SkOpCoincidence5fixUpEP7SkOpPtTPKS0_(%class.SkOpCoincidence*, %class.SkOpPtT*, %class.SkOpPtT*) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN8SkOpSpan9setOppSumEi(%class.SkOpSpan* nocapture, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 6
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, -2147483647
  %6 = icmp eq i32 %4, %1
  %7 = or i1 %5, %6
  br i1 %7, label %16, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 0, i32 1
  %10 = load %class.SkOpSegment*, %class.SkOpSegment** %9, align 8
  %11 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %10, i64 0, i32 2
  %12 = load %class.SkOpContour*, %class.SkOpContour** %11, align 8
  %13 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %12, i64 0, i32 0
  %14 = load %class.SkOpGlobalState*, %class.SkOpGlobalState** %13, align 8
  %15 = getelementptr inbounds %class.SkOpGlobalState, %class.SkOpGlobalState* %14, i64 0, i32 5
  store i8 1, i8* %15, align 1
  br label %17

16:                                               ; preds = %2
  store i32 %1, i32* %3, align 4
  br label %17

17:                                               ; preds = %16, %8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN8SkOpSpan10setWindSumEi(%class.SkOpSpan* nocapture, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, -2147483647
  %6 = icmp eq i32 %4, %1
  %7 = or i1 %5, %6
  br i1 %7, label %16, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SkOpSpan, %class.SkOpSpan* %0, i64 0, i32 0, i32 1
  %10 = load %class.SkOpSegment*, %class.SkOpSegment** %9, align 8
  %11 = getelementptr inbounds %class.SkOpSegment, %class.SkOpSegment* %10, i64 0, i32 2
  %12 = load %class.SkOpContour*, %class.SkOpContour** %11, align 8
  %13 = getelementptr inbounds %class.SkOpContour, %class.SkOpContour* %12, i64 0, i32 0
  %14 = load %class.SkOpGlobalState*, %class.SkOpGlobalState** %13, align 8
  %15 = getelementptr inbounds %class.SkOpGlobalState, %class.SkOpGlobalState* %14, i64 0, i32 5
  store i8 1, i8* %15, align 1
  br label %17

16:                                               ; preds = %2
  store i32 %1, i32* %3, align 8
  br label %17

17:                                               ; preds = %16, %8
  ret void
}

declare void @_ZNK12SkOpSpanBase13debugValidateEv(%class.SkOpSpanBase*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
