; ModuleID = '../../courgette/label_manager.cc'
source_filename = "../../courgette/label_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.courgette::LabelManager::SimpleIndexAssigner" = type { %"class.std::__1::vector"*, i32, %"class.std::__1::vector.1" }
%"class.std::__1::vector.1" = type { i64*, i64, %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.courgette::Label"*, %"class.courgette::Label"*, %"class.std::__1::__compressed_pair" }
%"class.courgette::Label" = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.courgette::Label"* }
%"class.courgette::LabelManager" = type { %"class.std::__1::vector" }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.courgette::RvaVisitor" = type { i32 (...)** }
%"struct.std::__1::__less.30" = type { i8 }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { i32*, i32*, %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { i32* }
%"class.std::__1::__bit_iterator" = type <{ i64*, i32, [4 x i8] }>
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNSt3__16vectorIbNS_9allocatorIbEEE6resizeEmb = comdat any

$_ZZN7logging15CheckOpValueStrIN9courgette5LabelUt_EEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_ = comdat any

$_ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEm = comdat any

$_ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeES8_S8_ = comdat any

$_ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [33 x i8] c"../../courgette/label_manager.cc\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c" of \00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c" labels pre-assigned.\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"  fill forward \00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"  fill backward \00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"  infill \00", align 1
@.str.6 = private unnamed_addr constant [32 x i8] c"Label::kNoIndex == label.index_\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN9courgette12LabelManager19SimpleIndexAssignerC1EPNSt3__16vectorINS_5LabelENS2_9allocatorIS4_EEEE = hidden unnamed_addr alias void (%"class.courgette::LabelManager::SimpleIndexAssigner"*, %"class.std::__1::vector"*), void (%"class.courgette::LabelManager::SimpleIndexAssigner"*, %"class.std::__1::vector"*)* @_ZN9courgette12LabelManager19SimpleIndexAssignerC2EPNSt3__16vectorINS_5LabelENS2_9allocatorIS4_EEEE
@_ZN9courgette12LabelManager19SimpleIndexAssignerD1Ev = hidden unnamed_addr alias void (%"class.courgette::LabelManager::SimpleIndexAssigner"*), void (%"class.courgette::LabelManager::SimpleIndexAssigner"*)* @_ZN9courgette12LabelManager19SimpleIndexAssignerD2Ev
@_ZN9courgette12LabelManagerC1Ev = hidden unnamed_addr alias void (%"class.courgette::LabelManager"*), void (%"class.courgette::LabelManager"*)* @_ZN9courgette12LabelManagerC2Ev
@_ZN9courgette12LabelManagerD1Ev = hidden unnamed_addr alias void (%"class.courgette::LabelManager"*), void (%"class.courgette::LabelManager"*)* @_ZN9courgette12LabelManagerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9courgette12LabelManager19SimpleIndexAssignerC2EPNSt3__16vectorINS_5LabelENS2_9allocatorIS4_EEEE(%"class.courgette::LabelManager::SimpleIndexAssigner"*, %"class.std::__1::vector"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::LogMessage", align 8
  %4 = getelementptr inbounds %"class.courgette::LabelManager::SimpleIndexAssigner", %"class.courgette::LabelManager::SimpleIndexAssigner"* %0, i64 0, i32 0
  store %"class.std::__1::vector"* %1, %"class.std::__1::vector"** %4, align 8
  %5 = getelementptr inbounds %"class.courgette::LabelManager::SimpleIndexAssigner", %"class.courgette::LabelManager::SimpleIndexAssigner"* %0, i64 0, i32 1
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"class.courgette::LabelManager::SimpleIndexAssigner", %"class.courgette::LabelManager::SimpleIndexAssigner"* %0, i64 0, i32 2
  %7 = bitcast %"class.std::__1::vector.1"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #11
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %9 = bitcast %"class.courgette::Label"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 12
  %15 = icmp ult i64 %14, 2147483648
  %16 = inttoptr i64 %12 to %"class.courgette::Label"*
  %17 = inttoptr i64 %10 to %"class.courgette::Label"*
  br i1 %15, label %19, label %18, !prof !2

18:                                               ; preds = %2
  tail call void @llvm.trap() #11
  unreachable

19:                                               ; preds = %2
  %20 = trunc i64 %14 to i32
  %21 = icmp eq %"class.courgette::Label"* %16, %17
  br i1 %21, label %35, label %24

22:                                               ; preds = %24
  %23 = add i32 %32, 1
  br label %35

24:                                               ; preds = %19, %24
  %25 = phi %"class.courgette::Label"* [ %33, %24 ], [ %16, %19 ]
  %26 = phi i32 [ %32, %24 ], [ -1, %19 ]
  %27 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %25, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, -1
  %30 = icmp slt i32 %26, %28
  %31 = select i1 %30, i32 %28, i32 %26
  %32 = select i1 %29, i32 %26, i32 %31
  %33 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %25, i64 1
  %34 = icmp eq %"class.courgette::Label"* %33, %17
  br i1 %34, label %22, label %24

35:                                               ; preds = %19, %22
  %36 = phi i32 [ 0, %19 ], [ %23, %22 ]
  %37 = icmp sgt i32 %36, %20
  %38 = select i1 %37, i32 %36, i32 %20
  store i32 %38, i32* %5, align 8
  %39 = sext i32 %38 to i64
  tail call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE6resizeEmb(%"class.std::__1::vector.1"* %6, i64 %39, i1 zeroext true)
  %40 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %40, i64 0, i32 0, i32 0
  %42 = load %"class.courgette::Label"*, %"class.courgette::Label"** %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %40, i64 0, i32 0, i32 1
  %44 = load %"class.courgette::Label"*, %"class.courgette::Label"** %43, align 8
  %45 = icmp eq %"class.courgette::Label"* %42, %44
  br i1 %45, label %49, label %46

46:                                               ; preds = %35
  %47 = getelementptr inbounds %"class.courgette::LabelManager::SimpleIndexAssigner", %"class.courgette::LabelManager::SimpleIndexAssigner"* %0, i64 0, i32 2, i32 1
  %48 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %6, i64 0, i32 0
  br label %53

49:                                               ; preds = %75, %35
  %50 = phi i64 [ 0, %35 ], [ %76, %75 ]
  %51 = tail call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i64 33) #11
  %52 = icmp sgt i32 %51, 0
  br i1 %52, label %79, label %95

53:                                               ; preds = %46, %75
  %54 = phi i64 [ 0, %46 ], [ %76, %75 ]
  %55 = phi %"class.courgette::Label"* [ %42, %46 ], [ %77, %75 ]
  %56 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %55, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, -1
  br i1 %58, label %75, label %59

59:                                               ; preds = %53
  %60 = sext i32 %57 to i64
  %61 = load i64, i64* %47, align 8
  %62 = icmp ugt i64 %61, %60
  br i1 %62, label %65, label %63

63:                                               ; preds = %59
  %64 = bitcast %"class.std::__1::vector.1"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %64) #12
  unreachable

65:                                               ; preds = %59
  %66 = load i64*, i64** %48, align 8
  %67 = lshr i64 %60, 6
  %68 = getelementptr inbounds i64, i64* %66, i64 %67
  %69 = and i64 %60, 63
  %70 = shl i64 1, %69
  %71 = xor i64 %70, -1
  %72 = load i64, i64* %68, align 8
  %73 = and i64 %72, %71
  store i64 %73, i64* %68, align 8
  %74 = add i64 %54, 1
  br label %75

75:                                               ; preds = %53, %65
  %76 = phi i64 [ %74, %65 ], [ %54, %53 ]
  %77 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %55, i64 1
  %78 = icmp eq %"class.courgette::Label"* %77, %44
  br i1 %78, label %49, label %53

79:                                               ; preds = %49
  %80 = bitcast %"class.logging::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %80) #11
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i32 34, i32 -1) #11
  %81 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %3, i64 0, i32 2
  %82 = bitcast %"class.std::__1::basic_ostringstream"* %81 to %"class.std::__1::basic_ostream"*
  %83 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %82, i64 %50) #11
  %84 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %83, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 4) #11
  %85 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %86 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %85, i64 0, i32 0, i32 1
  %87 = bitcast %"class.courgette::Label"** %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %"class.std::__1::vector"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = sub i64 %88, %90
  %92 = sdiv exact i64 %91, 12
  %93 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %84, i64 %92) #11
  %94 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %93, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), i64 21) #11
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %80) #11
  br label %95

95:                                               ; preds = %49, %79
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN9courgette12LabelManager18GetLabelIndexBoundERKNSt3__16vectorINS_5LabelENS1_9allocatorIS3_EEEE(%"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.courgette::Label"*, %"class.courgette::Label"** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %5 = load %"class.courgette::Label"*, %"class.courgette::Label"** %4, align 8
  %6 = icmp eq %"class.courgette::Label"* %3, %5
  br i1 %6, label %9, label %11

7:                                                ; preds = %11
  %8 = add i32 %19, 1
  br label %9

9:                                                ; preds = %7, %1
  %10 = phi i32 [ 0, %1 ], [ %8, %7 ]
  ret i32 %10

11:                                               ; preds = %1, %11
  %12 = phi %"class.courgette::Label"* [ %20, %11 ], [ %3, %1 ]
  %13 = phi i32 [ %19, %11 ], [ -1, %1 ]
  %14 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %12, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, -1
  %17 = icmp slt i32 %13, %15
  %18 = select i1 %17, i32 %15, i32 %13
  %19 = select i1 %16, i32 %13, i32 %18
  %20 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %12, i64 1
  %21 = icmp eq %"class.courgette::Label"* %20, %5
  br i1 %21, label %7, label %11
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbNS_9allocatorIbEEE6resizeEmb(%"class.std::__1::vector.1"*, i64, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::vector.1", align 16
  %5 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, %1
  br i1 %7, label %8, label %159

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 6
  %12 = sub i64 %1, %6
  %13 = icmp ult i64 %11, %12
  %14 = sub i64 %11, %12
  %15 = icmp ugt i64 %6, %14
  %16 = or i1 %13, %15
  br i1 %16, label %25, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0
  %19 = load i64*, i64** %18, align 8, !noalias !3
  %20 = lshr i64 %6, 6
  %21 = getelementptr inbounds i64, i64* %19, i64 %20
  %22 = trunc i64 %6 to i32
  %23 = and i32 %22, 63
  %24 = ptrtoint i64* %21 to i64
  store i64 %1, i64* %5, align 8
  br label %86

25:                                               ; preds = %8
  %26 = bitcast %"class.std::__1::vector.1"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #11
  %27 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %4, i64 0, i32 1
  %28 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %4, i64 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %26, i8 0, i64 24, i1 false) #11
  %29 = icmp slt i64 %1, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %25
  %31 = bitcast %"class.std::__1::vector.1"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %31) #12
  unreachable

32:                                               ; preds = %25
  %33 = icmp ult i64 %11, 4611686018427387903
  br i1 %33, label %34, label %40

34:                                               ; preds = %32
  %35 = shl i64 %10, 7
  %36 = add nuw i64 %1, 63
  %37 = and i64 %36, -64
  %38 = icmp ult i64 %35, %37
  %39 = select i1 %38, i64 %37, i64 %35
  br label %40

40:                                               ; preds = %34, %32
  %41 = phi i64 [ %39, %34 ], [ 9223372036854775807, %32 ]
  call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEm(%"class.std::__1::vector.1"* nonnull %4, i64 %41)
  %42 = load i64, i64* %5, align 8
  %43 = add i64 %42, %12
  store i64 %43, i64* %27, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = bitcast %"class.std::__1::vector.1"* %4 to i64*
  %47 = load i64, i64* %46, align 16, !noalias !8
  %48 = icmp sgt i64 %42, 0
  br i1 %48, label %49, label %70

49:                                               ; preds = %40
  %50 = inttoptr i64 %47 to i8*
  %51 = lshr i64 %42, 6
  %52 = bitcast i64* %45 to i8*
  %53 = shl nuw nsw i64 %51, 3
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %52, i64 %53, i1 false) #11, !noalias !13
  %54 = and i64 %42, 63
  %55 = inttoptr i64 %47 to i64*
  %56 = getelementptr inbounds i64, i64* %55, i64 %51
  %57 = ptrtoint i64* %56 to i64
  %58 = icmp eq i64 %54, 0
  br i1 %58, label %70, label %59

59:                                               ; preds = %49
  %60 = getelementptr inbounds i64, i64* %45, i64 %51
  %61 = sub nuw nsw i64 64, %54
  %62 = lshr i64 -1, %61
  %63 = load i64, i64* %60, align 8, !noalias !16
  %64 = and i64 %63, %62
  %65 = xor i64 %62, -1
  %66 = load i64, i64* %56, align 8, !noalias !13
  %67 = and i64 %66, %65
  %68 = or i64 %67, %64
  store i64 %68, i64* %56, align 8, !noalias !13
  %69 = trunc i64 %54 to i32
  br label %70

70:                                               ; preds = %49, %40, %59
  %71 = phi i32 [ %69, %59 ], [ 0, %49 ], [ 0, %40 ]
  %72 = phi i64 [ %57, %59 ], [ %57, %49 ], [ %47, %40 ]
  %73 = bitcast %"class.std::__1::vector.1"* %4 to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 16
  %75 = bitcast %"class.std::__1::vector.1"* %0 to <2 x i64>*
  %76 = load <2 x i64>, <2 x i64>* %75, align 8
  %77 = bitcast %"class.std::__1::vector.1"* %0 to <2 x i64>*
  store <2 x i64> %74, <2 x i64>* %77, align 8
  %78 = bitcast %"class.std::__1::vector.1"* %4 to <2 x i64>*
  store <2 x i64> %76, <2 x i64>* %78, align 16
  %79 = load i64, i64* %9, align 8
  %80 = load i64, i64* %28, align 16
  store i64 %80, i64* %9, align 8
  store i64 %79, i64* %28, align 16
  %81 = extractelement <2 x i64> %76, i32 0
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %70
  %84 = inttoptr i64 %81 to i8*
  call void @_ZdlPv(i8* %84) #13
  br label %85

85:                                               ; preds = %70, %83
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #11
  br label %86

86:                                               ; preds = %85, %17
  %87 = phi i64 [ %72, %85 ], [ %24, %17 ]
  %88 = phi i32 [ %71, %85 ], [ %23, %17 ]
  %89 = inttoptr i64 %87 to i64*
  %90 = icmp eq i64 %12, 0
  br i1 %90, label %160, label %91

91:                                               ; preds = %86
  %92 = icmp eq i32 %88, 0
  br i1 %2, label %93, label %125

93:                                               ; preds = %91
  br i1 %92, label %94, label %96

94:                                               ; preds = %93
  %95 = inttoptr i64 %87 to i8*
  br label %111

96:                                               ; preds = %93
  %97 = sub nuw nsw i32 64, %88
  %98 = zext i32 %97 to i64
  %99 = icmp ult i64 %12, %98
  %100 = select i1 %99, i64 %12, i64 %98
  %101 = zext i32 %88 to i64
  %102 = shl i64 -1, %101
  %103 = sub nsw i64 %98, %100
  %104 = lshr i64 -1, %103
  %105 = and i64 %104, %102
  %106 = load i64, i64* %89, align 8
  %107 = or i64 %106, %105
  store i64 %107, i64* %89, align 8
  %108 = sub i64 %12, %100
  %109 = getelementptr inbounds i64, i64* %89, i64 1
  %110 = bitcast i64* %109 to i8*
  br label %111

111:                                              ; preds = %96, %94
  %112 = phi i64* [ %89, %94 ], [ %109, %96 ]
  %113 = phi i8* [ %95, %94 ], [ %110, %96 ]
  %114 = phi i64 [ %12, %94 ], [ %108, %96 ]
  %115 = lshr i64 %114, 6
  %116 = shl nuw nsw i64 %115, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 -1, i64 %116, i1 false) #11
  %117 = and i64 %114, 63
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %160, label %119

119:                                              ; preds = %111
  %120 = getelementptr inbounds i64, i64* %112, i64 %115
  %121 = sub nuw nsw i64 64, %117
  %122 = lshr i64 -1, %121
  %123 = load i64, i64* %120, align 8
  %124 = or i64 %123, %122
  store i64 %124, i64* %120, align 8
  br label %160

125:                                              ; preds = %91
  br i1 %92, label %126, label %128

126:                                              ; preds = %125
  %127 = inttoptr i64 %87 to i8*
  br label %144

128:                                              ; preds = %125
  %129 = sub nuw nsw i32 64, %88
  %130 = zext i32 %129 to i64
  %131 = icmp ult i64 %12, %130
  %132 = select i1 %131, i64 %12, i64 %130
  %133 = zext i32 %88 to i64
  %134 = shl i64 -1, %133
  %135 = sub nsw i64 %130, %132
  %136 = lshr i64 -1, %135
  %137 = and i64 %136, %134
  %138 = xor i64 %137, -1
  %139 = load i64, i64* %89, align 8
  %140 = and i64 %139, %138
  store i64 %140, i64* %89, align 8
  %141 = sub i64 %12, %132
  %142 = getelementptr inbounds i64, i64* %89, i64 1
  %143 = bitcast i64* %142 to i8*
  br label %144

144:                                              ; preds = %128, %126
  %145 = phi i64* [ %89, %126 ], [ %142, %128 ]
  %146 = phi i8* [ %127, %126 ], [ %143, %128 ]
  %147 = phi i64 [ %12, %126 ], [ %141, %128 ]
  %148 = lshr i64 %147, 6
  %149 = shl nuw nsw i64 %148, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %146, i8 0, i64 %149, i1 false) #11
  %150 = and i64 %147, 63
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %160, label %152

152:                                              ; preds = %144
  %153 = getelementptr inbounds i64, i64* %145, i64 %148
  %154 = sub nuw nsw i64 64, %150
  %155 = lshr i64 -1, %154
  %156 = xor i64 %155, -1
  %157 = load i64, i64* %153, align 8
  %158 = and i64 %157, %156
  store i64 %158, i64* %153, align 8
  br label %160

159:                                              ; preds = %3
  store i64 %1, i64* %5, align 8
  br label %160

160:                                              ; preds = %152, %144, %119, %111, %86, %159
  ret void
}

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9courgette12LabelManager19SimpleIndexAssignerD2Ev(%"class.courgette::LabelManager::SimpleIndexAssigner"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.courgette::LabelManager::SimpleIndexAssigner", %"class.courgette::LabelManager::SimpleIndexAssigner"* %0, i64 0, i32 2, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = icmp eq i64* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast i64* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9courgette12LabelManager19SimpleIndexAssigner13DoForwardFillEv(%"class.courgette::LabelManager::SimpleIndexAssigner"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::LogMessage", align 8
  %3 = getelementptr inbounds %"class.courgette::LabelManager::SimpleIndexAssigner", %"class.courgette::LabelManager::SimpleIndexAssigner"* %0, i64 0, i32 0
  %4 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.courgette::Label"*, %"class.courgette::Label"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %8 = load %"class.courgette::Label"*, %"class.courgette::Label"** %7, align 8
  %9 = icmp eq %"class.courgette::Label"* %6, %8
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.courgette::LabelManager::SimpleIndexAssigner", %"class.courgette::LabelManager::SimpleIndexAssigner"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.courgette::LabelManager::SimpleIndexAssigner", %"class.courgette::LabelManager::SimpleIndexAssigner"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.courgette::LabelManager::SimpleIndexAssigner", %"class.courgette::LabelManager::SimpleIndexAssigner"* %0, i64 0, i32 2, i32 1
  %14 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %12, i64 0, i32 0
  br label %19

15:                                               ; preds = %62, %1
  %16 = phi i64 [ 0, %1 ], [ %65, %62 ]
  %17 = tail call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i64 33) #11
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %70, label %76

19:                                               ; preds = %10, %62
  %20 = phi %"class.std::__1::vector"* [ %4, %10 ], [ %63, %62 ]
  %21 = phi i32 [ -1, %10 ], [ %64, %62 ]
  %22 = phi i64 [ 0, %10 ], [ %65, %62 ]
  %23 = phi %"class.courgette::Label"* [ %6, %10 ], [ %66, %62 ]
  %24 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %23, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, -1
  br i1 %26, label %27, label %62

27:                                               ; preds = %19
  %28 = icmp eq i32 %21, -1
  %29 = add nsw i32 %21, 1
  %30 = select i1 %28, i32 0, i32 %29
  %31 = load i32, i32* %11, align 8
  %32 = icmp slt i32 %30, %31
  br i1 %32, label %33, label %62

33:                                               ; preds = %27
  %34 = sext i32 %30 to i64
  %35 = load i64, i64* %13, align 8
  %36 = icmp ugt i64 %35, %34
  br i1 %36, label %39, label %37

37:                                               ; preds = %33
  %38 = bitcast %"class.std::__1::vector.1"* %12 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %38) #12
  unreachable

39:                                               ; preds = %33
  %40 = load i64*, i64** %14, align 8
  %41 = lshr i64 %34, 6
  %42 = getelementptr inbounds i64, i64* %40, i64 %41
  %43 = and i64 %34, 63
  %44 = shl i64 1, %43
  %45 = load i64, i64* %42, align 8
  %46 = and i64 %45, %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %62, label %48

48:                                               ; preds = %39
  store i32 %30, i32* %24, align 4
  %49 = load i64, i64* %13, align 8
  %50 = icmp ugt i64 %49, %34
  br i1 %50, label %53, label %51

51:                                               ; preds = %48
  %52 = bitcast %"class.std::__1::vector.1"* %12 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %52) #12
  unreachable

53:                                               ; preds = %48
  %54 = load i64*, i64** %14, align 8
  %55 = getelementptr inbounds i64, i64* %54, i64 %41
  %56 = xor i64 %44, -1
  %57 = load i64, i64* %55, align 8
  %58 = and i64 %57, %56
  store i64 %58, i64* %55, align 8
  %59 = add i64 %22, 1
  %60 = load i32, i32* %24, align 4
  %61 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %3, align 8
  br label %62

62:                                               ; preds = %39, %27, %53, %19
  %63 = phi %"class.std::__1::vector"* [ %20, %19 ], [ %61, %53 ], [ %20, %39 ], [ %20, %27 ]
  %64 = phi i32 [ %25, %19 ], [ %60, %53 ], [ -1, %39 ], [ -1, %27 ]
  %65 = phi i64 [ %22, %19 ], [ %59, %53 ], [ %22, %39 ], [ %22, %27 ]
  %66 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %23, i64 1
  %67 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %63, i64 0, i32 0, i32 1
  %68 = load %"class.courgette::Label"*, %"class.courgette::Label"** %67, align 8
  %69 = icmp eq %"class.courgette::Label"* %66, %68
  br i1 %69, label %15, label %19

70:                                               ; preds = %15
  %71 = bitcast %"class.logging::LogMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %71) #11
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i32 55, i32 -1) #11
  %72 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %2, i64 0, i32 2
  %73 = bitcast %"class.std::__1::basic_ostringstream"* %72 to %"class.std::__1::basic_ostream"*
  %74 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %73, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i64 15) #11
  %75 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %74, i64 %16) #11
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %71) #11
  br label %76

76:                                               ; preds = %15, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9courgette12LabelManager19SimpleIndexAssigner14DoBackwardFillEv(%"class.courgette::LabelManager::SimpleIndexAssigner"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::LogMessage", align 8
  %3 = getelementptr inbounds %"class.courgette::LabelManager::SimpleIndexAssigner", %"class.courgette::LabelManager::SimpleIndexAssigner"* %0, i64 0, i32 0
  %4 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %6 = load %"class.courgette::Label"*, %"class.courgette::Label"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.courgette::Label"*, %"class.courgette::Label"** %7, align 8
  %9 = icmp eq %"class.courgette::Label"* %6, %8
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.courgette::LabelManager::SimpleIndexAssigner", %"class.courgette::LabelManager::SimpleIndexAssigner"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.courgette::LabelManager::SimpleIndexAssigner", %"class.courgette::LabelManager::SimpleIndexAssigner"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.courgette::LabelManager::SimpleIndexAssigner", %"class.courgette::LabelManager::SimpleIndexAssigner"* %0, i64 0, i32 2, i32 1
  %14 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %12, i64 0, i32 0
  br label %19

15:                                               ; preds = %62, %1
  %16 = phi i64 [ 0, %1 ], [ %64, %62 ]
  %17 = tail call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i64 33) #11
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %68, label %74

19:                                               ; preds = %10, %62
  %20 = phi %"class.std::__1::vector"* [ %4, %10 ], [ %63, %62 ]
  %21 = phi i32* [ %11, %10 ], [ %26, %62 ]
  %22 = phi i64 [ 0, %10 ], [ %64, %62 ]
  %23 = phi %"class.courgette::Label"* [ %6, %10 ], [ %25, %62 ]
  %24 = load i32, i32* %21, align 4
  %25 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %23, i64 -1
  %26 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %23, i64 -1, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, -1
  %29 = icmp ne i32 %24, -1
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %62

31:                                               ; preds = %19
  %32 = add nsw i32 %24, -1
  %33 = icmp sgt i32 %24, 0
  br i1 %33, label %34, label %62

34:                                               ; preds = %31
  %35 = sext i32 %32 to i64
  %36 = load i64, i64* %13, align 8
  %37 = icmp ugt i64 %36, %35
  br i1 %37, label %40, label %38

38:                                               ; preds = %34
  %39 = bitcast %"class.std::__1::vector.1"* %12 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %39) #12
  unreachable

40:                                               ; preds = %34
  %41 = load i64*, i64** %14, align 8
  %42 = lshr i64 %35, 6
  %43 = getelementptr inbounds i64, i64* %41, i64 %42
  %44 = and i64 %35, 63
  %45 = shl i64 1, %44
  %46 = load i64, i64* %43, align 8
  %47 = and i64 %46, %45
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %62, label %49

49:                                               ; preds = %40
  store i32 %32, i32* %26, align 4
  %50 = load i64, i64* %13, align 8
  %51 = icmp ugt i64 %50, %35
  br i1 %51, label %54, label %52

52:                                               ; preds = %49
  %53 = bitcast %"class.std::__1::vector.1"* %12 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %53) #12
  unreachable

54:                                               ; preds = %49
  %55 = load i64*, i64** %14, align 8
  %56 = getelementptr inbounds i64, i64* %55, i64 %42
  %57 = xor i64 %45, -1
  %58 = load i64, i64* %56, align 8
  %59 = and i64 %58, %57
  store i64 %59, i64* %56, align 8
  %60 = add i64 %22, 1
  %61 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %3, align 8
  br label %62

62:                                               ; preds = %40, %31, %54, %19
  %63 = phi %"class.std::__1::vector"* [ %20, %19 ], [ %61, %54 ], [ %20, %40 ], [ %20, %31 ]
  %64 = phi i64 [ %22, %19 ], [ %60, %54 ], [ %22, %40 ], [ %22, %31 ]
  %65 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %63, i64 0, i32 0, i32 0
  %66 = load %"class.courgette::Label"*, %"class.courgette::Label"** %65, align 8
  %67 = icmp eq %"class.courgette::Label"* %25, %66
  br i1 %67, label %15, label %19

68:                                               ; preds = %15
  %69 = bitcast %"class.logging::LogMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %69) #11
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i32 77, i32 -1) #11
  %70 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %2, i64 0, i32 2
  %71 = bitcast %"class.std::__1::basic_ostringstream"* %70 to %"class.std::__1::basic_ostream"*
  %72 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %71, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0), i64 16) #11
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %72, i64 %16) #11
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %69) #11
  br label %74

74:                                               ; preds = %15, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9courgette12LabelManager19SimpleIndexAssigner8DoInFillEv(%"class.courgette::LabelManager::SimpleIndexAssigner"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::LogMessage", align 8
  %3 = getelementptr inbounds %"class.courgette::LabelManager::SimpleIndexAssigner", %"class.courgette::LabelManager::SimpleIndexAssigner"* %0, i64 0, i32 0
  %4 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.courgette::Label"*, %"class.courgette::Label"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %8 = load %"class.courgette::Label"*, %"class.courgette::Label"** %7, align 8
  %9 = icmp eq %"class.courgette::Label"* %6, %8
  br i1 %9, label %14, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.courgette::LabelManager::SimpleIndexAssigner", %"class.courgette::LabelManager::SimpleIndexAssigner"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.courgette::LabelManager::SimpleIndexAssigner", %"class.courgette::LabelManager::SimpleIndexAssigner"* %0, i64 0, i32 2, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %11, i64 0, i32 0
  br label %18

14:                                               ; preds = %59, %1
  %15 = phi i64 [ 0, %1 ], [ %61, %59 ]
  %16 = tail call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i64 33) #11
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %64, label %70

18:                                               ; preds = %10, %59
  %19 = phi i64 [ 0, %10 ], [ %61, %59 ]
  %20 = phi i32 [ 0, %10 ], [ %60, %59 ]
  %21 = phi %"class.courgette::Label"* [ %6, %10 ], [ %62, %59 ]
  %22 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %21, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, -1
  br i1 %24, label %25, label %59

25:                                               ; preds = %18
  %26 = sext i32 %20 to i64
  %27 = load i64, i64* %12, align 8
  %28 = icmp ugt i64 %27, %26
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = load i64*, i64** %13, align 8
  br label %33

31:                                               ; preds = %25, %42
  %32 = bitcast %"class.std::__1::vector.1"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %32) #12
  unreachable

33:                                               ; preds = %29, %42
  %34 = phi i64 [ %26, %29 ], [ %43, %42 ]
  %35 = lshr i64 %34, 6
  %36 = getelementptr inbounds i64, i64* %30, i64 %35
  %37 = and i64 %34, 63
  %38 = shl i64 1, %37
  %39 = load i64, i64* %36, align 8
  %40 = and i64 %39, %38
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %33
  %43 = add i64 %34, 1
  %44 = icmp ugt i64 %27, %43
  br i1 %44, label %33, label %31

45:                                               ; preds = %33
  %46 = trunc i64 %34 to i32
  store i32 %46, i32* %22, align 4
  %47 = load i64, i64* %12, align 8
  %48 = icmp ugt i64 %47, %34
  br i1 %48, label %51, label %49

49:                                               ; preds = %45
  %50 = bitcast %"class.std::__1::vector.1"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %50) #12
  unreachable

51:                                               ; preds = %45
  %52 = load i64*, i64** %13, align 8
  %53 = getelementptr inbounds i64, i64* %52, i64 %35
  %54 = xor i64 %38, -1
  %55 = load i64, i64* %53, align 8
  %56 = and i64 %55, %54
  store i64 %56, i64* %53, align 8
  %57 = add nsw i32 %46, 1
  %58 = add i64 %19, 1
  br label %59

59:                                               ; preds = %51, %18
  %60 = phi i32 [ %57, %51 ], [ %20, %18 ]
  %61 = phi i64 [ %58, %51 ], [ %19, %18 ]
  %62 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %21, i64 1
  %63 = icmp eq %"class.courgette::Label"* %62, %8
  br i1 %63, label %14, label %18

64:                                               ; preds = %14
  %65 = bitcast %"class.logging::LogMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %65) #11
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i32 93, i32 -1) #11
  %66 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %2, i64 0, i32 2
  %67 = bitcast %"class.std::__1::basic_ostringstream"* %66 to %"class.std::__1::basic_ostream"*
  %68 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %67, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i64 9) #11
  %69 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %68, i64 %15) #11
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %65) #11
  br label %70

70:                                               ; preds = %14, %64
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9courgette12LabelManagerC2Ev(%"class.courgette::LabelManager"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.courgette::LabelManager"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9courgette12LabelManagerD2Ev(%"class.courgette::LabelManager"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.courgette::LabelManager", %"class.courgette::LabelManager"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.courgette::Label"*, %"class.courgette::Label"** %2, align 8
  %4 = icmp eq %"class.courgette::Label"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.courgette::Label"* %3 to i64
  %7 = getelementptr inbounds %"class.courgette::LabelManager", %"class.courgette::LabelManager"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.courgette::Label"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"class.courgette::Label"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #13
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"class.courgette::Label"* @_ZN9courgette12LabelManager4FindEj(%"class.courgette::LabelManager"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.courgette::LabelManager", %"class.courgette::LabelManager"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.courgette::Label"*, %"class.courgette::Label"** %3, align 8
  %5 = getelementptr inbounds %"class.courgette::LabelManager", %"class.courgette::LabelManager"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = load %"class.courgette::Label"*, %"class.courgette::Label"** %5, align 8
  %7 = ptrtoint %"class.courgette::Label"* %4 to i64
  %8 = ptrtoint %"class.courgette::Label"* %6 to i64
  %9 = sub i64 %8, %7
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %27, label %11

11:                                               ; preds = %2
  %12 = sdiv exact i64 %9, 12
  br label %13

13:                                               ; preds = %13, %11
  %14 = phi %"class.courgette::Label"* [ %4, %11 ], [ %25, %13 ]
  %15 = phi i64 [ %12, %11 ], [ %24, %13 ]
  %16 = lshr i64 %15, 1
  %17 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %14, i64 %16
  %18 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %17, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp ult i32 %19, %1
  %21 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %17, i64 1
  %22 = xor i64 %16, -1
  %23 = add i64 %15, %22
  %24 = select i1 %20, i64 %23, i64 %16
  %25 = select i1 %20, %"class.courgette::Label"* %21, %"class.courgette::Label"* %14
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %27, label %13

27:                                               ; preds = %13, %2
  %28 = phi %"class.courgette::Label"* [ %4, %2 ], [ %25, %13 ]
  %29 = icmp eq %"class.courgette::Label"* %28, %6
  br i1 %29, label %35, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %28, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, %1
  %34 = select i1 %33, %"class.courgette::Label"* %28, %"class.courgette::Label"* null
  ret %"class.courgette::Label"* %34

35:                                               ; preds = %27
  ret %"class.courgette::Label"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9courgette12LabelManager15UnassignIndexesEv(%"class.courgette::LabelManager"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.courgette::LabelManager", %"class.courgette::LabelManager"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.courgette::Label"*, %"class.courgette::Label"** %2, align 8
  %4 = getelementptr inbounds %"class.courgette::LabelManager", %"class.courgette::LabelManager"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load %"class.courgette::Label"*, %"class.courgette::Label"** %4, align 8
  %6 = icmp eq %"class.courgette::Label"* %3, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %8, %1
  ret void

8:                                                ; preds = %1, %8
  %9 = phi %"class.courgette::Label"* [ %11, %8 ], [ %3, %1 ]
  %10 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %9, i64 0, i32 1
  store i32 -1, i32* %10, align 4
  %11 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %9, i64 1
  %12 = icmp eq %"class.courgette::Label"* %11, %5
  br i1 %12, label %7, label %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9courgette12LabelManager20DefaultAssignIndexesEv(%"class.courgette::LabelManager"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.courgette::LabelManager", %"class.courgette::LabelManager"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.courgette::Label"*, %"class.courgette::Label"** %6, align 8
  %8 = getelementptr inbounds %"class.courgette::LabelManager", %"class.courgette::LabelManager"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.courgette::Label"*, %"class.courgette::Label"** %8, align 8
  %10 = icmp eq %"class.courgette::Label"* %7, %9
  br i1 %10, label %18, label %11

11:                                               ; preds = %1
  %12 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %14 = bitcast i32* %4 to i8*
  %15 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %17 = bitcast %"class.logging::CheckError"* %5 to i8*
  br label %19

18:                                               ; preds = %34, %1
  ret void

19:                                               ; preds = %11, %34
  %20 = phi i32 [ 0, %11 ], [ %35, %34 ]
  %21 = phi %"class.courgette::Label"* [ %7, %11 ], [ %36, %34 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %13, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #11
  store i32 -1, i32* %4, align 4
  %22 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %21, i64 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, -1
  br i1 %24, label %25, label %26

25:                                               ; preds = %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* null, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #11
  br label %34

26:                                               ; preds = %19
  %27 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %14, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIN9courgette5LabelUt_EEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #11
  %28 = load i32, i32* %22, align 4
  %29 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %28) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6, i64 0, i64 0), i8* %27, i8* %29) #11
  %30 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %30, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #11
  %31 = icmp eq i8* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %26
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i32 126, %"class.logging::CheckOpResult"* nonnull %3) #11
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %34

34:                                               ; preds = %25, %26, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #11
  %35 = add nuw nsw i32 %20, 1
  store i32 %20, i32* %22, align 4
  %36 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %21, i64 1
  %37 = icmp eq %"class.courgette::Label"* %36, %9
  br i1 %37, label %18, label %19
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9courgette12LabelManager22AssignRemainingIndexesEv(%"class.courgette::LabelManager"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.courgette::LabelManager::SimpleIndexAssigner", align 8
  %3 = bitcast %"class.courgette::LabelManager::SimpleIndexAssigner"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 40, i1 false)
  %4 = getelementptr inbounds %"class.courgette::LabelManager", %"class.courgette::LabelManager"* %0, i64 0, i32 0
  call void @_ZN9courgette12LabelManager19SimpleIndexAssignerC2EPNSt3__16vectorINS_5LabelENS2_9allocatorIS4_EEEE(%"class.courgette::LabelManager::SimpleIndexAssigner"* nonnull %2, %"class.std::__1::vector"* %4)
  call void @_ZN9courgette12LabelManager19SimpleIndexAssigner13DoForwardFillEv(%"class.courgette::LabelManager::SimpleIndexAssigner"* nonnull %2)
  call void @_ZN9courgette12LabelManager19SimpleIndexAssigner14DoBackwardFillEv(%"class.courgette::LabelManager::SimpleIndexAssigner"* nonnull %2)
  call void @_ZN9courgette12LabelManager19SimpleIndexAssigner8DoInFillEv(%"class.courgette::LabelManager::SimpleIndexAssigner"* nonnull %2)
  %5 = getelementptr inbounds %"class.courgette::LabelManager::SimpleIndexAssigner", %"class.courgette::LabelManager::SimpleIndexAssigner"* %2, i64 0, i32 2, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = icmp eq i64* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = bitcast i64* %6 to i8*
  call void @_ZdlPv(i8* %9) #13
  br label %10

10:                                               ; preds = %1, %8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9courgette12LabelManager4ReadEPNS_10RvaVisitorE(%"class.courgette::LabelManager"*, %"class.courgette::RvaVisitor"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::__less.30", align 1
  %4 = alloca %"class.std::__1::vector.13", align 8
  %5 = bitcast %"class.courgette::RvaVisitor"* %1 to i64 (%"class.courgette::RvaVisitor"*)***
  %6 = load i64 (%"class.courgette::RvaVisitor"*)**, i64 (%"class.courgette::RvaVisitor"*)*** %5, align 8
  %7 = getelementptr inbounds i64 (%"class.courgette::RvaVisitor"*)*, i64 (%"class.courgette::RvaVisitor"*)** %6, i64 2
  %8 = load i64 (%"class.courgette::RvaVisitor"*)*, i64 (%"class.courgette::RvaVisitor"*)** %7, align 8
  %9 = tail call i64 %8(%"class.courgette::RvaVisitor"* %1) #11
  %10 = bitcast %"class.std::__1::vector.13"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %4, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %4, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.13", %"class.std::__1::vector.13"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #11
  %14 = icmp eq i64 %9, 0
  br i1 %14, label %38, label %15

15:                                               ; preds = %2
  %16 = icmp ugt i64 %9, 4611686018427387903
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = bitcast %"class.std::__1::vector.13"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %18) #12
  unreachable

19:                                               ; preds = %15
  %20 = shl i64 %9, 2
  %21 = tail call i8* @_Znwm(i64 %20) #13
  %22 = bitcast i8* %21 to i32*
  %23 = bitcast %"class.std::__1::vector.13"* %4 to i8**
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds i32, i32* %22, i64 %9
  store i32* %24, i32** %13, align 8
  %25 = bitcast i32** %12 to i64*
  %26 = ptrtoint i8* %21 to i64
  %27 = add nsw i64 %9, -1
  %28 = getelementptr i32, i32* %22, i64 %27
  %29 = ptrtoint i32* %28 to i64
  %30 = sub i64 4, %26
  %31 = add i64 %30, %29
  %32 = and i64 %31, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %21, i8 0, i64 %32, i1 false) #11
  %33 = ptrtoint i32* %24 to i64
  store i64 %33, i64* %25, align 8
  %34 = bitcast %"class.courgette::RvaVisitor"* %1 to i32 (%"class.courgette::RvaVisitor"*)***
  %35 = bitcast %"class.courgette::RvaVisitor"* %1 to void (%"class.courgette::RvaVisitor"*)***
  br label %55

36:                                               ; preds = %55
  %37 = load i32*, i32** %12, align 8
  br label %38

38:                                               ; preds = %2, %36
  %39 = phi i32* [ %37, %36 ], [ null, %2 ]
  %40 = phi i32* [ %68, %36 ], [ null, %2 ]
  %41 = getelementptr inbounds %"struct.std::__1::__less.30", %"struct.std::__1::__less.30"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %41) #11
  call void @_ZNSt3__16__sortIRNS_6__lessIjjEEPjEEvT0_S5_T_(i32* %40, i32* %39, %"struct.std::__1::__less.30"* nonnull dereferenceable(1) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %41) #11
  %42 = load i32*, i32** %11, align 8
  %43 = load i32*, i32** %12, align 8
  %44 = icmp eq i32* %42, %43
  br i1 %44, label %69, label %45

45:                                               ; preds = %38, %49
  %46 = phi i32* [ %47, %49 ], [ %42, %38 ]
  %47 = getelementptr inbounds i32, i32* %46, i64 1
  %48 = icmp eq i32* %47, %43
  br i1 %48, label %53, label %49

49:                                               ; preds = %45
  %50 = load i32, i32* %47, align 4
  %51 = load i32, i32* %42, align 4
  %52 = icmp eq i32 %50, %51
  br i1 %52, label %45, label %53

53:                                               ; preds = %45, %49
  %54 = phi i32* [ %47, %49 ], [ %43, %45 ]
  br i1 %44, label %69, label %133

55:                                               ; preds = %55, %19
  %56 = phi i32* [ %22, %19 ], [ %68, %55 ]
  %57 = phi i64 [ 0, %19 ], [ %63, %55 ]
  %58 = load i32 (%"class.courgette::RvaVisitor"*)**, i32 (%"class.courgette::RvaVisitor"*)*** %34, align 8
  %59 = getelementptr inbounds i32 (%"class.courgette::RvaVisitor"*)*, i32 (%"class.courgette::RvaVisitor"*)** %58, i64 3
  %60 = load i32 (%"class.courgette::RvaVisitor"*)*, i32 (%"class.courgette::RvaVisitor"*)** %59, align 8
  %61 = tail call i32 %60(%"class.courgette::RvaVisitor"* %1) #11
  %62 = getelementptr inbounds i32, i32* %56, i64 %57
  store i32 %61, i32* %62, align 4
  %63 = add nuw i64 %57, 1
  %64 = load void (%"class.courgette::RvaVisitor"*)**, void (%"class.courgette::RvaVisitor"*)*** %35, align 8
  %65 = getelementptr inbounds void (%"class.courgette::RvaVisitor"*)*, void (%"class.courgette::RvaVisitor"*)** %64, i64 4
  %66 = load void (%"class.courgette::RvaVisitor"*)*, void (%"class.courgette::RvaVisitor"*)** %65, align 8
  tail call void %66(%"class.courgette::RvaVisitor"* %1) #11
  %67 = icmp eq i64 %63, %9
  %68 = load i32*, i32** %11, align 8
  br i1 %67, label %36, label %55

69:                                               ; preds = %53, %38
  %70 = getelementptr inbounds %"class.courgette::LabelManager", %"class.courgette::LabelManager"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %71 = bitcast %"class.courgette::Label"** %70 to i64*
  %72 = bitcast %"class.courgette::LabelManager"* %0 to i64*
  br label %111

73:                                               ; preds = %133, %146
  %74 = getelementptr inbounds %"class.courgette::LabelManager", %"class.courgette::LabelManager"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %75 = bitcast %"class.courgette::Label"** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.courgette::LabelManager"* %0 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = sub i64 %76, %78
  %80 = sdiv exact i64 %79, 12
  %81 = icmp ult i64 %80, %136
  br i1 %81, label %82, label %111

82:                                               ; preds = %73
  %83 = getelementptr inbounds %"class.courgette::LabelManager", %"class.courgette::LabelManager"* %0, i64 0, i32 0, i32 0, i32 1
  %84 = bitcast %"class.courgette::Label"** %83 to i64*
  %85 = icmp ugt i64 %136, 1537228672809129301
  br i1 %85, label %86, label %87

86:                                               ; preds = %82
  call void @abort() #12
  unreachable

87:                                               ; preds = %82
  %88 = load i64, i64* %84, align 8
  %89 = sub i64 %88, %78
  %90 = sdiv exact i64 %89, 12
  %91 = mul i64 %136, 12
  %92 = call i8* @_Znwm(i64 %91) #13
  %93 = bitcast i8* %92 to %"class.courgette::Label"*
  %94 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %93, i64 %90
  %95 = ptrtoint %"class.courgette::Label"* %94 to i64
  %96 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %93, i64 %136
  %97 = ptrtoint %"class.courgette::Label"* %96 to i64
  %98 = sdiv exact i64 %89, -12
  %99 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %94, i64 %98
  %100 = ptrtoint %"class.courgette::Label"* %99 to i64
  %101 = icmp sgt i64 %89, 0
  br i1 %101, label %102, label %105

102:                                              ; preds = %87
  %103 = bitcast %"class.courgette::Label"* %99 to i8*
  %104 = inttoptr i64 %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %103, i8* align 4 %104, i64 %89, i1 false) #11
  br label %105

105:                                              ; preds = %102, %87
  store i64 %100, i64* %77, align 8
  store i64 %95, i64* %84, align 8
  store i64 %97, i64* %75, align 8
  %106 = icmp eq i64 %78, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %105
  %108 = inttoptr i64 %78 to i8*
  call void @_ZdlPv(i8* %108) #13
  %109 = load i32*, i32** %11, align 8
  %110 = load i32*, i32** %12, align 8
  br label %111

111:                                              ; preds = %69, %73, %105, %107
  %112 = phi i64* [ %77, %73 ], [ %77, %105 ], [ %77, %107 ], [ %72, %69 ]
  %113 = phi i64* [ %75, %73 ], [ %75, %105 ], [ %75, %107 ], [ %71, %69 ]
  %114 = phi %"class.courgette::Label"** [ %74, %73 ], [ %74, %105 ], [ %74, %107 ], [ %70, %69 ]
  %115 = phi i32* [ %43, %73 ], [ %43, %105 ], [ %110, %107 ], [ %43, %69 ]
  %116 = phi i32* [ %42, %73 ], [ %42, %105 ], [ %109, %107 ], [ %42, %69 ]
  %117 = ptrtoint i32* %116 to i64
  %118 = icmp eq i32* %116, %115
  br i1 %118, label %150, label %119

119:                                              ; preds = %111, %123
  %120 = phi i32* [ %121, %123 ], [ %116, %111 ]
  %121 = getelementptr inbounds i32, i32* %120, i64 1
  %122 = icmp eq i32* %121, %115
  br i1 %122, label %127, label %123

123:                                              ; preds = %119
  %124 = load i32, i32* %121, align 4
  %125 = load i32, i32* %116, align 4
  %126 = icmp eq i32 %124, %125
  br i1 %126, label %119, label %127

127:                                              ; preds = %119, %123
  %128 = phi i32* [ %121, %123 ], [ %115, %119 ]
  br i1 %118, label %150, label %129

129:                                              ; preds = %127
  %130 = getelementptr inbounds %"class.courgette::LabelManager", %"class.courgette::LabelManager"* %0, i64 0, i32 0, i32 0, i32 1
  %131 = bitcast %"class.courgette::Label"** %130 to i64*
  %132 = getelementptr inbounds %"class.courgette::LabelManager", %"class.courgette::LabelManager"* %0, i64 0, i32 0, i32 0, i32 0
  br label %158

133:                                              ; preds = %53, %146
  %134 = phi i64 [ %136, %146 ], [ 0, %53 ]
  %135 = phi i32* [ %147, %146 ], [ %54, %53 ]
  %136 = add i64 %134, 1
  %137 = icmp eq i32* %43, %135
  br i1 %137, label %73, label %138

138:                                              ; preds = %133, %142
  %139 = phi i32* [ %140, %142 ], [ %135, %133 ]
  %140 = getelementptr inbounds i32, i32* %139, i64 1
  %141 = icmp eq i32* %140, %43
  br i1 %141, label %146, label %142

142:                                              ; preds = %138
  %143 = load i32, i32* %140, align 4
  %144 = load i32, i32* %135, align 4
  %145 = icmp eq i32 %143, %144
  br i1 %145, label %138, label %146

146:                                              ; preds = %138, %142
  %147 = phi i32* [ %140, %142 ], [ %43, %138 ]
  br i1 %137, label %73, label %133

148:                                              ; preds = %230, %243
  %149 = load i32*, i32** %11, align 8
  br label %150

150:                                              ; preds = %111, %148, %127
  %151 = phi i32* [ %149, %148 ], [ %115, %127 ], [ %115, %111 ]
  %152 = icmp eq i32* %151, null
  br i1 %152, label %157, label %153

153:                                              ; preds = %150
  %154 = ptrtoint i32* %151 to i64
  %155 = bitcast i32** %12 to i64*
  store i64 %154, i64* %155, align 8
  %156 = bitcast i32* %151 to i8*
  call void @_ZdlPv(i8* %156) #13
  br label %157

157:                                              ; preds = %150, %153
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #11
  ret void

158:                                              ; preds = %129, %243
  %159 = phi i32* [ %116, %129 ], [ %161, %243 ]
  %160 = phi i64 [ %117, %129 ], [ %162, %243 ]
  %161 = phi i32* [ %128, %129 ], [ %244, %243 ]
  %162 = ptrtoint i32* %161 to i64
  %163 = load i32, i32* %159, align 4
  %164 = load %"class.courgette::Label"*, %"class.courgette::Label"** %130, align 8
  %165 = load %"class.courgette::Label"*, %"class.courgette::Label"** %114, align 8
  %166 = icmp ult %"class.courgette::Label"* %164, %165
  %167 = ptrtoint %"class.courgette::Label"* %165 to i64
  br i1 %166, label %168, label %174

168:                                              ; preds = %158
  %169 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %164, i64 0, i32 0
  store i32 %163, i32* %169, align 4
  %170 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %164, i64 0, i32 1
  store i32 -1, i32* %170, align 4
  %171 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %164, i64 0, i32 2
  store i32 0, i32* %171, align 4
  %172 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %164, i64 1
  %173 = ptrtoint %"class.courgette::Label"* %172 to i64
  store i64 %173, i64* %131, align 8
  br label %225

174:                                              ; preds = %158
  %175 = ptrtoint %"class.courgette::Label"* %164 to i64
  %176 = load i64, i64* %112, align 8
  %177 = sub i64 %175, %176
  %178 = sdiv exact i64 %177, 12
  %179 = add nsw i64 %178, 1
  %180 = icmp ugt i64 %179, 1537228672809129301
  br i1 %180, label %181, label %183

181:                                              ; preds = %174
  %182 = bitcast %"class.courgette::LabelManager"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %182) #12
  unreachable

183:                                              ; preds = %174
  %184 = sub i64 %167, %176
  %185 = sdiv exact i64 %184, 12
  %186 = icmp ult i64 %185, 768614336404564650
  br i1 %186, label %187, label %192

187:                                              ; preds = %183
  %188 = shl nsw i64 %185, 1
  %189 = icmp ult i64 %188, %179
  %190 = select i1 %189, i64 %179, i64 %188
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %197, label %192

192:                                              ; preds = %187, %183
  %193 = phi i64 [ %190, %187 ], [ 1537228672809129301, %183 ]
  %194 = mul i64 %193, 12
  %195 = call i8* @_Znwm(i64 %194) #13
  %196 = bitcast i8* %195 to %"class.courgette::Label"*
  br label %197

197:                                              ; preds = %192, %187
  %198 = phi i64 [ %193, %192 ], [ 0, %187 ]
  %199 = phi %"class.courgette::Label"* [ %196, %192 ], [ null, %187 ]
  %200 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %199, i64 %178
  %201 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %199, i64 %198
  %202 = ptrtoint %"class.courgette::Label"* %201 to i64
  %203 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %200, i64 0, i32 0
  store i32 %163, i32* %203, align 4
  %204 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %199, i64 %178, i32 1
  store i32 -1, i32* %204, align 4
  %205 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %199, i64 %178, i32 2
  store i32 0, i32* %205, align 4
  %206 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %200, i64 1
  %207 = ptrtoint %"class.courgette::Label"* %206 to i64
  %208 = load %"class.courgette::Label"*, %"class.courgette::Label"** %132, align 8
  %209 = load i64, i64* %131, align 8
  %210 = ptrtoint %"class.courgette::Label"* %208 to i64
  %211 = sub i64 %209, %210
  %212 = sdiv exact i64 %211, -12
  %213 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %200, i64 %212
  %214 = ptrtoint %"class.courgette::Label"* %213 to i64
  %215 = icmp sgt i64 %211, 0
  br i1 %215, label %216, label %220

216:                                              ; preds = %197
  %217 = bitcast %"class.courgette::Label"* %213 to i8*
  %218 = bitcast %"class.courgette::Label"* %208 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %217, i8* align 4 %218, i64 %211, i1 false) #11
  %219 = load %"class.courgette::Label"*, %"class.courgette::Label"** %132, align 8
  br label %220

220:                                              ; preds = %216, %197
  %221 = phi %"class.courgette::Label"* [ %208, %197 ], [ %219, %216 ]
  store i64 %214, i64* %112, align 8
  store i64 %207, i64* %131, align 8
  store i64 %202, i64* %113, align 8
  %222 = icmp eq %"class.courgette::Label"* %221, null
  br i1 %222, label %225, label %223

223:                                              ; preds = %220
  %224 = bitcast %"class.courgette::Label"* %221 to i8*
  call void @_ZdlPv(i8* %224) #13
  br label %225

225:                                              ; preds = %168, %220, %223
  %226 = sub i64 %162, %160
  %227 = ashr exact i64 %226, 2
  %228 = icmp ult i64 %227, 2147483648
  br i1 %228, label %230, label %229, !prof !2

229:                                              ; preds = %225
  call void @llvm.trap() #11
  unreachable

230:                                              ; preds = %225
  %231 = trunc i64 %227 to i32
  %232 = load %"class.courgette::Label"*, %"class.courgette::Label"** %130, align 8
  %233 = getelementptr inbounds %"class.courgette::Label", %"class.courgette::Label"* %232, i64 -1, i32 2
  store i32 %231, i32* %233, align 4
  %234 = icmp eq i32* %115, %161
  br i1 %234, label %148, label %235

235:                                              ; preds = %230, %239
  %236 = phi i32* [ %237, %239 ], [ %161, %230 ]
  %237 = getelementptr inbounds i32, i32* %236, i64 1
  %238 = icmp eq i32* %237, %115
  br i1 %238, label %243, label %239

239:                                              ; preds = %235
  %240 = load i32, i32* %237, align 4
  %241 = load i32, i32* %161, align 4
  %242 = icmp eq i32 %240, %241
  br i1 %242, label %235, label %243

243:                                              ; preds = %235, %239
  %244 = phi i32* [ %237, %239 ], [ %115, %235 ]
  br i1 %234, label %148, label %158
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare i8* @_ZN7logging15CheckOpValueStrEi(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIN9courgette5LabelUt_EEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #6 comdat align 2 {
  %3 = bitcast i8* %1 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %0, i32 %4) #11
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEm(%"class.std::__1::vector.1"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::vector.1", align 16
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = shl i64 %7, 6
  %9 = icmp ult i64 %8, %1
  br i1 %9, label %10, label %49

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::vector.1"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %3, i64 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 0, i64 24, i1 false) #11
  %14 = icmp slt i64 %1, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %10
  %16 = bitcast %"class.std::__1::vector.1"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %16) #12
  unreachable

17:                                               ; preds = %10
  %18 = add nsw i64 %1, -1
  %19 = lshr i64 %18, 6
  %20 = add nuw nsw i64 %19, 1
  %21 = shl nuw nsw i64 %20, 3
  %22 = tail call i8* @_Znwm(i64 %21) #13
  %23 = bitcast %"class.std::__1::vector.1"* %3 to i8**
  store i8* %22, i8** %23, align 16
  store i64 0, i64* %12, align 8
  store i64 %20, i64* %13, align 16
  %24 = bitcast %"class.std::__1::vector.1"* %0 to i64*
  %25 = load i64, i64* %24, align 8, !noalias !19
  %26 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  store i64 %25, i64* %26, align 8, !alias.scope !19
  %27 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  store i32 0, i32* %27, align 8, !alias.scope !19
  %28 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 1
  %29 = load i64, i64* %28, align 8, !noalias !24
  %30 = inttoptr i64 %25 to i64*
  %31 = lshr i64 %29, 6
  %32 = getelementptr inbounds i64, i64* %30, i64 %31
  %33 = trunc i64 %29 to i32
  %34 = and i32 %33, 63
  %35 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 0
  store i64* %32, i64** %35, align 8, !alias.scope !27
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  store i32 %34, i32* %36, align 8, !alias.scope !27
  call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeES8_S8_(%"class.std::__1::vector.1"* nonnull %3, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5)
  %37 = load i64, i64* %24, align 8
  %38 = bitcast %"class.std::__1::vector.1"* %3 to i64*
  %39 = bitcast %"class.std::__1::vector.1"* %3 to <2 x i64>*
  %40 = load <2 x i64>, <2 x i64>* %39, align 16
  store i64 %37, i64* %38, align 16
  %41 = load i64, i64* %28, align 8
  %42 = bitcast %"class.std::__1::vector.1"* %0 to <2 x i64>*
  store <2 x i64> %40, <2 x i64>* %42, align 8
  store i64 %41, i64* %12, align 8
  %43 = load i64, i64* %6, align 8
  %44 = load i64, i64* %13, align 16
  store i64 %44, i64* %6, align 8
  store i64 %43, i64* %13, align 16
  %45 = icmp eq i64 %37, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %17
  %47 = inttoptr i64 %37 to i8*
  call void @_ZdlPv(i8* %47) #13
  br label %48

48:                                               ; preds = %17, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  br label %49

49:                                               ; preds = %48, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeES8_S8_(%"class.std::__1::vector.1"*, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = alloca %"class.std::__1::__bit_iterator", align 8
  %7 = alloca %"class.std::__1::__bit_iterator", align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::__bit_iterator"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = sub i64 %15, %11
  %19 = shl i64 %18, 3
  %20 = zext i32 %17 to i64
  %21 = zext i32 %13 to i64
  %22 = sub i64 %9, %21
  %23 = add i64 %22, %20
  %24 = add i64 %23, %19
  store i64 %24, i64* %8, align 8
  %25 = icmp eq i64 %9, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %3
  %27 = add i64 %9, -1
  %28 = add i64 %24, -1
  %29 = xor i64 %28, %27
  %30 = icmp ugt i64 %29, 63
  br i1 %30, label %31, label %39

31:                                               ; preds = %26, %3
  %32 = icmp ult i64 %24, 65
  %33 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = add i64 %24, -1
  %36 = lshr i64 %35, 6
  %37 = getelementptr inbounds i64, i64* %34, i64 %36
  %38 = select i1 %32, i64* %34, i64* %37
  store i64 0, i64* %38, align 8
  br label %39

39:                                               ; preds = %31, %26
  %40 = load i64, i64* %10, align 8
  %41 = load i32, i32* %12, align 8
  %42 = load i64, i64* %14, align 8
  %43 = load i32, i32* %16, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0
  %45 = load i64*, i64** %44, align 8, !noalias !30
  %46 = lshr i64 %9, 6
  %47 = getelementptr inbounds i64, i64* %45, i64 %46
  %48 = trunc i64 %9 to i32
  %49 = and i32 %48, 63
  %50 = ptrtoint i64* %47 to i64
  %51 = bitcast %"class.std::__1::__bit_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #11
  %52 = bitcast %"class.std::__1::__bit_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52)
  %53 = bitcast %"class.std::__1::__bit_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53)
  %54 = bitcast %"class.std::__1::__bit_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54)
  %55 = icmp eq i32 %41, %49
  br i1 %55, label %56, label %123

56:                                               ; preds = %39
  %57 = sub i64 %42, %40
  %58 = shl i64 %57, 3
  %59 = zext i32 %43 to i64
  %60 = zext i32 %41 to i64
  %61 = sub nsw i64 %59, %60
  %62 = add i64 %61, %58
  %63 = icmp sgt i64 %62, 0
  %64 = inttoptr i64 %40 to i64*
  br i1 %63, label %65, label %118

65:                                               ; preds = %56
  %66 = inttoptr i64 %40 to i8*
  %67 = icmp eq i32 %41, 0
  br i1 %67, label %92, label %68

68:                                               ; preds = %65
  %69 = sub i32 64, %41
  %70 = zext i32 %69 to i64
  %71 = icmp slt i64 %62, %70
  %72 = select i1 %71, i64 %62, i64 %70
  %73 = sub nsw i64 %62, %72
  %74 = shl i64 -1, %60
  %75 = sub nsw i64 %70, %72
  %76 = lshr i64 -1, %75
  %77 = and i64 %76, %74
  %78 = load i64, i64* %64, align 8, !noalias !33
  %79 = and i64 %78, %77
  %80 = xor i64 %77, -1
  %81 = load i64, i64* %47, align 8, !noalias !33
  %82 = and i64 %81, %80
  %83 = or i64 %82, %79
  store i64 %83, i64* %47, align 8, !noalias !33
  %84 = add nuw nsw i64 %72, %60
  %85 = sdiv i64 %84, 64
  %86 = getelementptr inbounds i64, i64* %47, i64 %85
  %87 = ptrtoint i64* %86 to i64
  %88 = srem i64 %84, 64
  %89 = trunc i64 %88 to i32
  %90 = getelementptr inbounds i64, i64* %64, i64 1
  %91 = bitcast i64* %90 to i8*
  br label %92

92:                                               ; preds = %68, %65
  %93 = phi i64* [ %64, %65 ], [ %90, %68 ]
  %94 = phi i32 [ 0, %65 ], [ %89, %68 ]
  %95 = phi i64 [ %50, %65 ], [ %87, %68 ]
  %96 = phi i8* [ %66, %65 ], [ %91, %68 ]
  %97 = phi i64 [ %62, %65 ], [ %73, %68 ]
  %98 = sdiv i64 %97, 64
  %99 = inttoptr i64 %95 to i8*
  %100 = shl nsw i64 %98, 3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %96, i64 %100, i1 false) #11, !noalias !33
  %101 = shl nsw i64 %98, 6
  %102 = sub i64 %97, %101
  %103 = inttoptr i64 %95 to i64*
  %104 = getelementptr inbounds i64, i64* %103, i64 %98
  %105 = ptrtoint i64* %104 to i64
  %106 = icmp sgt i64 %102, 0
  br i1 %106, label %107, label %118

107:                                              ; preds = %92
  %108 = getelementptr inbounds i64, i64* %93, i64 %98
  %109 = sub nsw i64 64, %102
  %110 = lshr i64 -1, %109
  %111 = load i64, i64* %108, align 8, !noalias !33
  %112 = and i64 %111, %110
  %113 = xor i64 %110, -1
  %114 = load i64, i64* %104, align 8, !noalias !33
  %115 = and i64 %114, %113
  %116 = or i64 %115, %112
  store i64 %116, i64* %104, align 8, !noalias !33
  %117 = trunc i64 %102 to i32
  br label %118

118:                                              ; preds = %107, %92, %56
  %119 = phi i32 [ %117, %107 ], [ %94, %92 ], [ %41, %56 ]
  %120 = phi i64 [ %105, %107 ], [ %105, %92 ], [ %50, %56 ]
  %121 = bitcast %"class.std::__1::__bit_iterator"* %7 to i64*
  store i64 %120, i64* %121, align 8, !alias.scope !36
  %122 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %7, i64 0, i32 1
  store i32 %119, i32* %122, align 8, !alias.scope !36
  br label %130

123:                                              ; preds = %39
  %124 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  store i64 %40, i64* %124, align 8, !noalias !39
  %125 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  store i32 %41, i32* %125, align 8, !noalias !39
  %126 = bitcast %"class.std::__1::__bit_iterator"* %5 to i64*
  store i64 %42, i64* %126, align 8, !noalias !39
  %127 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  store i32 %43, i32* %127, align 8, !noalias !39
  %128 = bitcast %"class.std::__1::__bit_iterator"* %6 to i64*
  store i64 %50, i64* %128, align 8, !noalias !39
  %129 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %6, i64 0, i32 1
  store i32 %49, i32* %129, align 8, !noalias !39
  call void @_ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_(%"class.std::__1::__bit_iterator"* nonnull sret %7, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5, %"class.std::__1::__bit_iterator"* nonnull %6) #11
  br label %130

130:                                              ; preds = %118, %123
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #11
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_(%"class.std::__1::__bit_iterator"* noalias sret, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*) local_unnamed_addr #0 comdat {
  %5 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::__bit_iterator"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = shl i64 %9, 3
  %11 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = add nsw i64 %10, %13
  %15 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %18, 0
  %20 = inttoptr i64 %8 to i64*
  br i1 %19, label %21, label %185

21:                                               ; preds = %4
  %22 = icmp eq i32 %16, 0
  br i1 %22, label %93, label %23

23:                                               ; preds = %21
  %24 = sub i32 64, %16
  %25 = zext i32 %24 to i64
  %26 = icmp slt i64 %18, %25
  %27 = select i1 %26, i64 %18, i64 %25
  %28 = sub nsw i64 %18, %27
  %29 = shl i64 -1, %17
  %30 = sub nsw i64 %25, %27
  %31 = lshr i64 -1, %30
  %32 = and i64 %31, %29
  %33 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %34 = load i64, i64* %20, align 8
  %35 = and i64 %32, %34
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = sub i32 64, %37
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %27, %39
  %41 = select i1 %40, i64 %39, i64 %27
  %42 = zext i32 %37 to i64
  %43 = shl i64 -1, %42
  %44 = sub nsw i64 %39, %41
  %45 = lshr i64 -1, %44
  %46 = and i64 %45, %43
  %47 = xor i64 %46, -1
  %48 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, %47
  store i64 %51, i64* %49, align 8
  %52 = load i32, i32* %36, align 8
  %53 = load i32, i32* %15, align 8
  %54 = icmp ugt i32 %52, %53
  %55 = sub i32 %53, %52
  %56 = zext i32 %55 to i64
  %57 = lshr i64 %35, %56
  %58 = sub i32 %52, %53
  %59 = zext i32 %58 to i64
  %60 = shl i64 %35, %59
  %61 = select i1 %54, i64 %60, i64 %57
  %62 = load i64*, i64** %48, align 8
  %63 = load i64, i64* %62, align 8
  %64 = or i64 %63, %61
  store i64 %64, i64* %62, align 8
  %65 = load i32, i32* %36, align 8
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %41, %66
  %68 = lshr i64 %67, 6
  %69 = load i64*, i64** %48, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 %68
  store i64* %70, i64** %48, align 8
  %71 = trunc i64 %41 to i32
  %72 = add i32 %65, %71
  %73 = and i32 %72, 63
  store i32 %73, i32* %36, align 8
  %74 = sub i64 %27, %41
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %76, label %90

76:                                               ; preds = %23
  %77 = sub nsw i64 64, %74
  %78 = lshr i64 -1, %77
  %79 = xor i64 %78, -1
  %80 = load i64, i64* %70, align 8
  %81 = and i64 %80, %79
  store i64 %81, i64* %70, align 8
  %82 = load i32, i32* %15, align 8
  %83 = zext i32 %82 to i64
  %84 = add nuw nsw i64 %41, %83
  %85 = lshr i64 %35, %84
  %86 = load i64*, i64** %48, align 8
  %87 = load i64, i64* %86, align 8
  %88 = or i64 %85, %87
  store i64 %88, i64* %86, align 8
  %89 = trunc i64 %74 to i32
  store i32 %89, i32* %36, align 8
  br label %90

90:                                               ; preds = %76, %23
  %91 = load i64*, i64** %33, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 1
  store i64* %92, i64** %33, align 8
  br label %93

93:                                               ; preds = %21, %90
  %94 = phi i64* [ %20, %21 ], [ %92, %90 ]
  %95 = phi i64 [ %18, %21 ], [ %28, %90 ]
  %96 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = sub i32 64, %97
  %99 = zext i32 %97 to i64
  %100 = shl i64 -1, %99
  %101 = icmp sgt i64 %95, 63
  br i1 %101, label %102, label %134

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %104 = xor i64 %100, -1
  %105 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %106 = zext i32 %98 to i64
  br label %107

107:                                              ; preds = %102, %107
  %108 = phi i64* [ %94, %102 ], [ %130, %107 ]
  %109 = phi i64 [ %95, %102 ], [ %128, %107 ]
  %110 = load i64, i64* %108, align 8
  %111 = load i64*, i64** %105, align 8
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, %104
  store i64 %113, i64* %111, align 8
  %114 = load i32, i32* %96, align 8
  %115 = zext i32 %114 to i64
  %116 = shl i64 %110, %115
  %117 = load i64*, i64** %105, align 8
  %118 = load i64, i64* %117, align 8
  %119 = or i64 %118, %116
  store i64 %119, i64* %117, align 8
  %120 = load i64*, i64** %105, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 1
  store i64* %121, i64** %105, align 8
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, %100
  store i64 %123, i64* %121, align 8
  %124 = lshr i64 %110, %106
  %125 = load i64*, i64** %105, align 8
  %126 = load i64, i64* %125, align 8
  %127 = or i64 %126, %124
  store i64 %127, i64* %125, align 8
  %128 = add nsw i64 %109, -64
  %129 = load i64*, i64** %103, align 8
  %130 = getelementptr inbounds i64, i64* %129, i64 1
  store i64* %130, i64** %103, align 8
  %131 = icmp sgt i64 %128, 63
  br i1 %131, label %107, label %132

132:                                              ; preds = %107
  %133 = and i64 %95, 63
  br label %134

134:                                              ; preds = %132, %93
  %135 = phi i64* [ %94, %93 ], [ %130, %132 ]
  %136 = phi i64 [ %95, %93 ], [ %133, %132 ]
  %137 = icmp sgt i64 %136, 0
  br i1 %137, label %138, label %185

138:                                              ; preds = %134
  %139 = sub nuw nsw i64 64, %136
  %140 = lshr i64 -1, %139
  %141 = load i64, i64* %135, align 8
  %142 = and i64 %141, %140
  %143 = zext i32 %98 to i64
  %144 = icmp sgt i64 %136, %143
  %145 = select i1 %144, i64 %143, i64 %136
  %146 = load i32, i32* %96, align 8
  %147 = zext i32 %146 to i64
  %148 = shl i64 -1, %147
  %149 = sub nsw i64 %143, %145
  %150 = lshr i64 -1, %149
  %151 = and i64 %148, %150
  %152 = xor i64 %151, -1
  %153 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %154 = load i64*, i64** %153, align 8
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, %152
  store i64 %156, i64* %154, align 8
  %157 = load i32, i32* %96, align 8
  %158 = zext i32 %157 to i64
  %159 = shl i64 %142, %158
  %160 = load i64*, i64** %153, align 8
  %161 = load i64, i64* %160, align 8
  %162 = or i64 %161, %159
  store i64 %162, i64* %160, align 8
  %163 = load i32, i32* %96, align 8
  %164 = zext i32 %163 to i64
  %165 = add nuw nsw i64 %145, %164
  %166 = lshr i64 %165, 6
  %167 = load i64*, i64** %153, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 %166
  store i64* %168, i64** %153, align 8
  %169 = trunc i64 %145 to i32
  %170 = add i32 %163, %169
  %171 = and i32 %170, 63
  store i32 %171, i32* %96, align 8
  %172 = sub nsw i64 %136, %145
  %173 = icmp sgt i64 %172, 0
  br i1 %173, label %174, label %185

174:                                              ; preds = %138
  %175 = sub nuw nsw i64 64, %172
  %176 = lshr i64 -1, %175
  %177 = xor i64 %176, -1
  %178 = load i64, i64* %168, align 8
  %179 = and i64 %178, %177
  store i64 %179, i64* %168, align 8
  %180 = lshr i64 %142, %145
  %181 = load i64*, i64** %153, align 8
  %182 = load i64, i64* %181, align 8
  %183 = or i64 %182, %180
  store i64 %183, i64* %181, align 8
  %184 = trunc i64 %172 to i32
  store i32 %184, i32* %96, align 8
  br label %185

185:                                              ; preds = %134, %174, %138, %4
  %186 = bitcast %"class.std::__1::__bit_iterator"* %3 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %"class.std::__1::__bit_iterator"* %0 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %0, i64 0, i32 1
  %190 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %191 = load i32, i32* %190, align 8
  store i32 %191, i32* %189, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

declare i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #11
  %7 = load i8, i8* %6, align 8, !range !40
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #11
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #11
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #11
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #11
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #11
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #13
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #11
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #11
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #11
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

declare void @_ZNSt3__16__sortIRNS_6__lessIjjEEPjEEvT0_S5_T_(i32*, i32*, %"struct.std::__1::__less.30"* dereferenceable(1)) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!6 = distinct !{!6, !7, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv"}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!11 = distinct !{!11, !12, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!16 = !{!14, !17}
!17 = distinct !{!17, !18, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!18 = distinct !{!18, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!19 = !{!20, !22}
!20 = distinct !{!20, !21, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!21 = distinct !{!21, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!22 = distinct !{!22, !23, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv: argument 0"}
!23 = distinct !{!23, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv: argument 0"}
!26 = distinct !{!26, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv"}
!27 = !{!28, !25}
!28 = distinct !{!28, !29, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!29 = distinct !{!29, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!32 = distinct !{!32, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!35 = distinct !{!35, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!36 = !{!34, !37}
!37 = distinct !{!37, !38, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!38 = distinct !{!38, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!39 = !{!37}
!40 = !{i8 0, i8 2}
