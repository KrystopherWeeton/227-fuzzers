; ModuleID = '../../media/filters/audio_clock.cc'
source_filename = "../../media/filters/audio_clock.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.media::AudioClock" = type { %"class.base::TimeDelta", double, %"class.base::circular_deque", i64, double, double }
%"class.base::TimeDelta" = type { i64 }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"struct.media::AudioClock::AudioData"*, i64 }
%"struct.media::AudioClock::AudioData" = type { i64, double }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN4base14circular_dequeIN5media10AudioClock9AudioDataEED2Ev = comdat any

$_ZN4base8internal12VectorBufferIN5media10AudioClock9AudioDataEEixEm = comdat any

$_ZNK4base8internal12VectorBufferIN5media10AudioClock9AudioDataEEixEm = comdat any

$_ZN4base14circular_dequeIN5media10AudioClock9AudioDataEE25ExpandCapacityIfNecessaryEm = comdat any

$_ZN4base14circular_dequeIN5media10AudioClock9AudioDataEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_ = comdat any

$_ZN4base8internal12VectorBufferIN5media10AudioClock9AudioDataEE9MoveRangeIS4_Li0EEEvPS4_S7_S7_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4base14circular_dequeIN5media10AudioClock9AudioDataEE25ShrinkCapacityIfNecessaryEv = comdat any

@.str = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@.str.2 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"from_begin: 0x\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c", from_end: 0x\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c", to: 0x\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN5media10AudioClockC1EN4base9TimeDeltaEi = hidden unnamed_addr alias void (%"class.media::AudioClock"*, i64, i32), void (%"class.media::AudioClock"*, i64, i32)* @_ZN5media10AudioClockC2EN4base9TimeDeltaEi
@_ZN5media10AudioClockD1Ev = hidden unnamed_addr alias void (%"class.media::AudioClock"*), void (%"class.media::AudioClock"*)* @_ZN5media10AudioClockD2Ev
@_ZN5media10AudioClock9AudioDataC1Eld = hidden unnamed_addr alias void (%"struct.media::AudioClock::AudioData"*, i64, double), void (%"struct.media::AudioClock::AudioData"*, i64, double)* @_ZN5media10AudioClock9AudioDataC2Eld

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media10AudioClockC2EN4base9TimeDeltaEi(%"class.media::AudioClock"* nocapture, i64, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeDelta", align 8
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  store i64 %1, i64* %5, align 8
  %6 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 0, i32 0
  store i64 %1, i64* %6, align 8
  %7 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 1
  %8 = sitofp i32 %2 to double
  %9 = fdiv double 1.000000e+06, %8
  store double %9, double* %7, align 8
  %10 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 4
  %12 = bitcast %"class.base::circular_deque"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 40, i1 false)
  %13 = call double @_ZNK4base9TimeDelta15InMicrosecondsFEv(%"class.base::TimeDelta"* nonnull %4) #10
  store double %13, double* %11, align 8
  %14 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 5
  %15 = call double @_ZNK4base9TimeDelta15InMicrosecondsFEv(%"class.base::TimeDelta"* nonnull %4) #10
  store double %15, double* %14, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare double @_ZNK4base9TimeDelta15InMicrosecondsFEv(%"class.base::TimeDelta"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media10AudioClockD2Ev(%"class.media::AudioClock"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 2
  tail call void @_ZN4base14circular_dequeIN5media10AudioClock9AudioDataEED2Ev(%"class.base::circular_deque"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN5media10AudioClock9AudioDataEED2Ev(%"class.base::circular_deque"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, %3
  br i1 %6, label %18, label %7

7:                                                ; preds = %1
  %8 = icmp ugt i64 %5, %3
  %9 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %10 = tail call dereferenceable(16) %"struct.media::AudioClock::AudioData"* @_ZN4base8internal12VectorBufferIN5media10AudioClock9AudioDataEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %3) #10
  br i1 %8, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = tail call dereferenceable(16) %"struct.media::AudioClock::AudioData"* @_ZN4base8internal12VectorBufferIN5media10AudioClock9AudioDataEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %13) #10
  %15 = tail call dereferenceable(16) %"struct.media::AudioClock::AudioData"* @_ZN4base8internal12VectorBufferIN5media10AudioClock9AudioDataEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 0) #10
  br label %16

16:                                               ; preds = %7, %11
  %17 = tail call dereferenceable(16) %"struct.media::AudioClock::AudioData"* @_ZN4base8internal12VectorBufferIN5media10AudioClock9AudioDataEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %5) #10
  br label %18

18:                                               ; preds = %16, %1
  %19 = bitcast %"class.base::circular_deque"* %0 to i8**
  %20 = load i8*, i8** %19, align 8
  tail call void @free(i8* %20) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media10AudioClock10WroteAudioEiiid(%"class.media::AudioClock"*, i32, i32, i32, double) local_unnamed_addr #0 align 2 {
  %6 = alloca double, align 8
  %7 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 0
  %8 = tail call double @_ZNK4base9TimeDelta15InMicrosecondsFEv(%"class.base::TimeDelta"* %7) #10
  %9 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 4
  %10 = load double, double* %9, align 8
  %11 = fcmp oeq double %8, %10
  br i1 %11, label %12, label %20

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 2, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 2, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %14, %16
  br i1 %17, label %18, label %20

18:                                               ; preds = %12
  %19 = sext i32 %3 to i64
  tail call void @_ZN5media10AudioClock21PushBufferedAudioDataEld(%"class.media::AudioClock"* %0, i64 %19, double 0.000000e+00)
  br label %20

20:                                               ; preds = %18, %12, %5
  %21 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 3
  %22 = load i64, i64* %21, align 8
  %23 = sext i32 %3 to i64
  %24 = sub nsw i64 %22, %23
  %25 = icmp sgt i64 %24, 0
  %26 = select i1 %25, i64 %24, i64 0
  %27 = sext i32 %1 to i64
  tail call void @_ZN5media10AudioClock21PushBufferedAudioDataEld(%"class.media::AudioClock"* %0, i64 %27, double %4)
  %28 = sub nsw i32 %2, %1
  %29 = sext i32 %28 to i64
  tail call void @_ZN5media10AudioClock21PushBufferedAudioDataEld(%"class.media::AudioClock"* %0, i64 %29, double 0.000000e+00)
  tail call void @_ZN5media10AudioClock20PopBufferedAudioDataEl(%"class.media::AudioClock"* %0, i64 %26)
  %30 = sitofp i32 %1 to double
  %31 = fmul double %30, %4
  %32 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 1
  %33 = load double, double* %32, align 8
  %34 = fmul double %31, %33
  %35 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 5
  %36 = load double, double* %35, align 8
  %37 = fadd double %36, %34
  store double %37, double* %35, align 8
  %38 = bitcast double* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38)
  %39 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 2, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 2, i32 2
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %40, %42
  br i1 %43, label %65, label %44

44:                                               ; preds = %20
  %45 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 2, i32 0
  %46 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 2, i32 0, i32 1
  br label %47

47:                                               ; preds = %47, %44
  %48 = phi double [ 0.000000e+00, %44 ], [ %57, %47 ]
  %49 = phi i64 [ %40, %44 ], [ %61, %47 ]
  %50 = tail call dereferenceable(16) %"struct.media::AudioClock::AudioData"* @_ZNK4base8internal12VectorBufferIN5media10AudioClock9AudioDataEEixEm(%"class.base::internal::VectorBuffer"* %45, i64 %49) #10
  %51 = getelementptr inbounds %"struct.media::AudioClock::AudioData", %"struct.media::AudioClock::AudioData"* %50, i64 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = sitofp i64 %52 to double
  %54 = getelementptr inbounds %"struct.media::AudioClock::AudioData", %"struct.media::AudioClock::AudioData"* %50, i64 0, i32 1
  %55 = load double, double* %54, align 8
  %56 = fmul double %55, %53
  %57 = fadd double %48, %56
  %58 = add i64 %49, 1
  %59 = load i64, i64* %46, align 8
  %60 = icmp eq i64 %58, %59
  %61 = select i1 %60, i64 0, i64 %58
  %62 = icmp eq i64 %61, %42
  br i1 %62, label %63, label %47

63:                                               ; preds = %47
  %64 = load double, double* %32, align 8
  br label %65

65:                                               ; preds = %63, %20
  %66 = phi double [ %33, %20 ], [ %64, %63 ]
  %67 = phi double [ 0.000000e+00, %20 ], [ %57, %63 ]
  %68 = fmul double %67, %66
  %69 = fsub double %37, %68
  store double %69, double* %6, align 8
  %70 = load double, double* %9, align 8
  %71 = fcmp olt double %70, %69
  %72 = select i1 %71, double* %6, double* %9
  %73 = bitcast double* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast double* %9 to i64*
  store i64 %74, i64* %75, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media10AudioClock21PushBufferedAudioDataEld(%"class.media::AudioClock"*, i64, double) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %60, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = add nsw i64 %7, %1
  store i64 %8, i64* %6, align 8
  %9 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 2, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 2, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %11, %13
  br i1 %14, label %41, label %15

15:                                               ; preds = %5
  %16 = icmp eq i64 %13, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 2, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = phi i64 [ %19, %17 ], [ %13, %15 ]
  %22 = add i64 %21, -1
  %23 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %9, i64 0, i32 0
  %24 = tail call dereferenceable(16) %"struct.media::AudioClock::AudioData"* @_ZNK4base8internal12VectorBufferIN5media10AudioClock9AudioDataEEixEm(%"class.base::internal::VectorBuffer"* %23, i64 %22) #10
  %25 = getelementptr inbounds %"struct.media::AudioClock::AudioData", %"struct.media::AudioClock::AudioData"* %24, i64 0, i32 1
  %26 = load double, double* %25, align 8
  %27 = fcmp oeq double %26, %2
  br i1 %27, label %28, label %41

28:                                               ; preds = %20
  %29 = load i64, i64* %12, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 2, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  br label %34

34:                                               ; preds = %28, %31
  %35 = phi i64 [ %33, %31 ], [ %29, %28 ]
  %36 = add i64 %35, -1
  %37 = tail call dereferenceable(16) %"struct.media::AudioClock::AudioData"* @_ZNK4base8internal12VectorBufferIN5media10AudioClock9AudioDataEEixEm(%"class.base::internal::VectorBuffer"* %23, i64 %36) #10
  %38 = getelementptr inbounds %"struct.media::AudioClock::AudioData", %"struct.media::AudioClock::AudioData"* %37, i64 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add nsw i64 %39, %1
  store i64 %40, i64* %38, align 8
  br label %60

41:                                               ; preds = %20, %5
  tail call void @_ZN4base14circular_dequeIN5media10AudioClock9AudioDataEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %9, i64 1) #10
  %42 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %9, i64 0, i32 0
  %43 = load i64, i64* %12, align 8
  %44 = tail call dereferenceable(16) %"struct.media::AudioClock::AudioData"* @_ZN4base8internal12VectorBufferIN5media10AudioClock9AudioDataEEixEm(%"class.base::internal::VectorBuffer"* %42, i64 %43) #10
  %45 = getelementptr inbounds %"struct.media::AudioClock::AudioData", %"struct.media::AudioClock::AudioData"* %44, i64 0, i32 0
  store i64 %1, i64* %45, align 8
  %46 = getelementptr inbounds %"struct.media::AudioClock::AudioData", %"struct.media::AudioClock::AudioData"* %44, i64 0, i32 1
  store double %2, double* %46, align 8
  %47 = load i64, i64* %12, align 8
  %48 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 2, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, -1
  %51 = icmp eq i64 %47, %50
  br i1 %51, label %52, label %53

52:                                               ; preds = %41
  store i64 0, i64* %12, align 8
  br label %56

53:                                               ; preds = %41
  %54 = add i64 %47, 1
  store i64 %54, i64* %12, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53, %52
  br label %57

57:                                               ; preds = %53, %56
  %58 = phi i64 [ %50, %56 ], [ %47, %53 ]
  %59 = tail call dereferenceable(16) %"struct.media::AudioClock::AudioData"* @_ZNK4base8internal12VectorBufferIN5media10AudioClock9AudioDataEEixEm(%"class.base::internal::VectorBuffer"* %42, i64 %58) #10
  br label %60

60:                                               ; preds = %3, %57, %34
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media10AudioClock20PopBufferedAudioDataEl(%"class.media::AudioClock"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = sub nsw i64 %4, %1
  store i64 %5, i64* %3, align 8
  %6 = icmp sgt i64 %1, 0
  br i1 %6, label %7, label %44

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %8, i64 0, i32 0
  %10 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 2, i32 1
  %11 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 2, i32 0, i32 1
  br label %12

12:                                               ; preds = %7, %41
  %13 = phi i64 [ %1, %7 ], [ %42, %41 ]
  %14 = load i64, i64* %10, align 8
  %15 = tail call dereferenceable(16) %"struct.media::AudioClock::AudioData"* @_ZN4base8internal12VectorBufferIN5media10AudioClock9AudioDataEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %14) #10
  %16 = getelementptr inbounds %"struct.media::AudioClock::AudioData", %"struct.media::AudioClock::AudioData"* %15, i64 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp slt i64 %13, %17
  %19 = select i1 %18, i64 %13, i64 %17
  %20 = load i64, i64* %10, align 8
  %21 = tail call dereferenceable(16) %"struct.media::AudioClock::AudioData"* @_ZN4base8internal12VectorBufferIN5media10AudioClock9AudioDataEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %20) #10
  %22 = getelementptr inbounds %"struct.media::AudioClock::AudioData", %"struct.media::AudioClock::AudioData"* %21, i64 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = sub nsw i64 %23, %19
  store i64 %24, i64* %22, align 8
  %25 = load i64, i64* %10, align 8
  %26 = tail call dereferenceable(16) %"struct.media::AudioClock::AudioData"* @_ZN4base8internal12VectorBufferIN5media10AudioClock9AudioDataEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %25) #10
  %27 = getelementptr inbounds %"struct.media::AudioClock::AudioData", %"struct.media::AudioClock::AudioData"* %26, i64 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %41

30:                                               ; preds = %12
  %31 = load i64, i64* %10, align 8
  %32 = tail call dereferenceable(16) %"struct.media::AudioClock::AudioData"* @_ZN4base8internal12VectorBufferIN5media10AudioClock9AudioDataEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %31) #10
  %33 = load i64, i64* %10, align 8
  %34 = add i64 %33, 1
  %35 = tail call dereferenceable(16) %"struct.media::AudioClock::AudioData"* @_ZN4base8internal12VectorBufferIN5media10AudioClock9AudioDataEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %34) #10
  %36 = load i64, i64* %10, align 8
  %37 = add i64 %36, 1
  %38 = load i64, i64* %11, align 8
  %39 = icmp eq i64 %37, %38
  %40 = select i1 %39, i64 0, i64 %37
  store i64 %40, i64* %10, align 8
  tail call void @_ZN4base14circular_dequeIN5media10AudioClock9AudioDataEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* %8) #10
  br label %41

41:                                               ; preds = %30, %12
  %42 = sub nsw i64 %13, %19
  %43 = icmp sgt i64 %42, 0
  br i1 %43, label %12, label %44

44:                                               ; preds = %41, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5media10AudioClock34ComputeBufferedMediaDurationMicrosEv(%"class.media::AudioClock"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 2, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 2, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %3, %5
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 2, i32 0
  %9 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 2, i32 0, i32 1
  br label %15

10:                                               ; preds = %15, %1
  %11 = phi double [ 0.000000e+00, %1 ], [ %25, %15 ]
  %12 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 1
  %13 = load double, double* %12, align 8
  %14 = fmul double %11, %13
  ret double %14

15:                                               ; preds = %7, %15
  %16 = phi double [ 0.000000e+00, %7 ], [ %25, %15 ]
  %17 = phi i64 [ %3, %7 ], [ %29, %15 ]
  %18 = tail call dereferenceable(16) %"struct.media::AudioClock::AudioData"* @_ZNK4base8internal12VectorBufferIN5media10AudioClock9AudioDataEEixEm(%"class.base::internal::VectorBuffer"* %8, i64 %17) #10
  %19 = getelementptr inbounds %"struct.media::AudioClock::AudioData", %"struct.media::AudioClock::AudioData"* %18, i64 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = sitofp i64 %20 to double
  %22 = getelementptr inbounds %"struct.media::AudioClock::AudioData", %"struct.media::AudioClock::AudioData"* %18, i64 0, i32 1
  %23 = load double, double* %22, align 8
  %24 = fmul double %23, %21
  %25 = fadd double %16, %24
  %26 = add i64 %17, 1
  %27 = load i64, i64* %9, align 8
  %28 = icmp eq i64 %26, %27
  %29 = select i1 %28, i64 0, i64 %26
  %30 = icmp eq i64 %29, %5
  br i1 %30, label %10, label %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media10AudioClock28CompensateForSuspendedWritesEN4base9TimeDeltaEi(%"class.media::AudioClock"*, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeDelta", align 8
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  store i64 %1, i64* %5, align 8
  %6 = call double @_ZNK4base9TimeDelta15InMicrosecondsFEv(%"class.base::TimeDelta"* nonnull %4) #10
  %7 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 1
  %8 = load double, double* %7, align 8
  %9 = fdiv double %6, %8
  %10 = fcmp oge double %9, 0.000000e+00
  %11 = fadd double %9, 5.000000e-01
  %12 = call double @llvm.floor.f64(double %11) #10
  %13 = fadd double %9, -5.000000e-01
  %14 = call double @llvm.ceil.f64(double %13) #10
  %15 = select i1 %10, double %12, double %14
  %16 = fcmp ult double %15, 0xC3E0000000000000
  %17 = fcmp ugt double %15, 0x43DFFFFFFFFFFFFF
  %18 = fcmp ogt double %15, 0xC3E0000000000000
  %19 = select i1 %18, double %15, double 0xC3E0000000000000
  %20 = fptosi double %19 to i64
  %21 = select i1 %16, i64 0, i64 9223372036854775807
  %22 = select i1 %17, i64 %21, i64 %20
  %23 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 3
  %24 = load i64, i64* %23, align 8
  %25 = icmp sge i64 %22, %24
  %26 = icmp ne i32 %2, 0
  %27 = and i1 %26, %25
  br i1 %27, label %28, label %30

28:                                               ; preds = %3
  call void @_ZN5media10AudioClock10WroteAudioEiiid(%"class.media::AudioClock"* %0, i32 0, i32 0, i32 0, double 0.000000e+00)
  %29 = sext i32 %2 to i64
  call void @_ZN5media10AudioClock21PushBufferedAudioDataEld(%"class.media::AudioClock"* %0, i64 %29, double 0.000000e+00)
  br label %30

30:                                               ; preds = %3, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5media10AudioClock17TimeUntilPlaybackEN4base9TimeDeltaE(%"class.media::AudioClock"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = alloca %"class.base::TimeDelta", align 8
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 %1, i64* %5, align 8
  %6 = call double @_ZNK4base9TimeDelta15InMicrosecondsFEv(%"class.base::TimeDelta"* nonnull %3) #10
  %7 = bitcast %"class.base::TimeDelta"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 4
  %9 = load double, double* %8, align 8
  %10 = call double @llvm.round.f64(double %9) #10
  %11 = fptosi double %10 to i64
  %12 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  store i64 %11, i64* %12, align 8
  %13 = call double @_ZNK4base9TimeDelta15InMicrosecondsFEv(%"class.base::TimeDelta"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  %14 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 2, i32 1
  %15 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 2, i32 2
  %16 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 2, i32 0, i32 1
  %17 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 2, i32 0
  %18 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 1
  br label %19

19:                                               ; preds = %102, %2
  %20 = phi i64 [ 0, %2 ], [ %105, %102 ]
  %21 = phi double [ %13, %2 ], [ %104, %102 ]
  %22 = phi i64 [ 0, %2 ], [ %106, %102 ]
  %23 = load i64, i64* %14, align 8
  %24 = load i64, i64* %15, align 8
  %25 = icmp ult i64 %24, %23
  br i1 %25, label %28, label %26

26:                                               ; preds = %19
  %27 = sub i64 %24, %23
  br label %32

28:                                               ; preds = %19
  %29 = load i64, i64* %16, align 8
  %30 = sub i64 %24, %23
  %31 = add i64 %30, %29
  br label %32

32:                                               ; preds = %26, %28
  %33 = phi i64 [ %27, %26 ], [ %31, %28 ]
  %34 = icmp ult i64 %22, %33
  br i1 %34, label %35, label %107

35:                                               ; preds = %32
  %36 = load i64, i64* %16, align 8
  %37 = sub i64 %36, %23
  %38 = icmp uge i64 %24, %23
  %39 = icmp ult i64 %22, %37
  %40 = or i1 %38, %39
  %41 = sub i64 0, %37
  %42 = select i1 %40, i64 %23, i64 %41
  %43 = add i64 %22, %42
  %44 = call dereferenceable(16) %"struct.media::AudioClock::AudioData"* @_ZNK4base8internal12VectorBufferIN5media10AudioClock9AudioDataEEixEm(%"class.base::internal::VectorBuffer"* %17, i64 %43) #10
  %45 = getelementptr inbounds %"struct.media::AudioClock::AudioData", %"struct.media::AudioClock::AudioData"* %44, i64 0, i32 1
  %46 = load double, double* %45, align 8
  %47 = fcmp oeq double %46, 0.000000e+00
  %48 = load i64, i64* %16, align 8
  %49 = load i64, i64* %14, align 8
  %50 = sub i64 %48, %49
  %51 = load i64, i64* %15, align 8
  %52 = icmp ule i64 %49, %51
  %53 = icmp ult i64 %22, %50
  %54 = or i1 %52, %53
  %55 = sub i64 0, %50
  %56 = select i1 %54, i64 %49, i64 %55
  %57 = add i64 %22, %56
  %58 = call dereferenceable(16) %"struct.media::AudioClock::AudioData"* @_ZNK4base8internal12VectorBufferIN5media10AudioClock9AudioDataEEixEm(%"class.base::internal::VectorBuffer"* %17, i64 %57) #10
  %59 = getelementptr inbounds %"struct.media::AudioClock::AudioData", %"struct.media::AudioClock::AudioData"* %58, i64 0, i32 0
  %60 = load i64, i64* %59, align 8
  br i1 %47, label %102, label %61

61:                                               ; preds = %35
  %62 = sitofp i64 %60 to double
  %63 = load i64, i64* %16, align 8
  %64 = load i64, i64* %14, align 8
  %65 = sub i64 %63, %64
  %66 = load i64, i64* %15, align 8
  %67 = icmp ule i64 %64, %66
  %68 = icmp ult i64 %22, %65
  %69 = or i1 %67, %68
  %70 = sub i64 0, %65
  %71 = select i1 %69, i64 %64, i64 %70
  %72 = add i64 %22, %71
  %73 = call dereferenceable(16) %"struct.media::AudioClock::AudioData"* @_ZNK4base8internal12VectorBufferIN5media10AudioClock9AudioDataEEixEm(%"class.base::internal::VectorBuffer"* %17, i64 %72) #10
  %74 = getelementptr inbounds %"struct.media::AudioClock::AudioData", %"struct.media::AudioClock::AudioData"* %73, i64 0, i32 1
  %75 = load double, double* %74, align 8
  %76 = fmul double %75, %62
  %77 = load double, double* %18, align 8
  %78 = fmul double %76, %77
  %79 = fadd double %21, %78
  %80 = fcmp ugt double %6, %79
  %81 = load i64, i64* %16, align 8
  %82 = load i64, i64* %14, align 8
  %83 = sub i64 %81, %82
  %84 = load i64, i64* %15, align 8
  %85 = icmp ule i64 %82, %84
  %86 = icmp ult i64 %22, %83
  %87 = or i1 %85, %86
  %88 = sub i64 0, %83
  %89 = select i1 %87, i64 %82, i64 %88
  %90 = add i64 %22, %89
  %91 = call dereferenceable(16) %"struct.media::AudioClock::AudioData"* @_ZNK4base8internal12VectorBufferIN5media10AudioClock9AudioDataEEixEm(%"class.base::internal::VectorBuffer"* %17, i64 %90) #10
  %92 = getelementptr inbounds %"struct.media::AudioClock::AudioData", %"struct.media::AudioClock::AudioData"* %91, i64 0, i32 0
  %93 = load i64, i64* %92, align 8
  br i1 %80, label %102, label %94

94:                                               ; preds = %61
  %95 = sitofp i64 %93 to double
  %96 = fsub double %6, %21
  %97 = fmul double %96, %95
  %98 = fdiv double %97, %78
  %99 = sitofp i64 %20 to double
  %100 = fadd double %98, %99
  %101 = fptosi double %100 to i64
  br label %107

102:                                              ; preds = %61, %35
  %103 = phi i64 [ %60, %35 ], [ %93, %61 ]
  %104 = phi double [ %21, %35 ], [ %79, %61 ]
  %105 = add nsw i64 %103, %20
  %106 = add nuw i64 %22, 1
  br label %19

107:                                              ; preds = %32, %94
  %108 = phi i64 [ %101, %94 ], [ %20, %32 ]
  %109 = sitofp i64 %108 to double
  %110 = load double, double* %18, align 8
  %111 = fmul double %110, %109
  %112 = call double @llvm.round.f64(double %111)
  %113 = fptosi double %112 to i64
  ret i64 %113
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.round.f64(double) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5media10AudioClock37ContiguousAudioDataBufferedForTestingEPN4base9TimeDeltaES3_(%"class.media::AudioClock"*, %"class.base::TimeDelta"* nocapture, %"class.base::TimeDelta"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 2, i32 1
  %5 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 2, i32 2
  %6 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 2, i32 0, i32 1
  %7 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 2, i32 0
  br label %8

8:                                                ; preds = %73, %3
  %9 = phi i8 [ 0, %3 ], [ %74, %73 ]
  %10 = phi i64 [ 0, %3 ], [ %77, %73 ]
  %11 = phi double [ 0.000000e+00, %3 ], [ %75, %73 ]
  %12 = phi double [ 0.000000e+00, %3 ], [ %76, %73 ]
  %13 = load i64, i64* %4, align 8
  %14 = load i64, i64* %5, align 8
  %15 = icmp ult i64 %14, %13
  br i1 %15, label %18, label %16

16:                                               ; preds = %8
  %17 = sub i64 %14, %13
  br label %22

18:                                               ; preds = %8
  %19 = load i64, i64* %6, align 8
  %20 = sub i64 %14, %13
  %21 = add i64 %20, %19
  br label %22

22:                                               ; preds = %16, %18
  %23 = phi i64 [ %17, %16 ], [ %21, %18 ]
  %24 = icmp ult i64 %10, %23
  br i1 %24, label %25, label %78

25:                                               ; preds = %22
  %26 = load i64, i64* %6, align 8
  %27 = sub i64 %26, %13
  %28 = icmp uge i64 %14, %13
  %29 = icmp ult i64 %10, %27
  %30 = or i1 %28, %29
  %31 = sub i64 0, %27
  %32 = select i1 %30, i64 %13, i64 %31
  %33 = add i64 %10, %32
  %34 = tail call dereferenceable(16) %"struct.media::AudioClock::AudioData"* @_ZNK4base8internal12VectorBufferIN5media10AudioClock9AudioDataEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %33) #10
  %35 = getelementptr inbounds %"struct.media::AudioClock::AudioData", %"struct.media::AudioClock::AudioData"* %34, i64 0, i32 1
  %36 = load double, double* %35, align 8
  %37 = fcmp oeq double %36, 0.000000e+00
  br i1 %37, label %73, label %38

38:                                               ; preds = %25
  %39 = and i8 %9, 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %78

41:                                               ; preds = %38
  %42 = load i64, i64* %6, align 8
  %43 = load i64, i64* %4, align 8
  %44 = sub i64 %42, %43
  %45 = load i64, i64* %5, align 8
  %46 = icmp ule i64 %43, %45
  %47 = icmp ult i64 %10, %44
  %48 = or i1 %46, %47
  %49 = sub i64 0, %44
  %50 = select i1 %48, i64 %43, i64 %49
  %51 = add i64 %10, %50
  %52 = tail call dereferenceable(16) %"struct.media::AudioClock::AudioData"* @_ZNK4base8internal12VectorBufferIN5media10AudioClock9AudioDataEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %51) #10
  %53 = getelementptr inbounds %"struct.media::AudioClock::AudioData", %"struct.media::AudioClock::AudioData"* %52, i64 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = sitofp i64 %54 to double
  %56 = load i64, i64* %6, align 8
  %57 = load i64, i64* %4, align 8
  %58 = sub i64 %56, %57
  %59 = load i64, i64* %5, align 8
  %60 = icmp ule i64 %57, %59
  %61 = icmp ult i64 %10, %58
  %62 = or i1 %60, %61
  %63 = sub i64 0, %58
  %64 = select i1 %62, i64 %57, i64 %63
  %65 = add i64 %10, %64
  %66 = tail call dereferenceable(16) %"struct.media::AudioClock::AudioData"* @_ZNK4base8internal12VectorBufferIN5media10AudioClock9AudioDataEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %65) #10
  %67 = getelementptr inbounds %"struct.media::AudioClock::AudioData", %"struct.media::AudioClock::AudioData"* %66, i64 0, i32 1
  %68 = load double, double* %67, align 8
  %69 = fmul double %68, %55
  %70 = fadd double %12, %69
  %71 = icmp eq i64 %10, 0
  %72 = select i1 %71, double %70, double %11
  br label %73

73:                                               ; preds = %41, %25
  %74 = phi i8 [ 1, %25 ], [ %9, %41 ]
  %75 = phi double [ %11, %25 ], [ %72, %41 ]
  %76 = phi double [ %12, %25 ], [ %70, %41 ]
  %77 = add nuw i64 %10, 1
  br label %8

78:                                               ; preds = %38, %22
  %79 = getelementptr inbounds %"class.media::AudioClock", %"class.media::AudioClock"* %0, i64 0, i32 1
  %80 = load double, double* %79, align 8
  %81 = fmul double %12, %80
  %82 = fptosi double %81 to i64
  %83 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %1, i64 0, i32 0
  store i64 %82, i64* %83, align 8
  %84 = load double, double* %79, align 8
  %85 = fmul double %11, %84
  %86 = fptosi double %85 to i64
  %87 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  store i64 %86, i64* %87, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media10AudioClock9AudioDataC2Eld(%"struct.media::AudioClock::AudioData"* nocapture, i64, double) unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"struct.media::AudioClock::AudioData", %"struct.media::AudioClock::AudioData"* %0, i64 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds %"struct.media::AudioClock::AudioData", %"struct.media::AudioClock::AudioData"* %0, i64 0, i32 1
  store double %2, double* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.media::AudioClock::AudioData"* @_ZN4base8internal12VectorBufferIN5media10AudioClock9AudioDataEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"struct.media::AudioClock::AudioData"*, %"struct.media::AudioClock::AudioData"** %23, align 8
  %25 = getelementptr inbounds %"struct.media::AudioClock::AudioData", %"struct.media::AudioClock::AudioData"* %24, i64 %1
  ret %"struct.media::AudioClock::AudioData"* %25
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #3

; Function Attrs: nounwind readnone speculatable
declare double @llvm.ceil.f64(double) #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.media::AudioClock::AudioData"* @_ZNK4base8internal12VectorBufferIN5media10AudioClock9AudioDataEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"struct.media::AudioClock::AudioData"*, %"struct.media::AudioClock::AudioData"** %23, align 8
  %25 = getelementptr inbounds %"struct.media::AudioClock::AudioData", %"struct.media::AudioClock::AudioData"* %24, i64 %1
  ret %"struct.media::AudioClock::AudioData"* %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN5media10AudioClock9AudioDataEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer"*
  %5 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #10
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 16) #10
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #10
  br i1 %37, label %38, label %39, !prof !2

38:                                               ; preds = %27
  tail call void @llvm.trap() #10
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #10
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeIN5media10AudioClock9AudioDataEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer"* nonnull %4, i64* %5, i64* %7) #10
  %45 = bitcast %"class.base::circular_deque"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #10
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #10
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN5media10AudioClock9AudioDataEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_(%"class.base::internal::VectorBuffer"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  store i64 0, i64* %4, align 8
  %9 = icmp ugt i64 %2, %1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = tail call dereferenceable(16) %"struct.media::AudioClock::AudioData"* @_ZN4base8internal12VectorBufferIN5media10AudioClock9AudioDataEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %12 = tail call dereferenceable(16) %"struct.media::AudioClock::AudioData"* @_ZN4base8internal12VectorBufferIN5media10AudioClock9AudioDataEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %13 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %14 = load %"struct.media::AudioClock::AudioData"*, %"struct.media::AudioClock::AudioData"** %13, align 8
  tail call void @_ZN4base8internal12VectorBufferIN5media10AudioClock9AudioDataEE9MoveRangeIS4_Li0EEEvPS4_S7_S7_(%"struct.media::AudioClock::AudioData"* %11, %"struct.media::AudioClock::AudioData"* %12, %"struct.media::AudioClock::AudioData"* %14)
  %15 = sub i64 %2, %1
  br label %28

16:                                               ; preds = %6
  %17 = icmp ult i64 %2, %1
  br i1 %17, label %18, label %28

18:                                               ; preds = %16
  %19 = tail call dereferenceable(16) %"struct.media::AudioClock::AudioData"* @_ZN4base8internal12VectorBufferIN5media10AudioClock9AudioDataEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %20 = tail call dereferenceable(16) %"struct.media::AudioClock::AudioData"* @_ZN4base8internal12VectorBufferIN5media10AudioClock9AudioDataEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %8)
  %21 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %22 = load %"struct.media::AudioClock::AudioData"*, %"struct.media::AudioClock::AudioData"** %21, align 8
  tail call void @_ZN4base8internal12VectorBufferIN5media10AudioClock9AudioDataEE9MoveRangeIS4_Li0EEEvPS4_S7_S7_(%"struct.media::AudioClock::AudioData"* %19, %"struct.media::AudioClock::AudioData"* %20, %"struct.media::AudioClock::AudioData"* %22)
  %23 = sub i64 %8, %1
  %24 = tail call dereferenceable(16) %"struct.media::AudioClock::AudioData"* @_ZN4base8internal12VectorBufferIN5media10AudioClock9AudioDataEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 0)
  %25 = tail call dereferenceable(16) %"struct.media::AudioClock::AudioData"* @_ZN4base8internal12VectorBufferIN5media10AudioClock9AudioDataEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %26 = tail call dereferenceable(16) %"struct.media::AudioClock::AudioData"* @_ZN4base8internal12VectorBufferIN5media10AudioClock9AudioDataEEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %23)
  tail call void @_ZN4base8internal12VectorBufferIN5media10AudioClock9AudioDataEE9MoveRangeIS4_Li0EEEvPS4_S7_S7_(%"struct.media::AudioClock::AudioData"* %24, %"struct.media::AudioClock::AudioData"* %25, %"struct.media::AudioClock::AudioData"* %26)
  %27 = add i64 %23, %2
  br label %28

28:                                               ; preds = %16, %18, %10
  %29 = phi i64 [ %27, %18 ], [ %15, %10 ], [ 0, %16 ]
  store i64 %29, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferIN5media10AudioClock9AudioDataEE9MoveRangeIS4_Li0EEEvPS4_S7_S7_(%"struct.media::AudioClock::AudioData"*, %"struct.media::AudioClock::AudioData"*, %"struct.media::AudioClock::AudioData"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = ptrtoint %"struct.media::AudioClock::AudioData"* %0 to i64
  %6 = icmp ult %"struct.media::AudioClock::AudioData"* %2, %1
  br i1 %6, label %7, label %41

7:                                                ; preds = %3
  %8 = ptrtoint %"struct.media::AudioClock::AudioData"* %2 to i64
  %9 = ptrtoint %"struct.media::AudioClock::AudioData"* %1 to i64
  %10 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %9, i64 %5) #10
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  %13 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %8, i64 %12) #10
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = or i1 %11, %14
  br i1 %15, label %16, label %17, !prof !2

16:                                               ; preds = %7
  tail call void @llvm.trap() #10
  unreachable

17:                                               ; preds = %7
  %18 = extractvalue { i64, i1 } %13, 0
  %19 = icmp ugt i64 %18, %5
  br i1 %19, label %20, label %46

20:                                               ; preds = %17
  %21 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 132, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.2, i64 0, i64 0)) #10
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  %23 = bitcast %"class.std::__1::basic_ostream"* %22 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::basic_ostream"* %22 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 %27
  %30 = getelementptr inbounds i8, i8* %29, i64 8
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, -75
  %34 = or i32 %33, 8
  store i32 %34, i32* %31, align 8
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %22, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i64 14) #10
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %35, i64 %5) #10
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %36, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i64 14) #10
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %37, i64 %9) #10
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %38, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0), i64 8) #10
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %39, i64 %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #10
  br label %46

41:                                               ; preds = %3
  %42 = ptrtoint %"struct.media::AudioClock::AudioData"* %1 to i64
  %43 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %42, i64 %5) #10
  %44 = extractvalue { i64, i1 } %43, 1
  br i1 %44, label %45, label %46, !prof !2

45:                                               ; preds = %41
  call void @llvm.trap() #10
  unreachable

46:                                               ; preds = %20, %17, %41
  %47 = phi { i64, i1 } [ %43, %41 ], [ %10, %17 ], [ %10, %20 ]
  %48 = extractvalue { i64, i1 } %47, 0
  %49 = bitcast %"struct.media::AudioClock::AudioData"* %0 to i8*
  %50 = bitcast %"struct.media::AudioClock::AudioData"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %49, i64 %48, i1 false)
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #5

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIN5media10AudioClock9AudioDataEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer"*
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #10
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 16) #10
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #10
  br i1 %31, label %32, label %33, !prof !2

32:                                               ; preds = %27
  tail call void @llvm.trap() #10
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #10
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeIN5media10AudioClock9AudioDataEE10MoveBufferERNS_8internal12VectorBufferIS3_EEmmPS7_PmSA_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer"* nonnull %3, i64* %11, i64* %13) #10
  %39 = bitcast %"class.base::circular_deque"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #10
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #10
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
