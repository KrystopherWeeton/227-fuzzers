; ModuleID = '../../third_party/webrtc/common_audio/channel_buffer.cc'
source_filename = "../../third_party/webrtc/common_audio/channel_buffer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::IFChannelBuffer" = type { i8, %"class.webrtc::ChannelBuffer", i8, %"class.webrtc::ChannelBuffer.11" }
%"class.webrtc::ChannelBuffer" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1", i64, i64, i64, i64, i64, %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i16* }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i16** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::vector.7"*, %"class.std::__1::vector.7"*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.rtc::ArrayView"*, %"class.rtc::ArrayView"*, %"class.std::__1::__compressed_pair.33" }
%"class.rtc::ArrayView" = type { %"class.rtc::impl::ArrayViewBase" }
%"class.rtc::impl::ArrayViewBase" = type { i16*, i64 }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.rtc::ArrayView"* }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::vector.7"* }
%"class.webrtc::ChannelBuffer.11" = type { %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18", i64, i64, i64, i64, i64, %"class.std::__1::vector.24", %"class.std::__1::vector.24" }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { float* }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { float** }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"class.std::__1::vector.26"*, %"class.std::__1::vector.26"*, %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"class.rtc::ArrayView.39"*, %"class.rtc::ArrayView.39"*, %"class.std::__1::__compressed_pair.40" }
%"class.rtc::ArrayView.39" = type { %"class.rtc::impl::ArrayViewBase.45" }
%"class.rtc::impl::ArrayViewBase.45" = type { float*, i64 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.rtc::ArrayView.39"* }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.std::__1::vector.26"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN6webrtc13ChannelBufferIsEC2Emmm = comdat any

$_ZN6webrtc13ChannelBufferIfEC2Emmm = comdat any

$_ZN6webrtc13ChannelBufferIfED2Ev = comdat any

$_ZN6webrtc13ChannelBufferIsED2Ev = comdat any

$_ZNSt3__16vectorINS0_IN3rtc9ArrayViewIsLln4711EEENS_9allocatorIS3_EEEENS4_IS6_EEEC2EmRKS6_ = comdat any

$_ZNSt3__16vectorINS0_IN3rtc9ArrayViewIfLln4711EEENS_9allocatorIS3_EEEENS4_IS6_EEEC2EmRKS6_ = comdat any

@_ZN6webrtc15IFChannelBufferC1Emmm = hidden unnamed_addr alias void (%"class.webrtc::IFChannelBuffer"*, i64, i64, i64), void (%"class.webrtc::IFChannelBuffer"*, i64, i64, i64)* @_ZN6webrtc15IFChannelBufferC2Emmm
@_ZN6webrtc15IFChannelBufferD1Ev = hidden unnamed_addr alias void (%"class.webrtc::IFChannelBuffer"*), void (%"class.webrtc::IFChannelBuffer"*)* @_ZN6webrtc15IFChannelBufferD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc15IFChannelBufferC2Emmm(%"class.webrtc::IFChannelBuffer"*, i64, i64, i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 0
  store i8 1, i8* %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 1
  tail call void @_ZN6webrtc13ChannelBufferIsEC2Emmm(%"class.webrtc::ChannelBuffer"* %6, i64 %1, i64 %2, i64 %3)
  %7 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 2
  store i8 1, i8* %7, align 8
  %8 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 3
  tail call void @_ZN6webrtc13ChannelBufferIfEC2Emmm(%"class.webrtc::ChannelBuffer.11"* %8, i64 %1, i64 %2, i64 %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc13ChannelBufferIsEC2Emmm(%"class.webrtc::ChannelBuffer"*, i64, i64, i64) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.std::__1::vector.7", align 8
  %6 = alloca %"class.std::__1::vector.7", align 8
  %7 = mul i64 %2, %1
  %8 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %7, i64 2)
  %9 = extractvalue { i64, i1 } %8, 1
  %10 = extractvalue { i64, i1 } %8, 0
  %11 = select i1 %9, i64 -1, i64 %10
  %12 = tail call i8* @_Znam(i64 %11) #9
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %12, i8 0, i64 %11, i1 false)
  %13 = ptrtoint i8* %12 to i64
  %14 = bitcast %"class.webrtc::ChannelBuffer"* %0 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %0, i64 0, i32 1
  %16 = mul i64 %3, %2
  %17 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %16, i64 8)
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = extractvalue { i64, i1 } %17, 0
  %20 = select i1 %18, i64 -1, i64 %19
  %21 = tail call i8* @_Znam(i64 %20) #9
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.std::__1::unique_ptr.1"* %15 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %0, i64 0, i32 2
  %25 = tail call i8* @_Znam(i64 %20) #9
  %26 = ptrtoint i8* %25 to i64
  %27 = bitcast %"class.std::__1::unique_ptr.1"* %24 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %0, i64 0, i32 3
  store i64 %1, i64* %28, align 8
  %29 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %0, i64 0, i32 4
  %30 = udiv i64 %1, %3
  store i64 %30, i64* %29, align 8
  %31 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %0, i64 0, i32 5
  store i64 %2, i64* %31, align 8
  %32 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %0, i64 0, i32 6
  store i64 %2, i64* %32, align 8
  %33 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %0, i64 0, i32 7
  store i64 %3, i64* %33, align 8
  %34 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %0, i64 0, i32 8
  %35 = bitcast %"class.std::__1::vector.7"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 24, i1 false) #10
  %36 = icmp eq i64 %3, 0
  br i1 %36, label %58, label %37

37:                                               ; preds = %4
  %38 = icmp ugt i64 %3, 1152921504606846975
  br i1 %38, label %39, label %41

39:                                               ; preds = %37
  %40 = bitcast %"class.std::__1::vector.7"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %40) #11
  unreachable

41:                                               ; preds = %37
  %42 = shl i64 %3, 4
  %43 = tail call i8* @_Znwm(i64 %42) #9
  %44 = bitcast i8* %43 to %"class.rtc::ArrayView"*
  %45 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %5, i64 0, i32 0, i32 1
  %46 = bitcast %"class.std::__1::vector.7"* %5 to i8**
  store i8* %43, i8** %46, align 8
  %47 = getelementptr inbounds %"class.rtc::ArrayView", %"class.rtc::ArrayView"* %44, i64 %3
  %48 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.rtc::ArrayView"* %47, %"class.rtc::ArrayView"** %48, align 8
  %49 = bitcast %"class.rtc::ArrayView"** %45 to i64*
  %50 = ptrtoint i8* %43 to i64
  %51 = add nsw i64 %3, -1
  %52 = getelementptr %"class.rtc::ArrayView", %"class.rtc::ArrayView"* %44, i64 %51, i32 0, i32 0
  %53 = ptrtoint i16** %52 to i64
  %54 = sub i64 16, %50
  %55 = add i64 %54, %53
  %56 = and i64 %55, -16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 %56, i1 false) #10
  %57 = ptrtoint %"class.rtc::ArrayView"* %47 to i64
  store i64 %57, i64* %49, align 8
  br label %58

58:                                               ; preds = %4, %41
  call void @_ZNSt3__16vectorINS0_IN3rtc9ArrayViewIsLln4711EEENS_9allocatorIS3_EEEENS4_IS6_EEEC2EmRKS6_(%"class.std::__1::vector"* %34, i64 %2, %"class.std::__1::vector.7"* nonnull dereferenceable(24) %5)
  %59 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %5, i64 0, i32 0, i32 0
  %60 = load %"class.rtc::ArrayView"*, %"class.rtc::ArrayView"** %59, align 8
  %61 = icmp eq %"class.rtc::ArrayView"* %60, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %58
  %63 = ptrtoint %"class.rtc::ArrayView"* %60 to i64
  %64 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %5, i64 0, i32 0, i32 1
  %65 = bitcast %"class.rtc::ArrayView"** %64 to i64*
  store i64 %63, i64* %65, align 8
  %66 = bitcast %"class.rtc::ArrayView"* %60 to i8*
  call void @_ZdlPv(i8* %66) #9
  br label %67

67:                                               ; preds = %58, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #10
  %68 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %0, i64 0, i32 9
  %69 = load i64, i64* %33, align 8
  %70 = bitcast %"class.std::__1::vector.7"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #10
  %71 = load i64, i64* %31, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 0, i64 24, i1 false) #10
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %94, label %73

73:                                               ; preds = %67
  %74 = icmp ugt i64 %71, 1152921504606846975
  br i1 %74, label %75, label %77

75:                                               ; preds = %73
  %76 = bitcast %"class.std::__1::vector.7"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %76) #11
  unreachable

77:                                               ; preds = %73
  %78 = shl i64 %71, 4
  %79 = call i8* @_Znwm(i64 %78) #9
  %80 = bitcast i8* %79 to %"class.rtc::ArrayView"*
  %81 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %6, i64 0, i32 0, i32 1
  %82 = bitcast %"class.std::__1::vector.7"* %6 to i8**
  store i8* %79, i8** %82, align 8
  %83 = getelementptr inbounds %"class.rtc::ArrayView", %"class.rtc::ArrayView"* %80, i64 %71
  %84 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.rtc::ArrayView"* %83, %"class.rtc::ArrayView"** %84, align 8
  %85 = bitcast %"class.rtc::ArrayView"** %81 to i64*
  %86 = ptrtoint i8* %79 to i64
  %87 = add nsw i64 %71, -1
  %88 = getelementptr %"class.rtc::ArrayView", %"class.rtc::ArrayView"* %80, i64 %87, i32 0, i32 0
  %89 = ptrtoint i16** %88 to i64
  %90 = sub i64 16, %86
  %91 = add i64 %90, %89
  %92 = and i64 %91, -16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 %92, i1 false) #10
  %93 = ptrtoint %"class.rtc::ArrayView"* %83 to i64
  store i64 %93, i64* %85, align 8
  br label %94

94:                                               ; preds = %67, %77
  call void @_ZNSt3__16vectorINS0_IN3rtc9ArrayViewIsLln4711EEENS_9allocatorIS3_EEEENS4_IS6_EEEC2EmRKS6_(%"class.std::__1::vector"* %68, i64 %69, %"class.std::__1::vector.7"* nonnull dereferenceable(24) %6)
  %95 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %6, i64 0, i32 0, i32 0
  %96 = load %"class.rtc::ArrayView"*, %"class.rtc::ArrayView"** %95, align 8
  %97 = icmp eq %"class.rtc::ArrayView"* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint %"class.rtc::ArrayView"* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %6, i64 0, i32 0, i32 1
  %101 = bitcast %"class.rtc::ArrayView"** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast %"class.rtc::ArrayView"* %96 to i8*
  call void @_ZdlPv(i8* %102) #9
  br label %103

103:                                              ; preds = %94, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #10
  %104 = load i64, i64* %31, align 8
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %118, label %106

106:                                              ; preds = %103
  %107 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %108 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %68, i64 0, i32 0, i32 0
  %109 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %34, i64 0, i32 0, i32 0
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %15, i64 0, i32 0, i32 0, i32 0
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %24, i64 0, i32 0, i32 0, i32 0
  %112 = load i64, i64* %33, align 8
  br label %113

113:                                              ; preds = %106, %121
  %114 = phi i64 [ %104, %106 ], [ %122, %121 ]
  %115 = phi i64 [ %112, %106 ], [ %123, %121 ]
  %116 = phi i64 [ 0, %106 ], [ %124, %121 ]
  %117 = icmp eq i64 %115, 0
  br i1 %117, label %121, label %126

118:                                              ; preds = %121, %103
  ret void

119:                                              ; preds = %126
  %120 = load i64, i64* %31, align 8
  br label %121

121:                                              ; preds = %119, %113
  %122 = phi i64 [ %120, %119 ], [ %114, %113 ]
  %123 = phi i64 [ %178, %119 ], [ 0, %113 ]
  %124 = add nuw i64 %116, 1
  %125 = icmp ult i64 %124, %122
  br i1 %125, label %113, label %118

126:                                              ; preds = %113, %126
  %127 = phi i64 [ %177, %126 ], [ 0, %113 ]
  %128 = load i64, i64* %28, align 8
  %129 = mul i64 %128, %116
  %130 = load i64, i64* %29, align 8
  %131 = mul i64 %130, %127
  %132 = add i64 %131, %129
  %133 = load i16*, i16** %107, align 8
  %134 = getelementptr inbounds i16, i16* %133, i64 %132
  %135 = icmp eq i64 %130, 0
  %136 = select i1 %135, i16* null, i16* %134
  %137 = load %"class.std::__1::vector.7"*, %"class.std::__1::vector.7"** %108, align 8
  %138 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %137, i64 %127, i32 0, i32 0
  %139 = load %"class.rtc::ArrayView"*, %"class.rtc::ArrayView"** %138, align 8
  %140 = getelementptr inbounds %"class.rtc::ArrayView", %"class.rtc::ArrayView"* %139, i64 %116, i32 0, i32 0
  store i16* %136, i16** %140, align 8
  %141 = getelementptr inbounds %"class.rtc::ArrayView", %"class.rtc::ArrayView"* %139, i64 %116, i32 0, i32 1
  store i64 %130, i64* %141, align 8
  %142 = load %"class.std::__1::vector.7"*, %"class.std::__1::vector.7"** %108, align 8
  %143 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %142, i64 %127, i32 0, i32 0
  %144 = load %"class.rtc::ArrayView"*, %"class.rtc::ArrayView"** %143, align 8
  %145 = getelementptr inbounds %"class.rtc::ArrayView", %"class.rtc::ArrayView"* %144, i64 %116
  %146 = load %"class.std::__1::vector.7"*, %"class.std::__1::vector.7"** %109, align 8
  %147 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %146, i64 %116, i32 0, i32 0
  %148 = load %"class.rtc::ArrayView"*, %"class.rtc::ArrayView"** %147, align 8
  %149 = getelementptr inbounds %"class.rtc::ArrayView", %"class.rtc::ArrayView"* %148, i64 %127
  %150 = bitcast %"class.rtc::ArrayView"* %149 to i8*
  %151 = bitcast %"class.rtc::ArrayView"* %145 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %151, i64 16, i1 false)
  %152 = load %"class.std::__1::vector.7"*, %"class.std::__1::vector.7"** %108, align 8
  %153 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %152, i64 %127, i32 0, i32 0
  %154 = load %"class.rtc::ArrayView"*, %"class.rtc::ArrayView"** %153, align 8
  %155 = getelementptr inbounds %"class.rtc::ArrayView", %"class.rtc::ArrayView"* %154, i64 %116, i32 0, i32 0
  %156 = bitcast i16** %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = load i64, i64* %31, align 8
  %159 = mul i64 %158, %127
  %160 = add i64 %159, %116
  %161 = load i16**, i16*** %110, align 8
  %162 = getelementptr inbounds i16*, i16** %161, i64 %160
  %163 = bitcast i16** %162 to i64*
  store i64 %157, i64* %163, align 8
  %164 = load i64, i64* %31, align 8
  %165 = mul i64 %164, %127
  %166 = add i64 %165, %116
  %167 = load i16**, i16*** %110, align 8
  %168 = getelementptr inbounds i16*, i16** %167, i64 %166
  %169 = bitcast i16** %168 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = load i64, i64* %33, align 8
  %172 = mul i64 %171, %116
  %173 = add i64 %172, %127
  %174 = load i16**, i16*** %111, align 8
  %175 = getelementptr inbounds i16*, i16** %174, i64 %173
  %176 = bitcast i16** %175 to i64*
  store i64 %170, i64* %176, align 8
  %177 = add nuw i64 %127, 1
  %178 = load i64, i64* %33, align 8
  %179 = icmp ult i64 %177, %178
  br i1 %179, label %126, label %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc13ChannelBufferIfEC2Emmm(%"class.webrtc::ChannelBuffer.11"*, i64, i64, i64) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.std::__1::vector.26", align 8
  %6 = alloca %"class.std::__1::vector.26", align 8
  %7 = mul i64 %2, %1
  %8 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %7, i64 4)
  %9 = extractvalue { i64, i1 } %8, 1
  %10 = extractvalue { i64, i1 } %8, 0
  %11 = select i1 %9, i64 -1, i64 %10
  %12 = tail call i8* @_Znam(i64 %11) #9
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %12, i8 0, i64 %11, i1 false)
  %13 = ptrtoint i8* %12 to i64
  %14 = bitcast %"class.webrtc::ChannelBuffer.11"* %0 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.webrtc::ChannelBuffer.11", %"class.webrtc::ChannelBuffer.11"* %0, i64 0, i32 1
  %16 = mul i64 %3, %2
  %17 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %16, i64 8)
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = extractvalue { i64, i1 } %17, 0
  %20 = select i1 %18, i64 -1, i64 %19
  %21 = tail call i8* @_Znam(i64 %20) #9
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.std::__1::unique_ptr.18"* %15 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.webrtc::ChannelBuffer.11", %"class.webrtc::ChannelBuffer.11"* %0, i64 0, i32 2
  %25 = tail call i8* @_Znam(i64 %20) #9
  %26 = ptrtoint i8* %25 to i64
  %27 = bitcast %"class.std::__1::unique_ptr.18"* %24 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.webrtc::ChannelBuffer.11", %"class.webrtc::ChannelBuffer.11"* %0, i64 0, i32 3
  store i64 %1, i64* %28, align 8
  %29 = getelementptr inbounds %"class.webrtc::ChannelBuffer.11", %"class.webrtc::ChannelBuffer.11"* %0, i64 0, i32 4
  %30 = udiv i64 %1, %3
  store i64 %30, i64* %29, align 8
  %31 = getelementptr inbounds %"class.webrtc::ChannelBuffer.11", %"class.webrtc::ChannelBuffer.11"* %0, i64 0, i32 5
  store i64 %2, i64* %31, align 8
  %32 = getelementptr inbounds %"class.webrtc::ChannelBuffer.11", %"class.webrtc::ChannelBuffer.11"* %0, i64 0, i32 6
  store i64 %2, i64* %32, align 8
  %33 = getelementptr inbounds %"class.webrtc::ChannelBuffer.11", %"class.webrtc::ChannelBuffer.11"* %0, i64 0, i32 7
  store i64 %3, i64* %33, align 8
  %34 = getelementptr inbounds %"class.webrtc::ChannelBuffer.11", %"class.webrtc::ChannelBuffer.11"* %0, i64 0, i32 8
  %35 = bitcast %"class.std::__1::vector.26"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 24, i1 false) #10
  %36 = icmp eq i64 %3, 0
  br i1 %36, label %58, label %37

37:                                               ; preds = %4
  %38 = icmp ugt i64 %3, 1152921504606846975
  br i1 %38, label %39, label %41

39:                                               ; preds = %37
  %40 = bitcast %"class.std::__1::vector.26"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %40) #11
  unreachable

41:                                               ; preds = %37
  %42 = shl i64 %3, 4
  %43 = tail call i8* @_Znwm(i64 %42) #9
  %44 = bitcast i8* %43 to %"class.rtc::ArrayView.39"*
  %45 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %5, i64 0, i32 0, i32 1
  %46 = bitcast %"class.std::__1::vector.26"* %5 to i8**
  store i8* %43, i8** %46, align 8
  %47 = getelementptr inbounds %"class.rtc::ArrayView.39", %"class.rtc::ArrayView.39"* %44, i64 %3
  %48 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.rtc::ArrayView.39"* %47, %"class.rtc::ArrayView.39"** %48, align 8
  %49 = bitcast %"class.rtc::ArrayView.39"** %45 to i64*
  %50 = ptrtoint i8* %43 to i64
  %51 = add nsw i64 %3, -1
  %52 = getelementptr %"class.rtc::ArrayView.39", %"class.rtc::ArrayView.39"* %44, i64 %51, i32 0, i32 0
  %53 = ptrtoint float** %52 to i64
  %54 = sub i64 16, %50
  %55 = add i64 %54, %53
  %56 = and i64 %55, -16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 %56, i1 false) #10
  %57 = ptrtoint %"class.rtc::ArrayView.39"* %47 to i64
  store i64 %57, i64* %49, align 8
  br label %58

58:                                               ; preds = %4, %41
  call void @_ZNSt3__16vectorINS0_IN3rtc9ArrayViewIfLln4711EEENS_9allocatorIS3_EEEENS4_IS6_EEEC2EmRKS6_(%"class.std::__1::vector.24"* %34, i64 %2, %"class.std::__1::vector.26"* nonnull dereferenceable(24) %5)
  %59 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %5, i64 0, i32 0, i32 0
  %60 = load %"class.rtc::ArrayView.39"*, %"class.rtc::ArrayView.39"** %59, align 8
  %61 = icmp eq %"class.rtc::ArrayView.39"* %60, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %58
  %63 = ptrtoint %"class.rtc::ArrayView.39"* %60 to i64
  %64 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %5, i64 0, i32 0, i32 1
  %65 = bitcast %"class.rtc::ArrayView.39"** %64 to i64*
  store i64 %63, i64* %65, align 8
  %66 = bitcast %"class.rtc::ArrayView.39"* %60 to i8*
  call void @_ZdlPv(i8* %66) #9
  br label %67

67:                                               ; preds = %58, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #10
  %68 = getelementptr inbounds %"class.webrtc::ChannelBuffer.11", %"class.webrtc::ChannelBuffer.11"* %0, i64 0, i32 9
  %69 = load i64, i64* %33, align 8
  %70 = bitcast %"class.std::__1::vector.26"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #10
  %71 = load i64, i64* %31, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 0, i64 24, i1 false) #10
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %94, label %73

73:                                               ; preds = %67
  %74 = icmp ugt i64 %71, 1152921504606846975
  br i1 %74, label %75, label %77

75:                                               ; preds = %73
  %76 = bitcast %"class.std::__1::vector.26"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %76) #11
  unreachable

77:                                               ; preds = %73
  %78 = shl i64 %71, 4
  %79 = call i8* @_Znwm(i64 %78) #9
  %80 = bitcast i8* %79 to %"class.rtc::ArrayView.39"*
  %81 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %6, i64 0, i32 0, i32 1
  %82 = bitcast %"class.std::__1::vector.26"* %6 to i8**
  store i8* %79, i8** %82, align 8
  %83 = getelementptr inbounds %"class.rtc::ArrayView.39", %"class.rtc::ArrayView.39"* %80, i64 %71
  %84 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.rtc::ArrayView.39"* %83, %"class.rtc::ArrayView.39"** %84, align 8
  %85 = bitcast %"class.rtc::ArrayView.39"** %81 to i64*
  %86 = ptrtoint i8* %79 to i64
  %87 = add nsw i64 %71, -1
  %88 = getelementptr %"class.rtc::ArrayView.39", %"class.rtc::ArrayView.39"* %80, i64 %87, i32 0, i32 0
  %89 = ptrtoint float** %88 to i64
  %90 = sub i64 16, %86
  %91 = add i64 %90, %89
  %92 = and i64 %91, -16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 %92, i1 false) #10
  %93 = ptrtoint %"class.rtc::ArrayView.39"* %83 to i64
  store i64 %93, i64* %85, align 8
  br label %94

94:                                               ; preds = %67, %77
  call void @_ZNSt3__16vectorINS0_IN3rtc9ArrayViewIfLln4711EEENS_9allocatorIS3_EEEENS4_IS6_EEEC2EmRKS6_(%"class.std::__1::vector.24"* %68, i64 %69, %"class.std::__1::vector.26"* nonnull dereferenceable(24) %6)
  %95 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %6, i64 0, i32 0, i32 0
  %96 = load %"class.rtc::ArrayView.39"*, %"class.rtc::ArrayView.39"** %95, align 8
  %97 = icmp eq %"class.rtc::ArrayView.39"* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint %"class.rtc::ArrayView.39"* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %6, i64 0, i32 0, i32 1
  %101 = bitcast %"class.rtc::ArrayView.39"** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast %"class.rtc::ArrayView.39"* %96 to i8*
  call void @_ZdlPv(i8* %102) #9
  br label %103

103:                                              ; preds = %94, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #10
  %104 = load i64, i64* %31, align 8
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %118, label %106

106:                                              ; preds = %103
  %107 = getelementptr inbounds %"class.webrtc::ChannelBuffer.11", %"class.webrtc::ChannelBuffer.11"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %108 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %68, i64 0, i32 0, i32 0
  %109 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %34, i64 0, i32 0, i32 0
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %15, i64 0, i32 0, i32 0, i32 0
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %24, i64 0, i32 0, i32 0, i32 0
  %112 = load i64, i64* %33, align 8
  br label %113

113:                                              ; preds = %106, %121
  %114 = phi i64 [ %104, %106 ], [ %122, %121 ]
  %115 = phi i64 [ %112, %106 ], [ %123, %121 ]
  %116 = phi i64 [ 0, %106 ], [ %124, %121 ]
  %117 = icmp eq i64 %115, 0
  br i1 %117, label %121, label %126

118:                                              ; preds = %121, %103
  ret void

119:                                              ; preds = %126
  %120 = load i64, i64* %31, align 8
  br label %121

121:                                              ; preds = %119, %113
  %122 = phi i64 [ %120, %119 ], [ %114, %113 ]
  %123 = phi i64 [ %178, %119 ], [ 0, %113 ]
  %124 = add nuw i64 %116, 1
  %125 = icmp ult i64 %124, %122
  br i1 %125, label %113, label %118

126:                                              ; preds = %113, %126
  %127 = phi i64 [ %177, %126 ], [ 0, %113 ]
  %128 = load i64, i64* %28, align 8
  %129 = mul i64 %128, %116
  %130 = load i64, i64* %29, align 8
  %131 = mul i64 %130, %127
  %132 = add i64 %131, %129
  %133 = load float*, float** %107, align 8
  %134 = getelementptr inbounds float, float* %133, i64 %132
  %135 = icmp eq i64 %130, 0
  %136 = select i1 %135, float* null, float* %134
  %137 = load %"class.std::__1::vector.26"*, %"class.std::__1::vector.26"** %108, align 8
  %138 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %137, i64 %127, i32 0, i32 0
  %139 = load %"class.rtc::ArrayView.39"*, %"class.rtc::ArrayView.39"** %138, align 8
  %140 = getelementptr inbounds %"class.rtc::ArrayView.39", %"class.rtc::ArrayView.39"* %139, i64 %116, i32 0, i32 0
  store float* %136, float** %140, align 8
  %141 = getelementptr inbounds %"class.rtc::ArrayView.39", %"class.rtc::ArrayView.39"* %139, i64 %116, i32 0, i32 1
  store i64 %130, i64* %141, align 8
  %142 = load %"class.std::__1::vector.26"*, %"class.std::__1::vector.26"** %108, align 8
  %143 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %142, i64 %127, i32 0, i32 0
  %144 = load %"class.rtc::ArrayView.39"*, %"class.rtc::ArrayView.39"** %143, align 8
  %145 = getelementptr inbounds %"class.rtc::ArrayView.39", %"class.rtc::ArrayView.39"* %144, i64 %116
  %146 = load %"class.std::__1::vector.26"*, %"class.std::__1::vector.26"** %109, align 8
  %147 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %146, i64 %116, i32 0, i32 0
  %148 = load %"class.rtc::ArrayView.39"*, %"class.rtc::ArrayView.39"** %147, align 8
  %149 = getelementptr inbounds %"class.rtc::ArrayView.39", %"class.rtc::ArrayView.39"* %148, i64 %127
  %150 = bitcast %"class.rtc::ArrayView.39"* %149 to i8*
  %151 = bitcast %"class.rtc::ArrayView.39"* %145 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %151, i64 16, i1 false)
  %152 = load %"class.std::__1::vector.26"*, %"class.std::__1::vector.26"** %108, align 8
  %153 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %152, i64 %127, i32 0, i32 0
  %154 = load %"class.rtc::ArrayView.39"*, %"class.rtc::ArrayView.39"** %153, align 8
  %155 = getelementptr inbounds %"class.rtc::ArrayView.39", %"class.rtc::ArrayView.39"* %154, i64 %116, i32 0, i32 0
  %156 = bitcast float** %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = load i64, i64* %31, align 8
  %159 = mul i64 %158, %127
  %160 = add i64 %159, %116
  %161 = load float**, float*** %110, align 8
  %162 = getelementptr inbounds float*, float** %161, i64 %160
  %163 = bitcast float** %162 to i64*
  store i64 %157, i64* %163, align 8
  %164 = load i64, i64* %31, align 8
  %165 = mul i64 %164, %127
  %166 = add i64 %165, %116
  %167 = load float**, float*** %110, align 8
  %168 = getelementptr inbounds float*, float** %167, i64 %166
  %169 = bitcast float** %168 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = load i64, i64* %33, align 8
  %172 = mul i64 %171, %116
  %173 = add i64 %172, %127
  %174 = load float**, float*** %111, align 8
  %175 = getelementptr inbounds float*, float** %174, i64 %173
  %176 = bitcast float** %175 to i64*
  store i64 %170, i64* %176, align 8
  %177 = add nuw i64 %127, 1
  %178 = load i64, i64* %33, align 8
  %179 = icmp ult i64 %177, %178
  br i1 %179, label %126, label %119
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc15IFChannelBufferD2Ev(%"class.webrtc::IFChannelBuffer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 3
  tail call void @_ZN6webrtc13ChannelBufferIfED2Ev(%"class.webrtc::ChannelBuffer.11"* %2) #10
  %3 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 1
  tail call void @_ZN6webrtc13ChannelBufferIsED2Ev(%"class.webrtc::ChannelBuffer"* %3) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc13ChannelBufferIfED2Ev(%"class.webrtc::ChannelBuffer.11"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::ChannelBuffer.11", %"class.webrtc::ChannelBuffer.11"* %0, i64 0, i32 9
  %3 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.26"*, %"class.std::__1::vector.26"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.26"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::vector.26"* %4 to i8*
  %8 = getelementptr inbounds %"class.webrtc::ChannelBuffer.11", %"class.webrtc::ChannelBuffer.11"* %0, i64 0, i32 9, i32 0, i32 1
  %9 = load %"class.std::__1::vector.26"*, %"class.std::__1::vector.26"** %8, align 8
  %10 = icmp eq %"class.std::__1::vector.26"* %9, %4
  br i1 %10, label %27, label %11

11:                                               ; preds = %6, %22
  %12 = phi %"class.std::__1::vector.26"* [ %13, %22 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.rtc::ArrayView.39"*, %"class.rtc::ArrayView.39"** %14, align 8
  %16 = icmp eq %"class.rtc::ArrayView.39"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = ptrtoint %"class.rtc::ArrayView.39"* %15 to i64
  %19 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %12, i64 -1, i32 0, i32 1
  %20 = bitcast %"class.rtc::ArrayView.39"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"class.rtc::ArrayView.39"* %15 to i8*
  tail call void @_ZdlPv(i8* %21) #9
  br label %22

22:                                               ; preds = %17, %11
  %23 = icmp eq %"class.std::__1::vector.26"* %13, %4
  br i1 %23, label %24, label %11

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.24"* %2 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %6
  %28 = phi i8* [ %26, %24 ], [ %7, %6 ]
  store %"class.std::__1::vector.26"* %4, %"class.std::__1::vector.26"** %8, align 8
  tail call void @_ZdlPv(i8* %28) #9
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"class.webrtc::ChannelBuffer.11", %"class.webrtc::ChannelBuffer.11"* %0, i64 0, i32 8
  %31 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.std::__1::vector.26"*, %"class.std::__1::vector.26"** %31, align 8
  %33 = icmp eq %"class.std::__1::vector.26"* %32, null
  br i1 %33, label %57, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.std::__1::vector.26"* %32 to i8*
  %36 = getelementptr inbounds %"class.webrtc::ChannelBuffer.11", %"class.webrtc::ChannelBuffer.11"* %0, i64 0, i32 8, i32 0, i32 1
  %37 = load %"class.std::__1::vector.26"*, %"class.std::__1::vector.26"** %36, align 8
  %38 = icmp eq %"class.std::__1::vector.26"* %37, %32
  br i1 %38, label %55, label %39

39:                                               ; preds = %34, %50
  %40 = phi %"class.std::__1::vector.26"* [ %41, %50 ], [ %37, %34 ]
  %41 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %40, i64 -1
  %42 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %41, i64 0, i32 0, i32 0
  %43 = load %"class.rtc::ArrayView.39"*, %"class.rtc::ArrayView.39"** %42, align 8
  %44 = icmp eq %"class.rtc::ArrayView.39"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %39
  %46 = ptrtoint %"class.rtc::ArrayView.39"* %43 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %40, i64 -1, i32 0, i32 1
  %48 = bitcast %"class.rtc::ArrayView.39"** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = bitcast %"class.rtc::ArrayView.39"* %43 to i8*
  tail call void @_ZdlPv(i8* %49) #9
  br label %50

50:                                               ; preds = %45, %39
  %51 = icmp eq %"class.std::__1::vector.26"* %41, %32
  br i1 %51, label %52, label %39

52:                                               ; preds = %50
  %53 = bitcast %"class.std::__1::vector.24"* %30 to i8**
  %54 = load i8*, i8** %53, align 8
  br label %55

55:                                               ; preds = %52, %34
  %56 = phi i8* [ %54, %52 ], [ %35, %34 ]
  store %"class.std::__1::vector.26"* %32, %"class.std::__1::vector.26"** %36, align 8
  tail call void @_ZdlPv(i8* %56) #9
  br label %57

57:                                               ; preds = %29, %55
  %58 = getelementptr inbounds %"class.webrtc::ChannelBuffer.11", %"class.webrtc::ChannelBuffer.11"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %59 = load float**, float*** %58, align 8
  store float** null, float*** %58, align 8
  %60 = icmp eq float** %59, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %57
  %62 = bitcast float** %59 to i8*
  tail call void @_ZdaPv(i8* %62) #9
  br label %63

63:                                               ; preds = %57, %61
  %64 = getelementptr inbounds %"class.webrtc::ChannelBuffer.11", %"class.webrtc::ChannelBuffer.11"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %65 = load float**, float*** %64, align 8
  store float** null, float*** %64, align 8
  %66 = icmp eq float** %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %63
  %68 = bitcast float** %65 to i8*
  tail call void @_ZdaPv(i8* %68) #9
  br label %69

69:                                               ; preds = %63, %67
  %70 = getelementptr inbounds %"class.webrtc::ChannelBuffer.11", %"class.webrtc::ChannelBuffer.11"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %71 = load float*, float** %70, align 8
  store float* null, float** %70, align 8
  %72 = icmp eq float* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %69
  %74 = bitcast float* %71 to i8*
  tail call void @_ZdaPv(i8* %74) #9
  br label %75

75:                                               ; preds = %69, %73
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc13ChannelBufferIsED2Ev(%"class.webrtc::ChannelBuffer"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %0, i64 0, i32 9
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.7"*, %"class.std::__1::vector.7"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.7"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::vector.7"* %4 to i8*
  %8 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %0, i64 0, i32 9, i32 0, i32 1
  %9 = load %"class.std::__1::vector.7"*, %"class.std::__1::vector.7"** %8, align 8
  %10 = icmp eq %"class.std::__1::vector.7"* %9, %4
  br i1 %10, label %27, label %11

11:                                               ; preds = %6, %22
  %12 = phi %"class.std::__1::vector.7"* [ %13, %22 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.rtc::ArrayView"*, %"class.rtc::ArrayView"** %14, align 8
  %16 = icmp eq %"class.rtc::ArrayView"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = ptrtoint %"class.rtc::ArrayView"* %15 to i64
  %19 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %12, i64 -1, i32 0, i32 1
  %20 = bitcast %"class.rtc::ArrayView"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"class.rtc::ArrayView"* %15 to i8*
  tail call void @_ZdlPv(i8* %21) #9
  br label %22

22:                                               ; preds = %17, %11
  %23 = icmp eq %"class.std::__1::vector.7"* %13, %4
  br i1 %23, label %24, label %11

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector"* %2 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %6
  %28 = phi i8* [ %26, %24 ], [ %7, %6 ]
  store %"class.std::__1::vector.7"* %4, %"class.std::__1::vector.7"** %8, align 8
  tail call void @_ZdlPv(i8* %28) #9
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %0, i64 0, i32 8
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.std::__1::vector.7"*, %"class.std::__1::vector.7"** %31, align 8
  %33 = icmp eq %"class.std::__1::vector.7"* %32, null
  br i1 %33, label %57, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.std::__1::vector.7"* %32 to i8*
  %36 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %0, i64 0, i32 8, i32 0, i32 1
  %37 = load %"class.std::__1::vector.7"*, %"class.std::__1::vector.7"** %36, align 8
  %38 = icmp eq %"class.std::__1::vector.7"* %37, %32
  br i1 %38, label %55, label %39

39:                                               ; preds = %34, %50
  %40 = phi %"class.std::__1::vector.7"* [ %41, %50 ], [ %37, %34 ]
  %41 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %40, i64 -1
  %42 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %41, i64 0, i32 0, i32 0
  %43 = load %"class.rtc::ArrayView"*, %"class.rtc::ArrayView"** %42, align 8
  %44 = icmp eq %"class.rtc::ArrayView"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %39
  %46 = ptrtoint %"class.rtc::ArrayView"* %43 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %40, i64 -1, i32 0, i32 1
  %48 = bitcast %"class.rtc::ArrayView"** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = bitcast %"class.rtc::ArrayView"* %43 to i8*
  tail call void @_ZdlPv(i8* %49) #9
  br label %50

50:                                               ; preds = %45, %39
  %51 = icmp eq %"class.std::__1::vector.7"* %41, %32
  br i1 %51, label %52, label %39

52:                                               ; preds = %50
  %53 = bitcast %"class.std::__1::vector"* %30 to i8**
  %54 = load i8*, i8** %53, align 8
  br label %55

55:                                               ; preds = %52, %34
  %56 = phi i8* [ %54, %52 ], [ %35, %34 ]
  store %"class.std::__1::vector.7"* %32, %"class.std::__1::vector.7"** %36, align 8
  tail call void @_ZdlPv(i8* %56) #9
  br label %57

57:                                               ; preds = %29, %55
  %58 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %59 = load i16**, i16*** %58, align 8
  store i16** null, i16*** %58, align 8
  %60 = icmp eq i16** %59, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %57
  %62 = bitcast i16** %59 to i8*
  tail call void @_ZdaPv(i8* %62) #9
  br label %63

63:                                               ; preds = %57, %61
  %64 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %65 = load i16**, i16*** %64, align 8
  store i16** null, i16*** %64, align 8
  %66 = icmp eq i16** %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %63
  %68 = bitcast i16** %65 to i8*
  tail call void @_ZdaPv(i8* %68) #9
  br label %69

69:                                               ; preds = %63, %67
  %70 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i16*, i16** %70, align 8
  store i16* null, i16** %70, align 8
  %72 = icmp eq i16* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %69
  %74 = bitcast i16* %71 to i8*
  tail call void @_ZdaPv(i8* %74) #9
  br label %75

75:                                               ; preds = %69, %73
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.webrtc::ChannelBuffer"* @_ZN6webrtc15IFChannelBuffer4ibufEv(%"class.webrtc::IFChannelBuffer"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %27

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %7 = load i16**, i16*** %6, align 8
  %8 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 3, i32 6
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 1, i32 6
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %12 = load float**, float*** %11, align 8
  %13 = icmp eq i64 %9, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 1, i32 3
  br label %17

16:                                               ; preds = %17, %5
  store i8 1, i8* %2, align 8
  br label %27

17:                                               ; preds = %17, %14
  %18 = phi i64 [ 0, %14 ], [ %24, %17 ]
  %19 = getelementptr inbounds float*, float** %12, i64 %18
  %20 = load float*, float** %19, align 8
  %21 = load i64, i64* %15, align 8
  %22 = getelementptr inbounds i16*, i16** %7, i64 %18
  %23 = load i16*, i16** %22, align 8
  tail call void @_ZN6webrtc13FloatS16ToS16EPKfmPs(float* %20, i64 %21, i16* %23) #10
  %24 = add nuw i64 %18, 1
  %25 = load i64, i64* %8, align 8
  %26 = icmp ult i64 %24, %25
  br i1 %26, label %17, label %16

27:                                               ; preds = %1, %16
  %28 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 2
  store i8 0, i8* %28, align 8
  %29 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 1
  ret %"class.webrtc::ChannelBuffer"* %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc15IFChannelBuffer8RefreshIEv(%"class.webrtc::IFChannelBuffer"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %27

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %7 = load i16**, i16*** %6, align 8
  %8 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 3, i32 6
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 1, i32 6
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %12 = load float**, float*** %11, align 8
  %13 = icmp eq i64 %9, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 1, i32 3
  br label %17

16:                                               ; preds = %17, %5
  store i8 1, i8* %2, align 8
  br label %27

17:                                               ; preds = %14, %17
  %18 = phi i64 [ 0, %14 ], [ %24, %17 ]
  %19 = getelementptr inbounds float*, float** %12, i64 %18
  %20 = load float*, float** %19, align 8
  %21 = load i64, i64* %15, align 8
  %22 = getelementptr inbounds i16*, i16** %7, i64 %18
  %23 = load i16*, i16** %22, align 8
  tail call void @_ZN6webrtc13FloatS16ToS16EPKfmPs(float* %20, i64 %21, i16* %23) #10
  %24 = add nuw i64 %18, 1
  %25 = load i64, i64* %8, align 8
  %26 = icmp ult i64 %24, %25
  br i1 %26, label %17, label %16

27:                                               ; preds = %1, %16
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.webrtc::ChannelBuffer.11"* @_ZN6webrtc15IFChannelBuffer4fbufEv(%"class.webrtc::IFChannelBuffer"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %44

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 1, i32 6
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 3, i32 6
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %10 = load i16**, i16*** %9, align 8
  %11 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %12 = load float**, float*** %11, align 8
  %13 = icmp eq i64 %7, 0
  br i1 %13, label %25, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 1, i32 3
  %16 = load i64, i64* %15, align 8
  br label %17

17:                                               ; preds = %28, %14
  %18 = phi i64 [ %7, %14 ], [ %29, %28 ]
  %19 = phi i64 [ %16, %14 ], [ %30, %28 ]
  %20 = phi i64 [ 0, %14 ], [ %31, %28 ]
  %21 = icmp eq i64 %19, 0
  br i1 %21, label %28, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds i16*, i16** %10, i64 %20
  %24 = getelementptr inbounds float*, float** %12, i64 %20
  br label %33

25:                                               ; preds = %28, %5
  store i8 1, i8* %2, align 8
  br label %44

26:                                               ; preds = %33
  %27 = load i64, i64* %6, align 8
  br label %28

28:                                               ; preds = %26, %17
  %29 = phi i64 [ %27, %26 ], [ %18, %17 ]
  %30 = phi i64 [ %42, %26 ], [ 0, %17 ]
  %31 = add nuw i64 %20, 1
  %32 = icmp ult i64 %31, %29
  br i1 %32, label %17, label %25

33:                                               ; preds = %33, %22
  %34 = phi i64 [ 0, %22 ], [ %41, %33 ]
  %35 = load i16*, i16** %23, align 8
  %36 = getelementptr inbounds i16, i16* %35, i64 %34
  %37 = load i16, i16* %36, align 2
  %38 = sitofp i16 %37 to float
  %39 = load float*, float** %24, align 8
  %40 = getelementptr inbounds float, float* %39, i64 %34
  store float %38, float* %40, align 4
  %41 = add nuw i64 %34, 1
  %42 = load i64, i64* %15, align 8
  %43 = icmp ult i64 %41, %42
  br i1 %43, label %33, label %26

44:                                               ; preds = %1, %25
  %45 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 0
  store i8 0, i8* %45, align 8
  %46 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 3
  ret %"class.webrtc::ChannelBuffer.11"* %46
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK6webrtc15IFChannelBuffer8RefreshFEv(%"class.webrtc::IFChannelBuffer"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %44

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 1, i32 6
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 3, i32 6
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %10 = load i16**, i16*** %9, align 8
  %11 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %12 = load float**, float*** %11, align 8
  %13 = icmp eq i64 %7, 0
  br i1 %13, label %25, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 1, i32 3
  %16 = load i64, i64* %15, align 8
  br label %17

17:                                               ; preds = %14, %28
  %18 = phi i64 [ %7, %14 ], [ %29, %28 ]
  %19 = phi i64 [ %16, %14 ], [ %30, %28 ]
  %20 = phi i64 [ 0, %14 ], [ %31, %28 ]
  %21 = icmp eq i64 %19, 0
  br i1 %21, label %28, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds i16*, i16** %10, i64 %20
  %24 = getelementptr inbounds float*, float** %12, i64 %20
  br label %33

25:                                               ; preds = %28, %5
  store i8 1, i8* %2, align 8
  br label %44

26:                                               ; preds = %33
  %27 = load i64, i64* %6, align 8
  br label %28

28:                                               ; preds = %26, %17
  %29 = phi i64 [ %27, %26 ], [ %18, %17 ]
  %30 = phi i64 [ %42, %26 ], [ 0, %17 ]
  %31 = add nuw i64 %20, 1
  %32 = icmp ult i64 %31, %29
  br i1 %32, label %17, label %25

33:                                               ; preds = %22, %33
  %34 = phi i64 [ 0, %22 ], [ %41, %33 ]
  %35 = load i16*, i16** %23, align 8
  %36 = getelementptr inbounds i16, i16* %35, i64 %34
  %37 = load i16, i16* %36, align 2
  %38 = sitofp i16 %37 to float
  %39 = load float*, float** %24, align 8
  %40 = getelementptr inbounds float, float* %39, i64 %34
  store float %38, float* %40, align 4
  %41 = add nuw i64 %34, 1
  %42 = load i64, i64* %15, align 8
  %43 = icmp ult i64 %41, %42
  br i1 %43, label %33, label %26

44:                                               ; preds = %1, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.webrtc::ChannelBuffer"* @_ZNK6webrtc15IFChannelBuffer10ibuf_constEv(%"class.webrtc::IFChannelBuffer"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %27

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %7 = load i16**, i16*** %6, align 8
  %8 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 3, i32 6
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 1, i32 6
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %12 = load float**, float*** %11, align 8
  %13 = icmp eq i64 %9, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 1, i32 3
  br label %17

16:                                               ; preds = %17, %5
  store i8 1, i8* %2, align 8
  br label %27

17:                                               ; preds = %17, %14
  %18 = phi i64 [ 0, %14 ], [ %24, %17 ]
  %19 = getelementptr inbounds float*, float** %12, i64 %18
  %20 = load float*, float** %19, align 8
  %21 = load i64, i64* %15, align 8
  %22 = getelementptr inbounds i16*, i16** %7, i64 %18
  %23 = load i16*, i16** %22, align 8
  tail call void @_ZN6webrtc13FloatS16ToS16EPKfmPs(float* %20, i64 %21, i16* %23) #10
  %24 = add nuw i64 %18, 1
  %25 = load i64, i64* %8, align 8
  %26 = icmp ult i64 %24, %25
  br i1 %26, label %17, label %16

27:                                               ; preds = %1, %16
  %28 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 1
  ret %"class.webrtc::ChannelBuffer"* %28
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.webrtc::ChannelBuffer.11"* @_ZNK6webrtc15IFChannelBuffer10fbuf_constEv(%"class.webrtc::IFChannelBuffer"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %44

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 1, i32 6
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 3, i32 6
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %10 = load i16**, i16*** %9, align 8
  %11 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %12 = load float**, float*** %11, align 8
  %13 = icmp eq i64 %7, 0
  br i1 %13, label %25, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 1, i32 3
  %16 = load i64, i64* %15, align 8
  br label %17

17:                                               ; preds = %28, %14
  %18 = phi i64 [ %7, %14 ], [ %29, %28 ]
  %19 = phi i64 [ %16, %14 ], [ %30, %28 ]
  %20 = phi i64 [ 0, %14 ], [ %31, %28 ]
  %21 = icmp eq i64 %19, 0
  br i1 %21, label %28, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds i16*, i16** %10, i64 %20
  %24 = getelementptr inbounds float*, float** %12, i64 %20
  br label %33

25:                                               ; preds = %28, %5
  store i8 1, i8* %2, align 8
  br label %44

26:                                               ; preds = %33
  %27 = load i64, i64* %6, align 8
  br label %28

28:                                               ; preds = %26, %17
  %29 = phi i64 [ %27, %26 ], [ %18, %17 ]
  %30 = phi i64 [ %42, %26 ], [ 0, %17 ]
  %31 = add nuw i64 %20, 1
  %32 = icmp ult i64 %31, %29
  br i1 %32, label %17, label %25

33:                                               ; preds = %33, %22
  %34 = phi i64 [ 0, %22 ], [ %41, %33 ]
  %35 = load i16*, i16** %23, align 8
  %36 = getelementptr inbounds i16, i16* %35, i64 %34
  %37 = load i16, i16* %36, align 2
  %38 = sitofp i16 %37 to float
  %39 = load float*, float** %24, align 8
  %40 = getelementptr inbounds float, float* %39, i64 %34
  store float %38, float* %40, align 4
  %41 = add nuw i64 %34, 1
  %42 = load i64, i64* %15, align 8
  %43 = icmp ult i64 %41, %42
  br i1 %43, label %33, label %26

44:                                               ; preds = %1, %25
  %45 = getelementptr inbounds %"class.webrtc::IFChannelBuffer", %"class.webrtc::IFChannelBuffer"* %0, i64 0, i32 3
  ret %"class.webrtc::ChannelBuffer.11"* %45
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN6webrtc13FloatS16ToS16EPKfmPs(float*, i64, i16*) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS0_IN3rtc9ArrayViewIsLln4711EEENS_9allocatorIS3_EEEENS4_IS6_EEEC2EmRKS6_(%"class.std::__1::vector"*, i64, %"class.std::__1::vector.7"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #10
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %63, label %6

6:                                                ; preds = %3
  %7 = icmp ugt i64 %1, 768614336404564650
  br i1 %7, label %8, label %10

8:                                                ; preds = %6
  %9 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %9) #11
  unreachable

10:                                               ; preds = %6
  %11 = mul i64 %1, 24
  %12 = tail call i8* @_Znwm(i64 %11) #9
  %13 = bitcast i8* %12 to %"class.std::__1::vector.7"*
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %15 = bitcast %"class.std::__1::vector.7"** %14 to i8**
  store i8* %12, i8** %15, align 8
  %16 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %12, i8** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %13, i64 %1
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::vector.7"* %17, %"class.std::__1::vector.7"** %18, align 8
  %19 = bitcast %"class.std::__1::vector.7"** %14 to i64*
  %20 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %2, i64 0, i32 0, i32 1
  %21 = bitcast %"class.rtc::ArrayView"** %20 to i64*
  %22 = bitcast %"class.std::__1::vector.7"* %2 to i64*
  %23 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %2, i64 0, i32 0, i32 0
  br label %24

24:                                               ; preds = %58, %10
  %25 = phi %"class.std::__1::vector.7"* [ %13, %10 ], [ %59, %58 ]
  %26 = bitcast %"class.std::__1::vector.7"* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #10
  %27 = load i64, i64* %21, align 8
  %28 = load i64, i64* %22, align 8
  %29 = sub i64 %27, %28
  %30 = ashr exact i64 %29, 4
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %58, label %32

32:                                               ; preds = %24
  %33 = icmp ugt i64 %30, 1152921504606846975
  br i1 %33, label %34, label %36

34:                                               ; preds = %32
  %35 = bitcast %"class.std::__1::vector.7"* %25 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %35) #11
  unreachable

36:                                               ; preds = %32
  %37 = tail call i8* @_Znwm(i64 %29) #9
  %38 = bitcast i8* %37 to %"class.rtc::ArrayView"*
  %39 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %25, i64 0, i32 0, i32 1
  %40 = bitcast %"class.rtc::ArrayView"** %39 to i8**
  store i8* %37, i8** %40, align 8
  %41 = bitcast %"class.std::__1::vector.7"* %25 to i8**
  store i8* %37, i8** %41, align 8
  %42 = getelementptr inbounds %"class.rtc::ArrayView", %"class.rtc::ArrayView"* %38, i64 %30
  %43 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %25, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.rtc::ArrayView"* %42, %"class.rtc::ArrayView"** %43, align 8
  %44 = load %"class.rtc::ArrayView"*, %"class.rtc::ArrayView"** %23, align 8
  %45 = load i64, i64* %21, align 8
  %46 = bitcast %"class.rtc::ArrayView"** %39 to i64*
  %47 = ptrtoint i8* %37 to i64
  %48 = ptrtoint %"class.rtc::ArrayView"* %44 to i64
  %49 = sub i64 %45, %48
  %50 = icmp sgt i64 %49, 0
  br i1 %50, label %51, label %56

51:                                               ; preds = %36
  %52 = lshr exact i64 %49, 4
  %53 = bitcast %"class.rtc::ArrayView"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* align 8 %53, i64 %49, i1 false) #10
  %54 = getelementptr inbounds %"class.rtc::ArrayView", %"class.rtc::ArrayView"* %38, i64 %52
  %55 = ptrtoint %"class.rtc::ArrayView"* %54 to i64
  br label %56

56:                                               ; preds = %51, %36
  %57 = phi i64 [ %55, %51 ], [ %47, %36 ]
  store i64 %57, i64* %46, align 8
  br label %58

58:                                               ; preds = %56, %24
  %59 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %25, i64 1
  %60 = icmp eq %"class.std::__1::vector.7"* %59, %17
  br i1 %60, label %61, label %24

61:                                               ; preds = %58
  %62 = ptrtoint %"class.std::__1::vector.7"* %17 to i64
  store i64 %62, i64* %19, align 8
  br label %63

63:                                               ; preds = %3, %61
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS0_IN3rtc9ArrayViewIfLln4711EEENS_9allocatorIS3_EEEENS4_IS6_EEEC2EmRKS6_(%"class.std::__1::vector.24"*, i64, %"class.std::__1::vector.26"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.std::__1::vector.24"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #10
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %63, label %6

6:                                                ; preds = %3
  %7 = icmp ugt i64 %1, 768614336404564650
  br i1 %7, label %8, label %10

8:                                                ; preds = %6
  %9 = bitcast %"class.std::__1::vector.24"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %9) #11
  unreachable

10:                                               ; preds = %6
  %11 = mul i64 %1, 24
  %12 = tail call i8* @_Znwm(i64 %11) #9
  %13 = bitcast i8* %12 to %"class.std::__1::vector.26"*
  %14 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %0, i64 0, i32 0, i32 1
  %15 = bitcast %"class.std::__1::vector.26"** %14 to i8**
  store i8* %12, i8** %15, align 8
  %16 = bitcast %"class.std::__1::vector.24"* %0 to i8**
  store i8* %12, i8** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %13, i64 %1
  %18 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::vector.26"* %17, %"class.std::__1::vector.26"** %18, align 8
  %19 = bitcast %"class.std::__1::vector.26"** %14 to i64*
  %20 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %2, i64 0, i32 0, i32 1
  %21 = bitcast %"class.rtc::ArrayView.39"** %20 to i64*
  %22 = bitcast %"class.std::__1::vector.26"* %2 to i64*
  %23 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %2, i64 0, i32 0, i32 0
  br label %24

24:                                               ; preds = %58, %10
  %25 = phi %"class.std::__1::vector.26"* [ %13, %10 ], [ %59, %58 ]
  %26 = bitcast %"class.std::__1::vector.26"* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #10
  %27 = load i64, i64* %21, align 8
  %28 = load i64, i64* %22, align 8
  %29 = sub i64 %27, %28
  %30 = ashr exact i64 %29, 4
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %58, label %32

32:                                               ; preds = %24
  %33 = icmp ugt i64 %30, 1152921504606846975
  br i1 %33, label %34, label %36

34:                                               ; preds = %32
  %35 = bitcast %"class.std::__1::vector.26"* %25 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %35) #11
  unreachable

36:                                               ; preds = %32
  %37 = tail call i8* @_Znwm(i64 %29) #9
  %38 = bitcast i8* %37 to %"class.rtc::ArrayView.39"*
  %39 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %25, i64 0, i32 0, i32 1
  %40 = bitcast %"class.rtc::ArrayView.39"** %39 to i8**
  store i8* %37, i8** %40, align 8
  %41 = bitcast %"class.std::__1::vector.26"* %25 to i8**
  store i8* %37, i8** %41, align 8
  %42 = getelementptr inbounds %"class.rtc::ArrayView.39", %"class.rtc::ArrayView.39"* %38, i64 %30
  %43 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %25, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.rtc::ArrayView.39"* %42, %"class.rtc::ArrayView.39"** %43, align 8
  %44 = load %"class.rtc::ArrayView.39"*, %"class.rtc::ArrayView.39"** %23, align 8
  %45 = load i64, i64* %21, align 8
  %46 = bitcast %"class.rtc::ArrayView.39"** %39 to i64*
  %47 = ptrtoint i8* %37 to i64
  %48 = ptrtoint %"class.rtc::ArrayView.39"* %44 to i64
  %49 = sub i64 %45, %48
  %50 = icmp sgt i64 %49, 0
  br i1 %50, label %51, label %56

51:                                               ; preds = %36
  %52 = lshr exact i64 %49, 4
  %53 = bitcast %"class.rtc::ArrayView.39"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* align 8 %53, i64 %49, i1 false) #10
  %54 = getelementptr inbounds %"class.rtc::ArrayView.39", %"class.rtc::ArrayView.39"* %38, i64 %52
  %55 = ptrtoint %"class.rtc::ArrayView.39"* %54 to i64
  br label %56

56:                                               ; preds = %51, %36
  %57 = phi i64 [ %55, %51 ], [ %47, %36 ]
  store i64 %57, i64* %46, align 8
  br label %58

58:                                               ; preds = %56, %24
  %59 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %25, i64 1
  %60 = icmp eq %"class.std::__1::vector.26"* %59, %17
  br i1 %60, label %61, label %24

61:                                               ; preds = %58
  %62 = ptrtoint %"class.std::__1::vector.26"* %17 to i64
  store i64 %62, i64* %19, align 8
  br label %63

63:                                               ; preds = %3, %61
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
