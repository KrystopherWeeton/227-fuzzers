; ModuleID = '../../v8/src/snapshot/serializer.cc'
source_filename = "../../v8/src/snapshot/serializer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.548" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.146", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.24", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.24", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.24", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.24", i64, i64, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.34", %"class.std::__1::vector.38", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.153", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.168", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.24", i64, i8, %"struct.std::__1::atomic.24", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.172", %"class.std::__1::vector.172", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.185", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.315", %"class.std::__1::unique_ptr.321", %"class.std::__1::unique_ptr.327", %"class.std::__1::unique_ptr.366", %"class.std::__1::unique_ptr.405", %"class.std::__1::unique_ptr.435", %"class.std::__1::unique_ptr.441", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.457", %"class.std::__1::unique_ptr.457", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.469", %"class.std::__1::unique_ptr.469", %"class.std::__1::unique_ptr.475", %"class.std::__1::unique_ptr.481", %"class.std::__1::shared_ptr.487", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.510", %"class.std::__1::unique_ptr.536", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.542", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.555", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.337", i8, [7 x i8], %"class.std::__1::unordered_map.561", %"class.std::__1::unordered_map.587", %"class.std::__1::unordered_map.561", %"class.std::__1::unordered_map.611", %"class.std::__1::vector.639", i8, %"class.std::__1::unique_ptr.646", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.5", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.19", %"class.std::__1::__compressed_pair.21", [4 x i8] }>
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7", %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i64 }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.29", %"struct.std::__1::atomic.29", %"struct.std::__1::atomic.29" }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__cxx_atomic_impl.32" }
%"struct.std::__1::__cxx_atomic_impl.32" = type { %"struct.std::__1::__cxx_atomic_base_impl.33" }
%"struct.std::__1::__cxx_atomic_base_impl.33" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.652", %"class.std::__1::unique_ptr.673", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.683", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.822", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.835", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.845", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.856", %"struct.std::__1::atomic.159", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.931", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.979"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.988", i32, i8, i8, i32, i32, %"class.std::__1::vector.994", %"class.std::__1::vector.994", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1001", i64, %"class.std::__1::unordered_map.1002", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.548", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.167", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1058", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1096", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1130", %"class.std::__1::vector.1134", %"class.std::__1::vector.1134", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.652" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.146", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.653", %"class.std::__1::unique_ptr.667" }
%"class.std::__1::unique_ptr.653" = type { %"class.std::__1::__compressed_pair.654" }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.655" }
%"struct.std::__1::__compressed_pair_elem.655" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.656" }
%"class.std::__1::vector.656" = type { %"class.std::__1::__vector_base.657" }
%"class.std::__1::__vector_base.657" = type { %"class.std::__1::unique_ptr.658"*, %"class.std::__1::unique_ptr.658"*, %"class.std::__1::__compressed_pair.659" }
%"class.std::__1::unique_ptr.658" = type { %"class.std::__1::__compressed_pair.1216" }
%"class.std::__1::__compressed_pair.1216" = type { %"struct.std::__1::__compressed_pair_elem.1217" }
%"struct.std::__1::__compressed_pair_elem.1217" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.659" = type { %"struct.std::__1::__compressed_pair_elem.660" }
%"struct.std::__1::__compressed_pair_elem.660" = type { %"class.std::__1::unique_ptr.658"* }
%"class.std::__1::unique_ptr.667" = type { %"class.std::__1::__compressed_pair.668" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.669" }
%"struct.std::__1::__compressed_pair_elem.669" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.673" = type { %"class.std::__1::__compressed_pair.674" }
%"class.std::__1::__compressed_pair.674" = type { %"struct.std::__1::__compressed_pair_elem.675" }
%"struct.std::__1::__compressed_pair_elem.675" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.676", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.676" = type { %"struct.std::__1::__atomic_base.677" }
%"struct.std::__1::__atomic_base.677" = type { %"struct.std::__1::__cxx_atomic_impl.678" }
%"struct.std::__1::__cxx_atomic_impl.678" = type { %"struct.std::__1::__cxx_atomic_base_impl.679" }
%"struct.std::__1::__cxx_atomic_base_impl.679" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.683" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.684", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.684" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.685", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.685" = type { %"class.std::__1::__vector_base.686" }
%"class.std::__1::__vector_base.686" = type { %"class.std::__1::unique_ptr.687"*, %"class.std::__1::unique_ptr.687"*, %"class.std::__1::__compressed_pair.688" }
%"class.std::__1::unique_ptr.687" = type opaque
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.689" }
%"struct.std::__1::__compressed_pair_elem.689" = type { %"class.std::__1::unique_ptr.687"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.693", %"class.std::__1::unique_ptr.699", %"struct.std::__1::atomic.159", %"class.std::__1::unique_ptr.705", %"class.std::__1::unique_ptr.711", %"class.std::__1::unique_ptr.717", %"class.std::__1::unique_ptr.723", %"class.std::__1::unique_ptr.729", %"class.std::__1::set.735", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.693" = type { %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.705" = type { %"class.std::__1::__compressed_pair.706" }
%"class.std::__1::__compressed_pair.706" = type { %"struct.std::__1::__compressed_pair_elem.707" }
%"struct.std::__1::__compressed_pair_elem.707" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.711" = type { %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.717" = type { %"class.std::__1::__compressed_pair.718" }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.723" = type { %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.735" = type { %"class.std::__1::__tree.736" }
%"class.std::__1::__tree.736" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.737", %"class.std::__1::__compressed_pair.741" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.741" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.744" }
%"class.v8::internal::TaggedImpl.744" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.743" }
%"class.v8::internal::TaggedImpl.743" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.751", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type { %"class.v8::internal::HeapObjectToIndexHashMap"* }
%"class.std::__1::unique_ptr.751" = type { %"class.std::__1::__compressed_pair.752" }
%"class.std::__1::__compressed_pair.752" = type { %"struct.std::__1::__compressed_pair_elem.753" }
%"struct.std::__1::__compressed_pair_elem.753" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.757", %"class.v8::internal::DetachableVector.758", %"class.v8::internal::DetachableVector.757", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.758" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.757" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"class.std::__1::unique_ptr.745", %"class.std::__1::unique_ptr.488" }
%"class.std::__1::unique_ptr.745" = type { %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.747" }
%"struct.std::__1::__compressed_pair_elem.747" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.488" = type { %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.490" }
%"struct.std::__1::__compressed_pair_elem.490" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.491", %"class.std::__1::set.499" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.491" = type { %"class.std::__1::__tree.492" }
%"class.std::__1::__tree.492" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.493", %"class.std::__1::__compressed_pair.497" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::set.499" = type { %"class.std::__1::__tree.500" }
%"class.std::__1::__tree.500" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.493", %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.759", %"class.std::__1::vector.765", %"class.std::__1::unique_ptr.772", %"class.std::__1::vector.779", %"class.std::__1::unique_ptr.786", i64, %"class.std::__1::vector.792", %"class.std::__1::vector.800", %"class.std::__1::vector.808", i8, i8, i32 }
%"class.std::__1::unique_ptr.759" = type { %"class.std::__1::__compressed_pair.760" }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.765" = type { %"class.std::__1::__vector_base.766" }
%"class.std::__1::__vector_base.766" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.767" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.768" }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.772" = type { %"class.std::__1::__compressed_pair.773" }
%"class.std::__1::__compressed_pair.773" = type { %"struct.std::__1::__compressed_pair_elem.774" }
%"struct.std::__1::__compressed_pair_elem.774" = type { %"class.v8::internal::GlobalHandles::NodeSpace.775"* }
%"class.v8::internal::GlobalHandles::NodeSpace.775" = type opaque
%"class.std::__1::vector.779" = type { %"class.std::__1::__vector_base.780" }
%"class.std::__1::__vector_base.780" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.781" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.782" }
%"struct.std::__1::__compressed_pair_elem.782" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.786" = type { %"class.std::__1::__compressed_pair.787" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.788" }
%"struct.std::__1::__compressed_pair_elem.788" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.792" = type { %"class.std::__1::__vector_base.793" }
%"class.std::__1::__vector_base.793" = type { %"struct.std::__1::pair.794"*, %"struct.std::__1::pair.794"*, %"class.std::__1::__compressed_pair.795" }
%"struct.std::__1::pair.794" = type opaque
%"class.std::__1::__compressed_pair.795" = type { %"struct.std::__1::__compressed_pair_elem.796" }
%"struct.std::__1::__compressed_pair_elem.796" = type { %"struct.std::__1::pair.794"* }
%"class.std::__1::vector.800" = type { %"class.std::__1::__vector_base.801" }
%"class.std::__1::__vector_base.801" = type { %"struct.std::__1::pair.802"*, %"struct.std::__1::pair.802"*, %"class.std::__1::__compressed_pair.803" }
%"struct.std::__1::pair.802" = type opaque
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.std::__1::pair.802"* }
%"class.std::__1::vector.808" = type { %"class.std::__1::__vector_base.809" }
%"class.std::__1::__vector_base.809" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.810" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.815", %"class.std::__1::vector.822" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { i64**, i64**, %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.829" }
%"class.std::__1::unique_ptr.829" = type { %"class.std::__1::__compressed_pair.830" }
%"class.std::__1::__compressed_pair.830" = type { %"struct.std::__1::__compressed_pair_elem.831" }
%"struct.std::__1::__compressed_pair_elem.831" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.822" = type { %"class.std::__1::__vector_base.823" }
%"class.std::__1::__vector_base.823" = type { i32*, i32*, %"class.std::__1::__compressed_pair.824" }
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.825" }
%"struct.std::__1::__compressed_pair_elem.825" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.835" = type { %"struct.std::__1::__atomic_base.836" }
%"struct.std::__1::__atomic_base.836" = type { %"struct.std::__1::__cxx_atomic_impl.837" }
%"struct.std::__1::__cxx_atomic_impl.837" = type { %"struct.std::__1::__cxx_atomic_base_impl.838" }
%"struct.std::__1::__cxx_atomic_base_impl.838" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.845" = type { %"struct.std::__1::__atomic_base.846" }
%"struct.std::__1::__atomic_base.846" = type { %"struct.std::__1::__cxx_atomic_impl.847" }
%"struct.std::__1::__cxx_atomic_impl.847" = type { %"struct.std::__1::__cxx_atomic_base_impl.848" }
%"struct.std::__1::__cxx_atomic_base_impl.848" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.851" }
%"struct.std::__1::__compressed_pair_elem.851" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.852 }
%union.anon.852 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.856" = type { %"class.std::__1::__hash_table.857" }
%"class.std::__1::__hash_table.857" = type <{ %"class.std::__1::unique_ptr.858", %"class.std::__1::__compressed_pair.868", %"class.std::__1::__compressed_pair.873", %"class.std::__1::__compressed_pair.876", [4 x i8] }>
%"class.std::__1::unique_ptr.858" = type { %"class.std::__1::__compressed_pair.859" }
%"class.std::__1::__compressed_pair.859" = type { %"struct.std::__1::__compressed_pair_elem.860", %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.860" = type { %"struct.std::__1::__hash_node_base.861"** }
%"struct.std::__1::__hash_node_base.861" = type { %"struct.std::__1::__hash_node_base.861"* }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"class.std::__1::__bucket_list_deallocator.863" }
%"class.std::__1::__bucket_list_deallocator.863" = type { %"class.std::__1::__compressed_pair.864" }
%"class.std::__1::__compressed_pair.864" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.869" }
%"struct.std::__1::__compressed_pair_elem.869" = type { %"struct.std::__1::__hash_node_base.861" }
%"class.std::__1::__compressed_pair.873" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::atomic.159" = type { %"struct.std::__1::__atomic_base.160" }
%"struct.std::__1::__atomic_base.160" = type { %"struct.std::__1::__cxx_atomic_impl.161" }
%"struct.std::__1::__cxx_atomic_impl.161" = type { %"struct.std::__1::__cxx_atomic_base_impl.162" }
%"struct.std::__1::__cxx_atomic_base_impl.162" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.882", %"class.v8::internal::Handle.888", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.889", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.882" = type { %"class.std::__1::__compressed_pair.883" }
%"class.std::__1::__compressed_pair.883" = type { %"struct.std::__1::__compressed_pair_elem.884" }
%"struct.std::__1::__compressed_pair_elem.884" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.888" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.889" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.890", %"class.std::__1::vector.896", %"class.std::__1::unique_ptr.904", %"class.std::__1::unique_ptr.910", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.916", %"class.std::__1::vector.922", %"struct.std::__1::pair.930" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.890" = type { %"class.std::__1::__compressed_pair.891" }
%"class.std::__1::__compressed_pair.891" = type { %"struct.std::__1::__compressed_pair_elem.892" }
%"struct.std::__1::__compressed_pair_elem.892" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.896" = type { %"class.std::__1::__vector_base.897" }
%"class.std::__1::__vector_base.897" = type { %"class.std::__1::unique_ptr.898"*, %"class.std::__1::unique_ptr.898"*, %"class.std::__1::__compressed_pair.899" }
%"class.std::__1::unique_ptr.898" = type opaque
%"class.std::__1::__compressed_pair.899" = type { %"struct.std::__1::__compressed_pair_elem.900" }
%"struct.std::__1::__compressed_pair_elem.900" = type { %"class.std::__1::unique_ptr.898"* }
%"class.std::__1::unique_ptr.904" = type { %"class.std::__1::__compressed_pair.905" }
%"class.std::__1::__compressed_pair.905" = type { %"struct.std::__1::__compressed_pair_elem.906" }
%"struct.std::__1::__compressed_pair_elem.906" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.910" = type { %"class.std::__1::__compressed_pair.911" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.912" }
%"struct.std::__1::__compressed_pair_elem.912" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.916" = type { %"class.std::__1::__compressed_pair.917" }
%"class.std::__1::__compressed_pair.917" = type { %"struct.std::__1::__compressed_pair_elem.918" }
%"struct.std::__1::__compressed_pair_elem.918" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.922" = type { %"class.std::__1::__vector_base.923" }
%"class.std::__1::__vector_base.923" = type { %"struct.std::__1::pair.924"*, %"struct.std::__1::pair.924"*, %"class.std::__1::__compressed_pair.925" }
%"struct.std::__1::pair.924" = type opaque
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"struct.std::__1::pair.924"* }
%"struct.std::__1::pair.930" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.1"*, i16, i8*)*, i8* }
%"class.v8::Local.1" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.934", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.934" = type { %"class.std::__1::__hash_table.935" }
%"class.std::__1::__hash_table.935" = type <{ %"class.std::__1::unique_ptr.936", %"class.std::__1::__compressed_pair.946", %"class.std::__1::__compressed_pair.951", %"class.std::__1::__compressed_pair.955", [4 x i8] }>
%"class.std::__1::unique_ptr.936" = type { %"class.std::__1::__compressed_pair.937" }
%"class.std::__1::__compressed_pair.937" = type { %"struct.std::__1::__compressed_pair_elem.938", %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.938" = type { %"struct.std::__1::__hash_node_base.939"** }
%"struct.std::__1::__hash_node_base.939" = type { %"struct.std::__1::__hash_node_base.939"* }
%"struct.std::__1::__compressed_pair_elem.940" = type { %"class.std::__1::__bucket_list_deallocator.941" }
%"class.std::__1::__bucket_list_deallocator.941" = type { %"class.std::__1::__compressed_pair.942" }
%"class.std::__1::__compressed_pair.942" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.946" = type { %"struct.std::__1::__compressed_pair_elem.947" }
%"struct.std::__1::__compressed_pair_elem.947" = type { %"struct.std::__1::__hash_node_base.939" }
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.955" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type { i32 (...)**, %"class.v8::internal::Isolate"*, [768 x i64], %"class.std::__1::unique_ptr.963", i64 }
%"class.std::__1::unique_ptr.963" = type { %"class.std::__1::__compressed_pair.964" }
%"class.std::__1::__compressed_pair.964" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { i64* }
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.974" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.968"**, %"struct.std::__1::pair.968"**, %"struct.std::__1::pair.968"**, %"class.std::__1::__compressed_pair.969" }
%"struct.std::__1::pair.968" = type opaque
%"class.std::__1::__compressed_pair.969" = type { %"struct.std::__1::__compressed_pair_elem.970" }
%"struct.std::__1::__compressed_pair_elem.970" = type { %"struct.std::__1::pair.968"** }
%"class.std::__1::__compressed_pair.974" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.979" = type { %"class.std::__1::__vector_base.980" }
%"class.std::__1::__vector_base.980" = type { %"class.v8::internal::Handle.981"*, %"class.v8::internal::Handle.981"*, %"class.std::__1::__compressed_pair.982" }
%"class.v8::internal::Handle.981" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.982" = type { %"struct.std::__1::__compressed_pair_elem.983" }
%"struct.std::__1::__compressed_pair_elem.983" = type { %"class.v8::internal::Handle.981"* }
%"class.v8::internal::AddressToIndexHashMap" = type { %"class.v8::internal::PointerToIndexHashMap.987" }
%"class.v8::internal::PointerToIndexHashMap.987" = type { %"class.v8::base::TemplateHashMapImpl" }
%"class.v8::base::TemplateHashMapImpl" = type { %"struct.v8::base::TemplateHashMapImpl<unsigned long, unsigned int, v8::base::KeyEqualityMatcher<long>, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<unsigned long, unsigned int, v8::base::KeyEqualityMatcher<long>, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry" = type <{ i64, i32, i32, i8, [7 x i8] }>
%"class.v8::internal::HeapObjectToIndexHashMap" = type { %"class.v8::internal::PointerToIndexHashMap" }
%"class.v8::internal::PointerToIndexHashMap" = type { %"class.v8::base::TemplateHashMapImpl" }
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.840", i32, %"class.v8::Local.1" }
%"class.v8::Local.840" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.988" = type { %"class.std::__1::__compressed_pair.989" }
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.990" }
%"struct.std::__1::__compressed_pair_elem.990" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.815", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.994" = type { %"class.std::__1::__vector_base.995" }
%"class.std::__1::__vector_base.995" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.996" }
%"class.std::__1::__compressed_pair.996" = type { %"struct.std::__1::__compressed_pair_elem.997" }
%"struct.std::__1::__compressed_pair_elem.997" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1001" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1002" = type { %"class.std::__1::__hash_table.1003" }
%"class.std::__1::__hash_table.1003" = type <{ %"class.std::__1::unique_ptr.1004", %"class.std::__1::__compressed_pair.1014", %"class.std::__1::__compressed_pair.1019", %"class.std::__1::__compressed_pair.1022", [4 x i8] }>
%"class.std::__1::unique_ptr.1004" = type { %"class.std::__1::__compressed_pair.1005" }
%"class.std::__1::__compressed_pair.1005" = type { %"struct.std::__1::__compressed_pair_elem.1006", %"struct.std::__1::__compressed_pair_elem.1008" }
%"struct.std::__1::__compressed_pair_elem.1006" = type { %"struct.std::__1::__hash_node_base.1007"** }
%"struct.std::__1::__hash_node_base.1007" = type { %"struct.std::__1::__hash_node_base.1007"* }
%"struct.std::__1::__compressed_pair_elem.1008" = type { %"class.std::__1::__bucket_list_deallocator.1009" }
%"class.std::__1::__bucket_list_deallocator.1009" = type { %"class.std::__1::__compressed_pair.1010" }
%"class.std::__1::__compressed_pair.1010" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1014" = type { %"struct.std::__1::__compressed_pair_elem.1015" }
%"struct.std::__1::__compressed_pair_elem.1015" = type { %"struct.std::__1::__hash_node_base.1007" }
%"class.std::__1::__compressed_pair.1019" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1022" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.167" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1026", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1055", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1056", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1026" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1051, %union.anon.1053, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1051 = type { i64 }
%union.anon.1053 = type { i64 }
%"class.std::__1::weak_ptr.1055" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.24", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.167" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1056" = type { %"class.v8::PersistentBase.1057" }
%"class.v8::PersistentBase.1057" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1027", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1027" = type { %"class.std::__1::__hash_table.1028" }
%"class.std::__1::__hash_table.1028" = type <{ %"class.std::__1::unique_ptr.1029", %"class.std::__1::__compressed_pair.1039", %"class.std::__1::__compressed_pair.1044", %"class.std::__1::__compressed_pair.1047", [4 x i8] }>
%"class.std::__1::unique_ptr.1029" = type { %"class.std::__1::__compressed_pair.1030" }
%"class.std::__1::__compressed_pair.1030" = type { %"struct.std::__1::__compressed_pair_elem.1031", %"struct.std::__1::__compressed_pair_elem.1033" }
%"struct.std::__1::__compressed_pair_elem.1031" = type { %"struct.std::__1::__hash_node_base.1032"** }
%"struct.std::__1::__hash_node_base.1032" = type { %"struct.std::__1::__hash_node_base.1032"* }
%"struct.std::__1::__compressed_pair_elem.1033" = type { %"class.std::__1::__bucket_list_deallocator.1034" }
%"class.std::__1::__bucket_list_deallocator.1034" = type { %"class.std::__1::__compressed_pair.1035" }
%"class.std::__1::__compressed_pair.1035" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1039" = type { %"struct.std::__1::__compressed_pair_elem.1040" }
%"struct.std::__1::__compressed_pair_elem.1040" = type { %"struct.std::__1::__hash_node_base.1032" }
%"class.std::__1::__compressed_pair.1044" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1047" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1058" = type { %"class.std::__1::__compressed_pair.1059" }
%"class.std::__1::__compressed_pair.1059" = type { %"struct.std::__1::__compressed_pair_elem.1060" }
%"struct.std::__1::__compressed_pair_elem.1060" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1087", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1063", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1067", %"class.std::__1::unique_ptr.1073", %"class.std::__1::unique_ptr.481", %"class.std::__1::vector.1079", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1063" = type { %"struct.std::__1::__atomic_base.1064" }
%"struct.std::__1::__atomic_base.1064" = type { %"struct.std::__1::__cxx_atomic_impl.1065" }
%"struct.std::__1::__cxx_atomic_impl.1065" = type { %"struct.std::__1::__cxx_atomic_base_impl.1066" }
%"struct.std::__1::__cxx_atomic_base_impl.1066" = type { i32 }
%"class.std::__1::unique_ptr.1067" = type { %"class.std::__1::__compressed_pair.1068" }
%"class.std::__1::__compressed_pair.1068" = type { %"struct.std::__1::__compressed_pair_elem.1069" }
%"struct.std::__1::__compressed_pair_elem.1069" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.815" }
%"class.std::__1::unique_ptr.1073" = type { %"class.std::__1::__compressed_pair.1074" }
%"class.std::__1::__compressed_pair.1074" = type { %"struct.std::__1::__compressed_pair_elem.1075" }
%"struct.std::__1::__compressed_pair_elem.1075" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1079" = type { %"class.std::__1::__vector_base.1080" }
%"class.std::__1::__vector_base.1080" = type { %"struct.std::__1::pair.1081"*, %"struct.std::__1::pair.1081"*, %"class.std::__1::__compressed_pair.1082" }
%"struct.std::__1::pair.1081" = type opaque
%"class.std::__1::__compressed_pair.1082" = type { %"struct.std::__1::__compressed_pair_elem.1083" }
%"struct.std::__1::__compressed_pair_elem.1083" = type { %"struct.std::__1::pair.1081"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.24"*, %"class.std::__1::unique_ptr.104" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.45", %"class.std::__1::vector.45", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.47" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.52" }
%"class.std::__1::__hash_table.52" = type <{ %"class.std::__1::unique_ptr.53", %"class.std::__1::__compressed_pair.63", %"class.std::__1::__compressed_pair.68", %"class.std::__1::__compressed_pair.70", [4 x i8] }>
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55", %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.std::__1::__hash_node_base.56"** }
%"struct.std::__1::__hash_node_base.56" = type { %"struct.std::__1::__hash_node_base.56"* }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.std::__1::__bucket_list_deallocator.58" }
%"class.std::__1::__bucket_list_deallocator.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"struct.std::__1::__hash_node_base.56" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.29", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.93", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.24"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.29", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.29", %"struct.std::__1::atomic.75", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.75" = type { %"struct.std::__1::__atomic_base.76" }
%"struct.std::__1::__atomic_base.76" = type { %"struct.std::__1::__cxx_atomic_impl.77" }
%"struct.std::__1::__cxx_atomic_impl.77" = type { %"struct.std::__1::__cxx_atomic_base_impl.78" }
%"struct.std::__1::__cxx_atomic_base_impl.78" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.79" }
%"class.std::__1::vector.79" = type { %"class.std::__1::__vector_base.80" }
%"class.std::__1::__vector_base.80" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.81" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.86", %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::atomic.93" = type { %"struct.std::__1::__atomic_base.94" }
%"struct.std::__1::__atomic_base.94" = type { %"struct.std::__1::__cxx_atomic_impl.95" }
%"struct.std::__1::__cxx_atomic_impl.95" = type { %"struct.std::__1::__cxx_atomic_base_impl.96" }
%"struct.std::__1::__cxx_atomic_base_impl.96" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.97", i8, [7 x i8] }>
%"class.std::__1::vector.97" = type { %"class.std::__1::__vector_base.98" }
%"class.std::__1::__vector_base.98" = type { i64*, i64*, %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.24", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1087" = type { %"class.std::__1::__compressed_pair.1088" }
%"class.std::__1::__compressed_pair.1088" = type { %"struct.std::__1::__compressed_pair_elem.1089" }
%"struct.std::__1::__compressed_pair_elem.1089" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1096" = type { %"class.std::__1::__compressed_pair.1097" }
%"class.std::__1::__compressed_pair.1097" = type { %"struct.std::__1::__compressed_pair_elem.1098" }
%"struct.std::__1::__compressed_pair_elem.1098" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.841", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.841" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1104" }
%"class.std::__1::unordered_map.1104" = type { %"class.std::__1::__hash_table.1105" }
%"class.std::__1::__hash_table.1105" = type <{ %"class.std::__1::unique_ptr.1106", %"class.std::__1::__compressed_pair.1116", %"class.std::__1::__compressed_pair.1121", %"class.std::__1::__compressed_pair.1124", [4 x i8] }>
%"class.std::__1::unique_ptr.1106" = type { %"class.std::__1::__compressed_pair.1107" }
%"class.std::__1::__compressed_pair.1107" = type { %"struct.std::__1::__compressed_pair_elem.1108", %"struct.std::__1::__compressed_pair_elem.1110" }
%"struct.std::__1::__compressed_pair_elem.1108" = type { %"struct.std::__1::__hash_node_base.1109"** }
%"struct.std::__1::__hash_node_base.1109" = type { %"struct.std::__1::__hash_node_base.1109"* }
%"struct.std::__1::__compressed_pair_elem.1110" = type { %"class.std::__1::__bucket_list_deallocator.1111" }
%"class.std::__1::__bucket_list_deallocator.1111" = type { %"class.std::__1::__compressed_pair.1112" }
%"class.std::__1::__compressed_pair.1112" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1116" = type { %"struct.std::__1::__compressed_pair_elem.1117" }
%"struct.std::__1::__compressed_pair_elem.1117" = type { %"struct.std::__1::__hash_node_base.1109" }
%"class.std::__1::__compressed_pair.1121" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1124" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::atomic.1130" = type { %"struct.std::__1::__atomic_base.1131" }
%"struct.std::__1::__atomic_base.1131" = type { %"struct.std::__1::__cxx_atomic_impl.1132" }
%"struct.std::__1::__cxx_atomic_impl.1132" = type { %"struct.std::__1::__cxx_atomic_base_impl.1133" }
%"struct.std::__1::__cxx_atomic_base_impl.1133" = type { %"class.std::__1::vector.1134"* }
%"class.std::__1::vector.1134" = type { %"class.std::__1::__vector_base.1135" }
%"class.std::__1::__vector_base.1135" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1136" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1136" = type { %"struct.std::__1::__compressed_pair_elem.1137" }
%"struct.std::__1::__compressed_pair_elem.1137" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.34" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl.36" }
%"struct.std::__1::__cxx_atomic_impl.36" = type { %"struct.std::__1::__cxx_atomic_base_impl.37" }
%"struct.std::__1::__cxx_atomic_base_impl.37" = type { i32 }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.40" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.110" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.110" = type { %"class.std::__1::__vector_base.111" }
%"class.std::__1::__vector_base.111" = type { %"struct.std::__1::pair.112"*, %"struct.std::__1::pair.112"*, %"class.std::__1::__compressed_pair.113" }
%"struct.std::__1::pair.112" = type { i32, i64 }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.std::__1::pair.112"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.24", i32, %"struct.std::__1::atomic.24", %"class.v8::base::Mutex", %"struct.std::__1::atomic.24" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.118" }
%"class.std::__1::unordered_map.118" = type { %"class.std::__1::__hash_table.119" }
%"class.std::__1::__hash_table.119" = type <{ %"class.std::__1::unique_ptr.120", %"class.std::__1::__compressed_pair.130", %"class.std::__1::__compressed_pair.135", %"class.std::__1::__compressed_pair.140", [4 x i8] }>
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122", %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"struct.std::__1::__hash_node_base.123"** }
%"struct.std::__1::__hash_node_base.123" = type { %"struct.std::__1::__hash_node_base.123"* }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.std::__1::__bucket_list_deallocator.125" }
%"class.std::__1::__bucket_list_deallocator.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"struct.std::__1::__hash_node_base.123" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.159", %"struct.std::__1::atomic.163", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.163" = type { %"struct.std::__1::__atomic_base.164" }
%"struct.std::__1::__atomic_base.164" = type { %"struct.std::__1::__cxx_atomic_impl.165" }
%"struct.std::__1::__cxx_atomic_impl.165" = type { %"struct.std::__1::__cxx_atomic_base_impl.166" }
%"struct.std::__1::__cxx_atomic_base_impl.166" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.168" = type { %"struct.std::__1::__atomic_base.169" }
%"struct.std::__1::__atomic_base.169" = type { %"struct.std::__1::__cxx_atomic_impl.170" }
%"struct.std::__1::__cxx_atomic_impl.170" = type { %"struct.std::__1::__cxx_atomic_base_impl.171" }
%"struct.std::__1::__cxx_atomic_base_impl.171" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.172" = type { %"class.std::__1::__vector_base.173" }
%"class.std::__1::__vector_base.173" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.174" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.233", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.287", %"class.std::__1::vector.287", %"class.std::__1::vector.287", %"class.std::__1::vector.294", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.188", %"class.std::__1::vector.189", %"class.std::__1::vector.196", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.188" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.24" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.191" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.196" = type { %"class.std::__1::__vector_base.197" }
%"class.std::__1::__vector_base.197" = type { %"class.std::__1::unique_ptr.198"*, %"class.std::__1::unique_ptr.198"*, %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::unique_ptr.198" = type opaque
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.std::__1::unique_ptr.198"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.24" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.204", %"class.v8::internal::Worklist.206", %"class.v8::internal::Worklist.206", %"class.v8::internal::Worklist.206", %"class.v8::internal::Worklist.208", %"class.v8::internal::Worklist.210", %"class.v8::internal::Worklist.212", %"class.v8::internal::Worklist.214", %"class.v8::internal::Worklist.216", %"class.v8::internal::Worklist.218" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.24" }
%"class.v8::internal::Worklist.204" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.24" }
%"class.v8::internal::Worklist.206" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.24" }
%"class.v8::internal::Worklist.208" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.24" }
%"class.v8::internal::Worklist.210" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.24" }
%"class.v8::internal::Worklist.212" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.24" }
%"class.v8::internal::Worklist.214" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.24" }
%"class.v8::internal::Worklist.216" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.24" }
%"class.v8::internal::Worklist.218" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.24" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.220", i8, i64 }
%"class.std::__1::vector.220" = type { %"class.std::__1::__vector_base.221" }
%"class.std::__1::__vector_base.221" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.236" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.188"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.236" = type { %"class.std::__1::__hash_table.237" }
%"class.std::__1::__hash_table.237" = type <{ %"class.std::__1::unique_ptr.238", %"class.std::__1::__compressed_pair.248", %"class.std::__1::__compressed_pair.253", %"class.std::__1::__compressed_pair.256", [4 x i8] }>
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240", %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"struct.std::__1::__hash_node_base.241"** }
%"struct.std::__1::__hash_node_base.241" = type { %"struct.std::__1::__hash_node_base.241"* }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.std::__1::__bucket_list_deallocator.243" }
%"class.std::__1::__bucket_list_deallocator.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"struct.std::__1::__hash_node_base.241" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.263" }
%"class.std::__1::unordered_map.263" = type { %"class.std::__1::__hash_table.264" }
%"class.std::__1::__hash_table.264" = type <{ %"class.std::__1::unique_ptr.265", %"class.std::__1::__compressed_pair.275", %"class.std::__1::__compressed_pair.280", %"class.std::__1::__compressed_pair.283", [4 x i8] }>
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267", %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"struct.std::__1::__hash_node_base.268"** }
%"struct.std::__1::__hash_node_base.268" = type { %"struct.std::__1::__hash_node_base.268"* }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.std::__1::__bucket_list_deallocator.270" }
%"class.std::__1::__bucket_list_deallocator.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"struct.std::__1::__hash_node_base.268" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.294" = type { %"class.std::__1::__vector_base.295" }
%"class.std::__1::__vector_base.295" = type { %"struct.std::__1::pair.296"*, %"struct.std::__1::pair.296"*, %"class.std::__1::__compressed_pair.297" }
%"struct.std::__1::pair.296" = type opaque
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"struct.std::__1::pair.296"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.302", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.287"], [3 x %"class.std::__1::vector.287"], i8, %"struct.std::__1::atomic.159", [6 x i8], %"class.std::__1::vector.287", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.302" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.312"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.287", %"class.std::__1::vector.287", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.312" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.327" = type { %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.337", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.330"], %"class.std::__1::unique_ptr.302" }
%"class.std::__1::vector.330" = type { %"class.std::__1::__vector_base.331" }
%"class.std::__1::__vector_base.331" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.366" = type { %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.369", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.373", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.378" }
%"struct.std::__1::atomic.369" = type { %"struct.std::__1::__atomic_base.370" }
%"struct.std::__1::__atomic_base.370" = type { %"struct.std::__1::__cxx_atomic_impl.371" }
%"struct.std::__1::__cxx_atomic_impl.371" = type { %"struct.std::__1::__cxx_atomic_base_impl.372" }
%"struct.std::__1::__cxx_atomic_base_impl.372" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.373" = type { %"struct.std::__1::__atomic_base.374" }
%"struct.std::__1::__atomic_base.374" = type { %"struct.std::__1::__cxx_atomic_impl.375" }
%"struct.std::__1::__cxx_atomic_impl.375" = type { %"struct.std::__1::__cxx_atomic_base_impl.376" }
%"struct.std::__1::__cxx_atomic_base_impl.376" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.378" = type { %"class.std::__1::__hash_table.379" }
%"class.std::__1::__hash_table.379" = type <{ %"class.std::__1::unique_ptr.380", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", %"class.std::__1::__compressed_pair.398", [4 x i8] }>
%"class.std::__1::unique_ptr.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382", %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"struct.std::__1::__hash_node_base.383"** }
%"struct.std::__1::__hash_node_base.383" = type { %"struct.std::__1::__hash_node_base.383"* }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"class.std::__1::__bucket_list_deallocator.385" }
%"class.std::__1::__bucket_list_deallocator.385" = type { %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"struct.std::__1::__hash_node_base.383" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.302", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.159", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.408", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.408" = type { %"class.std::__1::__hash_table.409" }
%"class.std::__1::__hash_table.409" = type <{ %"class.std::__1::unique_ptr.410", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.425", %"class.std::__1::__compressed_pair.428", [4 x i8] }>
%"class.std::__1::unique_ptr.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.412", %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.412" = type { %"struct.std::__1::__hash_node_base.413"** }
%"struct.std::__1::__hash_node_base.413" = type { %"struct.std::__1::__hash_node_base.413"* }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"class.std::__1::__bucket_list_deallocator.415" }
%"class.std::__1::__bucket_list_deallocator.415" = type { %"class.std::__1::__compressed_pair.416" }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.421" }
%"struct.std::__1::__compressed_pair_elem.421" = type { %"struct.std::__1::__hash_node_base.413" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::unique_ptr.435" = type { %"class.std::__1::__compressed_pair.436" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.437" }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.441" = type { %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.444" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::unique_ptr.451" = type { %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.475" = type { %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.487" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.506", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.488", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.506" = type { %"struct.std::__1::__atomic_base.507" }
%"struct.std::__1::__atomic_base.507" = type { %"struct.std::__1::__cxx_atomic_impl.508" }
%"struct.std::__1::__cxx_atomic_impl.508" = type { %"struct.std::__1::__cxx_atomic_base_impl.509" }
%"struct.std::__1::__cxx_atomic_base_impl.509" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.510" = type { %"class.std::__1::__hash_table.511" }
%"class.std::__1::__hash_table.511" = type <{ %"class.std::__1::unique_ptr.512", %"class.std::__1::__compressed_pair.522", %"class.std::__1::__compressed_pair.527", %"class.std::__1::__compressed_pair.530", [4 x i8] }>
%"class.std::__1::unique_ptr.512" = type { %"class.std::__1::__compressed_pair.513" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.514", %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.514" = type { %"struct.std::__1::__hash_node_base.515"** }
%"struct.std::__1::__hash_node_base.515" = type { %"struct.std::__1::__hash_node_base.515"* }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"class.std::__1::__bucket_list_deallocator.517" }
%"class.std::__1::__bucket_list_deallocator.517" = type { %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.523" }
%"struct.std::__1::__compressed_pair_elem.523" = type { %"struct.std::__1::__hash_node_base.515" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::unique_ptr.536" = type { %"class.std::__1::__compressed_pair.537" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.542" = type { %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.548", %"class.std::__1::vector.548" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.337" = type { %"class.std::__1::__hash_table.338" }
%"class.std::__1::__hash_table.338" = type <{ %"class.std::__1::unique_ptr.339", %"class.std::__1::__compressed_pair.349", %"class.std::__1::__compressed_pair.354", %"class.std::__1::__compressed_pair.358", [4 x i8] }>
%"class.std::__1::unique_ptr.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341", %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.342"** }
%"struct.std::__1::__hash_node_base.342" = type { %"struct.std::__1::__hash_node_base.342"* }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"class.std::__1::__bucket_list_deallocator.344" }
%"class.std::__1::__bucket_list_deallocator.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"struct.std::__1::__hash_node_base.342" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::unordered_map.587" = type { %"class.std::__1::__hash_table.588" }
%"class.std::__1::__hash_table.588" = type <{ %"class.std::__1::unique_ptr.589", %"class.std::__1::__compressed_pair.599", %"class.std::__1::__compressed_pair.604", %"class.std::__1::__compressed_pair.607", [4 x i8] }>
%"class.std::__1::unique_ptr.589" = type { %"class.std::__1::__compressed_pair.590" }
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.591", %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.591" = type { %"struct.std::__1::__hash_node_base.592"** }
%"struct.std::__1::__hash_node_base.592" = type { %"struct.std::__1::__hash_node_base.592"* }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"class.std::__1::__bucket_list_deallocator.594" }
%"class.std::__1::__bucket_list_deallocator.594" = type { %"class.std::__1::__compressed_pair.595" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.592" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::unordered_map.561" = type { %"class.std::__1::__hash_table.562" }
%"class.std::__1::__hash_table.562" = type <{ %"class.std::__1::unique_ptr.563", %"class.std::__1::__compressed_pair.573", %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.581", [4 x i8] }>
%"class.std::__1::unique_ptr.563" = type { %"class.std::__1::__compressed_pair.564" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.565", %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.565" = type { %"struct.std::__1::__hash_node_base.566"** }
%"struct.std::__1::__hash_node_base.566" = type { %"struct.std::__1::__hash_node_base.566"* }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"class.std::__1::__bucket_list_deallocator.568" }
%"class.std::__1::__bucket_list_deallocator.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.574" }
%"struct.std::__1::__compressed_pair_elem.574" = type { %"struct.std::__1::__hash_node_base.566" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.581" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::unordered_map.611" = type { %"class.std::__1::__hash_table.612" }
%"class.std::__1::__hash_table.612" = type <{ %"class.std::__1::unique_ptr.613", %"class.std::__1::__compressed_pair.623", %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.633", [4 x i8] }>
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615", %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"struct.std::__1::__hash_node_base.616"** }
%"struct.std::__1::__hash_node_base.616" = type { %"struct.std::__1::__hash_node_base.616"* }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"class.std::__1::__bucket_list_deallocator.618" }
%"class.std::__1::__bucket_list_deallocator.618" = type { %"class.std::__1::__compressed_pair.619" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"struct.std::__1::__hash_node_base.616" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.633" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::vector.639" = type { %"class.std::__1::__vector_base.640" }
%"class.std::__1::__vector_base.640" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.641" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.24", i64, %"struct.std::__1::atomic.24" }
%"class.std::__1::vector.146" = type { %"class.std::__1::__vector_base.147" }
%"class.std::__1::__vector_base.147" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.148" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.548" = type { %"class.std::__1::__vector_base.549" }
%"class.std::__1::__vector_base.549" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.550" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.551" }
%"struct.std::__1::__compressed_pair_elem.551" = type { %"class.v8::internal::Object"* }
%"struct.std::nothrow_t" = type { i8 }
%"class.v8::internal::Serializer::HotObjectsList" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::StrongRootsEntry"*, [8 x i64], i32, [4 x i8] }>
%"class.v8::internal::Serializer" = type { %"class.v8::internal::SerializerDeserializer", %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::Isolate"*, %"class.v8::internal::Serializer::HotObjectsList", %"class.v8::internal::SerializerReferenceMap", %"class.v8::internal::ExternalReferenceEncoder", %"class.v8::internal::RootIndexMap", %"class.std::__1::unique_ptr.1170", %"class.std::__1::vector", %"class.v8::internal::GlobalHandleVector.1186", i32, i32, i32, [4 x i8], %"class.v8::internal::IdentityMap.1191", i32, i32, %"class.v8::base::Flags", [4 x i64] }
%"class.v8::internal::SerializerDeserializer" = type { %"class.v8::internal::RootVisitor" }
%"class.v8::internal::RootVisitor" = type { i32 (...)** }
%"class.v8::internal::SnapshotByteSink" = type { %"class.std::__1::vector" }
%"class.v8::internal::SerializerReferenceMap" = type { %"class.v8::internal::IdentityMap.1141", %"class.std::__1::unordered_map.1142", i32, [4 x i8] }
%"class.v8::internal::IdentityMap.1141" = type { %"class.v8::internal::IdentityMapBase.base", %"class.v8::base::DefaultAllocationPolicy", [6 x i8] }
%"class.v8::internal::IdentityMapBase.base" = type <{ i32 (...)**, %"struct.v8::base::hash", [7 x i8], %"class.v8::internal::Heap"*, i32, i32, i32, i32, i64*, %"class.v8::internal::StrongRootsEntry"*, i64*, i8 }>
%"struct.v8::base::hash" = type { i8 }
%"class.v8::base::DefaultAllocationPolicy" = type { i8 }
%"class.std::__1::unordered_map.1142" = type { %"class.std::__1::__hash_table.1143" }
%"class.std::__1::__hash_table.1143" = type <{ %"class.std::__1::unique_ptr.1144", %"class.std::__1::__compressed_pair.1154", %"class.std::__1::__compressed_pair.1159", %"class.std::__1::__compressed_pair.1164", [4 x i8] }>
%"class.std::__1::unique_ptr.1144" = type { %"class.std::__1::__compressed_pair.1145" }
%"class.std::__1::__compressed_pair.1145" = type { %"struct.std::__1::__compressed_pair_elem.1146", %"struct.std::__1::__compressed_pair_elem.1148" }
%"struct.std::__1::__compressed_pair_elem.1146" = type { %"struct.std::__1::__hash_node_base.1147"** }
%"struct.std::__1::__hash_node_base.1147" = type { %"struct.std::__1::__hash_node_base.1147"* }
%"struct.std::__1::__compressed_pair_elem.1148" = type { %"class.std::__1::__bucket_list_deallocator.1149" }
%"class.std::__1::__bucket_list_deallocator.1149" = type { %"class.std::__1::__compressed_pair.1150" }
%"class.std::__1::__compressed_pair.1150" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1154" = type { %"struct.std::__1::__compressed_pair_elem.1155" }
%"struct.std::__1::__compressed_pair_elem.1155" = type { %"struct.std::__1::__hash_node_base.1147" }
%"class.std::__1::__compressed_pair.1159" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1164" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.v8::internal::ExternalReferenceEncoder" = type { %"class.v8::internal::AddressToIndexHashMap"* }
%"class.std::__1::unique_ptr.1170" = type { %"class.std::__1::__compressed_pair.1171" }
%"class.std::__1::__compressed_pair.1171" = type { %"struct.std::__1::__compressed_pair_elem.1172" }
%"struct.std::__1::__compressed_pair_elem.1172" = type { %"class.v8::internal::CodeAddressMap"* }
%"class.v8::internal::CodeAddressMap" = type { %"class.v8::internal::CodeEventLogger", %"class.v8::internal::CodeAddressMap::NameMap" }
%"class.v8::internal::CodeEventLogger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1173" }
%"class.std::__1::unique_ptr.1173" = type { %"class.std::__1::__compressed_pair.1174" }
%"class.std::__1::__compressed_pair.1174" = type { %"struct.std::__1::__compressed_pair_elem.1175" }
%"struct.std::__1::__compressed_pair_elem.1175" = type { %"class.v8::internal::CodeEventLogger::NameBuffer"* }
%"class.v8::internal::CodeEventLogger::NameBuffer" = type opaque
%"class.v8::internal::CodeAddressMap::NameMap" = type { %"class.v8::base::PointerTemplateHashMapImpl" }
%"class.v8::base::PointerTemplateHashMapImpl" = type { %"class.v8::base::TemplateHashMapImpl.1179" }
%"class.v8::base::TemplateHashMapImpl.1179" = type { %"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::KeyEqualityMatcher<void *>, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::KeyEqualityMatcher<void *>, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::TemplateHashMapEntry.1181"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry.1181" = type <{ i8*, i8*, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.v8::internal::GlobalHandleVector.1186" = type { %"class.std::__1::vector.1187" }
%"class.std::__1::vector.1187" = type { %"class.std::__1::__vector_base.1188" }
%"class.std::__1::__vector_base.1188" = type { i64*, i64*, %"class.std::__1::__compressed_pair.1189" }
%"class.std::__1::__compressed_pair.1189" = type { %"struct.std::__1::__compressed_pair_elem.100", %"struct.std::__1::__compressed_pair_elem.1190" }
%"struct.std::__1::__compressed_pair_elem.1190" = type { %"class.v8::internal::StrongRootBlockAllocator" }
%"class.v8::internal::StrongRootBlockAllocator" = type { %"class.v8::internal::Heap"* }
%"class.v8::internal::IdentityMap.1191" = type { %"class.v8::internal::IdentityMapBase.base", %"class.v8::base::DefaultAllocationPolicy", [6 x i8] }
%"class.v8::base::Flags" = type { i32 }
%"class.v8::internal::Serializer::ObjectSerializer" = type <{ %"class.v8::internal::ObjectVisitor", %"class.v8::internal::Isolate"*, %"class.v8::internal::Serializer"*, %"class.v8::internal::Handle.981", %"class.v8::internal::SnapshotByteSink"*, i32, [4 x i8] }>
%"class.v8::internal::ObjectVisitor" = type { i32 (...)** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::IdentityMapBase" = type <{ i32 (...)**, %"struct.v8::base::hash", [7 x i8], %"class.v8::internal::Heap"*, i32, i32, i32, i32, i64*, %"class.v8::internal::StrongRootsEntry"*, i64*, i8, [7 x i8] }>
%"class.v8::internal::SerializerReference" = type { i32 }
%"class.v8::internal::Handle<v8::internal::ExternalString>::ObjectRef" = type { %"class.v8::internal::ExternalString" }
%"class.v8::internal::ExternalString" = type { %"class.v8::internal::String" }
%"class.v8::internal::String" = type { %"class.v8::internal::TorqueGeneratedString" }
%"class.v8::internal::TorqueGeneratedString" = type { %"class.v8::internal::Name" }
%"class.v8::String::ExternalOneByteStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i8* }
%"class.v8::String::ExternalStringResourceBase" = type { i32 (...)** }
%"class.v8::String::ExternalStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i16* }
%"class.v8::internal::Handle<v8::internal::SeqOneByteString>::ObjectRef" = type { %"class.v8::internal::SeqOneByteString" }
%"class.v8::internal::SeqOneByteString" = type { %"class.v8::internal::TorqueGeneratedSeqOneByteString" }
%"class.v8::internal::TorqueGeneratedSeqOneByteString" = type { %"class.v8::internal::SeqString" }
%"class.v8::internal::SeqString" = type { %"class.v8::internal::TorqueGeneratedSeqString" }
%"class.v8::internal::TorqueGeneratedSeqString" = type { %"class.v8::internal::String" }
%"class.v8::internal::Handle<v8::internal::SeqTwoByteString>::ObjectRef" = type { %"class.v8::internal::SeqTwoByteString" }
%"class.v8::internal::SeqTwoByteString" = type { %"class.v8::internal::TorqueGeneratedSeqTwoByteString" }
%"class.v8::internal::TorqueGeneratedSeqTwoByteString" = type { %"class.v8::internal::SeqString" }
%"class.v8::internal::UnlinkWeakNextScope" = type { %"class.v8::internal::Handle.981", %"class.v8::internal::Handle.1196" }
%"class.v8::internal::Handle.1196" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::RelocIterator" = type { i8*, i8*, %"class.v8::internal::RelocInfo", i8, i32 }
%"class.v8::internal::RelocInfo" = type { i64, i8, i64, %"class.v8::internal::Code", i64 }
%"class.v8::internal::Code" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Serializer::ObjectSerializer::RelocInfoObjectPreSerializer" = type <{ %"class.v8::internal::Serializer"*, i32, [4 x i8] }>
%"class.v8::internal::wasm::WasmCode" = type { %"class.v8::internal::wasm::NativeModule"*, i8*, i8, %"class.std::__1::unique_ptr.1448", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::atomic.1229" }
%"class.v8::internal::wasm::NativeModule" = type { %"class.v8::internal::wasm::WasmEngine"*, %"class.v8::internal::OperationsBarrier::Token", %"class.v8::internal::wasm::WasmCodeAllocator", %"class.v8::internal::wasm::WasmFeatures", %"class.std::__1::shared_ptr.1285", %"class.std::__1::unique_ptr.1463", %"class.std::__1::shared_ptr.1476", %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"*, %"class.std::__1::unique_ptr.1477", %"class.std::__1::unique_ptr.1483", %"class.std::__1::unique_ptr.1489", %"class.v8::base::RecursiveMutex", %"class.std::__1::map.1494", %"class.std::__1::vector.1503", %"class.std::__1::unique_ptr.1511", %"class.std::__1::vector.1517", %"class.std::__1::unique_ptr.1524", i8, %"class.std::__1::unique_ptr.1530", i8, i8, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24" }
%"class.v8::internal::OperationsBarrier::Token" = type { %"class.v8::internal::OperationsBarrier"* }
%"class.v8::internal::OperationsBarrier" = type { %"class.v8::base::Mutex", %"class.v8::base::ConditionVariable", i8, i64 }
%"class.v8::internal::wasm::WasmCodeAllocator" = type { %"class.v8::internal::wasm::WasmCodeManager"*, %"class.v8::internal::wasm::DisjointAllocationPool", %"class.v8::internal::wasm::DisjointAllocationPool", %"class.v8::internal::wasm::DisjointAllocationPool", %"class.std::__1::vector.1279", i32, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"class.std::__1::shared_ptr.683" }
%"class.v8::internal::wasm::WasmCodeManager" = type { i64, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", i32, %"class.v8::base::Mutex", %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.1263" }
%"class.std::__1::__tree.1263" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1264", %"class.std::__1::__compressed_pair.1268" }
%"class.std::__1::__compressed_pair.1264" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::__compressed_pair.1268" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.v8::internal::wasm::DisjointAllocationPool" = type { %"class.std::__1::set.1271" }
%"class.std::__1::set.1271" = type { %"class.std::__1::__tree.1272" }
%"class.std::__1::__tree.1272" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1273", %"class.std::__1::__compressed_pair.1277" }
%"class.std::__1::__compressed_pair.1273" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::__compressed_pair.1277" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::vector.1279" = type { %"class.std::__1::__vector_base.1280" }
%"class.std::__1::__vector_base.1280" = type { %"class.v8::internal::VirtualMemory"*, %"class.v8::internal::VirtualMemory"*, %"class.std::__1::__compressed_pair.1281" }
%"class.std::__1::__compressed_pair.1281" = type { %"struct.std::__1::__compressed_pair_elem.747" }
%"class.v8::internal::wasm::WasmFeatures" = type { %"class.v8::base::EnumSet" }
%"class.v8::base::EnumSet" = type { i32 }
%"class.std::__1::shared_ptr.1285" = type { %"struct.v8::internal::wasm::WasmModule"*, %"class.std::__1::__shared_weak_count"* }
%"struct.v8::internal::wasm::WasmModule" = type { %"class.std::__1::unique_ptr.1286", i32, i32, i8, i8, i8, i8, i8, i32, %"class.std::__1::vector.1292", i32, i32, i32, i32, i32, i32, i32, i32, %"class.v8::internal::wasm::WireBytesRef", %"class.v8::internal::wasm::WireBytesRef", %"class.std::__1::vector.1306", %"class.std::__1::vector", %"class.std::__1::vector.1314", %"class.std::__1::vector.1321", %"class.std::__1::vector.1328", %"class.std::__1::vector.1335", %"class.std::__1::vector.1342", %"class.std::__1::vector.1349", %"class.std::__1::vector.1356", %"class.std::__1::vector.1363", %"class.std::__1::vector.1376", %"class.std::__1::unordered_map.1383", %"class.v8::internal::wasm::SignatureMap", i8, %"class.v8::internal::wasm::LazilyGeneratedNames", %"struct.v8::internal::wasm::WasmDebugSymbols", %"class.std::__1::unique_ptr.1445" }
%"class.std::__1::unique_ptr.1286" = type { %"class.std::__1::__compressed_pair.1287" }
%"class.std::__1::__compressed_pair.1287" = type { %"struct.std::__1::__compressed_pair_elem.1288" }
%"struct.std::__1::__compressed_pair_elem.1288" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::vector.1292" = type { %"class.std::__1::__vector_base.1293" }
%"class.std::__1::__vector_base.1293" = type { %"struct.v8::internal::wasm::WasmGlobal"*, %"struct.v8::internal::wasm::WasmGlobal"*, %"class.std::__1::__compressed_pair.1301" }
%"struct.v8::internal::wasm::WasmGlobal" = type <{ %"class.v8::internal::wasm::ValueType", i8, [3 x i8], %"class.v8::internal::wasm::WasmInitExpr", %union.anon.1300, i8, i8, [2 x i8] }>
%"class.v8::internal::wasm::ValueType" = type { i32 }
%"class.v8::internal::wasm::WasmInitExpr" = type { %"union.v8::internal::wasm::WasmInitExpr::Immediate", i32, %"class.std::__1::unique_ptr.1294" }
%"union.v8::internal::wasm::WasmInitExpr::Immediate" = type { i64, [8 x i8] }
%"class.std::__1::unique_ptr.1294" = type { %"class.std::__1::__compressed_pair.1295" }
%"class.std::__1::__compressed_pair.1295" = type { %"struct.std::__1::__compressed_pair_elem.1296" }
%"struct.std::__1::__compressed_pair_elem.1296" = type { %"class.v8::internal::wasm::WasmInitExpr"* }
%union.anon.1300 = type { i32 }
%"class.std::__1::__compressed_pair.1301" = type { %"struct.std::__1::__compressed_pair_elem.1302" }
%"struct.std::__1::__compressed_pair_elem.1302" = type { %"struct.v8::internal::wasm::WasmGlobal"* }
%"class.v8::internal::wasm::WireBytesRef" = type { i32, i32 }
%"class.std::__1::vector.1306" = type { %"class.std::__1::__vector_base.1307" }
%"class.std::__1::__vector_base.1307" = type { %"struct.v8::internal::wasm::TypeDefinition"*, %"struct.v8::internal::wasm::TypeDefinition"*, %"class.std::__1::__compressed_pair.1309" }
%"struct.v8::internal::wasm::TypeDefinition" = type { %union.anon.1308 }
%union.anon.1308 = type { %"class.v8::internal::Signature"* }
%"class.v8::internal::Signature" = type { i64, i64, %"class.v8::internal::wasm::ValueType"* }
%"class.std::__1::__compressed_pair.1309" = type { %"struct.std::__1::__compressed_pair_elem.1310" }
%"struct.std::__1::__compressed_pair_elem.1310" = type { %"struct.v8::internal::wasm::TypeDefinition"* }
%"class.std::__1::vector.1314" = type { %"class.std::__1::__vector_base.1315" }
%"class.std::__1::__vector_base.1315" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1316" }
%"class.std::__1::__compressed_pair.1316" = type { %"struct.std::__1::__compressed_pair_elem.1317" }
%"struct.std::__1::__compressed_pair_elem.1317" = type { i32* }
%"class.std::__1::vector.1321" = type { %"class.std::__1::__vector_base.1322" }
%"class.std::__1::__vector_base.1322" = type { %"struct.v8::internal::wasm::WasmFunction"*, %"struct.v8::internal::wasm::WasmFunction"*, %"class.std::__1::__compressed_pair.1323" }
%"struct.v8::internal::wasm::WasmFunction" = type <{ %"class.v8::internal::Signature"*, i32, i32, %"class.v8::internal::wasm::WireBytesRef", i8, i8, i8, [5 x i8] }>
%"class.std::__1::__compressed_pair.1323" = type { %"struct.std::__1::__compressed_pair_elem.1324" }
%"struct.std::__1::__compressed_pair_elem.1324" = type { %"struct.v8::internal::wasm::WasmFunction"* }
%"class.std::__1::vector.1328" = type { %"class.std::__1::__vector_base.1329" }
%"class.std::__1::__vector_base.1329" = type { %"struct.v8::internal::wasm::WasmDataSegment"*, %"struct.v8::internal::wasm::WasmDataSegment"*, %"class.std::__1::__compressed_pair.1330" }
%"struct.v8::internal::wasm::WasmDataSegment" = type <{ %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WireBytesRef", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1330" = type { %"struct.std::__1::__compressed_pair_elem.1331" }
%"struct.std::__1::__compressed_pair_elem.1331" = type { %"struct.v8::internal::wasm::WasmDataSegment"* }
%"class.std::__1::vector.1335" = type { %"class.std::__1::__vector_base.1336" }
%"class.std::__1::__vector_base.1336" = type { %"struct.v8::internal::wasm::WasmTable"*, %"struct.v8::internal::wasm::WasmTable"*, %"class.std::__1::__compressed_pair.1337" }
%"struct.v8::internal::wasm::WasmTable" = type { %"class.v8::internal::wasm::ValueType", i32, i32, i8, i8, i8, %"class.v8::internal::wasm::WasmInitExpr" }
%"class.std::__1::__compressed_pair.1337" = type { %"struct.std::__1::__compressed_pair_elem.1338" }
%"struct.std::__1::__compressed_pair_elem.1338" = type { %"struct.v8::internal::wasm::WasmTable"* }
%"class.std::__1::vector.1342" = type { %"class.std::__1::__vector_base.1343" }
%"class.std::__1::__vector_base.1343" = type { %"struct.v8::internal::wasm::WasmImport"*, %"struct.v8::internal::wasm::WasmImport"*, %"class.std::__1::__compressed_pair.1344" }
%"struct.v8::internal::wasm::WasmImport" = type { %"class.v8::internal::wasm::WireBytesRef", %"class.v8::internal::wasm::WireBytesRef", i8, i32 }
%"class.std::__1::__compressed_pair.1344" = type { %"struct.std::__1::__compressed_pair_elem.1345" }
%"struct.std::__1::__compressed_pair_elem.1345" = type { %"struct.v8::internal::wasm::WasmImport"* }
%"class.std::__1::vector.1349" = type { %"class.std::__1::__vector_base.1350" }
%"class.std::__1::__vector_base.1350" = type { %"struct.v8::internal::wasm::WasmExport"*, %"struct.v8::internal::wasm::WasmExport"*, %"class.std::__1::__compressed_pair.1351" }
%"struct.v8::internal::wasm::WasmExport" = type { %"class.v8::internal::wasm::WireBytesRef", i8, i32 }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"struct.v8::internal::wasm::WasmExport"* }
%"class.std::__1::vector.1356" = type { %"class.std::__1::__vector_base.1357" }
%"class.std::__1::__vector_base.1357" = type { %"struct.v8::internal::wasm::WasmException"*, %"struct.v8::internal::wasm::WasmException"*, %"class.std::__1::__compressed_pair.1358" }
%"struct.v8::internal::wasm::WasmException" = type { %"class.v8::internal::Signature"* }
%"class.std::__1::__compressed_pair.1358" = type { %"struct.std::__1::__compressed_pair_elem.1359" }
%"struct.std::__1::__compressed_pair_elem.1359" = type { %"struct.v8::internal::wasm::WasmException"* }
%"class.std::__1::vector.1363" = type { %"class.std::__1::__vector_base.1364" }
%"class.std::__1::__vector_base.1364" = type { %"struct.v8::internal::wasm::WasmElemSegment"*, %"struct.v8::internal::wasm::WasmElemSegment"*, %"class.std::__1::__compressed_pair.1371" }
%"struct.v8::internal::wasm::WasmElemSegment" = type <{ %"class.v8::internal::wasm::ValueType", i32, %"class.v8::internal::wasm::WasmInitExpr", %"class.std::__1::vector.1365", i32, [4 x i8] }>
%"class.std::__1::vector.1365" = type { %"class.std::__1::__vector_base.1366" }
%"class.std::__1::__vector_base.1366" = type { %"class.v8::internal::wasm::WasmInitExpr"*, %"class.v8::internal::wasm::WasmInitExpr"*, %"class.std::__1::__compressed_pair.1367" }
%"class.std::__1::__compressed_pair.1367" = type { %"struct.std::__1::__compressed_pair_elem.1296" }
%"class.std::__1::__compressed_pair.1371" = type { %"struct.std::__1::__compressed_pair_elem.1372" }
%"struct.std::__1::__compressed_pair_elem.1372" = type { %"struct.v8::internal::wasm::WasmElemSegment"* }
%"class.std::__1::vector.1376" = type { %"class.std::__1::__vector_base.1377" }
%"class.std::__1::__vector_base.1377" = type { %"struct.v8::internal::wasm::WasmCompilationHint"*, %"struct.v8::internal::wasm::WasmCompilationHint"*, %"class.std::__1::__compressed_pair.1378" }
%"struct.v8::internal::wasm::WasmCompilationHint" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.1378" = type { %"struct.std::__1::__compressed_pair_elem.1379" }
%"struct.std::__1::__compressed_pair_elem.1379" = type { %"struct.v8::internal::wasm::WasmCompilationHint"* }
%"class.std::__1::unordered_map.1383" = type { %"class.std::__1::__hash_table.1384" }
%"class.std::__1::__hash_table.1384" = type <{ %"class.std::__1::unique_ptr.1385", %"class.std::__1::__compressed_pair.1395", %"class.std::__1::__compressed_pair.1400", %"class.std::__1::__compressed_pair.1405", [4 x i8] }>
%"class.std::__1::unique_ptr.1385" = type { %"class.std::__1::__compressed_pair.1386" }
%"class.std::__1::__compressed_pair.1386" = type { %"struct.std::__1::__compressed_pair_elem.1387", %"struct.std::__1::__compressed_pair_elem.1389" }
%"struct.std::__1::__compressed_pair_elem.1387" = type { %"struct.std::__1::__hash_node_base.1388"** }
%"struct.std::__1::__hash_node_base.1388" = type { %"struct.std::__1::__hash_node_base.1388"* }
%"struct.std::__1::__compressed_pair_elem.1389" = type { %"class.std::__1::__bucket_list_deallocator.1390" }
%"class.std::__1::__bucket_list_deallocator.1390" = type { %"class.std::__1::__compressed_pair.1391" }
%"class.std::__1::__compressed_pair.1391" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1395" = type { %"struct.std::__1::__compressed_pair_elem.1396" }
%"struct.std::__1::__compressed_pair_elem.1396" = type { %"struct.std::__1::__hash_node_base.1388" }
%"class.std::__1::__compressed_pair.1400" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1405" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.v8::internal::wasm::SignatureMap" = type { i8, [7 x i8], %"class.std::__1::unordered_map.1411" }
%"class.std::__1::unordered_map.1411" = type { %"class.std::__1::__hash_table.1412" }
%"class.std::__1::__hash_table.1412" = type <{ %"class.std::__1::unique_ptr.1413", %"class.std::__1::__compressed_pair.1423", %"class.std::__1::__compressed_pair.1428", %"class.std::__1::__compressed_pair.1432", [4 x i8] }>
%"class.std::__1::unique_ptr.1413" = type { %"class.std::__1::__compressed_pair.1414" }
%"class.std::__1::__compressed_pair.1414" = type { %"struct.std::__1::__compressed_pair_elem.1415", %"struct.std::__1::__compressed_pair_elem.1417" }
%"struct.std::__1::__compressed_pair_elem.1415" = type { %"struct.std::__1::__hash_node_base.1416"** }
%"struct.std::__1::__hash_node_base.1416" = type { %"struct.std::__1::__hash_node_base.1416"* }
%"struct.std::__1::__compressed_pair_elem.1417" = type { %"class.std::__1::__bucket_list_deallocator.1418" }
%"class.std::__1::__bucket_list_deallocator.1418" = type { %"class.std::__1::__compressed_pair.1419" }
%"class.std::__1::__compressed_pair.1419" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1423" = type { %"struct.std::__1::__compressed_pair_elem.1424" }
%"struct.std::__1::__compressed_pair_elem.1424" = type { %"struct.std::__1::__hash_node_base.1416" }
%"class.std::__1::__compressed_pair.1428" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1432" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.v8::internal::wasm::LazilyGeneratedNames" = type { %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.1438" }
%"class.std::__1::unique_ptr.1438" = type { %"class.std::__1::__compressed_pair.1439" }
%"class.std::__1::__compressed_pair.1439" = type { %"struct.std::__1::__compressed_pair_elem.1440" }
%"struct.std::__1::__compressed_pair_elem.1440" = type { %"class.std::__1::unordered_map.1441"* }
%"class.std::__1::unordered_map.1441" = type opaque
%"struct.v8::internal::wasm::WasmDebugSymbols" = type { i32, %"class.v8::internal::wasm::WireBytesRef" }
%"class.std::__1::unique_ptr.1445" = type { %"class.std::__1::__compressed_pair.1446" }
%"class.std::__1::__compressed_pair.1446" = type { %"struct.std::__1::__compressed_pair_elem.1447" }
%"struct.std::__1::__compressed_pair_elem.1447" = type { %"class.v8::internal::wasm::AsmJsOffsetInformation"* }
%"class.v8::internal::wasm::AsmJsOffsetInformation" = type { %"class.v8::base::Mutex", %"class.v8::internal::OwnedVector", %"class.std::__1::unique_ptr.1454" }
%"class.v8::internal::OwnedVector" = type { %"class.std::__1::unique_ptr.1448", i64 }
%"class.std::__1::unique_ptr.1454" = type { %"class.std::__1::__compressed_pair.1455" }
%"class.std::__1::__compressed_pair.1455" = type { %"struct.std::__1::__compressed_pair_elem.1456" }
%"struct.std::__1::__compressed_pair_elem.1456" = type { %"struct.v8::internal::wasm::AsmJsOffsets"* }
%"struct.v8::internal::wasm::AsmJsOffsets" = type opaque
%"class.std::__1::unique_ptr.1463" = type { %"class.std::__1::__compressed_pair.1464" }
%"class.std::__1::__compressed_pair.1464" = type { %"struct.std::__1::__compressed_pair_elem.1465" }
%"struct.std::__1::__compressed_pair_elem.1465" = type { %"class.v8::internal::wasm::WasmModuleSourceMap"* }
%"class.v8::internal::wasm::WasmModuleSourceMap" = type <{ %"class.std::__1::vector.97", %"class.std::__1::vector.1466", %"class.std::__1::vector.97", %"class.std::__1::vector.97", i8, [7 x i8] }>
%"class.std::__1::vector.1466" = type { %"class.std::__1::__vector_base.1467" }
%"class.std::__1::__vector_base.1467" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1468" }
%"class.std::__1::__compressed_pair.1468" = type { %"struct.std::__1::__compressed_pair_elem.1469" }
%"struct.std::__1::__compressed_pair_elem.1469" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::shared_ptr.1476" = type { %"class.v8::internal::OwnedVector"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::unique_ptr.1477" = type { %"class.std::__1::__compressed_pair.1478" }
%"class.std::__1::__compressed_pair.1478" = type { %"struct.std::__1::__compressed_pair_elem.1479" }
%"struct.std::__1::__compressed_pair_elem.1479" = type { %"class.v8::internal::wasm::CompilationState"* }
%"class.v8::internal::wasm::CompilationState" = type { i8 }
%"class.std::__1::unique_ptr.1483" = type { %"class.std::__1::__compressed_pair.1484" }
%"class.std::__1::__compressed_pair.1484" = type { %"struct.std::__1::__compressed_pair_elem.1485" }
%"struct.std::__1::__compressed_pair_elem.1485" = type { %"class.v8::internal::wasm::WasmImportWrapperCache"* }
%"class.v8::internal::wasm::WasmImportWrapperCache" = type opaque
%"class.std::__1::unique_ptr.1489" = type { %"class.std::__1::__compressed_pair.1490" }
%"class.std::__1::__compressed_pair.1490" = type { %"struct.std::__1::__compressed_pair_elem.1317" }
%"class.std::__1::map.1494" = type { %"class.std::__1::__tree.1495" }
%"class.std::__1::__tree.1495" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1496", %"class.std::__1::__compressed_pair.1500" }
%"class.std::__1::__compressed_pair.1496" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::__compressed_pair.1500" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::vector.1503" = type { %"class.std::__1::__vector_base.1504" }
%"class.std::__1::__vector_base.1504" = type { %"class.std::__1::unique_ptr.1505"*, %"class.std::__1::unique_ptr.1505"*, %"class.std::__1::__compressed_pair.1506" }
%"class.std::__1::unique_ptr.1505" = type opaque
%"class.std::__1::__compressed_pair.1506" = type { %"struct.std::__1::__compressed_pair_elem.1507" }
%"struct.std::__1::__compressed_pair_elem.1507" = type { %"class.std::__1::unique_ptr.1505"* }
%"class.std::__1::unique_ptr.1511" = type { %"class.std::__1::__compressed_pair.1512" }
%"class.std::__1::__compressed_pair.1512" = type { %"struct.std::__1::__compressed_pair_elem.1513" }
%"struct.std::__1::__compressed_pair_elem.1513" = type { %"class.v8::internal::wasm::WasmCode"** }
%"class.std::__1::vector.1517" = type { %"class.std::__1::__vector_base.1518" }
%"class.std::__1::__vector_base.1518" = type { %"struct.v8::internal::wasm::NativeModule::CodeSpaceData"*, %"struct.v8::internal::wasm::NativeModule::CodeSpaceData"*, %"class.std::__1::__compressed_pair.1519" }
%"struct.v8::internal::wasm::NativeModule::CodeSpaceData" = type { %"class.v8::base::AddressRegion", %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"* }
%"class.std::__1::__compressed_pair.1519" = type { %"struct.std::__1::__compressed_pair_elem.1520" }
%"struct.std::__1::__compressed_pair_elem.1520" = type { %"struct.v8::internal::wasm::NativeModule::CodeSpaceData"* }
%"class.std::__1::unique_ptr.1524" = type { %"class.std::__1::__compressed_pair.1525" }
%"class.std::__1::__compressed_pair.1525" = type { %"struct.std::__1::__compressed_pair_elem.1526" }
%"struct.std::__1::__compressed_pair_elem.1526" = type { %"class.v8::internal::wasm::DebugInfo"* }
%"class.v8::internal::wasm::DebugInfo" = type opaque
%"class.std::__1::unique_ptr.1530" = type { %"class.std::__1::__compressed_pair.1531" }
%"class.std::__1::__compressed_pair.1531" = type { %"struct.std::__1::__compressed_pair_elem.1532" }
%"struct.std::__1::__compressed_pair_elem.1532" = type { %"class.std::__1::map.1533"* }
%"class.std::__1::map.1533" = type opaque
%"class.std::__1::unique_ptr.1448" = type { %"class.std::__1::__compressed_pair.1449" }
%"class.std::__1::__compressed_pair.1449" = type { %"struct.std::__1::__compressed_pair_elem.1450" }
%"struct.std::__1::__compressed_pair_elem.1450" = type { i8* }
%"struct.std::__1::atomic.1229" = type { %"struct.std::__1::__atomic_base.1230" }
%"struct.std::__1::__atomic_base.1230" = type { %"struct.std::__1::__atomic_base.1231" }
%"struct.std::__1::__atomic_base.1231" = type { %"struct.std::__1::__cxx_atomic_impl.1232" }
%"struct.std::__1::__cxx_atomic_impl.1232" = type { %"struct.std::__1::__cxx_atomic_base_impl.1233" }
%"struct.std::__1::__cxx_atomic_base_impl.1233" = type { i32 }
%"class.v8::Platform" = type { i32 (...)** }

$_ZN2v88internal13ObjectVisitorD2Ev = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueENS_11__wrap_iterIS5_EEE4typeENSB_IPKhEES7_S7_ = comdat any

$_ZN2v88internal14ExternalString23set_address_as_resourceEPNS0_7IsolateEm = comdat any

$_ZN2v88internal19UnlinkWeakNextScopeC2EPNS0_4HeapENS0_6HandleINS0_10HeapObjectEEE = comdat any

$_ZN2v88internal9RelocInfo5VisitINS0_10Serializer16ObjectSerializerEEEvPT_ = comdat any

$_ZN2v88internal10SerializerD2Ev = comdat any

$_ZN2v88internal10SerializerD0Ev = comdat any

$_ZN2v88internal11RootVisitor16VisitRootPointerENS0_4RootEPKcNS0_14FullObjectSlotE = comdat any

$_ZN2v88internal11RootVisitor17VisitRootPointersENS0_4RootEPKcNS0_27OffHeapCompressedObjectSlotES5_ = comdat any

$_ZN2v88internal11RootVisitor11SynchronizeENS0_22VisitorSynchronization7SyncTagE = comdat any

$_ZN2v88internal10Serializer16ObjectSerializerD0Ev = comdat any

$_ZN2v88internal13ObjectVisitor23VisitCustomWeakPointersENS0_10HeapObjectENS0_20CompressedObjectSlotES3_ = comdat any

$_ZN2v88internal13ObjectVisitor12VisitPointerENS0_10HeapObjectENS0_20CompressedObjectSlotE = comdat any

$_ZN2v88internal13ObjectVisitor12VisitPointerENS0_10HeapObjectENS0_25CompressedMaybeObjectSlotE = comdat any

$_ZN2v88internal13ObjectVisitor22VisitCustomWeakPointerENS0_10HeapObjectENS0_20CompressedObjectSlotE = comdat any

$_ZN2v88internal13ObjectVisitor14VisitEphemeronENS0_10HeapObjectEiNS0_20CompressedObjectSlotES3_ = comdat any

$_ZN2v88internal13ObjectVisitor15VisitMapPointerENS0_10HeapObjectE = comdat any

$_ZN2v88internal11IdentityMapINS0_19SerializerReferenceENS_4base23DefaultAllocationPolicyEED2Ev = comdat any

$_ZN2v88internal11IdentityMapINS0_19SerializerReferenceENS_4base23DefaultAllocationPolicyEED0Ev = comdat any

$_ZN2v88internal11IdentityMapINS0_19SerializerReferenceENS_4base23DefaultAllocationPolicyEE15NewPointerArrayEm = comdat any

$_ZN2v88internal11IdentityMapINS0_19SerializerReferenceENS_4base23DefaultAllocationPolicyEE18DeletePointerArrayEPmm = comdat any

$_ZNKSt3__112__hash_tableINS_17__hash_value_typeIPvN2v88internal19SerializerReferenceEEENS_22__unordered_map_hasherIS2_S6_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE4findIS2_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_S2_EEEERKT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN2v88internal19SerializerReferenceEEENS_22__unordered_map_hasherIS2_S6_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS2_JRS2_RS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_S2_EEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN2v88internal19SerializerReferenceEEENS_22__unordered_map_hasherIS2_S6_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN2v88internal19SerializerReferenceEEENS_22__unordered_map_hasherIS2_S6_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZN2v88internal18GlobalHandleVectorINS0_10HeapObjectEE4PushES2_ = comdat any

$_ZN2v88internal11IdentityMapIPNSt3__16vectorIiNS2_9allocatorIiEEEENS_4base23DefaultAllocationPolicyEED2Ev = comdat any

$_ZN2v88internal11IdentityMapIPNSt3__16vectorIiNS2_9allocatorIiEEEENS_4base23DefaultAllocationPolicyEED0Ev = comdat any

$_ZN2v88internal11IdentityMapIPNSt3__16vectorIiNS2_9allocatorIiEEEENS_4base23DefaultAllocationPolicyEE15NewPointerArrayEm = comdat any

$_ZN2v88internal11IdentityMapIPNSt3__16vectorIiNS2_9allocatorIiEEEENS_4base23DefaultAllocationPolicyEE18DeletePointerArrayEPmm = comdat any

$_ZN2v88internal14CodeAddressMapD2Ev = comdat any

$_ZN2v88internal14CodeAddressMapD0Ev = comdat any

$_ZN2v88internal15CodeEventLogger13CallbackEventENS0_6HandleINS0_4NameEEEm = comdat any

$_ZN2v88internal15CodeEventLogger19GetterCallbackEventENS0_6HandleINS0_4NameEEEm = comdat any

$_ZN2v88internal15CodeEventLogger19SetterCallbackEventENS0_6HandleINS0_4NameEEEm = comdat any

$_ZN2v88internal14CodeAddressMap13CodeMoveEventENS0_12AbstractCodeES2_ = comdat any

$_ZN2v88internal15CodeEventLogger27SharedFunctionInfoMoveEventEmm = comdat any

$_ZN2v88internal15CodeEventLogger22NativeContextMoveEventEmm = comdat any

$_ZN2v88internal15CodeEventLogger17CodeMovingGCEventEv = comdat any

$_ZN2v88internal14CodeAddressMap19CodeDisableOptEventENS0_6HandleINS0_12AbstractCodeEEENS2_INS0_18SharedFunctionInfoEEE = comdat any

$_ZN2v88internal15CodeEventLogger14CodeDeoptEventENS0_6HandleINS0_4CodeEEENS0_14DeoptimizeKindEmib = comdat any

$_ZN2v88internal15CodeEventLogger25CodeDependencyChangeEventENS0_6HandleINS0_4CodeEEENS2_INS0_18SharedFunctionInfoEEEPKc = comdat any

$_ZN2v88internal15CodeEventLogger18WeakCodeClearEventEv = comdat any

$_ZN2v88internal17CodeEventListener27is_listening_to_code_eventsEv = comdat any

$_ZN2v88internal14CodeAddressMap17LogRecordedBufferENS0_6HandleINS0_12AbstractCodeEEENS0_11MaybeHandleINS0_18SharedFunctionInfoEEEPKci = comdat any

$_ZN2v88internal14CodeAddressMap17LogRecordedBufferEPKNS0_4wasm8WasmCodeEPKci = comdat any

$_ZN2v88internal14CodeAddressMap7NameMap17FindOrCreateEntryEm = comdat any

$_ZN2v84base19TemplateHashMapImplIPvS2_NS0_18KeyEqualityMatcherIS2_EENS0_23DefaultAllocationPolicyEE6ResizeEv = comdat any

$_ZN2v88internal10Serializer16ObjectSerializer28RelocInfoObjectPreSerializer15VisitCodeTargetENS0_4CodeEPNS0_9RelocInfoE = comdat any

$_ZTVN2v88internal11IdentityMapINS0_19SerializerReferenceENS_4base23DefaultAllocationPolicyEEE = comdat any

$_ZTVN2v88internal11IdentityMapIPNSt3__16vectorIiNS2_9allocatorIiEEEENS_4base23DefaultAllocationPolicyEEE = comdat any

$_ZTVN2v88internal14CodeAddressMapE = comdat any

@_ZTVN2v88internal10SerializerE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::Serializer"*)* @_ZN2v88internal10SerializerD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::Serializer"*)* @_ZN2v88internal10SerializerD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::Serializer"*, i32, i8*, i64, i64)* @_ZN2v88internal10Serializer17VisitRootPointersENS0_4RootEPKcNS0_14FullObjectSlotES5_ to i8*), i8* bitcast (void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64)* @_ZN2v88internal11RootVisitor16VisitRootPointerENS0_4RootEPKcNS0_14FullObjectSlotE to i8*), i8* bitcast (void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)* @_ZN2v88internal11RootVisitor17VisitRootPointersENS0_4RootEPKcNS0_27OffHeapCompressedObjectSlotES5_ to i8*), i8* bitcast (void (%"class.v8::internal::RootVisitor"*, i32)* @_ZN2v88internal11RootVisitor11SynchronizeENS0_22VisitorSynchronization7SyncTagE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.v8::internal::Serializer"*, i64)* @_ZN2v88internal10Serializer14MustBeDeferredENS0_10HeapObjectE to i8*)] }, align 8
@_ZN2v88internal29FLAG_serialization_statisticsE = external local_unnamed_addr global i8, align 1
@.str = private unnamed_addr constant [5 x i8] c"%s:\0A\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"  Spaces (bytes):\0A\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"%16s\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"%16zu\00", align 1
@_ZN2v88internal21FLAG_trace_serializerE = external local_unnamed_addr global i8, align 1
@.str.5 = private unnamed_addr constant [30 x i8] c"Serializing deferred objects\0A\00", align 1
@.str.7 = private unnamed_addr constant [25 x i8] c" Encoding hot object %d:\00", align 1
@stdout = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.9 = private unnamed_addr constant [33 x i8] c" Encoding attached reference %d\0A\00", align 1
@.str.10 = private unnamed_addr constant [30 x i8] c" Encoding back reference to: \00", align 1
@.str.12 = private unnamed_addr constant [19 x i8] c" Encoding root %d:\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"root_index\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"Bytes\00", align 1
@.str.18 = private unnamed_addr constant [13 x i8] c"BackRefIndex\00", align 1
@.str.20 = private unnamed_addr constant [17 x i8] c"AttachedRefIndex\00", align 1
@.str.23 = private unnamed_addr constant [13 x i8] c"repeat count\00", align 1
@.str.26 = private unnamed_addr constant [16 x i8] c"with this index\00", align 1
@.str.27 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.28 = private unnamed_addr constant [52 x i8] c"forward_refs_per_pending_object_.Delete(obj, &refs)\00", align 1
@_ZN2v88internal8FLAG_logE = external local_unnamed_addr global i8, align 1
@.str.32 = private unnamed_addr constant [18 x i8] c"ObjectSizeInWords\00", align 1
@.str.34 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@.str.35 = private unnamed_addr constant [13 x i8] c"BackingStore\00", align 1
@.str.36 = private unnamed_addr constant [60 x i8] c"buffer.byte_length() <= std::numeric_limits<int32_t>::max()\00", align 1
@.str.37 = private unnamed_addr constant [61 x i8] c"buffer->byte_length() <= std::numeric_limits<int32_t>::max()\00", align 1
@.str.40 = private unnamed_addr constant [14 x i8] c"StringContent\00", align 1
@.str.42 = private unnamed_addr constant [25 x i8] c" Deferring heap object: \00", align 1
@.str.43 = private unnamed_addr constant [24 x i8] c" Encoding heap object: \00", align 1
@.str.44 = private unnamed_addr constant [29 x i8] c"0 == bytes_processed_so_far_\00", align 1
@.str.45 = private unnamed_addr constant [23 x i8] c" Deferred heap object \00", align 1
@.str.46 = private unnamed_addr constant [25 x i8] c" was already serialized\0A\00", align 1
@.str.47 = private unnamed_addr constant [32 x i8] c" Encoding deferred heap object\0A\00", align 1
@.str.50 = private unnamed_addr constant [61 x i8] c"serializer_->allow_unknown_external_references_for_testing()\00", align 1
@.str.51 = private unnamed_addr constant [36 x i8] c"IsAligned(target_size, kTaggedSize)\00", align 1
@.str.52 = private unnamed_addr constant [48 x i8] c"target_size <= kFixedRawDataCount * kTaggedSize\00", align 1
@.str.55 = private unnamed_addr constant [16 x i8] c"reference index\00", align 1
@.str.58 = private unnamed_addr constant [19 x i8] c"internal ref value\00", align 1
@.str.59 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@.str.60 = private unnamed_addr constant [21 x i8] c"kNullAddress != addr\00", align 1
@.str.61 = private unnamed_addr constant [31 x i8] c"Builtins::IsBuiltinId(builtin)\00", align 1
@.str.64 = private unnamed_addr constant [14 x i8] c"builtin index\00", align 1
@.str.67 = private unnamed_addr constant [5 x i8] c"Code\00", align 1
@_ZTVN2v88internal10Serializer16ObjectSerializerE = hidden unnamed_addr constant { [20 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*)* @_ZN2v88internal13ObjectVisitorD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::Serializer::ObjectSerializer"*)* @_ZN2v88internal10Serializer16ObjectSerializerD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, i64, i64)* @_ZN2v88internal10Serializer16ObjectSerializer13VisitPointersENS0_10HeapObjectENS0_20CompressedObjectSlotES4_ to i8*), i8* bitcast (void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, i64, i64)* @_ZN2v88internal10Serializer16ObjectSerializer13VisitPointersENS0_10HeapObjectENS0_25CompressedMaybeObjectSlotES4_ to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)* @_ZN2v88internal13ObjectVisitor23VisitCustomWeakPointersENS0_10HeapObjectENS0_20CompressedObjectSlotES3_ to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, i64)* @_ZN2v88internal13ObjectVisitor12VisitPointerENS0_10HeapObjectENS0_20CompressedObjectSlotE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, i64)* @_ZN2v88internal13ObjectVisitor12VisitPointerENS0_10HeapObjectENS0_25CompressedMaybeObjectSlotE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, i64)* @_ZN2v88internal13ObjectVisitor22VisitCustomWeakPointerENS0_10HeapObjectENS0_20CompressedObjectSlotE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, i32, i64, i64)* @_ZN2v88internal13ObjectVisitor14VisitEphemeronENS0_10HeapObjectEiNS0_20CompressedObjectSlotES3_ to i8*), i8* bitcast (void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)* @_ZN2v88internal10Serializer16ObjectSerializer15VisitCodeTargetENS0_4CodeEPNS0_9RelocInfoE to i8*), i8* bitcast (void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)* @_ZN2v88internal10Serializer16ObjectSerializer20VisitEmbeddedPointerENS0_4CodeEPNS0_9RelocInfoE to i8*), i8* bitcast (void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)* @_ZN2v88internal10Serializer16ObjectSerializer17VisitRuntimeEntryENS0_4CodeEPNS0_9RelocInfoE to i8*), i8* bitcast (void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)* @_ZN2v88internal10Serializer16ObjectSerializer22VisitExternalReferenceENS0_4CodeEPNS0_9RelocInfoE to i8*), i8* bitcast (void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, i64*)* @_ZN2v88internal10Serializer16ObjectSerializer22VisitExternalReferenceENS0_7ForeignEPm to i8*), i8* bitcast (void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)* @_ZN2v88internal10Serializer16ObjectSerializer22VisitInternalReferenceENS0_4CodeEPNS0_9RelocInfoE to i8*), i8* bitcast (void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)* @_ZN2v88internal10Serializer16ObjectSerializer18VisitOffHeapTargetENS0_4CodeEPNS0_9RelocInfoE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, %"class.v8::internal::RelocIterator"*)* @_ZN2v88internal13ObjectVisitor14VisitRelocInfoEPNS0_13RelocIteratorE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64)* @_ZN2v88internal13ObjectVisitor15VisitMapPointerENS0_10HeapObjectE to i8*)] }, align 8
@_ZTVN2v88internal11IdentityMapINS0_19SerializerReferenceENS_4base23DefaultAllocationPolicyEEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::IdentityMap.1141"*)* @_ZN2v88internal11IdentityMapINS0_19SerializerReferenceENS_4base23DefaultAllocationPolicyEED2Ev to i8*), i8* bitcast (void (%"class.v8::internal::IdentityMap.1141"*)* @_ZN2v88internal11IdentityMapINS0_19SerializerReferenceENS_4base23DefaultAllocationPolicyEED0Ev to i8*), i8* bitcast (i64* (%"class.v8::internal::IdentityMap.1141"*, i64)* @_ZN2v88internal11IdentityMapINS0_19SerializerReferenceENS_4base23DefaultAllocationPolicyEE15NewPointerArrayEm to i8*), i8* bitcast (void (%"class.v8::internal::IdentityMap.1141"*, i64*, i64)* @_ZN2v88internal11IdentityMapINS0_19SerializerReferenceENS_4base23DefaultAllocationPolicyEE18DeletePointerArrayEPmm to i8*)] }, comdat, align 8
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = external local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"*, align 8
@_ZTVN2v88internal11IdentityMapIPNSt3__16vectorIiNS2_9allocatorIiEEEENS_4base23DefaultAllocationPolicyEEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::IdentityMap.1191"*)* @_ZN2v88internal11IdentityMapIPNSt3__16vectorIiNS2_9allocatorIiEEEENS_4base23DefaultAllocationPolicyEED2Ev to i8*), i8* bitcast (void (%"class.v8::internal::IdentityMap.1191"*)* @_ZN2v88internal11IdentityMapIPNSt3__16vectorIiNS2_9allocatorIiEEEENS_4base23DefaultAllocationPolicyEED0Ev to i8*), i8* bitcast (i64* (%"class.v8::internal::IdentityMap.1191"*, i64)* @_ZN2v88internal11IdentityMapIPNSt3__16vectorIiNS2_9allocatorIiEEEENS_4base23DefaultAllocationPolicyEE15NewPointerArrayEm to i8*), i8* bitcast (void (%"class.v8::internal::IdentityMap.1191"*, i64*, i64)* @_ZN2v88internal11IdentityMapIPNSt3__16vectorIiNS2_9allocatorIiEEEENS_4base23DefaultAllocationPolicyEE18DeletePointerArrayEPmm to i8*)] }, comdat, align 8
@_ZTVN2v88internal14CodeAddressMapE = linkonce_odr hidden unnamed_addr constant { [24 x i8*] } { [24 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::CodeAddressMap"*)* @_ZN2v88internal14CodeAddressMapD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::CodeAddressMap"*)* @_ZN2v88internal14CodeAddressMapD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::CodeEventLogger"*, i32, i64*, i8*)* @_ZN2v88internal15CodeEventLogger15CodeCreateEventENS0_17CodeEventListener16LogEventsAndTagsENS0_6HandleINS0_12AbstractCodeEEEPKc to i8*), i8* bitcast (void (%"class.v8::internal::CodeEventLogger"*, i32, i64*, i64*)* @_ZN2v88internal15CodeEventLogger15CodeCreateEventENS0_17CodeEventListener16LogEventsAndTagsENS0_6HandleINS0_12AbstractCodeEEENS4_INS0_4NameEEE to i8*), i8* bitcast (void (%"class.v8::internal::CodeEventLogger"*, i32, i64*, i64*, i64*)* @_ZN2v88internal15CodeEventLogger15CodeCreateEventENS0_17CodeEventListener16LogEventsAndTagsENS0_6HandleINS0_12AbstractCodeEEENS4_INS0_18SharedFunctionInfoEEENS4_INS0_4NameEEE to i8*), i8* bitcast (void (%"class.v8::internal::CodeEventLogger"*, i32, i64*, i64*, i64*, i32, i32)* @_ZN2v88internal15CodeEventLogger15CodeCreateEventENS0_17CodeEventListener16LogEventsAndTagsENS0_6HandleINS0_12AbstractCodeEEENS4_INS0_18SharedFunctionInfoEEENS4_INS0_4NameEEEii to i8*), i8* bitcast (void (%"class.v8::internal::CodeEventLogger"*, i32, %"class.v8::internal::wasm::WasmCode"*, i8*, i64, i8*, i32, i32)* @_ZN2v88internal15CodeEventLogger15CodeCreateEventENS0_17CodeEventListener16LogEventsAndTagsEPKNS0_4wasm8WasmCodeENS0_6VectorIKcEEPS9_ii to i8*), i8* bitcast (void (%"class.v8::internal::CodeEventLogger"*, i64*, i64)* @_ZN2v88internal15CodeEventLogger13CallbackEventENS0_6HandleINS0_4NameEEEm to i8*), i8* bitcast (void (%"class.v8::internal::CodeEventLogger"*, i64*, i64)* @_ZN2v88internal15CodeEventLogger19GetterCallbackEventENS0_6HandleINS0_4NameEEEm to i8*), i8* bitcast (void (%"class.v8::internal::CodeEventLogger"*, i64*, i64)* @_ZN2v88internal15CodeEventLogger19SetterCallbackEventENS0_6HandleINS0_4NameEEEm to i8*), i8* bitcast (void (%"class.v8::internal::CodeEventLogger"*, i64*, i64*)* @_ZN2v88internal15CodeEventLogger21RegExpCodeCreateEventENS0_6HandleINS0_12AbstractCodeEEENS2_INS0_6StringEEE to i8*), i8* bitcast (void (%"class.v8::internal::CodeAddressMap"*, i64, i64)* @_ZN2v88internal14CodeAddressMap13CodeMoveEventENS0_12AbstractCodeES2_ to i8*), i8* bitcast (void (%"class.v8::internal::CodeEventLogger"*, i64, i64)* @_ZN2v88internal15CodeEventLogger27SharedFunctionInfoMoveEventEmm to i8*), i8* bitcast (void (%"class.v8::internal::CodeEventLogger"*, i64, i64)* @_ZN2v88internal15CodeEventLogger22NativeContextMoveEventEmm to i8*), i8* bitcast (void (%"class.v8::internal::CodeEventLogger"*)* @_ZN2v88internal15CodeEventLogger17CodeMovingGCEventEv to i8*), i8* bitcast (void (%"class.v8::internal::CodeAddressMap"*, i64*, i64*)* @_ZN2v88internal14CodeAddressMap19CodeDisableOptEventENS0_6HandleINS0_12AbstractCodeEEENS2_INS0_18SharedFunctionInfoEEE to i8*), i8* bitcast (void (%"class.v8::internal::CodeEventLogger"*, i64*, i8, i64, i32, i1)* @_ZN2v88internal15CodeEventLogger14CodeDeoptEventENS0_6HandleINS0_4CodeEEENS0_14DeoptimizeKindEmib to i8*), i8* bitcast (void (%"class.v8::internal::CodeEventLogger"*, i64*, i64*, i8*)* @_ZN2v88internal15CodeEventLogger25CodeDependencyChangeEventENS0_6HandleINS0_4CodeEEENS2_INS0_18SharedFunctionInfoEEEPKc to i8*), i8* bitcast (void (%"class.v8::internal::CodeEventLogger"*)* @_ZN2v88internal15CodeEventLogger18WeakCodeClearEventEv to i8*), i8* bitcast (i1 (%"class.v8::internal::CodeEventListener"*)* @_ZN2v88internal17CodeEventListener27is_listening_to_code_eventsEv to i8*), i8* bitcast (void (%"class.v8::internal::CodeAddressMap"*, i64*, i64*, i8*, i32)* @_ZN2v88internal14CodeAddressMap17LogRecordedBufferENS0_6HandleINS0_12AbstractCodeEEENS0_11MaybeHandleINS0_18SharedFunctionInfoEEEPKci to i8*), i8* bitcast (void (%"class.v8::internal::CodeAddressMap"*, %"class.v8::internal::wasm::WasmCode"*, i8*, i32)* @_ZN2v88internal14CodeAddressMap17LogRecordedBufferEPKNS0_4wasm8WasmCodeEPKci to i8*)] }, comdat, align 8
@.str.70 = private unnamed_addr constant [35 x i8] c"Out of memory: HashMap::Initialize\00", align 1
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@.str.71 = private unnamed_addr constant [9 x i8] c"NewArray\00", align 1
@.str.72 = private unnamed_addr constant [17 x i8] c"!host_.is_null()\00", align 1
@.str.73 = private unnamed_addr constant [34 x i8] c"address < start || address >= end\00", align 1

@_ZN2v88internal10Serializer14HotObjectsListC1EPNS0_4HeapE = hidden unnamed_addr alias void (%"class.v8::internal::Serializer::HotObjectsList"*, %"class.v8::internal::Heap"*), void (%"class.v8::internal::Serializer::HotObjectsList"*, %"class.v8::internal::Heap"*)* @_ZN2v88internal10Serializer14HotObjectsListC2EPNS0_4HeapE
@_ZN2v88internal10Serializer14HotObjectsListD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::Serializer::HotObjectsList"*), void (%"class.v8::internal::Serializer::HotObjectsList"*)* @_ZN2v88internal10Serializer14HotObjectsListD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10SerializerC2EPNS0_7IsolateENS_4base5FlagsINS0_8Snapshot14SerializerFlagEiEE(%"class.v8::internal::Serializer"*, %"class.v8::internal::Isolate"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN2v88internal10SerializerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1
  %6 = bitcast %"class.v8::internal::SnapshotByteSink"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #15
  %7 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 2
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 2
  %9 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 3, i32 0
  store %"class.v8::internal::Heap"* %8, %"class.v8::internal::Heap"** %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 3, i32 2, i64 0
  %11 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 3, i32 2, i64 8
  %12 = ptrtoint i64* %10 to i64
  %13 = ptrtoint i64* %11 to i64
  %14 = bitcast i64* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 68, i1 false) #15
  %15 = tail call %"class.v8::internal::StrongRootsEntry"* @_ZN2v88internal4Heap19RegisterStrongRootsENS0_14FullObjectSlotES2_(%"class.v8::internal::Heap"* %8, i64 %12, i64 %13) #15
  %16 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 3, i32 1
  store %"class.v8::internal::StrongRootsEntry"* %15, %"class.v8::internal::StrongRootsEntry"** %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 4, i32 0, i32 0, i32 3
  store %"class.v8::internal::Heap"* %8, %"class.v8::internal::Heap"** %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 4, i32 0, i32 0, i32 4
  store i32 -1, i32* %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 4, i32 0, i32 0, i32 5
  %21 = bitcast i32* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %21, i8 0, i64 37, i1 false) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11IdentityMapINS0_19SerializerReferenceENS_4base23DefaultAllocationPolicyEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 4, i32 1
  %23 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 4, i32 1, i32 0, i32 3
  %24 = bitcast %"class.std::__1::__compressed_pair.1164"* %23 to i32*
  %25 = bitcast %"class.std::__1::unordered_map.1142"* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 32, i1 false) #15
  store i32 1065353216, i32* %24, align 4
  %26 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 4, i32 2
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 5
  tail call void @_ZN2v88internal24ExternalReferenceEncoderC1EPNS0_7IsolateE(%"class.v8::internal::ExternalReferenceEncoder"* %27, %"class.v8::internal::Isolate"* %1) #15
  %28 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 6
  tail call void @_ZN2v88internal12RootIndexMapC1EPNS0_7IsolateE(%"class.v8::internal::RootIndexMap"* %28, %"class.v8::internal::Isolate"* %1) #15
  %29 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 7
  %30 = ptrtoint %"class.v8::internal::Heap"* %8 to i64
  %31 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 1
  %32 = bitcast %"struct.std::__1::__compressed_pair_elem.1190"* %31 to i64*
  %33 = bitcast %"class.std::__1::unique_ptr.1170"* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 56, i1 false)
  store i64 %30, i64* %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 10
  store i32 0, i32* %34, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 11
  store i32 0, i32* %35, align 4
  %36 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 12
  store i32 0, i32* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 14, i32 0, i32 0
  %38 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 14, i32 0, i32 3
  store %"class.v8::internal::Heap"* %8, %"class.v8::internal::Heap"** %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 14, i32 0, i32 4
  store i32 -1, i32* %39, align 8
  %40 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 14, i32 0, i32 5
  %41 = bitcast i32* %40 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %41, i8 0, i64 37, i1 false) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11IdentityMapIPNSt3__16vectorIiNS2_9allocatorIiEEEENS_4base23DefaultAllocationPolicyEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 15
  store i32 1, i32* %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 16
  store i32 0, i32* %43, align 4
  %44 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 17, i32 0
  store i32 %2, i32* %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 18, i64 0
  %46 = bitcast i64* %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 32, i1 false)
  ret void
}

declare void @_ZN2v88internal24ExternalReferenceEncoderC1EPNS0_7IsolateE(%"class.v8::internal::ExternalReferenceEncoder"*, %"class.v8::internal::Isolate"*) unnamed_addr #1

declare void @_ZN2v88internal12RootIndexMapC1EPNS0_7IsolateE(%"class.v8::internal::RootIndexMap"*, %"class.v8::internal::Isolate"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer15CountAllocationENS0_3MapEiNS0_13SnapshotSpaceE(%"class.v8::internal::Serializer"* nocapture, i64, i32, i8 zeroext) local_unnamed_addr #3 align 2 {
  %5 = sext i32 %2 to i64
  %6 = zext i8 %3 to i64
  %7 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 18, i64 %6
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, %5
  store i64 %9, i64* %7, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal10Serializer19TotalAllocationSizeEv(%"class.v8::internal::Serializer"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 18, i64 0
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  %5 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 18, i64 1
  %6 = load i64, i64* %5, align 8
  %7 = trunc i64 %6 to i32
  %8 = add i32 %4, %7
  %9 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 18, i64 2
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = add i32 %8, %11
  %13 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 18, i64 3
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i32
  %16 = add i32 %12, %15
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer16OutputStatisticsEPKc(%"class.v8::internal::Serializer"* nocapture readonly, i8*) local_unnamed_addr #0 align 2 {
  %3 = load i8, i8* @_ZN2v88internal29FLAG_serialization_statisticsE, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %18, label %5

5:                                                ; preds = %2
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* %1) #15
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0)) #15
  %6 = tail call i8* @_ZN2v88internal9BaseSpace12GetSpaceNameENS0_15AllocationSpaceE(i32 0) #15
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8* %6) #15
  %7 = tail call i8* @_ZN2v88internal9BaseSpace12GetSpaceNameENS0_15AllocationSpaceE(i32 1) #15
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8* %7) #15
  %8 = tail call i8* @_ZN2v88internal9BaseSpace12GetSpaceNameENS0_15AllocationSpaceE(i32 2) #15
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8* %8) #15
  %9 = tail call i8* @_ZN2v88internal9BaseSpace12GetSpaceNameENS0_15AllocationSpaceE(i32 3) #15
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8* %9) #15
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #15
  %10 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 18, i64 0
  %11 = load i64, i64* %10, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i64 %11) #15
  %12 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 18, i64 1
  %13 = load i64, i64* %12, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i64 %13) #15
  %14 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 18, i64 2
  %15 = load i64, i64* %14, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i64 %15) #15
  %16 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 18, i64 3
  %17 = load i64, i64* %16, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i64 %17) #15
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #15
  br label %18

18:                                               ; preds = %2, %5
  ret void
}

declare void @_ZN2v88internal6PrintFEPKcz(i8*, ...) local_unnamed_addr #1

declare i8* @_ZN2v88internal9BaseSpace12GetSpaceNameENS0_15AllocationSpaceE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer24SerializeDeferredObjectsEv(%"class.v8::internal::Serializer"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Serializer::ObjectSerializer", align 8
  %3 = load i8, i8* @_ZN2v88internal21FLAG_trace_serializerE, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5, i64 0, i64 0)) #15
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 2
  %8 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %12 = load i64*, i64** %11, align 8
  %13 = icmp eq i64* %10, %12
  br i1 %13, label %129, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31
  %16 = bitcast %"struct.v8::internal::HandleScopeData"* %15 to i64*
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 1
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 31, i32 2
  %19 = bitcast %"class.v8::internal::Serializer::ObjectSerializer"* %2 to i8*
  %20 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1
  %21 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %2, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %2, i64 0, i32 1
  %23 = bitcast %"class.v8::internal::Isolate"** %7 to i64*
  %24 = bitcast %"class.v8::internal::Isolate"** %22 to i64*
  %25 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %2, i64 0, i32 2
  %26 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %2, i64 0, i32 3, i32 0, i32 0
  %27 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %2, i64 0, i32 4
  %28 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %2, i64 0, i32 5
  %29 = icmp eq %"class.v8::internal::Isolate"* %8, null
  %30 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %15, i64 0, i32 0
  br i1 %29, label %31, label %72

31:                                               ; preds = %14, %37
  %32 = load i32, i32* %18, align 8
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %18, align 8
  %34 = load i64*, i64** %9, align 8
  %35 = load i64*, i64** %11, align 8
  %36 = icmp eq i64* %34, %35
  br i1 %36, label %129, label %39

37:                                               ; preds = %63
  %38 = icmp eq i64* %67, %68
  br i1 %38, label %129, label %31

39:                                               ; preds = %31, %63
  %40 = phi i64* [ %68, %63 ], [ %35, %31 ]
  %41 = phi i32 [ %66, %63 ], [ 0, %31 ]
  %42 = getelementptr inbounds i64, i64* %40, i64 -1
  %43 = load i64, i64* %42, align 8
  store i64* %42, i64** %11, align 8
  %44 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %44, i64 0, i32 31, i32 4
  %46 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %45, align 8
  %47 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %39
  %49 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %46, i64 %43) #15
  br label %63

50:                                               ; preds = %39
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %44, i64 0, i32 31, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %44, i64 0, i32 31, i32 1
  %54 = load i64*, i64** %53, align 8
  %55 = icmp eq i64* %52, %54
  br i1 %55, label %56, label %58

56:                                               ; preds = %50
  %57 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %44) #15
  br label %58

58:                                               ; preds = %56, %50
  %59 = phi i64* [ %57, %56 ], [ %52, %50 ]
  %60 = ptrtoint i64* %59 to i64
  %61 = add i64 %60, 8
  %62 = inttoptr i64 %61 to i64*
  store i64* %62, i64** %51, align 8
  store i64 %43, i64* %59, align 8
  br label %63

63:                                               ; preds = %58, %48
  %64 = phi i64* [ %49, %48 ], [ %59, %58 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %19) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN2v88internal10Serializer16ObjectSerializerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %65 = load i64, i64* %23, align 8
  store i64 %65, i64* %24, align 8
  store %"class.v8::internal::Serializer"* %0, %"class.v8::internal::Serializer"** %25, align 8
  store i64* %64, i64** %26, align 8
  store %"class.v8::internal::SnapshotByteSink"* %20, %"class.v8::internal::SnapshotByteSink"** %27, align 8
  store i32 0, i32* %28, align 8
  call void @_ZN2v88internal10Serializer16ObjectSerializer17SerializeDeferredEv(%"class.v8::internal::Serializer::ObjectSerializer"* nonnull %2)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %19) #15
  %66 = add nuw nsw i32 %41, 1
  %67 = load i64*, i64** %9, align 8
  %68 = load i64*, i64** %11, align 8
  %69 = icmp ne i64* %67, %68
  %70 = icmp ult i32 %66, 1024
  %71 = and i1 %70, %69
  br i1 %71, label %39, label %37

72:                                               ; preds = %14, %90
  %73 = load i64, i64* %16, align 8
  %74 = load i64*, i64** %17, align 8
  %75 = load i32, i32* %18, align 8
  %76 = add nsw i32 %75, 1
  store i32 %76, i32* %18, align 8
  %77 = load i64*, i64** %9, align 8
  %78 = load i64*, i64** %11, align 8
  %79 = icmp eq i64* %77, %78
  %80 = inttoptr i64 %73 to i64*
  br i1 %79, label %81, label %96

81:                                               ; preds = %72
  store i32 %75, i32* %18, align 8
  br label %90

82:                                               ; preds = %120
  %83 = load i64*, i64** %30, align 8
  %84 = load i32, i32* %18, align 8
  %85 = load i64*, i64** %17, align 8
  store i64 %73, i64* %16, align 8
  %86 = add nsw i32 %84, -1
  store i32 %86, i32* %18, align 8
  %87 = icmp eq i64* %85, %74
  br i1 %87, label %90, label %88

88:                                               ; preds = %82
  store i64* %74, i64** %17, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %8) #15
  %89 = load i64*, i64** %30, align 8
  br label %90

90:                                               ; preds = %81, %88, %82
  %91 = phi i64* [ %89, %88 ], [ %80, %82 ], [ %80, %81 ]
  %92 = phi i64* [ %74, %88 ], [ %83, %82 ], [ %80, %81 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %91, i64* %92) #15
  %93 = load i64*, i64** %9, align 8
  %94 = load i64*, i64** %11, align 8
  %95 = icmp eq i64* %93, %94
  br i1 %95, label %129, label %72

96:                                               ; preds = %72, %120
  %97 = phi i64* [ %125, %120 ], [ %78, %72 ]
  %98 = phi i32 [ %123, %120 ], [ 0, %72 ]
  %99 = getelementptr inbounds i64, i64* %97, i64 -1
  %100 = load i64, i64* %99, align 8
  store i64* %99, i64** %11, align 8
  %101 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %102 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %101, i64 0, i32 31, i32 4
  %103 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %102, align 8
  %104 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %103, null
  br i1 %104, label %107, label %105

105:                                              ; preds = %96
  %106 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %103, i64 %100) #15
  br label %120

107:                                              ; preds = %96
  %108 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %101, i64 0, i32 31, i32 0
  %109 = load i64*, i64** %108, align 8
  %110 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %101, i64 0, i32 31, i32 1
  %111 = load i64*, i64** %110, align 8
  %112 = icmp eq i64* %109, %111
  br i1 %112, label %113, label %115

113:                                              ; preds = %107
  %114 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %101) #15
  br label %115

115:                                              ; preds = %113, %107
  %116 = phi i64* [ %114, %113 ], [ %109, %107 ]
  %117 = ptrtoint i64* %116 to i64
  %118 = add i64 %117, 8
  %119 = inttoptr i64 %118 to i64*
  store i64* %119, i64** %108, align 8
  store i64 %100, i64* %116, align 8
  br label %120

120:                                              ; preds = %105, %115
  %121 = phi i64* [ %106, %105 ], [ %116, %115 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %19) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN2v88internal10Serializer16ObjectSerializerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %122 = load i64, i64* %23, align 8
  store i64 %122, i64* %24, align 8
  store %"class.v8::internal::Serializer"* %0, %"class.v8::internal::Serializer"** %25, align 8
  store i64* %121, i64** %26, align 8
  store %"class.v8::internal::SnapshotByteSink"* %20, %"class.v8::internal::SnapshotByteSink"** %27, align 8
  store i32 0, i32* %28, align 8
  call void @_ZN2v88internal10Serializer16ObjectSerializer17SerializeDeferredEv(%"class.v8::internal::Serializer::ObjectSerializer"* nonnull %2)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %19) #15
  %123 = add nuw nsw i32 %98, 1
  %124 = load i64*, i64** %9, align 8
  %125 = load i64*, i64** %11, align 8
  %126 = icmp ne i64* %124, %125
  %127 = icmp ult i32 %123, 1024
  %128 = and i1 %127, %126
  br i1 %128, label %96, label %82

129:                                              ; preds = %90, %31, %37, %6
  %130 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1
  %131 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %132 = load i8*, i8** %131, align 8
  %133 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %134 = load i8*, i8** %133, align 8
  %135 = icmp eq i8* %132, %134
  %136 = ptrtoint i8* %134 to i64
  br i1 %135, label %141, label %137

137:                                              ; preds = %129
  store i8 11, i8* %132, align 1
  %138 = getelementptr inbounds i8, i8* %132, i64 1
  %139 = ptrtoint i8* %138 to i64
  %140 = bitcast i8** %131 to i64*
  store i64 %139, i64* %140, align 8
  br label %186

141:                                              ; preds = %129
  %142 = ptrtoint i8* %132 to i64
  %143 = bitcast i8** %131 to i64*
  %144 = bitcast %"class.v8::internal::SnapshotByteSink"* %130 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = sub i64 %142, %145
  %147 = add i64 %146, 1
  %148 = icmp slt i64 %147, 0
  br i1 %148, label %149, label %151

149:                                              ; preds = %141
  %150 = bitcast %"class.v8::internal::SnapshotByteSink"* %130 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %150) #18
  unreachable

151:                                              ; preds = %141
  %152 = bitcast i8** %133 to i64*
  %153 = sub i64 %136, %145
  %154 = icmp ult i64 %153, 4611686018427387903
  br i1 %154, label %155, label %160

155:                                              ; preds = %151
  %156 = shl i64 %153, 1
  %157 = icmp ult i64 %156, %147
  %158 = select i1 %157, i64 %147, i64 %156
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %163, label %160

160:                                              ; preds = %155, %151
  %161 = phi i64 [ %158, %155 ], [ 9223372036854775807, %151 ]
  %162 = call i8* @_Znwm(i64 %161) #19
  br label %163

163:                                              ; preds = %160, %155
  %164 = phi i64 [ %161, %160 ], [ 0, %155 ]
  %165 = phi i8* [ %162, %160 ], [ null, %155 ]
  %166 = getelementptr inbounds i8, i8* %165, i64 %146
  %167 = getelementptr inbounds i8, i8* %165, i64 %164
  %168 = ptrtoint i8* %167 to i64
  store i8 11, i8* %166, align 1
  %169 = getelementptr inbounds i8, i8* %166, i64 1
  %170 = ptrtoint i8* %169 to i64
  %171 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %130, i64 0, i32 0, i32 0, i32 0
  %172 = load i8*, i8** %171, align 8
  %173 = load i64, i64* %143, align 8
  %174 = ptrtoint i8* %172 to i64
  %175 = sub i64 %173, %174
  %176 = sub i64 0, %175
  %177 = getelementptr inbounds i8, i8* %166, i64 %176
  %178 = ptrtoint i8* %177 to i64
  %179 = icmp sgt i64 %175, 0
  br i1 %179, label %180, label %182

180:                                              ; preds = %163
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %177, i8* align 1 %172, i64 %175, i1 false) #15
  %181 = load i8*, i8** %171, align 8
  br label %182

182:                                              ; preds = %180, %163
  %183 = phi i8* [ %172, %163 ], [ %181, %180 ]
  store i64 %178, i64* %144, align 8
  store i64 %170, i64* %143, align 8
  store i64 %168, i64* %152, align 8
  %184 = icmp eq i8* %183, null
  br i1 %184, label %186, label %185

185:                                              ; preds = %182
  call void @_ZdlPv(i8* nonnull %183) #19
  br label %186

186:                                              ; preds = %137, %182, %185
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer16ObjectSerializer17SerializeDeferredEv(%"class.v8::internal::Serializer::ObjectSerializer"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef", align 8
  %3 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::Serializer"*, %"class.v8::internal::Serializer"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %4, i64 0, i32 4
  %6 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.v8::internal::SerializerReferenceMap"* %5 to %"class.v8::internal::IdentityMapBase"*
  %10 = tail call i64* @_ZNK2v88internal15IdentityMapBase9FindEntryEm(%"class.v8::internal::IdentityMapBase"* %9, i64 %8) #15
  %11 = icmp eq i64* %10, null
  %12 = load i8, i8* @_ZN2v88internal21FLAG_trace_serializerE, align 1, !range !2
  %13 = icmp ne i8 %12, 0
  br i1 %11, label %22, label %14

14:                                               ; preds = %1
  br i1 %13, label %15, label %25

15:                                               ; preds = %14
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.45, i64 0, i64 0)) #15
  %16 = bitcast %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = load i64*, i64** %6, align 8
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef"* %2, i64 0, i32 0, i32 0
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZNK2v88internal6Object10ShortPrintEP8_IO_FILE(%"class.v8::internal::Object"* nonnull %20, %struct._IO_FILE* %21) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.46, i64 0, i64 0)) #15
  br label %25

22:                                               ; preds = %1
  br i1 %13, label %23, label %24

23:                                               ; preds = %22
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.47, i64 0, i64 0)) #15
  br label %24

24:                                               ; preds = %23, %22
  tail call void @_ZN2v88internal10Serializer16ObjectSerializer9SerializeEv(%"class.v8::internal::Serializer::ObjectSerializer"* %0)
  br label %25

25:                                               ; preds = %14, %15, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitorD2Ev(%"class.v8::internal::ObjectVisitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer15SerializeObjectENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::Serializer"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 2
  %5 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 0, i32 4
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %3, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i64 %7, 4294967295
  %12 = icmp eq i64 %11, 0
  tail call void @llvm.assume(i1 %12) #15
  %13 = zext i32 %10 to i64
  %14 = or i64 %7, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i16*
  %17 = load atomic i16, i16* %16 monotonic, align 2
  %18 = icmp ult i16 %17, 64
  br i1 %18, label %19, label %52

19:                                               ; preds = %2
  %20 = load atomic i32, i32* %9 monotonic, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %7, %21
  %23 = add i64 %22, 7
  %24 = inttoptr i64 %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = and i16 %25, 7
  %27 = icmp eq i16 %26, 5
  br i1 %27, label %28, label %52

28:                                               ; preds = %19
  %29 = add i64 %3, 11
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = or i64 %7, %32
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 31, i32 4
  %35 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %34, align 8
  %36 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %28
  %38 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %35, i64 %33) #15
  br label %105

39:                                               ; preds = %28
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 31, i32 0
  %41 = load i64*, i64** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 31, i32 1
  %43 = load i64*, i64** %42, align 8
  %44 = icmp eq i64* %41, %43
  br i1 %44, label %45, label %47

45:                                               ; preds = %39
  %46 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %5) #15
  br label %47

47:                                               ; preds = %45, %39
  %48 = phi i64* [ %46, %45 ], [ %41, %39 ]
  %49 = ptrtoint i64* %48 to i64
  %50 = add i64 %49, 8
  %51 = inttoptr i64 %50 to i64*
  store i64* %51, i64** %40, align 8
  store i64 %33, i64* %48, align 8
  br label %105

52:                                               ; preds = %2, %19
  %53 = and i64 %3, -4294967296
  %54 = load atomic i32, i32* %9 monotonic, align 4
  %55 = zext i32 %54 to i64
  %56 = or i64 %53, %55
  %57 = add i64 %56, 7
  %58 = inttoptr i64 %57 to i16*
  %59 = load atomic i16, i16* %58 monotonic, align 2
  %60 = icmp eq i16 %59, 94
  br i1 %60, label %61, label %105

61:                                               ; preds = %52
  %62 = add i64 %3, 7
  %63 = inttoptr i64 %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i64
  %66 = or i64 %53, %65
  %67 = and i64 %65, 1
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %79, label %69

69:                                               ; preds = %61
  %70 = add i64 %66, -1
  %71 = inttoptr i64 %70 to i32*
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = zext i32 %72 to i64
  %74 = or i64 %53, %73
  %75 = add i64 %74, 7
  %76 = inttoptr i64 %75 to i16*
  %77 = load atomic i16, i16* %76 monotonic, align 2
  %78 = icmp eq i16 %77, 133
  br i1 %78, label %85, label %79

79:                                               ; preds = %69, %61
  %80 = add i64 %66, 3
  %81 = inttoptr i64 %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = zext i32 %82 to i64
  %84 = or i64 %53, %83
  br label %85

85:                                               ; preds = %69, %79
  %86 = phi i64 [ %84, %79 ], [ %66, %69 ]
  %87 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 31, i32 4
  %88 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %87, align 8
  %89 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %88, null
  br i1 %89, label %92, label %90

90:                                               ; preds = %85
  %91 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %88, i64 %86) #15
  br label %105

92:                                               ; preds = %85
  %93 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 31, i32 0
  %94 = load i64*, i64** %93, align 8
  %95 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 31, i32 1
  %96 = load i64*, i64** %95, align 8
  %97 = icmp eq i64* %94, %96
  br i1 %97, label %98, label %100

98:                                               ; preds = %92
  %99 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %5) #15
  br label %100

100:                                              ; preds = %98, %92
  %101 = phi i64* [ %99, %98 ], [ %94, %92 ]
  %102 = ptrtoint i64* %101 to i64
  %103 = add i64 %102, 8
  %104 = inttoptr i64 %103 to i64*
  store i64* %104, i64** %93, align 8
  store i64 %86, i64* %101, align 8
  br label %105

105:                                              ; preds = %100, %90, %47, %37, %52
  %106 = phi i64* [ %1, %52 ], [ %38, %37 ], [ %48, %47 ], [ %91, %90 ], [ %101, %100 ]
  %107 = bitcast %"class.v8::internal::Serializer"* %0 to void (%"class.v8::internal::Serializer"*, i64*)***
  %108 = load void (%"class.v8::internal::Serializer"*, i64*)**, void (%"class.v8::internal::Serializer"*, i64*)*** %107, align 8
  %109 = getelementptr inbounds void (%"class.v8::internal::Serializer"*, i64*)*, void (%"class.v8::internal::Serializer"*, i64*)** %108, i64 6
  %110 = load void (%"class.v8::internal::Serializer"*, i64*)*, void (%"class.v8::internal::Serializer"*, i64*)** %109, align 8
  tail call void %110(%"class.v8::internal::Serializer"* %0, i64* %106) #15
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2v88internal10Serializer14MustBeDeferredENS0_10HeapObjectE(%"class.v8::internal::Serializer"* nocapture readnone, i64) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer17VisitRootPointersENS0_4RootEPKcNS0_14FullObjectSlotES5_(%"class.v8::internal::Serializer"*, i32, i8* nocapture readnone, i64, i64) unnamed_addr #0 align 2 {
  %6 = icmp ult i64 %3, %4
  br i1 %6, label %8, label %7

7:                                                ; preds = %16, %5
  ret void

8:                                                ; preds = %5, %16
  %9 = phi i64 [ %17, %16 ], [ %3, %5 ]
  %10 = inttoptr i64 %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN2v88internal10Serializer10PutSmiRootENS0_14FullObjectSlotE(%"class.v8::internal::Serializer"* %0, i64 %9) #15
  br label %16

15:                                               ; preds = %8
  tail call void @_ZN2v88internal10Serializer15SerializeObjectENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::Serializer"* %0, i64* %10) #15
  br label %16

16:                                               ; preds = %14, %15
  %17 = add i64 %9, 8
  %18 = icmp ult i64 %17, %4
  br i1 %18, label %8, label %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer19SerializeRootObjectENS0_14FullObjectSlotE(%"class.v8::internal::Serializer"*, i64) local_unnamed_addr #0 align 2 {
  %3 = inttoptr i64 %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void @_ZN2v88internal10Serializer10PutSmiRootENS0_14FullObjectSlotE(%"class.v8::internal::Serializer"* %0, i64 %1)
  br label %9

8:                                                ; preds = %2
  tail call void @_ZN2v88internal10Serializer15SerializeObjectENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::Serializer"* %0, i64* %3)
  br label %9

9:                                                ; preds = %8, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer10PutSmiRootENS0_14FullObjectSlotE(%"class.v8::internal::Serializer"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %6, %8
  %10 = ptrtoint i8* %8 to i64
  br i1 %9, label %15, label %11

11:                                               ; preds = %2
  store i8 97, i8* %6, align 1
  %12 = getelementptr inbounds i8, i8* %6, i64 1
  %13 = ptrtoint i8* %12 to i64
  %14 = bitcast i8** %5 to i64*
  store i64 %13, i64* %14, align 8
  br label %60

15:                                               ; preds = %2
  %16 = ptrtoint i8* %6 to i64
  %17 = bitcast i8** %5 to i64*
  %18 = bitcast %"class.v8::internal::SnapshotByteSink"* %4 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %16, %19
  %21 = add i64 %20, 1
  %22 = icmp slt i64 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %15
  %24 = bitcast %"class.v8::internal::SnapshotByteSink"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %24) #18
  unreachable

25:                                               ; preds = %15
  %26 = bitcast i8** %7 to i64*
  %27 = sub i64 %10, %19
  %28 = icmp ult i64 %27, 4611686018427387903
  br i1 %28, label %29, label %34

29:                                               ; preds = %25
  %30 = shl i64 %27, 1
  %31 = icmp ult i64 %30, %21
  %32 = select i1 %31, i64 %21, i64 %30
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %29, %25
  %35 = phi i64 [ %32, %29 ], [ 9223372036854775807, %25 ]
  %36 = tail call i8* @_Znwm(i64 %35) #19
  br label %37

37:                                               ; preds = %34, %29
  %38 = phi i64 [ %35, %34 ], [ 0, %29 ]
  %39 = phi i8* [ %36, %34 ], [ null, %29 ]
  %40 = getelementptr inbounds i8, i8* %39, i64 %20
  %41 = getelementptr inbounds i8, i8* %39, i64 %38
  %42 = ptrtoint i8* %41 to i64
  store i8 97, i8* %40, align 1
  %43 = getelementptr inbounds i8, i8* %40, i64 1
  %44 = ptrtoint i8* %43 to i64
  %45 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %4, i64 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = load i64, i64* %17, align 8
  %48 = ptrtoint i8* %46 to i64
  %49 = sub i64 %47, %48
  %50 = sub i64 0, %49
  %51 = getelementptr inbounds i8, i8* %40, i64 %50
  %52 = ptrtoint i8* %51 to i64
  %53 = icmp sgt i64 %49, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %37
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %51, i8* align 1 %46, i64 %49, i1 false) #15
  %55 = load i8*, i8** %45, align 8
  br label %56

56:                                               ; preds = %54, %37
  %57 = phi i8* [ %46, %37 ], [ %55, %54 ]
  store i64 %52, i64* %18, align 8
  store i64 %44, i64* %17, align 8
  store i64 %42, i64* %26, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %60, label %59

59:                                               ; preds = %56
  tail call void @_ZdlPv(i8* nonnull %57) #19
  br label %60

60:                                               ; preds = %11, %56, %59
  %61 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #15
  %62 = inttoptr i64 %1 to i64*
  %63 = load i64, i64* %62, align 8
  store i64 %63, i64* %3, align 8
  call void @_ZN2v88internal16SnapshotByteSink6PutRawEPKhiPKc(%"class.v8::internal::SnapshotByteSink"* %4, i8* nonnull %61, i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0)) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal10Serializer13SerializeRootENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::Serializer"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 6
  %4 = load i64, i64* %1, align 8
  %5 = bitcast %"class.v8::internal::RootIndexMap"* %3 to %"class.v8::internal::PointerToIndexHashMap"**
  %6 = load %"class.v8::internal::PointerToIndexHashMap"*, %"class.v8::internal::PointerToIndexHashMap"** %5, align 8
  %7 = trunc i64 %4 to i32
  %8 = getelementptr inbounds %"class.v8::internal::PointerToIndexHashMap", %"class.v8::internal::PointerToIndexHashMap"* %6, i64 0, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, -1
  %11 = and i32 %10, %7
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.v8::internal::PointerToIndexHashMap", %"class.v8::internal::PointerToIndexHashMap"* %6, i64 0, i32 0, i32 0, i32 0
  %14 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %13, align 8
  %15 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %14, i64 %12
  %16 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %14, i64 %12, i32 3
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %34, label %19

19:                                               ; preds = %2
  %20 = zext i32 %10 to i64
  br label %21

21:                                               ; preds = %27, %19
  %22 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %15, %19 ], [ %30, %27 ]
  %23 = phi i64 [ %12, %19 ], [ %29, %27 ]
  %24 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %22, i64 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, %4
  br i1 %26, label %34, label %27

27:                                               ; preds = %21
  %28 = add nuw nsw i64 %23, 1
  %29 = and i64 %28, %20
  %30 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %14, i64 %29
  %31 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %14, i64 %29, i32 3
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %21

34:                                               ; preds = %27, %21, %2
  %35 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %15, %2 ], [ %30, %27 ], [ %22, %21 ]
  %36 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %35, i64 0, i32 3
  %37 = load i8, i8* %36, align 8, !range !2
  %38 = icmp eq i8 %37, 0
  %39 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %35, null
  %40 = or i1 %39, %38
  br i1 %40, label %45, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %35, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = trunc i32 %43 to i16
  tail call void @_ZN2v88internal10Serializer7PutRootENS0_9RootIndexE(%"class.v8::internal::Serializer"* %0, i16 zeroext %44)
  br label %45

45:                                               ; preds = %34, %41
  %46 = phi i1 [ true, %41 ], [ false, %34 ]
  ret i1 %46
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer7PutRootENS0_9RootIndexE(%"class.v8::internal::Serializer"*, i16 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef", align 8
  %4 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 2
  %5 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %6 = zext i16 %1 to i64
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 0, i32 7, i32 0, i64 %6
  %8 = load i8, i8* @_ZN2v88internal21FLAG_trace_serializerE, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %2
  %11 = zext i16 %1 to i32
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0), i32 %11) #15
  %12 = bitcast %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #15
  %13 = load i64, i64* %7, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef"* %3, i64 0, i32 0, i32 0
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZNK2v88internal6Object10ShortPrintEP8_IO_FILE(%"class.v8::internal::Object"* nonnull %15, %struct._IO_FILE* %16) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #15
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #15
  br label %17

17:                                               ; preds = %2, %10
  %18 = icmp ult i16 %1, 32
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1
  br label %88

21:                                               ; preds = %17
  %22 = load i64, i64* %7, align 8
  %23 = and i64 %22, -262144
  %24 = inttoptr i64 %23 to %"class.v8::internal::BasicMemoryChunk"*
  %25 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %24, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = and i64 %26, 24
  %28 = icmp eq i64 %27, 0
  %29 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1
  br i1 %28, label %30, label %88

30:                                               ; preds = %21
  %31 = trunc i16 %1 to i8
  %32 = add nuw nsw i8 %31, 64
  %33 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = icmp eq i8* %34, %36
  %38 = ptrtoint i8* %36 to i64
  br i1 %37, label %43, label %39

39:                                               ; preds = %30
  store i8 %32, i8* %34, align 1
  %40 = getelementptr inbounds i8, i8* %34, i64 1
  %41 = ptrtoint i8* %40 to i64
  %42 = bitcast i8** %33 to i64*
  store i64 %41, i64* %42, align 8
  br label %154

43:                                               ; preds = %30
  %44 = ptrtoint i8* %34 to i64
  %45 = bitcast i8** %33 to i64*
  %46 = bitcast %"class.v8::internal::SnapshotByteSink"* %29 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %44, %47
  %49 = add i64 %48, 1
  %50 = icmp slt i64 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %43
  %52 = bitcast %"class.v8::internal::SnapshotByteSink"* %29 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %52) #18
  unreachable

53:                                               ; preds = %43
  %54 = bitcast i8** %35 to i64*
  %55 = sub i64 %38, %47
  %56 = icmp ult i64 %55, 4611686018427387903
  br i1 %56, label %57, label %62

57:                                               ; preds = %53
  %58 = shl i64 %55, 1
  %59 = icmp ult i64 %58, %49
  %60 = select i1 %59, i64 %49, i64 %58
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %65, label %62

62:                                               ; preds = %57, %53
  %63 = phi i64 [ %60, %57 ], [ 9223372036854775807, %53 ]
  %64 = call i8* @_Znwm(i64 %63) #19
  br label %65

65:                                               ; preds = %62, %57
  %66 = phi i64 [ %63, %62 ], [ 0, %57 ]
  %67 = phi i8* [ %64, %62 ], [ null, %57 ]
  %68 = getelementptr inbounds i8, i8* %67, i64 %48
  %69 = getelementptr inbounds i8, i8* %67, i64 %66
  %70 = ptrtoint i8* %69 to i64
  store i8 %32, i8* %68, align 1
  %71 = getelementptr inbounds i8, i8* %68, i64 1
  %72 = ptrtoint i8* %71 to i64
  %73 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %29, i64 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = load i64, i64* %45, align 8
  %76 = ptrtoint i8* %74 to i64
  %77 = sub i64 %75, %76
  %78 = sub i64 0, %77
  %79 = getelementptr inbounds i8, i8* %68, i64 %78
  %80 = ptrtoint i8* %79 to i64
  %81 = icmp sgt i64 %77, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %65
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %79, i8* align 1 %74, i64 %77, i1 false) #15
  %83 = load i8*, i8** %73, align 8
  br label %84

84:                                               ; preds = %82, %65
  %85 = phi i8* [ %74, %65 ], [ %83, %82 ]
  store i64 %80, i64* %46, align 8
  store i64 %72, i64* %45, align 8
  store i64 %70, i64* %54, align 8
  %86 = icmp eq i8* %85, null
  br i1 %86, label %154, label %87

87:                                               ; preds = %84
  call void @_ZdlPv(i8* nonnull %85) #19
  br label %154

88:                                               ; preds = %19, %21
  %89 = phi %"class.v8::internal::SnapshotByteSink"* [ %20, %19 ], [ %29, %21 ]
  %90 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %91 = load i8*, i8** %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  %94 = icmp eq i8* %91, %93
  %95 = ptrtoint i8* %93 to i64
  br i1 %94, label %100, label %96

96:                                               ; preds = %88
  store i8 7, i8* %91, align 1
  %97 = getelementptr inbounds i8, i8* %91, i64 1
  %98 = ptrtoint i8* %97 to i64
  %99 = bitcast i8** %90 to i64*
  store i64 %98, i64* %99, align 8
  br label %145

100:                                              ; preds = %88
  %101 = ptrtoint i8* %91 to i64
  %102 = bitcast i8** %90 to i64*
  %103 = bitcast %"class.v8::internal::SnapshotByteSink"* %89 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = sub i64 %101, %104
  %106 = add i64 %105, 1
  %107 = icmp slt i64 %106, 0
  br i1 %107, label %108, label %110

108:                                              ; preds = %100
  %109 = bitcast %"class.v8::internal::SnapshotByteSink"* %89 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %109) #18
  unreachable

110:                                              ; preds = %100
  %111 = bitcast i8** %92 to i64*
  %112 = sub i64 %95, %104
  %113 = icmp ult i64 %112, 4611686018427387903
  br i1 %113, label %114, label %119

114:                                              ; preds = %110
  %115 = shl i64 %112, 1
  %116 = icmp ult i64 %115, %106
  %117 = select i1 %116, i64 %106, i64 %115
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %122, label %119

119:                                              ; preds = %114, %110
  %120 = phi i64 [ %117, %114 ], [ 9223372036854775807, %110 ]
  %121 = call i8* @_Znwm(i64 %120) #19
  br label %122

122:                                              ; preds = %119, %114
  %123 = phi i64 [ %120, %119 ], [ 0, %114 ]
  %124 = phi i8* [ %121, %119 ], [ null, %114 ]
  %125 = getelementptr inbounds i8, i8* %124, i64 %105
  %126 = getelementptr inbounds i8, i8* %124, i64 %123
  %127 = ptrtoint i8* %126 to i64
  store i8 7, i8* %125, align 1
  %128 = getelementptr inbounds i8, i8* %125, i64 1
  %129 = ptrtoint i8* %128 to i64
  %130 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %131 = load i8*, i8** %130, align 8
  %132 = load i64, i64* %102, align 8
  %133 = ptrtoint i8* %131 to i64
  %134 = sub i64 %132, %133
  %135 = sub i64 0, %134
  %136 = getelementptr inbounds i8, i8* %125, i64 %135
  %137 = ptrtoint i8* %136 to i64
  %138 = icmp sgt i64 %134, 0
  br i1 %138, label %139, label %141

139:                                              ; preds = %122
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %136, i8* align 1 %131, i64 %134, i1 false) #15
  %140 = load i8*, i8** %130, align 8
  br label %141

141:                                              ; preds = %139, %122
  %142 = phi i8* [ %131, %122 ], [ %140, %139 ]
  store i64 %137, i64* %103, align 8
  store i64 %129, i64* %102, align 8
  store i64 %127, i64* %111, align 8
  %143 = icmp eq i8* %142, null
  br i1 %143, label %145, label %144

144:                                              ; preds = %141
  call void @_ZdlPv(i8* nonnull %142) #19
  br label %145

145:                                              ; preds = %96, %141, %144
  call void @_ZN2v88internal16SnapshotByteSink6PutIntEmPKc(%"class.v8::internal::SnapshotByteSink"* %89, i64 %6, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0)) #15
  %146 = load i64, i64* %7, align 8
  %147 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 3, i32 3
  %148 = load i32, i32* %147, align 8
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 3, i32 2, i64 %149
  store i64 %146, i64* %150, align 8
  %151 = load i32, i32* %147, align 8
  %152 = add nsw i32 %151, 1
  %153 = and i32 %152, 7
  store i32 %153, i32* %147, align 8
  br label %154

154:                                              ; preds = %87, %84, %39, %145
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal10Serializer18SerializeHotObjectENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::Serializer"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef", align 8
  %4 = load i64, i64* %1, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 3, i32 2, i64 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, %4
  br i1 %7, label %36, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 3, i32 2, i64 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, %4
  br i1 %11, label %36, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 3, i32 2, i64 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, %4
  br i1 %15, label %36, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 3, i32 2, i64 3
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, %4
  br i1 %19, label %36, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 3, i32 2, i64 4
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, %4
  br i1 %23, label %36, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 3, i32 2, i64 5
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, %4
  br i1 %27, label %36, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 3, i32 2, i64 6
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %30, %4
  br i1 %31, label %36, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 3, i32 2, i64 7
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, %4
  br i1 %35, label %36, label %105

36:                                               ; preds = %32, %2, %8, %12, %16, %20, %24, %28
  %37 = phi i32 [ 6, %28 ], [ 5, %24 ], [ 4, %20 ], [ 3, %16 ], [ 2, %12 ], [ 1, %8 ], [ 0, %2 ], [ 7, %32 ]
  %38 = load i8, i8* @_ZN2v88internal21FLAG_trace_serializerE, align 1, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %36
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.7, i64 0, i64 0), i32 %37) #15
  %41 = bitcast %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #15
  %42 = load i64, i64* %1, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef"* %3, i64 0, i32 0, i32 0
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZNK2v88internal6Object10ShortPrintEP8_IO_FILE(%"class.v8::internal::Object"* nonnull %44, %struct._IO_FILE* %45) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #15
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #15
  br label %46

46:                                               ; preds = %36, %40
  %47 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1
  %48 = trunc i32 %37 to i8
  %49 = or i8 %48, -112
  %50 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %51, %53
  %55 = ptrtoint i8* %53 to i64
  br i1 %54, label %60, label %56

56:                                               ; preds = %46
  store i8 %49, i8* %51, align 1
  %57 = getelementptr inbounds i8, i8* %51, i64 1
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast i8** %50 to i64*
  store i64 %58, i64* %59, align 8
  br label %105

60:                                               ; preds = %46
  %61 = ptrtoint i8* %51 to i64
  %62 = bitcast i8** %50 to i64*
  %63 = bitcast %"class.v8::internal::SnapshotByteSink"* %47 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = sub i64 %61, %64
  %66 = add i64 %65, 1
  %67 = icmp slt i64 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %60
  %69 = bitcast %"class.v8::internal::SnapshotByteSink"* %47 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %69) #18
  unreachable

70:                                               ; preds = %60
  %71 = bitcast i8** %52 to i64*
  %72 = sub i64 %55, %64
  %73 = icmp ult i64 %72, 4611686018427387903
  br i1 %73, label %74, label %79

74:                                               ; preds = %70
  %75 = shl i64 %72, 1
  %76 = icmp ult i64 %75, %66
  %77 = select i1 %76, i64 %66, i64 %75
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %74, %70
  %80 = phi i64 [ %77, %74 ], [ 9223372036854775807, %70 ]
  %81 = call i8* @_Znwm(i64 %80) #19
  br label %82

82:                                               ; preds = %79, %74
  %83 = phi i64 [ %80, %79 ], [ 0, %74 ]
  %84 = phi i8* [ %81, %79 ], [ null, %74 ]
  %85 = getelementptr inbounds i8, i8* %84, i64 %65
  %86 = getelementptr inbounds i8, i8* %84, i64 %83
  %87 = ptrtoint i8* %86 to i64
  store i8 %49, i8* %85, align 1
  %88 = getelementptr inbounds i8, i8* %85, i64 1
  %89 = ptrtoint i8* %88 to i64
  %90 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %47, i64 0, i32 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  %92 = load i64, i64* %62, align 8
  %93 = ptrtoint i8* %91 to i64
  %94 = sub i64 %92, %93
  %95 = sub i64 0, %94
  %96 = getelementptr inbounds i8, i8* %85, i64 %95
  %97 = ptrtoint i8* %96 to i64
  %98 = icmp sgt i64 %94, 0
  br i1 %98, label %99, label %101

99:                                               ; preds = %82
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %96, i8* align 1 %91, i64 %94, i1 false) #15
  %100 = load i8*, i8** %90, align 8
  br label %101

101:                                              ; preds = %99, %82
  %102 = phi i8* [ %91, %82 ], [ %100, %99 ]
  store i64 %97, i64* %63, align 8
  store i64 %89, i64* %62, align 8
  store i64 %87, i64* %71, align 8
  %103 = icmp eq i8* %102, null
  br i1 %103, label %105, label %104

104:                                              ; preds = %101
  call void @_ZdlPv(i8* nonnull %102) #19
  br label %105

105:                                              ; preds = %104, %101, %56, %32
  %106 = phi i1 [ false, %32 ], [ true, %56 ], [ true, %101 ], [ true, %104 ]
  ret i1 %106
}

declare void @_ZNK2v88internal6Object10ShortPrintEP8_IO_FILE(%"class.v8::internal::Object"*, %struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal10Serializer22SerializeBackReferenceENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::Serializer"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef", align 8
  %4 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 4
  %5 = load i64, i64* %1, align 8
  %6 = bitcast %"class.v8::internal::SerializerReferenceMap"* %4 to %"class.v8::internal::IdentityMapBase"*
  %7 = tail call i64* @_ZNK2v88internal15IdentityMapBase9FindEntryEm(%"class.v8::internal::IdentityMapBase"* %6, i64 %5) #15
  %8 = icmp eq i64* %7, null
  br i1 %8, label %98, label %9

9:                                                ; preds = %2
  %10 = bitcast i64* %7 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 3
  %13 = icmp eq i32 %12, 1
  %14 = load i8, i8* @_ZN2v88internal21FLAG_trace_serializerE, align 1, !range !2
  %15 = icmp ne i8 %14, 0
  br i1 %13, label %16, label %22

16:                                               ; preds = %9
  br i1 %15, label %17, label %20

17:                                               ; preds = %16
  %18 = lshr i32 %11, 2
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0), i32 %18) #15
  %19 = load i32, i32* %10, align 4
  br label %20

20:                                               ; preds = %17, %16
  %21 = phi i32 [ %19, %17 ], [ %11, %16 ]
  tail call void @_ZN2v88internal10Serializer20PutAttachedReferenceENS0_19SerializerReferenceE(%"class.v8::internal::Serializer"* %0, i32 %21)
  br label %98

22:                                               ; preds = %9
  br i1 %15, label %23, label %29

23:                                               ; preds = %22
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10, i64 0, i64 0)) #15
  %24 = bitcast %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #15
  %25 = load i64, i64* %1, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef"* %3, i64 0, i32 0, i32 0
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZNK2v88internal6Object10ShortPrintEP8_IO_FILE(%"class.v8::internal::Object"* nonnull %27, %struct._IO_FILE* %28) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #15
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #15
  br label %29

29:                                               ; preds = %23, %22
  %30 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1
  %31 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = icmp eq i8* %32, %34
  %36 = ptrtoint i8* %34 to i64
  br i1 %35, label %41, label %37

37:                                               ; preds = %29
  store i8 4, i8* %32, align 1
  %38 = getelementptr inbounds i8, i8* %32, i64 1
  %39 = ptrtoint i8* %38 to i64
  %40 = bitcast i8** %31 to i64*
  store i64 %39, i64* %40, align 8
  br label %86

41:                                               ; preds = %29
  %42 = ptrtoint i8* %32 to i64
  %43 = bitcast i8** %31 to i64*
  %44 = bitcast %"class.v8::internal::SnapshotByteSink"* %30 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %42, %45
  %47 = add i64 %46, 1
  %48 = icmp slt i64 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %41
  %50 = bitcast %"class.v8::internal::SnapshotByteSink"* %30 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %50) #18
  unreachable

51:                                               ; preds = %41
  %52 = bitcast i8** %33 to i64*
  %53 = sub i64 %36, %45
  %54 = icmp ult i64 %53, 4611686018427387903
  br i1 %54, label %55, label %60

55:                                               ; preds = %51
  %56 = shl i64 %53, 1
  %57 = icmp ult i64 %56, %47
  %58 = select i1 %57, i64 %47, i64 %56
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %55, %51
  %61 = phi i64 [ %58, %55 ], [ 9223372036854775807, %51 ]
  %62 = call i8* @_Znwm(i64 %61) #19
  br label %63

63:                                               ; preds = %60, %55
  %64 = phi i64 [ %61, %60 ], [ 0, %55 ]
  %65 = phi i8* [ %62, %60 ], [ null, %55 ]
  %66 = getelementptr inbounds i8, i8* %65, i64 %46
  %67 = getelementptr inbounds i8, i8* %65, i64 %64
  %68 = ptrtoint i8* %67 to i64
  store i8 4, i8* %66, align 1
  %69 = getelementptr inbounds i8, i8* %66, i64 1
  %70 = ptrtoint i8* %69 to i64
  %71 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %30, i64 0, i32 0, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  %73 = load i64, i64* %43, align 8
  %74 = ptrtoint i8* %72 to i64
  %75 = sub i64 %73, %74
  %76 = sub i64 0, %75
  %77 = getelementptr inbounds i8, i8* %66, i64 %76
  %78 = ptrtoint i8* %77 to i64
  %79 = icmp sgt i64 %75, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %63
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %77, i8* align 1 %72, i64 %75, i1 false) #15
  %81 = load i8*, i8** %71, align 8
  br label %82

82:                                               ; preds = %80, %63
  %83 = phi i8* [ %72, %63 ], [ %81, %80 ]
  store i64 %78, i64* %44, align 8
  store i64 %70, i64* %43, align 8
  store i64 %68, i64* %52, align 8
  %84 = icmp eq i8* %83, null
  br i1 %84, label %86, label %85

85:                                               ; preds = %82
  call void @_ZdlPv(i8* nonnull %83) #19
  br label %86

86:                                               ; preds = %37, %82, %85
  %87 = load i32, i32* %10, align 4
  %88 = lshr i32 %87, 2
  %89 = zext i32 %88 to i64
  call void @_ZN2v88internal16SnapshotByteSink6PutIntEmPKc(%"class.v8::internal::SnapshotByteSink"* %30, i64 %89, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #15
  %90 = load i64, i64* %1, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 3, i32 3
  %92 = load i32, i32* %91, align 8
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 3, i32 2, i64 %93
  store i64 %90, i64* %94, align 8
  %95 = load i32, i32* %91, align 8
  %96 = add nsw i32 %95, 1
  %97 = and i32 %96, 7
  store i32 %97, i32* %91, align 8
  br label %98

98:                                               ; preds = %20, %86, %2
  %99 = phi i1 [ false, %2 ], [ true, %86 ], [ true, %20 ]
  ret i1 %99
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer20PutAttachedReferenceENS0_19SerializerReferenceE(%"class.v8::internal::Serializer"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %5, %7
  %9 = ptrtoint i8* %7 to i64
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  store i8 8, i8* %5, align 1
  %11 = getelementptr inbounds i8, i8* %5, i64 1
  %12 = ptrtoint i8* %11 to i64
  %13 = bitcast i8** %4 to i64*
  store i64 %12, i64* %13, align 8
  br label %59

14:                                               ; preds = %2
  %15 = ptrtoint i8* %5 to i64
  %16 = bitcast i8** %4 to i64*
  %17 = bitcast %"class.v8::internal::SnapshotByteSink"* %3 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %15, %18
  %20 = add i64 %19, 1
  %21 = icmp slt i64 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %14
  %23 = bitcast %"class.v8::internal::SnapshotByteSink"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %23) #18
  unreachable

24:                                               ; preds = %14
  %25 = bitcast i8** %6 to i64*
  %26 = sub i64 %9, %18
  %27 = icmp ult i64 %26, 4611686018427387903
  br i1 %27, label %28, label %33

28:                                               ; preds = %24
  %29 = shl i64 %26, 1
  %30 = icmp ult i64 %29, %20
  %31 = select i1 %30, i64 %20, i64 %29
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %28, %24
  %34 = phi i64 [ %31, %28 ], [ 9223372036854775807, %24 ]
  %35 = tail call i8* @_Znwm(i64 %34) #19
  br label %36

36:                                               ; preds = %33, %28
  %37 = phi i64 [ %34, %33 ], [ 0, %28 ]
  %38 = phi i8* [ %35, %33 ], [ null, %28 ]
  %39 = getelementptr inbounds i8, i8* %38, i64 %19
  %40 = getelementptr inbounds i8, i8* %38, i64 %37
  %41 = ptrtoint i8* %40 to i64
  store i8 8, i8* %39, align 1
  %42 = getelementptr inbounds i8, i8* %39, i64 1
  %43 = ptrtoint i8* %42 to i64
  %44 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %3, i64 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = load i64, i64* %16, align 8
  %47 = ptrtoint i8* %45 to i64
  %48 = sub i64 %46, %47
  %49 = sub i64 0, %48
  %50 = getelementptr inbounds i8, i8* %39, i64 %49
  %51 = ptrtoint i8* %50 to i64
  %52 = icmp sgt i64 %48, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %36
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %50, i8* align 1 %45, i64 %48, i1 false) #15
  %54 = load i8*, i8** %44, align 8
  br label %55

55:                                               ; preds = %53, %36
  %56 = phi i8* [ %45, %36 ], [ %54, %53 ]
  store i64 %51, i64* %17, align 8
  store i64 %43, i64* %16, align 8
  store i64 %41, i64* %25, align 8
  %57 = icmp eq i8* %56, null
  br i1 %57, label %59, label %58

58:                                               ; preds = %55
  tail call void @_ZdlPv(i8* nonnull %56) #19
  br label %59

59:                                               ; preds = %10, %55, %58
  %60 = lshr i32 %1, 2
  %61 = zext i32 %60 to i64
  tail call void @_ZN2v88internal16SnapshotByteSink6PutIntEmPKc(%"class.v8::internal::SnapshotByteSink"* %3, i64 %61, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.20, i64 0, i64 0)) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer16PutBackReferenceENS0_6HandleINS0_10HeapObjectEEENS0_19SerializerReferenceE(%"class.v8::internal::Serializer"*, i64*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1
  %5 = lshr i32 %2, 2
  %6 = zext i32 %5 to i64
  tail call void @_ZN2v88internal16SnapshotByteSink6PutIntEmPKc(%"class.v8::internal::SnapshotByteSink"* %4, i64 %6, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #15
  %7 = load i64, i64* %1, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 3, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 3, i32 2, i64 %10
  store i64 %7, i64* %11, align 8
  %12 = load i32, i32* %8, align 8
  %13 = add nsw i32 %12, 1
  %14 = and i32 %13, 7
  store i32 %14, i32* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal10Serializer22SerializePendingObjectENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::Serializer"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 14
  %4 = load i64, i64* %1, align 8
  %5 = bitcast %"class.v8::internal::IdentityMap.1191"* %3 to %"class.v8::internal::IdentityMapBase"*
  %6 = tail call i64* @_ZNK2v88internal15IdentityMapBase9FindEntryEm(%"class.v8::internal::IdentityMapBase"* %5, i64 %4) #15
  %7 = icmp eq i64* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = bitcast i64* %6 to %"class.std::__1::vector.822"**
  tail call void @_ZN2v88internal10Serializer26PutPendingForwardReferenceERPNSt3__16vectorIiNS2_9allocatorIiEEEE(%"class.v8::internal::Serializer"* %0, %"class.std::__1::vector.822"** nonnull dereferenceable(8) %9)
  br label %10

10:                                               ; preds = %2, %8
  %11 = phi i1 [ true, %8 ], [ false, %2 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer26PutPendingForwardReferenceERPNSt3__16vectorIiNS2_9allocatorIiEEEE(%"class.v8::internal::Serializer"*, %"class.std::__1::vector.822"** nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %5, %7
  %9 = ptrtoint i8* %7 to i64
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  store i8 24, i8* %5, align 1
  %11 = getelementptr inbounds i8, i8* %5, i64 1
  %12 = ptrtoint i8* %11 to i64
  %13 = bitcast i8** %4 to i64*
  store i64 %12, i64* %13, align 8
  br label %59

14:                                               ; preds = %2
  %15 = ptrtoint i8* %5 to i64
  %16 = bitcast i8** %4 to i64*
  %17 = bitcast %"class.v8::internal::SnapshotByteSink"* %3 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %15, %18
  %20 = add i64 %19, 1
  %21 = icmp slt i64 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %14
  %23 = bitcast %"class.v8::internal::SnapshotByteSink"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %23) #18
  unreachable

24:                                               ; preds = %14
  %25 = bitcast i8** %6 to i64*
  %26 = sub i64 %9, %18
  %27 = icmp ult i64 %26, 4611686018427387903
  br i1 %27, label %28, label %33

28:                                               ; preds = %24
  %29 = shl i64 %26, 1
  %30 = icmp ult i64 %29, %20
  %31 = select i1 %30, i64 %20, i64 %29
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %28, %24
  %34 = phi i64 [ %31, %28 ], [ 9223372036854775807, %24 ]
  %35 = tail call i8* @_Znwm(i64 %34) #19
  br label %36

36:                                               ; preds = %33, %28
  %37 = phi i64 [ %34, %33 ], [ 0, %28 ]
  %38 = phi i8* [ %35, %33 ], [ null, %28 ]
  %39 = getelementptr inbounds i8, i8* %38, i64 %19
  %40 = getelementptr inbounds i8, i8* %38, i64 %37
  %41 = ptrtoint i8* %40 to i64
  store i8 24, i8* %39, align 1
  %42 = getelementptr inbounds i8, i8* %39, i64 1
  %43 = ptrtoint i8* %42 to i64
  %44 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %3, i64 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = load i64, i64* %16, align 8
  %47 = ptrtoint i8* %45 to i64
  %48 = sub i64 %46, %47
  %49 = sub i64 0, %48
  %50 = getelementptr inbounds i8, i8* %39, i64 %49
  %51 = ptrtoint i8* %50 to i64
  %52 = icmp sgt i64 %48, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %36
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %50, i8* align 1 %45, i64 %48, i1 false) #15
  %54 = load i8*, i8** %44, align 8
  br label %55

55:                                               ; preds = %53, %36
  %56 = phi i8* [ %45, %36 ], [ %54, %53 ]
  store i64 %51, i64* %17, align 8
  store i64 %43, i64* %16, align 8
  store i64 %41, i64* %25, align 8
  %57 = icmp eq i8* %56, null
  br i1 %57, label %59, label %58

58:                                               ; preds = %55
  tail call void @_ZdlPv(i8* nonnull %56) #19
  br label %59

59:                                               ; preds = %10, %55, %58
  %60 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 12
  %61 = load i32, i32* %60, align 8
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %60, align 8
  %63 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 11
  %64 = load i32, i32* %63, align 4
  %65 = add nsw i32 %64, 1
  store i32 %65, i32* %63, align 4
  %66 = load %"class.std::__1::vector.822"*, %"class.std::__1::vector.822"** %1, align 8
  %67 = icmp eq %"class.std::__1::vector.822"* %66, null
  br i1 %67, label %68, label %72

68:                                               ; preds = %59
  %69 = tail call i8* @_Znwm(i64 24) #19
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 0, i64 24, i1 false) #15
  %70 = bitcast %"class.std::__1::vector.822"** %1 to i8**
  store i8* %69, i8** %70, align 8
  %71 = bitcast i8* %69 to %"class.std::__1::vector.822"*
  br label %72

72:                                               ; preds = %68, %59
  %73 = phi %"class.std::__1::vector.822"* [ %71, %68 ], [ %66, %59 ]
  %74 = getelementptr inbounds %"class.std::__1::vector.822", %"class.std::__1::vector.822"* %73, i64 0, i32 0, i32 1
  %75 = load i32*, i32** %74, align 8
  %76 = getelementptr inbounds %"class.std::__1::vector.822", %"class.std::__1::vector.822"* %73, i64 0, i32 0, i32 2, i32 0, i32 0
  %77 = load i32*, i32** %76, align 8
  %78 = icmp eq i32* %75, %77
  %79 = ptrtoint i32* %77 to i64
  br i1 %78, label %84, label %80

80:                                               ; preds = %72
  store i32 %64, i32* %75, align 4
  %81 = getelementptr inbounds i32, i32* %75, i64 1
  %82 = ptrtoint i32* %81 to i64
  %83 = bitcast i32** %74 to i64*
  store i64 %82, i64* %83, align 8
  br label %140

84:                                               ; preds = %72
  %85 = ptrtoint i32* %75 to i64
  %86 = bitcast i32** %74 to i64*
  %87 = bitcast %"class.std::__1::vector.822"* %73 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = sub i64 %85, %88
  %90 = ashr exact i64 %89, 2
  %91 = add nsw i64 %90, 1
  %92 = icmp ugt i64 %91, 4611686018427387903
  br i1 %92, label %93, label %95

93:                                               ; preds = %84
  %94 = bitcast %"class.std::__1::vector.822"* %73 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %94) #18
  unreachable

95:                                               ; preds = %84
  %96 = bitcast i32** %76 to i64*
  %97 = sub i64 %79, %88
  %98 = ashr exact i64 %97, 2
  %99 = icmp ult i64 %98, 2305843009213693951
  br i1 %99, label %100, label %108

100:                                              ; preds = %95
  %101 = ashr exact i64 %97, 1
  %102 = icmp ult i64 %101, %91
  %103 = select i1 %102, i64 %91, i64 %101
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %113, label %105

105:                                              ; preds = %100
  %106 = icmp ugt i64 %103, 4611686018427387903
  br i1 %106, label %107, label %108

107:                                              ; preds = %105
  tail call void @abort() #18
  unreachable

108:                                              ; preds = %105, %95
  %109 = phi i64 [ %103, %105 ], [ 4611686018427387903, %95 ]
  %110 = shl i64 %109, 2
  %111 = tail call i8* @_Znwm(i64 %110) #19
  %112 = bitcast i8* %111 to i32*
  br label %113

113:                                              ; preds = %108, %100
  %114 = phi i64 [ %109, %108 ], [ 0, %100 ]
  %115 = phi i32* [ %112, %108 ], [ null, %100 ]
  %116 = getelementptr inbounds i32, i32* %115, i64 %90
  %117 = getelementptr inbounds i32, i32* %115, i64 %114
  %118 = ptrtoint i32* %117 to i64
  store i32 %64, i32* %116, align 4
  %119 = getelementptr inbounds i32, i32* %116, i64 1
  %120 = ptrtoint i32* %119 to i64
  %121 = getelementptr inbounds %"class.std::__1::vector.822", %"class.std::__1::vector.822"* %73, i64 0, i32 0, i32 0
  %122 = load i32*, i32** %121, align 8
  %123 = load i64, i64* %86, align 8
  %124 = ptrtoint i32* %122 to i64
  %125 = sub i64 %123, %124
  %126 = ashr exact i64 %125, 2
  %127 = sub nsw i64 0, %126
  %128 = getelementptr inbounds i32, i32* %116, i64 %127
  %129 = ptrtoint i32* %128 to i64
  %130 = icmp sgt i64 %125, 0
  br i1 %130, label %131, label %135

131:                                              ; preds = %113
  %132 = bitcast i32* %128 to i8*
  %133 = bitcast i32* %122 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %132, i8* align 4 %133, i64 %125, i1 false) #15
  %134 = load i32*, i32** %121, align 8
  br label %135

135:                                              ; preds = %131, %113
  %136 = phi i32* [ %122, %113 ], [ %134, %131 ]
  store i64 %129, i64* %87, align 8
  store i64 %120, i64* %86, align 8
  store i64 %118, i64* %96, align 8
  %137 = icmp eq i32* %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %135
  %139 = bitcast i32* %136 to i8*
  tail call void @_ZdlPv(i8* %139) #19
  br label %140

140:                                              ; preds = %80, %135, %138
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal10Serializer23ObjectIsBytecodeHandlerENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::Serializer"* nocapture readnone, i64*) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 7
  %11 = inttoptr i64 %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = icmp eq i16 %12, 162
  br i1 %13, label %14, label %20

14:                                               ; preds = %2
  %15 = add i64 %3, 27
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 15
  %19 = icmp eq i32 %18, 0
  br label %20

20:                                               ; preds = %2, %14
  %21 = phi i1 [ %19, %14 ], [ false, %2 ]
  ret i1 %21
}

declare void @_ZN2v88internal16SnapshotByteSink6PutIntEmPKc(%"class.v8::internal::SnapshotByteSink"*, i64, i8*) local_unnamed_addr #1

declare void @_ZN2v88internal16SnapshotByteSink6PutRawEPKhiPKc(%"class.v8::internal::SnapshotByteSink"*, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer9PutRepeatEi(%"class.v8::internal::Serializer"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp slt i32 %1, 18
  %4 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1
  br i1 %3, label %5, label %63

5:                                                ; preds = %2
  %6 = trunc i32 %1 to i8
  %7 = add i8 %6, 126
  %8 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %9, %11
  %13 = ptrtoint i8* %11 to i64
  br i1 %12, label %18, label %14

14:                                               ; preds = %5
  store i8 %7, i8* %9, align 1
  %15 = getelementptr inbounds i8, i8* %9, i64 1
  %16 = ptrtoint i8* %15 to i64
  %17 = bitcast i8** %8 to i64*
  store i64 %16, i64* %17, align 8
  br label %122

18:                                               ; preds = %5
  %19 = ptrtoint i8* %9 to i64
  %20 = bitcast i8** %8 to i64*
  %21 = bitcast %"class.v8::internal::SnapshotByteSink"* %4 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %19, %22
  %24 = add i64 %23, 1
  %25 = icmp slt i64 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %18
  %27 = bitcast %"class.v8::internal::SnapshotByteSink"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %27) #18
  unreachable

28:                                               ; preds = %18
  %29 = bitcast i8** %10 to i64*
  %30 = sub i64 %13, %22
  %31 = icmp ult i64 %30, 4611686018427387903
  br i1 %31, label %32, label %37

32:                                               ; preds = %28
  %33 = shl i64 %30, 1
  %34 = icmp ult i64 %33, %24
  %35 = select i1 %34, i64 %24, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %32, %28
  %38 = phi i64 [ %35, %32 ], [ 9223372036854775807, %28 ]
  %39 = tail call i8* @_Znwm(i64 %38) #19
  br label %40

40:                                               ; preds = %37, %32
  %41 = phi i64 [ %38, %37 ], [ 0, %32 ]
  %42 = phi i8* [ %39, %37 ], [ null, %32 ]
  %43 = getelementptr inbounds i8, i8* %42, i64 %23
  %44 = getelementptr inbounds i8, i8* %42, i64 %41
  %45 = ptrtoint i8* %44 to i64
  store i8 %7, i8* %43, align 1
  %46 = getelementptr inbounds i8, i8* %43, i64 1
  %47 = ptrtoint i8* %46 to i64
  %48 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %4, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = load i64, i64* %20, align 8
  %51 = ptrtoint i8* %49 to i64
  %52 = sub i64 %50, %51
  %53 = sub i64 0, %52
  %54 = getelementptr inbounds i8, i8* %43, i64 %53
  %55 = ptrtoint i8* %54 to i64
  %56 = icmp sgt i64 %52, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %40
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %54, i8* align 1 %49, i64 %52, i1 false) #15
  %58 = load i8*, i8** %48, align 8
  br label %59

59:                                               ; preds = %57, %40
  %60 = phi i8* [ %49, %40 ], [ %58, %57 ]
  store i64 %55, i64* %21, align 8
  store i64 %47, i64* %20, align 8
  store i64 %45, i64* %29, align 8
  %61 = icmp eq i8* %60, null
  br i1 %61, label %122, label %62

62:                                               ; preds = %59
  tail call void @_ZdlPv(i8* nonnull %60) #19
  br label %122

63:                                               ; preds = %2
  %64 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %65 = load i8*, i8** %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = icmp eq i8* %65, %67
  %69 = ptrtoint i8* %67 to i64
  br i1 %68, label %74, label %70

70:                                               ; preds = %63
  store i8 12, i8* %65, align 1
  %71 = getelementptr inbounds i8, i8* %65, i64 1
  %72 = ptrtoint i8* %71 to i64
  %73 = bitcast i8** %64 to i64*
  store i64 %72, i64* %73, align 8
  br label %119

74:                                               ; preds = %63
  %75 = ptrtoint i8* %65 to i64
  %76 = bitcast i8** %64 to i64*
  %77 = bitcast %"class.v8::internal::SnapshotByteSink"* %4 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = sub i64 %75, %78
  %80 = add i64 %79, 1
  %81 = icmp slt i64 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %74
  %83 = bitcast %"class.v8::internal::SnapshotByteSink"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %83) #18
  unreachable

84:                                               ; preds = %74
  %85 = bitcast i8** %66 to i64*
  %86 = sub i64 %69, %78
  %87 = icmp ult i64 %86, 4611686018427387903
  br i1 %87, label %88, label %93

88:                                               ; preds = %84
  %89 = shl i64 %86, 1
  %90 = icmp ult i64 %89, %80
  %91 = select i1 %90, i64 %80, i64 %89
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %88, %84
  %94 = phi i64 [ %91, %88 ], [ 9223372036854775807, %84 ]
  %95 = tail call i8* @_Znwm(i64 %94) #19
  br label %96

96:                                               ; preds = %93, %88
  %97 = phi i64 [ %94, %93 ], [ 0, %88 ]
  %98 = phi i8* [ %95, %93 ], [ null, %88 ]
  %99 = getelementptr inbounds i8, i8* %98, i64 %79
  %100 = getelementptr inbounds i8, i8* %98, i64 %97
  %101 = ptrtoint i8* %100 to i64
  store i8 12, i8* %99, align 1
  %102 = getelementptr inbounds i8, i8* %99, i64 1
  %103 = ptrtoint i8* %102 to i64
  %104 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %4, i64 0, i32 0, i32 0, i32 0
  %105 = load i8*, i8** %104, align 8
  %106 = load i64, i64* %76, align 8
  %107 = ptrtoint i8* %105 to i64
  %108 = sub i64 %106, %107
  %109 = sub i64 0, %108
  %110 = getelementptr inbounds i8, i8* %99, i64 %109
  %111 = ptrtoint i8* %110 to i64
  %112 = icmp sgt i64 %108, 0
  br i1 %112, label %113, label %115

113:                                              ; preds = %96
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %110, i8* align 1 %105, i64 %108, i1 false) #15
  %114 = load i8*, i8** %104, align 8
  br label %115

115:                                              ; preds = %113, %96
  %116 = phi i8* [ %105, %96 ], [ %114, %113 ]
  store i64 %111, i64* %77, align 8
  store i64 %103, i64* %76, align 8
  store i64 %101, i64* %85, align 8
  %117 = icmp eq i8* %116, null
  br i1 %117, label %119, label %118

118:                                              ; preds = %115
  tail call void @_ZdlPv(i8* nonnull %116) #19
  br label %119

119:                                              ; preds = %70, %115, %118
  %120 = add nsw i32 %1, -18
  %121 = sext i32 %120 to i64
  tail call void @_ZN2v88internal16SnapshotByteSink6PutIntEmPKc(%"class.v8::internal::SnapshotByteSink"* %4, i64 %121, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i64 0, i64 0)) #15
  br label %122

122:                                              ; preds = %62, %59, %14, %119
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer30ResolvePendingForwardReferenceEi(%"class.v8::internal::Serializer"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %5, %7
  %9 = ptrtoint i8* %7 to i64
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  store i8 25, i8* %5, align 1
  %11 = getelementptr inbounds i8, i8* %5, i64 1
  %12 = ptrtoint i8* %11 to i64
  %13 = bitcast i8** %4 to i64*
  store i64 %12, i64* %13, align 8
  br label %59

14:                                               ; preds = %2
  %15 = ptrtoint i8* %5 to i64
  %16 = bitcast i8** %4 to i64*
  %17 = bitcast %"class.v8::internal::SnapshotByteSink"* %3 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %15, %18
  %20 = add i64 %19, 1
  %21 = icmp slt i64 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %14
  %23 = bitcast %"class.v8::internal::SnapshotByteSink"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %23) #18
  unreachable

24:                                               ; preds = %14
  %25 = bitcast i8** %6 to i64*
  %26 = sub i64 %9, %18
  %27 = icmp ult i64 %26, 4611686018427387903
  br i1 %27, label %28, label %33

28:                                               ; preds = %24
  %29 = shl i64 %26, 1
  %30 = icmp ult i64 %29, %20
  %31 = select i1 %30, i64 %20, i64 %29
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %28, %24
  %34 = phi i64 [ %31, %28 ], [ 9223372036854775807, %24 ]
  %35 = tail call i8* @_Znwm(i64 %34) #19
  br label %36

36:                                               ; preds = %33, %28
  %37 = phi i64 [ %34, %33 ], [ 0, %28 ]
  %38 = phi i8* [ %35, %33 ], [ null, %28 ]
  %39 = getelementptr inbounds i8, i8* %38, i64 %19
  %40 = getelementptr inbounds i8, i8* %38, i64 %37
  %41 = ptrtoint i8* %40 to i64
  store i8 25, i8* %39, align 1
  %42 = getelementptr inbounds i8, i8* %39, i64 1
  %43 = ptrtoint i8* %42 to i64
  %44 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %3, i64 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = load i64, i64* %16, align 8
  %47 = ptrtoint i8* %45 to i64
  %48 = sub i64 %46, %47
  %49 = sub i64 0, %48
  %50 = getelementptr inbounds i8, i8* %39, i64 %49
  %51 = ptrtoint i8* %50 to i64
  %52 = icmp sgt i64 %48, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %36
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %50, i8* align 1 %45, i64 %48, i1 false) #15
  %54 = load i8*, i8** %44, align 8
  br label %55

55:                                               ; preds = %53, %36
  %56 = phi i8* [ %45, %36 ], [ %54, %53 ]
  store i64 %51, i64* %17, align 8
  store i64 %43, i64* %16, align 8
  store i64 %41, i64* %25, align 8
  %57 = icmp eq i8* %56, null
  br i1 %57, label %59, label %58

58:                                               ; preds = %55
  tail call void @_ZdlPv(i8* nonnull %56) #19
  br label %59

59:                                               ; preds = %10, %55, %58
  %60 = sext i32 %1 to i64
  tail call void @_ZN2v88internal16SnapshotByteSink6PutIntEmPKc(%"class.v8::internal::SnapshotByteSink"* %3, i64 %60, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26, i64 0, i64 0)) #15
  %61 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 12
  %62 = load i32, i32* %61, align 8
  %63 = add nsw i32 %62, -1
  store i32 %63, i32* %61, align 8
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 11
  store i32 0, i32* %66, align 4
  br label %67

67:                                               ; preds = %65, %59
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer23RegisterObjectIsPendingENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::Serializer"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %1, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 2
  %5 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 0, i32 7, i32 0, i64 491
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %3 to i32
  %9 = trunc i64 %7 to i32
  %10 = icmp eq i32 %8, %9
  br i1 %10, label %15, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 14
  %13 = bitcast %"class.v8::internal::IdentityMap.1191"* %12 to %"class.v8::internal::IdentityMapBase"*
  %14 = tail call { i64*, i8 } @_ZN2v88internal15IdentityMapBase17FindOrInsertEntryEm(%"class.v8::internal::IdentityMapBase"* %13, i64 %3) #15
  br label %15

15:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer20ResolvePendingObjectENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::Serializer"*, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = load i64, i64* %1, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 2
  %6 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 0, i32 7, i32 0, i64 491
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %4 to i32
  %10 = trunc i64 %8 to i32
  %11 = icmp eq i32 %9, %10
  br i1 %11, label %44, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 14
  %14 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #15
  %15 = bitcast %"class.v8::internal::IdentityMap.1191"* %13 to %"class.v8::internal::IdentityMapBase"*
  %16 = call zeroext i1 @_ZN2v88internal15IdentityMapBase11DeleteEntryEmPm(%"class.v8::internal::IdentityMapBase"* %15, i64 %4, i64* nonnull %3) #15
  %17 = bitcast i64* %3 to %"class.std::__1::vector.822"**
  %18 = load %"class.std::__1::vector.822"*, %"class.std::__1::vector.822"** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #15
  br i1 %16, label %20, label %19, !prof !3

19:                                               ; preds = %12
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.28, i64 0, i64 0)) #18
  unreachable

20:                                               ; preds = %12
  %21 = icmp eq %"class.std::__1::vector.822"* %18, null
  br i1 %21, label %44, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.std::__1::vector.822", %"class.std::__1::vector.822"* %18, i64 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::vector.822", %"class.std::__1::vector.822"* %18, i64 0, i32 0, i32 1
  %26 = load i32*, i32** %25, align 8
  %27 = icmp eq i32* %24, %26
  br i1 %27, label %35, label %28

28:                                               ; preds = %22, %28
  %29 = phi i32* [ %31, %28 ], [ %24, %22 ]
  %30 = load i32, i32* %29, align 4
  call void @_ZN2v88internal10Serializer30ResolvePendingForwardReferenceEi(%"class.v8::internal::Serializer"* %0, i32 %30)
  %31 = getelementptr inbounds i32, i32* %29, i64 1
  %32 = icmp eq i32* %31, %26
  br i1 %32, label %33, label %28

33:                                               ; preds = %28
  %34 = load i32*, i32** %23, align 8
  br label %35

35:                                               ; preds = %33, %22
  %36 = phi i32* [ %34, %33 ], [ %24, %22 ]
  %37 = icmp eq i32* %36, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %35
  %39 = ptrtoint i32* %36 to i64
  %40 = bitcast i32** %25 to i64*
  store i64 %39, i64* %40, align 8
  %41 = bitcast i32* %36 to i8*
  call void @_ZdlPv(i8* %41) #19
  br label %42

42:                                               ; preds = %35, %38
  %43 = bitcast %"class.std::__1::vector.822"* %18 to i8*
  call void @_ZdlPv(i8* %43) #19
  br label %44

44:                                               ; preds = %42, %20, %2
  ret void
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer3PadEi(%"class.v8::internal::Serializer"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %6 = bitcast i8** %4 to i64*
  %7 = bitcast %"class.v8::internal::SnapshotByteSink"* %3 to i64*
  %8 = bitcast i8** %5 to i64*
  %9 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %4, align 8
  %11 = load i8*, i8** %5, align 8
  %12 = icmp eq i8* %10, %11
  %13 = ptrtoint i8* %11 to i64
  br i1 %12, label %17, label %14

14:                                               ; preds = %2
  store i8 10, i8* %10, align 1
  %15 = getelementptr inbounds i8, i8* %10, i64 1
  %16 = ptrtoint i8* %15 to i64
  store i64 %16, i64* %6, align 8
  br label %59

17:                                               ; preds = %2
  %18 = ptrtoint i8* %10 to i64
  %19 = load i64, i64* %7, align 8
  %20 = sub i64 %18, %19
  %21 = add i64 %20, 1
  %22 = icmp slt i64 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %170, %124, %17
  %24 = bitcast %"class.v8::internal::SnapshotByteSink"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %24) #18
  unreachable

25:                                               ; preds = %17
  %26 = sub i64 %13, %19
  %27 = icmp ult i64 %26, 4611686018427387903
  br i1 %27, label %28, label %33

28:                                               ; preds = %25
  %29 = shl i64 %26, 1
  %30 = icmp ult i64 %29, %21
  %31 = select i1 %30, i64 %21, i64 %29
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %28, %25
  %34 = phi i64 [ %31, %28 ], [ 9223372036854775807, %25 ]
  %35 = tail call i8* @_Znwm(i64 %34) #19
  br label %36

36:                                               ; preds = %33, %28
  %37 = phi i64 [ %34, %33 ], [ 0, %28 ]
  %38 = phi i8* [ %35, %33 ], [ null, %28 ]
  %39 = getelementptr inbounds i8, i8* %38, i64 %20
  %40 = getelementptr inbounds i8, i8* %38, i64 %37
  %41 = ptrtoint i8* %40 to i64
  store i8 10, i8* %39, align 1
  %42 = getelementptr inbounds i8, i8* %39, i64 1
  %43 = ptrtoint i8* %42 to i64
  %44 = load i8*, i8** %9, align 8
  %45 = load i64, i64* %6, align 8
  %46 = ptrtoint i8* %44 to i64
  %47 = sub i64 %45, %46
  %48 = sub i64 0, %47
  %49 = getelementptr inbounds i8, i8* %39, i64 %48
  %50 = ptrtoint i8* %49 to i64
  %51 = icmp sgt i64 %47, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %36
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %49, i8* align 1 %44, i64 %47, i1 false) #15
  %53 = load i8*, i8** %9, align 8
  br label %54

54:                                               ; preds = %52, %36
  %55 = phi i8* [ %44, %36 ], [ %53, %52 ]
  store i64 %50, i64* %7, align 8
  store i64 %43, i64* %6, align 8
  store i64 %41, i64* %8, align 8
  %56 = icmp eq i8* %55, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %54
  tail call void @_ZdlPv(i8* nonnull %55) #19
  %58 = load i8*, i8** %4, align 8
  br label %59

59:                                               ; preds = %14, %54, %57
  %60 = phi i8* [ %15, %14 ], [ %42, %54 ], [ %58, %57 ]
  %61 = load i8*, i8** %5, align 8
  %62 = icmp eq i8* %60, %61
  br i1 %62, label %124, label %121

63:                                               ; preds = %210, %111
  %64 = phi i8* [ %119, %111 ], [ %211, %210 ]
  %65 = phi i64 [ %113, %111 ], [ %213, %210 ]
  %66 = load i8*, i8** %5, align 8
  %67 = icmp eq i8* %64, %66
  br i1 %67, label %71, label %68

68:                                               ; preds = %63
  store i8 10, i8* %64, align 1
  %69 = getelementptr inbounds i8, i8* %64, i64 1
  %70 = ptrtoint i8* %69 to i64
  store i64 %70, i64* %6, align 8
  br label %111

71:                                               ; preds = %63
  %72 = ptrtoint i8* %66 to i64
  %73 = sub i64 %72, %65
  %74 = add i64 %73, 1
  %75 = icmp slt i64 %74, 0
  br i1 %75, label %76, label %78

76:                                               ; preds = %71
  %77 = bitcast %"class.v8::internal::SnapshotByteSink"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %77) #18
  unreachable

78:                                               ; preds = %71
  %79 = icmp ult i64 %73, 4611686018427387903
  br i1 %79, label %80, label %85

80:                                               ; preds = %78
  %81 = shl i64 %73, 1
  %82 = icmp ult i64 %81, %74
  %83 = select i1 %82, i64 %74, i64 %81
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %88, label %85

85:                                               ; preds = %80, %78
  %86 = phi i64 [ %83, %80 ], [ 9223372036854775807, %78 ]
  %87 = tail call i8* @_Znwm(i64 %86) #19
  br label %88

88:                                               ; preds = %85, %80
  %89 = phi i64 [ %86, %85 ], [ 0, %80 ]
  %90 = phi i8* [ %87, %85 ], [ null, %80 ]
  %91 = getelementptr inbounds i8, i8* %90, i64 %73
  %92 = getelementptr inbounds i8, i8* %90, i64 %89
  %93 = ptrtoint i8* %92 to i64
  store i8 10, i8* %91, align 1
  %94 = getelementptr inbounds i8, i8* %91, i64 1
  %95 = ptrtoint i8* %94 to i64
  %96 = load i8*, i8** %9, align 8
  %97 = load i64, i64* %6, align 8
  %98 = ptrtoint i8* %96 to i64
  %99 = sub i64 %97, %98
  %100 = sub i64 0, %99
  %101 = getelementptr inbounds i8, i8* %91, i64 %100
  %102 = ptrtoint i8* %101 to i64
  %103 = icmp sgt i64 %99, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %88
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %101, i8* align 1 %96, i64 %99, i1 false) #15
  %105 = load i8*, i8** %9, align 8
  br label %106

106:                                              ; preds = %104, %88
  %107 = phi i8* [ %96, %88 ], [ %105, %104 ]
  store i64 %102, i64* %7, align 8
  store i64 %95, i64* %6, align 8
  store i64 %93, i64* %8, align 8
  %108 = icmp eq i8* %107, null
  br i1 %108, label %111, label %109

109:                                              ; preds = %106
  tail call void @_ZdlPv(i8* nonnull %107) #19
  %110 = load i64, i64* %6, align 8
  br label %111

111:                                              ; preds = %68, %106, %109
  %112 = phi i64 [ %70, %68 ], [ %95, %106 ], [ %110, %109 ]
  %113 = load i64, i64* %7, align 8
  %114 = sub i64 %112, %113
  %115 = trunc i64 %114 to i32
  %116 = add nsw i32 %115, %1
  %117 = and i32 %116, 7
  %118 = icmp eq i32 %117, 0
  %119 = inttoptr i64 %112 to i8*
  br i1 %118, label %120, label %63

120:                                              ; preds = %111, %210
  ret void

121:                                              ; preds = %59
  store i8 10, i8* %60, align 1
  %122 = getelementptr inbounds i8, i8* %60, i64 1
  %123 = ptrtoint i8* %122 to i64
  store i64 %123, i64* %6, align 8
  br label %163

124:                                              ; preds = %59
  %125 = ptrtoint i8* %61 to i64
  %126 = load i64, i64* %7, align 8
  %127 = sub i64 %125, %126
  %128 = add i64 %127, 1
  %129 = icmp slt i64 %128, 0
  br i1 %129, label %23, label %130

130:                                              ; preds = %124
  %131 = icmp ult i64 %127, 4611686018427387903
  br i1 %131, label %132, label %137

132:                                              ; preds = %130
  %133 = shl i64 %127, 1
  %134 = icmp ult i64 %133, %128
  %135 = select i1 %134, i64 %128, i64 %133
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %140, label %137

137:                                              ; preds = %132, %130
  %138 = phi i64 [ %135, %132 ], [ 9223372036854775807, %130 ]
  %139 = tail call i8* @_Znwm(i64 %138) #19
  br label %140

140:                                              ; preds = %137, %132
  %141 = phi i64 [ %138, %137 ], [ 0, %132 ]
  %142 = phi i8* [ %139, %137 ], [ null, %132 ]
  %143 = getelementptr inbounds i8, i8* %142, i64 %127
  %144 = getelementptr inbounds i8, i8* %142, i64 %141
  %145 = ptrtoint i8* %144 to i64
  store i8 10, i8* %143, align 1
  %146 = getelementptr inbounds i8, i8* %143, i64 1
  %147 = ptrtoint i8* %146 to i64
  %148 = load i8*, i8** %9, align 8
  %149 = load i64, i64* %6, align 8
  %150 = ptrtoint i8* %148 to i64
  %151 = sub i64 %149, %150
  %152 = sub i64 0, %151
  %153 = getelementptr inbounds i8, i8* %143, i64 %152
  %154 = ptrtoint i8* %153 to i64
  %155 = icmp sgt i64 %151, 0
  br i1 %155, label %156, label %158

156:                                              ; preds = %140
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %153, i8* align 1 %148, i64 %151, i1 false) #15
  %157 = load i8*, i8** %9, align 8
  br label %158

158:                                              ; preds = %156, %140
  %159 = phi i8* [ %148, %140 ], [ %157, %156 ]
  store i64 %154, i64* %7, align 8
  store i64 %147, i64* %6, align 8
  store i64 %145, i64* %8, align 8
  %160 = icmp eq i8* %159, null
  br i1 %160, label %163, label %161

161:                                              ; preds = %158
  tail call void @_ZdlPv(i8* nonnull %159) #19
  %162 = load i8*, i8** %4, align 8
  br label %163

163:                                              ; preds = %161, %158, %121
  %164 = phi i8* [ %162, %161 ], [ %146, %158 ], [ %122, %121 ]
  %165 = load i8*, i8** %5, align 8
  %166 = icmp eq i8* %164, %165
  br i1 %166, label %170, label %167

167:                                              ; preds = %163
  store i8 10, i8* %164, align 1
  %168 = getelementptr inbounds i8, i8* %164, i64 1
  %169 = ptrtoint i8* %168 to i64
  store i64 %169, i64* %6, align 8
  br label %210

170:                                              ; preds = %163
  %171 = ptrtoint i8* %165 to i64
  %172 = load i64, i64* %7, align 8
  %173 = sub i64 %171, %172
  %174 = add i64 %173, 1
  %175 = icmp slt i64 %174, 0
  br i1 %175, label %23, label %176

176:                                              ; preds = %170
  %177 = icmp ult i64 %173, 4611686018427387903
  br i1 %177, label %178, label %183

178:                                              ; preds = %176
  %179 = shl i64 %173, 1
  %180 = icmp ult i64 %179, %174
  %181 = select i1 %180, i64 %174, i64 %179
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %186, label %183

183:                                              ; preds = %178, %176
  %184 = phi i64 [ %181, %178 ], [ 9223372036854775807, %176 ]
  %185 = tail call i8* @_Znwm(i64 %184) #19
  br label %186

186:                                              ; preds = %183, %178
  %187 = phi i64 [ %184, %183 ], [ 0, %178 ]
  %188 = phi i8* [ %185, %183 ], [ null, %178 ]
  %189 = getelementptr inbounds i8, i8* %188, i64 %173
  %190 = getelementptr inbounds i8, i8* %188, i64 %187
  %191 = ptrtoint i8* %190 to i64
  store i8 10, i8* %189, align 1
  %192 = getelementptr inbounds i8, i8* %189, i64 1
  %193 = ptrtoint i8* %192 to i64
  %194 = load i8*, i8** %9, align 8
  %195 = load i64, i64* %6, align 8
  %196 = ptrtoint i8* %194 to i64
  %197 = sub i64 %195, %196
  %198 = sub i64 0, %197
  %199 = getelementptr inbounds i8, i8* %189, i64 %198
  %200 = ptrtoint i8* %199 to i64
  %201 = icmp sgt i64 %197, 0
  br i1 %201, label %202, label %204

202:                                              ; preds = %186
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %199, i8* align 1 %194, i64 %197, i1 false) #15
  %203 = load i8*, i8** %9, align 8
  br label %204

204:                                              ; preds = %202, %186
  %205 = phi i8* [ %194, %186 ], [ %203, %202 ]
  store i64 %200, i64* %7, align 8
  store i64 %193, i64* %6, align 8
  store i64 %191, i64* %8, align 8
  %206 = icmp eq i8* %205, null
  br i1 %206, label %210, label %207

207:                                              ; preds = %204
  tail call void @_ZdlPv(i8* nonnull %205) #19
  %208 = load i64, i64* %6, align 8
  %209 = inttoptr i64 %208 to i8*
  br label %210

210:                                              ; preds = %207, %204, %167
  %211 = phi i8* [ %209, %207 ], [ %192, %204 ], [ %168, %167 ]
  %212 = phi i64 [ %208, %207 ], [ %193, %204 ], [ %169, %167 ]
  %213 = load i64, i64* %7, align 8
  %214 = sub i64 %212, %213
  %215 = trunc i64 %214 to i32
  %216 = add nsw i32 %215, %1
  %217 = and i32 %216, 7
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %120, label %63
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer24InitializeCodeAddressMapEv(%"class.v8::internal::Serializer"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 2
  %3 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  tail call void @_ZN2v88internal7Isolate28InitializeLoggingAndCountersEv(%"class.v8::internal::Isolate"* %3) #15
  %4 = tail call i8* @_Znwm(i64 40) #19
  %5 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  %6 = bitcast i8* %4 to %"class.v8::internal::CodeEventLogger"*
  tail call void @_ZN2v88internal15CodeEventLoggerC2EPNS0_7IsolateE(%"class.v8::internal::CodeEventLogger"* nonnull %6, %"class.v8::internal::Isolate"* %5) #15
  %7 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN2v88internal14CodeAddressMapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %4, i64 24
  %9 = getelementptr inbounds i8, i8* %4, i64 32
  %10 = bitcast i8* %9 to i32*
  %11 = bitcast i8* %9 to i64*
  store i64 0, i64* %11, align 8
  %12 = tail call noalias i8* @malloc(i64 192) #15
  %13 = bitcast i8* %8 to %"struct.v8::base::TemplateHashMapEntry.1181"**
  %14 = bitcast i8* %8 to i8**
  store i8* %12, i8** %14, align 8
  %15 = icmp eq i8* %12, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.70, i64 0, i64 0)) #18
  unreachable

17:                                               ; preds = %1
  store i32 8, i32* %10, align 8
  %18 = bitcast i8* %12 to i8**
  store i8* null, i8** %18, align 8
  %19 = getelementptr inbounds i8, i8* %12, i64 24
  %20 = bitcast i8* %19 to i8**
  store i8* null, i8** %20, align 8
  %21 = getelementptr inbounds i8, i8* %12, i64 48
  %22 = bitcast i8* %21 to i8**
  store i8* null, i8** %22, align 8
  %23 = getelementptr inbounds i8, i8* %12, i64 72
  %24 = bitcast i8* %23 to i8**
  store i8* null, i8** %24, align 8
  %25 = getelementptr inbounds i8, i8* %12, i64 96
  %26 = bitcast i8* %25 to i8**
  store i8* null, i8** %26, align 8
  %27 = getelementptr inbounds i8, i8* %12, i64 120
  %28 = bitcast i8* %27 to i8**
  store i8* null, i8** %28, align 8
  %29 = getelementptr inbounds i8, i8* %12, i64 144
  %30 = bitcast i8* %29 to i8**
  store i8* null, i8** %30, align 8
  %31 = load i32, i32* %10, align 8
  %32 = icmp ugt i32 %31, 7
  br i1 %32, label %33, label %41

33:                                               ; preds = %17, %33
  %34 = phi i64 [ %37, %33 ], [ 7, %17 ]
  %35 = load %"struct.v8::base::TemplateHashMapEntry.1181"*, %"struct.v8::base::TemplateHashMapEntry.1181"** %13, align 8
  %36 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %35, i64 %34, i32 0
  store i8* null, i8** %36, align 8
  %37 = add nuw nsw i64 %34, 1
  %38 = load i32, i32* %10, align 8
  %39 = zext i32 %38 to i64
  %40 = icmp ult i64 %37, %39
  br i1 %40, label %33, label %41

41:                                               ; preds = %33, %17
  %42 = getelementptr inbounds i8, i8* %4, i64 36
  %43 = bitcast i8* %42 to i32*
  store i32 0, i32* %43, align 4
  %44 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 21
  %45 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %44, align 8
  %46 = bitcast i8* %4 to %"class.v8::internal::CodeEventListener"*
  tail call void @_ZN2v88internal6Logger20AddCodeEventListenerEPNS0_17CodeEventListenerE(%"class.v8::internal::Logger"* %45, %"class.v8::internal::CodeEventListener"* nonnull %46) #15
  %47 = ptrtoint i8* %4 to i64
  %48 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 7
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.1170", %"class.std::__1::unique_ptr.1170"* %48, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.v8::internal::CodeAddressMap"*, %"class.v8::internal::CodeAddressMap"** %49, align 8
  %51 = bitcast %"class.std::__1::unique_ptr.1170"* %48 to i64*
  store i64 %47, i64* %51, align 8
  %52 = icmp eq %"class.v8::internal::CodeAddressMap"* %50, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %41
  %54 = bitcast %"class.v8::internal::CodeAddressMap"* %50 to void (%"class.v8::internal::CodeAddressMap"*)***
  %55 = load void (%"class.v8::internal::CodeAddressMap"*)**, void (%"class.v8::internal::CodeAddressMap"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.v8::internal::CodeAddressMap"*)*, void (%"class.v8::internal::CodeAddressMap"*)** %55, i64 1
  %57 = load void (%"class.v8::internal::CodeAddressMap"*)*, void (%"class.v8::internal::CodeAddressMap"*)** %56, align 8
  tail call void %57(%"class.v8::internal::CodeAddressMap"* nonnull %50) #15
  br label %58

58:                                               ; preds = %53, %41
  ret void
}

declare void @_ZN2v88internal7Isolate28InitializeLoggingAndCountersEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal10Serializer8CopyCodeENS0_4CodeE(%"class.v8::internal::Serializer"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 8
  %4 = bitcast %"class.std::__1::vector"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 8, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  store i64 %5, i64* %7, align 8
  %8 = add i64 %1, 19
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = add i64 %1, 23
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = add i32 %10, 95
  %15 = add i32 %14, %13
  %16 = and i32 %15, -32
  %17 = inttoptr i64 %5 to i8*
  %18 = add i64 %1, -1
  %19 = inttoptr i64 %18 to i8*
  %20 = sext i32 %16 to i64
  %21 = add i64 %18, %20
  %22 = inttoptr i64 %21 to i8*
  %23 = tail call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueENS_11__wrap_iterIS5_EEE4typeENSB_IPKhEES7_S7_(%"class.std::__1::vector"* %3, i8* %17, i8* %19, i8* %22)
  %24 = load i64, i64* %4, align 8
  %25 = add i64 %24, 1
  ret i64 %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueENS_11__wrap_iterIS5_EEE4typeENSB_IPKhEES7_S7_(%"class.std::__1::vector"*, i8*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint i8* %3 to i64
  %8 = ptrtoint i8* %2 to i64
  %9 = sub i64 %7, %8
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %11, label %414

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = ptrtoint i8* %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %9, %18
  %20 = bitcast i8** %15 to i64*
  br i1 %19, label %164, label %21

21:                                               ; preds = %11
  %22 = sub i64 %17, %5
  %23 = icmp sgt i64 %9, %22
  br i1 %23, label %24, label %37

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %2, i64 %22
  %26 = ptrtoint i8* %25 to i64
  %27 = sub i64 %7, %26
  %28 = icmp sgt i64 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %25, i64 %27, i1 false) #15
  %30 = getelementptr inbounds i8, i8* %16, i64 %27
  %31 = ptrtoint i8* %30 to i64
  br label %32

32:                                               ; preds = %29, %24
  %33 = phi i64 [ %31, %29 ], [ %17, %24 ]
  store i64 %33, i64* %20, align 8
  %34 = icmp sgt i64 %22, 0
  br i1 %34, label %35, label %414

35:                                               ; preds = %32
  %36 = inttoptr i64 %33 to i8*
  br label %37

37:                                               ; preds = %35, %21
  %38 = phi i64 [ %33, %35 ], [ %17, %21 ]
  %39 = phi i8* [ %36, %35 ], [ %16, %21 ]
  %40 = phi i8* [ %25, %35 ], [ %3, %21 ]
  %41 = getelementptr inbounds i8, i8* %1, i64 %9
  %42 = ptrtoint i8* %41 to i64
  %43 = sub i64 %38, %42
  %44 = getelementptr inbounds i8, i8* %1, i64 %43
  %45 = icmp ult i8* %44, %16
  br i1 %45, label %46, label %146

46:                                               ; preds = %37
  %47 = sub i64 %9, %38
  %48 = getelementptr i8, i8* %16, i64 %47
  %49 = ptrtoint i8* %48 to i64
  %50 = icmp ult i8* %48, inttoptr (i64 32 to i8*)
  br i1 %50, label %51, label %54

51:                                               ; preds = %141, %54, %46
  %52 = phi i8* [ %44, %54 ], [ %44, %46 ], [ %64, %141 ]
  %53 = phi i8* [ %39, %54 ], [ %39, %46 ], [ %65, %141 ]
  br label %152

54:                                               ; preds = %46
  %55 = sub i64 %9, %38
  %56 = getelementptr i8, i8* %16, i64 %55
  %57 = ptrtoint i8* %56 to i64
  %58 = getelementptr i8, i8* %39, i64 %57
  %59 = icmp ult i8* %39, %16
  %60 = icmp ult i8* %44, %58
  %61 = and i1 %59, %60
  br i1 %61, label %51, label %62

62:                                               ; preds = %54
  %63 = and i64 %49, -32
  %64 = getelementptr i8, i8* %44, i64 %63
  %65 = getelementptr i8, i8* %39, i64 %63
  %66 = add i64 %63, -32
  %67 = lshr exact i64 %66, 5
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 3
  %70 = icmp ult i64 %66, 96
  br i1 %70, label %122, label %71

71:                                               ; preds = %62
  %72 = sub nsw i64 %68, %69
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi i64 [ 0, %71 ], [ %119, %73 ]
  %75 = phi i64 [ %72, %71 ], [ %120, %73 ]
  %76 = getelementptr i8, i8* %44, i64 %74
  %77 = getelementptr i8, i8* %39, i64 %74
  %78 = bitcast i8* %76 to <16 x i8>*
  %79 = load <16 x i8>, <16 x i8>* %78, align 1, !alias.scope !4
  %80 = getelementptr i8, i8* %76, i64 16
  %81 = bitcast i8* %80 to <16 x i8>*
  %82 = load <16 x i8>, <16 x i8>* %81, align 1, !alias.scope !4
  %83 = bitcast i8* %77 to <16 x i8>*
  store <16 x i8> %79, <16 x i8>* %83, align 1, !alias.scope !7, !noalias !4
  %84 = getelementptr i8, i8* %77, i64 16
  %85 = bitcast i8* %84 to <16 x i8>*
  store <16 x i8> %82, <16 x i8>* %85, align 1, !alias.scope !7, !noalias !4
  %86 = or i64 %74, 32
  %87 = getelementptr i8, i8* %44, i64 %86
  %88 = getelementptr i8, i8* %39, i64 %86
  %89 = bitcast i8* %87 to <16 x i8>*
  %90 = load <16 x i8>, <16 x i8>* %89, align 1, !alias.scope !4
  %91 = getelementptr i8, i8* %87, i64 16
  %92 = bitcast i8* %91 to <16 x i8>*
  %93 = load <16 x i8>, <16 x i8>* %92, align 1, !alias.scope !4
  %94 = bitcast i8* %88 to <16 x i8>*
  store <16 x i8> %90, <16 x i8>* %94, align 1, !alias.scope !7, !noalias !4
  %95 = getelementptr i8, i8* %88, i64 16
  %96 = bitcast i8* %95 to <16 x i8>*
  store <16 x i8> %93, <16 x i8>* %96, align 1, !alias.scope !7, !noalias !4
  %97 = or i64 %74, 64
  %98 = getelementptr i8, i8* %44, i64 %97
  %99 = getelementptr i8, i8* %39, i64 %97
  %100 = bitcast i8* %98 to <16 x i8>*
  %101 = load <16 x i8>, <16 x i8>* %100, align 1, !alias.scope !4
  %102 = getelementptr i8, i8* %98, i64 16
  %103 = bitcast i8* %102 to <16 x i8>*
  %104 = load <16 x i8>, <16 x i8>* %103, align 1, !alias.scope !4
  %105 = bitcast i8* %99 to <16 x i8>*
  store <16 x i8> %101, <16 x i8>* %105, align 1, !alias.scope !7, !noalias !4
  %106 = getelementptr i8, i8* %99, i64 16
  %107 = bitcast i8* %106 to <16 x i8>*
  store <16 x i8> %104, <16 x i8>* %107, align 1, !alias.scope !7, !noalias !4
  %108 = or i64 %74, 96
  %109 = getelementptr i8, i8* %44, i64 %108
  %110 = getelementptr i8, i8* %39, i64 %108
  %111 = bitcast i8* %109 to <16 x i8>*
  %112 = load <16 x i8>, <16 x i8>* %111, align 1, !alias.scope !4
  %113 = getelementptr i8, i8* %109, i64 16
  %114 = bitcast i8* %113 to <16 x i8>*
  %115 = load <16 x i8>, <16 x i8>* %114, align 1, !alias.scope !4
  %116 = bitcast i8* %110 to <16 x i8>*
  store <16 x i8> %112, <16 x i8>* %116, align 1, !alias.scope !7, !noalias !4
  %117 = getelementptr i8, i8* %110, i64 16
  %118 = bitcast i8* %117 to <16 x i8>*
  store <16 x i8> %115, <16 x i8>* %118, align 1, !alias.scope !7, !noalias !4
  %119 = add i64 %74, 128
  %120 = add i64 %75, -4
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %73, !llvm.loop !9

122:                                              ; preds = %73, %62
  %123 = phi i64 [ 0, %62 ], [ %119, %73 ]
  %124 = icmp eq i64 %69, 0
  br i1 %124, label %141, label %125

125:                                              ; preds = %122, %125
  %126 = phi i64 [ %138, %125 ], [ %123, %122 ]
  %127 = phi i64 [ %139, %125 ], [ %69, %122 ]
  %128 = getelementptr i8, i8* %44, i64 %126
  %129 = getelementptr i8, i8* %39, i64 %126
  %130 = bitcast i8* %128 to <16 x i8>*
  %131 = load <16 x i8>, <16 x i8>* %130, align 1, !alias.scope !4
  %132 = getelementptr i8, i8* %128, i64 16
  %133 = bitcast i8* %132 to <16 x i8>*
  %134 = load <16 x i8>, <16 x i8>* %133, align 1, !alias.scope !4
  %135 = bitcast i8* %129 to <16 x i8>*
  store <16 x i8> %131, <16 x i8>* %135, align 1, !alias.scope !7, !noalias !4
  %136 = getelementptr i8, i8* %129, i64 16
  %137 = bitcast i8* %136 to <16 x i8>*
  store <16 x i8> %134, <16 x i8>* %137, align 1, !alias.scope !7, !noalias !4
  %138 = add i64 %126, 32
  %139 = add i64 %127, -1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %125, !llvm.loop !11

141:                                              ; preds = %125, %122
  %142 = icmp eq i64 %63, %49
  br i1 %142, label %143, label %51

143:                                              ; preds = %152, %141
  %144 = phi i8* [ %65, %141 ], [ %157, %152 ]
  %145 = ptrtoint i8* %144 to i64
  br label %146

146:                                              ; preds = %143, %37
  %147 = phi i64 [ %145, %143 ], [ %38, %37 ]
  store i64 %147, i64* %20, align 8
  %148 = icmp eq i64 %43, 0
  br i1 %148, label %159, label %149

149:                                              ; preds = %146
  %150 = sub i64 0, %43
  %151 = getelementptr inbounds i8, i8* %39, i64 %150
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %151, i8* align 1 %1, i64 %43, i1 false) #15
  br label %159

152:                                              ; preds = %51, %152
  %153 = phi i8* [ %156, %152 ], [ %52, %51 ]
  %154 = phi i8* [ %157, %152 ], [ %53, %51 ]
  %155 = load i8, i8* %153, align 1
  store i8 %155, i8* %154, align 1
  %156 = getelementptr inbounds i8, i8* %153, i64 1
  %157 = getelementptr inbounds i8, i8* %154, i64 1
  %158 = icmp eq i8* %156, %16
  br i1 %158, label %143, label %152, !llvm.loop !13

159:                                              ; preds = %146, %149
  %160 = ptrtoint i8* %40 to i64
  %161 = sub i64 %160, %8
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %414, label %163

163:                                              ; preds = %159
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 %161, i1 false) #15
  br label %414

164:                                              ; preds = %11
  %165 = bitcast %"class.std::__1::vector"* %0 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = sub i64 %17, %166
  %168 = add i64 %167, %9
  %169 = icmp slt i64 %168, 0
  br i1 %169, label %170, label %172

170:                                              ; preds = %164
  %171 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %171) #18
  unreachable

172:                                              ; preds = %164
  %173 = sub i64 %14, %166
  %174 = icmp ult i64 %173, 4611686018427387903
  br i1 %174, label %177, label %175

175:                                              ; preds = %172
  %176 = sub i64 %5, %166
  br label %183

177:                                              ; preds = %172
  %178 = shl i64 %173, 1
  %179 = icmp ult i64 %178, %168
  %180 = select i1 %179, i64 %168, i64 %178
  %181 = sub i64 %5, %166
  %182 = icmp eq i64 %180, 0
  br i1 %182, label %187, label %183

183:                                              ; preds = %175, %177
  %184 = phi i64 [ %176, %175 ], [ %181, %177 ]
  %185 = phi i64 [ 9223372036854775807, %175 ], [ %180, %177 ]
  %186 = tail call i8* @_Znwm(i64 %185) #19
  br label %187

187:                                              ; preds = %177, %183
  %188 = phi i64 [ %184, %183 ], [ %181, %177 ]
  %189 = phi i64 [ %185, %183 ], [ 0, %177 ]
  %190 = phi i8* [ %186, %183 ], [ null, %177 ]
  %191 = getelementptr inbounds i8, i8* %190, i64 %188
  %192 = getelementptr inbounds i8, i8* %190, i64 %189
  %193 = getelementptr inbounds i8, i8* %191, i64 %9
  %194 = icmp ult i64 %9, 32
  br i1 %194, label %280, label %195

195:                                              ; preds = %187
  %196 = icmp ult i8* %191, %3
  %197 = icmp ugt i8* %193, %2
  %198 = and i1 %196, %197
  br i1 %198, label %280, label %199

199:                                              ; preds = %195
  %200 = and i64 %9, -32
  %201 = getelementptr i8, i8* %191, i64 %200
  %202 = getelementptr i8, i8* %2, i64 %200
  %203 = add i64 %200, -32
  %204 = lshr exact i64 %203, 5
  %205 = add nuw nsw i64 %204, 1
  %206 = and i64 %205, 3
  %207 = icmp ult i64 %203, 96
  br i1 %207, label %259, label %208

208:                                              ; preds = %199
  %209 = sub nsw i64 %205, %206
  br label %210

210:                                              ; preds = %210, %208
  %211 = phi i64 [ 0, %208 ], [ %256, %210 ]
  %212 = phi i64 [ %209, %208 ], [ %257, %210 ]
  %213 = getelementptr i8, i8* %191, i64 %211
  %214 = getelementptr i8, i8* %2, i64 %211
  %215 = bitcast i8* %214 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !14
  %217 = getelementptr i8, i8* %214, i64 16
  %218 = bitcast i8* %217 to <16 x i8>*
  %219 = load <16 x i8>, <16 x i8>* %218, align 1, !alias.scope !14
  %220 = bitcast i8* %213 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %220, align 1, !alias.scope !17, !noalias !14
  %221 = getelementptr i8, i8* %213, i64 16
  %222 = bitcast i8* %221 to <16 x i8>*
  store <16 x i8> %219, <16 x i8>* %222, align 1, !alias.scope !17, !noalias !14
  %223 = or i64 %211, 32
  %224 = getelementptr i8, i8* %191, i64 %223
  %225 = getelementptr i8, i8* %2, i64 %223
  %226 = bitcast i8* %225 to <16 x i8>*
  %227 = load <16 x i8>, <16 x i8>* %226, align 1, !alias.scope !14
  %228 = getelementptr i8, i8* %225, i64 16
  %229 = bitcast i8* %228 to <16 x i8>*
  %230 = load <16 x i8>, <16 x i8>* %229, align 1, !alias.scope !14
  %231 = bitcast i8* %224 to <16 x i8>*
  store <16 x i8> %227, <16 x i8>* %231, align 1, !alias.scope !17, !noalias !14
  %232 = getelementptr i8, i8* %224, i64 16
  %233 = bitcast i8* %232 to <16 x i8>*
  store <16 x i8> %230, <16 x i8>* %233, align 1, !alias.scope !17, !noalias !14
  %234 = or i64 %211, 64
  %235 = getelementptr i8, i8* %191, i64 %234
  %236 = getelementptr i8, i8* %2, i64 %234
  %237 = bitcast i8* %236 to <16 x i8>*
  %238 = load <16 x i8>, <16 x i8>* %237, align 1, !alias.scope !14
  %239 = getelementptr i8, i8* %236, i64 16
  %240 = bitcast i8* %239 to <16 x i8>*
  %241 = load <16 x i8>, <16 x i8>* %240, align 1, !alias.scope !14
  %242 = bitcast i8* %235 to <16 x i8>*
  store <16 x i8> %238, <16 x i8>* %242, align 1, !alias.scope !17, !noalias !14
  %243 = getelementptr i8, i8* %235, i64 16
  %244 = bitcast i8* %243 to <16 x i8>*
  store <16 x i8> %241, <16 x i8>* %244, align 1, !alias.scope !17, !noalias !14
  %245 = or i64 %211, 96
  %246 = getelementptr i8, i8* %191, i64 %245
  %247 = getelementptr i8, i8* %2, i64 %245
  %248 = bitcast i8* %247 to <16 x i8>*
  %249 = load <16 x i8>, <16 x i8>* %248, align 1, !alias.scope !14
  %250 = getelementptr i8, i8* %247, i64 16
  %251 = bitcast i8* %250 to <16 x i8>*
  %252 = load <16 x i8>, <16 x i8>* %251, align 1, !alias.scope !14
  %253 = bitcast i8* %246 to <16 x i8>*
  store <16 x i8> %249, <16 x i8>* %253, align 1, !alias.scope !17, !noalias !14
  %254 = getelementptr i8, i8* %246, i64 16
  %255 = bitcast i8* %254 to <16 x i8>*
  store <16 x i8> %252, <16 x i8>* %255, align 1, !alias.scope !17, !noalias !14
  %256 = add i64 %211, 128
  %257 = add i64 %212, -4
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %210, !llvm.loop !19

259:                                              ; preds = %210, %199
  %260 = phi i64 [ 0, %199 ], [ %256, %210 ]
  %261 = icmp eq i64 %206, 0
  br i1 %261, label %278, label %262

262:                                              ; preds = %259, %262
  %263 = phi i64 [ %275, %262 ], [ %260, %259 ]
  %264 = phi i64 [ %276, %262 ], [ %206, %259 ]
  %265 = getelementptr i8, i8* %191, i64 %263
  %266 = getelementptr i8, i8* %2, i64 %263
  %267 = bitcast i8* %266 to <16 x i8>*
  %268 = load <16 x i8>, <16 x i8>* %267, align 1, !alias.scope !14
  %269 = getelementptr i8, i8* %266, i64 16
  %270 = bitcast i8* %269 to <16 x i8>*
  %271 = load <16 x i8>, <16 x i8>* %270, align 1, !alias.scope !14
  %272 = bitcast i8* %265 to <16 x i8>*
  store <16 x i8> %268, <16 x i8>* %272, align 1, !alias.scope !17, !noalias !14
  %273 = getelementptr i8, i8* %265, i64 16
  %274 = bitcast i8* %273 to <16 x i8>*
  store <16 x i8> %271, <16 x i8>* %274, align 1, !alias.scope !17, !noalias !14
  %275 = add i64 %263, 32
  %276 = add i64 %264, -1
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %278, label %262, !llvm.loop !20

278:                                              ; preds = %262, %259
  %279 = icmp eq i64 %9, %200
  br i1 %279, label %290, label %280

280:                                              ; preds = %278, %195, %187
  %281 = phi i8* [ %191, %195 ], [ %191, %187 ], [ %201, %278 ]
  %282 = phi i8* [ %2, %195 ], [ %2, %187 ], [ %202, %278 ]
  br label %283

283:                                              ; preds = %280, %283
  %284 = phi i8* [ %287, %283 ], [ %281, %280 ]
  %285 = phi i8* [ %288, %283 ], [ %282, %280 ]
  %286 = load i8, i8* %285, align 1
  store i8 %286, i8* %284, align 1
  %287 = getelementptr inbounds i8, i8* %284, i64 1
  %288 = getelementptr inbounds i8, i8* %285, i64 1
  %289 = icmp eq i8* %193, %287
  br i1 %289, label %290, label %283, !llvm.loop !21

290:                                              ; preds = %283, %278
  %291 = ptrtoint i8* %192 to i64
  %292 = load i8*, i8** %6, align 8
  %293 = ptrtoint i8* %292 to i64
  %294 = sub i64 %5, %293
  %295 = sub i64 0, %294
  %296 = getelementptr inbounds i8, i8* %191, i64 %295
  %297 = ptrtoint i8* %296 to i64
  %298 = icmp sgt i64 %294, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %290
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %296, i8* align 1 %292, i64 %294, i1 false) #15
  br label %300

300:                                              ; preds = %299, %290
  %301 = load i8*, i8** %15, align 8
  %302 = icmp eq i8* %301, %1
  br i1 %302, label %408, label %303

303:                                              ; preds = %300
  %304 = ptrtoint i8* %301 to i64
  %305 = sub i64 %304, %5
  %306 = icmp ult i64 %305, 32
  br i1 %306, label %398, label %307

307:                                              ; preds = %303
  %308 = add i64 %188, %7
  %309 = sub i64 %308, %5
  %310 = sub i64 %309, %8
  %311 = getelementptr i8, i8* %301, i64 %310
  %312 = ptrtoint i8* %311 to i64
  %313 = getelementptr i8, i8* %190, i64 %312
  %314 = icmp ult i8* %193, %301
  %315 = icmp ugt i8* %313, %1
  %316 = and i1 %314, %315
  br i1 %316, label %398, label %317

317:                                              ; preds = %307
  %318 = and i64 %305, -32
  %319 = getelementptr i8, i8* %193, i64 %318
  %320 = getelementptr i8, i8* %1, i64 %318
  %321 = add i64 %318, -32
  %322 = lshr exact i64 %321, 5
  %323 = add nuw nsw i64 %322, 1
  %324 = and i64 %323, 3
  %325 = icmp ult i64 %321, 96
  br i1 %325, label %377, label %326

326:                                              ; preds = %317
  %327 = sub nsw i64 %323, %324
  br label %328

328:                                              ; preds = %328, %326
  %329 = phi i64 [ 0, %326 ], [ %374, %328 ]
  %330 = phi i64 [ %327, %326 ], [ %375, %328 ]
  %331 = getelementptr i8, i8* %193, i64 %329
  %332 = getelementptr i8, i8* %1, i64 %329
  %333 = bitcast i8* %332 to <16 x i8>*
  %334 = load <16 x i8>, <16 x i8>* %333, align 1, !alias.scope !22
  %335 = getelementptr i8, i8* %332, i64 16
  %336 = bitcast i8* %335 to <16 x i8>*
  %337 = load <16 x i8>, <16 x i8>* %336, align 1, !alias.scope !22
  %338 = bitcast i8* %331 to <16 x i8>*
  store <16 x i8> %334, <16 x i8>* %338, align 1, !alias.scope !25, !noalias !22
  %339 = getelementptr i8, i8* %331, i64 16
  %340 = bitcast i8* %339 to <16 x i8>*
  store <16 x i8> %337, <16 x i8>* %340, align 1, !alias.scope !25, !noalias !22
  %341 = or i64 %329, 32
  %342 = getelementptr i8, i8* %193, i64 %341
  %343 = getelementptr i8, i8* %1, i64 %341
  %344 = bitcast i8* %343 to <16 x i8>*
  %345 = load <16 x i8>, <16 x i8>* %344, align 1, !alias.scope !22
  %346 = getelementptr i8, i8* %343, i64 16
  %347 = bitcast i8* %346 to <16 x i8>*
  %348 = load <16 x i8>, <16 x i8>* %347, align 1, !alias.scope !22
  %349 = bitcast i8* %342 to <16 x i8>*
  store <16 x i8> %345, <16 x i8>* %349, align 1, !alias.scope !25, !noalias !22
  %350 = getelementptr i8, i8* %342, i64 16
  %351 = bitcast i8* %350 to <16 x i8>*
  store <16 x i8> %348, <16 x i8>* %351, align 1, !alias.scope !25, !noalias !22
  %352 = or i64 %329, 64
  %353 = getelementptr i8, i8* %193, i64 %352
  %354 = getelementptr i8, i8* %1, i64 %352
  %355 = bitcast i8* %354 to <16 x i8>*
  %356 = load <16 x i8>, <16 x i8>* %355, align 1, !alias.scope !22
  %357 = getelementptr i8, i8* %354, i64 16
  %358 = bitcast i8* %357 to <16 x i8>*
  %359 = load <16 x i8>, <16 x i8>* %358, align 1, !alias.scope !22
  %360 = bitcast i8* %353 to <16 x i8>*
  store <16 x i8> %356, <16 x i8>* %360, align 1, !alias.scope !25, !noalias !22
  %361 = getelementptr i8, i8* %353, i64 16
  %362 = bitcast i8* %361 to <16 x i8>*
  store <16 x i8> %359, <16 x i8>* %362, align 1, !alias.scope !25, !noalias !22
  %363 = or i64 %329, 96
  %364 = getelementptr i8, i8* %193, i64 %363
  %365 = getelementptr i8, i8* %1, i64 %363
  %366 = bitcast i8* %365 to <16 x i8>*
  %367 = load <16 x i8>, <16 x i8>* %366, align 1, !alias.scope !22
  %368 = getelementptr i8, i8* %365, i64 16
  %369 = bitcast i8* %368 to <16 x i8>*
  %370 = load <16 x i8>, <16 x i8>* %369, align 1, !alias.scope !22
  %371 = bitcast i8* %364 to <16 x i8>*
  store <16 x i8> %367, <16 x i8>* %371, align 1, !alias.scope !25, !noalias !22
  %372 = getelementptr i8, i8* %364, i64 16
  %373 = bitcast i8* %372 to <16 x i8>*
  store <16 x i8> %370, <16 x i8>* %373, align 1, !alias.scope !25, !noalias !22
  %374 = add i64 %329, 128
  %375 = add i64 %330, -4
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %377, label %328, !llvm.loop !27

377:                                              ; preds = %328, %317
  %378 = phi i64 [ 0, %317 ], [ %374, %328 ]
  %379 = icmp eq i64 %324, 0
  br i1 %379, label %396, label %380

380:                                              ; preds = %377, %380
  %381 = phi i64 [ %393, %380 ], [ %378, %377 ]
  %382 = phi i64 [ %394, %380 ], [ %324, %377 ]
  %383 = getelementptr i8, i8* %193, i64 %381
  %384 = getelementptr i8, i8* %1, i64 %381
  %385 = bitcast i8* %384 to <16 x i8>*
  %386 = load <16 x i8>, <16 x i8>* %385, align 1, !alias.scope !22
  %387 = getelementptr i8, i8* %384, i64 16
  %388 = bitcast i8* %387 to <16 x i8>*
  %389 = load <16 x i8>, <16 x i8>* %388, align 1, !alias.scope !22
  %390 = bitcast i8* %383 to <16 x i8>*
  store <16 x i8> %386, <16 x i8>* %390, align 1, !alias.scope !25, !noalias !22
  %391 = getelementptr i8, i8* %383, i64 16
  %392 = bitcast i8* %391 to <16 x i8>*
  store <16 x i8> %389, <16 x i8>* %392, align 1, !alias.scope !25, !noalias !22
  %393 = add i64 %381, 32
  %394 = add i64 %382, -1
  %395 = icmp eq i64 %394, 0
  br i1 %395, label %396, label %380, !llvm.loop !28

396:                                              ; preds = %380, %377
  %397 = icmp eq i64 %305, %318
  br i1 %397, label %408, label %398

398:                                              ; preds = %396, %307, %303
  %399 = phi i8* [ %193, %307 ], [ %193, %303 ], [ %319, %396 ]
  %400 = phi i8* [ %1, %307 ], [ %1, %303 ], [ %320, %396 ]
  br label %401

401:                                              ; preds = %398, %401
  %402 = phi i8* [ %406, %401 ], [ %399, %398 ]
  %403 = phi i8* [ %405, %401 ], [ %400, %398 ]
  %404 = load i8, i8* %403, align 1
  store i8 %404, i8* %402, align 1
  %405 = getelementptr inbounds i8, i8* %403, i64 1
  %406 = getelementptr inbounds i8, i8* %402, i64 1
  %407 = icmp eq i8* %405, %301
  br i1 %407, label %408, label %401, !llvm.loop !29

408:                                              ; preds = %401, %396, %300
  %409 = phi i8* [ %193, %300 ], [ %319, %396 ], [ %406, %401 ]
  %410 = ptrtoint i8* %409 to i64
  %411 = load i8*, i8** %6, align 8
  store i64 %297, i64* %165, align 8
  store i64 %410, i64* %20, align 8
  store i64 %291, i64* %13, align 8
  %412 = icmp eq i8* %411, null
  br i1 %412, label %414, label %413

413:                                              ; preds = %408
  tail call void @_ZdlPv(i8* nonnull %411) #19
  br label %414

414:                                              ; preds = %413, %408, %32, %159, %163, %4
  %415 = phi i8* [ %1, %4 ], [ %1, %163 ], [ %1, %159 ], [ %1, %32 ], [ %191, %408 ], [ %191, %413 ]
  ret i8* %415
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer16ObjectSerializer17SerializePrologueENS0_13SnapshotSpaceEiNS0_3MapE(%"class.v8::internal::Serializer::ObjectSerializer"* nocapture readonly, i8 zeroext, i32, i64) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 2
  %6 = load %"class.v8::internal::Serializer"*, %"class.v8::internal::Serializer"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %6, i64 0, i32 7, i32 0, i32 0, i32 0
  %8 = load %"class.v8::internal::CodeAddressMap"*, %"class.v8::internal::CodeAddressMap"** %7, align 8
  %9 = icmp eq %"class.v8::internal::CodeAddressMap"* %8, null
  br i1 %9, label %81, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -1
  %15 = inttoptr i64 %14 to i8*
  %16 = trunc i64 %14 to i32
  %17 = xor i32 %16, -1
  %18 = shl i32 %16, 15
  %19 = add i32 %18, %17
  %20 = lshr i32 %19, 12
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 5
  %23 = lshr i32 %22, 4
  %24 = xor i32 %23, %22
  %25 = mul i32 %24, 2057
  %26 = lshr i32 %25, 16
  %27 = and i32 %25, 1073741823
  %28 = xor i32 %27, %26
  %29 = getelementptr inbounds %"class.v8::internal::CodeAddressMap", %"class.v8::internal::CodeAddressMap"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, -1
  %32 = and i32 %28, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"class.v8::internal::CodeAddressMap", %"class.v8::internal::CodeAddressMap"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.v8::base::TemplateHashMapEntry.1181"*, %"struct.v8::base::TemplateHashMapEntry.1181"** %34, align 8
  %36 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %35, i64 %33
  %37 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %36, i64 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = icmp eq i8* %38, null
  %40 = icmp eq i8* %38, %15
  %41 = or i1 %39, %40
  br i1 %41, label %54, label %42

42:                                               ; preds = %10
  %43 = zext i32 %31 to i64
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ %33, %42 ], [ %47, %44 ]
  %46 = add nuw nsw i64 %45, 1
  %47 = and i64 %46, %43
  %48 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %35, i64 %47
  %49 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %48, i64 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, null
  %52 = icmp eq i8* %50, %15
  %53 = or i1 %51, %52
  br i1 %53, label %54, label %44

54:                                               ; preds = %44, %10
  %55 = phi i8* [ %38, %10 ], [ %50, %44 ]
  %56 = phi %"struct.v8::base::TemplateHashMapEntry.1181"* [ %36, %10 ], [ %48, %44 ]
  %57 = icmp eq i8* %55, null
  %58 = icmp eq %"struct.v8::base::TemplateHashMapEntry.1181"* %56, null
  %59 = or i1 %57, %58
  br i1 %59, label %63, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %56, i64 0, i32 1
  %62 = load i8*, i8** %61, align 8
  br label %63

63:                                               ; preds = %54, %60
  %64 = phi i8* [ %62, %60 ], [ null, %54 ]
  %65 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !2
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %81, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %6, i64 0, i32 2
  %69 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %69, i64 0, i32 21
  %71 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 4
  %73 = load %"class.v8::internal::SnapshotByteSink"*, %"class.v8::internal::SnapshotByteSink"** %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %73, i64 0, i32 0, i32 0, i32 1
  %75 = bitcast i8** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.v8::internal::SnapshotByteSink"* %73 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = sub i64 %76, %78
  %80 = trunc i64 %79 to i32
  tail call void @_ZN2v88internal6Logger13CodeNameEventEmiPKc(%"class.v8::internal::Logger"* %71, i64 %14, i32 %80, i8* %64) #15
  br label %81

81:                                               ; preds = %4, %67, %63
  %82 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 3, i32 0, i32 0
  %83 = load i64*, i64** %82, align 8
  %84 = load i64, i64* %83, align 8
  %85 = trunc i64 %3 to i32
  %86 = trunc i64 %84 to i32
  %87 = icmp eq i32 %85, %86
  %88 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 4
  %89 = load %"class.v8::internal::SnapshotByteSink"*, %"class.v8::internal::SnapshotByteSink"** %88, align 8
  %90 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %89, i64 0, i32 0, i32 0, i32 1
  %91 = load i8*, i8** %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %89, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  %94 = icmp eq i8* %91, %93
  %95 = ptrtoint i8* %93 to i64
  br i1 %87, label %96, label %146

96:                                               ; preds = %81
  br i1 %94, label %101, label %97

97:                                               ; preds = %96
  store i8 26, i8* %91, align 1
  %98 = getelementptr inbounds i8, i8* %91, i64 1
  %99 = ptrtoint i8* %98 to i64
  %100 = bitcast i8** %90 to i64*
  store i64 %99, i64* %100, align 8
  br label %241

101:                                              ; preds = %96
  %102 = ptrtoint i8* %91 to i64
  %103 = bitcast i8** %90 to i64*
  %104 = bitcast %"class.v8::internal::SnapshotByteSink"* %89 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = sub i64 %102, %105
  %107 = add i64 %106, 1
  %108 = icmp slt i64 %107, 0
  br i1 %108, label %109, label %111

109:                                              ; preds = %101
  %110 = bitcast %"class.v8::internal::SnapshotByteSink"* %89 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %110) #18
  unreachable

111:                                              ; preds = %101
  %112 = bitcast i8** %92 to i64*
  %113 = sub i64 %95, %105
  %114 = icmp ult i64 %113, 4611686018427387903
  br i1 %114, label %115, label %120

115:                                              ; preds = %111
  %116 = shl i64 %113, 1
  %117 = icmp ult i64 %116, %107
  %118 = select i1 %117, i64 %107, i64 %116
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %123, label %120

120:                                              ; preds = %115, %111
  %121 = phi i64 [ %118, %115 ], [ 9223372036854775807, %111 ]
  %122 = tail call i8* @_Znwm(i64 %121) #19
  br label %123

123:                                              ; preds = %120, %115
  %124 = phi i64 [ %121, %120 ], [ 0, %115 ]
  %125 = phi i8* [ %122, %120 ], [ null, %115 ]
  %126 = getelementptr inbounds i8, i8* %125, i64 %106
  %127 = getelementptr inbounds i8, i8* %125, i64 %124
  %128 = ptrtoint i8* %127 to i64
  store i8 26, i8* %126, align 1
  %129 = getelementptr inbounds i8, i8* %126, i64 1
  %130 = ptrtoint i8* %129 to i64
  %131 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %89, i64 0, i32 0, i32 0, i32 0
  %132 = load i8*, i8** %131, align 8
  %133 = load i64, i64* %103, align 8
  %134 = ptrtoint i8* %132 to i64
  %135 = sub i64 %133, %134
  %136 = sub i64 0, %135
  %137 = getelementptr inbounds i8, i8* %126, i64 %136
  %138 = ptrtoint i8* %137 to i64
  %139 = icmp sgt i64 %135, 0
  br i1 %139, label %140, label %142

140:                                              ; preds = %123
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %137, i8* align 1 %132, i64 %135, i1 false) #15
  %141 = load i8*, i8** %131, align 8
  br label %142

142:                                              ; preds = %140, %123
  %143 = phi i8* [ %132, %123 ], [ %141, %140 ]
  store i64 %138, i64* %104, align 8
  store i64 %130, i64* %103, align 8
  store i64 %128, i64* %112, align 8
  %144 = icmp eq i8* %143, null
  br i1 %144, label %241, label %145

145:                                              ; preds = %142
  tail call void @_ZdlPv(i8* nonnull %143) #19
  br label %241

146:                                              ; preds = %81
  br i1 %94, label %151, label %147

147:                                              ; preds = %146
  store i8 %1, i8* %91, align 1
  %148 = getelementptr inbounds i8, i8* %91, i64 1
  %149 = ptrtoint i8* %148 to i64
  %150 = bitcast i8** %90 to i64*
  store i64 %149, i64* %150, align 8
  br label %196

151:                                              ; preds = %146
  %152 = ptrtoint i8* %91 to i64
  %153 = bitcast i8** %90 to i64*
  %154 = bitcast %"class.v8::internal::SnapshotByteSink"* %89 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = sub i64 %152, %155
  %157 = add i64 %156, 1
  %158 = icmp slt i64 %157, 0
  br i1 %158, label %159, label %161

159:                                              ; preds = %151
  %160 = bitcast %"class.v8::internal::SnapshotByteSink"* %89 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %160) #18
  unreachable

161:                                              ; preds = %151
  %162 = bitcast i8** %92 to i64*
  %163 = sub i64 %95, %155
  %164 = icmp ult i64 %163, 4611686018427387903
  br i1 %164, label %165, label %170

165:                                              ; preds = %161
  %166 = shl i64 %163, 1
  %167 = icmp ult i64 %166, %157
  %168 = select i1 %167, i64 %157, i64 %166
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %173, label %170

170:                                              ; preds = %165, %161
  %171 = phi i64 [ %168, %165 ], [ 9223372036854775807, %161 ]
  %172 = tail call i8* @_Znwm(i64 %171) #19
  br label %173

173:                                              ; preds = %170, %165
  %174 = phi i64 [ %171, %170 ], [ 0, %165 ]
  %175 = phi i8* [ %172, %170 ], [ null, %165 ]
  %176 = getelementptr inbounds i8, i8* %175, i64 %156
  %177 = getelementptr inbounds i8, i8* %175, i64 %174
  %178 = ptrtoint i8* %177 to i64
  store i8 %1, i8* %176, align 1
  %179 = getelementptr inbounds i8, i8* %176, i64 1
  %180 = ptrtoint i8* %179 to i64
  %181 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %89, i64 0, i32 0, i32 0, i32 0
  %182 = load i8*, i8** %181, align 8
  %183 = load i64, i64* %153, align 8
  %184 = ptrtoint i8* %182 to i64
  %185 = sub i64 %183, %184
  %186 = sub i64 0, %185
  %187 = getelementptr inbounds i8, i8* %176, i64 %186
  %188 = ptrtoint i8* %187 to i64
  %189 = icmp sgt i64 %185, 0
  br i1 %189, label %190, label %192

190:                                              ; preds = %173
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %187, i8* align 1 %182, i64 %185, i1 false) #15
  %191 = load i8*, i8** %181, align 8
  br label %192

192:                                              ; preds = %190, %173
  %193 = phi i8* [ %182, %173 ], [ %191, %190 ]
  store i64 %188, i64* %154, align 8
  store i64 %180, i64* %153, align 8
  store i64 %178, i64* %162, align 8
  %194 = icmp eq i8* %193, null
  br i1 %194, label %196, label %195

195:                                              ; preds = %192
  tail call void @_ZdlPv(i8* nonnull %193) #19
  br label %196

196:                                              ; preds = %147, %192, %195
  %197 = load %"class.v8::internal::SnapshotByteSink"*, %"class.v8::internal::SnapshotByteSink"** %88, align 8
  %198 = ashr i32 %2, 2
  %199 = sext i32 %198 to i64
  tail call void @_ZN2v88internal16SnapshotByteSink6PutIntEmPKc(%"class.v8::internal::SnapshotByteSink"* %197, i64 %199, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.32, i64 0, i64 0)) #15
  %200 = load %"class.v8::internal::Serializer"*, %"class.v8::internal::Serializer"** %5, align 8
  %201 = load i64*, i64** %82, align 8
  %202 = load i64, i64* %201, align 8
  %203 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %200, i64 0, i32 2
  %204 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %203, align 8
  %205 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %204, i64 0, i32 0, i32 7, i32 0, i64 491
  %206 = load i64, i64* %205, align 8
  %207 = trunc i64 %202 to i32
  %208 = trunc i64 %206 to i32
  %209 = icmp eq i32 %207, %208
  br i1 %209, label %215, label %210

210:                                              ; preds = %196
  %211 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %200, i64 0, i32 14
  %212 = bitcast %"class.v8::internal::IdentityMap.1191"* %211 to %"class.v8::internal::IdentityMapBase"*
  %213 = tail call { i64*, i8 } @_ZN2v88internal15IdentityMapBase17FindOrInsertEntryEm(%"class.v8::internal::IdentityMapBase"* %212, i64 %202) #15
  %214 = load %"class.v8::internal::Serializer"*, %"class.v8::internal::Serializer"** %5, align 8
  br label %215

215:                                              ; preds = %196, %210
  %216 = phi %"class.v8::internal::Serializer"* [ %200, %196 ], [ %214, %210 ]
  %217 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 1
  %218 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %217, align 8
  %219 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %218, i64 0, i32 31, i32 4
  %220 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %219, align 8
  %221 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %220, null
  br i1 %221, label %224, label %222

222:                                              ; preds = %215
  %223 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %220, i64 %3) #15
  br label %237

224:                                              ; preds = %215
  %225 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %218, i64 0, i32 31, i32 0
  %226 = load i64*, i64** %225, align 8
  %227 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %218, i64 0, i32 31, i32 1
  %228 = load i64*, i64** %227, align 8
  %229 = icmp eq i64* %226, %228
  br i1 %229, label %230, label %232

230:                                              ; preds = %224
  %231 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %218) #15
  br label %232

232:                                              ; preds = %230, %224
  %233 = phi i64* [ %231, %230 ], [ %226, %224 ]
  %234 = ptrtoint i64* %233 to i64
  %235 = add i64 %234, 8
  %236 = inttoptr i64 %235 to i64*
  store i64* %236, i64** %225, align 8
  store i64 %3, i64* %233, align 8
  br label %237

237:                                              ; preds = %222, %232
  %238 = phi i64* [ %223, %222 ], [ %233, %232 ]
  tail call void @_ZN2v88internal10Serializer15SerializeObjectENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::Serializer"* %216, i64* %238)
  %239 = load %"class.v8::internal::Serializer"*, %"class.v8::internal::Serializer"** %5, align 8
  %240 = load i64*, i64** %82, align 8
  tail call void @_ZN2v88internal10Serializer20ResolvePendingObjectENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::Serializer"* %239, i64* %240)
  br label %241

241:                                              ; preds = %145, %142, %97, %237
  %242 = load i8, i8* @_ZN2v88internal29FLAG_serialization_statisticsE, align 1, !range !2
  %243 = icmp eq i8 %242, 0
  br i1 %243, label %256, label %244

244:                                              ; preds = %241
  %245 = load %"class.v8::internal::Serializer"*, %"class.v8::internal::Serializer"** %5, align 8
  %246 = load i64*, i64** %82, align 8
  %247 = load i64, i64* %246, align 8
  %248 = add i64 %247, -1
  %249 = inttoptr i64 %248 to i32*
  %250 = load atomic i32, i32* %249 monotonic, align 4
  %251 = sext i32 %2 to i64
  %252 = zext i8 %1 to i64
  %253 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %245, i64 0, i32 18, i64 %252
  %254 = load i64, i64* %253, align 8
  %255 = add i64 %254, %251
  store i64 %255, i64* %253, align 8
  br label %256

256:                                              ; preds = %241, %244
  %257 = load %"class.v8::internal::Serializer"*, %"class.v8::internal::Serializer"** %5, align 8
  %258 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %257, i64 0, i32 10
  %259 = load i32, i32* %258, align 8
  %260 = add nsw i32 %259, 1
  store i32 %260, i32* %258, align 8
  %261 = load i64*, i64** %82, align 8
  %262 = load i64, i64* %261, align 8
  %263 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 1
  %264 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %263, align 8
  %265 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %264, i64 0, i32 0, i32 7, i32 0, i64 491
  %266 = load i64, i64* %265, align 8
  %267 = trunc i64 %262 to i32
  %268 = trunc i64 %266 to i32
  %269 = icmp eq i32 %267, %268
  br i1 %269, label %280, label %270

270:                                              ; preds = %256
  %271 = load %"class.v8::internal::Serializer"*, %"class.v8::internal::Serializer"** %5, align 8
  %272 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %271, i64 0, i32 10
  %273 = load i32, i32* %272, align 8
  %274 = shl i32 %273, 2
  %275 = add i32 %274, -4
  %276 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %271, i64 0, i32 4
  %277 = bitcast %"class.v8::internal::SerializerReferenceMap"* %276 to %"class.v8::internal::IdentityMapBase"*
  %278 = tail call i64* @_ZN2v88internal15IdentityMapBase11InsertEntryEm(%"class.v8::internal::IdentityMapBase"* %277, i64 %262) #15
  %279 = bitcast i64* %278 to i32*
  store i32 %275, i32* %279, align 4
  br label %280

280:                                              ; preds = %256, %270
  ret void
}

declare void @_ZN2v88internal6Logger13CodeNameEventEmiPKc(%"class.v8::internal::Logger"*, i64, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal10Serializer16ObjectSerializer21SerializeBackingStoreEPvi(%"class.v8::internal::Serializer::ObjectSerializer"* nocapture readonly, i8*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i8*, align 8
  %5 = alloca %"class.v8::internal::SerializerReference", align 4
  %6 = alloca i8*, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 2
  %8 = load %"class.v8::internal::Serializer"*, %"class.v8::internal::Serializer"** %7, align 8
  %9 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  store i8* %1, i8** %4, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %8, i64 0, i32 4, i32 1, i32 0
  %11 = call %"struct.std::__1::__hash_node_base.1147"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIPvN2v88internal19SerializerReferenceEEENS_22__unordered_map_hasherIS2_S6_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE4findIS2_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_S2_EEEERKT_(%"class.std::__1::__hash_table.1143"* %10, i8** nonnull dereferenceable(8) %4) #15
  %12 = icmp eq %"struct.std::__1::__hash_node_base.1147"* %11, null
  %13 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147", %"struct.std::__1::__hash_node_base.1147"* %11, i64 3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1147"* %13, null
  %15 = or i1 %12, %14
  br i1 %15, label %16, label %90

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 4
  %18 = load %"class.v8::internal::SnapshotByteSink"*, %"class.v8::internal::SnapshotByteSink"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %18, i64 0, i32 0, i32 0, i32 1
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %18, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %20, %22
  %24 = ptrtoint i8* %22 to i64
  br i1 %23, label %29, label %25

25:                                               ; preds = %16
  store i8 13, i8* %20, align 1
  %26 = getelementptr inbounds i8, i8* %20, i64 1
  %27 = ptrtoint i8* %26 to i64
  %28 = bitcast i8** %19 to i64*
  store i64 %27, i64* %28, align 8
  br label %74

29:                                               ; preds = %16
  %30 = ptrtoint i8* %20 to i64
  %31 = bitcast i8** %19 to i64*
  %32 = bitcast %"class.v8::internal::SnapshotByteSink"* %18 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %30, %33
  %35 = add i64 %34, 1
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %29
  %38 = bitcast %"class.v8::internal::SnapshotByteSink"* %18 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #18
  unreachable

39:                                               ; preds = %29
  %40 = bitcast i8** %21 to i64*
  %41 = sub i64 %24, %33
  %42 = icmp ult i64 %41, 4611686018427387903
  br i1 %42, label %43, label %48

43:                                               ; preds = %39
  %44 = shl i64 %41, 1
  %45 = icmp ult i64 %44, %35
  %46 = select i1 %45, i64 %35, i64 %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %43, %39
  %49 = phi i64 [ %46, %43 ], [ 9223372036854775807, %39 ]
  %50 = call i8* @_Znwm(i64 %49) #19
  br label %51

51:                                               ; preds = %48, %43
  %52 = phi i64 [ %49, %48 ], [ 0, %43 ]
  %53 = phi i8* [ %50, %48 ], [ null, %43 ]
  %54 = getelementptr inbounds i8, i8* %53, i64 %34
  %55 = getelementptr inbounds i8, i8* %53, i64 %52
  %56 = ptrtoint i8* %55 to i64
  store i8 13, i8* %54, align 1
  %57 = getelementptr inbounds i8, i8* %54, i64 1
  %58 = ptrtoint i8* %57 to i64
  %59 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %18, i64 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = load i64, i64* %31, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = sub i64 %61, %62
  %64 = sub i64 0, %63
  %65 = getelementptr inbounds i8, i8* %54, i64 %64
  %66 = ptrtoint i8* %65 to i64
  %67 = icmp sgt i64 %63, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %51
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %65, i8* align 1 %60, i64 %63, i1 false) #15
  %69 = load i8*, i8** %59, align 8
  br label %70

70:                                               ; preds = %68, %51
  %71 = phi i8* [ %60, %51 ], [ %69, %68 ]
  store i64 %66, i64* %32, align 8
  store i64 %58, i64* %31, align 8
  store i64 %56, i64* %40, align 8
  %72 = icmp eq i8* %71, null
  br i1 %72, label %74, label %73

73:                                               ; preds = %70
  call void @_ZdlPv(i8* nonnull %71) #19
  br label %74

74:                                               ; preds = %25, %70, %73
  %75 = load %"class.v8::internal::SnapshotByteSink"*, %"class.v8::internal::SnapshotByteSink"** %17, align 8
  %76 = sext i32 %2 to i64
  call void @_ZN2v88internal16SnapshotByteSink6PutIntEmPKc(%"class.v8::internal::SnapshotByteSink"* %75, i64 %76, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.34, i64 0, i64 0)) #15
  %77 = load %"class.v8::internal::SnapshotByteSink"*, %"class.v8::internal::SnapshotByteSink"** %17, align 8
  call void @_ZN2v88internal16SnapshotByteSink6PutRawEPKhiPKc(%"class.v8::internal::SnapshotByteSink"* %77, i8* %1, i32 %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0)) #15
  %78 = load %"class.v8::internal::Serializer"*, %"class.v8::internal::Serializer"** %7, align 8
  %79 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %78, i64 0, i32 15
  %80 = load i32, i32* %79, align 8
  %81 = add i32 %80, 1
  store i32 %81, i32* %79, align 8
  %82 = shl i32 %80, 2
  %83 = or i32 %82, 2
  %84 = load %"class.v8::internal::Serializer"*, %"class.v8::internal::Serializer"** %7, align 8
  %85 = bitcast %"class.v8::internal::SerializerReference"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %85)
  %86 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86)
  %87 = getelementptr inbounds %"class.v8::internal::SerializerReference", %"class.v8::internal::SerializerReference"* %5, i64 0, i32 0
  store i32 %83, i32* %87, align 4
  store i8* %1, i8** %6, align 8
  %88 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %84, i64 0, i32 4, i32 1, i32 0
  %89 = call { %"struct.std::__1::__hash_node_base.1147"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN2v88internal19SerializerReferenceEEENS_22__unordered_map_hasherIS2_S6_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS2_JRS2_RS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_S2_EEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1143"* %88, i8** nonnull dereferenceable(8) %6, i8** nonnull dereferenceable(8) %6, %"class.v8::internal::SerializerReference"* nonnull dereferenceable(4) %5) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %85)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86)
  br label %93

90:                                               ; preds = %3
  %91 = bitcast %"struct.std::__1::__hash_node_base.1147"* %13 to i32*
  %92 = load i32, i32* %91, align 4
  br label %93

93:                                               ; preds = %90, %74
  %94 = phi i32 [ %92, %90 ], [ %83, %74 ]
  %95 = lshr i32 %94, 2
  ret i32 %95
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer16ObjectSerializer21SerializeJSTypedArrayEv(%"class.v8::internal::Serializer::ObjectSerializer"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 47
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %20, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 1
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = add i64 %4, 39
  %13 = inttoptr i64 %12 to i64*
  %14 = load i64, i64* %13, align 1
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 4
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 4294967295
  %18 = icmp eq i64 %17, 0
  tail call void @llvm.assume(i1 %18) #15
  %19 = sub i64 %14, %16
  store i64 %19, i64* %13, align 1
  br label %56

20:                                               ; preds = %1
  %21 = and i64 %4, -4294967296
  %22 = add i64 %4, 11
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %21, %25
  %27 = add i64 %26, 43
  %28 = inttoptr i64 %27 to i32*
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %53

32:                                               ; preds = %20
  %33 = add i64 %26, 11
  %34 = inttoptr i64 %33 to i64*
  %35 = load i64, i64* %34, align 1
  %36 = icmp ult i64 %35, 2147483648
  br i1 %36, label %38, label %37, !prof !3

37:                                               ; preds = %32
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.36, i64 0, i64 0)) #18
  unreachable

38:                                               ; preds = %32
  %39 = trunc i64 %35 to i32
  %40 = add i64 %4, 15
  %41 = inttoptr i64 %40 to i64*
  %42 = load i64, i64* %41, align 1
  %43 = add i64 %4, 39
  %44 = inttoptr i64 %43 to i64*
  %45 = load i64, i64* %44, align 1
  %46 = sub i64 %45, %42
  %47 = inttoptr i64 %46 to i8*
  %48 = tail call i32 @_ZN2v88internal10Serializer16ObjectSerializer21SerializeBackingStoreEPvi(%"class.v8::internal::Serializer::ObjectSerializer"* %0, i8* %47, i32 %39)
  %49 = load i64, i64* %3, align 8
  %50 = zext i32 %48 to i64
  %51 = add i64 %49, 39
  %52 = inttoptr i64 %51 to i64*
  store i64 %50, i64* %52, align 1
  br label %56

53:                                               ; preds = %20
  %54 = add i64 %4, 39
  %55 = inttoptr i64 %54 to i64*
  store i64 0, i64* %55, align 1
  br label %56

56:                                               ; preds = %38, %53, %9
  tail call void @_ZN2v88internal10Serializer16ObjectSerializer15SerializeObjectEv(%"class.v8::internal::Serializer::ObjectSerializer"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer16ObjectSerializer15SerializeObjectEv(%"class.v8::internal::Serializer::ObjectSerializer"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef", align 8
  %3 = bitcast %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #15
  %4 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef"* %2, i64 0, i32 0
  %9 = and i64 %6, -4294967296
  %10 = add i64 %6, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %8, i64 %14) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #15
  %16 = load i64*, i64** %4, align 8
  %17 = load i64, i64* %16, align 8
  %18 = and i64 %17, -4294967296
  %19 = add i64 %17, -1
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %18, %22
  %24 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 1
  %25 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %25, i64 0, i32 0, i32 7, i32 0, i64 562
  %27 = load i64, i64* %26, align 8
  %28 = trunc i64 %27 to i32
  %29 = icmp eq i32 %21, %28
  br i1 %29, label %30, label %33

30:                                               ; preds = %1
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %25, i64 0, i32 0, i32 7, i32 0, i64 563
  %32 = load i64, i64* %31, align 8
  br label %33

33:                                               ; preds = %30, %1
  %34 = phi i64 [ %32, %30 ], [ %23, %1 ]
  %35 = call zeroext i1 @_ZN2v88internal12ReadOnlyHeap8ContainsENS0_10HeapObjectE(i64 %17) #15
  br i1 %35, label %58, label %36

36:                                               ; preds = %33
  %37 = load i64, i64* %16, align 8
  %38 = and i64 %37, -262144
  %39 = inttoptr i64 %38 to %"class.v8::internal::MemoryChunk"*
  %40 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %39, i64 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 2097152
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %53

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %39, i64 0, i32 0, i32 8, i32 0
  %46 = bitcast %"struct.std::__1::__atomic_base.76"* %45 to i64*
  %47 = load atomic i64, i64* %46 seq_cst, align 64
  %48 = inttoptr i64 %47 to %"class.v8::internal::Space"*
  %49 = getelementptr inbounds %"class.v8::internal::Space", %"class.v8::internal::Space"* %48, i64 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 8
  switch i32 %50, label %54 [
    i32 1, label %55
    i32 7, label %55
    i32 6, label %55
    i32 4, label %55
    i32 2, label %51
    i32 3, label %52
    i32 5, label %53
    i32 0, label %53
  ]

51:                                               ; preds = %44
  br label %55

52:                                               ; preds = %44
  br label %55

53:                                               ; preds = %44, %44, %36
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.59, i64 0, i64 0)) #18
  unreachable

54:                                               ; preds = %44
  br label %55

55:                                               ; preds = %54, %52, %51, %44, %44, %44, %44
  %56 = phi i8 [ undef, %54 ], [ 3, %52 ], [ 2, %51 ], [ 1, %44 ], [ 1, %44 ], [ 1, %44 ], [ 1, %44 ]
  %57 = phi i1 [ false, %54 ], [ true, %52 ], [ true, %51 ], [ true, %44 ], [ true, %44 ], [ true, %44 ], [ true, %44 ]
  call void @llvm.assume(i1 %57) #15
  br label %58

58:                                               ; preds = %33, %55
  %59 = phi i8 [ %56, %55 ], [ 0, %33 ]
  call void @_ZN2v88internal10Serializer16ObjectSerializer17SerializePrologueENS0_13SnapshotSpaceEiNS0_3MapE(%"class.v8::internal::Serializer::ObjectSerializer"* %0, i8 zeroext %59, i32 %15, i64 %34)
  %60 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 5
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %64, label %63, !prof !3

63:                                               ; preds = %58
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44, i64 0, i64 0)) #18
  unreachable

64:                                               ; preds = %58
  store i32 4, i32* %60, align 8
  call void @_ZN2v88internal10Serializer16ObjectSerializer16SerializeContentENS0_3MapEi(%"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 %34, i32 %15)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer16ObjectSerializer22SerializeJSArrayBufferEv(%"class.v8::internal::Serializer::ObjectSerializer"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 27
  %6 = inttoptr i64 %5 to i8**
  %7 = load i8*, i8** %6, align 1
  %8 = add i64 %4, 11
  %9 = inttoptr i64 %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = icmp ult i64 %10, 2147483648
  br i1 %11, label %13, label %12, !prof !3

12:                                               ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.37, i64 0, i64 0)) #18
  unreachable

13:                                               ; preds = %1
  %14 = add i64 %4, 35
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 acquire, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %13
  %20 = add i64 %4, 39
  %21 = inttoptr i64 %20 to i32*
  %22 = load atomic i32, i32* %21 acquire, align 4
  %23 = load atomic i32, i32* %15 monotonic, align 4
  %24 = icmp eq i32 %16, %23
  %25 = zext i32 %16 to i64
  %26 = zext i32 %22 to i64
  %27 = shl nuw i64 %26, 32
  %28 = or i64 %27, %25
  %29 = inttoptr i64 %28 to %"class.v8::internal::ArrayBufferExtension"*
  %30 = select i1 %24, %"class.v8::internal::ArrayBufferExtension"* %29, %"class.v8::internal::ArrayBufferExtension"* null
  br label %31

31:                                               ; preds = %13, %19
  %32 = phi %"class.v8::internal::ArrayBufferExtension"* [ null, %13 ], [ %30, %19 ]
  %33 = icmp eq i8* %7, null
  br i1 %33, label %46, label %34

34:                                               ; preds = %31
  %35 = trunc i64 %10 to i32
  %36 = tail call i32 @_ZN2v88internal10Serializer16ObjectSerializer21SerializeBackingStoreEPvi(%"class.v8::internal::Serializer::ObjectSerializer"* %0, i8* nonnull %7, i32 %35)
  %37 = load i64, i64* %3, align 8
  %38 = zext i32 %36 to i64
  %39 = add i64 %37, 27
  %40 = inttoptr i64 %39 to i64*
  store i64 %38, i64* %40, align 1
  %41 = load i64, i64* %3, align 8
  %42 = add i64 %41, 35
  %43 = inttoptr i64 %42 to i32*
  store atomic volatile i32 1, i32* %43 monotonic, align 4
  %44 = add i64 %41, 39
  %45 = inttoptr i64 %44 to i32*
  store atomic volatile i32 0, i32* %45 release, align 4
  br label %50

46:                                               ; preds = %31
  %47 = load i64, i64* %3, align 8
  %48 = add i64 %47, 27
  %49 = inttoptr i64 %48 to i64*
  store i64 0, i64* %49, align 1
  br label %50

50:                                               ; preds = %46, %34
  tail call void @_ZN2v88internal10Serializer16ObjectSerializer15SerializeObjectEv(%"class.v8::internal::Serializer::ObjectSerializer"* %0)
  %51 = load i64, i64* %3, align 8
  %52 = ptrtoint i8* %7 to i64
  %53 = add i64 %51, 27
  %54 = inttoptr i64 %53 to i64*
  store i64 %52, i64* %54, align 1
  %55 = load i64, i64* %3, align 8
  %56 = icmp eq %"class.v8::internal::ArrayBufferExtension"* %32, null
  br i1 %56, label %76, label %57

57:                                               ; preds = %50
  %58 = ptrtoint %"class.v8::internal::ArrayBufferExtension"* %32 to i64
  %59 = add i64 %55, 39
  %60 = inttoptr i64 %59 to i32*
  %61 = lshr i64 %58, 32
  %62 = trunc i64 %61 to i32
  store atomic volatile i32 %62, i32* %60 monotonic, align 4
  %63 = add i64 %55, 35
  %64 = inttoptr i64 %63 to i32*
  %65 = trunc i64 %58 to i32
  store atomic volatile i32 %65, i32* %64 release, align 4
  %66 = and i64 %55, -262144
  %67 = or i64 %66, 8
  %68 = inttoptr i64 %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = and i64 %69, 262144
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %81, label %72

72:                                               ; preds = %57
  %73 = or i64 %66, 16
  %74 = inttoptr i64 %73 to %"class.v8::internal::Heap"**
  %75 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %74, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_13JSArrayBufferEPNS0_20ArrayBufferExtensionE(%"class.v8::internal::Heap"* %75, i64 %55, %"class.v8::internal::ArrayBufferExtension"* nonnull %32) #15
  br label %81

76:                                               ; preds = %50
  %77 = add i64 %55, 35
  %78 = inttoptr i64 %77 to i32*
  store atomic volatile i32 1, i32* %78 monotonic, align 4
  %79 = add i64 %55, 39
  %80 = inttoptr i64 %79 to i32*
  store atomic volatile i32 0, i32* %80 release, align 4
  br label %81

81:                                               ; preds = %57, %72, %76
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer16ObjectSerializer23SerializeExternalStringEv(%"class.v8::internal::Serializer::ObjectSerializer"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Handle<v8::internal::ExternalString>::ObjectRef", align 8
  %3 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 11
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7, align 1
  %9 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 2
  %10 = load %"class.v8::internal::Serializer"*, %"class.v8::internal::Serializer"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %10, i64 0, i32 5
  %12 = tail call i64 @_ZN2v88internal24ExternalReferenceEncoder9TryEncodeEm(%"class.v8::internal::ExternalReferenceEncoder"* %11, i64 %8) #15
  %13 = trunc i64 %12 to i8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %42, label %15, !prof !30

15:                                               ; preds = %1
  %16 = lshr i64 %12, 32
  %17 = load i64, i64* %4, align 8
  %18 = and i64 %16, 2147483647
  %19 = add i64 %17, 11
  %20 = inttoptr i64 %19 to i64*
  store i64 %18, i64* %20, align 1
  %21 = and i64 %17, -4294967296
  %22 = add i64 %17, -1
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %21, %25
  %27 = add i64 %26, 7
  %28 = inttoptr i64 %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = and i16 %29, 16
  %31 = icmp eq i16 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %15
  %33 = add i64 %17, 19
  %34 = inttoptr i64 %33 to i64*
  store i64 0, i64* %34, align 1
  br label %35

35:                                               ; preds = %15, %32
  tail call void @_ZN2v88internal10Serializer16ObjectSerializer15SerializeObjectEv(%"class.v8::internal::Serializer::ObjectSerializer"* %0)
  %36 = bitcast %"class.v8::internal::Handle<v8::internal::ExternalString>::ObjectRef"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #15
  %37 = load i64, i64* %4, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ExternalString>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ExternalString>::ObjectRef"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::ExternalString>::ObjectRef", %"class.v8::internal::Handle<v8::internal::ExternalString>::ObjectRef"* %2, i64 0, i32 0
  %40 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 1
  %41 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %40, align 8
  call void @_ZN2v88internal14ExternalString23set_address_as_resourceEPNS0_7IsolateEm(%"class.v8::internal::ExternalString"* nonnull %39, %"class.v8::internal::Isolate"* %41, i64 %8)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #15
  br label %43

42:                                               ; preds = %1
  tail call void @_ZN2v88internal10Serializer16ObjectSerializer41SerializeExternalStringAsSequentialStringEv(%"class.v8::internal::Serializer::ObjectSerializer"* %0)
  br label %43

43:                                               ; preds = %42, %35
  ret void
}

declare i64 @_ZN2v88internal24ExternalReferenceEncoder9TryEncodeEm(%"class.v8::internal::ExternalReferenceEncoder"*, i64) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14ExternalString23set_address_as_resourceEPNS0_7IsolateEm(%"class.v8::internal::ExternalString"*, %"class.v8::internal::Isolate"*, i64) local_unnamed_addr #9 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::ExternalString", %"class.v8::internal::ExternalString"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 11
  %7 = inttoptr i64 %6 to i64*
  store i64 %2, i64* %7, align 1
  %8 = load i64, i64* %4, align 8
  %9 = and i64 %8, -4294967296
  %10 = add i64 %8, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i16*
  %17 = load atomic i16, i16* %16 monotonic, align 2
  %18 = icmp ult i16 %17, 64
  br i1 %18, label %19, label %67

19:                                               ; preds = %3
  %20 = load atomic i32, i32* %11 monotonic, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %9, %21
  %23 = add i64 %22, 7
  %24 = inttoptr i64 %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = and i16 %25, 7
  %27 = icmp eq i16 %26, 2
  br i1 %27, label %28, label %67

28:                                               ; preds = %19
  %29 = load atomic i32, i32* %11 monotonic, align 4
  %30 = zext i32 %29 to i64
  %31 = or i64 %9, %30
  %32 = add i64 %31, 7
  %33 = inttoptr i64 %32 to i16*
  %34 = load atomic i16, i16* %33 monotonic, align 2
  %35 = and i16 %34, 8
  %36 = icmp eq i16 %35, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = load atomic i32, i32* %11 monotonic, align 4
  %39 = zext i32 %38 to i64
  %40 = or i64 %9, %39
  %41 = add i64 %40, 7
  %42 = inttoptr i64 %41 to i16*
  %43 = load atomic i16, i16* %42 monotonic, align 2
  %44 = and i16 %43, 16
  %45 = icmp eq i16 %44, 0
  %46 = add i64 %8, 11
  %47 = inttoptr i64 %46 to %"class.v8::String::ExternalOneByteStringResource"**
  %48 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %47, align 1
  br i1 %45, label %58, label %49

49:                                               ; preds = %37
  %50 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %48, i64 0, i32 0
  %51 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %48 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %52 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %51, align 8
  %53 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %52, i64 2
  %54 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.v8::String::ExternalStringResourceBase"* %50) #15
  br i1 %55, label %56, label %97

56:                                               ; preds = %49
  %57 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %47, align 1
  tail call void @_ZN2v86String29ExternalOneByteStringResource15UpdateDataCacheEv(%"class.v8::String::ExternalOneByteStringResource"* %57) #15
  br label %97

58:                                               ; preds = %37
  %59 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %48 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %60 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %59, align 8
  %61 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %60, i64 6
  %62 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %61, align 8
  %63 = tail call i8* %62(%"class.v8::String::ExternalOneByteStringResource"* %48) #15
  %64 = ptrtoint i8* %63 to i64
  %65 = add i64 %8, 19
  %66 = inttoptr i64 %65 to i64*
  store i64 %64, i64* %66, align 1
  br label %97

67:                                               ; preds = %28, %19, %3
  %68 = load atomic i32, i32* %11 monotonic, align 4
  %69 = zext i32 %68 to i64
  %70 = or i64 %9, %69
  %71 = add i64 %70, 7
  %72 = inttoptr i64 %71 to i16*
  %73 = load atomic i16, i16* %72 monotonic, align 2
  %74 = and i16 %73, 16
  %75 = icmp eq i16 %74, 0
  %76 = add i64 %8, 11
  %77 = inttoptr i64 %76 to %"class.v8::String::ExternalStringResource"**
  %78 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %77, align 1
  br i1 %75, label %88, label %79

79:                                               ; preds = %67
  %80 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %78, i64 0, i32 0
  %81 = bitcast %"class.v8::String::ExternalStringResource"* %78 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %82 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %81, align 8
  %83 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %82, i64 2
  %84 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %83, align 8
  %85 = tail call zeroext i1 %84(%"class.v8::String::ExternalStringResourceBase"* %80) #15
  br i1 %85, label %86, label %97

86:                                               ; preds = %79
  %87 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %77, align 1
  tail call void @_ZN2v86String22ExternalStringResource15UpdateDataCacheEv(%"class.v8::String::ExternalStringResource"* %87) #15
  br label %97

88:                                               ; preds = %67
  %89 = bitcast %"class.v8::String::ExternalStringResource"* %78 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %90 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %89, align 8
  %91 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %90, i64 6
  %92 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %91, align 8
  %93 = tail call i16* %92(%"class.v8::String::ExternalStringResource"* %78) #15
  %94 = ptrtoint i16* %93 to i64
  %95 = add i64 %8, 19
  %96 = inttoptr i64 %95 to i64*
  store i64 %94, i64* %96, align 1
  br label %97

97:                                               ; preds = %88, %86, %79, %58, %56, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer16ObjectSerializer41SerializeExternalStringAsSequentialStringEv(%"class.v8::internal::Serializer::ObjectSerializer"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 1
  %3 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 7
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = and i64 %6, -4294967296
  %11 = add i64 %6, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = zext i32 %13 to i64
  %15 = or i64 %10, %14
  %16 = add i64 %15, 7
  %17 = inttoptr i64 %16 to i16*
  %18 = load atomic i16, i16* %17 monotonic, align 2
  %19 = icmp ult i16 %18, 32
  %20 = load atomic i32, i32* %12 monotonic, align 4
  %21 = zext i32 %20 to i64
  %22 = or i64 %10, %21
  %23 = add i64 %22, 7
  %24 = inttoptr i64 %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = icmp ult i16 %25, 64
  br i1 %26, label %27, label %58

27:                                               ; preds = %1
  %28 = load atomic i32, i32* %12 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %10, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = and i16 %33, 7
  %35 = icmp eq i16 %34, 2
  br i1 %35, label %36, label %58

36:                                               ; preds = %27
  %37 = load atomic i32, i32* %12 monotonic, align 4
  %38 = zext i32 %37 to i64
  %39 = or i64 %10, %38
  %40 = add i64 %39, 7
  %41 = inttoptr i64 %40 to i16*
  %42 = load atomic i16, i16* %41 monotonic, align 2
  %43 = and i16 %42, 8
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %58, label %45

45:                                               ; preds = %36
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 0, i32 7, i32 0, i64 17
  %47 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 0, i32 7, i32 0, i64 16
  %48 = select i1 %19, i64* %46, i64* %47
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %6, 11
  %51 = inttoptr i64 %50 to %"class.v8::String::ExternalOneByteStringResource"**
  %52 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %51, align 1
  %53 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %52 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %54 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %53, align 8
  %55 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %54, i64 6
  %56 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %55, align 8
  %57 = tail call i8* %56(%"class.v8::String::ExternalOneByteStringResource"* %52) #15
  br label %73

58:                                               ; preds = %36, %27, %1
  %59 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 0, i32 7, i32 0, i64 87
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 0, i32 7, i32 0, i64 78
  %61 = select i1 %19, i64* %59, i64* %60
  %62 = load i64, i64* %61, align 8
  %63 = shl i32 %9, 1
  %64 = add i64 %6, 11
  %65 = inttoptr i64 %64 to %"class.v8::String::ExternalStringResource"**
  %66 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %65, align 1
  %67 = bitcast %"class.v8::String::ExternalStringResource"* %66 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %68 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %67, align 8
  %69 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %68, i64 6
  %70 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %69, align 8
  %71 = tail call i16* %70(%"class.v8::String::ExternalStringResource"* %66) #15
  %72 = bitcast i16* %71 to i8*
  br label %73

73:                                               ; preds = %58, %45
  %74 = phi i64 [ %49, %45 ], [ %62, %58 ]
  %75 = phi i8* [ %57, %45 ], [ %72, %58 ]
  %76 = phi i32 [ %9, %45 ], [ %63, %58 ]
  %77 = add i32 %76, 15
  %78 = and i32 %77, -4
  tail call void @_ZN2v88internal10Serializer16ObjectSerializer17SerializePrologueENS0_13SnapshotSpaceEiNS0_3MapE(%"class.v8::internal::Serializer::ObjectSerializer"* %0, i8 zeroext 1, i32 %78, i64 %74)
  %79 = add nsw i32 %78, -4
  %80 = ashr exact i32 %79, 2
  %81 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 4
  %82 = load %"class.v8::internal::SnapshotByteSink"*, %"class.v8::internal::SnapshotByteSink"** %81, align 8
  %83 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %82, i64 0, i32 0, i32 0, i32 1
  %84 = load i8*, i8** %83, align 8
  %85 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %82, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  %87 = icmp eq i8* %84, %86
  %88 = ptrtoint i8* %86 to i64
  br i1 %87, label %93, label %89

89:                                               ; preds = %73
  store i8 15, i8* %84, align 1
  %90 = getelementptr inbounds i8, i8* %84, i64 1
  %91 = ptrtoint i8* %90 to i64
  %92 = bitcast i8** %83 to i64*
  store i64 %91, i64* %92, align 8
  br label %138

93:                                               ; preds = %73
  %94 = ptrtoint i8* %84 to i64
  %95 = bitcast i8** %83 to i64*
  %96 = bitcast %"class.v8::internal::SnapshotByteSink"* %82 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = sub i64 %94, %97
  %99 = add i64 %98, 1
  %100 = icmp slt i64 %99, 0
  br i1 %100, label %101, label %103

101:                                              ; preds = %93
  %102 = bitcast %"class.v8::internal::SnapshotByteSink"* %82 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %102) #18
  unreachable

103:                                              ; preds = %93
  %104 = bitcast i8** %85 to i64*
  %105 = sub i64 %88, %97
  %106 = icmp ult i64 %105, 4611686018427387903
  br i1 %106, label %107, label %112

107:                                              ; preds = %103
  %108 = shl i64 %105, 1
  %109 = icmp ult i64 %108, %99
  %110 = select i1 %109, i64 %99, i64 %108
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %115, label %112

112:                                              ; preds = %107, %103
  %113 = phi i64 [ %110, %107 ], [ 9223372036854775807, %103 ]
  %114 = tail call i8* @_Znwm(i64 %113) #19
  br label %115

115:                                              ; preds = %112, %107
  %116 = phi i64 [ %113, %112 ], [ 0, %107 ]
  %117 = phi i8* [ %114, %112 ], [ null, %107 ]
  %118 = getelementptr inbounds i8, i8* %117, i64 %98
  %119 = getelementptr inbounds i8, i8* %117, i64 %116
  %120 = ptrtoint i8* %119 to i64
  store i8 15, i8* %118, align 1
  %121 = getelementptr inbounds i8, i8* %118, i64 1
  %122 = ptrtoint i8* %121 to i64
  %123 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %82, i64 0, i32 0, i32 0, i32 0
  %124 = load i8*, i8** %123, align 8
  %125 = load i64, i64* %95, align 8
  %126 = ptrtoint i8* %124 to i64
  %127 = sub i64 %125, %126
  %128 = sub i64 0, %127
  %129 = getelementptr inbounds i8, i8* %118, i64 %128
  %130 = ptrtoint i8* %129 to i64
  %131 = icmp sgt i64 %127, 0
  br i1 %131, label %132, label %134

132:                                              ; preds = %115
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %129, i8* align 1 %124, i64 %127, i1 false) #15
  %133 = load i8*, i8** %123, align 8
  br label %134

134:                                              ; preds = %132, %115
  %135 = phi i8* [ %124, %115 ], [ %133, %132 ]
  store i64 %130, i64* %96, align 8
  store i64 %122, i64* %95, align 8
  store i64 %120, i64* %104, align 8
  %136 = icmp eq i8* %135, null
  br i1 %136, label %138, label %137

137:                                              ; preds = %134
  tail call void @_ZdlPv(i8* nonnull %135) #19
  br label %138

138:                                              ; preds = %89, %134, %137
  %139 = load %"class.v8::internal::SnapshotByteSink"*, %"class.v8::internal::SnapshotByteSink"** %81, align 8
  %140 = sext i32 %80 to i64
  tail call void @_ZN2v88internal16SnapshotByteSink6PutIntEmPKc(%"class.v8::internal::SnapshotByteSink"* %139, i64 %140, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.34, i64 0, i64 0)) #15
  %141 = load i64, i64* %5, align 8
  %142 = add i64 %141, -1
  %143 = inttoptr i64 %142 to i8*
  %144 = load %"class.v8::internal::SnapshotByteSink"*, %"class.v8::internal::SnapshotByteSink"** %81, align 8
  br label %149

145:                                              ; preds = %209
  tail call void @_ZN2v88internal16SnapshotByteSink6PutRawEPKhiPKc(%"class.v8::internal::SnapshotByteSink"* %211, i8* %75, i32 %76, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.40, i64 0, i64 0)) #15
  %146 = sub i32 -12, %76
  %147 = add i32 %146, %78
  %148 = icmp sgt i32 %147, 0
  br i1 %148, label %214, label %213

149:                                              ; preds = %209, %138
  %150 = phi i64 [ 4, %138 ], [ %210, %209 ]
  %151 = phi %"class.v8::internal::SnapshotByteSink"* [ %144, %138 ], [ %211, %209 ]
  %152 = getelementptr inbounds i8, i8* %143, i64 %150
  %153 = load i8, i8* %152, align 1
  %154 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %151, i64 0, i32 0, i32 0, i32 1
  %155 = load i8*, i8** %154, align 8
  %156 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %151, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %157 = load i8*, i8** %156, align 8
  %158 = icmp eq i8* %155, %157
  %159 = ptrtoint i8* %157 to i64
  br i1 %158, label %164, label %160

160:                                              ; preds = %149
  store i8 %153, i8* %155, align 1
  %161 = getelementptr inbounds i8, i8* %155, i64 1
  %162 = ptrtoint i8* %161 to i64
  %163 = bitcast i8** %154 to i64*
  store i64 %162, i64* %163, align 8
  br label %209

164:                                              ; preds = %149
  %165 = ptrtoint i8* %155 to i64
  %166 = bitcast i8** %154 to i64*
  %167 = bitcast %"class.v8::internal::SnapshotByteSink"* %151 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = sub i64 %165, %168
  %170 = add i64 %169, 1
  %171 = icmp slt i64 %170, 0
  br i1 %171, label %172, label %174

172:                                              ; preds = %164
  %173 = bitcast %"class.v8::internal::SnapshotByteSink"* %151 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %173) #18
  unreachable

174:                                              ; preds = %164
  %175 = bitcast i8** %156 to i64*
  %176 = sub i64 %159, %168
  %177 = icmp ult i64 %176, 4611686018427387903
  br i1 %177, label %178, label %183

178:                                              ; preds = %174
  %179 = shl i64 %176, 1
  %180 = icmp ult i64 %179, %170
  %181 = select i1 %180, i64 %170, i64 %179
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %186, label %183

183:                                              ; preds = %178, %174
  %184 = phi i64 [ %181, %178 ], [ 9223372036854775807, %174 ]
  %185 = tail call i8* @_Znwm(i64 %184) #19
  br label %186

186:                                              ; preds = %183, %178
  %187 = phi i64 [ %184, %183 ], [ 0, %178 ]
  %188 = phi i8* [ %185, %183 ], [ null, %178 ]
  %189 = getelementptr inbounds i8, i8* %188, i64 %169
  %190 = getelementptr inbounds i8, i8* %188, i64 %187
  %191 = ptrtoint i8* %190 to i64
  store i8 %153, i8* %189, align 1
  %192 = getelementptr inbounds i8, i8* %189, i64 1
  %193 = ptrtoint i8* %192 to i64
  %194 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %151, i64 0, i32 0, i32 0, i32 0
  %195 = load i8*, i8** %194, align 8
  %196 = load i64, i64* %166, align 8
  %197 = ptrtoint i8* %195 to i64
  %198 = sub i64 %196, %197
  %199 = sub i64 0, %198
  %200 = getelementptr inbounds i8, i8* %189, i64 %199
  %201 = ptrtoint i8* %200 to i64
  %202 = icmp sgt i64 %198, 0
  br i1 %202, label %203, label %205

203:                                              ; preds = %186
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %200, i8* align 1 %195, i64 %198, i1 false) #15
  %204 = load i8*, i8** %194, align 8
  br label %205

205:                                              ; preds = %203, %186
  %206 = phi i8* [ %195, %186 ], [ %204, %203 ]
  store i64 %201, i64* %167, align 8
  store i64 %193, i64* %166, align 8
  store i64 %191, i64* %175, align 8
  %207 = icmp eq i8* %206, null
  br i1 %207, label %209, label %208

208:                                              ; preds = %205
  tail call void @_ZdlPv(i8* nonnull %206) #19
  br label %209

209:                                              ; preds = %160, %205, %208
  %210 = add nuw nsw i64 %150, 1
  %211 = load %"class.v8::internal::SnapshotByteSink"*, %"class.v8::internal::SnapshotByteSink"** %81, align 8
  %212 = icmp eq i64 %210, 12
  br i1 %212, label %145, label %149

213:                                              ; preds = %272, %145
  ret void

214:                                              ; preds = %145, %272
  %215 = phi i32 [ %273, %272 ], [ 0, %145 ]
  %216 = load %"class.v8::internal::SnapshotByteSink"*, %"class.v8::internal::SnapshotByteSink"** %81, align 8
  %217 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %216, i64 0, i32 0, i32 0, i32 1
  %218 = load i8*, i8** %217, align 8
  %219 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %216, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %220 = load i8*, i8** %219, align 8
  %221 = icmp eq i8* %218, %220
  %222 = ptrtoint i8* %220 to i64
  br i1 %221, label %227, label %223

223:                                              ; preds = %214
  store i8 0, i8* %218, align 1
  %224 = getelementptr inbounds i8, i8* %218, i64 1
  %225 = ptrtoint i8* %224 to i64
  %226 = bitcast i8** %217 to i64*
  store i64 %225, i64* %226, align 8
  br label %272

227:                                              ; preds = %214
  %228 = ptrtoint i8* %218 to i64
  %229 = bitcast i8** %217 to i64*
  %230 = bitcast %"class.v8::internal::SnapshotByteSink"* %216 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = sub i64 %228, %231
  %233 = add i64 %232, 1
  %234 = icmp slt i64 %233, 0
  br i1 %234, label %235, label %237

235:                                              ; preds = %227
  %236 = bitcast %"class.v8::internal::SnapshotByteSink"* %216 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %236) #18
  unreachable

237:                                              ; preds = %227
  %238 = bitcast i8** %219 to i64*
  %239 = sub i64 %222, %231
  %240 = icmp ult i64 %239, 4611686018427387903
  br i1 %240, label %241, label %246

241:                                              ; preds = %237
  %242 = shl i64 %239, 1
  %243 = icmp ult i64 %242, %233
  %244 = select i1 %243, i64 %233, i64 %242
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %249, label %246

246:                                              ; preds = %241, %237
  %247 = phi i64 [ %244, %241 ], [ 9223372036854775807, %237 ]
  %248 = tail call i8* @_Znwm(i64 %247) #19
  br label %249

249:                                              ; preds = %246, %241
  %250 = phi i64 [ %247, %246 ], [ 0, %241 ]
  %251 = phi i8* [ %248, %246 ], [ null, %241 ]
  %252 = getelementptr inbounds i8, i8* %251, i64 %232
  %253 = getelementptr inbounds i8, i8* %251, i64 %250
  %254 = ptrtoint i8* %253 to i64
  store i8 0, i8* %252, align 1
  %255 = getelementptr inbounds i8, i8* %252, i64 1
  %256 = ptrtoint i8* %255 to i64
  %257 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %216, i64 0, i32 0, i32 0, i32 0
  %258 = load i8*, i8** %257, align 8
  %259 = load i64, i64* %229, align 8
  %260 = ptrtoint i8* %258 to i64
  %261 = sub i64 %259, %260
  %262 = sub i64 0, %261
  %263 = getelementptr inbounds i8, i8* %252, i64 %262
  %264 = ptrtoint i8* %263 to i64
  %265 = icmp sgt i64 %261, 0
  br i1 %265, label %266, label %268

266:                                              ; preds = %249
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %263, i8* align 1 %258, i64 %261, i1 false) #15
  %267 = load i8*, i8** %257, align 8
  br label %268

268:                                              ; preds = %266, %249
  %269 = phi i8* [ %258, %249 ], [ %267, %266 ]
  store i64 %264, i64* %230, align 8
  store i64 %256, i64* %229, align 8
  store i64 %254, i64* %238, align 8
  %270 = icmp eq i8* %269, null
  br i1 %270, label %272, label %271

271:                                              ; preds = %268
  tail call void @_ZdlPv(i8* nonnull %269) #19
  br label %272

272:                                              ; preds = %223, %268, %271
  %273 = add nuw nsw i32 %215, 1
  %274 = icmp eq i32 %273, %147
  br i1 %274, label %213, label %214
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer16ObjectSerializer9SerializeEv(%"class.v8::internal::Serializer::ObjectSerializer"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef", align 8
  %3 = alloca %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef", align 8
  %4 = alloca %"class.v8::internal::Handle<v8::internal::SeqOneByteString>::ObjectRef", align 8
  %5 = alloca %"class.v8::internal::Handle<v8::internal::SeqTwoByteString>::ObjectRef", align 8
  %6 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 2
  %7 = load %"class.v8::internal::Serializer"*, %"class.v8::internal::Serializer"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %7, i64 0, i32 16
  %9 = load i32, i32* %8, align 4
  %10 = add nsw i32 %9, 1
  store i32 %10, i32* %8, align 4
  %11 = icmp sgt i32 %9, 30
  br i1 %11, label %12, label %20

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = load i64, i64* %14, align 8
  %16 = tail call zeroext i1 @_ZN2v88internal22SerializerDeserializer13CanBeDeferredENS0_10HeapObjectE(i64 %15) #15
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = load i8, i8* @_ZN2v88internal21FLAG_trace_serializerE, align 1, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %41, label %33

20:                                               ; preds = %1, %12
  %21 = load %"class.v8::internal::Serializer"*, %"class.v8::internal::Serializer"** %6, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 3, i32 0, i32 0
  %23 = load i64*, i64** %22, align 8
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.v8::internal::Serializer"* %21 to i1 (%"class.v8::internal::Serializer"*, i64)***
  %26 = load i1 (%"class.v8::internal::Serializer"*, i64)**, i1 (%"class.v8::internal::Serializer"*, i64)*** %25, align 8
  %27 = getelementptr inbounds i1 (%"class.v8::internal::Serializer"*, i64)*, i1 (%"class.v8::internal::Serializer"*, i64)** %26, i64 7
  %28 = load i1 (%"class.v8::internal::Serializer"*, i64)*, i1 (%"class.v8::internal::Serializer"*, i64)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.v8::internal::Serializer"* %21, i64 %24) #15
  %30 = load i8, i8* @_ZN2v88internal21FLAG_trace_serializerE, align 1, !range !2
  %31 = icmp ne i8 %30, 0
  br i1 %29, label %32, label %71

32:                                               ; preds = %20
  br i1 %31, label %33, label %41

33:                                               ; preds = %17, %32
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.42, i64 0, i64 0)) #15
  %34 = bitcast %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #15
  %35 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 3, i32 0, i32 0
  %36 = load i64*, i64** %35, align 8
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef"* %2, i64 0, i32 0, i32 0
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZNK2v88internal6Object10ShortPrintEP8_IO_FILE(%"class.v8::internal::Object"* nonnull %39, %struct._IO_FILE* %40) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #15
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #15
  br label %41

41:                                               ; preds = %17, %33, %32
  %42 = load %"class.v8::internal::Serializer"*, %"class.v8::internal::Serializer"** %6, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 3, i32 0, i32 0
  %44 = load i64*, i64** %43, align 8
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %42, i64 0, i32 2
  %47 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %47, i64 0, i32 0, i32 7, i32 0, i64 491
  %49 = load i64, i64* %48, align 8
  %50 = trunc i64 %45 to i32
  %51 = trunc i64 %49 to i32
  %52 = icmp eq i32 %50, %51
  br i1 %52, label %60, label %53

53:                                               ; preds = %41
  %54 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %42, i64 0, i32 14
  %55 = bitcast %"class.v8::internal::IdentityMap.1191"* %54 to %"class.v8::internal::IdentityMapBase"*
  %56 = call { i64*, i8 } @_ZN2v88internal15IdentityMapBase17FindOrInsertEntryEm(%"class.v8::internal::IdentityMapBase"* %55, i64 %45) #15
  %57 = load %"class.v8::internal::Serializer"*, %"class.v8::internal::Serializer"** %6, align 8
  %58 = load i64*, i64** %43, align 8
  %59 = load i64, i64* %58, align 8
  br label %60

60:                                               ; preds = %41, %53
  %61 = phi i64 [ %45, %41 ], [ %59, %53 ]
  %62 = phi %"class.v8::internal::Serializer"* [ %42, %41 ], [ %57, %53 ]
  %63 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %62, i64 0, i32 14
  %64 = bitcast %"class.v8::internal::IdentityMap.1191"* %63 to %"class.v8::internal::IdentityMapBase"*
  %65 = call i64* @_ZNK2v88internal15IdentityMapBase9FindEntryEm(%"class.v8::internal::IdentityMapBase"* %64, i64 %61) #15
  %66 = bitcast i64* %65 to %"class.std::__1::vector.822"**
  call void @_ZN2v88internal10Serializer26PutPendingForwardReferenceERPNSt3__16vectorIiNS2_9allocatorIiEEEE(%"class.v8::internal::Serializer"* %62, %"class.std::__1::vector.822"** dereferenceable(8) %66)
  %67 = load %"class.v8::internal::Serializer"*, %"class.v8::internal::Serializer"** %6, align 8
  %68 = load i64*, i64** %43, align 8
  %69 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %67, i64 0, i32 9
  %70 = load i64, i64* %68, align 8
  call void @_ZN2v88internal18GlobalHandleVectorINS0_10HeapObjectEE4PushES2_(%"class.v8::internal::GlobalHandleVector.1186"* %69, i64 %70) #15
  br label %229

71:                                               ; preds = %20
  br i1 %31, label %72, label %79

72:                                               ; preds = %71
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.43, i64 0, i64 0)) #15
  %73 = bitcast %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #15
  %74 = load i64*, i64** %22, align 8
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef"* %3, i64 0, i32 0, i32 0
  %78 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZNK2v88internal6Object10ShortPrintEP8_IO_FILE(%"class.v8::internal::Object"* nonnull %77, %struct._IO_FILE* %78) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #15
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #15
  br label %79

79:                                               ; preds = %72, %71
  %80 = load i64*, i64** %22, align 8
  %81 = load i64, i64* %80, align 8
  %82 = and i64 %81, -4294967296
  %83 = add i64 %81, -1
  %84 = inttoptr i64 %83 to i32*
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = zext i32 %85 to i64
  %87 = or i64 %82, %86
  %88 = add i64 %87, 7
  %89 = inttoptr i64 %88 to i16*
  %90 = load atomic i16, i16* %89 monotonic, align 2
  %91 = and i16 %90, -57
  %92 = icmp eq i16 %91, 2
  br i1 %92, label %93, label %94

93:                                               ; preds = %79
  call void @_ZN2v88internal10Serializer16ObjectSerializer23SerializeExternalStringEv(%"class.v8::internal::Serializer::ObjectSerializer"* %0)
  br label %229

94:                                               ; preds = %79
  %95 = call zeroext i1 @_ZN2v88internal12ReadOnlyHeap8ContainsENS0_10HeapObjectE(i64 %81) #15
  br i1 %95, label %161, label %96

96:                                               ; preds = %94
  %97 = load i64*, i64** %22, align 8
  %98 = load i64, i64* %97, align 8
  %99 = and i64 %98, -4294967296
  %100 = add i64 %98, -1
  %101 = inttoptr i64 %100 to i32*
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = zext i32 %102 to i64
  %104 = or i64 %99, %103
  %105 = add i64 %104, 7
  %106 = inttoptr i64 %105 to i16*
  %107 = load atomic i16, i16* %106 monotonic, align 2
  %108 = icmp ult i16 %107, 64
  br i1 %108, label %109, label %131

109:                                              ; preds = %96
  %110 = load atomic i32, i32* %101 monotonic, align 4
  %111 = zext i32 %110 to i64
  %112 = or i64 %99, %111
  %113 = add i64 %112, 7
  %114 = inttoptr i64 %113 to i16*
  %115 = load atomic i16, i16* %114 monotonic, align 2
  %116 = and i16 %115, 7
  %117 = icmp eq i16 %116, 0
  br i1 %117, label %118, label %131

118:                                              ; preds = %109
  %119 = load atomic i32, i32* %101 monotonic, align 4
  %120 = zext i32 %119 to i64
  %121 = or i64 %99, %120
  %122 = add i64 %121, 7
  %123 = inttoptr i64 %122 to i16*
  %124 = load atomic i16, i16* %123 monotonic, align 2
  %125 = and i16 %124, 8
  %126 = icmp eq i16 %125, 0
  br i1 %126, label %131, label %127

127:                                              ; preds = %118
  %128 = bitcast %"class.v8::internal::Handle<v8::internal::SeqOneByteString>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128) #15
  %129 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SeqOneByteString>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SeqOneByteString>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %98, i64* %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SeqOneByteString>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SeqOneByteString>::ObjectRef"* %4, i64 0, i32 0
  call void @_ZN2v88internal16SeqOneByteString13clear_paddingEv(%"class.v8::internal::SeqOneByteString"* nonnull %130) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #15
  br label %161

131:                                              ; preds = %118, %109, %96
  %132 = load atomic i32, i32* %101 monotonic, align 4
  %133 = zext i32 %132 to i64
  %134 = or i64 %99, %133
  %135 = add i64 %134, 7
  %136 = inttoptr i64 %135 to i16*
  %137 = load atomic i16, i16* %136 monotonic, align 2
  %138 = icmp ult i16 %137, 64
  br i1 %138, label %139, label %161

139:                                              ; preds = %131
  %140 = load atomic i32, i32* %101 monotonic, align 4
  %141 = zext i32 %140 to i64
  %142 = or i64 %99, %141
  %143 = add i64 %142, 7
  %144 = inttoptr i64 %143 to i16*
  %145 = load atomic i16, i16* %144 monotonic, align 2
  %146 = and i16 %145, 7
  %147 = icmp eq i16 %146, 0
  br i1 %147, label %148, label %161

148:                                              ; preds = %139
  %149 = load atomic i32, i32* %101 monotonic, align 4
  %150 = zext i32 %149 to i64
  %151 = or i64 %99, %150
  %152 = add i64 %151, 7
  %153 = inttoptr i64 %152 to i16*
  %154 = load atomic i16, i16* %153 monotonic, align 2
  %155 = and i16 %154, 8
  %156 = icmp eq i16 %155, 0
  br i1 %156, label %157, label %161

157:                                              ; preds = %148
  %158 = bitcast %"class.v8::internal::Handle<v8::internal::SeqTwoByteString>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %158) #15
  %159 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SeqTwoByteString>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SeqTwoByteString>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %98, i64* %159, align 8
  %160 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::SeqTwoByteString>::ObjectRef", %"class.v8::internal::Handle<v8::internal::SeqTwoByteString>::ObjectRef"* %5, i64 0, i32 0
  call void @_ZN2v88internal16SeqTwoByteString13clear_paddingEv(%"class.v8::internal::SeqTwoByteString"* nonnull %160) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %158) #15
  br label %161

161:                                              ; preds = %139, %131, %94, %148, %157, %127
  %162 = load i64*, i64** %22, align 8
  %163 = load i64, i64* %162, align 8
  %164 = and i64 %163, -4294967296
  %165 = add i64 %163, -1
  %166 = inttoptr i64 %165 to i32*
  %167 = load atomic i32, i32* %166 monotonic, align 4
  %168 = zext i32 %167 to i64
  %169 = or i64 %164, %168
  %170 = add i64 %169, 7
  %171 = inttoptr i64 %170 to i16*
  %172 = load atomic i16, i16* %171 monotonic, align 2
  %173 = icmp eq i16 %172, 1080
  br i1 %173, label %174, label %175

174:                                              ; preds = %161
  call void @_ZN2v88internal10Serializer16ObjectSerializer21SerializeJSTypedArrayEv(%"class.v8::internal::Serializer::ObjectSerializer"* %0)
  br label %229

175:                                              ; preds = %161
  %176 = load atomic i32, i32* %166 monotonic, align 4
  %177 = zext i32 %176 to i64
  %178 = or i64 %164, %177
  %179 = add i64 %178, 7
  %180 = inttoptr i64 %179 to i16*
  %181 = load atomic i16, i16* %180 monotonic, align 2
  %182 = icmp eq i16 %181, 1086
  br i1 %182, label %183, label %184

183:                                              ; preds = %175
  call void @_ZN2v88internal10Serializer16ObjectSerializer22SerializeJSArrayBufferEv(%"class.v8::internal::Serializer::ObjectSerializer"* %0)
  br label %229

184:                                              ; preds = %175
  %185 = load atomic i32, i32* %166 monotonic, align 4
  %186 = zext i32 %185 to i64
  %187 = or i64 %164, %186
  %188 = add i64 %187, 7
  %189 = inttoptr i64 %188 to i16*
  %190 = load atomic i16, i16* %189 monotonic, align 2
  %191 = icmp eq i16 %190, 112
  br i1 %191, label %192, label %228

192:                                              ; preds = %184
  %193 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 1
  %194 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %193, align 8
  %195 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %194, i64 0, i32 0, i32 7, i32 0, i64 4
  %196 = load i64, i64* %195, align 8
  %197 = add i64 %163, 27
  %198 = inttoptr i64 %197 to i32*
  %199 = trunc i64 %196 to i32
  store atomic volatile i32 %199, i32* %198 monotonic, align 4
  %200 = and i64 %196, 1
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %213, label %202

202:                                              ; preds = %192
  %203 = and i64 %163, -262144
  %204 = or i64 %203, 8
  %205 = inttoptr i64 %204 to i64*
  %206 = load i64, i64* %205, align 8
  %207 = and i64 %206, 262144
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %213, label %209

209:                                              ; preds = %202
  %210 = or i64 %203, 16
  %211 = inttoptr i64 %210 to %"class.v8::internal::Heap"**
  %212 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %211, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %212, i64 %163, i64 %197, i64 %196) #15
  br label %213

213:                                              ; preds = %209, %202, %192
  %214 = and i64 %196, -262144
  %215 = or i64 %214, 8
  %216 = inttoptr i64 %215 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = and i64 %217, 24
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %228, label %220

220:                                              ; preds = %213
  %221 = and i64 %163, -262144
  %222 = or i64 %221, 8
  %223 = inttoptr i64 %222 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = and i64 %224, 24
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %227, label %228

227:                                              ; preds = %220
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %163, i64 %197, i64 %196) #15
  br label %228

228:                                              ; preds = %227, %220, %213, %184
  call void @_ZN2v88internal10Serializer16ObjectSerializer15SerializeObjectEv(%"class.v8::internal::Serializer::ObjectSerializer"* %0)
  br label %229

229:                                              ; preds = %228, %183, %174, %93, %60
  %230 = load i32, i32* %8, align 4
  %231 = add nsw i32 %230, -1
  store i32 %231, i32* %8, align 4
  ret void
}

declare zeroext i1 @_ZN2v88internal22SerializerDeserializer13CanBeDeferredENS0_10HeapObjectE(i64) local_unnamed_addr #1

declare zeroext i1 @_ZN2v88internal12ReadOnlyHeap8ContainsENS0_10HeapObjectE(i64) local_unnamed_addr #1

declare void @_ZN2v88internal16SeqOneByteString13clear_paddingEv(%"class.v8::internal::SeqOneByteString"*) local_unnamed_addr #1

declare void @_ZN2v88internal16SeqTwoByteString13clear_paddingEv(%"class.v8::internal::SeqTwoByteString"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer16ObjectSerializer16SerializeContentENS0_3MapEi(%"class.v8::internal::Serializer::ObjectSerializer"*, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::UnlinkWeakNextScope", align 8
  %5 = alloca %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef", align 8
  %6 = bitcast %"class.v8::internal::UnlinkWeakNextScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 1
  %8 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %8, i64 0, i32 2
  %10 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 3, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  call void @_ZN2v88internal19UnlinkWeakNextScopeC2EPNS0_4HeapENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::UnlinkWeakNextScope"* nonnull %4, %"class.v8::internal::Heap"* %9, i64* %11)
  %12 = load i64*, i64** %10, align 8
  %13 = load i64, i64* %12, align 8
  %14 = and i64 %13, -4294967296
  %15 = add i64 %13, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %14, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = icmp eq i16 %22, 162
  br i1 %23, label %24, label %25

24:                                               ; preds = %3
  call void @_ZN2v88internal10Serializer16ObjectSerializer13SerializeCodeENS0_3MapEi(%"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 undef, i32 %2)
  br label %35

25:                                               ; preds = %3
  %26 = bitcast %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #15
  %27 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %13, i64* %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef", %"class.v8::internal::Handle<v8::internal::HeapObject>::ObjectRef"* %5, i64 0, i32 0
  %29 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 0
  call void @_ZN2v88internal10HeapObject11IterateBodyENS0_3MapEiPNS0_13ObjectVisitorE(%"class.v8::internal::HeapObject"* nonnull %28, i64 %1, i32 %2, %"class.v8::internal::ObjectVisitor"* %29) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #15
  %30 = load i64*, i64** %10, align 8
  %31 = load i64, i64* %30, align 8
  %32 = sext i32 %2 to i64
  %33 = add nsw i64 %32, -1
  %34 = add i64 %33, %31
  call void @_ZN2v88internal10Serializer16ObjectSerializer13OutputRawDataEm(%"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 %34)
  br label %35

35:                                               ; preds = %25, %24
  %36 = getelementptr inbounds %"class.v8::internal::UnlinkWeakNextScope", %"class.v8::internal::UnlinkWeakNextScope"* %4, i64 0, i32 0, i32 0, i32 0
  %37 = load i64*, i64** %36, align 8
  %38 = icmp eq i64* %37, null
  br i1 %38, label %64, label %39

39:                                               ; preds = %35
  %40 = load i64, i64* %37, align 8
  %41 = getelementptr inbounds %"class.v8::internal::UnlinkWeakNextScope", %"class.v8::internal::UnlinkWeakNextScope"* %4, i64 0, i32 1, i32 0, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %40, 23
  %45 = inttoptr i64 %44 to i32*
  %46 = trunc i64 %43 to i32
  store atomic volatile i32 %46, i32* %45 monotonic, align 4
  %47 = and i64 %43, 1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %64, label %49

49:                                               ; preds = %39
  %50 = and i64 %43, -262144
  %51 = or i64 %50, 8
  %52 = inttoptr i64 %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = and i64 %53, 24
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %64, label %56

56:                                               ; preds = %49
  %57 = and i64 %40, -262144
  %58 = or i64 %57, 8
  %59 = inttoptr i64 %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = and i64 %60, 24
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %56
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %40, i64 %44, i64 %43) #15
  br label %64

64:                                               ; preds = %35, %39, %49, %56, %63
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal19UnlinkWeakNextScopeC2EPNS0_4HeapENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::UnlinkWeakNextScope"*, %"class.v8::internal::Heap"*, i64*) unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i64* %2 to i64
  %5 = getelementptr inbounds %"class.v8::internal::UnlinkWeakNextScope", %"class.v8::internal::UnlinkWeakNextScope"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.v8::internal::UnlinkWeakNextScope"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false)
  %7 = load i64, i64* %2, align 8
  %8 = and i64 %7, -4294967296
  %9 = add i64 %7, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = zext i32 %11 to i64
  %13 = or i64 %8, %12
  %14 = add i64 %13, 7
  %15 = inttoptr i64 %14 to i16*
  %16 = load atomic i16, i16* %15 monotonic, align 2
  %17 = icmp eq i16 %16, 90
  br i1 %17, label %18, label %105

18:                                               ; preds = %3
  %19 = load atomic i32, i32* %10 monotonic, align 4
  %20 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %21 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %20, i64 0, i32 0, i32 1
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %20, i64 0, i32 1, i64 0
  br label %36

28:                                               ; preds = %22, %18
  %29 = and i64 %7, -262144
  %30 = or i64 %29, 16
  %31 = inttoptr i64 %30 to i64*
  %32 = load i64, i64* %31, align 16
  %33 = add i64 %32, -41416
  %34 = inttoptr i64 %33 to %"class.v8::internal::Isolate"*
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %34, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %36

36:                                               ; preds = %26, %28
  %37 = phi i64* [ %35, %28 ], [ %27, %26 ]
  %38 = getelementptr inbounds i64, i64* %37, i64 578
  %39 = load i64, i64* %38, align 8
  %40 = trunc i64 %39 to i32
  %41 = icmp eq i32 %19, %40
  br i1 %41, label %42, label %105

42:                                               ; preds = %36
  %43 = bitcast %"class.v8::internal::UnlinkWeakNextScope"* %0 to i64*
  store i64 %4, i64* %43, align 8
  %44 = load i64, i64* %2, align 8
  %45 = and i64 %44, -4294967296
  %46 = add i64 %44, 23
  %47 = inttoptr i64 %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %45, %49
  %51 = ptrtoint %"class.v8::internal::Heap"* %1 to i64
  %52 = add i64 %51, -41416
  %53 = inttoptr i64 %52 to %"class.v8::internal::Isolate"*
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %53, i64 0, i32 31, i32 4
  %55 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %54, align 8
  %56 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %55, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %42
  %58 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %55, i64 %50) #15
  br label %72

59:                                               ; preds = %42
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %53, i64 0, i32 31, i32 0
  %61 = load i64*, i64** %60, align 8
  %62 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %53, i64 0, i32 31, i32 1
  %63 = load i64*, i64** %62, align 8
  %64 = icmp eq i64* %61, %63
  br i1 %64, label %65, label %67

65:                                               ; preds = %59
  %66 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %53) #15
  br label %67

67:                                               ; preds = %65, %59
  %68 = phi i64* [ %66, %65 ], [ %61, %59 ]
  %69 = ptrtoint i64* %68 to i64
  %70 = add i64 %69, 8
  %71 = inttoptr i64 %70 to i64*
  store i64* %71, i64** %60, align 8
  store i64 %50, i64* %68, align 8
  br label %72

72:                                               ; preds = %57, %67
  %73 = phi i64* [ %58, %57 ], [ %68, %67 ]
  store i64* %73, i64** %5, align 8
  %74 = load i64, i64* %2, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %53, i64 0, i32 0, i32 7, i32 0, i64 4
  %76 = load i64, i64* %75, align 8
  %77 = add i64 %74, 23
  %78 = inttoptr i64 %77 to i32*
  %79 = trunc i64 %76 to i32
  store atomic volatile i32 %79, i32* %78 monotonic, align 4
  %80 = and i64 %76, 1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %105, label %82

82:                                               ; preds = %72
  %83 = and i64 %74, -262144
  %84 = or i64 %83, 8
  %85 = inttoptr i64 %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = and i64 %86, 262144
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %93, label %89

89:                                               ; preds = %82
  %90 = or i64 %83, 16
  %91 = inttoptr i64 %90 to %"class.v8::internal::Heap"**
  %92 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %91, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %92, i64 %74, i64 %77, i64 %76) #15
  br label %93

93:                                               ; preds = %89, %82
  %94 = and i64 %76, -262144
  %95 = or i64 %94, 8
  %96 = inttoptr i64 %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = and i64 %97, 24
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %105, label %100

100:                                              ; preds = %93
  %101 = load i64, i64* %85, align 8
  %102 = and i64 %101, 24
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %100
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %74, i64 %77, i64 %76) #15
  br label %105

105:                                              ; preds = %3, %104, %100, %93, %72, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer16ObjectSerializer13SerializeCodeENS0_3MapEi(%"class.v8::internal::Serializer::ObjectSerializer"*, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::RelocIterator", align 8
  %5 = alloca %"class.v8::internal::Serializer::ObjectSerializer::RelocInfoObjectPreSerializer", align 8
  %6 = alloca %"class.v8::internal::RelocIterator", align 8
  %7 = alloca %"class.v8::internal::RelocIterator", align 8
  %8 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 3, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, -4294967296
  %12 = add i64 %10, 3
  %13 = inttoptr i64 %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %11, %15
  %17 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 2
  %18 = load %"class.v8::internal::Serializer"*, %"class.v8::internal::Serializer"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %18, i64 0, i32 8
  %20 = bitcast %"class.std::__1::vector"* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %18, i64 0, i32 8, i32 0, i32 1
  %23 = bitcast i8** %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = add i64 %10, 19
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = add i64 %10, 23
  %28 = inttoptr i64 %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = add i32 %26, 95
  %31 = add i32 %30, %29
  %32 = and i32 %31, -32
  %33 = inttoptr i64 %21 to i8*
  %34 = add i64 %10, -1
  %35 = inttoptr i64 %34 to i8*
  %36 = sext i32 %32 to i64
  %37 = add i64 %34, %36
  %38 = inttoptr i64 %37 to i8*
  %39 = tail call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueENS_11__wrap_iterIS5_EEE4typeENSB_IPKhEES7_S7_(%"class.std::__1::vector"* %19, i8* %33, i8* %35, i8* %38) #15
  %40 = load i64, i64* %20, align 8
  %41 = add i64 %40, 1
  %42 = bitcast %"class.v8::internal::RelocIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %42) #15
  call void @_ZN2v88internal13RelocIteratorC1ENS0_4CodeENS0_9ByteArrayEi(%"class.v8::internal::RelocIterator"* nonnull %4, i64 %41, i64 %16, i32 7962) #15
  %43 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %4, i64 0, i32 3
  %44 = load i8, i8* %43, align 8, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %52

46:                                               ; preds = %3
  %47 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %4, i64 0, i32 2
  %48 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %4, i64 0, i32 2, i32 1
  %49 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %47, i64 0, i32 0
  %50 = bitcast %"class.v8::internal::RelocInfo"* %47 to i32**
  %51 = bitcast %"class.v8::internal::RelocInfo"* %47 to i64**
  br label %150

52:                                               ; preds = %161, %3
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %42) #15
  %53 = add i64 %40, 4
  %54 = inttoptr i64 %53 to i32*
  store atomic volatile i32 0, i32* %54 monotonic, align 4
  %55 = add i64 %40, 8
  %56 = inttoptr i64 %55 to i32*
  store atomic volatile i32 0, i32* %56 monotonic, align 4
  %57 = add i64 %40, 12
  %58 = inttoptr i64 %57 to i32*
  store atomic volatile i32 0, i32* %58 monotonic, align 4
  %59 = add i64 %40, 16
  %60 = inttoptr i64 %59 to i32*
  store atomic volatile i32 0, i32* %60 monotonic, align 4
  %61 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 4
  %62 = load %"class.v8::internal::SnapshotByteSink"*, %"class.v8::internal::SnapshotByteSink"** %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %62, i64 0, i32 0, i32 0, i32 1
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %62, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = icmp eq i8* %64, %66
  %68 = ptrtoint i8* %66 to i64
  br i1 %67, label %73, label %69

69:                                               ; preds = %52
  store i8 27, i8* %64, align 1
  %70 = getelementptr inbounds i8, i8* %64, i64 1
  %71 = ptrtoint i8* %70 to i64
  %72 = bitcast i8** %63 to i64*
  store i64 %71, i64* %72, align 8
  br label %118

73:                                               ; preds = %52
  %74 = ptrtoint i8* %64 to i64
  %75 = bitcast i8** %63 to i64*
  %76 = bitcast %"class.v8::internal::SnapshotByteSink"* %62 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = sub i64 %74, %77
  %79 = add i64 %78, 1
  %80 = icmp slt i64 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %73
  %82 = bitcast %"class.v8::internal::SnapshotByteSink"* %62 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %82) #18
  unreachable

83:                                               ; preds = %73
  %84 = bitcast i8** %65 to i64*
  %85 = sub i64 %68, %77
  %86 = icmp ult i64 %85, 4611686018427387903
  br i1 %86, label %87, label %92

87:                                               ; preds = %83
  %88 = shl i64 %85, 1
  %89 = icmp ult i64 %88, %79
  %90 = select i1 %89, i64 %79, i64 %88
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %95, label %92

92:                                               ; preds = %87, %83
  %93 = phi i64 [ %90, %87 ], [ 9223372036854775807, %83 ]
  %94 = call i8* @_Znwm(i64 %93) #19
  br label %95

95:                                               ; preds = %92, %87
  %96 = phi i64 [ %93, %92 ], [ 0, %87 ]
  %97 = phi i8* [ %94, %92 ], [ null, %87 ]
  %98 = getelementptr inbounds i8, i8* %97, i64 %78
  %99 = getelementptr inbounds i8, i8* %97, i64 %96
  %100 = ptrtoint i8* %99 to i64
  store i8 27, i8* %98, align 1
  %101 = getelementptr inbounds i8, i8* %98, i64 1
  %102 = ptrtoint i8* %101 to i64
  %103 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %62, i64 0, i32 0, i32 0, i32 0
  %104 = load i8*, i8** %103, align 8
  %105 = load i64, i64* %75, align 8
  %106 = ptrtoint i8* %104 to i64
  %107 = sub i64 %105, %106
  %108 = sub i64 0, %107
  %109 = getelementptr inbounds i8, i8* %98, i64 %108
  %110 = ptrtoint i8* %109 to i64
  %111 = icmp sgt i64 %107, 0
  br i1 %111, label %112, label %114

112:                                              ; preds = %95
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %109, i8* align 1 %104, i64 %107, i1 false) #15
  %113 = load i8*, i8** %103, align 8
  br label %114

114:                                              ; preds = %112, %95
  %115 = phi i8* [ %104, %95 ], [ %113, %112 ]
  store i64 %110, i64* %76, align 8
  store i64 %102, i64* %75, align 8
  store i64 %100, i64* %84, align 8
  %116 = icmp eq i8* %115, null
  br i1 %116, label %118, label %117

117:                                              ; preds = %114
  call void @_ZdlPv(i8* nonnull %115) #19
  br label %118

118:                                              ; preds = %69, %114, %117
  %119 = add i64 %40, 20
  %120 = add nsw i32 %2, -20
  %121 = sdiv i32 %120, 4
  %122 = load %"class.v8::internal::SnapshotByteSink"*, %"class.v8::internal::SnapshotByteSink"** %61, align 8
  %123 = sext i32 %121 to i64
  call void @_ZN2v88internal16SnapshotByteSink6PutIntEmPKc(%"class.v8::internal::SnapshotByteSink"* %122, i64 %123, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.34, i64 0, i64 0)) #15
  %124 = load %"class.v8::internal::SnapshotByteSink"*, %"class.v8::internal::SnapshotByteSink"** %61, align 8
  %125 = inttoptr i64 %119 to i8*
  call void @_ZN2v88internal16SnapshotByteSink6PutRawEPKhiPKc(%"class.v8::internal::SnapshotByteSink"* %124, i8* %125, i32 %120, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i64 0, i64 0)) #15
  %126 = load i64, i64* %9, align 8
  %127 = add i64 %126, 3
  %128 = add i64 %126, 19
  %129 = bitcast %"class.v8::internal::Serializer::ObjectSerializer"* %0 to void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, i64, i64)***
  %130 = load void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, i64, i64)**, void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, i64, i64)*** %129, align 8
  %131 = getelementptr inbounds void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, i64, i64)*, void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, i64, i64)** %130, i64 2
  %132 = load void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, i64, i64)*, void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, i64, i64)** %131, align 8
  call void %132(%"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 %126, i64 %127, i64 %128) #15
  %133 = bitcast %"class.v8::internal::Serializer::ObjectSerializer::RelocInfoObjectPreSerializer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %133) #15
  %134 = bitcast %"class.v8::internal::Serializer"** %17 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer::RelocInfoObjectPreSerializer", %"class.v8::internal::Serializer::ObjectSerializer::RelocInfoObjectPreSerializer"* %5, i64 0, i32 0
  %137 = bitcast %"class.v8::internal::Serializer::ObjectSerializer::RelocInfoObjectPreSerializer"* %5 to i64*
  store i64 %135, i64* %137, align 8
  %138 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer::RelocInfoObjectPreSerializer", %"class.v8::internal::Serializer::ObjectSerializer::RelocInfoObjectPreSerializer"* %5, i64 0, i32 1
  store i32 0, i32* %138, align 8
  %139 = bitcast %"class.v8::internal::RelocIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %139) #15
  %140 = load i64, i64* %9, align 8
  call void @_ZN2v88internal13RelocIteratorC1ENS0_4CodeENS0_9ByteArrayEi(%"class.v8::internal::RelocIterator"* nonnull %6, i64 %140, i64 %16, i32 7998) #15
  %141 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %6, i64 0, i32 3
  %142 = load i8, i8* %141, align 8, !range !2
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %144, label %164

144:                                              ; preds = %118
  %145 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %6, i64 0, i32 2
  %146 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %6, i64 0, i32 2, i32 1
  %147 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %6, i64 0, i32 2, i32 3, i32 0, i32 0, i32 0, i32 0
  %148 = bitcast %"class.v8::internal::RelocInfo"* %145 to i64**
  %149 = bitcast %"class.v8::internal::RelocInfo"* %145 to i32**
  br label %229

150:                                              ; preds = %46, %161
  %151 = load i8, i8* %48, align 8
  switch i8 %151, label %160 [
    i8 4, label %152
    i8 9, label %152
    i8 10, label %152
    i8 12, label %152
    i8 3, label %154
    i8 1, label %156
    i8 8, label %156
  ]

152:                                              ; preds = %150, %150, %150, %150
  %153 = load i64*, i64** %51, align 8
  store i64 0, i64* %153, align 1
  br label %161

154:                                              ; preds = %150
  %155 = load i32*, i32** %50, align 8
  store i32 0, i32* %155, align 1
  br label %161

156:                                              ; preds = %150, %150
  %157 = load i64, i64* %49, align 8
  %158 = inttoptr i64 %157 to i32*
  store i32 0, i32* %158, align 1
  %159 = inttoptr i64 %157 to i8*
  call void @_ZN2v88internal21FlushInstructionCacheEPvm(i8* %159, i64 4) #15
  br label %161

160:                                              ; preds = %150
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.59, i64 0, i64 0)) #18
  unreachable

161:                                              ; preds = %152, %154, %156
  call void @_ZN2v88internal13RelocIterator4nextEv(%"class.v8::internal::RelocIterator"* nonnull %4) #15
  %162 = load i8, i8* %43, align 8, !range !2
  %163 = icmp eq i8 %162, 0
  br i1 %163, label %150, label %52

164:                                              ; preds = %283, %118
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %139) #15
  %165 = load %"class.v8::internal::SnapshotByteSink"*, %"class.v8::internal::SnapshotByteSink"** %61, align 8
  %166 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %165, i64 0, i32 0, i32 0, i32 1
  %167 = load i8*, i8** %166, align 8
  %168 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %165, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %169 = load i8*, i8** %168, align 8
  %170 = icmp eq i8* %167, %169
  %171 = ptrtoint i8* %169 to i64
  br i1 %170, label %176, label %172

172:                                              ; preds = %164
  store i8 11, i8* %167, align 1
  %173 = getelementptr inbounds i8, i8* %167, i64 1
  %174 = ptrtoint i8* %173 to i64
  %175 = bitcast i8** %166 to i64*
  store i64 %174, i64* %175, align 8
  br label %221

176:                                              ; preds = %164
  %177 = ptrtoint i8* %167 to i64
  %178 = bitcast i8** %166 to i64*
  %179 = bitcast %"class.v8::internal::SnapshotByteSink"* %165 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = sub i64 %177, %180
  %182 = add i64 %181, 1
  %183 = icmp slt i64 %182, 0
  br i1 %183, label %184, label %186

184:                                              ; preds = %176
  %185 = bitcast %"class.v8::internal::SnapshotByteSink"* %165 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %185) #18
  unreachable

186:                                              ; preds = %176
  %187 = bitcast i8** %168 to i64*
  %188 = sub i64 %171, %180
  %189 = icmp ult i64 %188, 4611686018427387903
  br i1 %189, label %190, label %195

190:                                              ; preds = %186
  %191 = shl i64 %188, 1
  %192 = icmp ult i64 %191, %182
  %193 = select i1 %192, i64 %182, i64 %191
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %198, label %195

195:                                              ; preds = %190, %186
  %196 = phi i64 [ %193, %190 ], [ 9223372036854775807, %186 ]
  %197 = call i8* @_Znwm(i64 %196) #19
  br label %198

198:                                              ; preds = %195, %190
  %199 = phi i64 [ %196, %195 ], [ 0, %190 ]
  %200 = phi i8* [ %197, %195 ], [ null, %190 ]
  %201 = getelementptr inbounds i8, i8* %200, i64 %181
  %202 = getelementptr inbounds i8, i8* %200, i64 %199
  %203 = ptrtoint i8* %202 to i64
  store i8 11, i8* %201, align 1
  %204 = getelementptr inbounds i8, i8* %201, i64 1
  %205 = ptrtoint i8* %204 to i64
  %206 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %165, i64 0, i32 0, i32 0, i32 0
  %207 = load i8*, i8** %206, align 8
  %208 = load i64, i64* %178, align 8
  %209 = ptrtoint i8* %207 to i64
  %210 = sub i64 %208, %209
  %211 = sub i64 0, %210
  %212 = getelementptr inbounds i8, i8* %201, i64 %211
  %213 = ptrtoint i8* %212 to i64
  %214 = icmp sgt i64 %210, 0
  br i1 %214, label %215, label %217

215:                                              ; preds = %198
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %212, i8* align 1 %207, i64 %210, i1 false) #15
  %216 = load i8*, i8** %206, align 8
  br label %217

217:                                              ; preds = %215, %198
  %218 = phi i8* [ %207, %198 ], [ %216, %215 ]
  store i64 %213, i64* %179, align 8
  store i64 %205, i64* %178, align 8
  store i64 %203, i64* %187, align 8
  %219 = icmp eq i8* %218, null
  br i1 %219, label %221, label %220

220:                                              ; preds = %217
  call void @_ZdlPv(i8* nonnull %218) #19
  br label %221

221:                                              ; preds = %172, %217, %220
  %222 = bitcast %"class.v8::internal::RelocIterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %222) #15
  %223 = load i64, i64* %9, align 8
  call void @_ZN2v88internal13RelocIteratorC1ENS0_4CodeENS0_9ByteArrayEi(%"class.v8::internal::RelocIterator"* nonnull %7, i64 %223, i64 %16, i32 7998) #15
  %224 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %7, i64 0, i32 3
  %225 = load i8, i8* %224, align 8, !range !2
  %226 = icmp eq i8 %225, 0
  br i1 %226, label %227, label %286

227:                                              ; preds = %221
  %228 = getelementptr inbounds %"class.v8::internal::RelocIterator", %"class.v8::internal::RelocIterator"* %7, i64 0, i32 2
  br label %287

229:                                              ; preds = %144, %283
  %230 = load i8, i8* %146, align 8
  %231 = add i8 %230, -3
  %232 = icmp ult i8 %231, 3
  br i1 %232, label %233, label %276

233:                                              ; preds = %229
  %234 = icmp eq i8 %230, 3
  br i1 %234, label %235, label %246

235:                                              ; preds = %233
  %236 = load i64, i64* %147, align 8
  %237 = trunc i64 %236 to i32
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %240, !prof !30

239:                                              ; preds = %235
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.72, i64 0, i64 0)) #18
  unreachable

240:                                              ; preds = %235
  %241 = load i32*, i32** %149, align 8
  %242 = load i32, i32* %241, align 1
  %243 = and i64 %236, -4294967296
  %244 = zext i32 %242 to i64
  %245 = or i64 %243, %244
  br label %249

246:                                              ; preds = %233
  %247 = load i64*, i64** %148, align 8
  %248 = load i64, i64* %247, align 1
  br label %249

249:                                              ; preds = %246, %240
  %250 = phi i64 [ %245, %240 ], [ %248, %246 ]
  %251 = load %"class.v8::internal::Serializer"*, %"class.v8::internal::Serializer"** %136, align 8
  %252 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %251, i64 0, i32 2
  %253 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %252, align 8
  %254 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %253, i64 0, i32 31, i32 4
  %255 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %254, align 8
  %256 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %255, null
  br i1 %256, label %259, label %257

257:                                              ; preds = %249
  %258 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %255, i64 %250) #15
  br label %272

259:                                              ; preds = %249
  %260 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %253, i64 0, i32 31, i32 0
  %261 = load i64*, i64** %260, align 8
  %262 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %253, i64 0, i32 31, i32 1
  %263 = load i64*, i64** %262, align 8
  %264 = icmp eq i64* %261, %263
  br i1 %264, label %265, label %267

265:                                              ; preds = %259
  %266 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %253) #15
  br label %267

267:                                              ; preds = %265, %259
  %268 = phi i64* [ %266, %265 ], [ %261, %259 ]
  %269 = ptrtoint i64* %268 to i64
  %270 = add i64 %269, 8
  %271 = inttoptr i64 %270 to i64*
  store i64* %271, i64** %260, align 8
  store i64 %250, i64* %268, align 8
  br label %272

272:                                              ; preds = %257, %267
  %273 = phi i64* [ %258, %257 ], [ %268, %267 ]
  call void @_ZN2v88internal10Serializer15SerializeObjectENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::Serializer"* %251, i64* %273) #15
  %274 = load i32, i32* %138, align 8
  %275 = add nsw i32 %274, 1
  store i32 %275, i32* %138, align 8
  br label %283

276:                                              ; preds = %229
  %277 = icmp slt i8 %230, 3
  br i1 %277, label %278, label %280

278:                                              ; preds = %276
  %279 = load i64, i64* %147, align 8
  call void @_ZN2v88internal10Serializer16ObjectSerializer28RelocInfoObjectPreSerializer15VisitCodeTargetENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::Serializer::ObjectSerializer::RelocInfoObjectPreSerializer"* nonnull %5, i64 %279, %"class.v8::internal::RelocInfo"* %145) #15
  br label %283

280:                                              ; preds = %276
  %281 = icmp eq i8 %230, 8
  br i1 %281, label %282, label %283

282:                                              ; preds = %280
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.59, i64 0, i64 0)) #18
  unreachable

283:                                              ; preds = %272, %278, %280
  call void @_ZN2v88internal13RelocIterator4nextEv(%"class.v8::internal::RelocIterator"* nonnull %6) #15
  %284 = load i8, i8* %141, align 8, !range !2
  %285 = icmp eq i8 %284, 0
  br i1 %285, label %229, label %164

286:                                              ; preds = %287, %221
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %222) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %133) #15
  ret void

287:                                              ; preds = %227, %287
  call void @_ZN2v88internal9RelocInfo5VisitINS0_10Serializer16ObjectSerializerEEEvPT_(%"class.v8::internal::RelocInfo"* %228, %"class.v8::internal::Serializer::ObjectSerializer"* %0)
  call void @_ZN2v88internal13RelocIterator4nextEv(%"class.v8::internal::RelocIterator"* nonnull %7) #15
  %288 = load i8, i8* %224, align 8, !range !2
  %289 = icmp eq i8 %288, 0
  br i1 %289, label %287, label %286
}

declare void @_ZN2v88internal10HeapObject11IterateBodyENS0_3MapEiPNS0_13ObjectVisitorE(%"class.v8::internal::HeapObject"*, i64, i32, %"class.v8::internal::ObjectVisitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer16ObjectSerializer13OutputRawDataEm(%"class.v8::internal::Serializer::ObjectSerializer"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  %4 = alloca [2 x i8], align 1
  %5 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -1
  %9 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 5
  %10 = load i32, i32* %9, align 8
  %11 = sub i64 %1, %8
  %12 = trunc i64 %11 to i32
  %13 = sub nsw i32 %12, %10
  %14 = sdiv i32 %13, 4
  store i32 %12, i32* %9, align 8
  %15 = icmp eq i32 %13, 0
  br i1 %15, label %196, label %16

16:                                               ; preds = %2
  %17 = icmp slt i32 %13, 132
  %18 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 4
  %19 = load %"class.v8::internal::SnapshotByteSink"*, %"class.v8::internal::SnapshotByteSink"** %18, align 8
  br i1 %17, label %20, label %78

20:                                               ; preds = %16
  %21 = trunc i32 %14 to i8
  %22 = add i8 %21, 95
  %23 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %19, i64 0, i32 0, i32 0, i32 1
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %19, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = icmp eq i8* %24, %26
  %28 = ptrtoint i8* %26 to i64
  br i1 %27, label %33, label %29

29:                                               ; preds = %20
  store i8 %22, i8* %24, align 1
  %30 = getelementptr inbounds i8, i8* %24, i64 1
  %31 = ptrtoint i8* %30 to i64
  %32 = bitcast i8** %23 to i64*
  store i64 %31, i64* %32, align 8
  br label %137

33:                                               ; preds = %20
  %34 = ptrtoint i8* %24 to i64
  %35 = bitcast i8** %23 to i64*
  %36 = bitcast %"class.v8::internal::SnapshotByteSink"* %19 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %34, %37
  %39 = add i64 %38, 1
  %40 = icmp slt i64 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %33
  %42 = bitcast %"class.v8::internal::SnapshotByteSink"* %19 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %42) #18
  unreachable

43:                                               ; preds = %33
  %44 = bitcast i8** %25 to i64*
  %45 = sub i64 %28, %37
  %46 = icmp ult i64 %45, 4611686018427387903
  br i1 %46, label %47, label %52

47:                                               ; preds = %43
  %48 = shl i64 %45, 1
  %49 = icmp ult i64 %48, %39
  %50 = select i1 %49, i64 %39, i64 %48
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47, %43
  %53 = phi i64 [ %50, %47 ], [ 9223372036854775807, %43 ]
  %54 = tail call i8* @_Znwm(i64 %53) #19
  br label %55

55:                                               ; preds = %52, %47
  %56 = phi i64 [ %53, %52 ], [ 0, %47 ]
  %57 = phi i8* [ %54, %52 ], [ null, %47 ]
  %58 = getelementptr inbounds i8, i8* %57, i64 %38
  %59 = getelementptr inbounds i8, i8* %57, i64 %56
  %60 = ptrtoint i8* %59 to i64
  store i8 %22, i8* %58, align 1
  %61 = getelementptr inbounds i8, i8* %58, i64 1
  %62 = ptrtoint i8* %61 to i64
  %63 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %19, i64 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = load i64, i64* %35, align 8
  %66 = ptrtoint i8* %64 to i64
  %67 = sub i64 %65, %66
  %68 = sub i64 0, %67
  %69 = getelementptr inbounds i8, i8* %58, i64 %68
  %70 = ptrtoint i8* %69 to i64
  %71 = icmp sgt i64 %67, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %55
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %69, i8* align 1 %64, i64 %67, i1 false) #15
  %73 = load i8*, i8** %63, align 8
  br label %74

74:                                               ; preds = %72, %55
  %75 = phi i8* [ %64, %55 ], [ %73, %72 ]
  store i64 %70, i64* %36, align 8
  store i64 %62, i64* %35, align 8
  store i64 %60, i64* %44, align 8
  %76 = icmp eq i8* %75, null
  br i1 %76, label %137, label %77

77:                                               ; preds = %74
  tail call void @_ZdlPv(i8* nonnull %75) #19
  br label %137

78:                                               ; preds = %16
  %79 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %19, i64 0, i32 0, i32 0, i32 1
  %80 = load i8*, i8** %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %19, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = icmp eq i8* %80, %82
  %84 = ptrtoint i8* %82 to i64
  br i1 %83, label %89, label %85

85:                                               ; preds = %78
  store i8 15, i8* %80, align 1
  %86 = getelementptr inbounds i8, i8* %80, i64 1
  %87 = ptrtoint i8* %86 to i64
  %88 = bitcast i8** %79 to i64*
  store i64 %87, i64* %88, align 8
  br label %134

89:                                               ; preds = %78
  %90 = ptrtoint i8* %80 to i64
  %91 = bitcast i8** %79 to i64*
  %92 = bitcast %"class.v8::internal::SnapshotByteSink"* %19 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = sub i64 %90, %93
  %95 = add i64 %94, 1
  %96 = icmp slt i64 %95, 0
  br i1 %96, label %97, label %99

97:                                               ; preds = %89
  %98 = bitcast %"class.v8::internal::SnapshotByteSink"* %19 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %98) #18
  unreachable

99:                                               ; preds = %89
  %100 = bitcast i8** %81 to i64*
  %101 = sub i64 %84, %93
  %102 = icmp ult i64 %101, 4611686018427387903
  br i1 %102, label %103, label %108

103:                                              ; preds = %99
  %104 = shl i64 %101, 1
  %105 = icmp ult i64 %104, %95
  %106 = select i1 %105, i64 %95, i64 %104
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %111, label %108

108:                                              ; preds = %103, %99
  %109 = phi i64 [ %106, %103 ], [ 9223372036854775807, %99 ]
  %110 = tail call i8* @_Znwm(i64 %109) #19
  br label %111

111:                                              ; preds = %108, %103
  %112 = phi i64 [ %109, %108 ], [ 0, %103 ]
  %113 = phi i8* [ %110, %108 ], [ null, %103 ]
  %114 = getelementptr inbounds i8, i8* %113, i64 %94
  %115 = getelementptr inbounds i8, i8* %113, i64 %112
  %116 = ptrtoint i8* %115 to i64
  store i8 15, i8* %114, align 1
  %117 = getelementptr inbounds i8, i8* %114, i64 1
  %118 = ptrtoint i8* %117 to i64
  %119 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %19, i64 0, i32 0, i32 0, i32 0
  %120 = load i8*, i8** %119, align 8
  %121 = load i64, i64* %91, align 8
  %122 = ptrtoint i8* %120 to i64
  %123 = sub i64 %121, %122
  %124 = sub i64 0, %123
  %125 = getelementptr inbounds i8, i8* %114, i64 %124
  %126 = ptrtoint i8* %125 to i64
  %127 = icmp sgt i64 %123, 0
  br i1 %127, label %128, label %130

128:                                              ; preds = %111
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %125, i8* align 1 %120, i64 %123, i1 false) #15
  %129 = load i8*, i8** %119, align 8
  br label %130

130:                                              ; preds = %128, %111
  %131 = phi i8* [ %120, %111 ], [ %129, %128 ]
  store i64 %126, i64* %92, align 8
  store i64 %118, i64* %91, align 8
  store i64 %116, i64* %100, align 8
  %132 = icmp eq i8* %131, null
  br i1 %132, label %134, label %133

133:                                              ; preds = %130
  tail call void @_ZdlPv(i8* nonnull %131) #19
  br label %134

134:                                              ; preds = %85, %130, %133
  %135 = load %"class.v8::internal::SnapshotByteSink"*, %"class.v8::internal::SnapshotByteSink"** %18, align 8
  %136 = sext i32 %14 to i64
  tail call void @_ZN2v88internal16SnapshotByteSink6PutIntEmPKc(%"class.v8::internal::SnapshotByteSink"* %135, i64 %136, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.34, i64 0, i64 0)) #15
  br label %137

137:                                              ; preds = %77, %74, %29, %134
  %138 = load i64*, i64** %5, align 8
  %139 = load i64, i64* %138, align 8
  %140 = and i64 %139, -4294967296
  %141 = add i64 %139, -1
  %142 = inttoptr i64 %141 to i32*
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = zext i32 %143 to i64
  %145 = or i64 %140, %144
  %146 = add i64 %145, 7
  %147 = inttoptr i64 %146 to i16*
  %148 = load atomic i16, i16* %147 monotonic, align 2
  %149 = icmp eq i16 %148, 133
  br i1 %149, label %150, label %165

150:                                              ; preds = %137
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #15
  store i8 0, i8* %3, align 1
  %151 = load %"class.v8::internal::SnapshotByteSink"*, %"class.v8::internal::SnapshotByteSink"** %18, align 8
  %152 = sub nsw i32 33, %10
  %153 = icmp slt i32 %10, 34
  %154 = icmp slt i32 %152, %13
  %155 = and i1 %153, %154
  %156 = sext i32 %10 to i64
  %157 = add i64 %8, %156
  %158 = inttoptr i64 %157 to i8*
  br i1 %155, label %159, label %163

159:                                              ; preds = %150
  tail call void @_ZN2v88internal16SnapshotByteSink6PutRawEPKhiPKc(%"class.v8::internal::SnapshotByteSink"* %151, i8* %158, i32 %152, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0)) #15
  call void @_ZN2v88internal16SnapshotByteSink6PutRawEPKhiPKc(%"class.v8::internal::SnapshotByteSink"* %151, i8* nonnull %3, i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0)) #15
  %160 = add i32 %12, -34
  %161 = add i64 %7, 33
  %162 = inttoptr i64 %161 to i8*
  call void @_ZN2v88internal16SnapshotByteSink6PutRawEPKhiPKc(%"class.v8::internal::SnapshotByteSink"* %151, i8* %162, i32 %160, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0)) #15
  br label %164

163:                                              ; preds = %150
  tail call void @_ZN2v88internal16SnapshotByteSink6PutRawEPKhiPKc(%"class.v8::internal::SnapshotByteSink"* %151, i8* %158, i32 %13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0)) #15
  br label %164

164:                                              ; preds = %159, %163
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #15
  br label %196

165:                                              ; preds = %137
  %166 = load atomic i32, i32* %142 monotonic, align 4
  %167 = zext i32 %166 to i64
  %168 = or i64 %140, %167
  %169 = add i64 %168, 7
  %170 = inttoptr i64 %169 to i16*
  %171 = load atomic i16, i16* %170 monotonic, align 2
  %172 = add i16 %171, -153
  %173 = icmp ult i16 %172, 2
  br i1 %173, label %174, label %191

174:                                              ; preds = %165
  %175 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %175) #15
  store i8 0, i8* %175, align 1
  %176 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i64 0, i64 1
  store i8 0, i8* %176, align 1
  %177 = load %"class.v8::internal::SnapshotByteSink"*, %"class.v8::internal::SnapshotByteSink"** %18, align 8
  %178 = sub nsw i32 8, %10
  %179 = icmp slt i32 %10, 9
  %180 = icmp slt i32 %178, %13
  %181 = and i1 %179, %180
  %182 = sext i32 %10 to i64
  %183 = add i64 %8, %182
  %184 = inttoptr i64 %183 to i8*
  br i1 %181, label %185, label %189

185:                                              ; preds = %174
  tail call void @_ZN2v88internal16SnapshotByteSink6PutRawEPKhiPKc(%"class.v8::internal::SnapshotByteSink"* %177, i8* %184, i32 %178, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0)) #15
  call void @_ZN2v88internal16SnapshotByteSink6PutRawEPKhiPKc(%"class.v8::internal::SnapshotByteSink"* %177, i8* nonnull %175, i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0)) #15
  %186 = add i32 %12, -10
  %187 = add i64 %7, 9
  %188 = inttoptr i64 %187 to i8*
  call void @_ZN2v88internal16SnapshotByteSink6PutRawEPKhiPKc(%"class.v8::internal::SnapshotByteSink"* %177, i8* %188, i32 %186, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0)) #15
  br label %190

189:                                              ; preds = %174
  tail call void @_ZN2v88internal16SnapshotByteSink6PutRawEPKhiPKc(%"class.v8::internal::SnapshotByteSink"* %177, i8* %184, i32 %13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0)) #15
  br label %190

190:                                              ; preds = %185, %189
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %175) #15
  br label %196

191:                                              ; preds = %165
  %192 = load %"class.v8::internal::SnapshotByteSink"*, %"class.v8::internal::SnapshotByteSink"** %18, align 8
  %193 = sext i32 %10 to i64
  %194 = add i64 %8, %193
  %195 = inttoptr i64 %194 to i8*
  tail call void @_ZN2v88internal16SnapshotByteSink6PutRawEPKhiPKc(%"class.v8::internal::SnapshotByteSink"* %192, i8* %195, i32 %13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0)) #15
  br label %196

196:                                              ; preds = %2, %164, %191, %190
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer16ObjectSerializer13VisitPointersENS0_10HeapObjectENS0_20CompressedObjectSlotES4_(%"class.v8::internal::Serializer::ObjectSerializer"*, i64, i64, i64) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.v8::internal::Serializer::ObjectSerializer"* %0 to void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, i64, i64)***
  %6 = load void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, i64, i64)**, void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, i64, i64)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, i64, i64)*, void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, i64, i64)** %6, i64 3
  %8 = load void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, i64, i64)*, void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, i64, i64)** %7, align 8
  tail call void %8(%"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 %1, i64 %2, i64 %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer16ObjectSerializer13VisitPointersENS0_10HeapObjectENS0_25CompressedMaybeObjectSlotES4_(%"class.v8::internal::Serializer::ObjectSerializer"* nocapture, i64, i64, i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 1
  %6 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31
  %8 = bitcast %"struct.v8::internal::HandleScopeData"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31, i32 1
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* %12, align 8
  %15 = icmp ult i64 %2, %3
  br i1 %15, label %16, label %293

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 4
  %18 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 5
  %19 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 2
  br label %20

20:                                               ; preds = %16, %290
  %21 = phi i64 [ %2, %16 ], [ %291, %290 ]
  %22 = icmp ult i64 %21, %3
  br i1 %22, label %23, label %33

23:                                               ; preds = %20, %29
  %24 = phi i64 [ %30, %29 ], [ %21, %20 ]
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %23
  %30 = add i64 %24, 4
  %31 = icmp ult i64 %30, %3
  br i1 %31, label %23, label %33

32:                                               ; preds = %23
  tail call void @_ZN2v88internal10Serializer16ObjectSerializer13OutputRawDataEm(%"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 %24)
  br label %33

33:                                               ; preds = %29, %20, %32
  %34 = phi i64 [ %24, %32 ], [ %21, %20 ], [ %30, %29 ]
  %35 = icmp ult i64 %34, %3
  br i1 %35, label %36, label %103

36:                                               ; preds = %33, %98
  %37 = phi i64 [ %101, %98 ], [ %34, %33 ]
  %38 = inttoptr i64 %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 3
  br i1 %40, label %41, label %103

41:                                               ; preds = %36
  %42 = load %"class.v8::internal::SnapshotByteSink"*, %"class.v8::internal::SnapshotByteSink"** %17, align 8
  %43 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %42, i64 0, i32 0, i32 0, i32 1
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %42, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %44, %46
  %48 = ptrtoint i8* %46 to i64
  br i1 %47, label %53, label %49

49:                                               ; preds = %41
  store i8 21, i8* %44, align 1
  %50 = getelementptr inbounds i8, i8* %44, i64 1
  %51 = ptrtoint i8* %50 to i64
  %52 = bitcast i8** %43 to i64*
  store i64 %51, i64* %52, align 8
  br label %98

53:                                               ; preds = %41
  %54 = ptrtoint i8* %44 to i64
  %55 = bitcast i8** %43 to i64*
  %56 = bitcast %"class.v8::internal::SnapshotByteSink"* %42 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = sub i64 %54, %57
  %59 = add i64 %58, 1
  %60 = icmp slt i64 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %53
  %62 = bitcast %"class.v8::internal::SnapshotByteSink"* %42 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %62) #18
  unreachable

63:                                               ; preds = %53
  %64 = bitcast i8** %45 to i64*
  %65 = sub i64 %48, %57
  %66 = icmp ult i64 %65, 4611686018427387903
  br i1 %66, label %67, label %72

67:                                               ; preds = %63
  %68 = shl i64 %65, 1
  %69 = icmp ult i64 %68, %59
  %70 = select i1 %69, i64 %59, i64 %68
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %67, %63
  %73 = phi i64 [ %70, %67 ], [ 9223372036854775807, %63 ]
  %74 = tail call i8* @_Znwm(i64 %73) #19
  br label %75

75:                                               ; preds = %72, %67
  %76 = phi i64 [ %73, %72 ], [ 0, %67 ]
  %77 = phi i8* [ %74, %72 ], [ null, %67 ]
  %78 = getelementptr inbounds i8, i8* %77, i64 %58
  %79 = getelementptr inbounds i8, i8* %77, i64 %76
  %80 = ptrtoint i8* %79 to i64
  store i8 21, i8* %78, align 1
  %81 = getelementptr inbounds i8, i8* %78, i64 1
  %82 = ptrtoint i8* %81 to i64
  %83 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %42, i64 0, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  %85 = load i64, i64* %55, align 8
  %86 = ptrtoint i8* %84 to i64
  %87 = sub i64 %85, %86
  %88 = sub i64 0, %87
  %89 = getelementptr inbounds i8, i8* %78, i64 %88
  %90 = ptrtoint i8* %89 to i64
  %91 = icmp sgt i64 %87, 0
  br i1 %91, label %92, label %94

92:                                               ; preds = %75
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %89, i8* align 1 %84, i64 %87, i1 false) #15
  %93 = load i8*, i8** %83, align 8
  br label %94

94:                                               ; preds = %92, %75
  %95 = phi i8* [ %84, %75 ], [ %93, %92 ]
  store i64 %90, i64* %56, align 8
  store i64 %82, i64* %55, align 8
  store i64 %80, i64* %64, align 8
  %96 = icmp eq i8* %95, null
  br i1 %96, label %98, label %97

97:                                               ; preds = %94
  tail call void @_ZdlPv(i8* nonnull %95) #19
  br label %98

98:                                               ; preds = %49, %94, %97
  %99 = load i32, i32* %18, align 8
  %100 = add nsw i32 %99, 4
  store i32 %100, i32* %18, align 8
  %101 = add i64 %37, 4
  %102 = icmp ult i64 %101, %3
  br i1 %102, label %36, label %103

103:                                              ; preds = %36, %98, %33
  %104 = phi i64 [ %34, %33 ], [ %101, %98 ], [ %37, %36 ]
  %105 = icmp ult i64 %104, %3
  br i1 %105, label %106, label %290

106:                                              ; preds = %103, %287
  %107 = phi i64 [ %288, %287 ], [ %104, %103 ]
  %108 = inttoptr i64 %107 to i32*
  %109 = load i32, i32* %108, align 4
  %110 = zext i32 %109 to i64
  %111 = and i64 %110, 1
  %112 = icmp ne i64 %111, 0
  %113 = icmp ne i32 %109, 3
  %114 = and i1 %113, %112
  br i1 %114, label %115, label %290

115:                                              ; preds = %106
  %116 = and i64 %107, -4294967296
  %117 = and i64 %110, 3
  %118 = icmp eq i64 %117, 3
  %119 = and i64 %110, 4294967293
  %120 = or i64 %119, %116
  br i1 %118, label %121, label %178

121:                                              ; preds = %115
  %122 = load %"class.v8::internal::SnapshotByteSink"*, %"class.v8::internal::SnapshotByteSink"** %17, align 8
  %123 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %122, i64 0, i32 0, i32 0, i32 1
  %124 = load i8*, i8** %123, align 8
  %125 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %122, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  %127 = icmp eq i8* %124, %126
  %128 = ptrtoint i8* %126 to i64
  br i1 %127, label %133, label %129

129:                                              ; preds = %121
  store i8 22, i8* %124, align 1
  %130 = getelementptr inbounds i8, i8* %124, i64 1
  %131 = ptrtoint i8* %130 to i64
  %132 = bitcast i8** %123 to i64*
  store i64 %131, i64* %132, align 8
  br label %178

133:                                              ; preds = %121
  %134 = ptrtoint i8* %124 to i64
  %135 = bitcast i8** %123 to i64*
  %136 = bitcast %"class.v8::internal::SnapshotByteSink"* %122 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = sub i64 %134, %137
  %139 = add i64 %138, 1
  %140 = icmp slt i64 %139, 0
  br i1 %140, label %141, label %143

141:                                              ; preds = %133
  %142 = bitcast %"class.v8::internal::SnapshotByteSink"* %122 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %142) #18
  unreachable

143:                                              ; preds = %133
  %144 = bitcast i8** %125 to i64*
  %145 = sub i64 %128, %137
  %146 = icmp ult i64 %145, 4611686018427387903
  br i1 %146, label %147, label %152

147:                                              ; preds = %143
  %148 = shl i64 %145, 1
  %149 = icmp ult i64 %148, %139
  %150 = select i1 %149, i64 %139, i64 %148
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %155, label %152

152:                                              ; preds = %147, %143
  %153 = phi i64 [ %150, %147 ], [ 9223372036854775807, %143 ]
  %154 = tail call i8* @_Znwm(i64 %153) #19
  br label %155

155:                                              ; preds = %152, %147
  %156 = phi i64 [ %153, %152 ], [ 0, %147 ]
  %157 = phi i8* [ %154, %152 ], [ null, %147 ]
  %158 = getelementptr inbounds i8, i8* %157, i64 %138
  %159 = getelementptr inbounds i8, i8* %157, i64 %156
  %160 = ptrtoint i8* %159 to i64
  store i8 22, i8* %158, align 1
  %161 = getelementptr inbounds i8, i8* %158, i64 1
  %162 = ptrtoint i8* %161 to i64
  %163 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %122, i64 0, i32 0, i32 0, i32 0
  %164 = load i8*, i8** %163, align 8
  %165 = load i64, i64* %135, align 8
  %166 = ptrtoint i8* %164 to i64
  %167 = sub i64 %165, %166
  %168 = sub i64 0, %167
  %169 = getelementptr inbounds i8, i8* %158, i64 %168
  %170 = ptrtoint i8* %169 to i64
  %171 = icmp sgt i64 %167, 0
  br i1 %171, label %172, label %174

172:                                              ; preds = %155
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %169, i8* align 1 %164, i64 %167, i1 false) #15
  %173 = load i8*, i8** %163, align 8
  br label %174

174:                                              ; preds = %172, %155
  %175 = phi i8* [ %164, %155 ], [ %173, %172 ]
  store i64 %170, i64* %136, align 8
  store i64 %162, i64* %135, align 8
  store i64 %160, i64* %144, align 8
  %176 = icmp eq i8* %175, null
  br i1 %176, label %178, label %177

177:                                              ; preds = %174
  tail call void @_ZdlPv(i8* nonnull %175) #19
  br label %178

178:                                              ; preds = %177, %174, %129, %115
  %179 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %180 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %179, i64 0, i32 31, i32 4
  %181 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %180, align 8
  %182 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %181, null
  br i1 %182, label %186, label %183

183:                                              ; preds = %178
  %184 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %181, i64 %120) #15
  %185 = load i64, i64* %184, align 8
  br label %199

186:                                              ; preds = %178
  %187 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %179, i64 0, i32 31, i32 0
  %188 = load i64*, i64** %187, align 8
  %189 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %179, i64 0, i32 31, i32 1
  %190 = load i64*, i64** %189, align 8
  %191 = icmp eq i64* %188, %190
  br i1 %191, label %192, label %194

192:                                              ; preds = %186
  %193 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %179) #15
  br label %194

194:                                              ; preds = %192, %186
  %195 = phi i64* [ %193, %192 ], [ %188, %186 ]
  %196 = ptrtoint i64* %195 to i64
  %197 = add i64 %196, 8
  %198 = inttoptr i64 %197 to i64*
  store i64* %198, i64** %187, align 8
  store i64 %120, i64* %195, align 8
  br label %199

199:                                              ; preds = %183, %194
  %200 = phi i64 [ %185, %183 ], [ %120, %194 ]
  %201 = phi i64* [ %184, %183 ], [ %195, %194 ]
  %202 = load %"class.v8::internal::Serializer"*, %"class.v8::internal::Serializer"** %19, align 8
  %203 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %202, i64 0, i32 14
  %204 = bitcast %"class.v8::internal::IdentityMap.1191"* %203 to %"class.v8::internal::IdentityMapBase"*
  %205 = tail call i64* @_ZNK2v88internal15IdentityMapBase9FindEntryEm(%"class.v8::internal::IdentityMapBase"* %204, i64 %200) #15
  %206 = icmp eq i64* %205, null
  br i1 %206, label %212, label %207

207:                                              ; preds = %199
  %208 = bitcast i64* %205 to %"class.std::__1::vector.822"**
  tail call void @_ZN2v88internal10Serializer26PutPendingForwardReferenceERPNSt3__16vectorIiNS2_9allocatorIiEEEE(%"class.v8::internal::Serializer"* %202, %"class.std::__1::vector.822"** nonnull dereferenceable(8) %208) #15
  %209 = load i32, i32* %18, align 8
  %210 = add nsw i32 %209, 4
  store i32 %210, i32* %18, align 8
  %211 = add i64 %107, 4
  br label %287

212:                                              ; preds = %199
  %213 = add i64 %107, 4
  %214 = icmp ult i64 %213, %3
  br i1 %214, label %215, label %281

215:                                              ; preds = %212
  %216 = load %"class.v8::internal::Serializer"*, %"class.v8::internal::Serializer"** %19, align 8
  %217 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %216, i64 0, i32 6
  %218 = load i64, i64* %201, align 8
  %219 = bitcast %"class.v8::internal::RootIndexMap"* %217 to %"class.v8::internal::PointerToIndexHashMap"**
  %220 = load %"class.v8::internal::PointerToIndexHashMap"*, %"class.v8::internal::PointerToIndexHashMap"** %219, align 8
  %221 = trunc i64 %218 to i32
  %222 = getelementptr inbounds %"class.v8::internal::PointerToIndexHashMap", %"class.v8::internal::PointerToIndexHashMap"* %220, i64 0, i32 0, i32 0, i32 1
  %223 = load i32, i32* %222, align 8
  %224 = add i32 %223, -1
  %225 = and i32 %224, %221
  %226 = zext i32 %225 to i64
  %227 = getelementptr inbounds %"class.v8::internal::PointerToIndexHashMap", %"class.v8::internal::PointerToIndexHashMap"* %220, i64 0, i32 0, i32 0, i32 0
  %228 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %227, align 8
  %229 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %228, i64 %226
  %230 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %228, i64 %226, i32 3
  %231 = load i8, i8* %230, align 8, !range !2
  %232 = icmp eq i8 %231, 0
  br i1 %232, label %248, label %233

233:                                              ; preds = %215
  %234 = zext i32 %224 to i64
  br label %235

235:                                              ; preds = %241, %233
  %236 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %229, %233 ], [ %244, %241 ]
  %237 = phi i64 [ %226, %233 ], [ %243, %241 ]
  %238 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %236, i64 0, i32 0
  %239 = load i64, i64* %238, align 8
  %240 = icmp eq i64 %239, %218
  br i1 %240, label %248, label %241

241:                                              ; preds = %235
  %242 = add nuw nsw i64 %237, 1
  %243 = and i64 %242, %234
  %244 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %228, i64 %243
  %245 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %228, i64 %243, i32 3
  %246 = load i8, i8* %245, align 8, !range !2
  %247 = icmp eq i8 %246, 0
  br i1 %247, label %248, label %235

248:                                              ; preds = %241, %235, %215
  %249 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %229, %215 ], [ %244, %241 ], [ %236, %235 ]
  %250 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %249, i64 0, i32 3
  %251 = load i8, i8* %250, align 8, !range !2
  %252 = icmp eq i8 %251, 0
  %253 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %249, null
  %254 = or i1 %253, %252
  br i1 %254, label %281, label %255

255:                                              ; preds = %248
  %256 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %249, i64 0, i32 1
  %257 = load i32, i32* %256, align 4
  %258 = trunc i32 %257 to i16
  %259 = icmp ult i16 %258, 645
  br i1 %259, label %260, label %281

260:                                              ; preds = %255
  %261 = load i32, i32* %108, align 4
  %262 = inttoptr i64 %213 to i32*
  %263 = load i32, i32* %262, align 4
  %264 = icmp eq i32 %261, %263
  br i1 %264, label %265, label %281

265:                                              ; preds = %260, %269
  %266 = phi i64 [ %267, %269 ], [ %213, %260 ]
  %267 = add i64 %266, 4
  %268 = icmp ult i64 %267, %3
  br i1 %268, label %269, label %273

269:                                              ; preds = %265
  %270 = inttoptr i64 %267 to i32*
  %271 = load i32, i32* %270, align 4
  %272 = icmp eq i32 %271, %261
  br i1 %272, label %265, label %273

273:                                              ; preds = %269, %265
  %274 = sub i64 %267, %107
  %275 = lshr i64 %274, 2
  %276 = trunc i64 %275 to i32
  %277 = trunc i64 %274 to i32
  %278 = and i32 %277, -4
  %279 = load i32, i32* %18, align 8
  %280 = add nsw i32 %279, %278
  store i32 %280, i32* %18, align 8
  tail call void @_ZN2v88internal10Serializer9PutRepeatEi(%"class.v8::internal::Serializer"* %216, i32 %276)
  br label %284

281:                                              ; preds = %212, %248, %255, %260
  %282 = load i32, i32* %18, align 8
  %283 = add nsw i32 %282, 4
  store i32 %283, i32* %18, align 8
  br label %284

284:                                              ; preds = %281, %273
  %285 = phi i64 [ %267, %273 ], [ %213, %281 ]
  %286 = load %"class.v8::internal::Serializer"*, %"class.v8::internal::Serializer"** %19, align 8
  tail call void @_ZN2v88internal10Serializer15SerializeObjectENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::Serializer"* %286, i64* %201)
  br label %287

287:                                              ; preds = %284, %207
  %288 = phi i64 [ %211, %207 ], [ %285, %284 ]
  %289 = icmp ult i64 %288, %3
  br i1 %289, label %106, label %290

290:                                              ; preds = %106, %287, %103
  %291 = phi i64 [ %104, %103 ], [ %288, %287 ], [ %107, %106 ]
  %292 = icmp ult i64 %291, %3
  br i1 %292, label %20, label %293

293:                                              ; preds = %290, %4
  %294 = icmp eq %"class.v8::internal::Isolate"* %6, null
  br i1 %294, label %308, label %295

295:                                              ; preds = %293
  %296 = inttoptr i64 %9 to i64*
  %297 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %7, i64 0, i32 0
  %298 = load i64*, i64** %297, align 8
  store i64 %9, i64* %8, align 8
  %299 = load i32, i32* %12, align 8
  %300 = add nsw i32 %299, -1
  store i32 %300, i32* %12, align 8
  %301 = load i64*, i64** %10, align 8
  %302 = icmp eq i64* %301, %11
  br i1 %302, label %305, label %303

303:                                              ; preds = %295
  store i64* %11, i64** %10, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %6) #15
  %304 = load i64*, i64** %297, align 8
  br label %305

305:                                              ; preds = %303, %295
  %306 = phi i64* [ %304, %303 ], [ %296, %295 ]
  %307 = phi i64* [ %11, %303 ], [ %298, %295 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %306, i64* %307) #15
  br label %308

308:                                              ; preds = %293, %305
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer16ObjectSerializer23OutputExternalReferenceEmib(%"class.v8::internal::Serializer::ObjectSerializer"* nocapture readonly, i64, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca i64, align 8
  store i64 %1, i64* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 2
  %7 = load %"class.v8::internal::Serializer"*, %"class.v8::internal::Serializer"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %7, i64 0, i32 17, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %7, i64 0, i32 5
  br i1 %11, label %19, label %13

13:                                               ; preds = %4
  %14 = tail call i64 @_ZN2v88internal24ExternalReferenceEncoder9TryEncodeEm(%"class.v8::internal::ExternalReferenceEncoder"* %12, i64 %1) #15
  %15 = trunc i64 %14 to i8
  %16 = lshr i64 %14, 32
  %17 = trunc i64 %16 to i32
  %18 = icmp eq i8 %15, 0
  br i1 %18, label %21, label %99, !prof !30

19:                                               ; preds = %4
  %20 = tail call i32 @_ZN2v88internal24ExternalReferenceEncoder6EncodeEm(%"class.v8::internal::ExternalReferenceEncoder"* %12, i64 %1) #15
  br label %99

21:                                               ; preds = %13
  %22 = load %"class.v8::internal::Serializer"*, %"class.v8::internal::Serializer"** %6, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %22, i64 0, i32 17, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28, !prof !30

27:                                               ; preds = %21
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.50, i64 0, i64 0)) #18
  unreachable

28:                                               ; preds = %21
  %29 = and i32 %2, 3
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %32, label %31, !prof !3

31:                                               ; preds = %28
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.51, i64 0, i64 0)) #18
  unreachable

32:                                               ; preds = %28
  %33 = icmp slt i32 %2, 129
  br i1 %33, label %35, label %34, !prof !3

34:                                               ; preds = %32
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.52, i64 0, i64 0)) #18
  unreachable

35:                                               ; preds = %32
  %36 = lshr i32 %2, 2
  %37 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 4
  %38 = load %"class.v8::internal::SnapshotByteSink"*, %"class.v8::internal::SnapshotByteSink"** %37, align 8
  %39 = trunc i32 %36 to i8
  %40 = add i8 %39, 95
  %41 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %38, i64 0, i32 0, i32 0, i32 1
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %38, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = icmp eq i8* %42, %44
  %46 = ptrtoint i8* %44 to i64
  br i1 %45, label %51, label %47

47:                                               ; preds = %35
  store i8 %40, i8* %42, align 1
  %48 = getelementptr inbounds i8, i8* %42, i64 1
  %49 = ptrtoint i8* %48 to i64
  %50 = bitcast i8** %41 to i64*
  store i64 %49, i64* %50, align 8
  br label %96

51:                                               ; preds = %35
  %52 = ptrtoint i8* %42 to i64
  %53 = bitcast i8** %41 to i64*
  %54 = bitcast %"class.v8::internal::SnapshotByteSink"* %38 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = sub i64 %52, %55
  %57 = add i64 %56, 1
  %58 = icmp slt i64 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %51
  %60 = bitcast %"class.v8::internal::SnapshotByteSink"* %38 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #18
  unreachable

61:                                               ; preds = %51
  %62 = bitcast i8** %43 to i64*
  %63 = sub i64 %46, %55
  %64 = icmp ult i64 %63, 4611686018427387903
  br i1 %64, label %65, label %70

65:                                               ; preds = %61
  %66 = shl i64 %63, 1
  %67 = icmp ult i64 %66, %57
  %68 = select i1 %67, i64 %57, i64 %66
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %65, %61
  %71 = phi i64 [ %68, %65 ], [ 9223372036854775807, %61 ]
  %72 = tail call i8* @_Znwm(i64 %71) #19
  br label %73

73:                                               ; preds = %70, %65
  %74 = phi i64 [ %71, %70 ], [ 0, %65 ]
  %75 = phi i8* [ %72, %70 ], [ null, %65 ]
  %76 = getelementptr inbounds i8, i8* %75, i64 %56
  %77 = getelementptr inbounds i8, i8* %75, i64 %74
  %78 = ptrtoint i8* %77 to i64
  store i8 %40, i8* %76, align 1
  %79 = getelementptr inbounds i8, i8* %76, i64 1
  %80 = ptrtoint i8* %79 to i64
  %81 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %38, i64 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = load i64, i64* %53, align 8
  %84 = ptrtoint i8* %82 to i64
  %85 = sub i64 %83, %84
  %86 = sub i64 0, %85
  %87 = getelementptr inbounds i8, i8* %76, i64 %86
  %88 = ptrtoint i8* %87 to i64
  %89 = icmp sgt i64 %85, 0
  br i1 %89, label %90, label %92

90:                                               ; preds = %73
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %87, i8* align 1 %82, i64 %85, i1 false) #15
  %91 = load i8*, i8** %81, align 8
  br label %92

92:                                               ; preds = %90, %73
  %93 = phi i8* [ %82, %73 ], [ %91, %90 ]
  store i64 %88, i64* %54, align 8
  store i64 %80, i64* %53, align 8
  store i64 %78, i64* %62, align 8
  %94 = icmp eq i8* %93, null
  br i1 %94, label %96, label %95

95:                                               ; preds = %92
  tail call void @_ZdlPv(i8* nonnull %93) #19
  br label %96

96:                                               ; preds = %47, %92, %95
  %97 = load %"class.v8::internal::SnapshotByteSink"*, %"class.v8::internal::SnapshotByteSink"** %37, align 8
  %98 = bitcast i64* %5 to i8*
  call void @_ZN2v88internal16SnapshotByteSink6PutRawEPKhiPKc(%"class.v8::internal::SnapshotByteSink"* %97, i8* nonnull %98, i32 %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0)) #15
  br label %218

99:                                               ; preds = %13, %19
  %100 = phi i32 [ %20, %19 ], [ %17, %13 ]
  %101 = icmp slt i32 %100, 0
  %102 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 4
  %103 = load %"class.v8::internal::SnapshotByteSink"*, %"class.v8::internal::SnapshotByteSink"** %102, align 8
  %104 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %103, i64 0, i32 0, i32 0, i32 1
  %105 = load i8*, i8** %104, align 8
  %106 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %103, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  %108 = icmp eq i8* %105, %107
  %109 = ptrtoint i8* %107 to i64
  br i1 %101, label %110, label %164

110:                                              ; preds = %99
  br i1 %108, label %115, label %111

111:                                              ; preds = %110
  store i8 16, i8* %105, align 1
  %112 = getelementptr inbounds i8, i8* %105, i64 1
  %113 = ptrtoint i8* %112 to i64
  %114 = bitcast i8** %104 to i64*
  store i64 %113, i64* %114, align 8
  br label %160

115:                                              ; preds = %110
  %116 = ptrtoint i8* %105 to i64
  %117 = bitcast i8** %104 to i64*
  %118 = bitcast %"class.v8::internal::SnapshotByteSink"* %103 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = sub i64 %116, %119
  %121 = add i64 %120, 1
  %122 = icmp slt i64 %121, 0
  br i1 %122, label %123, label %125

123:                                              ; preds = %115
  %124 = bitcast %"class.v8::internal::SnapshotByteSink"* %103 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %124) #18
  unreachable

125:                                              ; preds = %115
  %126 = bitcast i8** %106 to i64*
  %127 = sub i64 %109, %119
  %128 = icmp ult i64 %127, 4611686018427387903
  br i1 %128, label %129, label %134

129:                                              ; preds = %125
  %130 = shl i64 %127, 1
  %131 = icmp ult i64 %130, %121
  %132 = select i1 %131, i64 %121, i64 %130
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %137, label %134

134:                                              ; preds = %129, %125
  %135 = phi i64 [ %132, %129 ], [ 9223372036854775807, %125 ]
  %136 = tail call i8* @_Znwm(i64 %135) #19
  br label %137

137:                                              ; preds = %134, %129
  %138 = phi i64 [ %135, %134 ], [ 0, %129 ]
  %139 = phi i8* [ %136, %134 ], [ null, %129 ]
  %140 = getelementptr inbounds i8, i8* %139, i64 %120
  %141 = getelementptr inbounds i8, i8* %139, i64 %138
  %142 = ptrtoint i8* %141 to i64
  store i8 16, i8* %140, align 1
  %143 = getelementptr inbounds i8, i8* %140, i64 1
  %144 = ptrtoint i8* %143 to i64
  %145 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %103, i64 0, i32 0, i32 0, i32 0
  %146 = load i8*, i8** %145, align 8
  %147 = load i64, i64* %117, align 8
  %148 = ptrtoint i8* %146 to i64
  %149 = sub i64 %147, %148
  %150 = sub i64 0, %149
  %151 = getelementptr inbounds i8, i8* %140, i64 %150
  %152 = ptrtoint i8* %151 to i64
  %153 = icmp sgt i64 %149, 0
  br i1 %153, label %154, label %156

154:                                              ; preds = %137
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %151, i8* align 1 %146, i64 %149, i1 false) #15
  %155 = load i8*, i8** %145, align 8
  br label %156

156:                                              ; preds = %154, %137
  %157 = phi i8* [ %146, %137 ], [ %155, %154 ]
  store i64 %152, i64* %118, align 8
  store i64 %144, i64* %117, align 8
  store i64 %142, i64* %126, align 8
  %158 = icmp eq i8* %157, null
  br i1 %158, label %160, label %159

159:                                              ; preds = %156
  tail call void @_ZdlPv(i8* nonnull %157) #19
  br label %160

160:                                              ; preds = %111, %156, %159
  %161 = load %"class.v8::internal::SnapshotByteSink"*, %"class.v8::internal::SnapshotByteSink"** %102, align 8
  %162 = and i32 %100, 2147483647
  %163 = zext i32 %162 to i64
  tail call void @_ZN2v88internal16SnapshotByteSink6PutIntEmPKc(%"class.v8::internal::SnapshotByteSink"* %161, i64 %163, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.55, i64 0, i64 0)) #15
  br label %218

164:                                              ; preds = %99
  br i1 %108, label %169, label %165

165:                                              ; preds = %164
  store i8 17, i8* %105, align 1
  %166 = getelementptr inbounds i8, i8* %105, i64 1
  %167 = ptrtoint i8* %166 to i64
  %168 = bitcast i8** %104 to i64*
  store i64 %167, i64* %168, align 8
  br label %214

169:                                              ; preds = %164
  %170 = ptrtoint i8* %105 to i64
  %171 = bitcast i8** %104 to i64*
  %172 = bitcast %"class.v8::internal::SnapshotByteSink"* %103 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = sub i64 %170, %173
  %175 = add i64 %174, 1
  %176 = icmp slt i64 %175, 0
  br i1 %176, label %177, label %179

177:                                              ; preds = %169
  %178 = bitcast %"class.v8::internal::SnapshotByteSink"* %103 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %178) #18
  unreachable

179:                                              ; preds = %169
  %180 = bitcast i8** %106 to i64*
  %181 = sub i64 %109, %173
  %182 = icmp ult i64 %181, 4611686018427387903
  br i1 %182, label %183, label %188

183:                                              ; preds = %179
  %184 = shl i64 %181, 1
  %185 = icmp ult i64 %184, %175
  %186 = select i1 %185, i64 %175, i64 %184
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %191, label %188

188:                                              ; preds = %183, %179
  %189 = phi i64 [ %186, %183 ], [ 9223372036854775807, %179 ]
  %190 = tail call i8* @_Znwm(i64 %189) #19
  br label %191

191:                                              ; preds = %188, %183
  %192 = phi i64 [ %189, %188 ], [ 0, %183 ]
  %193 = phi i8* [ %190, %188 ], [ null, %183 ]
  %194 = getelementptr inbounds i8, i8* %193, i64 %174
  %195 = getelementptr inbounds i8, i8* %193, i64 %192
  %196 = ptrtoint i8* %195 to i64
  store i8 17, i8* %194, align 1
  %197 = getelementptr inbounds i8, i8* %194, i64 1
  %198 = ptrtoint i8* %197 to i64
  %199 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %103, i64 0, i32 0, i32 0, i32 0
  %200 = load i8*, i8** %199, align 8
  %201 = load i64, i64* %171, align 8
  %202 = ptrtoint i8* %200 to i64
  %203 = sub i64 %201, %202
  %204 = sub i64 0, %203
  %205 = getelementptr inbounds i8, i8* %194, i64 %204
  %206 = ptrtoint i8* %205 to i64
  %207 = icmp sgt i64 %203, 0
  br i1 %207, label %208, label %210

208:                                              ; preds = %191
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %205, i8* align 1 %200, i64 %203, i1 false) #15
  %209 = load i8*, i8** %199, align 8
  br label %210

210:                                              ; preds = %208, %191
  %211 = phi i8* [ %200, %191 ], [ %209, %208 ]
  store i64 %206, i64* %172, align 8
  store i64 %198, i64* %171, align 8
  store i64 %196, i64* %180, align 8
  %212 = icmp eq i8* %211, null
  br i1 %212, label %214, label %213

213:                                              ; preds = %210
  tail call void @_ZdlPv(i8* nonnull %211) #19
  br label %214

214:                                              ; preds = %165, %210, %213
  %215 = load %"class.v8::internal::SnapshotByteSink"*, %"class.v8::internal::SnapshotByteSink"** %102, align 8
  %216 = and i32 %100, 2147483647
  %217 = zext i32 %216 to i64
  tail call void @_ZN2v88internal16SnapshotByteSink6PutIntEmPKc(%"class.v8::internal::SnapshotByteSink"* %215, i64 %217, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.55, i64 0, i64 0)) #15
  br label %218

218:                                              ; preds = %160, %214, %96
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer16ObjectSerializer22VisitExternalReferenceENS0_7ForeignEPm(%"class.v8::internal::Serializer::ObjectSerializer"* nocapture, i64, i64* nocapture readnone) unnamed_addr #0 align 2 {
  %4 = add i64 %1, 3
  %5 = inttoptr i64 %4 to i64*
  %6 = load i64, i64* %5, align 1
  tail call void @_ZN2v88internal10Serializer16ObjectSerializer23OutputExternalReferenceEmib(%"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 %6, i32 8, i1 zeroext undef)
  %7 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 5
  %8 = load i32, i32* %7, align 8
  %9 = add nsw i32 %8, 8
  store i32 %9, i32* %7, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer16ObjectSerializer20VisitEmbeddedPointerENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::Serializer::ObjectSerializer"* nocapture, i64, %"class.v8::internal::RelocInfo"* nocapture readnone) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 8
  %6 = add nsw i32 %5, 4
  store i32 %6, i32* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer16ObjectSerializer22VisitExternalReferenceENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::Serializer::ObjectSerializer"* nocapture readonly, i64, %"class.v8::internal::RelocInfo"*) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.v8::internal::RelocInfo"* %2 to i64**
  %5 = load i64*, i64** %4, align 8
  %6 = load i64, i64* %5, align 1
  %7 = tail call zeroext i1 @_ZN2v88internal9RelocInfo16IsCodedSpeciallyEv(%"class.v8::internal::RelocInfo"* %2) #15
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %2, i64 0, i32 1
  %10 = load i8, i8* %9, align 8
  %11 = icmp eq i8 %10, 3
  %12 = select i1 %11, i32 4, i32 8
  br label %13

13:                                               ; preds = %3, %8
  %14 = phi i32 [ %12, %8 ], [ 4, %3 ]
  tail call void @_ZN2v88internal10Serializer16ObjectSerializer23OutputExternalReferenceEmib(%"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 %6, i32 %14, i1 zeroext undef)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer16ObjectSerializer22VisitInternalReferenceENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::Serializer::ObjectSerializer"* nocapture readonly, i64, %"class.v8::internal::RelocInfo"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.v8::internal::RelocInfo"* %2 to i64**
  %8 = load i64*, i64** %7, align 8
  %9 = load i64, i64* %8, align 1
  %10 = sub i64 -63, %6
  %11 = add i64 %10, %9
  %12 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 4
  %13 = load %"class.v8::internal::SnapshotByteSink"*, %"class.v8::internal::SnapshotByteSink"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %13, i64 0, i32 0, i32 0, i32 1
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %13, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = icmp eq i8* %15, %17
  %19 = ptrtoint i8* %17 to i64
  br i1 %18, label %24, label %20

20:                                               ; preds = %3
  store i8 20, i8* %15, align 1
  %21 = getelementptr inbounds i8, i8* %15, i64 1
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast i8** %14 to i64*
  store i64 %22, i64* %23, align 8
  br label %69

24:                                               ; preds = %3
  %25 = ptrtoint i8* %15 to i64
  %26 = bitcast i8** %14 to i64*
  %27 = bitcast %"class.v8::internal::SnapshotByteSink"* %13 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %25, %28
  %30 = add i64 %29, 1
  %31 = icmp slt i64 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %24
  %33 = bitcast %"class.v8::internal::SnapshotByteSink"* %13 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %33) #18
  unreachable

34:                                               ; preds = %24
  %35 = bitcast i8** %16 to i64*
  %36 = sub i64 %19, %28
  %37 = icmp ult i64 %36, 4611686018427387903
  br i1 %37, label %38, label %43

38:                                               ; preds = %34
  %39 = shl i64 %36, 1
  %40 = icmp ult i64 %39, %30
  %41 = select i1 %40, i64 %30, i64 %39
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %38, %34
  %44 = phi i64 [ %41, %38 ], [ 9223372036854775807, %34 ]
  %45 = tail call i8* @_Znwm(i64 %44) #19
  br label %46

46:                                               ; preds = %43, %38
  %47 = phi i64 [ %44, %43 ], [ 0, %38 ]
  %48 = phi i8* [ %45, %43 ], [ null, %38 ]
  %49 = getelementptr inbounds i8, i8* %48, i64 %29
  %50 = getelementptr inbounds i8, i8* %48, i64 %47
  %51 = ptrtoint i8* %50 to i64
  store i8 20, i8* %49, align 1
  %52 = getelementptr inbounds i8, i8* %49, i64 1
  %53 = ptrtoint i8* %52 to i64
  %54 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %13, i64 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = load i64, i64* %26, align 8
  %57 = ptrtoint i8* %55 to i64
  %58 = sub i64 %56, %57
  %59 = sub i64 0, %58
  %60 = getelementptr inbounds i8, i8* %49, i64 %59
  %61 = ptrtoint i8* %60 to i64
  %62 = icmp sgt i64 %58, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %46
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %60, i8* align 1 %55, i64 %58, i1 false) #15
  %64 = load i8*, i8** %54, align 8
  br label %65

65:                                               ; preds = %63, %46
  %66 = phi i8* [ %55, %46 ], [ %64, %63 ]
  store i64 %61, i64* %27, align 8
  store i64 %53, i64* %26, align 8
  store i64 %51, i64* %35, align 8
  %67 = icmp eq i8* %66, null
  br i1 %67, label %69, label %68

68:                                               ; preds = %65
  tail call void @_ZdlPv(i8* nonnull %66) #19
  br label %69

69:                                               ; preds = %20, %65, %68
  %70 = load %"class.v8::internal::SnapshotByteSink"*, %"class.v8::internal::SnapshotByteSink"** %12, align 8
  tail call void @_ZN2v88internal16SnapshotByteSink6PutIntEmPKc(%"class.v8::internal::SnapshotByteSink"* %70, i64 %11, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.58, i64 0, i64 0)) #15
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer16ObjectSerializer17VisitRuntimeEntryENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::Serializer::ObjectSerializer"* nocapture readnone, i64, %"class.v8::internal::RelocInfo"* nocapture readnone) unnamed_addr #10 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.59, i64 0, i64 0)) #18
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer16ObjectSerializer18VisitOffHeapTargetENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::Serializer::ObjectSerializer"* nocapture readonly, i64, %"class.v8::internal::RelocInfo"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.v8::internal::RelocInfo"* %2 to i64**
  %5 = load i64*, i64** %4, align 8
  %6 = load i64, i64* %5, align 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %9, !prof !30

8:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.60, i64 0, i64 0)) #18
  unreachable

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 1
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = tail call i32 @_ZN2v88internal17InstructionStream13TryLookupCodeEPNS0_7IsolateEm(%"class.v8::internal::Isolate"* %11, i64 %6) #15
  %13 = icmp ult i32 %12, 1711
  br i1 %13, label %15, label %14, !prof !3

14:                                               ; preds = %9
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.61, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 4
  %17 = load %"class.v8::internal::SnapshotByteSink"*, %"class.v8::internal::SnapshotByteSink"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %17, i64 0, i32 0, i32 0, i32 1
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %17, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = icmp eq i8* %19, %21
  %23 = ptrtoint i8* %21 to i64
  br i1 %22, label %28, label %24

24:                                               ; preds = %15
  store i8 23, i8* %19, align 1
  %25 = getelementptr inbounds i8, i8* %19, i64 1
  %26 = ptrtoint i8* %25 to i64
  %27 = bitcast i8** %18 to i64*
  store i64 %26, i64* %27, align 8
  br label %73

28:                                               ; preds = %15
  %29 = ptrtoint i8* %19 to i64
  %30 = bitcast i8** %18 to i64*
  %31 = bitcast %"class.v8::internal::SnapshotByteSink"* %17 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %29, %32
  %34 = add i64 %33, 1
  %35 = icmp slt i64 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %28
  %37 = bitcast %"class.v8::internal::SnapshotByteSink"* %17 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #18
  unreachable

38:                                               ; preds = %28
  %39 = bitcast i8** %20 to i64*
  %40 = sub i64 %23, %32
  %41 = icmp ult i64 %40, 4611686018427387903
  br i1 %41, label %42, label %47

42:                                               ; preds = %38
  %43 = shl i64 %40, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %42, %38
  %48 = phi i64 [ %45, %42 ], [ 9223372036854775807, %38 ]
  %49 = tail call i8* @_Znwm(i64 %48) #19
  br label %50

50:                                               ; preds = %47, %42
  %51 = phi i64 [ %48, %47 ], [ 0, %42 ]
  %52 = phi i8* [ %49, %47 ], [ null, %42 ]
  %53 = getelementptr inbounds i8, i8* %52, i64 %33
  %54 = getelementptr inbounds i8, i8* %52, i64 %51
  %55 = ptrtoint i8* %54 to i64
  store i8 23, i8* %53, align 1
  %56 = getelementptr inbounds i8, i8* %53, i64 1
  %57 = ptrtoint i8* %56 to i64
  %58 = getelementptr inbounds %"class.v8::internal::SnapshotByteSink", %"class.v8::internal::SnapshotByteSink"* %17, i64 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = load i64, i64* %30, align 8
  %61 = ptrtoint i8* %59 to i64
  %62 = sub i64 %60, %61
  %63 = sub i64 0, %62
  %64 = getelementptr inbounds i8, i8* %53, i64 %63
  %65 = ptrtoint i8* %64 to i64
  %66 = icmp sgt i64 %62, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %50
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %64, i8* align 1 %59, i64 %62, i1 false) #15
  %68 = load i8*, i8** %58, align 8
  br label %69

69:                                               ; preds = %67, %50
  %70 = phi i8* [ %59, %50 ], [ %68, %67 ]
  store i64 %65, i64* %31, align 8
  store i64 %57, i64* %30, align 8
  store i64 %55, i64* %39, align 8
  %71 = icmp eq i8* %70, null
  br i1 %71, label %73, label %72

72:                                               ; preds = %69
  tail call void @_ZdlPv(i8* nonnull %70) #19
  br label %73

73:                                               ; preds = %24, %69, %72
  %74 = load %"class.v8::internal::SnapshotByteSink"*, %"class.v8::internal::SnapshotByteSink"** %16, align 8
  %75 = sext i32 %12 to i64
  tail call void @_ZN2v88internal16SnapshotByteSink6PutIntEmPKc(%"class.v8::internal::SnapshotByteSink"* %74, i64 %75, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.64, i64 0, i64 0)) #15
  ret void
}

declare i32 @_ZN2v88internal17InstructionStream13TryLookupCodeEPNS0_7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer16ObjectSerializer15VisitCodeTargetENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::Serializer::ObjectSerializer"* nocapture, i64, %"class.v8::internal::RelocInfo"* nocapture readnone) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer", %"class.v8::internal::Serializer::ObjectSerializer"* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 8
  %6 = add nsw i32 %5, 4
  store i32 %6, i32* %4, align 8
  ret void
}

declare void @_ZN2v88internal13RelocIteratorC1ENS0_4CodeENS0_9ByteArrayEi(%"class.v8::internal::RelocIterator"*, i64, i64, i32) unnamed_addr #1

declare void @_ZN2v88internal13RelocIterator4nextEv(%"class.v8::internal::RelocIterator"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal9RelocInfo5VisitINS0_10Serializer16ObjectSerializerEEEvPT_(%"class.v8::internal::RelocInfo"*, %"class.v8::internal::Serializer::ObjectSerializer"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8
  %5 = add i8 %4, -3
  %6 = icmp ult i8 %5, 3
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.v8::internal::Serializer::ObjectSerializer"* %1 to void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)***
  %11 = load void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)**, void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)*, void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)** %11, i64 10
  %13 = load void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)*, void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)** %12, align 8
  tail call void %13(%"class.v8::internal::Serializer::ObjectSerializer"* %1, i64 %9, %"class.v8::internal::RelocInfo"* %0) #15
  br label %52

14:                                               ; preds = %2
  %15 = icmp slt i8 %4, 3
  br i1 %15, label %16, label %23

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.v8::internal::Serializer::ObjectSerializer"* %1 to void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)***
  %20 = load void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)**, void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)*, void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)** %20, i64 9
  %22 = load void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)*, void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)** %21, align 8
  tail call void %22(%"class.v8::internal::Serializer::ObjectSerializer"* %1, i64 %18, %"class.v8::internal::RelocInfo"* %0) #15
  br label %52

23:                                               ; preds = %14
  switch i8 %4, label %52 [
    i8 9, label %24
    i8 10, label %31
    i8 11, label %31
    i8 8, label %38
    i8 12, label %45
  ]

24:                                               ; preds = %23
  %25 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.v8::internal::Serializer::ObjectSerializer"* %1 to void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)***
  %28 = load void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)**, void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)*, void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)** %28, i64 12
  %30 = load void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)*, void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)** %29, align 8
  tail call void %30(%"class.v8::internal::Serializer::ObjectSerializer"* %1, i64 %26, %"class.v8::internal::RelocInfo"* %0) #15
  br label %52

31:                                               ; preds = %23, %23
  %32 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.v8::internal::Serializer::ObjectSerializer"* %1 to void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)***
  %35 = load void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)**, void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)*, void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)** %35, i64 14
  %37 = load void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)*, void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)** %36, align 8
  tail call void %37(%"class.v8::internal::Serializer::ObjectSerializer"* %1, i64 %33, %"class.v8::internal::RelocInfo"* %0) #15
  br label %52

38:                                               ; preds = %23
  %39 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.v8::internal::Serializer::ObjectSerializer"* %1 to void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)***
  %42 = load void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)**, void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)*, void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)** %42, i64 11
  %44 = load void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)*, void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)** %43, align 8
  tail call void %44(%"class.v8::internal::Serializer::ObjectSerializer"* %1, i64 %40, %"class.v8::internal::RelocInfo"* %0) #15
  br label %52

45:                                               ; preds = %23
  %46 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.v8::internal::Serializer::ObjectSerializer"* %1 to void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)***
  %49 = load void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)**, void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)*, void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)** %49, i64 15
  %51 = load void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)*, void (%"class.v8::internal::Serializer::ObjectSerializer"*, i64, %"class.v8::internal::RelocInfo"*)** %50, align 8
  tail call void %51(%"class.v8::internal::Serializer::ObjectSerializer"* %1, i64 %47, %"class.v8::internal::RelocInfo"* %0) #15
  br label %52

52:                                               ; preds = %23, %16, %31, %45, %38, %24, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer14HotObjectsListC2EPNS0_4HeapE(%"class.v8::internal::Serializer::HotObjectsList"*, %"class.v8::internal::Heap"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Serializer::HotObjectsList", %"class.v8::internal::Serializer::HotObjectsList"* %0, i64 0, i32 0
  store %"class.v8::internal::Heap"* %1, %"class.v8::internal::Heap"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Serializer::HotObjectsList", %"class.v8::internal::Serializer::HotObjectsList"* %0, i64 0, i32 2, i64 0
  %5 = getelementptr inbounds %"class.v8::internal::Serializer::HotObjectsList", %"class.v8::internal::Serializer::HotObjectsList"* %0, i64 0, i32 2, i64 8
  %6 = ptrtoint i64* %4 to i64
  %7 = ptrtoint i64* %5 to i64
  %8 = bitcast i64* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 68, i1 false)
  %9 = tail call %"class.v8::internal::StrongRootsEntry"* @_ZN2v88internal4Heap19RegisterStrongRootsENS0_14FullObjectSlotES2_(%"class.v8::internal::Heap"* %1, i64 %6, i64 %7) #15
  %10 = getelementptr inbounds %"class.v8::internal::Serializer::HotObjectsList", %"class.v8::internal::Serializer::HotObjectsList"* %0, i64 0, i32 1
  store %"class.v8::internal::StrongRootsEntry"* %9, %"class.v8::internal::StrongRootsEntry"** %10, align 8
  ret void
}

declare %"class.v8::internal::StrongRootsEntry"* @_ZN2v88internal4Heap19RegisterStrongRootsENS0_14FullObjectSlotES2_(%"class.v8::internal::Heap"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10Serializer14HotObjectsListD2Ev(%"class.v8::internal::Serializer::HotObjectsList"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Serializer::HotObjectsList", %"class.v8::internal::Serializer::HotObjectsList"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Serializer::HotObjectsList", %"class.v8::internal::Serializer::HotObjectsList"* %0, i64 0, i32 1
  %5 = load %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"** %4, align 8
  tail call void @_ZN2v88internal4Heap21UnregisterStrongRootsEPNS0_16StrongRootsEntryE(%"class.v8::internal::Heap"* %3, %"class.v8::internal::StrongRootsEntry"* %5) #15
  ret void
}

declare void @_ZN2v88internal4Heap21UnregisterStrongRootsEPNS0_16StrongRootsEntryE(%"class.v8::internal::Heap"*, %"class.v8::internal::StrongRootsEntry"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal10SerializerD2Ev(%"class.v8::internal::Serializer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN2v88internal10SerializerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 14
  %4 = getelementptr inbounds %"class.v8::internal::IdentityMap.1191", %"class.v8::internal::IdentityMap.1191"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11IdentityMapIPNSt3__16vectorIiNS2_9allocatorIiEEEENS_4base23DefaultAllocationPolicyEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = bitcast %"class.v8::internal::IdentityMap.1191"* %3 to %"class.v8::internal::IdentityMapBase"*
  tail call void @_ZN2v88internal15IdentityMapBase5ClearEv(%"class.v8::internal::IdentityMapBase"* %5) #15
  tail call void @_ZN2v88internal15IdentityMapBaseD2Ev(%"class.v8::internal::IdentityMapBase"* %5) #15
  %6 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = icmp eq i64* %7, null
  %9 = ptrtoint i64* %7 to i64
  br i1 %8, label %19, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %12 = bitcast i64** %11 to i64*
  store i64 %9, i64* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 1, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast i64** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %16, %9
  %18 = ashr exact i64 %17, 3
  tail call void @_ZN2v88internal24StrongRootBlockAllocator10deallocateEPmm(%"class.v8::internal::StrongRootBlockAllocator"* %13, i64* nonnull %7, i64 %18) #15
  br label %19

19:                                               ; preds = %1, %10
  %20 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 8, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %27, label %23

23:                                               ; preds = %19
  %24 = ptrtoint i8* %21 to i64
  %25 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 8, i32 0, i32 1
  %26 = bitcast i8** %25 to i64*
  store i64 %24, i64* %26, align 8
  tail call void @_ZdlPv(i8* nonnull %21) #19
  br label %27

27:                                               ; preds = %19, %23
  %28 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %29 = load %"class.v8::internal::CodeAddressMap"*, %"class.v8::internal::CodeAddressMap"** %28, align 8
  store %"class.v8::internal::CodeAddressMap"* null, %"class.v8::internal::CodeAddressMap"** %28, align 8
  %30 = icmp eq %"class.v8::internal::CodeAddressMap"* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.v8::internal::CodeAddressMap"* %29 to void (%"class.v8::internal::CodeAddressMap"*)***
  %33 = load void (%"class.v8::internal::CodeAddressMap"*)**, void (%"class.v8::internal::CodeAddressMap"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.v8::internal::CodeAddressMap"*)*, void (%"class.v8::internal::CodeAddressMap"*)** %33, i64 1
  %35 = load void (%"class.v8::internal::CodeAddressMap"*)*, void (%"class.v8::internal::CodeAddressMap"*)** %34, align 8
  tail call void %35(%"class.v8::internal::CodeAddressMap"* nonnull %29) #15
  br label %36

36:                                               ; preds = %27, %31
  %37 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 4
  %38 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 4, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.1147"* %39, null
  br i1 %40, label %47, label %41

41:                                               ; preds = %36, %41
  %42 = phi %"struct.std::__1::__hash_node_base.1147"* [ %44, %41 ], [ %39, %36 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147", %"struct.std::__1::__hash_node_base.1147"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %43, align 8
  %45 = bitcast %"struct.std::__1::__hash_node_base.1147"* %42 to i8*
  tail call void @_ZdlPv(i8* %45) #19
  %46 = icmp eq %"struct.std::__1::__hash_node_base.1147"* %44, null
  br i1 %46, label %47, label %41

47:                                               ; preds = %41, %36
  %48 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 4, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.1147"**, %"struct.std::__1::__hash_node_base.1147"*** %48, align 8
  store %"struct.std::__1::__hash_node_base.1147"** null, %"struct.std::__1::__hash_node_base.1147"*** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.1147"** %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %47
  %52 = bitcast %"struct.std::__1::__hash_node_base.1147"** %49 to i8*
  tail call void @_ZdlPv(i8* %52) #19
  br label %53

53:                                               ; preds = %47, %51
  %54 = getelementptr inbounds %"class.v8::internal::SerializerReferenceMap", %"class.v8::internal::SerializerReferenceMap"* %37, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11IdentityMapINS0_19SerializerReferenceENS_4base23DefaultAllocationPolicyEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  %55 = bitcast %"class.v8::internal::SerializerReferenceMap"* %37 to %"class.v8::internal::IdentityMapBase"*
  tail call void @_ZN2v88internal15IdentityMapBase5ClearEv(%"class.v8::internal::IdentityMapBase"* %55) #15
  tail call void @_ZN2v88internal15IdentityMapBaseD2Ev(%"class.v8::internal::IdentityMapBase"* %55) #15
  %56 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 3, i32 0
  %57 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %56, align 8
  %58 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 3, i32 1
  %59 = load %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"** %58, align 8
  tail call void @_ZN2v88internal4Heap21UnregisterStrongRootsEPNS0_16StrongRootsEntryE(%"class.v8::internal::Heap"* %57, %"class.v8::internal::StrongRootsEntry"* %59) #15
  %60 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %61, null
  br i1 %62, label %67, label %63

63:                                               ; preds = %53
  %64 = ptrtoint i8* %61 to i64
  %65 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %66 = bitcast i8** %65 to i64*
  store i64 %64, i64* %66, align 8
  tail call void @_ZdlPv(i8* nonnull %61) #19
  br label %67

67:                                               ; preds = %53, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal10SerializerD0Ev(%"class.v8::internal::Serializer"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #18
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11RootVisitor16VisitRootPointerENS0_4RootEPKcNS0_14FullObjectSlotE(%"class.v8::internal::RootVisitor"*, i32, i8*, i64) unnamed_addr #0 comdat align 2 {
  %5 = add i64 %3, 8
  %6 = bitcast %"class.v8::internal::RootVisitor"* %0 to void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)***
  %7 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)**, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)** %7, i64 2
  %9 = load void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)*, void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)** %8, align 8
  tail call void %9(%"class.v8::internal::RootVisitor"* %0, i32 %1, i8* %2, i64 %3, i64 %5) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11RootVisitor17VisitRootPointersENS0_4RootEPKcNS0_27OffHeapCompressedObjectSlotES5_(%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.59, i64 0, i64 0)) #18
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11RootVisitor11SynchronizeENS0_22VisitorSynchronization7SyncTagE(%"class.v8::internal::RootVisitor"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal10Serializer16ObjectSerializerD0Ev(%"class.v8::internal::Serializer::ObjectSerializer"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::Serializer::ObjectSerializer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitor23VisitCustomWeakPointersENS0_10HeapObjectENS0_20CompressedObjectSlotES3_(%"class.v8::internal::ObjectVisitor"*, i64, i64, i64) unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.v8::internal::ObjectVisitor"* %0 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %6 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %6, i64 2
  %8 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %7, align 8
  tail call void %8(%"class.v8::internal::ObjectVisitor"* %0, i64 %1, i64 %2, i64 %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitor12VisitPointerENS0_10HeapObjectENS0_20CompressedObjectSlotE(%"class.v8::internal::ObjectVisitor"*, i64, i64) unnamed_addr #0 comdat align 2 {
  %4 = add i64 %2, 4
  %5 = bitcast %"class.v8::internal::ObjectVisitor"* %0 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %6 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %6, i64 2
  %8 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %7, align 8
  tail call void %8(%"class.v8::internal::ObjectVisitor"* %0, i64 %1, i64 %2, i64 %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitor12VisitPointerENS0_10HeapObjectENS0_25CompressedMaybeObjectSlotE(%"class.v8::internal::ObjectVisitor"*, i64, i64) unnamed_addr #0 comdat align 2 {
  %4 = add i64 %2, 4
  %5 = bitcast %"class.v8::internal::ObjectVisitor"* %0 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %6 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %6, i64 3
  %8 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %7, align 8
  tail call void %8(%"class.v8::internal::ObjectVisitor"* %0, i64 %1, i64 %2, i64 %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitor22VisitCustomWeakPointerENS0_10HeapObjectENS0_20CompressedObjectSlotE(%"class.v8::internal::ObjectVisitor"*, i64, i64) unnamed_addr #0 comdat align 2 {
  %4 = add i64 %2, 4
  %5 = bitcast %"class.v8::internal::ObjectVisitor"* %0 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %6 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %6, i64 4
  %8 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %7, align 8
  tail call void %8(%"class.v8::internal::ObjectVisitor"* %0, i64 %1, i64 %2, i64 %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitor14VisitEphemeronENS0_10HeapObjectEiNS0_20CompressedObjectSlotES3_(%"class.v8::internal::ObjectVisitor"*, i64, i32, i64, i64) unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.v8::internal::ObjectVisitor"* %0 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64)***
  %7 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %7, i64 5
  %9 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %8, align 8
  tail call void %9(%"class.v8::internal::ObjectVisitor"* %0, i64 %1, i64 %3) #15
  %10 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %6, align 8
  %11 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %10, i64 5
  %12 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %11, align 8
  tail call void %12(%"class.v8::internal::ObjectVisitor"* %0, i64 %1, i64 %4) #15
  ret void
}

declare void @_ZN2v88internal13ObjectVisitor14VisitRelocInfoEPNS0_13RelocIteratorE(%"class.v8::internal::ObjectVisitor"*, %"class.v8::internal::RelocIterator"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitor15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::ObjectVisitor"*, i64) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.59, i64 0, i64 0)) #18
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11IdentityMapINS0_19SerializerReferenceENS_4base23DefaultAllocationPolicyEED2Ev(%"class.v8::internal::IdentityMap.1141"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::IdentityMap.1141", %"class.v8::internal::IdentityMap.1141"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11IdentityMapINS0_19SerializerReferenceENS_4base23DefaultAllocationPolicyEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = bitcast %"class.v8::internal::IdentityMap.1141"* %0 to %"class.v8::internal::IdentityMapBase"*
  tail call void @_ZN2v88internal15IdentityMapBase5ClearEv(%"class.v8::internal::IdentityMapBase"* %3) #15
  tail call void @_ZN2v88internal15IdentityMapBaseD2Ev(%"class.v8::internal::IdentityMapBase"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11IdentityMapINS0_19SerializerReferenceENS_4base23DefaultAllocationPolicyEED0Ev(%"class.v8::internal::IdentityMap.1141"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::IdentityMap.1141", %"class.v8::internal::IdentityMap.1141"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11IdentityMapINS0_19SerializerReferenceENS_4base23DefaultAllocationPolicyEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = bitcast %"class.v8::internal::IdentityMap.1141"* %0 to %"class.v8::internal::IdentityMapBase"*
  tail call void @_ZN2v88internal15IdentityMapBase5ClearEv(%"class.v8::internal::IdentityMapBase"* %3) #15
  tail call void @_ZN2v88internal15IdentityMapBaseD2Ev(%"class.v8::internal::IdentityMapBase"* %3) #15
  %4 = bitcast %"class.v8::internal::IdentityMap.1141"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal11IdentityMapINS0_19SerializerReferenceENS_4base23DefaultAllocationPolicyEE15NewPointerArrayEm(%"class.v8::internal::IdentityMap.1141"*, i64) unnamed_addr #0 comdat align 2 {
  %3 = shl i64 %1, 3
  %4 = tail call noalias i8* @malloc(i64 %3) #15
  %5 = bitcast i8* %4 to i64*
  ret i64* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11IdentityMapINS0_19SerializerReferenceENS_4base23DefaultAllocationPolicyEE18DeletePointerArrayEPmm(%"class.v8::internal::IdentityMap.1141"*, i64*, i64) unnamed_addr #0 comdat align 2 {
  %4 = bitcast i64* %1 to i8*
  tail call void @free(i8* %4) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2v88internal15IdentityMapBaseD2Ev(%"class.v8::internal::IdentityMapBase"*) unnamed_addr #12

declare void @_ZN2v88internal15IdentityMapBase5ClearEv(%"class.v8::internal::IdentityMapBase"*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #13

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #12

declare void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #1

declare void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64*, i64*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #14

; Function Attrs: nounwind
declare void @llvm.assume(i1) #15

declare i64* @_ZNK2v88internal15IdentityMapBase9FindEntryEm(%"class.v8::internal::IdentityMapBase"*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i64* @_ZN2v88internal15IdentityMapBase11InsertEntryEm(%"class.v8::internal::IdentityMapBase"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.1147"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeIPvN2v88internal19SerializerReferenceEEENS_22__unordered_map_hasherIS2_S6_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE4findIS2_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_S2_EEEERKT_(%"class.std::__1::__hash_table.1143"*, i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8** %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = lshr i64 %4, 32
  %6 = shl i64 %4, 3
  %7 = and i64 %6, 4294967288
  %8 = add nuw nsw i64 %7, 8
  %9 = xor i64 %8, %5
  %10 = mul i64 %9, -7070675565921424023
  %11 = lshr i64 %10, 47
  %12 = xor i64 %10, %5
  %13 = xor i64 %12, %11
  %14 = mul i64 %13, -7070675565921424023
  %15 = lshr i64 %14, 47
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = getelementptr inbounds %"class.std::__1::__hash_table.1143", %"class.std::__1::__hash_table.1143"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  %21 = inttoptr i64 %4 to i8*
  br i1 %20, label %85, label %22

22:                                               ; preds = %2
  %23 = tail call i64 @llvm.ctpop.i64(i64 %19) #15, !range !31
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %19, -1
  %27 = and i64 %17, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %17, %19
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %17, %19
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %17, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.1143", %"class.std::__1::__hash_table.1143"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.1147"**, %"struct.std::__1::__hash_node_base.1147"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.1147"* %37, null
  br i1 %38, label %85, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147", %"struct.std::__1::__hash_node_base.1147"* %37, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.1147"* %41, null
  br i1 %42, label %85, label %43

43:                                               ; preds = %39
  %44 = add i64 %19, -1
  br i1 %24, label %45, label %67

45:                                               ; preds = %43, %63
  %46 = phi %"struct.std::__1::__hash_node_base.1147"* [ %65, %63 ], [ %41, %43 ]
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147", %"struct.std::__1::__hash_node_base.1147"* %46, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.1147"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %17, %49
  br i1 %50, label %58, label %51

51:                                               ; preds = %45
  %52 = icmp ult i64 %49, %19
  br i1 %52, label %55, label %53

53:                                               ; preds = %51
  %54 = urem i64 %49, %19
  br label %55

55:                                               ; preds = %53, %51
  %56 = phi i64 [ %54, %53 ], [ %49, %51 ]
  %57 = icmp eq i64 %56, %33
  br i1 %57, label %63, label %85

58:                                               ; preds = %45
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147", %"struct.std::__1::__hash_node_base.1147"* %46, i64 2
  %60 = bitcast %"struct.std::__1::__hash_node_base.1147"* %59 to i8**
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %61, %21
  br i1 %62, label %85, label %63

63:                                               ; preds = %58, %55
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147", %"struct.std::__1::__hash_node_base.1147"* %46, i64 0, i32 0
  %65 = load %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %64, align 8
  %66 = icmp eq %"struct.std::__1::__hash_node_base.1147"* %65, null
  br i1 %66, label %85, label %45

67:                                               ; preds = %43, %81
  %68 = phi %"struct.std::__1::__hash_node_base.1147"* [ %83, %81 ], [ %41, %43 ]
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147", %"struct.std::__1::__hash_node_base.1147"* %68, i64 1
  %70 = bitcast %"struct.std::__1::__hash_node_base.1147"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %17, %71
  br i1 %72, label %76, label %73

73:                                               ; preds = %67
  %74 = and i64 %71, %44
  %75 = icmp eq i64 %74, %33
  br i1 %75, label %81, label %85

76:                                               ; preds = %67
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147", %"struct.std::__1::__hash_node_base.1147"* %68, i64 2
  %78 = bitcast %"struct.std::__1::__hash_node_base.1147"* %77 to i8**
  %79 = load i8*, i8** %78, align 8
  %80 = icmp eq i8* %79, %21
  br i1 %80, label %85, label %81

81:                                               ; preds = %73, %76
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147", %"struct.std::__1::__hash_node_base.1147"* %68, i64 0, i32 0
  %83 = load %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %82, align 8
  %84 = icmp eq %"struct.std::__1::__hash_node_base.1147"* %83, null
  br i1 %84, label %85, label %67

85:                                               ; preds = %76, %81, %73, %58, %63, %55, %39, %2, %32
  %86 = phi %"struct.std::__1::__hash_node_base.1147"* [ null, %32 ], [ null, %2 ], [ null, %39 ], [ %46, %58 ], [ null, %63 ], [ null, %55 ], [ %68, %76 ], [ null, %81 ], [ null, %73 ]
  ret %"struct.std::__1::__hash_node_base.1147"* %86
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1147"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN2v88internal19SerializerReferenceEEENS_22__unordered_map_hasherIS2_S6_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS2_JRS2_RS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_S2_EEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1143"*, i8** dereferenceable(8), i8** dereferenceable(8), %"class.v8::internal::SerializerReference"* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast i8** %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %6, 32
  %8 = shl i64 %6, 3
  %9 = and i64 %8, 4294967288
  %10 = add nuw nsw i64 %9, 8
  %11 = xor i64 %10, %7
  %12 = mul i64 %11, -7070675565921424023
  %13 = lshr i64 %12, 47
  %14 = xor i64 %12, %7
  %15 = xor i64 %14, %13
  %16 = mul i64 %15, -7070675565921424023
  %17 = lshr i64 %16, 47
  %18 = xor i64 %17, %16
  %19 = mul i64 %18, -7070675565921424023
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.1143", %"class.std::__1::__hash_table.1143"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  %23 = inttoptr i64 %6 to i8*
  br i1 %22, label %83, label %24

24:                                               ; preds = %4
  %25 = tail call i64 @llvm.ctpop.i64(i64 %21) #15, !range !31
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %21, -1
  %29 = and i64 %19, %28
  br label %34

30:                                               ; preds = %24
  %31 = icmp ult i64 %19, %21
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %19, %21
  br label %34

34:                                               ; preds = %27, %30, %32
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %19, %30 ]
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1143", %"class.std::__1::__hash_table.1143"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.1147"**, %"struct.std::__1::__hash_node_base.1147"*** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %37, i64 %35
  %39 = load %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.1147"* %39, null
  br i1 %40, label %83, label %41

41:                                               ; preds = %34
  %42 = add i64 %21, -1
  br i1 %26, label %43, label %65

43:                                               ; preds = %41, %60
  %44 = phi %"struct.std::__1::__hash_node_base.1147"* [ %46, %60 ], [ %39, %41 ]
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147", %"struct.std::__1::__hash_node_base.1147"* %44, i64 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.1147"* %46, null
  br i1 %47, label %83, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147", %"struct.std::__1::__hash_node_base.1147"* %46, i64 1
  %50 = bitcast %"struct.std::__1::__hash_node_base.1147"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, %19
  br i1 %52, label %60, label %53

53:                                               ; preds = %48
  %54 = icmp ult i64 %51, %21
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = urem i64 %51, %21
  br label %57

57:                                               ; preds = %55, %53
  %58 = phi i64 [ %56, %55 ], [ %51, %53 ]
  %59 = icmp eq i64 %58, %35
  br i1 %59, label %60, label %83

60:                                               ; preds = %57, %48
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147", %"struct.std::__1::__hash_node_base.1147"* %46, i64 2
  %62 = bitcast %"struct.std::__1::__hash_node_base.1147"* %61 to i8**
  %63 = load i8*, i8** %62, align 8
  %64 = icmp eq i8* %63, %23
  br i1 %64, label %175, label %43

65:                                               ; preds = %41, %78
  %66 = phi %"struct.std::__1::__hash_node_base.1147"* [ %68, %78 ], [ %39, %41 ]
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147", %"struct.std::__1::__hash_node_base.1147"* %66, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.1147"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147", %"struct.std::__1::__hash_node_base.1147"* %68, i64 1
  %72 = bitcast %"struct.std::__1::__hash_node_base.1147"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = icmp eq i64 %73, %19
  %75 = and i64 %73, %42
  %76 = icmp eq i64 %75, %35
  %77 = or i1 %74, %76
  br i1 %77, label %78, label %83

78:                                               ; preds = %70
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147", %"struct.std::__1::__hash_node_base.1147"* %68, i64 2
  %80 = bitcast %"struct.std::__1::__hash_node_base.1147"* %79 to i8**
  %81 = load i8*, i8** %80, align 8
  %82 = icmp eq i8* %81, %23
  br i1 %82, label %175, label %65

83:                                               ; preds = %70, %65, %57, %43, %34, %4
  %84 = phi i64 [ %35, %34 ], [ undef, %4 ], [ %35, %43 ], [ %35, %57 ], [ %35, %65 ], [ %35, %70 ]
  %85 = tail call i8* @_Znwm(i64 32) #19, !noalias !32
  %86 = getelementptr inbounds i8, i8* %85, i64 16
  %87 = bitcast i8** %2 to i64*
  %88 = load i64, i64* %87, align 8, !noalias !32
  %89 = bitcast i8* %86 to i64*
  store i64 %88, i64* %89, align 8, !noalias !32
  %90 = getelementptr inbounds %"class.v8::internal::SerializerReference", %"class.v8::internal::SerializerReference"* %3, i64 0, i32 0
  %91 = getelementptr inbounds i8, i8* %85, i64 24
  %92 = bitcast i8* %91 to i32*
  %93 = load i32, i32* %90, align 4, !noalias !32
  store i32 %93, i32* %92, align 8, !noalias !32
  %94 = getelementptr inbounds i8, i8* %85, i64 8
  %95 = bitcast i8* %94 to i64*
  store i64 %19, i64* %95, align 8, !noalias !32
  %96 = bitcast i8* %85 to %"struct.std::__1::__hash_node_base.1147"**
  store %"struct.std::__1::__hash_node_base.1147"* null, %"struct.std::__1::__hash_node_base.1147"** %96, align 8, !noalias !32
  %97 = getelementptr inbounds %"class.std::__1::__hash_table.1143", %"class.std::__1::__hash_table.1143"* %0, i64 0, i32 2, i32 0, i32 0
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  %100 = uitofp i64 %99 to float
  %101 = uitofp i64 %21 to float
  %102 = getelementptr inbounds %"class.std::__1::__hash_table.1143", %"class.std::__1::__hash_table.1143"* %0, i64 0, i32 3, i32 0, i32 0
  %103 = load float, float* %102, align 4
  %104 = fmul float %103, %101
  %105 = fcmp olt float %104, %100
  %106 = or i1 %22, %105
  br i1 %106, label %107, label %130

107:                                              ; preds = %83
  %108 = shl i64 %21, 1
  %109 = icmp ult i64 %21, 3
  %110 = tail call i64 @llvm.ctpop.i64(i64 %21) #15, !range !31
  %111 = icmp ugt i64 %110, 1
  %112 = or i1 %109, %111
  %113 = zext i1 %112 to i64
  %114 = or i64 %108, %113
  %115 = fdiv float %100, %103
  %116 = tail call float @llvm.ceil.f32(float %115) #15
  %117 = fptoui float %116 to i64
  %118 = icmp ult i64 %114, %117
  %119 = select i1 %118, i64 %117, i64 %114
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN2v88internal19SerializerReferenceEEENS_22__unordered_map_hasherIS2_S6_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.1143"* %0, i64 %119)
  %120 = load i64, i64* %20, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %120) #15, !range !31
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %107
  %124 = add i64 %120, -1
  %125 = and i64 %124, %19
  br label %130

126:                                              ; preds = %107
  %127 = icmp ult i64 %19, %120
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %19, %120
  br label %130

130:                                              ; preds = %128, %126, %123, %83
  %131 = phi i64 [ %21, %83 ], [ %120, %123 ], [ %120, %126 ], [ %120, %128 ]
  %132 = phi i64 [ %84, %83 ], [ %125, %123 ], [ %19, %126 ], [ %129, %128 ]
  %133 = getelementptr inbounds %"class.std::__1::__hash_table.1143", %"class.std::__1::__hash_table.1143"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %134 = load %"struct.std::__1::__hash_node_base.1147"**, %"struct.std::__1::__hash_node_base.1147"*** %133, align 8
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %134, i64 %132
  %136 = load %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.1147"* %136, null
  br i1 %137, label %138, label %164

138:                                              ; preds = %130
  %139 = getelementptr inbounds %"class.std::__1::__hash_table.1143", %"class.std::__1::__hash_table.1143"* %0, i64 0, i32 1, i32 0, i32 0
  %140 = bitcast %"struct.std::__1::__hash_node_base.1147"* %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast i8* %85 to i64*
  store i64 %141, i64* %142, align 8
  %143 = bitcast %"struct.std::__1::__hash_node_base.1147"* %139 to i8**
  store i8* %85, i8** %143, align 8
  store %"struct.std::__1::__hash_node_base.1147"* %139, %"struct.std::__1::__hash_node_base.1147"** %135, align 8
  %144 = load %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %96, align 8
  %145 = icmp eq %"struct.std::__1::__hash_node_base.1147"* %144, null
  br i1 %145, label %171, label %146

146:                                              ; preds = %138
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147", %"struct.std::__1::__hash_node_base.1147"* %144, i64 1
  %148 = bitcast %"struct.std::__1::__hash_node_base.1147"* %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = tail call i64 @llvm.ctpop.i64(i64 %131) #15, !range !31
  %151 = icmp ugt i64 %150, 1
  br i1 %151, label %155, label %152

152:                                              ; preds = %146
  %153 = add i64 %131, -1
  %154 = and i64 %149, %153
  br label %159

155:                                              ; preds = %146
  %156 = icmp ult i64 %149, %131
  br i1 %156, label %159, label %157

157:                                              ; preds = %155
  %158 = urem i64 %149, %131
  br label %159

159:                                              ; preds = %152, %155, %157
  %160 = phi i64 [ %154, %152 ], [ %158, %157 ], [ %149, %155 ]
  %161 = load %"struct.std::__1::__hash_node_base.1147"**, %"struct.std::__1::__hash_node_base.1147"*** %133, align 8
  %162 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %161, i64 %160
  %163 = bitcast %"struct.std::__1::__hash_node_base.1147"** %162 to i8**
  br label %169

164:                                              ; preds = %130
  %165 = bitcast %"struct.std::__1::__hash_node_base.1147"* %136 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast i8* %85 to i64*
  store i64 %166, i64* %167, align 8
  %168 = bitcast %"struct.std::__1::__hash_node_base.1147"* %136 to i8**
  br label %169

169:                                              ; preds = %159, %164
  %170 = phi i8** [ %168, %164 ], [ %163, %159 ]
  store i8* %85, i8** %170, align 8
  br label %171

171:                                              ; preds = %169, %138
  %172 = bitcast i8* %85 to %"struct.std::__1::__hash_node_base.1147"*
  %173 = load i64, i64* %97, align 8
  %174 = add i64 %173, 1
  store i64 %174, i64* %97, align 8
  br label %175

175:                                              ; preds = %78, %60, %171
  %176 = phi i8 [ 1, %171 ], [ 0, %60 ], [ 0, %78 ]
  %177 = phi %"struct.std::__1::__hash_node_base.1147"* [ %172, %171 ], [ %46, %60 ], [ %68, %78 ]
  %178 = insertvalue { %"struct.std::__1::__hash_node_base.1147"*, i8 } undef, %"struct.std::__1::__hash_node_base.1147"* %177, 0
  %179 = insertvalue { %"struct.std::__1::__hash_node_base.1147"*, i8 } %178, i8 %176, 1
  ret { %"struct.std::__1::__hash_node_base.1147"*, i8 } %179
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN2v88internal19SerializerReferenceEEENS_22__unordered_map_hasherIS2_S6_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.1143"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !31
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #15
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1143", %"class.std::__1::__hash_table.1143"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN2v88internal19SerializerReferenceEEENS_22__unordered_map_hasherIS2_S6_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.1143"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #15, !range !31
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1143", %"class.std::__1::__hash_table.1143"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1143", %"class.std::__1::__hash_table.1143"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #15
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #15, !range !31
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #15
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN2v88internal19SerializerReferenceEEENS_22__unordered_map_hasherIS2_S6_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.1143"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN2v88internal19SerializerReferenceEEENS_22__unordered_map_hasherIS2_S6_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.1143"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.1143", %"class.std::__1::__hash_table.1143"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %179, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #18
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #19
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1143", %"class.std::__1::__hash_table.1143"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.1147"**, %"struct.std::__1::__hash_node_base.1147"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.1143"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1147"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.1147"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #19
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1149", %"class.std::__1::__bucket_list_deallocator.1149"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.1147"**, %"struct.std::__1::__hash_node_base.1147"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.1147"* null, %"struct.std::__1::__hash_node_base.1147"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !35

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1143", %"class.std::__1::__hash_table.1143"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147", %"struct.std::__1::__hash_node_base.1147"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1147"* %38, null
  br i1 %39, label %187, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.1147"**, %"struct.std::__1::__hash_node_base.1147"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.1147"* null, %"struct.std::__1::__hash_node_base.1147"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.1147"**, %"struct.std::__1::__hash_node_base.1147"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.1147"* null, %"struct.std::__1::__hash_node_base.1147"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.1147"**, %"struct.std::__1::__hash_node_base.1147"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.1147"* null, %"struct.std::__1::__hash_node_base.1147"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.1147"**, %"struct.std::__1::__hash_node_base.1147"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.1147"* null, %"struct.std::__1::__hash_node_base.1147"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147", %"struct.std::__1::__hash_node_base.1147"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1147"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #15, !range !31
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.1147"**, %"struct.std::__1::__hash_node_base.1147"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.1147"* %36, %"struct.std::__1::__hash_node_base.1147"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147", %"struct.std::__1::__hash_node_base.1147"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1147"* %75, null
  br i1 %76, label %187, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %131

79:                                               ; preds = %77, %122
  %80 = phi %"struct.std::__1::__hash_node_base.1147"* [ %126, %122 ], [ %75, %77 ]
  %81 = phi i64 [ %124, %122 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base.1147"* [ %123, %122 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147", %"struct.std::__1::__hash_node_base.1147"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.1147"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %122, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base.1147"**, %"struct.std::__1::__hash_node_base.1147"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.1147"* %95, null
  br i1 %96, label %121, label %128

97:                                               ; preds = %128, %102
  %98 = phi %"struct.std::__1::__hash_node_base.1147"* [ %100, %102 ], [ %80, %128 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147", %"struct.std::__1::__hash_node_base.1147"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.1147"* %100, null
  br i1 %101, label %108, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147", %"struct.std::__1::__hash_node_base.1147"* %100, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base.1147"* %103 to i8**
  %105 = load i8*, i8** %130, align 8
  %106 = load i8*, i8** %104, align 8
  %107 = icmp eq i8* %105, %106
  br i1 %107, label %97, label %108

108:                                              ; preds = %102, %97
  %109 = ptrtoint %"struct.std::__1::__hash_node_base.1147"* %100 to i64
  %110 = bitcast %"struct.std::__1::__hash_node_base.1147"* %98 to i64*
  %111 = bitcast %"struct.std::__1::__hash_node_base.1147"* %82 to i64*
  store i64 %109, i64* %111, align 8
  %112 = load %"struct.std::__1::__hash_node_base.1147"**, %"struct.std::__1::__hash_node_base.1147"*** %11, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %112, i64 %90
  %114 = bitcast %"struct.std::__1::__hash_node_base.1147"** %113 to i64**
  %115 = load i64*, i64** %114, align 8
  %116 = load i64, i64* %115, align 8
  store i64 %116, i64* %110, align 8
  %117 = load %"struct.std::__1::__hash_node_base.1147"**, %"struct.std::__1::__hash_node_base.1147"*** %11, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %117, i64 %90
  %119 = load %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147", %"struct.std::__1::__hash_node_base.1147"* %119, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1147"* %80, %"struct.std::__1::__hash_node_base.1147"** %120, align 8
  br label %122

121:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base.1147"* %82, %"struct.std::__1::__hash_node_base.1147"** %94, align 8
  br label %122

122:                                              ; preds = %121, %108, %89
  %123 = phi %"struct.std::__1::__hash_node_base.1147"* [ %80, %121 ], [ %82, %108 ], [ %80, %89 ]
  %124 = phi i64 [ %90, %121 ], [ %81, %108 ], [ %81, %89 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147", %"struct.std::__1::__hash_node_base.1147"* %123, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base.1147"* %126, null
  br i1 %127, label %187, label %79

128:                                              ; preds = %92
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147", %"struct.std::__1::__hash_node_base.1147"* %80, i64 2
  %130 = bitcast %"struct.std::__1::__hash_node_base.1147"* %129 to i8**
  br label %97

131:                                              ; preds = %77, %173
  %132 = phi %"struct.std::__1::__hash_node_base.1147"* [ %177, %173 ], [ %75, %77 ]
  %133 = phi i64 [ %175, %173 ], [ %71, %77 ]
  %134 = phi %"struct.std::__1::__hash_node_base.1147"* [ %174, %173 ], [ %38, %77 ]
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147", %"struct.std::__1::__hash_node_base.1147"* %132, i64 1
  %136 = bitcast %"struct.std::__1::__hash_node_base.1147"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, %78
  %139 = icmp eq i64 %138, %133
  br i1 %139, label %173, label %140

140:                                              ; preds = %131
  %141 = load %"struct.std::__1::__hash_node_base.1147"**, %"struct.std::__1::__hash_node_base.1147"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %141, i64 %138
  %143 = load %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base.1147"* %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147", %"struct.std::__1::__hash_node_base.1147"* %132, i64 2
  %147 = bitcast %"struct.std::__1::__hash_node_base.1147"* %146 to i8**
  br label %149

148:                                              ; preds = %140
  store %"struct.std::__1::__hash_node_base.1147"* %134, %"struct.std::__1::__hash_node_base.1147"** %142, align 8
  br label %173

149:                                              ; preds = %145, %154
  %150 = phi %"struct.std::__1::__hash_node_base.1147"* [ %152, %154 ], [ %132, %145 ]
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147", %"struct.std::__1::__hash_node_base.1147"* %150, i64 0, i32 0
  %152 = load %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %151, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base.1147"* %152, null
  br i1 %153, label %160, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147", %"struct.std::__1::__hash_node_base.1147"* %152, i64 2
  %156 = bitcast %"struct.std::__1::__hash_node_base.1147"* %155 to i8**
  %157 = load i8*, i8** %147, align 8
  %158 = load i8*, i8** %156, align 8
  %159 = icmp eq i8* %157, %158
  br i1 %159, label %149, label %160

160:                                              ; preds = %149, %154
  %161 = ptrtoint %"struct.std::__1::__hash_node_base.1147"* %152 to i64
  %162 = bitcast %"struct.std::__1::__hash_node_base.1147"* %150 to i64*
  %163 = bitcast %"struct.std::__1::__hash_node_base.1147"* %134 to i64*
  store i64 %161, i64* %163, align 8
  %164 = load %"struct.std::__1::__hash_node_base.1147"**, %"struct.std::__1::__hash_node_base.1147"*** %11, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %164, i64 %138
  %166 = bitcast %"struct.std::__1::__hash_node_base.1147"** %165 to i64**
  %167 = load i64*, i64** %166, align 8
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %162, align 8
  %169 = load %"struct.std::__1::__hash_node_base.1147"**, %"struct.std::__1::__hash_node_base.1147"*** %11, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %169, i64 %138
  %171 = load %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %170, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147", %"struct.std::__1::__hash_node_base.1147"* %171, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1147"* %132, %"struct.std::__1::__hash_node_base.1147"** %172, align 8
  br label %173

173:                                              ; preds = %131, %160, %148
  %174 = phi %"struct.std::__1::__hash_node_base.1147"* [ %132, %148 ], [ %134, %160 ], [ %132, %131 ]
  %175 = phi i64 [ %138, %148 ], [ %133, %160 ], [ %133, %131 ]
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1147", %"struct.std::__1::__hash_node_base.1147"* %174, i64 0, i32 0
  %177 = load %"struct.std::__1::__hash_node_base.1147"*, %"struct.std::__1::__hash_node_base.1147"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base.1147"* %177, null
  br i1 %178, label %187, label %131

179:                                              ; preds = %2
  %180 = getelementptr inbounds %"class.std::__1::__hash_table.1143", %"class.std::__1::__hash_table.1143"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base.1147"**, %"struct.std::__1::__hash_node_base.1147"*** %180, align 8
  store %"struct.std::__1::__hash_node_base.1147"** null, %"struct.std::__1::__hash_node_base.1147"*** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base.1147"** %181, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %179
  %184 = bitcast %"struct.std::__1::__hash_node_base.1147"** %181 to i8*
  tail call void @_ZdlPv(i8* %184) #19
  br label %185

185:                                              ; preds = %179, %183
  %186 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1149", %"class.std::__1::__bucket_list_deallocator.1149"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %186, align 8
  br label %187

187:                                              ; preds = %173, %122, %70, %35, %185
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #16

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #16

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_13JSArrayBufferEPNS0_20ArrayBufferExtensionE(%"class.v8::internal::Heap"*, i64, %"class.v8::internal::ArrayBufferExtension"*) local_unnamed_addr #1

declare void @_ZN2v86String29ExternalOneByteStringResource15UpdateDataCacheEv(%"class.v8::String::ExternalOneByteStringResource"*) local_unnamed_addr #1

declare void @_ZN2v86String22ExternalStringResource15UpdateDataCacheEv(%"class.v8::String::ExternalStringResource"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal18GlobalHandleVectorINS0_10HeapObjectEE4PushES2_(%"class.v8::internal::GlobalHandleVector.1186"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::GlobalHandleVector.1186", %"class.v8::internal::GlobalHandleVector.1186"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::GlobalHandleVector.1186", %"class.v8::internal::GlobalHandleVector.1186"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = icmp ult i64* %4, %6
  %8 = ptrtoint i64* %6 to i64
  br i1 %7, label %9, label %13

9:                                                ; preds = %2
  store i64 %1, i64* %4, align 8
  %10 = getelementptr inbounds i64, i64* %4, i64 1
  %11 = ptrtoint i64* %10 to i64
  %12 = bitcast i64** %3 to i64*
  store i64 %11, i64* %12, align 8
  br label %68

13:                                               ; preds = %2
  %14 = ptrtoint i64* %4 to i64
  %15 = getelementptr inbounds %"class.v8::internal::GlobalHandleVector.1186", %"class.v8::internal::GlobalHandleVector.1186"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0
  %16 = bitcast i64** %3 to i64*
  %17 = bitcast %"class.v8::internal::GlobalHandleVector.1186"* %0 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %14, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = icmp ugt i64 %21, 2305843009213693951
  br i1 %22, label %23, label %25

23:                                               ; preds = %13
  %24 = bitcast %"class.v8::internal::GlobalHandleVector.1186"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %24) #18
  unreachable

25:                                               ; preds = %13
  %26 = bitcast i64** %5 to i64*
  %27 = sub i64 %8, %18
  %28 = ashr exact i64 %27, 3
  %29 = icmp ult i64 %28, 1152921504606846975
  br i1 %29, label %30, label %35

30:                                               ; preds = %25
  %31 = ashr exact i64 %27, 2
  %32 = icmp ult i64 %31, %21
  %33 = select i1 %32, i64 %21, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %30, %25
  %36 = phi i64 [ %33, %30 ], [ 2305843009213693951, %25 ]
  %37 = tail call i64* @_ZN2v88internal24StrongRootBlockAllocator8allocateEm(%"class.v8::internal::StrongRootBlockAllocator"* %15, i64 %36) #15
  br label %38

38:                                               ; preds = %35, %30
  %39 = phi i64 [ %36, %35 ], [ 0, %30 ]
  %40 = phi i64* [ %37, %35 ], [ null, %30 ]
  %41 = getelementptr inbounds i64, i64* %40, i64 %20
  %42 = getelementptr inbounds i64, i64* %40, i64 %39
  %43 = ptrtoint i64* %42 to i64
  store i64 %1, i64* %41, align 8
  %44 = getelementptr inbounds i64, i64* %41, i64 1
  %45 = ptrtoint i64* %44 to i64
  %46 = getelementptr inbounds %"class.v8::internal::GlobalHandleVector.1186", %"class.v8::internal::GlobalHandleVector.1186"* %0, i64 0, i32 0, i32 0, i32 0
  %47 = load i64*, i64** %46, align 8
  %48 = load i64, i64* %16, align 8
  %49 = ptrtoint i64* %47 to i64
  %50 = sub i64 %48, %49
  %51 = ashr exact i64 %50, 3
  %52 = sub nsw i64 0, %51
  %53 = getelementptr inbounds i64, i64* %41, i64 %52
  %54 = ptrtoint i64* %53 to i64
  %55 = icmp sgt i64 %50, 0
  br i1 %55, label %56, label %60

56:                                               ; preds = %38
  %57 = bitcast i64* %53 to i8*
  %58 = bitcast i64* %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 %50, i1 false) #15
  %59 = load i64, i64* %17, align 8
  br label %60

60:                                               ; preds = %56, %38
  %61 = phi i64 [ %49, %38 ], [ %59, %56 ]
  store i64 %54, i64* %17, align 8
  store i64 %45, i64* %16, align 8
  %62 = load i64, i64* %26, align 8
  store i64 %43, i64* %26, align 8
  %63 = icmp eq i64 %61, 0
  br i1 %63, label %68, label %64

64:                                               ; preds = %60
  %65 = inttoptr i64 %61 to i64*
  %66 = sub i64 %62, %61
  %67 = ashr exact i64 %66, 3
  tail call void @_ZN2v88internal24StrongRootBlockAllocator10deallocateEPmm(%"class.v8::internal::StrongRootBlockAllocator"* %15, i64* nonnull %65, i64 %67) #15
  br label %68

68:                                               ; preds = %9, %60, %64
  ret void
}

declare i64* @_ZN2v88internal24StrongRootBlockAllocator8allocateEm(%"class.v8::internal::StrongRootBlockAllocator"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88internal24StrongRootBlockAllocator10deallocateEPmm(%"class.v8::internal::StrongRootBlockAllocator"*, i64*, i64) local_unnamed_addr #12

declare i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"*, i64) local_unnamed_addr #1

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #1

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #1

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #1

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #1

declare i32 @_ZN2v88internal24ExternalReferenceEncoder6EncodeEm(%"class.v8::internal::ExternalReferenceEncoder"*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN2v88internal9RelocInfo16IsCodedSpeciallyEv(%"class.v8::internal::RelocInfo"*) local_unnamed_addr #1

declare void @_ZN2v88internal21FlushInstructionCacheEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11IdentityMapIPNSt3__16vectorIiNS2_9allocatorIiEEEENS_4base23DefaultAllocationPolicyEED2Ev(%"class.v8::internal::IdentityMap.1191"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::IdentityMap.1191", %"class.v8::internal::IdentityMap.1191"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11IdentityMapIPNSt3__16vectorIiNS2_9allocatorIiEEEENS_4base23DefaultAllocationPolicyEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = bitcast %"class.v8::internal::IdentityMap.1191"* %0 to %"class.v8::internal::IdentityMapBase"*
  tail call void @_ZN2v88internal15IdentityMapBase5ClearEv(%"class.v8::internal::IdentityMapBase"* %3) #15
  tail call void @_ZN2v88internal15IdentityMapBaseD2Ev(%"class.v8::internal::IdentityMapBase"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11IdentityMapIPNSt3__16vectorIiNS2_9allocatorIiEEEENS_4base23DefaultAllocationPolicyEED0Ev(%"class.v8::internal::IdentityMap.1191"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::IdentityMap.1191", %"class.v8::internal::IdentityMap.1191"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal11IdentityMapIPNSt3__16vectorIiNS2_9allocatorIiEEEENS_4base23DefaultAllocationPolicyEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = bitcast %"class.v8::internal::IdentityMap.1191"* %0 to %"class.v8::internal::IdentityMapBase"*
  tail call void @_ZN2v88internal15IdentityMapBase5ClearEv(%"class.v8::internal::IdentityMapBase"* %3) #15
  tail call void @_ZN2v88internal15IdentityMapBaseD2Ev(%"class.v8::internal::IdentityMapBase"* %3) #15
  %4 = bitcast %"class.v8::internal::IdentityMap.1191"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN2v88internal11IdentityMapIPNSt3__16vectorIiNS2_9allocatorIiEEEENS_4base23DefaultAllocationPolicyEE15NewPointerArrayEm(%"class.v8::internal::IdentityMap.1191"*, i64) unnamed_addr #0 comdat align 2 {
  %3 = shl i64 %1, 3
  %4 = tail call noalias i8* @malloc(i64 %3) #15
  %5 = bitcast i8* %4 to i64*
  ret i64* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11IdentityMapIPNSt3__16vectorIiNS2_9allocatorIiEEEENS_4base23DefaultAllocationPolicyEE18DeletePointerArrayEPmm(%"class.v8::internal::IdentityMap.1191"*, i64*, i64) unnamed_addr #0 comdat align 2 {
  %4 = bitcast i64* %1 to i8*
  tail call void @free(i8* %4) #15
  ret void
}

declare { i64*, i8 } @_ZN2v88internal15IdentityMapBase17FindOrInsertEntryEm(%"class.v8::internal::IdentityMapBase"*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN2v88internal15IdentityMapBase11DeleteEntryEmPm(%"class.v8::internal::IdentityMapBase"*, i64, i64*) local_unnamed_addr #1

declare void @_ZN2v88internal15CodeEventLoggerC2EPNS0_7IsolateE(%"class.v8::internal::CodeEventLogger"*, %"class.v8::internal::Isolate"*) unnamed_addr #1

declare void @_ZN2v88internal6Logger20AddCodeEventListenerEPNS0_17CodeEventListenerE(%"class.v8::internal::Logger"*, %"class.v8::internal::CodeEventListener"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14CodeAddressMapD2Ev(%"class.v8::internal::CodeAddressMap"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::CodeAddressMap", %"class.v8::internal::CodeAddressMap"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN2v88internal14CodeAddressMapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::CodeAddressMap", %"class.v8::internal::CodeAddressMap"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::CodeAddressMap", %"class.v8::internal::CodeAddressMap"* %0, i64 0, i32 0, i32 1
  %5 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 21
  %7 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::CodeAddressMap", %"class.v8::internal::CodeAddressMap"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal6Logger23RemoveCodeEventListenerEPNS0_17CodeEventListenerE(%"class.v8::internal::Logger"* %7, %"class.v8::internal::CodeEventListener"* %8) #15
  %9 = getelementptr inbounds %"class.v8::internal::CodeAddressMap", %"class.v8::internal::CodeAddressMap"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = load %"struct.v8::base::TemplateHashMapEntry.1181"*, %"struct.v8::base::TemplateHashMapEntry.1181"** %9, align 8
  %11 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %10, i64 -1
  %12 = getelementptr inbounds %"class.v8::internal::CodeAddressMap", %"class.v8::internal::CodeAddressMap"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %10, i64 %14
  br label %16

16:                                               ; preds = %20, %1
  %17 = phi %"struct.v8::base::TemplateHashMapEntry.1181"* [ %11, %1 ], [ %18, %20 ]
  %18 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %17, i64 1
  %19 = icmp ult %"struct.v8::base::TemplateHashMapEntry.1181"* %18, %15
  br i1 %19, label %20, label %24

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %18, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %16, label %29

24:                                               ; preds = %16, %44
  %25 = phi %"struct.v8::base::TemplateHashMapEntry.1181"* [ %41, %44 ], [ %10, %16 ]
  %26 = icmp eq %"struct.v8::base::TemplateHashMapEntry.1181"* %25, null
  br i1 %26, label %52, label %27

27:                                               ; preds = %24
  %28 = bitcast %"struct.v8::base::TemplateHashMapEntry.1181"* %25 to i8*
  tail call void @free(i8* %28) #15
  br label %52

29:                                               ; preds = %48, %20
  %30 = phi i32 [ %13, %20 ], [ %40, %48 ]
  %31 = phi %"struct.v8::base::TemplateHashMapEntry.1181"* [ %10, %20 ], [ %41, %48 ]
  %32 = phi %"struct.v8::base::TemplateHashMapEntry.1181"* [ %18, %20 ], [ %46, %48 ]
  %33 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %32, i64 0, i32 1
  %34 = load i8*, i8** %33, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %29
  tail call void @_ZdaPv(i8* nonnull %34) #19
  %37 = load %"struct.v8::base::TemplateHashMapEntry.1181"*, %"struct.v8::base::TemplateHashMapEntry.1181"** %9, align 8
  %38 = load i32, i32* %12, align 8
  br label %39

39:                                               ; preds = %36, %29
  %40 = phi i32 [ %30, %29 ], [ %38, %36 ]
  %41 = phi %"struct.v8::base::TemplateHashMapEntry.1181"* [ %31, %29 ], [ %37, %36 ]
  %42 = zext i32 %40 to i64
  %43 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %41, i64 %42
  br label %44

44:                                               ; preds = %48, %39
  %45 = phi %"struct.v8::base::TemplateHashMapEntry.1181"* [ %32, %39 ], [ %46, %48 ]
  %46 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %45, i64 1
  %47 = icmp ult %"struct.v8::base::TemplateHashMapEntry.1181"* %46, %43
  br i1 %47, label %48, label %24

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %46, i64 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, null
  br i1 %51, label %44, label %29

52:                                               ; preds = %24, %27
  tail call void @_ZN2v88internal15CodeEventLoggerD2Ev(%"class.v8::internal::CodeEventLogger"* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14CodeAddressMapD0Ev(%"class.v8::internal::CodeAddressMap"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::CodeAddressMap", %"class.v8::internal::CodeAddressMap"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN2v88internal14CodeAddressMapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::CodeAddressMap", %"class.v8::internal::CodeAddressMap"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::CodeAddressMap", %"class.v8::internal::CodeAddressMap"* %0, i64 0, i32 0, i32 1
  %5 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 21
  %7 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::CodeAddressMap", %"class.v8::internal::CodeAddressMap"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal6Logger23RemoveCodeEventListenerEPNS0_17CodeEventListenerE(%"class.v8::internal::Logger"* %7, %"class.v8::internal::CodeEventListener"* %8) #15
  %9 = getelementptr inbounds %"class.v8::internal::CodeAddressMap", %"class.v8::internal::CodeAddressMap"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = load %"struct.v8::base::TemplateHashMapEntry.1181"*, %"struct.v8::base::TemplateHashMapEntry.1181"** %9, align 8
  %11 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %10, i64 -1
  %12 = getelementptr inbounds %"class.v8::internal::CodeAddressMap", %"class.v8::internal::CodeAddressMap"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %10, i64 %14
  br label %16

16:                                               ; preds = %20, %1
  %17 = phi %"struct.v8::base::TemplateHashMapEntry.1181"* [ %11, %1 ], [ %18, %20 ]
  %18 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %17, i64 1
  %19 = icmp ult %"struct.v8::base::TemplateHashMapEntry.1181"* %18, %15
  br i1 %19, label %20, label %24

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %18, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %16, label %29

24:                                               ; preds = %16, %44
  %25 = phi %"struct.v8::base::TemplateHashMapEntry.1181"* [ %41, %44 ], [ %10, %16 ]
  %26 = icmp eq %"struct.v8::base::TemplateHashMapEntry.1181"* %25, null
  br i1 %26, label %52, label %27

27:                                               ; preds = %24
  %28 = bitcast %"struct.v8::base::TemplateHashMapEntry.1181"* %25 to i8*
  tail call void @free(i8* %28) #15
  br label %52

29:                                               ; preds = %48, %20
  %30 = phi i32 [ %13, %20 ], [ %40, %48 ]
  %31 = phi %"struct.v8::base::TemplateHashMapEntry.1181"* [ %10, %20 ], [ %41, %48 ]
  %32 = phi %"struct.v8::base::TemplateHashMapEntry.1181"* [ %18, %20 ], [ %46, %48 ]
  %33 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %32, i64 0, i32 1
  %34 = load i8*, i8** %33, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %29
  tail call void @_ZdaPv(i8* nonnull %34) #19
  %37 = load %"struct.v8::base::TemplateHashMapEntry.1181"*, %"struct.v8::base::TemplateHashMapEntry.1181"** %9, align 8
  %38 = load i32, i32* %12, align 8
  br label %39

39:                                               ; preds = %36, %29
  %40 = phi i32 [ %30, %29 ], [ %38, %36 ]
  %41 = phi %"struct.v8::base::TemplateHashMapEntry.1181"* [ %31, %29 ], [ %37, %36 ]
  %42 = zext i32 %40 to i64
  %43 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %41, i64 %42
  br label %44

44:                                               ; preds = %48, %39
  %45 = phi %"struct.v8::base::TemplateHashMapEntry.1181"* [ %32, %39 ], [ %46, %48 ]
  %46 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %45, i64 1
  %47 = icmp ult %"struct.v8::base::TemplateHashMapEntry.1181"* %46, %43
  br i1 %47, label %48, label %24

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %46, i64 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, null
  br i1 %51, label %44, label %29

52:                                               ; preds = %24, %27
  tail call void @_ZN2v88internal15CodeEventLoggerD2Ev(%"class.v8::internal::CodeEventLogger"* %3) #15
  %53 = bitcast %"class.v8::internal::CodeAddressMap"* %0 to i8*
  tail call void @_ZdlPv(i8* %53) #19
  ret void
}

declare void @_ZN2v88internal15CodeEventLogger15CodeCreateEventENS0_17CodeEventListener16LogEventsAndTagsENS0_6HandleINS0_12AbstractCodeEEEPKc(%"class.v8::internal::CodeEventLogger"*, i32, i64*, i8*) unnamed_addr #1

declare void @_ZN2v88internal15CodeEventLogger15CodeCreateEventENS0_17CodeEventListener16LogEventsAndTagsENS0_6HandleINS0_12AbstractCodeEEENS4_INS0_4NameEEE(%"class.v8::internal::CodeEventLogger"*, i32, i64*, i64*) unnamed_addr #1

declare void @_ZN2v88internal15CodeEventLogger15CodeCreateEventENS0_17CodeEventListener16LogEventsAndTagsENS0_6HandleINS0_12AbstractCodeEEENS4_INS0_18SharedFunctionInfoEEENS4_INS0_4NameEEE(%"class.v8::internal::CodeEventLogger"*, i32, i64*, i64*, i64*) unnamed_addr #1

declare void @_ZN2v88internal15CodeEventLogger15CodeCreateEventENS0_17CodeEventListener16LogEventsAndTagsENS0_6HandleINS0_12AbstractCodeEEENS4_INS0_18SharedFunctionInfoEEENS4_INS0_4NameEEEii(%"class.v8::internal::CodeEventLogger"*, i32, i64*, i64*, i64*, i32, i32) unnamed_addr #1

declare void @_ZN2v88internal15CodeEventLogger15CodeCreateEventENS0_17CodeEventListener16LogEventsAndTagsEPKNS0_4wasm8WasmCodeENS0_6VectorIKcEEPS9_ii(%"class.v8::internal::CodeEventLogger"*, i32, %"class.v8::internal::wasm::WasmCode"*, i8*, i64, i8*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15CodeEventLogger13CallbackEventENS0_6HandleINS0_4NameEEEm(%"class.v8::internal::CodeEventLogger"*, i64*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15CodeEventLogger19GetterCallbackEventENS0_6HandleINS0_4NameEEEm(%"class.v8::internal::CodeEventLogger"*, i64*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15CodeEventLogger19SetterCallbackEventENS0_6HandleINS0_4NameEEEm(%"class.v8::internal::CodeEventLogger"*, i64*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN2v88internal15CodeEventLogger21RegExpCodeCreateEventENS0_6HandleINS0_12AbstractCodeEEENS2_INS0_6StringEEE(%"class.v8::internal::CodeEventLogger"*, i64*, i64*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14CodeAddressMap13CodeMoveEventENS0_12AbstractCodeES2_(%"class.v8::internal::CodeAddressMap"*, i64, i64) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::CodeAddressMap", %"class.v8::internal::CodeAddressMap"* %0, i64 0, i32 1
  %5 = add i64 %1, -1
  %6 = add i64 %2, -1
  %7 = icmp eq i64 %5, %6
  br i1 %7, label %142, label %8

8:                                                ; preds = %3
  %9 = inttoptr i64 %5 to i8*
  %10 = trunc i64 %5 to i32
  %11 = xor i32 %10, -1
  %12 = shl i32 %10, 15
  %13 = add i32 %12, %11
  %14 = lshr i32 %13, 12
  %15 = xor i32 %14, %13
  %16 = mul i32 %15, 5
  %17 = lshr i32 %16, 4
  %18 = xor i32 %17, %16
  %19 = mul i32 %18, 2057
  %20 = lshr i32 %19, 16
  %21 = and i32 %19, 1073741823
  %22 = xor i32 %21, %20
  %23 = getelementptr inbounds %"class.v8::internal::CodeAddressMap", %"class.v8::internal::CodeAddressMap"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = add i32 %24, -1
  %26 = and i32 %25, %22
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.v8::internal::CodeAddressMap::NameMap", %"class.v8::internal::CodeAddressMap::NameMap"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"struct.v8::base::TemplateHashMapEntry.1181"*, %"struct.v8::base::TemplateHashMapEntry.1181"** %28, align 8
  %30 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %29, i64 %27
  %31 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %30, i64 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  %34 = icmp eq i8* %32, %9
  %35 = or i1 %33, %34
  br i1 %35, label %48, label %36

36:                                               ; preds = %8
  %37 = zext i32 %25 to i64
  br label %38

38:                                               ; preds = %38, %36
  %39 = phi i64 [ %27, %36 ], [ %41, %38 ]
  %40 = add nuw nsw i64 %39, 1
  %41 = and i64 %40, %37
  %42 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %29, i64 %41
  %43 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %42, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = icmp eq i8* %44, null
  %46 = icmp eq i8* %44, %9
  %47 = or i1 %45, %46
  br i1 %47, label %48, label %38

48:                                               ; preds = %38, %8
  %49 = phi i8* [ %32, %8 ], [ %44, %38 ]
  %50 = phi %"struct.v8::base::TemplateHashMapEntry.1181"* [ %30, %8 ], [ %42, %38 ]
  %51 = icmp eq i8* %49, null
  %52 = select i1 %51, %"struct.v8::base::TemplateHashMapEntry.1181"* null, %"struct.v8::base::TemplateHashMapEntry.1181"* %50
  %53 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %52, i64 0, i32 1
  %54 = bitcast i8** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %52, i64 0, i32 0
  %57 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %52, i64 0, i32 2
  %58 = load i32, i32* %57, align 8
  %59 = and i32 %58, %25
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %29, i64 %60
  %62 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %61, i64 0, i32 0
  %63 = load i8*, i8** %62, align 8
  %64 = icmp eq i8* %63, null
  %65 = load i8*, i8** %56, align 8
  %66 = icmp eq i8* %65, %63
  %67 = or i1 %64, %66
  br i1 %67, label %80, label %68

68:                                               ; preds = %48
  %69 = zext i32 %25 to i64
  br label %70

70:                                               ; preds = %70, %68
  %71 = phi i64 [ %60, %68 ], [ %73, %70 ]
  %72 = add nuw nsw i64 %71, 1
  %73 = and i64 %72, %69
  %74 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %29, i64 %73
  %75 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %74, i64 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = icmp eq i8* %76, null
  %78 = icmp eq i8* %65, %76
  %79 = or i1 %77, %78
  br i1 %79, label %80, label %70

80:                                               ; preds = %70, %48
  %81 = phi i8* [ %63, %48 ], [ %76, %70 ]
  %82 = phi %"struct.v8::base::TemplateHashMapEntry.1181"* [ %61, %48 ], [ %74, %70 ]
  %83 = icmp eq i8* %81, null
  br i1 %83, label %138, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %82, i64 1
  %86 = zext i32 %24 to i64
  %87 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %29, i64 %86
  %88 = icmp eq %"struct.v8::base::TemplateHashMapEntry.1181"* %85, %87
  %89 = select i1 %88, %"struct.v8::base::TemplateHashMapEntry.1181"* %29, %"struct.v8::base::TemplateHashMapEntry.1181"* %85
  %90 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %89, i64 0, i32 0
  %91 = load i8*, i8** %90, align 8
  %92 = icmp eq i8* %91, null
  br i1 %92, label %132, label %93

93:                                               ; preds = %84, %120
  %94 = phi i32 [ %121, %120 ], [ %24, %84 ]
  %95 = phi %"struct.v8::base::TemplateHashMapEntry.1181"* [ %122, %120 ], [ %29, %84 ]
  %96 = phi %"struct.v8::base::TemplateHashMapEntry.1181"* [ %128, %120 ], [ %89, %84 ]
  %97 = phi %"struct.v8::base::TemplateHashMapEntry.1181"* [ %123, %120 ], [ %82, %84 ]
  %98 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %96, i64 0, i32 2
  %99 = load i32, i32* %98, align 8
  %100 = add i32 %94, -1
  %101 = and i32 %99, %100
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %95, i64 %102
  %104 = icmp ugt %"struct.v8::base::TemplateHashMapEntry.1181"* %96, %97
  br i1 %104, label %105, label %109

105:                                              ; preds = %93
  %106 = icmp ule %"struct.v8::base::TemplateHashMapEntry.1181"* %103, %97
  %107 = icmp ugt %"struct.v8::base::TemplateHashMapEntry.1181"* %103, %96
  %108 = or i1 %106, %107
  br i1 %108, label %115, label %109

109:                                              ; preds = %105, %93
  %110 = icmp ult %"struct.v8::base::TemplateHashMapEntry.1181"* %96, %97
  %111 = icmp ule %"struct.v8::base::TemplateHashMapEntry.1181"* %103, %97
  %112 = and i1 %110, %111
  %113 = icmp ugt %"struct.v8::base::TemplateHashMapEntry.1181"* %103, %96
  %114 = and i1 %113, %112
  br i1 %114, label %115, label %120

115:                                              ; preds = %109, %105
  %116 = bitcast %"struct.v8::base::TemplateHashMapEntry.1181"* %97 to i8*
  %117 = bitcast %"struct.v8::base::TemplateHashMapEntry.1181"* %96 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %116, i8* align 8 %117, i64 20, i1 false) #15
  %118 = load %"struct.v8::base::TemplateHashMapEntry.1181"*, %"struct.v8::base::TemplateHashMapEntry.1181"** %28, align 8
  %119 = load i32, i32* %23, align 8
  br label %120

120:                                              ; preds = %115, %109
  %121 = phi i32 [ %119, %115 ], [ %94, %109 ]
  %122 = phi %"struct.v8::base::TemplateHashMapEntry.1181"* [ %118, %115 ], [ %95, %109 ]
  %123 = phi %"struct.v8::base::TemplateHashMapEntry.1181"* [ %96, %115 ], [ %97, %109 ]
  %124 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %96, i64 1
  %125 = zext i32 %121 to i64
  %126 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %122, i64 %125
  %127 = icmp eq %"struct.v8::base::TemplateHashMapEntry.1181"* %124, %126
  %128 = select i1 %127, %"struct.v8::base::TemplateHashMapEntry.1181"* %122, %"struct.v8::base::TemplateHashMapEntry.1181"* %124
  %129 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %128, i64 0, i32 0
  %130 = load i8*, i8** %129, align 8
  %131 = icmp eq i8* %130, null
  br i1 %131, label %132, label %93

132:                                              ; preds = %120, %84
  %133 = phi %"struct.v8::base::TemplateHashMapEntry.1181"* [ %82, %84 ], [ %123, %120 ]
  %134 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %133, i64 0, i32 0
  store i8* null, i8** %134, align 8
  %135 = getelementptr inbounds %"class.v8::internal::CodeAddressMap", %"class.v8::internal::CodeAddressMap"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %136 = load i32, i32* %135, align 4
  %137 = add i32 %136, -1
  store i32 %137, i32* %135, align 4
  br label %138

138:                                              ; preds = %80, %132
  %139 = tail call %"struct.v8::base::TemplateHashMapEntry.1181"* @_ZN2v88internal14CodeAddressMap7NameMap17FindOrCreateEntryEm(%"class.v8::internal::CodeAddressMap::NameMap"* %4, i64 %6) #15
  %140 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %139, i64 0, i32 1
  %141 = bitcast i8** %140 to i64*
  store i64 %55, i64* %141, align 8
  br label %142

142:                                              ; preds = %3, %138
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15CodeEventLogger27SharedFunctionInfoMoveEventEmm(%"class.v8::internal::CodeEventLogger"*, i64, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15CodeEventLogger22NativeContextMoveEventEmm(%"class.v8::internal::CodeEventLogger"*, i64, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15CodeEventLogger17CodeMovingGCEventEv(%"class.v8::internal::CodeEventLogger"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14CodeAddressMap19CodeDisableOptEventENS0_6HandleINS0_12AbstractCodeEEENS2_INS0_18SharedFunctionInfoEEE(%"class.v8::internal::CodeAddressMap"*, i64*, i64*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15CodeEventLogger14CodeDeoptEventENS0_6HandleINS0_4CodeEEENS0_14DeoptimizeKindEmib(%"class.v8::internal::CodeEventLogger"*, i64*, i8 zeroext, i64, i32, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15CodeEventLogger25CodeDependencyChangeEventENS0_6HandleINS0_4CodeEEENS2_INS0_18SharedFunctionInfoEEEPKc(%"class.v8::internal::CodeEventLogger"*, i64*, i64*, i8*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15CodeEventLogger18WeakCodeClearEventEv(%"class.v8::internal::CodeEventLogger"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal17CodeEventListener27is_listening_to_code_eventsEv(%"class.v8::internal::CodeEventListener"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14CodeAddressMap17LogRecordedBufferENS0_6HandleINS0_12AbstractCodeEEENS0_11MaybeHandleINS0_18SharedFunctionInfoEEEPKci(%"class.v8::internal::CodeAddressMap"*, i64*, i64*, i8*, i32) unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::CodeAddressMap", %"class.v8::internal::CodeAddressMap"* %0, i64 0, i32 1
  %7 = load i64, i64* %1, align 8
  %8 = add i64 %7, -1
  %9 = tail call %"struct.v8::base::TemplateHashMapEntry.1181"* @_ZN2v88internal14CodeAddressMap7NameMap17FindOrCreateEntryEm(%"class.v8::internal::CodeAddressMap::NameMap"* %6, i64 %8) #15
  %10 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %9, i64 0, i32 1
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %111

13:                                               ; preds = %5
  %14 = add nsw i32 %4, 1
  %15 = sext i32 %14 to i64
  %16 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %15, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #19
  %17 = icmp eq i8* %16, null
  br i1 %17, label %18, label %27

18:                                               ; preds = %13
  %19 = tail call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #15
  %20 = bitcast %"class.v8::Platform"* %19 to void (%"class.v8::Platform"*)***
  %21 = load void (%"class.v8::Platform"*)**, void (%"class.v8::Platform"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %21, i64 3
  %23 = load void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %22, align 8
  tail call void %23(%"class.v8::Platform"* %19) #15
  %24 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %15, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #19
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %27

26:                                               ; preds = %18
  tail call void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.71, i64 0, i64 0)) #18
  unreachable

27:                                               ; preds = %18, %13
  %28 = phi i8* [ %24, %18 ], [ %16, %13 ]
  %29 = icmp sgt i32 %4, 0
  br i1 %29, label %30, label %108

30:                                               ; preds = %27
  %31 = zext i32 %4 to i64
  %32 = icmp ult i32 %4, 32
  br i1 %32, label %97, label %33

33:                                               ; preds = %30
  %34 = and i64 %31, 4294967264
  %35 = add nsw i64 %34, -32
  %36 = lshr exact i64 %35, 5
  %37 = add nuw nsw i64 %36, 1
  %38 = and i64 %37, 1
  %39 = icmp eq i64 %35, 0
  br i1 %39, label %77, label %40

40:                                               ; preds = %33
  %41 = sub nuw nsw i64 %37, %38
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi i64 [ 0, %40 ], [ %74, %42 ]
  %44 = phi i64 [ %41, %40 ], [ %75, %42 ]
  %45 = getelementptr inbounds i8, i8* %3, i64 %43
  %46 = bitcast i8* %45 to <16 x i8>*
  %47 = load <16 x i8>, <16 x i8>* %46, align 1
  %48 = getelementptr inbounds i8, i8* %45, i64 16
  %49 = bitcast i8* %48 to <16 x i8>*
  %50 = load <16 x i8>, <16 x i8>* %49, align 1
  %51 = icmp eq <16 x i8> %47, zeroinitializer
  %52 = icmp eq <16 x i8> %50, zeroinitializer
  %53 = select <16 x i1> %51, <16 x i8> <i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32>, <16 x i8> %47
  %54 = select <16 x i1> %52, <16 x i8> <i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32>, <16 x i8> %50
  %55 = getelementptr inbounds i8, i8* %28, i64 %43
  %56 = bitcast i8* %55 to <16 x i8>*
  store <16 x i8> %53, <16 x i8>* %56, align 1
  %57 = getelementptr inbounds i8, i8* %55, i64 16
  %58 = bitcast i8* %57 to <16 x i8>*
  store <16 x i8> %54, <16 x i8>* %58, align 1
  %59 = or i64 %43, 32
  %60 = getelementptr inbounds i8, i8* %3, i64 %59
  %61 = bitcast i8* %60 to <16 x i8>*
  %62 = load <16 x i8>, <16 x i8>* %61, align 1
  %63 = getelementptr inbounds i8, i8* %60, i64 16
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1
  %66 = icmp eq <16 x i8> %62, zeroinitializer
  %67 = icmp eq <16 x i8> %65, zeroinitializer
  %68 = select <16 x i1> %66, <16 x i8> <i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32>, <16 x i8> %62
  %69 = select <16 x i1> %67, <16 x i8> <i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32>, <16 x i8> %65
  %70 = getelementptr inbounds i8, i8* %28, i64 %59
  %71 = bitcast i8* %70 to <16 x i8>*
  store <16 x i8> %68, <16 x i8>* %71, align 1
  %72 = getelementptr inbounds i8, i8* %70, i64 16
  %73 = bitcast i8* %72 to <16 x i8>*
  store <16 x i8> %69, <16 x i8>* %73, align 1
  %74 = add i64 %43, 64
  %75 = add i64 %44, -2
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %42, !llvm.loop !36

77:                                               ; preds = %42, %33
  %78 = phi i64 [ 0, %33 ], [ %74, %42 ]
  %79 = icmp eq i64 %38, 0
  br i1 %79, label %95, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds i8, i8* %3, i64 %78
  %82 = bitcast i8* %81 to <16 x i8>*
  %83 = load <16 x i8>, <16 x i8>* %82, align 1
  %84 = getelementptr inbounds i8, i8* %81, i64 16
  %85 = bitcast i8* %84 to <16 x i8>*
  %86 = load <16 x i8>, <16 x i8>* %85, align 1
  %87 = icmp eq <16 x i8> %83, zeroinitializer
  %88 = icmp eq <16 x i8> %86, zeroinitializer
  %89 = select <16 x i1> %87, <16 x i8> <i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32>, <16 x i8> %83
  %90 = select <16 x i1> %88, <16 x i8> <i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32>, <16 x i8> %86
  %91 = getelementptr inbounds i8, i8* %28, i64 %78
  %92 = bitcast i8* %91 to <16 x i8>*
  store <16 x i8> %89, <16 x i8>* %92, align 1
  %93 = getelementptr inbounds i8, i8* %91, i64 16
  %94 = bitcast i8* %93 to <16 x i8>*
  store <16 x i8> %90, <16 x i8>* %94, align 1
  br label %95

95:                                               ; preds = %77, %80
  %96 = icmp eq i64 %34, %31
  br i1 %96, label %108, label %97

97:                                               ; preds = %95, %30
  %98 = phi i64 [ 0, %30 ], [ %34, %95 ]
  br label %99

99:                                               ; preds = %97, %99
  %100 = phi i64 [ %106, %99 ], [ %98, %97 ]
  %101 = getelementptr inbounds i8, i8* %3, i64 %100
  %102 = load i8, i8* %101, align 1
  %103 = icmp eq i8 %102, 0
  %104 = select i1 %103, i8 32, i8 %102
  %105 = getelementptr inbounds i8, i8* %28, i64 %100
  store i8 %104, i8* %105, align 1
  %106 = add nuw nsw i64 %100, 1
  %107 = icmp eq i64 %106, %31
  br i1 %107, label %108, label %99, !llvm.loop !37

108:                                              ; preds = %99, %95, %27
  %109 = sext i32 %4 to i64
  %110 = getelementptr inbounds i8, i8* %28, i64 %109
  store i8 0, i8* %110, align 1
  store i8* %28, i8** %10, align 8
  br label %111

111:                                              ; preds = %5, %108
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14CodeAddressMap17LogRecordedBufferEPKNS0_4wasm8WasmCodeEPKci(%"class.v8::internal::CodeAddressMap"*, %"class.v8::internal::wasm::WasmCode"*, i8*, i32) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.59, i64 0, i64 0)) #18
  unreachable
}

declare void @_ZN2v88internal6Logger23RemoveCodeEventListenerEPNS0_17CodeEventListenerE(%"class.v8::internal::Logger"*, %"class.v8::internal::CodeEventListener"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88internal15CodeEventLoggerD2Ev(%"class.v8::internal::CodeEventLogger"*) unnamed_addr #12

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.v8::base::TemplateHashMapEntry.1181"* @_ZN2v88internal14CodeAddressMap7NameMap17FindOrCreateEntryEm(%"class.v8::internal::CodeAddressMap::NameMap"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::CodeAddressMap::NameMap", %"class.v8::internal::CodeAddressMap::NameMap"* %0, i64 0, i32 0, i32 0
  %4 = inttoptr i64 %1 to i8*
  %5 = trunc i64 %1 to i32
  %6 = xor i32 %5, -1
  %7 = shl i32 %5, 15
  %8 = add i32 %7, %6
  %9 = lshr i32 %8, 12
  %10 = xor i32 %9, %8
  %11 = mul i32 %10, 5
  %12 = lshr i32 %11, 4
  %13 = xor i32 %12, %11
  %14 = mul i32 %13, 2057
  %15 = lshr i32 %14, 16
  %16 = and i32 %14, 1073741823
  %17 = xor i32 %16, %15
  %18 = getelementptr inbounds %"class.v8::internal::CodeAddressMap::NameMap", %"class.v8::internal::CodeAddressMap::NameMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = add i32 %19, -1
  %21 = and i32 %20, %17
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"class.v8::internal::CodeAddressMap::NameMap", %"class.v8::internal::CodeAddressMap::NameMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.v8::base::TemplateHashMapEntry.1181"*, %"struct.v8::base::TemplateHashMapEntry.1181"** %23, align 8
  %25 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %24, i64 %22
  %26 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %25, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = icmp eq i8* %27, null
  %29 = icmp eq i8* %27, %4
  %30 = or i1 %28, %29
  br i1 %30, label %43, label %31

31:                                               ; preds = %2
  %32 = zext i32 %20 to i64
  br label %33

33:                                               ; preds = %33, %31
  %34 = phi i64 [ %22, %31 ], [ %36, %33 ]
  %35 = add nuw nsw i64 %34, 1
  %36 = and i64 %35, %32
  %37 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %24, i64 %36
  %38 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %37, i64 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = icmp eq i8* %39, null
  %41 = icmp eq i8* %39, %4
  %42 = or i1 %40, %41
  br i1 %42, label %43, label %33

43:                                               ; preds = %33, %2
  %44 = phi i8* [ %27, %2 ], [ %39, %33 ]
  %45 = phi %"struct.v8::base::TemplateHashMapEntry.1181"* [ %25, %2 ], [ %37, %33 ]
  %46 = icmp eq i8* %44, null
  br i1 %46, label %47, label %83

47:                                               ; preds = %43
  %48 = bitcast %"struct.v8::base::TemplateHashMapEntry.1181"* %45 to i64*
  store i64 %1, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %45, i64 0, i32 1
  %50 = bitcast i8** %49 to i64*
  store i64 0, i64* %50, align 8
  %51 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %45, i64 0, i32 2
  store i32 %17, i32* %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::CodeAddressMap::NameMap", %"class.v8::internal::CodeAddressMap::NameMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = add i32 %53, 1
  store i32 %54, i32* %52, align 4
  %55 = lshr i32 %54, 2
  %56 = add i32 %55, %54
  %57 = load i32, i32* %18, align 8
  %58 = icmp ult i32 %56, %57
  br i1 %58, label %83, label %59

59:                                               ; preds = %47
  tail call void @_ZN2v84base19TemplateHashMapImplIPvS2_NS0_18KeyEqualityMatcherIS2_EENS0_23DefaultAllocationPolicyEE6ResizeEv(%"class.v8::base::TemplateHashMapImpl.1179"* %3) #15
  %60 = load i32, i32* %18, align 8
  %61 = add i32 %60, -1
  %62 = and i32 %61, %17
  %63 = zext i32 %62 to i64
  %64 = load %"struct.v8::base::TemplateHashMapEntry.1181"*, %"struct.v8::base::TemplateHashMapEntry.1181"** %23, align 8
  %65 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %64, i64 %63
  %66 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %65, i64 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = icmp eq i8* %67, null
  %69 = icmp eq i8* %67, %4
  %70 = or i1 %68, %69
  br i1 %70, label %83, label %71

71:                                               ; preds = %59
  %72 = zext i32 %61 to i64
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi i64 [ %63, %71 ], [ %76, %73 ]
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, %72
  %77 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %64, i64 %76
  %78 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %77, i64 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = icmp eq i8* %79, null
  %81 = icmp eq i8* %79, %4
  %82 = or i1 %80, %81
  br i1 %82, label %83, label %73

83:                                               ; preds = %73, %43, %47, %59
  %84 = phi %"struct.v8::base::TemplateHashMapEntry.1181"* [ %45, %43 ], [ %45, %47 ], [ %65, %59 ], [ %77, %73 ]
  ret %"struct.v8::base::TemplateHashMapEntry.1181"* %84
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v84base19TemplateHashMapImplIPvS2_NS0_18KeyEqualityMatcherIS2_EENS0_23DefaultAllocationPolicyEE6ResizeEv(%"class.v8::base::TemplateHashMapImpl.1179"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl.1179", %"class.v8::base::TemplateHashMapImpl.1179"* %0, i64 0, i32 0, i32 0
  %3 = load %"struct.v8::base::TemplateHashMapEntry.1181"*, %"struct.v8::base::TemplateHashMapEntry.1181"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl.1179", %"class.v8::base::TemplateHashMapImpl.1179"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl.1179", %"class.v8::base::TemplateHashMapImpl.1179"* %0, i64 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = shl i32 %5, 1
  %9 = zext i32 %8 to i64
  %10 = mul nuw nsw i64 %9, 24
  %11 = tail call noalias i8* @malloc(i64 %10) #15
  %12 = bitcast %"class.v8::base::TemplateHashMapImpl.1179"* %0 to i8**
  store i8* %11, i8** %12, align 8
  %13 = icmp eq i8* %11, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.70, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %1
  store i32 %8, i32* %4, align 8
  %16 = icmp eq i32 %8, 0
  br i1 %16, label %31, label %17

17:                                               ; preds = %15
  %18 = bitcast i8* %11 to i8**
  store i8* null, i8** %18, align 8
  %19 = getelementptr inbounds i8, i8* %11, i64 24
  %20 = bitcast i8* %19 to i8**
  store i8* null, i8** %20, align 8
  %21 = load i32, i32* %4, align 8
  %22 = icmp ugt i32 %21, 2
  br i1 %22, label %23, label %31

23:                                               ; preds = %17, %23
  %24 = phi i64 [ %27, %23 ], [ 2, %17 ]
  %25 = load %"struct.v8::base::TemplateHashMapEntry.1181"*, %"struct.v8::base::TemplateHashMapEntry.1181"** %2, align 8
  %26 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %25, i64 %24, i32 0
  store i8* null, i8** %26, align 8
  %27 = add nuw nsw i64 %24, 1
  %28 = load i32, i32* %4, align 8
  %29 = zext i32 %28 to i64
  %30 = icmp ult i64 %27, %29
  br i1 %30, label %23, label %31

31:                                               ; preds = %23, %17, %15
  %32 = phi i32 [ 0, %15 ], [ %21, %17 ], [ %28, %23 ]
  store i32 0, i32* %6, align 4
  %33 = icmp eq i32 %7, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %109, %31
  %35 = bitcast %"struct.v8::base::TemplateHashMapEntry.1181"* %3 to i8*
  tail call void @free(i8* %35) #15
  ret void

36:                                               ; preds = %31, %109
  %37 = phi i32 [ %110, %109 ], [ %32, %31 ]
  %38 = phi i32 [ %111, %109 ], [ %7, %31 ]
  %39 = phi %"struct.v8::base::TemplateHashMapEntry.1181"* [ %112, %109 ], [ %3, %31 ]
  %40 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %39, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %109, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %39, i64 0, i32 2
  %45 = load i32, i32* %44, align 8
  %46 = add i32 %37, -1
  %47 = and i32 %46, %45
  %48 = zext i32 %47 to i64
  %49 = load %"struct.v8::base::TemplateHashMapEntry.1181"*, %"struct.v8::base::TemplateHashMapEntry.1181"** %2, align 8
  %50 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %49, i64 %48
  %51 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %50, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, null
  %54 = icmp eq i8* %41, %52
  %55 = or i1 %53, %54
  br i1 %55, label %68, label %56

56:                                               ; preds = %43
  %57 = zext i32 %46 to i64
  br label %58

58:                                               ; preds = %58, %56
  %59 = phi i64 [ %48, %56 ], [ %61, %58 ]
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, %57
  %62 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %49, i64 %61
  %63 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %62, i64 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = icmp eq i8* %64, null
  %66 = icmp eq i8* %41, %64
  %67 = or i1 %65, %66
  br i1 %67, label %68, label %58

68:                                               ; preds = %58, %43
  %69 = phi %"struct.v8::base::TemplateHashMapEntry.1181"* [ %50, %43 ], [ %62, %58 ]
  %70 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %39, i64 0, i32 1
  %71 = bitcast i8** %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %69, i64 0, i32 0
  store i8* %41, i8** %73, align 8
  %74 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %69, i64 0, i32 1
  %75 = bitcast i8** %74 to i64*
  store i64 %72, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %69, i64 0, i32 2
  store i32 %45, i32* %76, align 8
  %77 = load i32, i32* %6, align 4
  %78 = add i32 %77, 1
  store i32 %78, i32* %6, align 4
  %79 = lshr i32 %78, 2
  %80 = add i32 %79, %78
  %81 = load i32, i32* %4, align 8
  %82 = icmp ult i32 %80, %81
  br i1 %82, label %106, label %83

83:                                               ; preds = %68
  tail call void @_ZN2v84base19TemplateHashMapImplIPvS2_NS0_18KeyEqualityMatcherIS2_EENS0_23DefaultAllocationPolicyEE6ResizeEv(%"class.v8::base::TemplateHashMapImpl.1179"* %0) #15
  %84 = load i32, i32* %4, align 8
  %85 = add i32 %84, -1
  %86 = and i32 %85, %45
  %87 = zext i32 %86 to i64
  %88 = load %"struct.v8::base::TemplateHashMapEntry.1181"*, %"struct.v8::base::TemplateHashMapEntry.1181"** %2, align 8
  %89 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %88, i64 %87, i32 0
  %90 = load i8*, i8** %89, align 8
  %91 = icmp eq i8* %90, null
  %92 = load i8*, i8** %40, align 8
  %93 = icmp eq i8* %92, %90
  %94 = or i1 %91, %93
  br i1 %94, label %106, label %95

95:                                               ; preds = %83
  %96 = zext i32 %85 to i64
  br label %97

97:                                               ; preds = %97, %95
  %98 = phi i64 [ %87, %95 ], [ %100, %97 ]
  %99 = add nuw nsw i64 %98, 1
  %100 = and i64 %99, %96
  %101 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %88, i64 %100, i32 0
  %102 = load i8*, i8** %101, align 8
  %103 = icmp eq i8* %102, null
  %104 = icmp eq i8* %92, %102
  %105 = or i1 %103, %104
  br i1 %105, label %106, label %97

106:                                              ; preds = %97, %83, %68
  %107 = phi i32 [ %84, %83 ], [ %81, %68 ], [ %84, %97 ]
  %108 = add i32 %38, -1
  br label %109

109:                                              ; preds = %36, %106
  %110 = phi i32 [ %107, %106 ], [ %37, %36 ]
  %111 = phi i32 [ %108, %106 ], [ %38, %36 ]
  %112 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry.1181", %"struct.v8::base::TemplateHashMapEntry.1181"* %39, i64 1
  %113 = icmp eq i32 %111, 0
  br i1 %113, label %34, label %36
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnamRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #17

declare %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"*, i8*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal10Serializer16ObjectSerializer28RelocInfoObjectPreSerializer15VisitCodeTargetENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::Serializer::ObjectSerializer::RelocInfoObjectPreSerializer"*, i64, %"class.v8::internal::RelocInfo"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %2, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 1
  %8 = sext i32 %7 to i64
  %9 = add i64 %5, 4
  %10 = add i64 %9, %8
  %11 = tail call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobCodeEv() #15
  %12 = ptrtoint i8* %11 to i64
  %13 = tail call i32 @_ZN2v88internal7Isolate27CurrentEmbeddedBlobCodeSizeEv() #15
  %14 = icmp uge i64 %10, %12
  %15 = zext i32 %13 to i64
  %16 = add i64 %15, %12
  %17 = icmp ugt i64 %16, %10
  %18 = and i1 %14, %17
  br i1 %18, label %19, label %20, !prof !30

19:                                               ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.73, i64 0, i64 0)) #18
  unreachable

20:                                               ; preds = %3
  %21 = add i64 %10, -63
  %22 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer::RelocInfoObjectPreSerializer", %"class.v8::internal::Serializer::ObjectSerializer::RelocInfoObjectPreSerializer"* %0, i64 0, i32 0
  %23 = load %"class.v8::internal::Serializer"*, %"class.v8::internal::Serializer"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Serializer", %"class.v8::internal::Serializer"* %23, i64 0, i32 2
  %25 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %25, i64 0, i32 31, i32 4
  %27 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %26, align 8
  %28 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %20
  %30 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %27, i64 %21) #15
  br label %44

31:                                               ; preds = %20
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %25, i64 0, i32 31, i32 0
  %33 = load i64*, i64** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %25, i64 0, i32 31, i32 1
  %35 = load i64*, i64** %34, align 8
  %36 = icmp eq i64* %33, %35
  br i1 %36, label %37, label %39

37:                                               ; preds = %31
  %38 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %25) #15
  br label %39

39:                                               ; preds = %37, %31
  %40 = phi i64* [ %38, %37 ], [ %33, %31 ]
  %41 = ptrtoint i64* %40 to i64
  %42 = add i64 %41, 8
  %43 = inttoptr i64 %42 to i64*
  store i64* %43, i64** %32, align 8
  store i64 %21, i64* %40, align 8
  br label %44

44:                                               ; preds = %29, %39
  %45 = phi i64* [ %30, %29 ], [ %40, %39 ]
  tail call void @_ZN2v88internal10Serializer15SerializeObjectENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::Serializer"* %23, i64* %45)
  %46 = getelementptr inbounds %"class.v8::internal::Serializer::ObjectSerializer::RelocInfoObjectPreSerializer", %"class.v8::internal::Serializer::ObjectSerializer::RelocInfoObjectPreSerializer"* %0, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %46, align 8
  ret void
}

declare i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobCodeEv() local_unnamed_addr #1

declare i32 @_ZN2v88internal7Isolate27CurrentEmbeddedBlobCodeSizeEv() local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #16

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind }
attributes #16 = { nounwind readnone speculatable }
attributes #17 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn nounwind }
attributes #19 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6}
!6 = distinct !{!6, !"LVerDomain"}
!7 = !{!8}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.isvectorized", i32 1}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.unroll.disable"}
!13 = distinct !{!13, !10}
!14 = !{!15}
!15 = distinct !{!15, !16}
!16 = distinct !{!16, !"LVerDomain"}
!17 = !{!18}
!18 = distinct !{!18, !16}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !12}
!21 = distinct !{!21, !10}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !10}
!28 = distinct !{!28, !12}
!29 = distinct !{!29, !10}
!30 = !{!"branch_weights", i32 1, i32 2000}
!31 = !{i64 0, i64 65}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN2v88internal19SerializerReferenceEEENS_22__unordered_map_hasherIS2_S6_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRS2_JRS5_EEENS_10unique_ptrINS_11__hash_nodeIS6_S2_EENS_22__hash_node_destructorINSF_ISN_EEEEEEmOT_DpOT0_: argument 0"}
!34 = distinct !{!34, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPvN2v88internal19SerializerReferenceEEENS_22__unordered_map_hasherIS2_S6_NS_4hashIS2_EENS_8equal_toIS2_EELb1EEENS_21__unordered_map_equalIS2_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRS2_JRS5_EEENS_10unique_ptrINS_11__hash_nodeIS6_S2_EENS_22__hash_node_destructorINSF_ISN_EEEEEEmOT_DpOT0_"}
!35 = distinct !{!35, !12}
!36 = distinct !{!36, !10}
!37 = distinct !{!37, !38, !10}
!38 = !{!"llvm.loop.unroll.runtime.disable"}
