; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/arg_min_max.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/arg_min_max.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteRegistration = type { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, i32 (%struct.TfLiteContext*, %struct.TfLiteRegistration*, %struct.TfLiteIntArray*, %struct.TfLiteDelegate*)*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%struct.TfLiteArgMaxParams = type { i32 }
%"class.tflite::RuntimeShape" = type { i32, %union.anon }
%union.anon = type { i32*, [16 x i8] }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { i1 (%"union.std::__1::__function::__policy_storage"*, float, float)* }
%"class.std::__1::function.1" = type { %"class.std::__1::__function::__policy_func.5" }
%"class.std::__1::__function::__policy_func.5" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.6", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.6" = type { i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)* }
%"class.std::__1::function.7" = type { %"class.std::__1::__function::__policy_func.11" }
%"class.std::__1::__function::__policy_func.11" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.12", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.12" = type { i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)* }
%"class.std::__1::function.13" = type { %"class.std::__1::__function::__policy_func.17" }
%"class.std::__1::__function::__policy_func.17" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.18", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.18" = type { i1 (%"union.std::__1::__function::__policy_storage"*, i32, i32)* }

$_ZN6tflite13reference_ops9ArgMinMaxIfiiNSt3__18functionIFbffEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_ = comdat any

$_ZN6tflite13reference_ops9ArgMinMaxIhiiNSt3__18functionIFbhhEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_ = comdat any

$_ZN6tflite13reference_ops9ArgMinMaxIaiiNSt3__18functionIFbaaEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_ = comdat any

$_ZN6tflite13reference_ops9ArgMinMaxIiiiNSt3__18functionIFbiiEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_ = comdat any

$_ZN6tflite13reference_ops9ArgMinMaxIfliNSt3__18functionIFbffEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_ = comdat any

$_ZN6tflite13reference_ops9ArgMinMaxIhliNSt3__18functionIFbhhEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_ = comdat any

$_ZN6tflite13reference_ops9ArgMinMaxIaliNSt3__18functionIFbaaEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_ = comdat any

$_ZN6tflite13reference_ops9ArgMinMaxIiliNSt3__18functionIFbiiEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_ = comdat any

$_ZN6tflite13reference_ops9ArgMinMaxIfilNSt3__18functionIFbffEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_ = comdat any

$_ZN6tflite13reference_ops9ArgMinMaxIhilNSt3__18functionIFbhhEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_ = comdat any

$_ZN6tflite13reference_ops9ArgMinMaxIailNSt3__18functionIFbaaEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_ = comdat any

$_ZN6tflite13reference_ops9ArgMinMaxIiilNSt3__18functionIFbiiEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_ = comdat any

$_ZN6tflite13reference_ops9ArgMinMaxIfllNSt3__18functionIFbffEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_ = comdat any

$_ZN6tflite13reference_ops9ArgMinMaxIhllNSt3__18functionIFbhhEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_ = comdat any

$_ZN6tflite13reference_ops9ArgMinMaxIallNSt3__18functionIFbaaEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_ = comdat any

$_ZN6tflite13reference_ops9ArgMinMaxIillNSt3__18functionIFbiiEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFbffEE11__call_implINS0_20__default_alloc_funcINS_7greaterIfEES2_EEEEbPKNS0_16__policy_storageEff = comdat any

$_ZNSt3__110__function16__policy_invokerIFbffEE11__call_implINS0_20__default_alloc_funcINS_4lessIfEES2_EEEEbPKNS0_16__policy_storageEff = comdat any

$_ZNSt3__110__function16__policy_invokerIFbhhEE11__call_implINS0_20__default_alloc_funcINS_7greaterIhEES2_EEEEbPKNS0_16__policy_storageEhh = comdat any

$_ZNSt3__110__function16__policy_invokerIFbhhEE11__call_implINS0_20__default_alloc_funcINS_4lessIhEES2_EEEEbPKNS0_16__policy_storageEhh = comdat any

$_ZNSt3__110__function16__policy_invokerIFbaaEE11__call_implINS0_20__default_alloc_funcINS_7greaterIaEES2_EEEEbPKNS0_16__policy_storageEaa = comdat any

$_ZNSt3__110__function16__policy_invokerIFbaaEE11__call_implINS0_20__default_alloc_funcINS_4lessIaEES2_EEEEbPKNS0_16__policy_storageEaa = comdat any

$_ZNSt3__110__function16__policy_invokerIFbiiEE11__call_implINS0_20__default_alloc_funcINS_7greaterIiEES2_EEEEbPKNS0_16__policy_storageEii = comdat any

$_ZNSt3__110__function16__policy_invokerIFbiiEE11__call_implINS0_20__default_alloc_funcINS_4lessIiEES2_EEEEbPKNS0_16__policy_storageEii = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_7greaterIfEEFbffEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_4lessIfEEFbffEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_7greaterIhEEFbhhEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_4lessIhEEFbhhEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_7greaterIaEEFbaaEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_4lessIaEEFbaaEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_7greaterIiEEFbiiEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_4lessIiEEFbiiEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

@.str = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.3 = private unnamed_addr constant [68 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/arg_min_max.cc\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"NumInputs(node)\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"NumElements(axis)\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"%s:%d %s was not true.\00", align 1
@.str.10 = private unnamed_addr constant [57 x i8] c"axis->type == kTfLiteInt32 || axis->type == kTfLiteInt64\00", align 1
@.str.11 = private unnamed_addr constant [35 x i8] c"Unknown index output data type: %d\00", align 1
@.str.12 = private unnamed_addr constant [65 x i8] c"Unknown input type: %d, only float32 and int types are supported\00", align 1
@.str.13 = private unnamed_addr constant [26 x i8] c"NumDimensions(input) >= 1\00", align 1
@.str.14 = private unnamed_addr constant [69 x i8] c"Only float32, uint8, int8 and int32 are supported currently, got %s.\00", align 1
@.str.15 = private unnamed_addr constant [54 x i8] c"Only int32 and int64 are supported currently, got %s.\00", align 1
@_ZZN6tflite3ops7builtin16Register_ARG_MAXEvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin11arg_min_max7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin11arg_min_max10ArgMaxEvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin16Register_ARG_MINEvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin11arg_min_max7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin11arg_min_max10ArgMinEvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_7greaterIfEEFbffEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_4lessIfEEFbffEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_7greaterIhEEFbhhEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_4lessIhEEFbhhEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_7greaterIaEEFbaaEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_4lessIaEEFbaaEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_7greaterIiEEFbiiEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_4lessIiEEFbiiEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin11arg_min_max12ResizeOutputEP13TfLiteContextPK12TfLiteTensorS7_PS5_(%struct.TfLiteContext*, %struct.TfLiteTensor* nocapture readonly, %struct.TfLiteTensor* readonly, %struct.TfLiteTensor*) local_unnamed_addr #0 {
  %5 = icmp eq %struct.TfLiteTensor* %2, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 1, i32 0
  %8 = load i32*, i32** %7, align 8
  br label %9

9:                                                ; preds = %4, %6
  %10 = phi i32* [ %8, %6 ], [ null, %4 ]
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 2
  %13 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %12, align 8
  %14 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 2
  %17 = add nsw i32 %15, -1
  %18 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %17) #6
  %19 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %16, align 8
  %20 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %19, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %28

23:                                               ; preds = %9
  %24 = icmp slt i32 %11, 0
  %25 = select i1 %24, i32 %15, i32 0
  %26 = add nsw i32 %11, %25
  %27 = zext i32 %26 to i64
  br label %32

28:                                               ; preds = %44, %9
  %29 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %30 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %29, align 8
  %31 = tail call i32 %30(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %3, %struct.TfLiteIntArray* %18) #6
  ret i32 %31

32:                                               ; preds = %23, %44
  %33 = phi %struct.TfLiteIntArray* [ %19, %23 ], [ %45, %44 ]
  %34 = phi i64 [ 0, %23 ], [ %47, %44 ]
  %35 = phi i32 [ 0, %23 ], [ %46, %44 ]
  %36 = icmp eq i64 %34, %27
  br i1 %36, label %44, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %33, i64 0, i32 1, i64 %34
  %39 = load i32, i32* %38, align 4
  %40 = sext i32 %35 to i64
  %41 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %18, i64 0, i32 1, i64 %40
  store i32 %39, i32* %41, align 4
  %42 = add nsw i32 %35, 1
  %43 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %16, align 8
  br label %44

44:                                               ; preds = %32, %37
  %45 = phi %struct.TfLiteIntArray* [ %43, %37 ], [ %33, %32 ]
  %46 = phi i32 [ %42, %37 ], [ %35, %32 ]
  %47 = add nuw nsw i64 %34, 1
  %48 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %45, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = sext i32 %49 to i64
  %51 = icmp slt i64 %47, %50
  br i1 %51, label %32, label %28
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin11arg_min_max7PrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #0 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %10 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %9, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %10(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.3, i64 0, i64 0), i32 58, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i32 %6, i32 2) #6
  br label %287

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %13 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %12, align 8
  %14 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %20, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %19 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %18, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %19(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.3, i64 0, i64 0), i32 59, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i32 %15, i32 1) #6
  br label %287

20:                                               ; preds = %11
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %26 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %25, align 8
  %27 = sext i32 %22 to i64
  %28 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 %27
  br label %29

29:                                               ; preds = %20, %24
  %30 = phi %struct.TfLiteTensor* [ %28, %24 ], [ null, %20 ]
  %31 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 1
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %32, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %36 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %35, align 8
  %37 = sext i32 %32 to i64
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 %37
  br label %39

39:                                               ; preds = %29, %34
  %40 = phi %struct.TfLiteTensor* [ %38, %34 ], [ null, %29 ]
  %41 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 2
  %42 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %41, align 8
  %43 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp sgt i32 %44, 0
  br i1 %45, label %46, label %190

46:                                               ; preds = %39
  %47 = sext i32 %44 to i64
  %48 = add nsw i64 %47, -1
  %49 = and i64 %47, 7
  %50 = icmp ult i64 %48, 7
  br i1 %50, label %99, label %51

51:                                               ; preds = %46
  %52 = sub nsw i64 %47, %49
  br label %53

53:                                               ; preds = %53, %51
  %54 = phi i64 [ 0, %51 ], [ %96, %53 ]
  %55 = phi i64 [ 1, %51 ], [ %95, %53 ]
  %56 = phi i64 [ %52, %51 ], [ %97, %53 ]
  %57 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 %54
  %58 = load i32, i32* %57, align 4
  %59 = sext i32 %58 to i64
  %60 = mul nsw i64 %55, %59
  %61 = or i64 %54, 1
  %62 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = sext i32 %63 to i64
  %65 = mul nsw i64 %60, %64
  %66 = or i64 %54, 2
  %67 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = sext i32 %68 to i64
  %70 = mul nsw i64 %65, %69
  %71 = or i64 %54, 3
  %72 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 %71
  %73 = load i32, i32* %72, align 4
  %74 = sext i32 %73 to i64
  %75 = mul nsw i64 %70, %74
  %76 = or i64 %54, 4
  %77 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 %76
  %78 = load i32, i32* %77, align 4
  %79 = sext i32 %78 to i64
  %80 = mul nsw i64 %75, %79
  %81 = or i64 %54, 5
  %82 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = sext i32 %83 to i64
  %85 = mul nsw i64 %80, %84
  %86 = or i64 %54, 6
  %87 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 %86
  %88 = load i32, i32* %87, align 4
  %89 = sext i32 %88 to i64
  %90 = mul nsw i64 %85, %89
  %91 = or i64 %54, 7
  %92 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 %91
  %93 = load i32, i32* %92, align 4
  %94 = sext i32 %93 to i64
  %95 = mul nsw i64 %90, %94
  %96 = add nuw nsw i64 %54, 8
  %97 = add i64 %56, -8
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %53

99:                                               ; preds = %53, %46
  %100 = phi i64 [ undef, %46 ], [ %95, %53 ]
  %101 = phi i64 [ 0, %46 ], [ %96, %53 ]
  %102 = phi i64 [ 1, %46 ], [ %95, %53 ]
  %103 = icmp eq i64 %49, 0
  br i1 %103, label %115, label %104

104:                                              ; preds = %99, %104
  %105 = phi i64 [ %112, %104 ], [ %101, %99 ]
  %106 = phi i64 [ %111, %104 ], [ %102, %99 ]
  %107 = phi i64 [ %113, %104 ], [ %49, %99 ]
  %108 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 %105
  %109 = load i32, i32* %108, align 4
  %110 = sext i32 %109 to i64
  %111 = mul nsw i64 %106, %110
  %112 = add nuw nsw i64 %105, 1
  %113 = add i64 %107, -1
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %104, !llvm.loop !2

115:                                              ; preds = %104, %99
  %116 = phi i64 [ %100, %99 ], [ %111, %104 ]
  %117 = icmp eq i64 %116, 1
  br i1 %117, label %190, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %120 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %119, align 8
  %121 = add nsw i64 %47, -1
  %122 = and i64 %47, 7
  %123 = icmp ult i64 %121, 7
  br i1 %123, label %172, label %124

124:                                              ; preds = %118
  %125 = sub nsw i64 %47, %122
  br label %126

126:                                              ; preds = %126, %124
  %127 = phi i64 [ 0, %124 ], [ %169, %126 ]
  %128 = phi i64 [ 1, %124 ], [ %168, %126 ]
  %129 = phi i64 [ %125, %124 ], [ %170, %126 ]
  %130 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 %127
  %131 = load i32, i32* %130, align 4
  %132 = sext i32 %131 to i64
  %133 = mul nsw i64 %128, %132
  %134 = or i64 %127, 1
  %135 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = sext i32 %136 to i64
  %138 = mul nsw i64 %133, %137
  %139 = or i64 %127, 2
  %140 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 %139
  %141 = load i32, i32* %140, align 4
  %142 = sext i32 %141 to i64
  %143 = mul nsw i64 %138, %142
  %144 = or i64 %127, 3
  %145 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 %144
  %146 = load i32, i32* %145, align 4
  %147 = sext i32 %146 to i64
  %148 = mul nsw i64 %143, %147
  %149 = or i64 %127, 4
  %150 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 %149
  %151 = load i32, i32* %150, align 4
  %152 = sext i32 %151 to i64
  %153 = mul nsw i64 %148, %152
  %154 = or i64 %127, 5
  %155 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 %154
  %156 = load i32, i32* %155, align 4
  %157 = sext i32 %156 to i64
  %158 = mul nsw i64 %153, %157
  %159 = or i64 %127, 6
  %160 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 %159
  %161 = load i32, i32* %160, align 4
  %162 = sext i32 %161 to i64
  %163 = mul nsw i64 %158, %162
  %164 = or i64 %127, 7
  %165 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 %164
  %166 = load i32, i32* %165, align 4
  %167 = sext i32 %166 to i64
  %168 = mul nsw i64 %163, %167
  %169 = add nuw nsw i64 %127, 8
  %170 = add i64 %129, -8
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %172, label %126

172:                                              ; preds = %126, %118
  %173 = phi i64 [ undef, %118 ], [ %168, %126 ]
  %174 = phi i64 [ 0, %118 ], [ %169, %126 ]
  %175 = phi i64 [ 1, %118 ], [ %168, %126 ]
  %176 = icmp eq i64 %122, 0
  br i1 %176, label %188, label %177

177:                                              ; preds = %172, %177
  %178 = phi i64 [ %185, %177 ], [ %174, %172 ]
  %179 = phi i64 [ %184, %177 ], [ %175, %172 ]
  %180 = phi i64 [ %186, %177 ], [ %122, %172 ]
  %181 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 %178
  %182 = load i32, i32* %181, align 4
  %183 = sext i32 %182 to i64
  %184 = mul nsw i64 %179, %183
  %185 = add nuw nsw i64 %178, 1
  %186 = add i64 %180, -1
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %188, label %177, !llvm.loop !4

188:                                              ; preds = %177, %172
  %189 = phi i64 [ %173, %172 ], [ %184, %177 ]
  tail call void (%struct.TfLiteContext*, i8*, ...) %120(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.3, i64 0, i64 0), i32 64, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 %189, i32 1) #6
  br label %287

190:                                              ; preds = %39, %115
  %191 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 0
  %192 = load i32, i32* %191, align 8
  switch i32 %192, label %193 [
    i32 2, label %196
    i32 4, label %196
  ]

193:                                              ; preds = %190
  %194 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %195 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %194, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %195(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.3, i64 0, i64 0), i32 67, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.10, i64 0, i64 0)) #6
  br label %287

196:                                              ; preds = %190, %190
  %197 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 1, i64 0
  %198 = load i32, i32* %197, align 4
  %199 = icmp slt i32 %198, 0
  br i1 %199, label %205, label %200

200:                                              ; preds = %196
  %201 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %202 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %201, align 8
  %203 = sext i32 %198 to i64
  %204 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %202, i64 %203
  br label %205

205:                                              ; preds = %196, %200
  %206 = phi %struct.TfLiteTensor* [ %204, %200 ], [ null, %196 ]
  %207 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %208 = bitcast i8** %207 to %struct.TfLiteArgMaxParams**
  %209 = load %struct.TfLiteArgMaxParams*, %struct.TfLiteArgMaxParams** %208, align 8
  %210 = getelementptr inbounds %struct.TfLiteArgMaxParams, %struct.TfLiteArgMaxParams* %209, i64 0, i32 0
  %211 = load i32, i32* %210, align 4
  switch i32 %211, label %212 [
    i32 2, label %215
    i32 4, label %215
  ]

212:                                              ; preds = %205
  %213 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %214 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %213, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %214(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.11, i64 0, i64 0), i32 %211) #6
  br label %287

215:                                              ; preds = %205, %205
  %216 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %206, i64 0, i32 0
  store i32 %211, i32* %216, align 8
  %217 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 0
  %218 = load i32, i32* %217, align 8
  switch i32 %218, label %219 [
    i32 1, label %222
    i32 3, label %222
    i32 9, label %222
    i32 2, label %222
  ]

219:                                              ; preds = %215
  %220 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %221 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %220, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %221(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.12, i64 0, i64 0), i32 %218) #6
  br label %287

222:                                              ; preds = %215, %215, %215, %215
  %223 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 2
  %224 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %223, align 8
  %225 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %224, i64 0, i32 0
  %226 = load i32, i32* %225, align 4
  %227 = icmp sgt i32 %226, 0
  br i1 %227, label %231, label %228

228:                                              ; preds = %222
  %229 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %230 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %229, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %230(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.3, i64 0, i64 0), i32 101, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.13, i64 0, i64 0)) #6
  br label %287

231:                                              ; preds = %222
  %232 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 4
  %233 = load i32, i32* %232, align 8
  %234 = icmp eq i32 %233, 1
  br i1 %234, label %235, label %279

235:                                              ; preds = %231
  %236 = icmp eq %struct.TfLiteTensor* %40, null
  br i1 %236, label %240, label %237

237:                                              ; preds = %235
  %238 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 1, i32 0
  %239 = load i32*, i32** %238, align 8
  br label %240

240:                                              ; preds = %237, %235
  %241 = phi i32* [ %239, %237 ], [ null, %235 ]
  %242 = load i32, i32* %241, align 4
  %243 = add nsw i32 %226, -1
  %244 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %243) #6
  %245 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %223, align 8
  %246 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %245, i64 0, i32 0
  %247 = load i32, i32* %246, align 4
  %248 = icmp sgt i32 %247, 0
  br i1 %248, label %249, label %274

249:                                              ; preds = %240
  %250 = icmp slt i32 %242, 0
  %251 = select i1 %250, i32 %226, i32 0
  %252 = add nsw i32 %251, %242
  %253 = zext i32 %252 to i64
  br label %254

254:                                              ; preds = %266, %249
  %255 = phi %struct.TfLiteIntArray* [ %245, %249 ], [ %267, %266 ]
  %256 = phi i64 [ 0, %249 ], [ %269, %266 ]
  %257 = phi i32 [ 0, %249 ], [ %268, %266 ]
  %258 = icmp eq i64 %256, %253
  br i1 %258, label %266, label %259

259:                                              ; preds = %254
  %260 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %255, i64 0, i32 1, i64 %256
  %261 = load i32, i32* %260, align 4
  %262 = sext i32 %257 to i64
  %263 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %244, i64 0, i32 1, i64 %262
  store i32 %261, i32* %263, align 4
  %264 = add nsw i32 %257, 1
  %265 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %223, align 8
  br label %266

266:                                              ; preds = %259, %254
  %267 = phi %struct.TfLiteIntArray* [ %265, %259 ], [ %255, %254 ]
  %268 = phi i32 [ %264, %259 ], [ %257, %254 ]
  %269 = add nuw nsw i64 %256, 1
  %270 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %267, i64 0, i32 0
  %271 = load i32, i32* %270, align 4
  %272 = sext i32 %271 to i64
  %273 = icmp slt i64 %269, %272
  br i1 %273, label %254, label %274

274:                                              ; preds = %266, %240
  %275 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %276 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %275, align 8
  %277 = tail call i32 %276(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %206, %struct.TfLiteIntArray* %244) #6
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %286, label %287

279:                                              ; preds = %231
  %280 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %206, i64 0, i32 4
  %281 = load i32, i32* %280, align 8
  %282 = icmp eq i32 %281, 4
  br i1 %282, label %286, label %283

283:                                              ; preds = %279
  store i32 4, i32* %280, align 8
  %284 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %206, i64 0, i32 1
  %285 = bitcast %union.TfLitePtrUnion* %284 to i8**
  store i8* null, i8** %285, align 8
  br label %286

286:                                              ; preds = %283, %279, %274
  br label %287

287:                                              ; preds = %188, %193, %274, %286, %228, %219, %212, %17, %8
  %288 = phi i32 [ 1, %8 ], [ 1, %17 ], [ 1, %188 ], [ 1, %193 ], [ 1, %212 ], [ 1, %219 ], [ 0, %286 ], [ %277, %274 ], [ 1, %228 ]
  ret i32 %288
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin11arg_min_max4EvalEP13TfLiteContextP10TfLiteNodeb(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly, i1 zeroext) local_unnamed_addr #0 {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.std::__1::function", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.std::__1::function.1", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.std::__1::function.7", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"class.std::__1::function.13", align 8
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = alloca %"class.tflite::RuntimeShape", align 8
  %18 = alloca %"class.std::__1::function", align 8
  %19 = alloca %"class.tflite::RuntimeShape", align 8
  %20 = alloca %"class.tflite::RuntimeShape", align 8
  %21 = alloca %"class.std::__1::function.1", align 8
  %22 = alloca %"class.tflite::RuntimeShape", align 8
  %23 = alloca %"class.tflite::RuntimeShape", align 8
  %24 = alloca %"class.std::__1::function.7", align 8
  %25 = alloca %"class.tflite::RuntimeShape", align 8
  %26 = alloca %"class.tflite::RuntimeShape", align 8
  %27 = alloca %"class.std::__1::function.13", align 8
  %28 = alloca %"class.tflite::RuntimeShape", align 8
  %29 = alloca %"class.tflite::RuntimeShape", align 8
  %30 = alloca %"class.std::__1::function", align 8
  %31 = alloca %"class.tflite::RuntimeShape", align 8
  %32 = alloca %"class.tflite::RuntimeShape", align 8
  %33 = alloca %"class.std::__1::function.1", align 8
  %34 = alloca %"class.tflite::RuntimeShape", align 8
  %35 = alloca %"class.tflite::RuntimeShape", align 8
  %36 = alloca %"class.std::__1::function.7", align 8
  %37 = alloca %"class.tflite::RuntimeShape", align 8
  %38 = alloca %"class.tflite::RuntimeShape", align 8
  %39 = alloca %"class.std::__1::function.13", align 8
  %40 = alloca %"class.tflite::RuntimeShape", align 8
  %41 = alloca %"class.tflite::RuntimeShape", align 8
  %42 = alloca %"class.std::__1::function", align 8
  %43 = alloca %"class.tflite::RuntimeShape", align 8
  %44 = alloca %"class.tflite::RuntimeShape", align 8
  %45 = alloca %"class.std::__1::function.1", align 8
  %46 = alloca %"class.tflite::RuntimeShape", align 8
  %47 = alloca %"class.tflite::RuntimeShape", align 8
  %48 = alloca %"class.std::__1::function.7", align 8
  %49 = alloca %"class.tflite::RuntimeShape", align 8
  %50 = alloca %"class.tflite::RuntimeShape", align 8
  %51 = alloca %"class.std::__1::function.13", align 8
  %52 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %53 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %52, align 8
  %54 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %53, i64 0, i32 1, i64 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp slt i32 %55, 0
  br i1 %56, label %62, label %57

57:                                               ; preds = %3
  %58 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %59 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %58, align 8
  %60 = sext i32 %55 to i64
  %61 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %59, i64 %60
  br label %62

62:                                               ; preds = %3, %57
  %63 = phi %struct.TfLiteTensor* [ %61, %57 ], [ null, %3 ]
  %64 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %53, i64 0, i32 1, i64 1
  %65 = load i32, i32* %64, align 4
  %66 = icmp slt i32 %65, 0
  br i1 %66, label %72, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %69 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %68, align 8
  %70 = sext i32 %65 to i64
  %71 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %69, i64 %70
  br label %72

72:                                               ; preds = %62, %67
  %73 = phi %struct.TfLiteTensor* [ %71, %67 ], [ null, %62 ]
  %74 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %75 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %74, align 8
  %76 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %75, i64 0, i32 1, i64 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp slt i32 %77, 0
  br i1 %78, label %84, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %81 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %80, align 8
  %82 = sext i32 %77 to i64
  %83 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %81, i64 %82
  br label %84

84:                                               ; preds = %72, %79
  %85 = phi %struct.TfLiteTensor* [ %83, %79 ], [ null, %72 ]
  %86 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 4
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 4
  br i1 %88, label %89, label %137

89:                                               ; preds = %84
  %90 = icmp eq %struct.TfLiteTensor* %73, null
  br i1 %90, label %94, label %91

91:                                               ; preds = %89
  %92 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %73, i64 0, i32 1, i32 0
  %93 = load i32*, i32** %92, align 8
  br label %94

94:                                               ; preds = %91, %89
  %95 = phi i32* [ %93, %91 ], [ null, %89 ]
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 2
  %98 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %97, align 8
  %99 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %98, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = add nsw i32 %100, -1
  %102 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %101) #6
  %103 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %97, align 8
  %104 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %103, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = icmp sgt i32 %105, 0
  br i1 %106, label %107, label %132

107:                                              ; preds = %94
  %108 = icmp slt i32 %96, 0
  %109 = select i1 %108, i32 %100, i32 0
  %110 = add nsw i32 %109, %96
  %111 = zext i32 %110 to i64
  br label %112

112:                                              ; preds = %124, %107
  %113 = phi %struct.TfLiteIntArray* [ %103, %107 ], [ %125, %124 ]
  %114 = phi i64 [ 0, %107 ], [ %127, %124 ]
  %115 = phi i32 [ 0, %107 ], [ %126, %124 ]
  %116 = icmp eq i64 %114, %111
  br i1 %116, label %124, label %117

117:                                              ; preds = %112
  %118 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %113, i64 0, i32 1, i64 %114
  %119 = load i32, i32* %118, align 4
  %120 = sext i32 %115 to i64
  %121 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %102, i64 0, i32 1, i64 %120
  store i32 %119, i32* %121, align 4
  %122 = add nsw i32 %115, 1
  %123 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %97, align 8
  br label %124

124:                                              ; preds = %117, %112
  %125 = phi %struct.TfLiteIntArray* [ %123, %117 ], [ %113, %112 ]
  %126 = phi i32 [ %122, %117 ], [ %115, %112 ]
  %127 = add nuw nsw i64 %114, 1
  %128 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %125, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = sext i32 %129 to i64
  %131 = icmp slt i64 %127, %130
  br i1 %131, label %112, label %132

132:                                              ; preds = %124, %94
  %133 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %134 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %133, align 8
  %135 = tail call i32 %134(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %85, %struct.TfLiteIntArray* %102) #6
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %1905

137:                                              ; preds = %132, %84
  %138 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %73, i64 0, i32 0
  %139 = load i32, i32* %138, align 8
  %140 = icmp eq i32 %139, 2
  %141 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 0
  %142 = load i32, i32* %141, align 8
  br i1 %140, label %143, label %1020

143:                                              ; preds = %137
  switch i32 %142, label %1016 [
    i32 2, label %144
    i32 4, label %578
  ]

144:                                              ; preds = %143
  %145 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 0
  %146 = load i32, i32* %145, align 8
  switch i32 %146, label %574 [
    i32 1, label %147
    i32 3, label %254
    i32 9, label %361
    i32 2, label %468
  ]

147:                                              ; preds = %144
  %148 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %148) #6
  %149 = icmp eq %struct.TfLiteTensor* %63, null
  br i1 %149, label %150, label %152

150:                                              ; preds = %147
  %151 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %151, align 8, !alias.scope !5
  br label %180

152:                                              ; preds = %147
  %153 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 2
  %154 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %153, align 8, !noalias !5
  %155 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %154, i64 0, i32 0
  %156 = load i32, i32* %155, align 4, !noalias !5
  %157 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %154, i64 0, i32 1, i64 0
  %158 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %156, i32* %158, align 8, !alias.scope !5
  %159 = icmp sgt i32 %156, 5
  br i1 %159, label %160, label %167

160:                                              ; preds = %152
  %161 = sext i32 %156 to i64
  %162 = shl nsw i64 %161, 2
  %163 = tail call i8* @_Znam(i64 %162) #7, !noalias !5
  %164 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %165 = bitcast i32** %164 to i8**
  store i8* %163, i8** %165, align 8, !alias.scope !5
  %166 = bitcast i8* %163 to i32*
  br label %172

167:                                              ; preds = %152
  %168 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %169 = bitcast %union.anon* %168 to i32*
  %170 = sext i32 %156 to i64
  %171 = shl nsw i64 %170, 2
  br label %172

172:                                              ; preds = %167, %160
  %173 = phi i64 [ %162, %160 ], [ %171, %167 ]
  %174 = phi i32* [ %166, %160 ], [ %169, %167 ]
  %175 = bitcast i32* %174 to i8*
  %176 = bitcast i32* %157 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %175, i8* align 4 %176, i64 %173, i1 false) #6
  %177 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 1
  %178 = bitcast %union.TfLitePtrUnion* %177 to float**
  %179 = load float*, float** %178, align 8
  br label %180

180:                                              ; preds = %150, %172
  %181 = phi float* [ %179, %172 ], [ null, %150 ]
  %182 = icmp eq %struct.TfLiteTensor* %73, null
  br i1 %182, label %186, label %183

183:                                              ; preds = %180
  %184 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %73, i64 0, i32 1, i32 0
  %185 = load i32*, i32** %184, align 8
  br label %186

186:                                              ; preds = %180, %183
  %187 = phi i32* [ %185, %183 ], [ null, %180 ]
  %188 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %188) #6
  %189 = icmp eq %struct.TfLiteTensor* %85, null
  br i1 %189, label %190, label %192

190:                                              ; preds = %186
  %191 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %191, align 8, !alias.scope !8
  br label %219

192:                                              ; preds = %186
  %193 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 2
  %194 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %193, align 8, !noalias !8
  %195 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %194, i64 0, i32 0
  %196 = load i32, i32* %195, align 4, !noalias !8
  %197 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %194, i64 0, i32 1, i64 0
  %198 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %196, i32* %198, align 8, !alias.scope !8
  %199 = icmp sgt i32 %196, 5
  br i1 %199, label %200, label %207

200:                                              ; preds = %192
  %201 = sext i32 %196 to i64
  %202 = shl nsw i64 %201, 2
  %203 = tail call i8* @_Znam(i64 %202) #7, !noalias !8
  %204 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %205 = bitcast i32** %204 to i8**
  store i8* %203, i8** %205, align 8, !alias.scope !8
  %206 = bitcast i8* %203 to i32*
  br label %212

207:                                              ; preds = %192
  %208 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %209 = bitcast %union.anon* %208 to i32*
  %210 = sext i32 %196 to i64
  %211 = shl nsw i64 %210, 2
  br label %212

212:                                              ; preds = %207, %200
  %213 = phi i64 [ %202, %200 ], [ %211, %207 ]
  %214 = phi i32* [ %206, %200 ], [ %209, %207 ]
  %215 = bitcast i32* %214 to i8*
  %216 = bitcast i32* %197 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %215, i8* align 4 %216, i64 %213, i1 false) #6
  %217 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 1, i32 0
  %218 = load i32*, i32** %217, align 8
  br label %219

219:                                              ; preds = %190, %212
  %220 = phi i32* [ %218, %212 ], [ null, %190 ]
  %221 = bitcast %"class.std::__1::function"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %221) #6
  %222 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %6, i64 0, i32 0, i32 1, i32 0
  %223 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %6, i64 0, i32 0, i32 2
  %224 = select i1 %2, i1 (%"union.std::__1::__function::__policy_storage"*, float, float)* @_ZNSt3__110__function16__policy_invokerIFbffEE11__call_implINS0_20__default_alloc_funcINS_7greaterIfEES2_EEEEbPKNS0_16__policy_storageEff, i1 (%"union.std::__1::__function::__policy_storage"*, float, float)* @_ZNSt3__110__function16__policy_invokerIFbffEE11__call_implINS0_20__default_alloc_funcINS_4lessIfEES2_EEEEbPKNS0_16__policy_storageEff
  %225 = select i1 %2, %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_7greaterIfEEFbffEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_4lessIfEEFbffEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_
  store i1 (%"union.std::__1::__function::__policy_storage"*, float, float)* %224, i1 (%"union.std::__1::__function::__policy_storage"*, float, float)** %222, align 8, !alias.scope !11
  store %"struct.std::__1::__function::__policy"* %225, %"struct.std::__1::__function::__policy"** %223, align 8, !alias.scope !11
  call void @_ZN6tflite13reference_ops9ArgMinMaxIfiiNSt3__18functionIFbffEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, float* %181, i32* %187, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, i32* %220, %"class.std::__1::function"* nonnull dereferenceable(32) %6)
  %226 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %223, align 8
  %227 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %226, i64 0, i32 1
  %228 = load void (i8*)*, void (i8*)** %227, align 8
  %229 = icmp eq void (i8*)* %228, null
  br i1 %229, label %233, label %230

230:                                              ; preds = %219
  %231 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %6, i64 0, i32 0, i32 0, i32 0
  %232 = load i8*, i8** %231, align 8
  call void %228(i8* %232) #6
  br label %233

233:                                              ; preds = %219, %230
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %221) #6
  %234 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %235 = load i32, i32* %234, align 8
  %236 = icmp sgt i32 %235, 5
  br i1 %236, label %237, label %243

237:                                              ; preds = %233
  %238 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %239 = load i32*, i32** %238, align 8
  %240 = icmp eq i32* %239, null
  br i1 %240, label %243, label %241

241:                                              ; preds = %237
  %242 = bitcast i32* %239 to i8*
  call void @_ZdaPv(i8* %242) #7
  br label %243

243:                                              ; preds = %233, %237, %241
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %188) #6
  %244 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %245 = load i32, i32* %244, align 8
  %246 = icmp sgt i32 %245, 5
  br i1 %246, label %247, label %253

247:                                              ; preds = %243
  %248 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %249 = load i32*, i32** %248, align 8
  %250 = icmp eq i32* %249, null
  br i1 %250, label %253, label %251

251:                                              ; preds = %247
  %252 = bitcast i32* %249 to i8*
  call void @_ZdaPv(i8* %252) #7
  br label %253

253:                                              ; preds = %243, %247, %251
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %148) #6
  br label %1905

254:                                              ; preds = %144
  %255 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %255) #6
  %256 = icmp eq %struct.TfLiteTensor* %63, null
  br i1 %256, label %257, label %259

257:                                              ; preds = %254
  %258 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %258, align 8, !alias.scope !14
  br label %287

259:                                              ; preds = %254
  %260 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 2
  %261 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %260, align 8, !noalias !14
  %262 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %261, i64 0, i32 0
  %263 = load i32, i32* %262, align 4, !noalias !14
  %264 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %261, i64 0, i32 1, i64 0
  %265 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %263, i32* %265, align 8, !alias.scope !14
  %266 = icmp sgt i32 %263, 5
  br i1 %266, label %267, label %274

267:                                              ; preds = %259
  %268 = sext i32 %263 to i64
  %269 = shl nsw i64 %268, 2
  %270 = tail call i8* @_Znam(i64 %269) #7, !noalias !14
  %271 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %272 = bitcast i32** %271 to i8**
  store i8* %270, i8** %272, align 8, !alias.scope !14
  %273 = bitcast i8* %270 to i32*
  br label %279

274:                                              ; preds = %259
  %275 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %276 = bitcast %union.anon* %275 to i32*
  %277 = sext i32 %263 to i64
  %278 = shl nsw i64 %277, 2
  br label %279

279:                                              ; preds = %274, %267
  %280 = phi i64 [ %269, %267 ], [ %278, %274 ]
  %281 = phi i32* [ %273, %267 ], [ %276, %274 ]
  %282 = bitcast i32* %281 to i8*
  %283 = bitcast i32* %264 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %282, i8* align 4 %283, i64 %280, i1 false) #6
  %284 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 1
  %285 = bitcast %union.TfLitePtrUnion* %284 to i8**
  %286 = load i8*, i8** %285, align 8
  br label %287

287:                                              ; preds = %257, %279
  %288 = phi i8* [ %286, %279 ], [ null, %257 ]
  %289 = icmp eq %struct.TfLiteTensor* %73, null
  br i1 %289, label %293, label %290

290:                                              ; preds = %287
  %291 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %73, i64 0, i32 1, i32 0
  %292 = load i32*, i32** %291, align 8
  br label %293

293:                                              ; preds = %287, %290
  %294 = phi i32* [ %292, %290 ], [ null, %287 ]
  %295 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %295) #6
  %296 = icmp eq %struct.TfLiteTensor* %85, null
  br i1 %296, label %297, label %299

297:                                              ; preds = %293
  %298 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %298, align 8, !alias.scope !17
  br label %326

299:                                              ; preds = %293
  %300 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 2
  %301 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %300, align 8, !noalias !17
  %302 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %301, i64 0, i32 0
  %303 = load i32, i32* %302, align 4, !noalias !17
  %304 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %301, i64 0, i32 1, i64 0
  %305 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 %303, i32* %305, align 8, !alias.scope !17
  %306 = icmp sgt i32 %303, 5
  br i1 %306, label %307, label %314

307:                                              ; preds = %299
  %308 = sext i32 %303 to i64
  %309 = shl nsw i64 %308, 2
  %310 = tail call i8* @_Znam(i64 %309) #7, !noalias !17
  %311 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %312 = bitcast i32** %311 to i8**
  store i8* %310, i8** %312, align 8, !alias.scope !17
  %313 = bitcast i8* %310 to i32*
  br label %319

314:                                              ; preds = %299
  %315 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %316 = bitcast %union.anon* %315 to i32*
  %317 = sext i32 %303 to i64
  %318 = shl nsw i64 %317, 2
  br label %319

319:                                              ; preds = %314, %307
  %320 = phi i64 [ %309, %307 ], [ %318, %314 ]
  %321 = phi i32* [ %313, %307 ], [ %316, %314 ]
  %322 = bitcast i32* %321 to i8*
  %323 = bitcast i32* %304 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %322, i8* align 4 %323, i64 %320, i1 false) #6
  %324 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 1, i32 0
  %325 = load i32*, i32** %324, align 8
  br label %326

326:                                              ; preds = %297, %319
  %327 = phi i32* [ %325, %319 ], [ null, %297 ]
  %328 = bitcast %"class.std::__1::function.1"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %328) #6
  %329 = getelementptr inbounds %"class.std::__1::function.1", %"class.std::__1::function.1"* %9, i64 0, i32 0, i32 1, i32 0
  %330 = getelementptr inbounds %"class.std::__1::function.1", %"class.std::__1::function.1"* %9, i64 0, i32 0, i32 2
  %331 = select i1 %2, i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)* @_ZNSt3__110__function16__policy_invokerIFbhhEE11__call_implINS0_20__default_alloc_funcINS_7greaterIhEES2_EEEEbPKNS0_16__policy_storageEhh, i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)* @_ZNSt3__110__function16__policy_invokerIFbhhEE11__call_implINS0_20__default_alloc_funcINS_4lessIhEES2_EEEEbPKNS0_16__policy_storageEhh
  %332 = select i1 %2, %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_7greaterIhEEFbhhEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_4lessIhEEFbhhEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_
  store i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)* %331, i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)** %329, align 8, !alias.scope !20
  store %"struct.std::__1::__function::__policy"* %332, %"struct.std::__1::__function::__policy"** %330, align 8, !alias.scope !20
  call void @_ZN6tflite13reference_ops9ArgMinMaxIhiiNSt3__18functionIFbhhEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, i8* %288, i32* %294, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %8, i32* %327, %"class.std::__1::function.1"* nonnull dereferenceable(32) %9)
  %333 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %330, align 8
  %334 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %333, i64 0, i32 1
  %335 = load void (i8*)*, void (i8*)** %334, align 8
  %336 = icmp eq void (i8*)* %335, null
  br i1 %336, label %340, label %337

337:                                              ; preds = %326
  %338 = getelementptr inbounds %"class.std::__1::function.1", %"class.std::__1::function.1"* %9, i64 0, i32 0, i32 0, i32 0
  %339 = load i8*, i8** %338, align 8
  call void %335(i8* %339) #6
  br label %340

340:                                              ; preds = %326, %337
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %328) #6
  %341 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  %342 = load i32, i32* %341, align 8
  %343 = icmp sgt i32 %342, 5
  br i1 %343, label %344, label %350

344:                                              ; preds = %340
  %345 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %346 = load i32*, i32** %345, align 8
  %347 = icmp eq i32* %346, null
  br i1 %347, label %350, label %348

348:                                              ; preds = %344
  %349 = bitcast i32* %346 to i8*
  call void @_ZdaPv(i8* %349) #7
  br label %350

350:                                              ; preds = %340, %344, %348
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %295) #6
  %351 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  %352 = load i32, i32* %351, align 8
  %353 = icmp sgt i32 %352, 5
  br i1 %353, label %354, label %360

354:                                              ; preds = %350
  %355 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %356 = load i32*, i32** %355, align 8
  %357 = icmp eq i32* %356, null
  br i1 %357, label %360, label %358

358:                                              ; preds = %354
  %359 = bitcast i32* %356 to i8*
  call void @_ZdaPv(i8* %359) #7
  br label %360

360:                                              ; preds = %350, %354, %358
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %255) #6
  br label %1905

361:                                              ; preds = %144
  %362 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %362) #6
  %363 = icmp eq %struct.TfLiteTensor* %63, null
  br i1 %363, label %364, label %366

364:                                              ; preds = %361
  %365 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %365, align 8, !alias.scope !23
  br label %394

366:                                              ; preds = %361
  %367 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 2
  %368 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %367, align 8, !noalias !23
  %369 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %368, i64 0, i32 0
  %370 = load i32, i32* %369, align 4, !noalias !23
  %371 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %368, i64 0, i32 1, i64 0
  %372 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %370, i32* %372, align 8, !alias.scope !23
  %373 = icmp sgt i32 %370, 5
  br i1 %373, label %374, label %381

374:                                              ; preds = %366
  %375 = sext i32 %370 to i64
  %376 = shl nsw i64 %375, 2
  %377 = tail call i8* @_Znam(i64 %376) #7, !noalias !23
  %378 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %379 = bitcast i32** %378 to i8**
  store i8* %377, i8** %379, align 8, !alias.scope !23
  %380 = bitcast i8* %377 to i32*
  br label %386

381:                                              ; preds = %366
  %382 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %383 = bitcast %union.anon* %382 to i32*
  %384 = sext i32 %370 to i64
  %385 = shl nsw i64 %384, 2
  br label %386

386:                                              ; preds = %381, %374
  %387 = phi i64 [ %376, %374 ], [ %385, %381 ]
  %388 = phi i32* [ %380, %374 ], [ %383, %381 ]
  %389 = bitcast i32* %388 to i8*
  %390 = bitcast i32* %371 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %389, i8* align 4 %390, i64 %387, i1 false) #6
  %391 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 1
  %392 = bitcast %union.TfLitePtrUnion* %391 to i8**
  %393 = load i8*, i8** %392, align 8
  br label %394

394:                                              ; preds = %364, %386
  %395 = phi i8* [ %393, %386 ], [ null, %364 ]
  %396 = icmp eq %struct.TfLiteTensor* %73, null
  br i1 %396, label %400, label %397

397:                                              ; preds = %394
  %398 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %73, i64 0, i32 1, i32 0
  %399 = load i32*, i32** %398, align 8
  br label %400

400:                                              ; preds = %394, %397
  %401 = phi i32* [ %399, %397 ], [ null, %394 ]
  %402 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %402) #6
  %403 = icmp eq %struct.TfLiteTensor* %85, null
  br i1 %403, label %404, label %406

404:                                              ; preds = %400
  %405 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %405, align 8, !alias.scope !26
  br label %433

406:                                              ; preds = %400
  %407 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 2
  %408 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %407, align 8, !noalias !26
  %409 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %408, i64 0, i32 0
  %410 = load i32, i32* %409, align 4, !noalias !26
  %411 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %408, i64 0, i32 1, i64 0
  %412 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %410, i32* %412, align 8, !alias.scope !26
  %413 = icmp sgt i32 %410, 5
  br i1 %413, label %414, label %421

414:                                              ; preds = %406
  %415 = sext i32 %410 to i64
  %416 = shl nsw i64 %415, 2
  %417 = tail call i8* @_Znam(i64 %416) #7, !noalias !26
  %418 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %419 = bitcast i32** %418 to i8**
  store i8* %417, i8** %419, align 8, !alias.scope !26
  %420 = bitcast i8* %417 to i32*
  br label %426

421:                                              ; preds = %406
  %422 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %423 = bitcast %union.anon* %422 to i32*
  %424 = sext i32 %410 to i64
  %425 = shl nsw i64 %424, 2
  br label %426

426:                                              ; preds = %421, %414
  %427 = phi i64 [ %416, %414 ], [ %425, %421 ]
  %428 = phi i32* [ %420, %414 ], [ %423, %421 ]
  %429 = bitcast i32* %428 to i8*
  %430 = bitcast i32* %411 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %429, i8* align 4 %430, i64 %427, i1 false) #6
  %431 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 1, i32 0
  %432 = load i32*, i32** %431, align 8
  br label %433

433:                                              ; preds = %404, %426
  %434 = phi i32* [ %432, %426 ], [ null, %404 ]
  %435 = bitcast %"class.std::__1::function.7"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %435) #6
  %436 = getelementptr inbounds %"class.std::__1::function.7", %"class.std::__1::function.7"* %12, i64 0, i32 0, i32 1, i32 0
  %437 = getelementptr inbounds %"class.std::__1::function.7", %"class.std::__1::function.7"* %12, i64 0, i32 0, i32 2
  %438 = select i1 %2, i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)* @_ZNSt3__110__function16__policy_invokerIFbaaEE11__call_implINS0_20__default_alloc_funcINS_7greaterIaEES2_EEEEbPKNS0_16__policy_storageEaa, i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)* @_ZNSt3__110__function16__policy_invokerIFbaaEE11__call_implINS0_20__default_alloc_funcINS_4lessIaEES2_EEEEbPKNS0_16__policy_storageEaa
  %439 = select i1 %2, %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_7greaterIaEEFbaaEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_4lessIaEEFbaaEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_
  store i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)* %438, i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)** %436, align 8, !alias.scope !29
  store %"struct.std::__1::__function::__policy"* %439, %"struct.std::__1::__function::__policy"** %437, align 8, !alias.scope !29
  call void @_ZN6tflite13reference_ops9ArgMinMaxIaiiNSt3__18functionIFbaaEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, i8* %395, i32* %401, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, i32* %434, %"class.std::__1::function.7"* nonnull dereferenceable(32) %12)
  %440 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %437, align 8
  %441 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %440, i64 0, i32 1
  %442 = load void (i8*)*, void (i8*)** %441, align 8
  %443 = icmp eq void (i8*)* %442, null
  br i1 %443, label %447, label %444

444:                                              ; preds = %433
  %445 = getelementptr inbounds %"class.std::__1::function.7", %"class.std::__1::function.7"* %12, i64 0, i32 0, i32 0, i32 0
  %446 = load i8*, i8** %445, align 8
  call void %442(i8* %446) #6
  br label %447

447:                                              ; preds = %433, %444
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %435) #6
  %448 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %449 = load i32, i32* %448, align 8
  %450 = icmp sgt i32 %449, 5
  br i1 %450, label %451, label %457

451:                                              ; preds = %447
  %452 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %453 = load i32*, i32** %452, align 8
  %454 = icmp eq i32* %453, null
  br i1 %454, label %457, label %455

455:                                              ; preds = %451
  %456 = bitcast i32* %453 to i8*
  call void @_ZdaPv(i8* %456) #7
  br label %457

457:                                              ; preds = %447, %451, %455
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %402) #6
  %458 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %459 = load i32, i32* %458, align 8
  %460 = icmp sgt i32 %459, 5
  br i1 %460, label %461, label %467

461:                                              ; preds = %457
  %462 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %463 = load i32*, i32** %462, align 8
  %464 = icmp eq i32* %463, null
  br i1 %464, label %467, label %465

465:                                              ; preds = %461
  %466 = bitcast i32* %463 to i8*
  call void @_ZdaPv(i8* %466) #7
  br label %467

467:                                              ; preds = %457, %461, %465
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %362) #6
  br label %1905

468:                                              ; preds = %144
  %469 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %469) #6
  %470 = icmp eq %struct.TfLiteTensor* %63, null
  br i1 %470, label %471, label %473

471:                                              ; preds = %468
  %472 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %472, align 8, !alias.scope !32
  br label %500

473:                                              ; preds = %468
  %474 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 2
  %475 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %474, align 8, !noalias !32
  %476 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %475, i64 0, i32 0
  %477 = load i32, i32* %476, align 4, !noalias !32
  %478 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %475, i64 0, i32 1, i64 0
  %479 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %477, i32* %479, align 8, !alias.scope !32
  %480 = icmp sgt i32 %477, 5
  br i1 %480, label %481, label %488

481:                                              ; preds = %473
  %482 = sext i32 %477 to i64
  %483 = shl nsw i64 %482, 2
  %484 = tail call i8* @_Znam(i64 %483) #7, !noalias !32
  %485 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %486 = bitcast i32** %485 to i8**
  store i8* %484, i8** %486, align 8, !alias.scope !32
  %487 = bitcast i8* %484 to i32*
  br label %493

488:                                              ; preds = %473
  %489 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %490 = bitcast %union.anon* %489 to i32*
  %491 = sext i32 %477 to i64
  %492 = shl nsw i64 %491, 2
  br label %493

493:                                              ; preds = %488, %481
  %494 = phi i64 [ %483, %481 ], [ %492, %488 ]
  %495 = phi i32* [ %487, %481 ], [ %490, %488 ]
  %496 = bitcast i32* %495 to i8*
  %497 = bitcast i32* %478 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %496, i8* align 4 %497, i64 %494, i1 false) #6
  %498 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 1, i32 0
  %499 = load i32*, i32** %498, align 8
  br label %500

500:                                              ; preds = %471, %493
  %501 = phi i32* [ %499, %493 ], [ null, %471 ]
  %502 = icmp eq %struct.TfLiteTensor* %73, null
  br i1 %502, label %506, label %503

503:                                              ; preds = %500
  %504 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %73, i64 0, i32 1, i32 0
  %505 = load i32*, i32** %504, align 8
  br label %506

506:                                              ; preds = %500, %503
  %507 = phi i32* [ %505, %503 ], [ null, %500 ]
  %508 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %508) #6
  %509 = icmp eq %struct.TfLiteTensor* %85, null
  br i1 %509, label %510, label %512

510:                                              ; preds = %506
  %511 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %511, align 8, !alias.scope !35
  br label %539

512:                                              ; preds = %506
  %513 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 2
  %514 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %513, align 8, !noalias !35
  %515 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %514, i64 0, i32 0
  %516 = load i32, i32* %515, align 4, !noalias !35
  %517 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %514, i64 0, i32 1, i64 0
  %518 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %516, i32* %518, align 8, !alias.scope !35
  %519 = icmp sgt i32 %516, 5
  br i1 %519, label %520, label %527

520:                                              ; preds = %512
  %521 = sext i32 %516 to i64
  %522 = shl nsw i64 %521, 2
  %523 = tail call i8* @_Znam(i64 %522) #7, !noalias !35
  %524 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %525 = bitcast i32** %524 to i8**
  store i8* %523, i8** %525, align 8, !alias.scope !35
  %526 = bitcast i8* %523 to i32*
  br label %532

527:                                              ; preds = %512
  %528 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %529 = bitcast %union.anon* %528 to i32*
  %530 = sext i32 %516 to i64
  %531 = shl nsw i64 %530, 2
  br label %532

532:                                              ; preds = %527, %520
  %533 = phi i64 [ %522, %520 ], [ %531, %527 ]
  %534 = phi i32* [ %526, %520 ], [ %529, %527 ]
  %535 = bitcast i32* %534 to i8*
  %536 = bitcast i32* %517 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %535, i8* align 4 %536, i64 %533, i1 false) #6
  %537 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 1, i32 0
  %538 = load i32*, i32** %537, align 8
  br label %539

539:                                              ; preds = %510, %532
  %540 = phi i32* [ %538, %532 ], [ null, %510 ]
  %541 = bitcast %"class.std::__1::function.13"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %541) #6
  %542 = getelementptr inbounds %"class.std::__1::function.13", %"class.std::__1::function.13"* %15, i64 0, i32 0, i32 1, i32 0
  %543 = getelementptr inbounds %"class.std::__1::function.13", %"class.std::__1::function.13"* %15, i64 0, i32 0, i32 2
  %544 = select i1 %2, i1 (%"union.std::__1::__function::__policy_storage"*, i32, i32)* @_ZNSt3__110__function16__policy_invokerIFbiiEE11__call_implINS0_20__default_alloc_funcINS_7greaterIiEES2_EEEEbPKNS0_16__policy_storageEii, i1 (%"union.std::__1::__function::__policy_storage"*, i32, i32)* @_ZNSt3__110__function16__policy_invokerIFbiiEE11__call_implINS0_20__default_alloc_funcINS_4lessIiEES2_EEEEbPKNS0_16__policy_storageEii
  %545 = select i1 %2, %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_7greaterIiEEFbiiEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_4lessIiEEFbiiEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32, i32)* %544, i1 (%"union.std::__1::__function::__policy_storage"*, i32, i32)** %542, align 8, !alias.scope !38
  store %"struct.std::__1::__function::__policy"* %545, %"struct.std::__1::__function::__policy"** %543, align 8, !alias.scope !38
  call void @_ZN6tflite13reference_ops9ArgMinMaxIiiiNSt3__18functionIFbiiEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %13, i32* %501, i32* %507, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %14, i32* %540, %"class.std::__1::function.13"* nonnull dereferenceable(32) %15)
  %546 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %543, align 8
  %547 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %546, i64 0, i32 1
  %548 = load void (i8*)*, void (i8*)** %547, align 8
  %549 = icmp eq void (i8*)* %548, null
  br i1 %549, label %553, label %550

550:                                              ; preds = %539
  %551 = getelementptr inbounds %"class.std::__1::function.13", %"class.std::__1::function.13"* %15, i64 0, i32 0, i32 0, i32 0
  %552 = load i8*, i8** %551, align 8
  call void %548(i8* %552) #6
  br label %553

553:                                              ; preds = %539, %550
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %541) #6
  %554 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  %555 = load i32, i32* %554, align 8
  %556 = icmp sgt i32 %555, 5
  br i1 %556, label %557, label %563

557:                                              ; preds = %553
  %558 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %559 = load i32*, i32** %558, align 8
  %560 = icmp eq i32* %559, null
  br i1 %560, label %563, label %561

561:                                              ; preds = %557
  %562 = bitcast i32* %559 to i8*
  call void @_ZdaPv(i8* %562) #7
  br label %563

563:                                              ; preds = %553, %557, %561
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %508) #6
  %564 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  %565 = load i32, i32* %564, align 8
  %566 = icmp sgt i32 %565, 5
  br i1 %566, label %567, label %573

567:                                              ; preds = %563
  %568 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %569 = load i32*, i32** %568, align 8
  %570 = icmp eq i32* %569, null
  br i1 %570, label %573, label %571

571:                                              ; preds = %567
  %572 = bitcast i32* %569 to i8*
  call void @_ZdaPv(i8* %572) #7
  br label %573

573:                                              ; preds = %563, %567, %571
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %469) #6
  br label %1905

574:                                              ; preds = %144
  %575 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %576 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %575, align 8
  %577 = tail call i8* @TfLiteTypeGetName(i32 %146) #6
  tail call void (%struct.TfLiteContext*, i8*, ...) %576(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.14, i64 0, i64 0), i8* %577) #6
  br label %1905

578:                                              ; preds = %143
  %579 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 0
  %580 = load i32, i32* %579, align 8
  switch i32 %580, label %1012 [
    i32 1, label %581
    i32 3, label %689
    i32 9, label %797
    i32 2, label %905
  ]

581:                                              ; preds = %578
  %582 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %582) #6
  %583 = icmp eq %struct.TfLiteTensor* %63, null
  br i1 %583, label %584, label %586

584:                                              ; preds = %581
  %585 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %585, align 8, !alias.scope !41
  br label %614

586:                                              ; preds = %581
  %587 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 2
  %588 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %587, align 8, !noalias !41
  %589 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %588, i64 0, i32 0
  %590 = load i32, i32* %589, align 4, !noalias !41
  %591 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %588, i64 0, i32 1, i64 0
  %592 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 %590, i32* %592, align 8, !alias.scope !41
  %593 = icmp sgt i32 %590, 5
  br i1 %593, label %594, label %601

594:                                              ; preds = %586
  %595 = sext i32 %590 to i64
  %596 = shl nsw i64 %595, 2
  %597 = tail call i8* @_Znam(i64 %596) #7, !noalias !41
  %598 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %599 = bitcast i32** %598 to i8**
  store i8* %597, i8** %599, align 8, !alias.scope !41
  %600 = bitcast i8* %597 to i32*
  br label %606

601:                                              ; preds = %586
  %602 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %603 = bitcast %union.anon* %602 to i32*
  %604 = sext i32 %590 to i64
  %605 = shl nsw i64 %604, 2
  br label %606

606:                                              ; preds = %601, %594
  %607 = phi i64 [ %596, %594 ], [ %605, %601 ]
  %608 = phi i32* [ %600, %594 ], [ %603, %601 ]
  %609 = bitcast i32* %608 to i8*
  %610 = bitcast i32* %591 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %609, i8* align 4 %610, i64 %607, i1 false) #6
  %611 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 1
  %612 = bitcast %union.TfLitePtrUnion* %611 to float**
  %613 = load float*, float** %612, align 8
  br label %614

614:                                              ; preds = %584, %606
  %615 = phi float* [ %613, %606 ], [ null, %584 ]
  %616 = icmp eq %struct.TfLiteTensor* %73, null
  br i1 %616, label %620, label %617

617:                                              ; preds = %614
  %618 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %73, i64 0, i32 1, i32 0
  %619 = load i32*, i32** %618, align 8
  br label %620

620:                                              ; preds = %614, %617
  %621 = phi i32* [ %619, %617 ], [ null, %614 ]
  %622 = bitcast %"class.tflite::RuntimeShape"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %622) #6
  %623 = icmp eq %struct.TfLiteTensor* %85, null
  br i1 %623, label %624, label %626

624:                                              ; preds = %620
  %625 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 0, i32* %625, align 8, !alias.scope !44
  br label %654

626:                                              ; preds = %620
  %627 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 2
  %628 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %627, align 8, !noalias !44
  %629 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %628, i64 0, i32 0
  %630 = load i32, i32* %629, align 4, !noalias !44
  %631 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %628, i64 0, i32 1, i64 0
  %632 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 %630, i32* %632, align 8, !alias.scope !44
  %633 = icmp sgt i32 %630, 5
  br i1 %633, label %634, label %641

634:                                              ; preds = %626
  %635 = sext i32 %630 to i64
  %636 = shl nsw i64 %635, 2
  %637 = tail call i8* @_Znam(i64 %636) #7, !noalias !44
  %638 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %639 = bitcast i32** %638 to i8**
  store i8* %637, i8** %639, align 8, !alias.scope !44
  %640 = bitcast i8* %637 to i32*
  br label %646

641:                                              ; preds = %626
  %642 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1
  %643 = bitcast %union.anon* %642 to i32*
  %644 = sext i32 %630 to i64
  %645 = shl nsw i64 %644, 2
  br label %646

646:                                              ; preds = %641, %634
  %647 = phi i64 [ %636, %634 ], [ %645, %641 ]
  %648 = phi i32* [ %640, %634 ], [ %643, %641 ]
  %649 = bitcast i32* %648 to i8*
  %650 = bitcast i32* %631 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %649, i8* align 4 %650, i64 %647, i1 false) #6
  %651 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 1
  %652 = bitcast %union.TfLitePtrUnion* %651 to i64**
  %653 = load i64*, i64** %652, align 8
  br label %654

654:                                              ; preds = %624, %646
  %655 = phi i64* [ %653, %646 ], [ null, %624 ]
  %656 = bitcast %"class.std::__1::function"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %656) #6
  %657 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %18, i64 0, i32 0, i32 1, i32 0
  %658 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %18, i64 0, i32 0, i32 2
  %659 = select i1 %2, i1 (%"union.std::__1::__function::__policy_storage"*, float, float)* @_ZNSt3__110__function16__policy_invokerIFbffEE11__call_implINS0_20__default_alloc_funcINS_7greaterIfEES2_EEEEbPKNS0_16__policy_storageEff, i1 (%"union.std::__1::__function::__policy_storage"*, float, float)* @_ZNSt3__110__function16__policy_invokerIFbffEE11__call_implINS0_20__default_alloc_funcINS_4lessIfEES2_EEEEbPKNS0_16__policy_storageEff
  %660 = select i1 %2, %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_7greaterIfEEFbffEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_4lessIfEEFbffEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_
  store i1 (%"union.std::__1::__function::__policy_storage"*, float, float)* %659, i1 (%"union.std::__1::__function::__policy_storage"*, float, float)** %657, align 8, !alias.scope !47
  store %"struct.std::__1::__function::__policy"* %660, %"struct.std::__1::__function::__policy"** %658, align 8, !alias.scope !47
  call void @_ZN6tflite13reference_ops9ArgMinMaxIfliNSt3__18functionIFbffEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %16, float* %615, i32* %621, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %17, i64* %655, %"class.std::__1::function"* nonnull dereferenceable(32) %18)
  %661 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %658, align 8
  %662 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %661, i64 0, i32 1
  %663 = load void (i8*)*, void (i8*)** %662, align 8
  %664 = icmp eq void (i8*)* %663, null
  br i1 %664, label %668, label %665

665:                                              ; preds = %654
  %666 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %18, i64 0, i32 0, i32 0, i32 0
  %667 = load i8*, i8** %666, align 8
  call void %663(i8* %667) #6
  br label %668

668:                                              ; preds = %654, %665
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %656) #6
  %669 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  %670 = load i32, i32* %669, align 8
  %671 = icmp sgt i32 %670, 5
  br i1 %671, label %672, label %678

672:                                              ; preds = %668
  %673 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %674 = load i32*, i32** %673, align 8
  %675 = icmp eq i32* %674, null
  br i1 %675, label %678, label %676

676:                                              ; preds = %672
  %677 = bitcast i32* %674 to i8*
  call void @_ZdaPv(i8* %677) #7
  br label %678

678:                                              ; preds = %668, %672, %676
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %622) #6
  %679 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  %680 = load i32, i32* %679, align 8
  %681 = icmp sgt i32 %680, 5
  br i1 %681, label %682, label %688

682:                                              ; preds = %678
  %683 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %684 = load i32*, i32** %683, align 8
  %685 = icmp eq i32* %684, null
  br i1 %685, label %688, label %686

686:                                              ; preds = %682
  %687 = bitcast i32* %684 to i8*
  call void @_ZdaPv(i8* %687) #7
  br label %688

688:                                              ; preds = %678, %682, %686
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %582) #6
  br label %1905

689:                                              ; preds = %578
  %690 = bitcast %"class.tflite::RuntimeShape"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %690) #6
  %691 = icmp eq %struct.TfLiteTensor* %63, null
  br i1 %691, label %692, label %694

692:                                              ; preds = %689
  %693 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 0, i32* %693, align 8, !alias.scope !50
  br label %722

694:                                              ; preds = %689
  %695 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 2
  %696 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %695, align 8, !noalias !50
  %697 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %696, i64 0, i32 0
  %698 = load i32, i32* %697, align 4, !noalias !50
  %699 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %696, i64 0, i32 1, i64 0
  %700 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 %698, i32* %700, align 8, !alias.scope !50
  %701 = icmp sgt i32 %698, 5
  br i1 %701, label %702, label %709

702:                                              ; preds = %694
  %703 = sext i32 %698 to i64
  %704 = shl nsw i64 %703, 2
  %705 = tail call i8* @_Znam(i64 %704) #7, !noalias !50
  %706 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %707 = bitcast i32** %706 to i8**
  store i8* %705, i8** %707, align 8, !alias.scope !50
  %708 = bitcast i8* %705 to i32*
  br label %714

709:                                              ; preds = %694
  %710 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1
  %711 = bitcast %union.anon* %710 to i32*
  %712 = sext i32 %698 to i64
  %713 = shl nsw i64 %712, 2
  br label %714

714:                                              ; preds = %709, %702
  %715 = phi i64 [ %704, %702 ], [ %713, %709 ]
  %716 = phi i32* [ %708, %702 ], [ %711, %709 ]
  %717 = bitcast i32* %716 to i8*
  %718 = bitcast i32* %699 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %717, i8* align 4 %718, i64 %715, i1 false) #6
  %719 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 1
  %720 = bitcast %union.TfLitePtrUnion* %719 to i8**
  %721 = load i8*, i8** %720, align 8
  br label %722

722:                                              ; preds = %692, %714
  %723 = phi i8* [ %721, %714 ], [ null, %692 ]
  %724 = icmp eq %struct.TfLiteTensor* %73, null
  br i1 %724, label %728, label %725

725:                                              ; preds = %722
  %726 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %73, i64 0, i32 1, i32 0
  %727 = load i32*, i32** %726, align 8
  br label %728

728:                                              ; preds = %722, %725
  %729 = phi i32* [ %727, %725 ], [ null, %722 ]
  %730 = bitcast %"class.tflite::RuntimeShape"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %730) #6
  %731 = icmp eq %struct.TfLiteTensor* %85, null
  br i1 %731, label %732, label %734

732:                                              ; preds = %728
  %733 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 0, i32* %733, align 8, !alias.scope !53
  br label %762

734:                                              ; preds = %728
  %735 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 2
  %736 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %735, align 8, !noalias !53
  %737 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %736, i64 0, i32 0
  %738 = load i32, i32* %737, align 4, !noalias !53
  %739 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %736, i64 0, i32 1, i64 0
  %740 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 %738, i32* %740, align 8, !alias.scope !53
  %741 = icmp sgt i32 %738, 5
  br i1 %741, label %742, label %749

742:                                              ; preds = %734
  %743 = sext i32 %738 to i64
  %744 = shl nsw i64 %743, 2
  %745 = tail call i8* @_Znam(i64 %744) #7, !noalias !53
  %746 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %747 = bitcast i32** %746 to i8**
  store i8* %745, i8** %747, align 8, !alias.scope !53
  %748 = bitcast i8* %745 to i32*
  br label %754

749:                                              ; preds = %734
  %750 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1
  %751 = bitcast %union.anon* %750 to i32*
  %752 = sext i32 %738 to i64
  %753 = shl nsw i64 %752, 2
  br label %754

754:                                              ; preds = %749, %742
  %755 = phi i64 [ %744, %742 ], [ %753, %749 ]
  %756 = phi i32* [ %748, %742 ], [ %751, %749 ]
  %757 = bitcast i32* %756 to i8*
  %758 = bitcast i32* %739 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %757, i8* align 4 %758, i64 %755, i1 false) #6
  %759 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 1
  %760 = bitcast %union.TfLitePtrUnion* %759 to i64**
  %761 = load i64*, i64** %760, align 8
  br label %762

762:                                              ; preds = %732, %754
  %763 = phi i64* [ %761, %754 ], [ null, %732 ]
  %764 = bitcast %"class.std::__1::function.1"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %764) #6
  %765 = getelementptr inbounds %"class.std::__1::function.1", %"class.std::__1::function.1"* %21, i64 0, i32 0, i32 1, i32 0
  %766 = getelementptr inbounds %"class.std::__1::function.1", %"class.std::__1::function.1"* %21, i64 0, i32 0, i32 2
  %767 = select i1 %2, i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)* @_ZNSt3__110__function16__policy_invokerIFbhhEE11__call_implINS0_20__default_alloc_funcINS_7greaterIhEES2_EEEEbPKNS0_16__policy_storageEhh, i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)* @_ZNSt3__110__function16__policy_invokerIFbhhEE11__call_implINS0_20__default_alloc_funcINS_4lessIhEES2_EEEEbPKNS0_16__policy_storageEhh
  %768 = select i1 %2, %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_7greaterIhEEFbhhEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_4lessIhEEFbhhEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_
  store i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)* %767, i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)** %765, align 8, !alias.scope !56
  store %"struct.std::__1::__function::__policy"* %768, %"struct.std::__1::__function::__policy"** %766, align 8, !alias.scope !56
  call void @_ZN6tflite13reference_ops9ArgMinMaxIhliNSt3__18functionIFbhhEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %19, i8* %723, i32* %729, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %20, i64* %763, %"class.std::__1::function.1"* nonnull dereferenceable(32) %21)
  %769 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %766, align 8
  %770 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %769, i64 0, i32 1
  %771 = load void (i8*)*, void (i8*)** %770, align 8
  %772 = icmp eq void (i8*)* %771, null
  br i1 %772, label %776, label %773

773:                                              ; preds = %762
  %774 = getelementptr inbounds %"class.std::__1::function.1", %"class.std::__1::function.1"* %21, i64 0, i32 0, i32 0, i32 0
  %775 = load i8*, i8** %774, align 8
  call void %771(i8* %775) #6
  br label %776

776:                                              ; preds = %762, %773
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %764) #6
  %777 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  %778 = load i32, i32* %777, align 8
  %779 = icmp sgt i32 %778, 5
  br i1 %779, label %780, label %786

780:                                              ; preds = %776
  %781 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %782 = load i32*, i32** %781, align 8
  %783 = icmp eq i32* %782, null
  br i1 %783, label %786, label %784

784:                                              ; preds = %780
  %785 = bitcast i32* %782 to i8*
  call void @_ZdaPv(i8* %785) #7
  br label %786

786:                                              ; preds = %776, %780, %784
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %730) #6
  %787 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  %788 = load i32, i32* %787, align 8
  %789 = icmp sgt i32 %788, 5
  br i1 %789, label %790, label %796

790:                                              ; preds = %786
  %791 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %792 = load i32*, i32** %791, align 8
  %793 = icmp eq i32* %792, null
  br i1 %793, label %796, label %794

794:                                              ; preds = %790
  %795 = bitcast i32* %792 to i8*
  call void @_ZdaPv(i8* %795) #7
  br label %796

796:                                              ; preds = %786, %790, %794
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %690) #6
  br label %1905

797:                                              ; preds = %578
  %798 = bitcast %"class.tflite::RuntimeShape"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %798) #6
  %799 = icmp eq %struct.TfLiteTensor* %63, null
  br i1 %799, label %800, label %802

800:                                              ; preds = %797
  %801 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 0, i32* %801, align 8, !alias.scope !59
  br label %830

802:                                              ; preds = %797
  %803 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 2
  %804 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %803, align 8, !noalias !59
  %805 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %804, i64 0, i32 0
  %806 = load i32, i32* %805, align 4, !noalias !59
  %807 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %804, i64 0, i32 1, i64 0
  %808 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 %806, i32* %808, align 8, !alias.scope !59
  %809 = icmp sgt i32 %806, 5
  br i1 %809, label %810, label %817

810:                                              ; preds = %802
  %811 = sext i32 %806 to i64
  %812 = shl nsw i64 %811, 2
  %813 = tail call i8* @_Znam(i64 %812) #7, !noalias !59
  %814 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %815 = bitcast i32** %814 to i8**
  store i8* %813, i8** %815, align 8, !alias.scope !59
  %816 = bitcast i8* %813 to i32*
  br label %822

817:                                              ; preds = %802
  %818 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1
  %819 = bitcast %union.anon* %818 to i32*
  %820 = sext i32 %806 to i64
  %821 = shl nsw i64 %820, 2
  br label %822

822:                                              ; preds = %817, %810
  %823 = phi i64 [ %812, %810 ], [ %821, %817 ]
  %824 = phi i32* [ %816, %810 ], [ %819, %817 ]
  %825 = bitcast i32* %824 to i8*
  %826 = bitcast i32* %807 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %825, i8* align 4 %826, i64 %823, i1 false) #6
  %827 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 1
  %828 = bitcast %union.TfLitePtrUnion* %827 to i8**
  %829 = load i8*, i8** %828, align 8
  br label %830

830:                                              ; preds = %800, %822
  %831 = phi i8* [ %829, %822 ], [ null, %800 ]
  %832 = icmp eq %struct.TfLiteTensor* %73, null
  br i1 %832, label %836, label %833

833:                                              ; preds = %830
  %834 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %73, i64 0, i32 1, i32 0
  %835 = load i32*, i32** %834, align 8
  br label %836

836:                                              ; preds = %830, %833
  %837 = phi i32* [ %835, %833 ], [ null, %830 ]
  %838 = bitcast %"class.tflite::RuntimeShape"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %838) #6
  %839 = icmp eq %struct.TfLiteTensor* %85, null
  br i1 %839, label %840, label %842

840:                                              ; preds = %836
  %841 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  store i32 0, i32* %841, align 8, !alias.scope !62
  br label %870

842:                                              ; preds = %836
  %843 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 2
  %844 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %843, align 8, !noalias !62
  %845 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %844, i64 0, i32 0
  %846 = load i32, i32* %845, align 4, !noalias !62
  %847 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %844, i64 0, i32 1, i64 0
  %848 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  store i32 %846, i32* %848, align 8, !alias.scope !62
  %849 = icmp sgt i32 %846, 5
  br i1 %849, label %850, label %857

850:                                              ; preds = %842
  %851 = sext i32 %846 to i64
  %852 = shl nsw i64 %851, 2
  %853 = tail call i8* @_Znam(i64 %852) #7, !noalias !62
  %854 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1, i32 0
  %855 = bitcast i32** %854 to i8**
  store i8* %853, i8** %855, align 8, !alias.scope !62
  %856 = bitcast i8* %853 to i32*
  br label %862

857:                                              ; preds = %842
  %858 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1
  %859 = bitcast %union.anon* %858 to i32*
  %860 = sext i32 %846 to i64
  %861 = shl nsw i64 %860, 2
  br label %862

862:                                              ; preds = %857, %850
  %863 = phi i64 [ %852, %850 ], [ %861, %857 ]
  %864 = phi i32* [ %856, %850 ], [ %859, %857 ]
  %865 = bitcast i32* %864 to i8*
  %866 = bitcast i32* %847 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %865, i8* align 4 %866, i64 %863, i1 false) #6
  %867 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 1
  %868 = bitcast %union.TfLitePtrUnion* %867 to i64**
  %869 = load i64*, i64** %868, align 8
  br label %870

870:                                              ; preds = %840, %862
  %871 = phi i64* [ %869, %862 ], [ null, %840 ]
  %872 = bitcast %"class.std::__1::function.7"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %872) #6
  %873 = getelementptr inbounds %"class.std::__1::function.7", %"class.std::__1::function.7"* %24, i64 0, i32 0, i32 1, i32 0
  %874 = getelementptr inbounds %"class.std::__1::function.7", %"class.std::__1::function.7"* %24, i64 0, i32 0, i32 2
  %875 = select i1 %2, i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)* @_ZNSt3__110__function16__policy_invokerIFbaaEE11__call_implINS0_20__default_alloc_funcINS_7greaterIaEES2_EEEEbPKNS0_16__policy_storageEaa, i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)* @_ZNSt3__110__function16__policy_invokerIFbaaEE11__call_implINS0_20__default_alloc_funcINS_4lessIaEES2_EEEEbPKNS0_16__policy_storageEaa
  %876 = select i1 %2, %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_7greaterIaEEFbaaEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_4lessIaEEFbaaEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_
  store i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)* %875, i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)** %873, align 8, !alias.scope !65
  store %"struct.std::__1::__function::__policy"* %876, %"struct.std::__1::__function::__policy"** %874, align 8, !alias.scope !65
  call void @_ZN6tflite13reference_ops9ArgMinMaxIaliNSt3__18functionIFbaaEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %22, i8* %831, i32* %837, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %23, i64* %871, %"class.std::__1::function.7"* nonnull dereferenceable(32) %24)
  %877 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %874, align 8
  %878 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %877, i64 0, i32 1
  %879 = load void (i8*)*, void (i8*)** %878, align 8
  %880 = icmp eq void (i8*)* %879, null
  br i1 %880, label %884, label %881

881:                                              ; preds = %870
  %882 = getelementptr inbounds %"class.std::__1::function.7", %"class.std::__1::function.7"* %24, i64 0, i32 0, i32 0, i32 0
  %883 = load i8*, i8** %882, align 8
  call void %879(i8* %883) #6
  br label %884

884:                                              ; preds = %870, %881
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %872) #6
  %885 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  %886 = load i32, i32* %885, align 8
  %887 = icmp sgt i32 %886, 5
  br i1 %887, label %888, label %894

888:                                              ; preds = %884
  %889 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1, i32 0
  %890 = load i32*, i32** %889, align 8
  %891 = icmp eq i32* %890, null
  br i1 %891, label %894, label %892

892:                                              ; preds = %888
  %893 = bitcast i32* %890 to i8*
  call void @_ZdaPv(i8* %893) #7
  br label %894

894:                                              ; preds = %884, %888, %892
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %838) #6
  %895 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  %896 = load i32, i32* %895, align 8
  %897 = icmp sgt i32 %896, 5
  br i1 %897, label %898, label %904

898:                                              ; preds = %894
  %899 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %900 = load i32*, i32** %899, align 8
  %901 = icmp eq i32* %900, null
  br i1 %901, label %904, label %902

902:                                              ; preds = %898
  %903 = bitcast i32* %900 to i8*
  call void @_ZdaPv(i8* %903) #7
  br label %904

904:                                              ; preds = %894, %898, %902
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %798) #6
  br label %1905

905:                                              ; preds = %578
  %906 = bitcast %"class.tflite::RuntimeShape"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %906) #6
  %907 = icmp eq %struct.TfLiteTensor* %63, null
  br i1 %907, label %908, label %910

908:                                              ; preds = %905
  %909 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  store i32 0, i32* %909, align 8, !alias.scope !68
  br label %937

910:                                              ; preds = %905
  %911 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 2
  %912 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %911, align 8, !noalias !68
  %913 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %912, i64 0, i32 0
  %914 = load i32, i32* %913, align 4, !noalias !68
  %915 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %912, i64 0, i32 1, i64 0
  %916 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  store i32 %914, i32* %916, align 8, !alias.scope !68
  %917 = icmp sgt i32 %914, 5
  br i1 %917, label %918, label %925

918:                                              ; preds = %910
  %919 = sext i32 %914 to i64
  %920 = shl nsw i64 %919, 2
  %921 = tail call i8* @_Znam(i64 %920) #7, !noalias !68
  %922 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1, i32 0
  %923 = bitcast i32** %922 to i8**
  store i8* %921, i8** %923, align 8, !alias.scope !68
  %924 = bitcast i8* %921 to i32*
  br label %930

925:                                              ; preds = %910
  %926 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1
  %927 = bitcast %union.anon* %926 to i32*
  %928 = sext i32 %914 to i64
  %929 = shl nsw i64 %928, 2
  br label %930

930:                                              ; preds = %925, %918
  %931 = phi i64 [ %920, %918 ], [ %929, %925 ]
  %932 = phi i32* [ %924, %918 ], [ %927, %925 ]
  %933 = bitcast i32* %932 to i8*
  %934 = bitcast i32* %915 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %933, i8* align 4 %934, i64 %931, i1 false) #6
  %935 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 1, i32 0
  %936 = load i32*, i32** %935, align 8
  br label %937

937:                                              ; preds = %908, %930
  %938 = phi i32* [ %936, %930 ], [ null, %908 ]
  %939 = icmp eq %struct.TfLiteTensor* %73, null
  br i1 %939, label %943, label %940

940:                                              ; preds = %937
  %941 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %73, i64 0, i32 1, i32 0
  %942 = load i32*, i32** %941, align 8
  br label %943

943:                                              ; preds = %937, %940
  %944 = phi i32* [ %942, %940 ], [ null, %937 ]
  %945 = bitcast %"class.tflite::RuntimeShape"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %945) #6
  %946 = icmp eq %struct.TfLiteTensor* %85, null
  br i1 %946, label %947, label %949

947:                                              ; preds = %943
  %948 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  store i32 0, i32* %948, align 8, !alias.scope !71
  br label %977

949:                                              ; preds = %943
  %950 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 2
  %951 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %950, align 8, !noalias !71
  %952 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %951, i64 0, i32 0
  %953 = load i32, i32* %952, align 4, !noalias !71
  %954 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %951, i64 0, i32 1, i64 0
  %955 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  store i32 %953, i32* %955, align 8, !alias.scope !71
  %956 = icmp sgt i32 %953, 5
  br i1 %956, label %957, label %964

957:                                              ; preds = %949
  %958 = sext i32 %953 to i64
  %959 = shl nsw i64 %958, 2
  %960 = tail call i8* @_Znam(i64 %959) #7, !noalias !71
  %961 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1, i32 0
  %962 = bitcast i32** %961 to i8**
  store i8* %960, i8** %962, align 8, !alias.scope !71
  %963 = bitcast i8* %960 to i32*
  br label %969

964:                                              ; preds = %949
  %965 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1
  %966 = bitcast %union.anon* %965 to i32*
  %967 = sext i32 %953 to i64
  %968 = shl nsw i64 %967, 2
  br label %969

969:                                              ; preds = %964, %957
  %970 = phi i64 [ %959, %957 ], [ %968, %964 ]
  %971 = phi i32* [ %963, %957 ], [ %966, %964 ]
  %972 = bitcast i32* %971 to i8*
  %973 = bitcast i32* %954 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %972, i8* align 4 %973, i64 %970, i1 false) #6
  %974 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 1
  %975 = bitcast %union.TfLitePtrUnion* %974 to i64**
  %976 = load i64*, i64** %975, align 8
  br label %977

977:                                              ; preds = %947, %969
  %978 = phi i64* [ %976, %969 ], [ null, %947 ]
  %979 = bitcast %"class.std::__1::function.13"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %979) #6
  %980 = getelementptr inbounds %"class.std::__1::function.13", %"class.std::__1::function.13"* %27, i64 0, i32 0, i32 1, i32 0
  %981 = getelementptr inbounds %"class.std::__1::function.13", %"class.std::__1::function.13"* %27, i64 0, i32 0, i32 2
  %982 = select i1 %2, i1 (%"union.std::__1::__function::__policy_storage"*, i32, i32)* @_ZNSt3__110__function16__policy_invokerIFbiiEE11__call_implINS0_20__default_alloc_funcINS_7greaterIiEES2_EEEEbPKNS0_16__policy_storageEii, i1 (%"union.std::__1::__function::__policy_storage"*, i32, i32)* @_ZNSt3__110__function16__policy_invokerIFbiiEE11__call_implINS0_20__default_alloc_funcINS_4lessIiEES2_EEEEbPKNS0_16__policy_storageEii
  %983 = select i1 %2, %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_7greaterIiEEFbiiEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_4lessIiEEFbiiEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32, i32)* %982, i1 (%"union.std::__1::__function::__policy_storage"*, i32, i32)** %980, align 8, !alias.scope !74
  store %"struct.std::__1::__function::__policy"* %983, %"struct.std::__1::__function::__policy"** %981, align 8, !alias.scope !74
  call void @_ZN6tflite13reference_ops9ArgMinMaxIiliNSt3__18functionIFbiiEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %25, i32* %938, i32* %944, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %26, i64* %978, %"class.std::__1::function.13"* nonnull dereferenceable(32) %27)
  %984 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %981, align 8
  %985 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %984, i64 0, i32 1
  %986 = load void (i8*)*, void (i8*)** %985, align 8
  %987 = icmp eq void (i8*)* %986, null
  br i1 %987, label %991, label %988

988:                                              ; preds = %977
  %989 = getelementptr inbounds %"class.std::__1::function.13", %"class.std::__1::function.13"* %27, i64 0, i32 0, i32 0, i32 0
  %990 = load i8*, i8** %989, align 8
  call void %986(i8* %990) #6
  br label %991

991:                                              ; preds = %977, %988
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %979) #6
  %992 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  %993 = load i32, i32* %992, align 8
  %994 = icmp sgt i32 %993, 5
  br i1 %994, label %995, label %1001

995:                                              ; preds = %991
  %996 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1, i32 0
  %997 = load i32*, i32** %996, align 8
  %998 = icmp eq i32* %997, null
  br i1 %998, label %1001, label %999

999:                                              ; preds = %995
  %1000 = bitcast i32* %997 to i8*
  call void @_ZdaPv(i8* %1000) #7
  br label %1001

1001:                                             ; preds = %991, %995, %999
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %945) #6
  %1002 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  %1003 = load i32, i32* %1002, align 8
  %1004 = icmp sgt i32 %1003, 5
  br i1 %1004, label %1005, label %1011

1005:                                             ; preds = %1001
  %1006 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1, i32 0
  %1007 = load i32*, i32** %1006, align 8
  %1008 = icmp eq i32* %1007, null
  br i1 %1008, label %1011, label %1009

1009:                                             ; preds = %1005
  %1010 = bitcast i32* %1007 to i8*
  call void @_ZdaPv(i8* %1010) #7
  br label %1011

1011:                                             ; preds = %1001, %1005, %1009
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %906) #6
  br label %1905

1012:                                             ; preds = %578
  %1013 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1014 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1013, align 8
  %1015 = tail call i8* @TfLiteTypeGetName(i32 %580) #6
  tail call void (%struct.TfLiteContext*, i8*, ...) %1014(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.14, i64 0, i64 0), i8* %1015) #6
  br label %1905

1016:                                             ; preds = %143
  %1017 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1018 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1017, align 8
  %1019 = tail call i8* @TfLiteTypeGetName(i32 %142) #6
  tail call void (%struct.TfLiteContext*, i8*, ...) %1018(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.15, i64 0, i64 0), i8* %1019) #6
  br label %1905

1020:                                             ; preds = %137
  switch i32 %142, label %1901 [
    i32 2, label %1021
    i32 4, label %1459
  ]

1021:                                             ; preds = %1020
  %1022 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 0
  %1023 = load i32, i32* %1022, align 8
  switch i32 %1023, label %1455 [
    i32 1, label %1024
    i32 3, label %1132
    i32 9, label %1240
    i32 2, label %1348
  ]

1024:                                             ; preds = %1021
  %1025 = bitcast %"class.tflite::RuntimeShape"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1025) #6
  %1026 = icmp eq %struct.TfLiteTensor* %63, null
  br i1 %1026, label %1027, label %1029

1027:                                             ; preds = %1024
  %1028 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 0
  store i32 0, i32* %1028, align 8, !alias.scope !77
  br label %1057

1029:                                             ; preds = %1024
  %1030 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 2
  %1031 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1030, align 8, !noalias !77
  %1032 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1031, i64 0, i32 0
  %1033 = load i32, i32* %1032, align 4, !noalias !77
  %1034 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1031, i64 0, i32 1, i64 0
  %1035 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 0
  store i32 %1033, i32* %1035, align 8, !alias.scope !77
  %1036 = icmp sgt i32 %1033, 5
  br i1 %1036, label %1037, label %1044

1037:                                             ; preds = %1029
  %1038 = sext i32 %1033 to i64
  %1039 = shl nsw i64 %1038, 2
  %1040 = tail call i8* @_Znam(i64 %1039) #7, !noalias !77
  %1041 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 1, i32 0
  %1042 = bitcast i32** %1041 to i8**
  store i8* %1040, i8** %1042, align 8, !alias.scope !77
  %1043 = bitcast i8* %1040 to i32*
  br label %1049

1044:                                             ; preds = %1029
  %1045 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 1
  %1046 = bitcast %union.anon* %1045 to i32*
  %1047 = sext i32 %1033 to i64
  %1048 = shl nsw i64 %1047, 2
  br label %1049

1049:                                             ; preds = %1044, %1037
  %1050 = phi i64 [ %1039, %1037 ], [ %1048, %1044 ]
  %1051 = phi i32* [ %1043, %1037 ], [ %1046, %1044 ]
  %1052 = bitcast i32* %1051 to i8*
  %1053 = bitcast i32* %1034 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1052, i8* align 4 %1053, i64 %1050, i1 false) #6
  %1054 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 1
  %1055 = bitcast %union.TfLitePtrUnion* %1054 to float**
  %1056 = load float*, float** %1055, align 8
  br label %1057

1057:                                             ; preds = %1027, %1049
  %1058 = phi float* [ %1056, %1049 ], [ null, %1027 ]
  %1059 = icmp eq %struct.TfLiteTensor* %73, null
  br i1 %1059, label %1064, label %1060

1060:                                             ; preds = %1057
  %1061 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %73, i64 0, i32 1
  %1062 = bitcast %union.TfLitePtrUnion* %1061 to i64**
  %1063 = load i64*, i64** %1062, align 8
  br label %1064

1064:                                             ; preds = %1057, %1060
  %1065 = phi i64* [ %1063, %1060 ], [ null, %1057 ]
  %1066 = bitcast %"class.tflite::RuntimeShape"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1066) #6
  %1067 = icmp eq %struct.TfLiteTensor* %85, null
  br i1 %1067, label %1068, label %1070

1068:                                             ; preds = %1064
  %1069 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  store i32 0, i32* %1069, align 8, !alias.scope !80
  br label %1097

1070:                                             ; preds = %1064
  %1071 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 2
  %1072 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1071, align 8, !noalias !80
  %1073 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1072, i64 0, i32 0
  %1074 = load i32, i32* %1073, align 4, !noalias !80
  %1075 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1072, i64 0, i32 1, i64 0
  %1076 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  store i32 %1074, i32* %1076, align 8, !alias.scope !80
  %1077 = icmp sgt i32 %1074, 5
  br i1 %1077, label %1078, label %1085

1078:                                             ; preds = %1070
  %1079 = sext i32 %1074 to i64
  %1080 = shl nsw i64 %1079, 2
  %1081 = tail call i8* @_Znam(i64 %1080) #7, !noalias !80
  %1082 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1, i32 0
  %1083 = bitcast i32** %1082 to i8**
  store i8* %1081, i8** %1083, align 8, !alias.scope !80
  %1084 = bitcast i8* %1081 to i32*
  br label %1090

1085:                                             ; preds = %1070
  %1086 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1
  %1087 = bitcast %union.anon* %1086 to i32*
  %1088 = sext i32 %1074 to i64
  %1089 = shl nsw i64 %1088, 2
  br label %1090

1090:                                             ; preds = %1085, %1078
  %1091 = phi i64 [ %1080, %1078 ], [ %1089, %1085 ]
  %1092 = phi i32* [ %1084, %1078 ], [ %1087, %1085 ]
  %1093 = bitcast i32* %1092 to i8*
  %1094 = bitcast i32* %1075 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1093, i8* align 4 %1094, i64 %1091, i1 false) #6
  %1095 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 1, i32 0
  %1096 = load i32*, i32** %1095, align 8
  br label %1097

1097:                                             ; preds = %1068, %1090
  %1098 = phi i32* [ %1096, %1090 ], [ null, %1068 ]
  %1099 = bitcast %"class.std::__1::function"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1099) #6
  %1100 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %30, i64 0, i32 0, i32 1, i32 0
  %1101 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %30, i64 0, i32 0, i32 2
  %1102 = select i1 %2, i1 (%"union.std::__1::__function::__policy_storage"*, float, float)* @_ZNSt3__110__function16__policy_invokerIFbffEE11__call_implINS0_20__default_alloc_funcINS_7greaterIfEES2_EEEEbPKNS0_16__policy_storageEff, i1 (%"union.std::__1::__function::__policy_storage"*, float, float)* @_ZNSt3__110__function16__policy_invokerIFbffEE11__call_implINS0_20__default_alloc_funcINS_4lessIfEES2_EEEEbPKNS0_16__policy_storageEff
  %1103 = select i1 %2, %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_7greaterIfEEFbffEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_4lessIfEEFbffEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_
  store i1 (%"union.std::__1::__function::__policy_storage"*, float, float)* %1102, i1 (%"union.std::__1::__function::__policy_storage"*, float, float)** %1100, align 8, !alias.scope !83
  store %"struct.std::__1::__function::__policy"* %1103, %"struct.std::__1::__function::__policy"** %1101, align 8, !alias.scope !83
  call void @_ZN6tflite13reference_ops9ArgMinMaxIfilNSt3__18functionIFbffEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %28, float* %1058, i64* %1065, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %29, i32* %1098, %"class.std::__1::function"* nonnull dereferenceable(32) %30)
  %1104 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %1101, align 8
  %1105 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %1104, i64 0, i32 1
  %1106 = load void (i8*)*, void (i8*)** %1105, align 8
  %1107 = icmp eq void (i8*)* %1106, null
  br i1 %1107, label %1111, label %1108

1108:                                             ; preds = %1097
  %1109 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %30, i64 0, i32 0, i32 0, i32 0
  %1110 = load i8*, i8** %1109, align 8
  call void %1106(i8* %1110) #6
  br label %1111

1111:                                             ; preds = %1097, %1108
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1099) #6
  %1112 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  %1113 = load i32, i32* %1112, align 8
  %1114 = icmp sgt i32 %1113, 5
  br i1 %1114, label %1115, label %1121

1115:                                             ; preds = %1111
  %1116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1, i32 0
  %1117 = load i32*, i32** %1116, align 8
  %1118 = icmp eq i32* %1117, null
  br i1 %1118, label %1121, label %1119

1119:                                             ; preds = %1115
  %1120 = bitcast i32* %1117 to i8*
  call void @_ZdaPv(i8* %1120) #7
  br label %1121

1121:                                             ; preds = %1111, %1115, %1119
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1066) #6
  %1122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 0
  %1123 = load i32, i32* %1122, align 8
  %1124 = icmp sgt i32 %1123, 5
  br i1 %1124, label %1125, label %1131

1125:                                             ; preds = %1121
  %1126 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 1, i32 0
  %1127 = load i32*, i32** %1126, align 8
  %1128 = icmp eq i32* %1127, null
  br i1 %1128, label %1131, label %1129

1129:                                             ; preds = %1125
  %1130 = bitcast i32* %1127 to i8*
  call void @_ZdaPv(i8* %1130) #7
  br label %1131

1131:                                             ; preds = %1121, %1125, %1129
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1025) #6
  br label %1905

1132:                                             ; preds = %1021
  %1133 = bitcast %"class.tflite::RuntimeShape"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1133) #6
  %1134 = icmp eq %struct.TfLiteTensor* %63, null
  br i1 %1134, label %1135, label %1137

1135:                                             ; preds = %1132
  %1136 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 0
  store i32 0, i32* %1136, align 8, !alias.scope !86
  br label %1165

1137:                                             ; preds = %1132
  %1138 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 2
  %1139 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1138, align 8, !noalias !86
  %1140 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1139, i64 0, i32 0
  %1141 = load i32, i32* %1140, align 4, !noalias !86
  %1142 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1139, i64 0, i32 1, i64 0
  %1143 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 0
  store i32 %1141, i32* %1143, align 8, !alias.scope !86
  %1144 = icmp sgt i32 %1141, 5
  br i1 %1144, label %1145, label %1152

1145:                                             ; preds = %1137
  %1146 = sext i32 %1141 to i64
  %1147 = shl nsw i64 %1146, 2
  %1148 = tail call i8* @_Znam(i64 %1147) #7, !noalias !86
  %1149 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1, i32 0
  %1150 = bitcast i32** %1149 to i8**
  store i8* %1148, i8** %1150, align 8, !alias.scope !86
  %1151 = bitcast i8* %1148 to i32*
  br label %1157

1152:                                             ; preds = %1137
  %1153 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1
  %1154 = bitcast %union.anon* %1153 to i32*
  %1155 = sext i32 %1141 to i64
  %1156 = shl nsw i64 %1155, 2
  br label %1157

1157:                                             ; preds = %1152, %1145
  %1158 = phi i64 [ %1147, %1145 ], [ %1156, %1152 ]
  %1159 = phi i32* [ %1151, %1145 ], [ %1154, %1152 ]
  %1160 = bitcast i32* %1159 to i8*
  %1161 = bitcast i32* %1142 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1160, i8* align 4 %1161, i64 %1158, i1 false) #6
  %1162 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 1
  %1163 = bitcast %union.TfLitePtrUnion* %1162 to i8**
  %1164 = load i8*, i8** %1163, align 8
  br label %1165

1165:                                             ; preds = %1135, %1157
  %1166 = phi i8* [ %1164, %1157 ], [ null, %1135 ]
  %1167 = icmp eq %struct.TfLiteTensor* %73, null
  br i1 %1167, label %1172, label %1168

1168:                                             ; preds = %1165
  %1169 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %73, i64 0, i32 1
  %1170 = bitcast %union.TfLitePtrUnion* %1169 to i64**
  %1171 = load i64*, i64** %1170, align 8
  br label %1172

1172:                                             ; preds = %1165, %1168
  %1173 = phi i64* [ %1171, %1168 ], [ null, %1165 ]
  %1174 = bitcast %"class.tflite::RuntimeShape"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1174) #6
  %1175 = icmp eq %struct.TfLiteTensor* %85, null
  br i1 %1175, label %1176, label %1178

1176:                                             ; preds = %1172
  %1177 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 0
  store i32 0, i32* %1177, align 8, !alias.scope !89
  br label %1205

1178:                                             ; preds = %1172
  %1179 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 2
  %1180 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1179, align 8, !noalias !89
  %1181 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1180, i64 0, i32 0
  %1182 = load i32, i32* %1181, align 4, !noalias !89
  %1183 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1180, i64 0, i32 1, i64 0
  %1184 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 0
  store i32 %1182, i32* %1184, align 8, !alias.scope !89
  %1185 = icmp sgt i32 %1182, 5
  br i1 %1185, label %1186, label %1193

1186:                                             ; preds = %1178
  %1187 = sext i32 %1182 to i64
  %1188 = shl nsw i64 %1187, 2
  %1189 = tail call i8* @_Znam(i64 %1188) #7, !noalias !89
  %1190 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1, i32 0
  %1191 = bitcast i32** %1190 to i8**
  store i8* %1189, i8** %1191, align 8, !alias.scope !89
  %1192 = bitcast i8* %1189 to i32*
  br label %1198

1193:                                             ; preds = %1178
  %1194 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1
  %1195 = bitcast %union.anon* %1194 to i32*
  %1196 = sext i32 %1182 to i64
  %1197 = shl nsw i64 %1196, 2
  br label %1198

1198:                                             ; preds = %1193, %1186
  %1199 = phi i64 [ %1188, %1186 ], [ %1197, %1193 ]
  %1200 = phi i32* [ %1192, %1186 ], [ %1195, %1193 ]
  %1201 = bitcast i32* %1200 to i8*
  %1202 = bitcast i32* %1183 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1201, i8* align 4 %1202, i64 %1199, i1 false) #6
  %1203 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 1, i32 0
  %1204 = load i32*, i32** %1203, align 8
  br label %1205

1205:                                             ; preds = %1176, %1198
  %1206 = phi i32* [ %1204, %1198 ], [ null, %1176 ]
  %1207 = bitcast %"class.std::__1::function.1"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1207) #6
  %1208 = getelementptr inbounds %"class.std::__1::function.1", %"class.std::__1::function.1"* %33, i64 0, i32 0, i32 1, i32 0
  %1209 = getelementptr inbounds %"class.std::__1::function.1", %"class.std::__1::function.1"* %33, i64 0, i32 0, i32 2
  %1210 = select i1 %2, i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)* @_ZNSt3__110__function16__policy_invokerIFbhhEE11__call_implINS0_20__default_alloc_funcINS_7greaterIhEES2_EEEEbPKNS0_16__policy_storageEhh, i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)* @_ZNSt3__110__function16__policy_invokerIFbhhEE11__call_implINS0_20__default_alloc_funcINS_4lessIhEES2_EEEEbPKNS0_16__policy_storageEhh
  %1211 = select i1 %2, %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_7greaterIhEEFbhhEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_4lessIhEEFbhhEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_
  store i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)* %1210, i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)** %1208, align 8, !alias.scope !92
  store %"struct.std::__1::__function::__policy"* %1211, %"struct.std::__1::__function::__policy"** %1209, align 8, !alias.scope !92
  call void @_ZN6tflite13reference_ops9ArgMinMaxIhilNSt3__18functionIFbhhEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %31, i8* %1166, i64* %1173, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %32, i32* %1206, %"class.std::__1::function.1"* nonnull dereferenceable(32) %33)
  %1212 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %1209, align 8
  %1213 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %1212, i64 0, i32 1
  %1214 = load void (i8*)*, void (i8*)** %1213, align 8
  %1215 = icmp eq void (i8*)* %1214, null
  br i1 %1215, label %1219, label %1216

1216:                                             ; preds = %1205
  %1217 = getelementptr inbounds %"class.std::__1::function.1", %"class.std::__1::function.1"* %33, i64 0, i32 0, i32 0, i32 0
  %1218 = load i8*, i8** %1217, align 8
  call void %1214(i8* %1218) #6
  br label %1219

1219:                                             ; preds = %1205, %1216
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1207) #6
  %1220 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 0
  %1221 = load i32, i32* %1220, align 8
  %1222 = icmp sgt i32 %1221, 5
  br i1 %1222, label %1223, label %1229

1223:                                             ; preds = %1219
  %1224 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1, i32 0
  %1225 = load i32*, i32** %1224, align 8
  %1226 = icmp eq i32* %1225, null
  br i1 %1226, label %1229, label %1227

1227:                                             ; preds = %1223
  %1228 = bitcast i32* %1225 to i8*
  call void @_ZdaPv(i8* %1228) #7
  br label %1229

1229:                                             ; preds = %1219, %1223, %1227
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1174) #6
  %1230 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 0
  %1231 = load i32, i32* %1230, align 8
  %1232 = icmp sgt i32 %1231, 5
  br i1 %1232, label %1233, label %1239

1233:                                             ; preds = %1229
  %1234 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1, i32 0
  %1235 = load i32*, i32** %1234, align 8
  %1236 = icmp eq i32* %1235, null
  br i1 %1236, label %1239, label %1237

1237:                                             ; preds = %1233
  %1238 = bitcast i32* %1235 to i8*
  call void @_ZdaPv(i8* %1238) #7
  br label %1239

1239:                                             ; preds = %1229, %1233, %1237
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1133) #6
  br label %1905

1240:                                             ; preds = %1021
  %1241 = bitcast %"class.tflite::RuntimeShape"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1241) #6
  %1242 = icmp eq %struct.TfLiteTensor* %63, null
  br i1 %1242, label %1243, label %1245

1243:                                             ; preds = %1240
  %1244 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 0
  store i32 0, i32* %1244, align 8, !alias.scope !95
  br label %1273

1245:                                             ; preds = %1240
  %1246 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 2
  %1247 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1246, align 8, !noalias !95
  %1248 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1247, i64 0, i32 0
  %1249 = load i32, i32* %1248, align 4, !noalias !95
  %1250 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1247, i64 0, i32 1, i64 0
  %1251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 0
  store i32 %1249, i32* %1251, align 8, !alias.scope !95
  %1252 = icmp sgt i32 %1249, 5
  br i1 %1252, label %1253, label %1260

1253:                                             ; preds = %1245
  %1254 = sext i32 %1249 to i64
  %1255 = shl nsw i64 %1254, 2
  %1256 = tail call i8* @_Znam(i64 %1255) #7, !noalias !95
  %1257 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 1, i32 0
  %1258 = bitcast i32** %1257 to i8**
  store i8* %1256, i8** %1258, align 8, !alias.scope !95
  %1259 = bitcast i8* %1256 to i32*
  br label %1265

1260:                                             ; preds = %1245
  %1261 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 1
  %1262 = bitcast %union.anon* %1261 to i32*
  %1263 = sext i32 %1249 to i64
  %1264 = shl nsw i64 %1263, 2
  br label %1265

1265:                                             ; preds = %1260, %1253
  %1266 = phi i64 [ %1255, %1253 ], [ %1264, %1260 ]
  %1267 = phi i32* [ %1259, %1253 ], [ %1262, %1260 ]
  %1268 = bitcast i32* %1267 to i8*
  %1269 = bitcast i32* %1250 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1268, i8* align 4 %1269, i64 %1266, i1 false) #6
  %1270 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 1
  %1271 = bitcast %union.TfLitePtrUnion* %1270 to i8**
  %1272 = load i8*, i8** %1271, align 8
  br label %1273

1273:                                             ; preds = %1243, %1265
  %1274 = phi i8* [ %1272, %1265 ], [ null, %1243 ]
  %1275 = icmp eq %struct.TfLiteTensor* %73, null
  br i1 %1275, label %1280, label %1276

1276:                                             ; preds = %1273
  %1277 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %73, i64 0, i32 1
  %1278 = bitcast %union.TfLitePtrUnion* %1277 to i64**
  %1279 = load i64*, i64** %1278, align 8
  br label %1280

1280:                                             ; preds = %1273, %1276
  %1281 = phi i64* [ %1279, %1276 ], [ null, %1273 ]
  %1282 = bitcast %"class.tflite::RuntimeShape"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1282) #6
  %1283 = icmp eq %struct.TfLiteTensor* %85, null
  br i1 %1283, label %1284, label %1286

1284:                                             ; preds = %1280
  %1285 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %35, i64 0, i32 0
  store i32 0, i32* %1285, align 8, !alias.scope !98
  br label %1313

1286:                                             ; preds = %1280
  %1287 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 2
  %1288 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1287, align 8, !noalias !98
  %1289 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1288, i64 0, i32 0
  %1290 = load i32, i32* %1289, align 4, !noalias !98
  %1291 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1288, i64 0, i32 1, i64 0
  %1292 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %35, i64 0, i32 0
  store i32 %1290, i32* %1292, align 8, !alias.scope !98
  %1293 = icmp sgt i32 %1290, 5
  br i1 %1293, label %1294, label %1301

1294:                                             ; preds = %1286
  %1295 = sext i32 %1290 to i64
  %1296 = shl nsw i64 %1295, 2
  %1297 = tail call i8* @_Znam(i64 %1296) #7, !noalias !98
  %1298 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %35, i64 0, i32 1, i32 0
  %1299 = bitcast i32** %1298 to i8**
  store i8* %1297, i8** %1299, align 8, !alias.scope !98
  %1300 = bitcast i8* %1297 to i32*
  br label %1306

1301:                                             ; preds = %1286
  %1302 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %35, i64 0, i32 1
  %1303 = bitcast %union.anon* %1302 to i32*
  %1304 = sext i32 %1290 to i64
  %1305 = shl nsw i64 %1304, 2
  br label %1306

1306:                                             ; preds = %1301, %1294
  %1307 = phi i64 [ %1296, %1294 ], [ %1305, %1301 ]
  %1308 = phi i32* [ %1300, %1294 ], [ %1303, %1301 ]
  %1309 = bitcast i32* %1308 to i8*
  %1310 = bitcast i32* %1291 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1309, i8* align 4 %1310, i64 %1307, i1 false) #6
  %1311 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 1, i32 0
  %1312 = load i32*, i32** %1311, align 8
  br label %1313

1313:                                             ; preds = %1284, %1306
  %1314 = phi i32* [ %1312, %1306 ], [ null, %1284 ]
  %1315 = bitcast %"class.std::__1::function.7"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1315) #6
  %1316 = getelementptr inbounds %"class.std::__1::function.7", %"class.std::__1::function.7"* %36, i64 0, i32 0, i32 1, i32 0
  %1317 = getelementptr inbounds %"class.std::__1::function.7", %"class.std::__1::function.7"* %36, i64 0, i32 0, i32 2
  %1318 = select i1 %2, i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)* @_ZNSt3__110__function16__policy_invokerIFbaaEE11__call_implINS0_20__default_alloc_funcINS_7greaterIaEES2_EEEEbPKNS0_16__policy_storageEaa, i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)* @_ZNSt3__110__function16__policy_invokerIFbaaEE11__call_implINS0_20__default_alloc_funcINS_4lessIaEES2_EEEEbPKNS0_16__policy_storageEaa
  %1319 = select i1 %2, %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_7greaterIaEEFbaaEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_4lessIaEEFbaaEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_
  store i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)* %1318, i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)** %1316, align 8, !alias.scope !101
  store %"struct.std::__1::__function::__policy"* %1319, %"struct.std::__1::__function::__policy"** %1317, align 8, !alias.scope !101
  call void @_ZN6tflite13reference_ops9ArgMinMaxIailNSt3__18functionIFbaaEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %34, i8* %1274, i64* %1281, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %35, i32* %1314, %"class.std::__1::function.7"* nonnull dereferenceable(32) %36)
  %1320 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %1317, align 8
  %1321 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %1320, i64 0, i32 1
  %1322 = load void (i8*)*, void (i8*)** %1321, align 8
  %1323 = icmp eq void (i8*)* %1322, null
  br i1 %1323, label %1327, label %1324

1324:                                             ; preds = %1313
  %1325 = getelementptr inbounds %"class.std::__1::function.7", %"class.std::__1::function.7"* %36, i64 0, i32 0, i32 0, i32 0
  %1326 = load i8*, i8** %1325, align 8
  call void %1322(i8* %1326) #6
  br label %1327

1327:                                             ; preds = %1313, %1324
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1315) #6
  %1328 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %35, i64 0, i32 0
  %1329 = load i32, i32* %1328, align 8
  %1330 = icmp sgt i32 %1329, 5
  br i1 %1330, label %1331, label %1337

1331:                                             ; preds = %1327
  %1332 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %35, i64 0, i32 1, i32 0
  %1333 = load i32*, i32** %1332, align 8
  %1334 = icmp eq i32* %1333, null
  br i1 %1334, label %1337, label %1335

1335:                                             ; preds = %1331
  %1336 = bitcast i32* %1333 to i8*
  call void @_ZdaPv(i8* %1336) #7
  br label %1337

1337:                                             ; preds = %1327, %1331, %1335
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1282) #6
  %1338 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 0
  %1339 = load i32, i32* %1338, align 8
  %1340 = icmp sgt i32 %1339, 5
  br i1 %1340, label %1341, label %1347

1341:                                             ; preds = %1337
  %1342 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 1, i32 0
  %1343 = load i32*, i32** %1342, align 8
  %1344 = icmp eq i32* %1343, null
  br i1 %1344, label %1347, label %1345

1345:                                             ; preds = %1341
  %1346 = bitcast i32* %1343 to i8*
  call void @_ZdaPv(i8* %1346) #7
  br label %1347

1347:                                             ; preds = %1337, %1341, %1345
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1241) #6
  br label %1905

1348:                                             ; preds = %1021
  %1349 = bitcast %"class.tflite::RuntimeShape"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1349) #6
  %1350 = icmp eq %struct.TfLiteTensor* %63, null
  br i1 %1350, label %1351, label %1353

1351:                                             ; preds = %1348
  %1352 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %37, i64 0, i32 0
  store i32 0, i32* %1352, align 8, !alias.scope !104
  br label %1380

1353:                                             ; preds = %1348
  %1354 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 2
  %1355 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1354, align 8, !noalias !104
  %1356 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1355, i64 0, i32 0
  %1357 = load i32, i32* %1356, align 4, !noalias !104
  %1358 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1355, i64 0, i32 1, i64 0
  %1359 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %37, i64 0, i32 0
  store i32 %1357, i32* %1359, align 8, !alias.scope !104
  %1360 = icmp sgt i32 %1357, 5
  br i1 %1360, label %1361, label %1368

1361:                                             ; preds = %1353
  %1362 = sext i32 %1357 to i64
  %1363 = shl nsw i64 %1362, 2
  %1364 = tail call i8* @_Znam(i64 %1363) #7, !noalias !104
  %1365 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %37, i64 0, i32 1, i32 0
  %1366 = bitcast i32** %1365 to i8**
  store i8* %1364, i8** %1366, align 8, !alias.scope !104
  %1367 = bitcast i8* %1364 to i32*
  br label %1373

1368:                                             ; preds = %1353
  %1369 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %37, i64 0, i32 1
  %1370 = bitcast %union.anon* %1369 to i32*
  %1371 = sext i32 %1357 to i64
  %1372 = shl nsw i64 %1371, 2
  br label %1373

1373:                                             ; preds = %1368, %1361
  %1374 = phi i64 [ %1363, %1361 ], [ %1372, %1368 ]
  %1375 = phi i32* [ %1367, %1361 ], [ %1370, %1368 ]
  %1376 = bitcast i32* %1375 to i8*
  %1377 = bitcast i32* %1358 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1376, i8* align 4 %1377, i64 %1374, i1 false) #6
  %1378 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 1, i32 0
  %1379 = load i32*, i32** %1378, align 8
  br label %1380

1380:                                             ; preds = %1351, %1373
  %1381 = phi i32* [ %1379, %1373 ], [ null, %1351 ]
  %1382 = icmp eq %struct.TfLiteTensor* %73, null
  br i1 %1382, label %1387, label %1383

1383:                                             ; preds = %1380
  %1384 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %73, i64 0, i32 1
  %1385 = bitcast %union.TfLitePtrUnion* %1384 to i64**
  %1386 = load i64*, i64** %1385, align 8
  br label %1387

1387:                                             ; preds = %1380, %1383
  %1388 = phi i64* [ %1386, %1383 ], [ null, %1380 ]
  %1389 = bitcast %"class.tflite::RuntimeShape"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1389) #6
  %1390 = icmp eq %struct.TfLiteTensor* %85, null
  br i1 %1390, label %1391, label %1393

1391:                                             ; preds = %1387
  %1392 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %38, i64 0, i32 0
  store i32 0, i32* %1392, align 8, !alias.scope !107
  br label %1420

1393:                                             ; preds = %1387
  %1394 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 2
  %1395 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1394, align 8, !noalias !107
  %1396 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1395, i64 0, i32 0
  %1397 = load i32, i32* %1396, align 4, !noalias !107
  %1398 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1395, i64 0, i32 1, i64 0
  %1399 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %38, i64 0, i32 0
  store i32 %1397, i32* %1399, align 8, !alias.scope !107
  %1400 = icmp sgt i32 %1397, 5
  br i1 %1400, label %1401, label %1408

1401:                                             ; preds = %1393
  %1402 = sext i32 %1397 to i64
  %1403 = shl nsw i64 %1402, 2
  %1404 = tail call i8* @_Znam(i64 %1403) #7, !noalias !107
  %1405 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %38, i64 0, i32 1, i32 0
  %1406 = bitcast i32** %1405 to i8**
  store i8* %1404, i8** %1406, align 8, !alias.scope !107
  %1407 = bitcast i8* %1404 to i32*
  br label %1413

1408:                                             ; preds = %1393
  %1409 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %38, i64 0, i32 1
  %1410 = bitcast %union.anon* %1409 to i32*
  %1411 = sext i32 %1397 to i64
  %1412 = shl nsw i64 %1411, 2
  br label %1413

1413:                                             ; preds = %1408, %1401
  %1414 = phi i64 [ %1403, %1401 ], [ %1412, %1408 ]
  %1415 = phi i32* [ %1407, %1401 ], [ %1410, %1408 ]
  %1416 = bitcast i32* %1415 to i8*
  %1417 = bitcast i32* %1398 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1416, i8* align 4 %1417, i64 %1414, i1 false) #6
  %1418 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 1, i32 0
  %1419 = load i32*, i32** %1418, align 8
  br label %1420

1420:                                             ; preds = %1391, %1413
  %1421 = phi i32* [ %1419, %1413 ], [ null, %1391 ]
  %1422 = bitcast %"class.std::__1::function.13"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1422) #6
  %1423 = getelementptr inbounds %"class.std::__1::function.13", %"class.std::__1::function.13"* %39, i64 0, i32 0, i32 1, i32 0
  %1424 = getelementptr inbounds %"class.std::__1::function.13", %"class.std::__1::function.13"* %39, i64 0, i32 0, i32 2
  %1425 = select i1 %2, i1 (%"union.std::__1::__function::__policy_storage"*, i32, i32)* @_ZNSt3__110__function16__policy_invokerIFbiiEE11__call_implINS0_20__default_alloc_funcINS_7greaterIiEES2_EEEEbPKNS0_16__policy_storageEii, i1 (%"union.std::__1::__function::__policy_storage"*, i32, i32)* @_ZNSt3__110__function16__policy_invokerIFbiiEE11__call_implINS0_20__default_alloc_funcINS_4lessIiEES2_EEEEbPKNS0_16__policy_storageEii
  %1426 = select i1 %2, %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_7greaterIiEEFbiiEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_4lessIiEEFbiiEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32, i32)* %1425, i1 (%"union.std::__1::__function::__policy_storage"*, i32, i32)** %1423, align 8, !alias.scope !110
  store %"struct.std::__1::__function::__policy"* %1426, %"struct.std::__1::__function::__policy"** %1424, align 8, !alias.scope !110
  call void @_ZN6tflite13reference_ops9ArgMinMaxIiilNSt3__18functionIFbiiEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %37, i32* %1381, i64* %1388, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %38, i32* %1421, %"class.std::__1::function.13"* nonnull dereferenceable(32) %39)
  %1427 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %1424, align 8
  %1428 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %1427, i64 0, i32 1
  %1429 = load void (i8*)*, void (i8*)** %1428, align 8
  %1430 = icmp eq void (i8*)* %1429, null
  br i1 %1430, label %1434, label %1431

1431:                                             ; preds = %1420
  %1432 = getelementptr inbounds %"class.std::__1::function.13", %"class.std::__1::function.13"* %39, i64 0, i32 0, i32 0, i32 0
  %1433 = load i8*, i8** %1432, align 8
  call void %1429(i8* %1433) #6
  br label %1434

1434:                                             ; preds = %1420, %1431
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1422) #6
  %1435 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %38, i64 0, i32 0
  %1436 = load i32, i32* %1435, align 8
  %1437 = icmp sgt i32 %1436, 5
  br i1 %1437, label %1438, label %1444

1438:                                             ; preds = %1434
  %1439 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %38, i64 0, i32 1, i32 0
  %1440 = load i32*, i32** %1439, align 8
  %1441 = icmp eq i32* %1440, null
  br i1 %1441, label %1444, label %1442

1442:                                             ; preds = %1438
  %1443 = bitcast i32* %1440 to i8*
  call void @_ZdaPv(i8* %1443) #7
  br label %1444

1444:                                             ; preds = %1434, %1438, %1442
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1389) #6
  %1445 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %37, i64 0, i32 0
  %1446 = load i32, i32* %1445, align 8
  %1447 = icmp sgt i32 %1446, 5
  br i1 %1447, label %1448, label %1454

1448:                                             ; preds = %1444
  %1449 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %37, i64 0, i32 1, i32 0
  %1450 = load i32*, i32** %1449, align 8
  %1451 = icmp eq i32* %1450, null
  br i1 %1451, label %1454, label %1452

1452:                                             ; preds = %1448
  %1453 = bitcast i32* %1450 to i8*
  call void @_ZdaPv(i8* %1453) #7
  br label %1454

1454:                                             ; preds = %1444, %1448, %1452
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1349) #6
  br label %1905

1455:                                             ; preds = %1021
  %1456 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1457 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1456, align 8
  %1458 = tail call i8* @TfLiteTypeGetName(i32 %1023) #6
  tail call void (%struct.TfLiteContext*, i8*, ...) %1457(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.14, i64 0, i64 0), i8* %1458) #6
  br label %1905

1459:                                             ; preds = %1020
  %1460 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 0
  %1461 = load i32, i32* %1460, align 8
  switch i32 %1461, label %1897 [
    i32 1, label %1462
    i32 3, label %1571
    i32 9, label %1680
    i32 2, label %1789
  ]

1462:                                             ; preds = %1459
  %1463 = bitcast %"class.tflite::RuntimeShape"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1463) #6
  %1464 = icmp eq %struct.TfLiteTensor* %63, null
  br i1 %1464, label %1465, label %1467

1465:                                             ; preds = %1462
  %1466 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 0
  store i32 0, i32* %1466, align 8, !alias.scope !113
  br label %1495

1467:                                             ; preds = %1462
  %1468 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 2
  %1469 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1468, align 8, !noalias !113
  %1470 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1469, i64 0, i32 0
  %1471 = load i32, i32* %1470, align 4, !noalias !113
  %1472 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1469, i64 0, i32 1, i64 0
  %1473 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 0
  store i32 %1471, i32* %1473, align 8, !alias.scope !113
  %1474 = icmp sgt i32 %1471, 5
  br i1 %1474, label %1475, label %1482

1475:                                             ; preds = %1467
  %1476 = sext i32 %1471 to i64
  %1477 = shl nsw i64 %1476, 2
  %1478 = tail call i8* @_Znam(i64 %1477) #7, !noalias !113
  %1479 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 1, i32 0
  %1480 = bitcast i32** %1479 to i8**
  store i8* %1478, i8** %1480, align 8, !alias.scope !113
  %1481 = bitcast i8* %1478 to i32*
  br label %1487

1482:                                             ; preds = %1467
  %1483 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 1
  %1484 = bitcast %union.anon* %1483 to i32*
  %1485 = sext i32 %1471 to i64
  %1486 = shl nsw i64 %1485, 2
  br label %1487

1487:                                             ; preds = %1482, %1475
  %1488 = phi i64 [ %1477, %1475 ], [ %1486, %1482 ]
  %1489 = phi i32* [ %1481, %1475 ], [ %1484, %1482 ]
  %1490 = bitcast i32* %1489 to i8*
  %1491 = bitcast i32* %1472 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1490, i8* align 4 %1491, i64 %1488, i1 false) #6
  %1492 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 1
  %1493 = bitcast %union.TfLitePtrUnion* %1492 to float**
  %1494 = load float*, float** %1493, align 8
  br label %1495

1495:                                             ; preds = %1465, %1487
  %1496 = phi float* [ %1494, %1487 ], [ null, %1465 ]
  %1497 = icmp eq %struct.TfLiteTensor* %73, null
  br i1 %1497, label %1502, label %1498

1498:                                             ; preds = %1495
  %1499 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %73, i64 0, i32 1
  %1500 = bitcast %union.TfLitePtrUnion* %1499 to i64**
  %1501 = load i64*, i64** %1500, align 8
  br label %1502

1502:                                             ; preds = %1495, %1498
  %1503 = phi i64* [ %1501, %1498 ], [ null, %1495 ]
  %1504 = bitcast %"class.tflite::RuntimeShape"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1504) #6
  %1505 = icmp eq %struct.TfLiteTensor* %85, null
  br i1 %1505, label %1506, label %1508

1506:                                             ; preds = %1502
  %1507 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 0
  store i32 0, i32* %1507, align 8, !alias.scope !116
  br label %1536

1508:                                             ; preds = %1502
  %1509 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 2
  %1510 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1509, align 8, !noalias !116
  %1511 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1510, i64 0, i32 0
  %1512 = load i32, i32* %1511, align 4, !noalias !116
  %1513 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1510, i64 0, i32 1, i64 0
  %1514 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 0
  store i32 %1512, i32* %1514, align 8, !alias.scope !116
  %1515 = icmp sgt i32 %1512, 5
  br i1 %1515, label %1516, label %1523

1516:                                             ; preds = %1508
  %1517 = sext i32 %1512 to i64
  %1518 = shl nsw i64 %1517, 2
  %1519 = tail call i8* @_Znam(i64 %1518) #7, !noalias !116
  %1520 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 1, i32 0
  %1521 = bitcast i32** %1520 to i8**
  store i8* %1519, i8** %1521, align 8, !alias.scope !116
  %1522 = bitcast i8* %1519 to i32*
  br label %1528

1523:                                             ; preds = %1508
  %1524 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 1
  %1525 = bitcast %union.anon* %1524 to i32*
  %1526 = sext i32 %1512 to i64
  %1527 = shl nsw i64 %1526, 2
  br label %1528

1528:                                             ; preds = %1523, %1516
  %1529 = phi i64 [ %1518, %1516 ], [ %1527, %1523 ]
  %1530 = phi i32* [ %1522, %1516 ], [ %1525, %1523 ]
  %1531 = bitcast i32* %1530 to i8*
  %1532 = bitcast i32* %1513 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1531, i8* align 4 %1532, i64 %1529, i1 false) #6
  %1533 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 1
  %1534 = bitcast %union.TfLitePtrUnion* %1533 to i64**
  %1535 = load i64*, i64** %1534, align 8
  br label %1536

1536:                                             ; preds = %1506, %1528
  %1537 = phi i64* [ %1535, %1528 ], [ null, %1506 ]
  %1538 = bitcast %"class.std::__1::function"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1538) #6
  %1539 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %42, i64 0, i32 0, i32 1, i32 0
  %1540 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %42, i64 0, i32 0, i32 2
  %1541 = select i1 %2, i1 (%"union.std::__1::__function::__policy_storage"*, float, float)* @_ZNSt3__110__function16__policy_invokerIFbffEE11__call_implINS0_20__default_alloc_funcINS_7greaterIfEES2_EEEEbPKNS0_16__policy_storageEff, i1 (%"union.std::__1::__function::__policy_storage"*, float, float)* @_ZNSt3__110__function16__policy_invokerIFbffEE11__call_implINS0_20__default_alloc_funcINS_4lessIfEES2_EEEEbPKNS0_16__policy_storageEff
  %1542 = select i1 %2, %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_7greaterIfEEFbffEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_4lessIfEEFbffEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_
  store i1 (%"union.std::__1::__function::__policy_storage"*, float, float)* %1541, i1 (%"union.std::__1::__function::__policy_storage"*, float, float)** %1539, align 8, !alias.scope !119
  store %"struct.std::__1::__function::__policy"* %1542, %"struct.std::__1::__function::__policy"** %1540, align 8, !alias.scope !119
  call void @_ZN6tflite13reference_ops9ArgMinMaxIfllNSt3__18functionIFbffEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %40, float* %1496, i64* %1503, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %41, i64* %1537, %"class.std::__1::function"* nonnull dereferenceable(32) %42)
  %1543 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %1540, align 8
  %1544 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %1543, i64 0, i32 1
  %1545 = load void (i8*)*, void (i8*)** %1544, align 8
  %1546 = icmp eq void (i8*)* %1545, null
  br i1 %1546, label %1550, label %1547

1547:                                             ; preds = %1536
  %1548 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %42, i64 0, i32 0, i32 0, i32 0
  %1549 = load i8*, i8** %1548, align 8
  call void %1545(i8* %1549) #6
  br label %1550

1550:                                             ; preds = %1536, %1547
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1538) #6
  %1551 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 0
  %1552 = load i32, i32* %1551, align 8
  %1553 = icmp sgt i32 %1552, 5
  br i1 %1553, label %1554, label %1560

1554:                                             ; preds = %1550
  %1555 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 1, i32 0
  %1556 = load i32*, i32** %1555, align 8
  %1557 = icmp eq i32* %1556, null
  br i1 %1557, label %1560, label %1558

1558:                                             ; preds = %1554
  %1559 = bitcast i32* %1556 to i8*
  call void @_ZdaPv(i8* %1559) #7
  br label %1560

1560:                                             ; preds = %1550, %1554, %1558
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1504) #6
  %1561 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 0
  %1562 = load i32, i32* %1561, align 8
  %1563 = icmp sgt i32 %1562, 5
  br i1 %1563, label %1564, label %1570

1564:                                             ; preds = %1560
  %1565 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 1, i32 0
  %1566 = load i32*, i32** %1565, align 8
  %1567 = icmp eq i32* %1566, null
  br i1 %1567, label %1570, label %1568

1568:                                             ; preds = %1564
  %1569 = bitcast i32* %1566 to i8*
  call void @_ZdaPv(i8* %1569) #7
  br label %1570

1570:                                             ; preds = %1560, %1564, %1568
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1463) #6
  br label %1905

1571:                                             ; preds = %1459
  %1572 = bitcast %"class.tflite::RuntimeShape"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1572) #6
  %1573 = icmp eq %struct.TfLiteTensor* %63, null
  br i1 %1573, label %1574, label %1576

1574:                                             ; preds = %1571
  %1575 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %43, i64 0, i32 0
  store i32 0, i32* %1575, align 8, !alias.scope !122
  br label %1604

1576:                                             ; preds = %1571
  %1577 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 2
  %1578 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1577, align 8, !noalias !122
  %1579 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1578, i64 0, i32 0
  %1580 = load i32, i32* %1579, align 4, !noalias !122
  %1581 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1578, i64 0, i32 1, i64 0
  %1582 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %43, i64 0, i32 0
  store i32 %1580, i32* %1582, align 8, !alias.scope !122
  %1583 = icmp sgt i32 %1580, 5
  br i1 %1583, label %1584, label %1591

1584:                                             ; preds = %1576
  %1585 = sext i32 %1580 to i64
  %1586 = shl nsw i64 %1585, 2
  %1587 = tail call i8* @_Znam(i64 %1586) #7, !noalias !122
  %1588 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %43, i64 0, i32 1, i32 0
  %1589 = bitcast i32** %1588 to i8**
  store i8* %1587, i8** %1589, align 8, !alias.scope !122
  %1590 = bitcast i8* %1587 to i32*
  br label %1596

1591:                                             ; preds = %1576
  %1592 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %43, i64 0, i32 1
  %1593 = bitcast %union.anon* %1592 to i32*
  %1594 = sext i32 %1580 to i64
  %1595 = shl nsw i64 %1594, 2
  br label %1596

1596:                                             ; preds = %1591, %1584
  %1597 = phi i64 [ %1586, %1584 ], [ %1595, %1591 ]
  %1598 = phi i32* [ %1590, %1584 ], [ %1593, %1591 ]
  %1599 = bitcast i32* %1598 to i8*
  %1600 = bitcast i32* %1581 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1599, i8* align 4 %1600, i64 %1597, i1 false) #6
  %1601 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 1
  %1602 = bitcast %union.TfLitePtrUnion* %1601 to i8**
  %1603 = load i8*, i8** %1602, align 8
  br label %1604

1604:                                             ; preds = %1574, %1596
  %1605 = phi i8* [ %1603, %1596 ], [ null, %1574 ]
  %1606 = icmp eq %struct.TfLiteTensor* %73, null
  br i1 %1606, label %1611, label %1607

1607:                                             ; preds = %1604
  %1608 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %73, i64 0, i32 1
  %1609 = bitcast %union.TfLitePtrUnion* %1608 to i64**
  %1610 = load i64*, i64** %1609, align 8
  br label %1611

1611:                                             ; preds = %1604, %1607
  %1612 = phi i64* [ %1610, %1607 ], [ null, %1604 ]
  %1613 = bitcast %"class.tflite::RuntimeShape"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1613) #6
  %1614 = icmp eq %struct.TfLiteTensor* %85, null
  br i1 %1614, label %1615, label %1617

1615:                                             ; preds = %1611
  %1616 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %44, i64 0, i32 0
  store i32 0, i32* %1616, align 8, !alias.scope !125
  br label %1645

1617:                                             ; preds = %1611
  %1618 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 2
  %1619 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1618, align 8, !noalias !125
  %1620 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1619, i64 0, i32 0
  %1621 = load i32, i32* %1620, align 4, !noalias !125
  %1622 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1619, i64 0, i32 1, i64 0
  %1623 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %44, i64 0, i32 0
  store i32 %1621, i32* %1623, align 8, !alias.scope !125
  %1624 = icmp sgt i32 %1621, 5
  br i1 %1624, label %1625, label %1632

1625:                                             ; preds = %1617
  %1626 = sext i32 %1621 to i64
  %1627 = shl nsw i64 %1626, 2
  %1628 = tail call i8* @_Znam(i64 %1627) #7, !noalias !125
  %1629 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %44, i64 0, i32 1, i32 0
  %1630 = bitcast i32** %1629 to i8**
  store i8* %1628, i8** %1630, align 8, !alias.scope !125
  %1631 = bitcast i8* %1628 to i32*
  br label %1637

1632:                                             ; preds = %1617
  %1633 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %44, i64 0, i32 1
  %1634 = bitcast %union.anon* %1633 to i32*
  %1635 = sext i32 %1621 to i64
  %1636 = shl nsw i64 %1635, 2
  br label %1637

1637:                                             ; preds = %1632, %1625
  %1638 = phi i64 [ %1627, %1625 ], [ %1636, %1632 ]
  %1639 = phi i32* [ %1631, %1625 ], [ %1634, %1632 ]
  %1640 = bitcast i32* %1639 to i8*
  %1641 = bitcast i32* %1622 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1640, i8* align 4 %1641, i64 %1638, i1 false) #6
  %1642 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 1
  %1643 = bitcast %union.TfLitePtrUnion* %1642 to i64**
  %1644 = load i64*, i64** %1643, align 8
  br label %1645

1645:                                             ; preds = %1615, %1637
  %1646 = phi i64* [ %1644, %1637 ], [ null, %1615 ]
  %1647 = bitcast %"class.std::__1::function.1"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1647) #6
  %1648 = getelementptr inbounds %"class.std::__1::function.1", %"class.std::__1::function.1"* %45, i64 0, i32 0, i32 1, i32 0
  %1649 = getelementptr inbounds %"class.std::__1::function.1", %"class.std::__1::function.1"* %45, i64 0, i32 0, i32 2
  %1650 = select i1 %2, i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)* @_ZNSt3__110__function16__policy_invokerIFbhhEE11__call_implINS0_20__default_alloc_funcINS_7greaterIhEES2_EEEEbPKNS0_16__policy_storageEhh, i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)* @_ZNSt3__110__function16__policy_invokerIFbhhEE11__call_implINS0_20__default_alloc_funcINS_4lessIhEES2_EEEEbPKNS0_16__policy_storageEhh
  %1651 = select i1 %2, %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_7greaterIhEEFbhhEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_4lessIhEEFbhhEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_
  store i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)* %1650, i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)** %1648, align 8, !alias.scope !128
  store %"struct.std::__1::__function::__policy"* %1651, %"struct.std::__1::__function::__policy"** %1649, align 8, !alias.scope !128
  call void @_ZN6tflite13reference_ops9ArgMinMaxIhllNSt3__18functionIFbhhEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %43, i8* %1605, i64* %1612, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %44, i64* %1646, %"class.std::__1::function.1"* nonnull dereferenceable(32) %45)
  %1652 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %1649, align 8
  %1653 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %1652, i64 0, i32 1
  %1654 = load void (i8*)*, void (i8*)** %1653, align 8
  %1655 = icmp eq void (i8*)* %1654, null
  br i1 %1655, label %1659, label %1656

1656:                                             ; preds = %1645
  %1657 = getelementptr inbounds %"class.std::__1::function.1", %"class.std::__1::function.1"* %45, i64 0, i32 0, i32 0, i32 0
  %1658 = load i8*, i8** %1657, align 8
  call void %1654(i8* %1658) #6
  br label %1659

1659:                                             ; preds = %1645, %1656
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1647) #6
  %1660 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %44, i64 0, i32 0
  %1661 = load i32, i32* %1660, align 8
  %1662 = icmp sgt i32 %1661, 5
  br i1 %1662, label %1663, label %1669

1663:                                             ; preds = %1659
  %1664 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %44, i64 0, i32 1, i32 0
  %1665 = load i32*, i32** %1664, align 8
  %1666 = icmp eq i32* %1665, null
  br i1 %1666, label %1669, label %1667

1667:                                             ; preds = %1663
  %1668 = bitcast i32* %1665 to i8*
  call void @_ZdaPv(i8* %1668) #7
  br label %1669

1669:                                             ; preds = %1659, %1663, %1667
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1613) #6
  %1670 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %43, i64 0, i32 0
  %1671 = load i32, i32* %1670, align 8
  %1672 = icmp sgt i32 %1671, 5
  br i1 %1672, label %1673, label %1679

1673:                                             ; preds = %1669
  %1674 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %43, i64 0, i32 1, i32 0
  %1675 = load i32*, i32** %1674, align 8
  %1676 = icmp eq i32* %1675, null
  br i1 %1676, label %1679, label %1677

1677:                                             ; preds = %1673
  %1678 = bitcast i32* %1675 to i8*
  call void @_ZdaPv(i8* %1678) #7
  br label %1679

1679:                                             ; preds = %1669, %1673, %1677
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1572) #6
  br label %1905

1680:                                             ; preds = %1459
  %1681 = bitcast %"class.tflite::RuntimeShape"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1681) #6
  %1682 = icmp eq %struct.TfLiteTensor* %63, null
  br i1 %1682, label %1683, label %1685

1683:                                             ; preds = %1680
  %1684 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %46, i64 0, i32 0
  store i32 0, i32* %1684, align 8, !alias.scope !131
  br label %1713

1685:                                             ; preds = %1680
  %1686 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 2
  %1687 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1686, align 8, !noalias !131
  %1688 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1687, i64 0, i32 0
  %1689 = load i32, i32* %1688, align 4, !noalias !131
  %1690 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1687, i64 0, i32 1, i64 0
  %1691 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %46, i64 0, i32 0
  store i32 %1689, i32* %1691, align 8, !alias.scope !131
  %1692 = icmp sgt i32 %1689, 5
  br i1 %1692, label %1693, label %1700

1693:                                             ; preds = %1685
  %1694 = sext i32 %1689 to i64
  %1695 = shl nsw i64 %1694, 2
  %1696 = tail call i8* @_Znam(i64 %1695) #7, !noalias !131
  %1697 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %46, i64 0, i32 1, i32 0
  %1698 = bitcast i32** %1697 to i8**
  store i8* %1696, i8** %1698, align 8, !alias.scope !131
  %1699 = bitcast i8* %1696 to i32*
  br label %1705

1700:                                             ; preds = %1685
  %1701 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %46, i64 0, i32 1
  %1702 = bitcast %union.anon* %1701 to i32*
  %1703 = sext i32 %1689 to i64
  %1704 = shl nsw i64 %1703, 2
  br label %1705

1705:                                             ; preds = %1700, %1693
  %1706 = phi i64 [ %1695, %1693 ], [ %1704, %1700 ]
  %1707 = phi i32* [ %1699, %1693 ], [ %1702, %1700 ]
  %1708 = bitcast i32* %1707 to i8*
  %1709 = bitcast i32* %1690 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1708, i8* align 4 %1709, i64 %1706, i1 false) #6
  %1710 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 1
  %1711 = bitcast %union.TfLitePtrUnion* %1710 to i8**
  %1712 = load i8*, i8** %1711, align 8
  br label %1713

1713:                                             ; preds = %1683, %1705
  %1714 = phi i8* [ %1712, %1705 ], [ null, %1683 ]
  %1715 = icmp eq %struct.TfLiteTensor* %73, null
  br i1 %1715, label %1720, label %1716

1716:                                             ; preds = %1713
  %1717 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %73, i64 0, i32 1
  %1718 = bitcast %union.TfLitePtrUnion* %1717 to i64**
  %1719 = load i64*, i64** %1718, align 8
  br label %1720

1720:                                             ; preds = %1713, %1716
  %1721 = phi i64* [ %1719, %1716 ], [ null, %1713 ]
  %1722 = bitcast %"class.tflite::RuntimeShape"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1722) #6
  %1723 = icmp eq %struct.TfLiteTensor* %85, null
  br i1 %1723, label %1724, label %1726

1724:                                             ; preds = %1720
  %1725 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %47, i64 0, i32 0
  store i32 0, i32* %1725, align 8, !alias.scope !134
  br label %1754

1726:                                             ; preds = %1720
  %1727 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 2
  %1728 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1727, align 8, !noalias !134
  %1729 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1728, i64 0, i32 0
  %1730 = load i32, i32* %1729, align 4, !noalias !134
  %1731 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1728, i64 0, i32 1, i64 0
  %1732 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %47, i64 0, i32 0
  store i32 %1730, i32* %1732, align 8, !alias.scope !134
  %1733 = icmp sgt i32 %1730, 5
  br i1 %1733, label %1734, label %1741

1734:                                             ; preds = %1726
  %1735 = sext i32 %1730 to i64
  %1736 = shl nsw i64 %1735, 2
  %1737 = tail call i8* @_Znam(i64 %1736) #7, !noalias !134
  %1738 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %47, i64 0, i32 1, i32 0
  %1739 = bitcast i32** %1738 to i8**
  store i8* %1737, i8** %1739, align 8, !alias.scope !134
  %1740 = bitcast i8* %1737 to i32*
  br label %1746

1741:                                             ; preds = %1726
  %1742 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %47, i64 0, i32 1
  %1743 = bitcast %union.anon* %1742 to i32*
  %1744 = sext i32 %1730 to i64
  %1745 = shl nsw i64 %1744, 2
  br label %1746

1746:                                             ; preds = %1741, %1734
  %1747 = phi i64 [ %1736, %1734 ], [ %1745, %1741 ]
  %1748 = phi i32* [ %1740, %1734 ], [ %1743, %1741 ]
  %1749 = bitcast i32* %1748 to i8*
  %1750 = bitcast i32* %1731 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1749, i8* align 4 %1750, i64 %1747, i1 false) #6
  %1751 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 1
  %1752 = bitcast %union.TfLitePtrUnion* %1751 to i64**
  %1753 = load i64*, i64** %1752, align 8
  br label %1754

1754:                                             ; preds = %1724, %1746
  %1755 = phi i64* [ %1753, %1746 ], [ null, %1724 ]
  %1756 = bitcast %"class.std::__1::function.7"* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1756) #6
  %1757 = getelementptr inbounds %"class.std::__1::function.7", %"class.std::__1::function.7"* %48, i64 0, i32 0, i32 1, i32 0
  %1758 = getelementptr inbounds %"class.std::__1::function.7", %"class.std::__1::function.7"* %48, i64 0, i32 0, i32 2
  %1759 = select i1 %2, i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)* @_ZNSt3__110__function16__policy_invokerIFbaaEE11__call_implINS0_20__default_alloc_funcINS_7greaterIaEES2_EEEEbPKNS0_16__policy_storageEaa, i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)* @_ZNSt3__110__function16__policy_invokerIFbaaEE11__call_implINS0_20__default_alloc_funcINS_4lessIaEES2_EEEEbPKNS0_16__policy_storageEaa
  %1760 = select i1 %2, %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_7greaterIaEEFbaaEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_4lessIaEEFbaaEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_
  store i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)* %1759, i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)** %1757, align 8, !alias.scope !137
  store %"struct.std::__1::__function::__policy"* %1760, %"struct.std::__1::__function::__policy"** %1758, align 8, !alias.scope !137
  call void @_ZN6tflite13reference_ops9ArgMinMaxIallNSt3__18functionIFbaaEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %46, i8* %1714, i64* %1721, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %47, i64* %1755, %"class.std::__1::function.7"* nonnull dereferenceable(32) %48)
  %1761 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %1758, align 8
  %1762 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %1761, i64 0, i32 1
  %1763 = load void (i8*)*, void (i8*)** %1762, align 8
  %1764 = icmp eq void (i8*)* %1763, null
  br i1 %1764, label %1768, label %1765

1765:                                             ; preds = %1754
  %1766 = getelementptr inbounds %"class.std::__1::function.7", %"class.std::__1::function.7"* %48, i64 0, i32 0, i32 0, i32 0
  %1767 = load i8*, i8** %1766, align 8
  call void %1763(i8* %1767) #6
  br label %1768

1768:                                             ; preds = %1754, %1765
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1756) #6
  %1769 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %47, i64 0, i32 0
  %1770 = load i32, i32* %1769, align 8
  %1771 = icmp sgt i32 %1770, 5
  br i1 %1771, label %1772, label %1778

1772:                                             ; preds = %1768
  %1773 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %47, i64 0, i32 1, i32 0
  %1774 = load i32*, i32** %1773, align 8
  %1775 = icmp eq i32* %1774, null
  br i1 %1775, label %1778, label %1776

1776:                                             ; preds = %1772
  %1777 = bitcast i32* %1774 to i8*
  call void @_ZdaPv(i8* %1777) #7
  br label %1778

1778:                                             ; preds = %1768, %1772, %1776
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1722) #6
  %1779 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %46, i64 0, i32 0
  %1780 = load i32, i32* %1779, align 8
  %1781 = icmp sgt i32 %1780, 5
  br i1 %1781, label %1782, label %1788

1782:                                             ; preds = %1778
  %1783 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %46, i64 0, i32 1, i32 0
  %1784 = load i32*, i32** %1783, align 8
  %1785 = icmp eq i32* %1784, null
  br i1 %1785, label %1788, label %1786

1786:                                             ; preds = %1782
  %1787 = bitcast i32* %1784 to i8*
  call void @_ZdaPv(i8* %1787) #7
  br label %1788

1788:                                             ; preds = %1778, %1782, %1786
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1681) #6
  br label %1905

1789:                                             ; preds = %1459
  %1790 = bitcast %"class.tflite::RuntimeShape"* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1790) #6
  %1791 = icmp eq %struct.TfLiteTensor* %63, null
  br i1 %1791, label %1792, label %1794

1792:                                             ; preds = %1789
  %1793 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %49, i64 0, i32 0
  store i32 0, i32* %1793, align 8, !alias.scope !140
  br label %1821

1794:                                             ; preds = %1789
  %1795 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 2
  %1796 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1795, align 8, !noalias !140
  %1797 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1796, i64 0, i32 0
  %1798 = load i32, i32* %1797, align 4, !noalias !140
  %1799 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1796, i64 0, i32 1, i64 0
  %1800 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %49, i64 0, i32 0
  store i32 %1798, i32* %1800, align 8, !alias.scope !140
  %1801 = icmp sgt i32 %1798, 5
  br i1 %1801, label %1802, label %1809

1802:                                             ; preds = %1794
  %1803 = sext i32 %1798 to i64
  %1804 = shl nsw i64 %1803, 2
  %1805 = tail call i8* @_Znam(i64 %1804) #7, !noalias !140
  %1806 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %49, i64 0, i32 1, i32 0
  %1807 = bitcast i32** %1806 to i8**
  store i8* %1805, i8** %1807, align 8, !alias.scope !140
  %1808 = bitcast i8* %1805 to i32*
  br label %1814

1809:                                             ; preds = %1794
  %1810 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %49, i64 0, i32 1
  %1811 = bitcast %union.anon* %1810 to i32*
  %1812 = sext i32 %1798 to i64
  %1813 = shl nsw i64 %1812, 2
  br label %1814

1814:                                             ; preds = %1809, %1802
  %1815 = phi i64 [ %1804, %1802 ], [ %1813, %1809 ]
  %1816 = phi i32* [ %1808, %1802 ], [ %1811, %1809 ]
  %1817 = bitcast i32* %1816 to i8*
  %1818 = bitcast i32* %1799 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1817, i8* align 4 %1818, i64 %1815, i1 false) #6
  %1819 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 0, i32 1, i32 0
  %1820 = load i32*, i32** %1819, align 8
  br label %1821

1821:                                             ; preds = %1792, %1814
  %1822 = phi i32* [ %1820, %1814 ], [ null, %1792 ]
  %1823 = icmp eq %struct.TfLiteTensor* %73, null
  br i1 %1823, label %1828, label %1824

1824:                                             ; preds = %1821
  %1825 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %73, i64 0, i32 1
  %1826 = bitcast %union.TfLitePtrUnion* %1825 to i64**
  %1827 = load i64*, i64** %1826, align 8
  br label %1828

1828:                                             ; preds = %1821, %1824
  %1829 = phi i64* [ %1827, %1824 ], [ null, %1821 ]
  %1830 = bitcast %"class.tflite::RuntimeShape"* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1830) #6
  %1831 = icmp eq %struct.TfLiteTensor* %85, null
  br i1 %1831, label %1832, label %1834

1832:                                             ; preds = %1828
  %1833 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %50, i64 0, i32 0
  store i32 0, i32* %1833, align 8, !alias.scope !143
  br label %1862

1834:                                             ; preds = %1828
  %1835 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 2
  %1836 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1835, align 8, !noalias !143
  %1837 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1836, i64 0, i32 0
  %1838 = load i32, i32* %1837, align 4, !noalias !143
  %1839 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1836, i64 0, i32 1, i64 0
  %1840 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %50, i64 0, i32 0
  store i32 %1838, i32* %1840, align 8, !alias.scope !143
  %1841 = icmp sgt i32 %1838, 5
  br i1 %1841, label %1842, label %1849

1842:                                             ; preds = %1834
  %1843 = sext i32 %1838 to i64
  %1844 = shl nsw i64 %1843, 2
  %1845 = tail call i8* @_Znam(i64 %1844) #7, !noalias !143
  %1846 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %50, i64 0, i32 1, i32 0
  %1847 = bitcast i32** %1846 to i8**
  store i8* %1845, i8** %1847, align 8, !alias.scope !143
  %1848 = bitcast i8* %1845 to i32*
  br label %1854

1849:                                             ; preds = %1834
  %1850 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %50, i64 0, i32 1
  %1851 = bitcast %union.anon* %1850 to i32*
  %1852 = sext i32 %1838 to i64
  %1853 = shl nsw i64 %1852, 2
  br label %1854

1854:                                             ; preds = %1849, %1842
  %1855 = phi i64 [ %1844, %1842 ], [ %1853, %1849 ]
  %1856 = phi i32* [ %1848, %1842 ], [ %1851, %1849 ]
  %1857 = bitcast i32* %1856 to i8*
  %1858 = bitcast i32* %1839 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1857, i8* align 4 %1858, i64 %1855, i1 false) #6
  %1859 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 0, i32 1
  %1860 = bitcast %union.TfLitePtrUnion* %1859 to i64**
  %1861 = load i64*, i64** %1860, align 8
  br label %1862

1862:                                             ; preds = %1832, %1854
  %1863 = phi i64* [ %1861, %1854 ], [ null, %1832 ]
  %1864 = bitcast %"class.std::__1::function.13"* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1864) #6
  %1865 = getelementptr inbounds %"class.std::__1::function.13", %"class.std::__1::function.13"* %51, i64 0, i32 0, i32 1, i32 0
  %1866 = getelementptr inbounds %"class.std::__1::function.13", %"class.std::__1::function.13"* %51, i64 0, i32 0, i32 2
  %1867 = select i1 %2, i1 (%"union.std::__1::__function::__policy_storage"*, i32, i32)* @_ZNSt3__110__function16__policy_invokerIFbiiEE11__call_implINS0_20__default_alloc_funcINS_7greaterIiEES2_EEEEbPKNS0_16__policy_storageEii, i1 (%"union.std::__1::__function::__policy_storage"*, i32, i32)* @_ZNSt3__110__function16__policy_invokerIFbiiEE11__call_implINS0_20__default_alloc_funcINS_4lessIiEES2_EEEEbPKNS0_16__policy_storageEii
  %1868 = select i1 %2, %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_7greaterIiEEFbiiEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcINS_4lessIiEEFbiiEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32, i32)* %1867, i1 (%"union.std::__1::__function::__policy_storage"*, i32, i32)** %1865, align 8, !alias.scope !146
  store %"struct.std::__1::__function::__policy"* %1868, %"struct.std::__1::__function::__policy"** %1866, align 8, !alias.scope !146
  call void @_ZN6tflite13reference_ops9ArgMinMaxIillNSt3__18functionIFbiiEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %49, i32* %1822, i64* %1829, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %50, i64* %1863, %"class.std::__1::function.13"* nonnull dereferenceable(32) %51)
  %1869 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %1866, align 8
  %1870 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %1869, i64 0, i32 1
  %1871 = load void (i8*)*, void (i8*)** %1870, align 8
  %1872 = icmp eq void (i8*)* %1871, null
  br i1 %1872, label %1876, label %1873

1873:                                             ; preds = %1862
  %1874 = getelementptr inbounds %"class.std::__1::function.13", %"class.std::__1::function.13"* %51, i64 0, i32 0, i32 0, i32 0
  %1875 = load i8*, i8** %1874, align 8
  call void %1871(i8* %1875) #6
  br label %1876

1876:                                             ; preds = %1862, %1873
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1864) #6
  %1877 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %50, i64 0, i32 0
  %1878 = load i32, i32* %1877, align 8
  %1879 = icmp sgt i32 %1878, 5
  br i1 %1879, label %1880, label %1886

1880:                                             ; preds = %1876
  %1881 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %50, i64 0, i32 1, i32 0
  %1882 = load i32*, i32** %1881, align 8
  %1883 = icmp eq i32* %1882, null
  br i1 %1883, label %1886, label %1884

1884:                                             ; preds = %1880
  %1885 = bitcast i32* %1882 to i8*
  call void @_ZdaPv(i8* %1885) #7
  br label %1886

1886:                                             ; preds = %1876, %1880, %1884
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1830) #6
  %1887 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %49, i64 0, i32 0
  %1888 = load i32, i32* %1887, align 8
  %1889 = icmp sgt i32 %1888, 5
  br i1 %1889, label %1890, label %1896

1890:                                             ; preds = %1886
  %1891 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %49, i64 0, i32 1, i32 0
  %1892 = load i32*, i32** %1891, align 8
  %1893 = icmp eq i32* %1892, null
  br i1 %1893, label %1896, label %1894

1894:                                             ; preds = %1890
  %1895 = bitcast i32* %1892 to i8*
  call void @_ZdaPv(i8* %1895) #7
  br label %1896

1896:                                             ; preds = %1886, %1890, %1894
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1790) #6
  br label %1905

1897:                                             ; preds = %1459
  %1898 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1899 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1898, align 8
  %1900 = tail call i8* @TfLiteTypeGetName(i32 %1461) #6
  tail call void (%struct.TfLiteContext*, i8*, ...) %1899(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.14, i64 0, i64 0), i8* %1900) #6
  br label %1905

1901:                                             ; preds = %1020
  %1902 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1903 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1902, align 8
  %1904 = tail call i8* @TfLiteTypeGetName(i32 %142) #6
  tail call void (%struct.TfLiteContext*, i8*, ...) %1903(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.15, i64 0, i64 0), i8* %1904) #6
  br label %1905

1905:                                             ; preds = %688, %796, %904, %1011, %253, %360, %467, %573, %1570, %1679, %1788, %1896, %1131, %1239, %1347, %1454, %132, %1901, %1897, %1455, %1016, %1012, %574
  %1906 = phi i32 [ 1, %1016 ], [ 1, %1012 ], [ 1, %574 ], [ 1, %1901 ], [ 1, %1897 ], [ 1, %1455 ], [ %135, %132 ], [ 0, %1454 ], [ 0, %1347 ], [ 0, %1239 ], [ 0, %1131 ], [ 0, %1896 ], [ 0, %1788 ], [ 0, %1679 ], [ 0, %1570 ], [ 0, %573 ], [ 0, %467 ], [ 0, %360 ], [ 0, %253 ], [ 0, %1011 ], [ 0, %904 ], [ 0, %796 ], [ 0, %688 ]
  ret i32 %1906
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops9ArgMinMaxIfiiNSt3__18functionIFbffEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_(%"class.tflite::RuntimeShape"* dereferenceable(32), float*, i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.std::__1::function"* dereferenceable(32)) local_unnamed_addr #0 comdat {
  %7 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %8 = load i32, i32* %2, align 4
  %9 = icmp slt i32 %8, 0
  %10 = load i32, i32* %7, align 8
  %11 = select i1 %9, i32 %10, i32 0
  %12 = add i32 %11, %8
  %13 = icmp sgt i32 %10, 5
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %union.anon, %union.anon* %14, i64 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = sext i32 %12 to i64
  %18 = getelementptr inbounds i32, i32* %16, i64 %17
  %19 = bitcast %union.anon* %14 to [5 x i32]*
  %20 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %17
  %21 = select i1 %13, i32* %18, i32* %20
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %12, 0
  br i1 %23, label %24, label %48

24:                                               ; preds = %6
  %25 = zext i32 %12 to i64
  %26 = add nsw i64 %25, -1
  %27 = and i64 %25, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub nsw i64 %25, %27
  br label %64

31:                                               ; preds = %64, %24
  %32 = phi i32 [ undef, %24 ], [ %90, %64 ]
  %33 = phi i64 [ 0, %24 ], [ %91, %64 ]
  %34 = phi i32 [ 1, %24 ], [ %90, %64 ]
  %35 = icmp eq i64 %27, 0
  br i1 %35, label %48, label %36

36:                                               ; preds = %31, %36
  %37 = phi i64 [ %45, %36 ], [ %33, %31 ]
  %38 = phi i32 [ %44, %36 ], [ %34, %31 ]
  %39 = phi i64 [ %46, %36 ], [ %27, %31 ]
  %40 = getelementptr inbounds i32, i32* %16, i64 %37
  %41 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %37
  %42 = select i1 %13, i32* %40, i32* %41
  %43 = load i32, i32* %42, align 4
  %44 = mul nsw i32 %43, %38
  %45 = add nuw nsw i64 %37, 1
  %46 = add i64 %39, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %36, !llvm.loop !149

48:                                               ; preds = %31, %36, %6
  %49 = phi i32 [ 1, %6 ], [ %32, %31 ], [ %44, %36 ]
  %50 = add i32 %12, 1
  %51 = icmp slt i32 %50, %10
  br i1 %51, label %52, label %111

52:                                               ; preds = %48
  %53 = sext i32 %50 to i64
  %54 = xor i32 %11, -1
  %55 = add i32 %10, %54
  %56 = sub i32 %55, %8
  %57 = add i32 %10, -2
  %58 = sub i32 %57, %11
  %59 = sub i32 %58, %8
  %60 = and i32 %56, 3
  %61 = icmp ult i32 %59, 3
  br i1 %61, label %94, label %62

62:                                               ; preds = %52
  %63 = sub i32 %56, %60
  br label %124

64:                                               ; preds = %64, %29
  %65 = phi i64 [ 0, %29 ], [ %91, %64 ]
  %66 = phi i32 [ 1, %29 ], [ %90, %64 ]
  %67 = phi i64 [ %30, %29 ], [ %92, %64 ]
  %68 = getelementptr inbounds i32, i32* %16, i64 %65
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %65
  %70 = select i1 %13, i32* %68, i32* %69
  %71 = load i32, i32* %70, align 4
  %72 = mul nsw i32 %71, %66
  %73 = or i64 %65, 1
  %74 = getelementptr inbounds i32, i32* %16, i64 %73
  %75 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %73
  %76 = select i1 %13, i32* %74, i32* %75
  %77 = load i32, i32* %76, align 4
  %78 = mul nsw i32 %77, %72
  %79 = or i64 %65, 2
  %80 = getelementptr inbounds i32, i32* %16, i64 %79
  %81 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %79
  %82 = select i1 %13, i32* %80, i32* %81
  %83 = load i32, i32* %82, align 4
  %84 = mul nsw i32 %83, %78
  %85 = or i64 %65, 3
  %86 = getelementptr inbounds i32, i32* %16, i64 %85
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %85
  %88 = select i1 %13, i32* %86, i32* %87
  %89 = load i32, i32* %88, align 4
  %90 = mul nsw i32 %89, %84
  %91 = add nuw nsw i64 %65, 4
  %92 = add i64 %67, -4
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %31, label %64

94:                                               ; preds = %124, %52
  %95 = phi i32 [ undef, %52 ], [ %150, %124 ]
  %96 = phi i64 [ %53, %52 ], [ %151, %124 ]
  %97 = phi i32 [ 1, %52 ], [ %150, %124 ]
  %98 = icmp eq i32 %60, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %94, %99
  %100 = phi i64 [ %108, %99 ], [ %96, %94 ]
  %101 = phi i32 [ %107, %99 ], [ %97, %94 ]
  %102 = phi i32 [ %109, %99 ], [ %60, %94 ]
  %103 = getelementptr inbounds i32, i32* %16, i64 %100
  %104 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %100
  %105 = select i1 %13, i32* %103, i32* %104
  %106 = load i32, i32* %105, align 4
  %107 = mul nsw i32 %106, %101
  %108 = add nsw i64 %100, 1
  %109 = add i32 %102, -1
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %99, !llvm.loop !150

111:                                              ; preds = %94, %99, %48
  %112 = phi i32 [ 1, %48 ], [ %95, %94 ], [ %107, %99 ]
  %113 = icmp sgt i32 %49, 0
  br i1 %113, label %114, label %160

114:                                              ; preds = %111
  %115 = icmp sgt i32 %112, 0
  %116 = icmp sgt i32 %22, 1
  %117 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 1, i32 0
  %118 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 0
  %119 = sext i32 %112 to i64
  %120 = sext i32 %22 to i64
  %121 = zext i32 %49 to i64
  %122 = zext i32 %112 to i64
  %123 = zext i32 %22 to i64
  br label %154

124:                                              ; preds = %124, %62
  %125 = phi i64 [ %53, %62 ], [ %151, %124 ]
  %126 = phi i32 [ 1, %62 ], [ %150, %124 ]
  %127 = phi i32 [ %63, %62 ], [ %152, %124 ]
  %128 = getelementptr inbounds i32, i32* %16, i64 %125
  %129 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %125
  %130 = select i1 %13, i32* %128, i32* %129
  %131 = load i32, i32* %130, align 4
  %132 = mul nsw i32 %131, %126
  %133 = add nsw i64 %125, 1
  %134 = getelementptr inbounds i32, i32* %16, i64 %133
  %135 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %133
  %136 = select i1 %13, i32* %134, i32* %135
  %137 = load i32, i32* %136, align 4
  %138 = mul nsw i32 %137, %132
  %139 = add nsw i64 %125, 2
  %140 = getelementptr inbounds i32, i32* %16, i64 %139
  %141 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %139
  %142 = select i1 %13, i32* %140, i32* %141
  %143 = load i32, i32* %142, align 4
  %144 = mul nsw i32 %143, %138
  %145 = add nsw i64 %125, 3
  %146 = getelementptr inbounds i32, i32* %16, i64 %145
  %147 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %145
  %148 = select i1 %13, i32* %146, i32* %147
  %149 = load i32, i32* %148, align 4
  %150 = mul nsw i32 %149, %144
  %151 = add nsw i64 %125, 4
  %152 = add i32 %127, -4
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %94, label %124

154:                                              ; preds = %161, %114
  %155 = phi i64 [ 0, %114 ], [ %162, %161 ]
  br i1 %115, label %156, label %161

156:                                              ; preds = %154
  %157 = mul nsw i64 %155, %120
  %158 = mul nsw i64 %157, %119
  %159 = mul nsw i64 %155, %119
  br label %164

160:                                              ; preds = %161, %111
  ret void

161:                                              ; preds = %170, %154
  %162 = add nuw nsw i64 %155, 1
  %163 = icmp eq i64 %162, %121
  br i1 %163, label %160, label %154

164:                                              ; preds = %170, %156
  %165 = phi i64 [ 0, %156 ], [ %174, %170 ]
  br i1 %116, label %166, label %170

166:                                              ; preds = %164
  %167 = add nsw i64 %165, %158
  %168 = getelementptr inbounds float, float* %1, i64 %167
  %169 = load float, float* %168, align 4
  br label %176

170:                                              ; preds = %190, %164
  %171 = phi i32 [ 0, %164 ], [ %192, %190 ]
  %172 = add nsw i64 %165, %159
  %173 = getelementptr inbounds i32, i32* %4, i64 %172
  store i32 %171, i32* %173, align 4
  %174 = add nuw nsw i64 %165, 1
  %175 = icmp eq i64 %174, %122
  br i1 %175, label %161, label %164

176:                                              ; preds = %190, %166
  %177 = phi i64 [ 1, %166 ], [ %193, %190 ]
  %178 = phi i32 [ 0, %166 ], [ %192, %190 ]
  %179 = phi float [ %169, %166 ], [ %191, %190 ]
  %180 = add nsw i64 %177, %157
  %181 = mul nsw i64 %180, %119
  %182 = add nsw i64 %181, %165
  %183 = getelementptr inbounds float, float* %1, i64 %182
  %184 = load float, float* %183, align 4
  %185 = load i1 (%"union.std::__1::__function::__policy_storage"*, float, float)*, i1 (%"union.std::__1::__function::__policy_storage"*, float, float)** %117, align 8
  %186 = tail call zeroext i1 %185(%"union.std::__1::__function::__policy_storage"* %118, float %184, float %179) #6
  br i1 %186, label %187, label %190

187:                                              ; preds = %176
  %188 = load float, float* %183, align 4
  %189 = trunc i64 %177 to i32
  br label %190

190:                                              ; preds = %187, %176
  %191 = phi float [ %188, %187 ], [ %179, %176 ]
  %192 = phi i32 [ %189, %187 ], [ %178, %176 ]
  %193 = add nuw nsw i64 %177, 1
  %194 = icmp eq i64 %193, %123
  br i1 %194, label %170, label %176
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops9ArgMinMaxIhiiNSt3__18functionIFbhhEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_(%"class.tflite::RuntimeShape"* dereferenceable(32), i8*, i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.std::__1::function.1"* dereferenceable(32)) local_unnamed_addr #0 comdat {
  %7 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %8 = load i32, i32* %2, align 4
  %9 = icmp slt i32 %8, 0
  %10 = load i32, i32* %7, align 8
  %11 = select i1 %9, i32 %10, i32 0
  %12 = add i32 %11, %8
  %13 = icmp sgt i32 %10, 5
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %union.anon, %union.anon* %14, i64 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = sext i32 %12 to i64
  %18 = getelementptr inbounds i32, i32* %16, i64 %17
  %19 = bitcast %union.anon* %14 to [5 x i32]*
  %20 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %17
  %21 = select i1 %13, i32* %18, i32* %20
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %12, 0
  br i1 %23, label %24, label %48

24:                                               ; preds = %6
  %25 = zext i32 %12 to i64
  %26 = add nsw i64 %25, -1
  %27 = and i64 %25, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub nsw i64 %25, %27
  br label %64

31:                                               ; preds = %64, %24
  %32 = phi i32 [ undef, %24 ], [ %90, %64 ]
  %33 = phi i64 [ 0, %24 ], [ %91, %64 ]
  %34 = phi i32 [ 1, %24 ], [ %90, %64 ]
  %35 = icmp eq i64 %27, 0
  br i1 %35, label %48, label %36

36:                                               ; preds = %31, %36
  %37 = phi i64 [ %45, %36 ], [ %33, %31 ]
  %38 = phi i32 [ %44, %36 ], [ %34, %31 ]
  %39 = phi i64 [ %46, %36 ], [ %27, %31 ]
  %40 = getelementptr inbounds i32, i32* %16, i64 %37
  %41 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %37
  %42 = select i1 %13, i32* %40, i32* %41
  %43 = load i32, i32* %42, align 4
  %44 = mul nsw i32 %43, %38
  %45 = add nuw nsw i64 %37, 1
  %46 = add i64 %39, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %36, !llvm.loop !151

48:                                               ; preds = %31, %36, %6
  %49 = phi i32 [ 1, %6 ], [ %32, %31 ], [ %44, %36 ]
  %50 = add i32 %12, 1
  %51 = icmp slt i32 %50, %10
  br i1 %51, label %52, label %111

52:                                               ; preds = %48
  %53 = sext i32 %50 to i64
  %54 = xor i32 %11, -1
  %55 = add i32 %10, %54
  %56 = sub i32 %55, %8
  %57 = add i32 %10, -2
  %58 = sub i32 %57, %11
  %59 = sub i32 %58, %8
  %60 = and i32 %56, 3
  %61 = icmp ult i32 %59, 3
  br i1 %61, label %94, label %62

62:                                               ; preds = %52
  %63 = sub i32 %56, %60
  br label %124

64:                                               ; preds = %64, %29
  %65 = phi i64 [ 0, %29 ], [ %91, %64 ]
  %66 = phi i32 [ 1, %29 ], [ %90, %64 ]
  %67 = phi i64 [ %30, %29 ], [ %92, %64 ]
  %68 = getelementptr inbounds i32, i32* %16, i64 %65
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %65
  %70 = select i1 %13, i32* %68, i32* %69
  %71 = load i32, i32* %70, align 4
  %72 = mul nsw i32 %71, %66
  %73 = or i64 %65, 1
  %74 = getelementptr inbounds i32, i32* %16, i64 %73
  %75 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %73
  %76 = select i1 %13, i32* %74, i32* %75
  %77 = load i32, i32* %76, align 4
  %78 = mul nsw i32 %77, %72
  %79 = or i64 %65, 2
  %80 = getelementptr inbounds i32, i32* %16, i64 %79
  %81 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %79
  %82 = select i1 %13, i32* %80, i32* %81
  %83 = load i32, i32* %82, align 4
  %84 = mul nsw i32 %83, %78
  %85 = or i64 %65, 3
  %86 = getelementptr inbounds i32, i32* %16, i64 %85
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %85
  %88 = select i1 %13, i32* %86, i32* %87
  %89 = load i32, i32* %88, align 4
  %90 = mul nsw i32 %89, %84
  %91 = add nuw nsw i64 %65, 4
  %92 = add i64 %67, -4
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %31, label %64

94:                                               ; preds = %124, %52
  %95 = phi i32 [ undef, %52 ], [ %150, %124 ]
  %96 = phi i64 [ %53, %52 ], [ %151, %124 ]
  %97 = phi i32 [ 1, %52 ], [ %150, %124 ]
  %98 = icmp eq i32 %60, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %94, %99
  %100 = phi i64 [ %108, %99 ], [ %96, %94 ]
  %101 = phi i32 [ %107, %99 ], [ %97, %94 ]
  %102 = phi i32 [ %109, %99 ], [ %60, %94 ]
  %103 = getelementptr inbounds i32, i32* %16, i64 %100
  %104 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %100
  %105 = select i1 %13, i32* %103, i32* %104
  %106 = load i32, i32* %105, align 4
  %107 = mul nsw i32 %106, %101
  %108 = add nsw i64 %100, 1
  %109 = add i32 %102, -1
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %99, !llvm.loop !152

111:                                              ; preds = %94, %99, %48
  %112 = phi i32 [ 1, %48 ], [ %95, %94 ], [ %107, %99 ]
  %113 = icmp sgt i32 %49, 0
  br i1 %113, label %114, label %160

114:                                              ; preds = %111
  %115 = icmp sgt i32 %112, 0
  %116 = icmp sgt i32 %22, 1
  %117 = getelementptr inbounds %"class.std::__1::function.1", %"class.std::__1::function.1"* %5, i64 0, i32 0, i32 1, i32 0
  %118 = getelementptr inbounds %"class.std::__1::function.1", %"class.std::__1::function.1"* %5, i64 0, i32 0, i32 0
  %119 = sext i32 %112 to i64
  %120 = sext i32 %22 to i64
  %121 = zext i32 %49 to i64
  %122 = zext i32 %112 to i64
  %123 = zext i32 %22 to i64
  br label %154

124:                                              ; preds = %124, %62
  %125 = phi i64 [ %53, %62 ], [ %151, %124 ]
  %126 = phi i32 [ 1, %62 ], [ %150, %124 ]
  %127 = phi i32 [ %63, %62 ], [ %152, %124 ]
  %128 = getelementptr inbounds i32, i32* %16, i64 %125
  %129 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %125
  %130 = select i1 %13, i32* %128, i32* %129
  %131 = load i32, i32* %130, align 4
  %132 = mul nsw i32 %131, %126
  %133 = add nsw i64 %125, 1
  %134 = getelementptr inbounds i32, i32* %16, i64 %133
  %135 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %133
  %136 = select i1 %13, i32* %134, i32* %135
  %137 = load i32, i32* %136, align 4
  %138 = mul nsw i32 %137, %132
  %139 = add nsw i64 %125, 2
  %140 = getelementptr inbounds i32, i32* %16, i64 %139
  %141 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %139
  %142 = select i1 %13, i32* %140, i32* %141
  %143 = load i32, i32* %142, align 4
  %144 = mul nsw i32 %143, %138
  %145 = add nsw i64 %125, 3
  %146 = getelementptr inbounds i32, i32* %16, i64 %145
  %147 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %145
  %148 = select i1 %13, i32* %146, i32* %147
  %149 = load i32, i32* %148, align 4
  %150 = mul nsw i32 %149, %144
  %151 = add nsw i64 %125, 4
  %152 = add i32 %127, -4
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %94, label %124

154:                                              ; preds = %161, %114
  %155 = phi i64 [ 0, %114 ], [ %162, %161 ]
  br i1 %115, label %156, label %161

156:                                              ; preds = %154
  %157 = mul nsw i64 %155, %120
  %158 = mul nsw i64 %157, %119
  %159 = mul nsw i64 %155, %119
  br label %164

160:                                              ; preds = %161, %111
  ret void

161:                                              ; preds = %170, %154
  %162 = add nuw nsw i64 %155, 1
  %163 = icmp eq i64 %162, %121
  br i1 %163, label %160, label %154

164:                                              ; preds = %170, %156
  %165 = phi i64 [ 0, %156 ], [ %174, %170 ]
  br i1 %116, label %166, label %170

166:                                              ; preds = %164
  %167 = add nsw i64 %165, %158
  %168 = getelementptr inbounds i8, i8* %1, i64 %167
  %169 = load i8, i8* %168, align 1
  br label %176

170:                                              ; preds = %190, %164
  %171 = phi i32 [ 0, %164 ], [ %192, %190 ]
  %172 = add nsw i64 %165, %159
  %173 = getelementptr inbounds i32, i32* %4, i64 %172
  store i32 %171, i32* %173, align 4
  %174 = add nuw nsw i64 %165, 1
  %175 = icmp eq i64 %174, %122
  br i1 %175, label %161, label %164

176:                                              ; preds = %190, %166
  %177 = phi i64 [ 1, %166 ], [ %193, %190 ]
  %178 = phi i32 [ 0, %166 ], [ %192, %190 ]
  %179 = phi i8 [ %169, %166 ], [ %191, %190 ]
  %180 = add nsw i64 %177, %157
  %181 = mul nsw i64 %180, %119
  %182 = add nsw i64 %181, %165
  %183 = getelementptr inbounds i8, i8* %1, i64 %182
  %184 = load i8, i8* %183, align 1
  %185 = load i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)*, i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)** %117, align 8
  %186 = tail call zeroext i1 %185(%"union.std::__1::__function::__policy_storage"* %118, i8 zeroext %184, i8 zeroext %179) #6
  br i1 %186, label %187, label %190

187:                                              ; preds = %176
  %188 = load i8, i8* %183, align 1
  %189 = trunc i64 %177 to i32
  br label %190

190:                                              ; preds = %187, %176
  %191 = phi i8 [ %188, %187 ], [ %179, %176 ]
  %192 = phi i32 [ %189, %187 ], [ %178, %176 ]
  %193 = add nuw nsw i64 %177, 1
  %194 = icmp eq i64 %193, %123
  br i1 %194, label %170, label %176
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops9ArgMinMaxIaiiNSt3__18functionIFbaaEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_(%"class.tflite::RuntimeShape"* dereferenceable(32), i8*, i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.std::__1::function.7"* dereferenceable(32)) local_unnamed_addr #0 comdat {
  %7 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %8 = load i32, i32* %2, align 4
  %9 = icmp slt i32 %8, 0
  %10 = load i32, i32* %7, align 8
  %11 = select i1 %9, i32 %10, i32 0
  %12 = add i32 %11, %8
  %13 = icmp sgt i32 %10, 5
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %union.anon, %union.anon* %14, i64 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = sext i32 %12 to i64
  %18 = getelementptr inbounds i32, i32* %16, i64 %17
  %19 = bitcast %union.anon* %14 to [5 x i32]*
  %20 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %17
  %21 = select i1 %13, i32* %18, i32* %20
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %12, 0
  br i1 %23, label %24, label %48

24:                                               ; preds = %6
  %25 = zext i32 %12 to i64
  %26 = add nsw i64 %25, -1
  %27 = and i64 %25, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub nsw i64 %25, %27
  br label %64

31:                                               ; preds = %64, %24
  %32 = phi i32 [ undef, %24 ], [ %90, %64 ]
  %33 = phi i64 [ 0, %24 ], [ %91, %64 ]
  %34 = phi i32 [ 1, %24 ], [ %90, %64 ]
  %35 = icmp eq i64 %27, 0
  br i1 %35, label %48, label %36

36:                                               ; preds = %31, %36
  %37 = phi i64 [ %45, %36 ], [ %33, %31 ]
  %38 = phi i32 [ %44, %36 ], [ %34, %31 ]
  %39 = phi i64 [ %46, %36 ], [ %27, %31 ]
  %40 = getelementptr inbounds i32, i32* %16, i64 %37
  %41 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %37
  %42 = select i1 %13, i32* %40, i32* %41
  %43 = load i32, i32* %42, align 4
  %44 = mul nsw i32 %43, %38
  %45 = add nuw nsw i64 %37, 1
  %46 = add i64 %39, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %36, !llvm.loop !153

48:                                               ; preds = %31, %36, %6
  %49 = phi i32 [ 1, %6 ], [ %32, %31 ], [ %44, %36 ]
  %50 = add i32 %12, 1
  %51 = icmp slt i32 %50, %10
  br i1 %51, label %52, label %111

52:                                               ; preds = %48
  %53 = sext i32 %50 to i64
  %54 = xor i32 %11, -1
  %55 = add i32 %10, %54
  %56 = sub i32 %55, %8
  %57 = add i32 %10, -2
  %58 = sub i32 %57, %11
  %59 = sub i32 %58, %8
  %60 = and i32 %56, 3
  %61 = icmp ult i32 %59, 3
  br i1 %61, label %94, label %62

62:                                               ; preds = %52
  %63 = sub i32 %56, %60
  br label %124

64:                                               ; preds = %64, %29
  %65 = phi i64 [ 0, %29 ], [ %91, %64 ]
  %66 = phi i32 [ 1, %29 ], [ %90, %64 ]
  %67 = phi i64 [ %30, %29 ], [ %92, %64 ]
  %68 = getelementptr inbounds i32, i32* %16, i64 %65
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %65
  %70 = select i1 %13, i32* %68, i32* %69
  %71 = load i32, i32* %70, align 4
  %72 = mul nsw i32 %71, %66
  %73 = or i64 %65, 1
  %74 = getelementptr inbounds i32, i32* %16, i64 %73
  %75 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %73
  %76 = select i1 %13, i32* %74, i32* %75
  %77 = load i32, i32* %76, align 4
  %78 = mul nsw i32 %77, %72
  %79 = or i64 %65, 2
  %80 = getelementptr inbounds i32, i32* %16, i64 %79
  %81 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %79
  %82 = select i1 %13, i32* %80, i32* %81
  %83 = load i32, i32* %82, align 4
  %84 = mul nsw i32 %83, %78
  %85 = or i64 %65, 3
  %86 = getelementptr inbounds i32, i32* %16, i64 %85
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %85
  %88 = select i1 %13, i32* %86, i32* %87
  %89 = load i32, i32* %88, align 4
  %90 = mul nsw i32 %89, %84
  %91 = add nuw nsw i64 %65, 4
  %92 = add i64 %67, -4
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %31, label %64

94:                                               ; preds = %124, %52
  %95 = phi i32 [ undef, %52 ], [ %150, %124 ]
  %96 = phi i64 [ %53, %52 ], [ %151, %124 ]
  %97 = phi i32 [ 1, %52 ], [ %150, %124 ]
  %98 = icmp eq i32 %60, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %94, %99
  %100 = phi i64 [ %108, %99 ], [ %96, %94 ]
  %101 = phi i32 [ %107, %99 ], [ %97, %94 ]
  %102 = phi i32 [ %109, %99 ], [ %60, %94 ]
  %103 = getelementptr inbounds i32, i32* %16, i64 %100
  %104 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %100
  %105 = select i1 %13, i32* %103, i32* %104
  %106 = load i32, i32* %105, align 4
  %107 = mul nsw i32 %106, %101
  %108 = add nsw i64 %100, 1
  %109 = add i32 %102, -1
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %99, !llvm.loop !154

111:                                              ; preds = %94, %99, %48
  %112 = phi i32 [ 1, %48 ], [ %95, %94 ], [ %107, %99 ]
  %113 = icmp sgt i32 %49, 0
  br i1 %113, label %114, label %160

114:                                              ; preds = %111
  %115 = icmp sgt i32 %112, 0
  %116 = icmp sgt i32 %22, 1
  %117 = getelementptr inbounds %"class.std::__1::function.7", %"class.std::__1::function.7"* %5, i64 0, i32 0, i32 1, i32 0
  %118 = getelementptr inbounds %"class.std::__1::function.7", %"class.std::__1::function.7"* %5, i64 0, i32 0, i32 0
  %119 = sext i32 %112 to i64
  %120 = sext i32 %22 to i64
  %121 = zext i32 %49 to i64
  %122 = zext i32 %112 to i64
  %123 = zext i32 %22 to i64
  br label %154

124:                                              ; preds = %124, %62
  %125 = phi i64 [ %53, %62 ], [ %151, %124 ]
  %126 = phi i32 [ 1, %62 ], [ %150, %124 ]
  %127 = phi i32 [ %63, %62 ], [ %152, %124 ]
  %128 = getelementptr inbounds i32, i32* %16, i64 %125
  %129 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %125
  %130 = select i1 %13, i32* %128, i32* %129
  %131 = load i32, i32* %130, align 4
  %132 = mul nsw i32 %131, %126
  %133 = add nsw i64 %125, 1
  %134 = getelementptr inbounds i32, i32* %16, i64 %133
  %135 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %133
  %136 = select i1 %13, i32* %134, i32* %135
  %137 = load i32, i32* %136, align 4
  %138 = mul nsw i32 %137, %132
  %139 = add nsw i64 %125, 2
  %140 = getelementptr inbounds i32, i32* %16, i64 %139
  %141 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %139
  %142 = select i1 %13, i32* %140, i32* %141
  %143 = load i32, i32* %142, align 4
  %144 = mul nsw i32 %143, %138
  %145 = add nsw i64 %125, 3
  %146 = getelementptr inbounds i32, i32* %16, i64 %145
  %147 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %145
  %148 = select i1 %13, i32* %146, i32* %147
  %149 = load i32, i32* %148, align 4
  %150 = mul nsw i32 %149, %144
  %151 = add nsw i64 %125, 4
  %152 = add i32 %127, -4
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %94, label %124

154:                                              ; preds = %161, %114
  %155 = phi i64 [ 0, %114 ], [ %162, %161 ]
  br i1 %115, label %156, label %161

156:                                              ; preds = %154
  %157 = mul nsw i64 %155, %120
  %158 = mul nsw i64 %157, %119
  %159 = mul nsw i64 %155, %119
  br label %164

160:                                              ; preds = %161, %111
  ret void

161:                                              ; preds = %170, %154
  %162 = add nuw nsw i64 %155, 1
  %163 = icmp eq i64 %162, %121
  br i1 %163, label %160, label %154

164:                                              ; preds = %170, %156
  %165 = phi i64 [ 0, %156 ], [ %174, %170 ]
  br i1 %116, label %166, label %170

166:                                              ; preds = %164
  %167 = add nsw i64 %165, %158
  %168 = getelementptr inbounds i8, i8* %1, i64 %167
  %169 = load i8, i8* %168, align 1
  br label %176

170:                                              ; preds = %190, %164
  %171 = phi i32 [ 0, %164 ], [ %192, %190 ]
  %172 = add nsw i64 %165, %159
  %173 = getelementptr inbounds i32, i32* %4, i64 %172
  store i32 %171, i32* %173, align 4
  %174 = add nuw nsw i64 %165, 1
  %175 = icmp eq i64 %174, %122
  br i1 %175, label %161, label %164

176:                                              ; preds = %190, %166
  %177 = phi i64 [ 1, %166 ], [ %193, %190 ]
  %178 = phi i32 [ 0, %166 ], [ %192, %190 ]
  %179 = phi i8 [ %169, %166 ], [ %191, %190 ]
  %180 = add nsw i64 %177, %157
  %181 = mul nsw i64 %180, %119
  %182 = add nsw i64 %181, %165
  %183 = getelementptr inbounds i8, i8* %1, i64 %182
  %184 = load i8, i8* %183, align 1
  %185 = load i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)*, i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)** %117, align 8
  %186 = tail call zeroext i1 %185(%"union.std::__1::__function::__policy_storage"* %118, i8 signext %184, i8 signext %179) #6
  br i1 %186, label %187, label %190

187:                                              ; preds = %176
  %188 = load i8, i8* %183, align 1
  %189 = trunc i64 %177 to i32
  br label %190

190:                                              ; preds = %187, %176
  %191 = phi i8 [ %188, %187 ], [ %179, %176 ]
  %192 = phi i32 [ %189, %187 ], [ %178, %176 ]
  %193 = add nuw nsw i64 %177, 1
  %194 = icmp eq i64 %193, %123
  br i1 %194, label %170, label %176
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops9ArgMinMaxIiiiNSt3__18functionIFbiiEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_(%"class.tflite::RuntimeShape"* dereferenceable(32), i32*, i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.std::__1::function.13"* dereferenceable(32)) local_unnamed_addr #0 comdat {
  %7 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %8 = load i32, i32* %2, align 4
  %9 = icmp slt i32 %8, 0
  %10 = load i32, i32* %7, align 8
  %11 = select i1 %9, i32 %10, i32 0
  %12 = add i32 %11, %8
  %13 = icmp sgt i32 %10, 5
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %union.anon, %union.anon* %14, i64 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = sext i32 %12 to i64
  %18 = getelementptr inbounds i32, i32* %16, i64 %17
  %19 = bitcast %union.anon* %14 to [5 x i32]*
  %20 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %17
  %21 = select i1 %13, i32* %18, i32* %20
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %12, 0
  br i1 %23, label %24, label %48

24:                                               ; preds = %6
  %25 = zext i32 %12 to i64
  %26 = add nsw i64 %25, -1
  %27 = and i64 %25, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub nsw i64 %25, %27
  br label %64

31:                                               ; preds = %64, %24
  %32 = phi i32 [ undef, %24 ], [ %90, %64 ]
  %33 = phi i64 [ 0, %24 ], [ %91, %64 ]
  %34 = phi i32 [ 1, %24 ], [ %90, %64 ]
  %35 = icmp eq i64 %27, 0
  br i1 %35, label %48, label %36

36:                                               ; preds = %31, %36
  %37 = phi i64 [ %45, %36 ], [ %33, %31 ]
  %38 = phi i32 [ %44, %36 ], [ %34, %31 ]
  %39 = phi i64 [ %46, %36 ], [ %27, %31 ]
  %40 = getelementptr inbounds i32, i32* %16, i64 %37
  %41 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %37
  %42 = select i1 %13, i32* %40, i32* %41
  %43 = load i32, i32* %42, align 4
  %44 = mul nsw i32 %43, %38
  %45 = add nuw nsw i64 %37, 1
  %46 = add i64 %39, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %36, !llvm.loop !155

48:                                               ; preds = %31, %36, %6
  %49 = phi i32 [ 1, %6 ], [ %32, %31 ], [ %44, %36 ]
  %50 = add i32 %12, 1
  %51 = icmp slt i32 %50, %10
  br i1 %51, label %52, label %111

52:                                               ; preds = %48
  %53 = sext i32 %50 to i64
  %54 = xor i32 %11, -1
  %55 = add i32 %10, %54
  %56 = sub i32 %55, %8
  %57 = add i32 %10, -2
  %58 = sub i32 %57, %11
  %59 = sub i32 %58, %8
  %60 = and i32 %56, 3
  %61 = icmp ult i32 %59, 3
  br i1 %61, label %94, label %62

62:                                               ; preds = %52
  %63 = sub i32 %56, %60
  br label %124

64:                                               ; preds = %64, %29
  %65 = phi i64 [ 0, %29 ], [ %91, %64 ]
  %66 = phi i32 [ 1, %29 ], [ %90, %64 ]
  %67 = phi i64 [ %30, %29 ], [ %92, %64 ]
  %68 = getelementptr inbounds i32, i32* %16, i64 %65
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %65
  %70 = select i1 %13, i32* %68, i32* %69
  %71 = load i32, i32* %70, align 4
  %72 = mul nsw i32 %71, %66
  %73 = or i64 %65, 1
  %74 = getelementptr inbounds i32, i32* %16, i64 %73
  %75 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %73
  %76 = select i1 %13, i32* %74, i32* %75
  %77 = load i32, i32* %76, align 4
  %78 = mul nsw i32 %77, %72
  %79 = or i64 %65, 2
  %80 = getelementptr inbounds i32, i32* %16, i64 %79
  %81 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %79
  %82 = select i1 %13, i32* %80, i32* %81
  %83 = load i32, i32* %82, align 4
  %84 = mul nsw i32 %83, %78
  %85 = or i64 %65, 3
  %86 = getelementptr inbounds i32, i32* %16, i64 %85
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %85
  %88 = select i1 %13, i32* %86, i32* %87
  %89 = load i32, i32* %88, align 4
  %90 = mul nsw i32 %89, %84
  %91 = add nuw nsw i64 %65, 4
  %92 = add i64 %67, -4
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %31, label %64

94:                                               ; preds = %124, %52
  %95 = phi i32 [ undef, %52 ], [ %150, %124 ]
  %96 = phi i64 [ %53, %52 ], [ %151, %124 ]
  %97 = phi i32 [ 1, %52 ], [ %150, %124 ]
  %98 = icmp eq i32 %60, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %94, %99
  %100 = phi i64 [ %108, %99 ], [ %96, %94 ]
  %101 = phi i32 [ %107, %99 ], [ %97, %94 ]
  %102 = phi i32 [ %109, %99 ], [ %60, %94 ]
  %103 = getelementptr inbounds i32, i32* %16, i64 %100
  %104 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %100
  %105 = select i1 %13, i32* %103, i32* %104
  %106 = load i32, i32* %105, align 4
  %107 = mul nsw i32 %106, %101
  %108 = add nsw i64 %100, 1
  %109 = add i32 %102, -1
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %99, !llvm.loop !156

111:                                              ; preds = %94, %99, %48
  %112 = phi i32 [ 1, %48 ], [ %95, %94 ], [ %107, %99 ]
  %113 = icmp sgt i32 %49, 0
  br i1 %113, label %114, label %160

114:                                              ; preds = %111
  %115 = icmp sgt i32 %112, 0
  %116 = icmp sgt i32 %22, 1
  %117 = getelementptr inbounds %"class.std::__1::function.13", %"class.std::__1::function.13"* %5, i64 0, i32 0, i32 1, i32 0
  %118 = getelementptr inbounds %"class.std::__1::function.13", %"class.std::__1::function.13"* %5, i64 0, i32 0, i32 0
  %119 = sext i32 %112 to i64
  %120 = sext i32 %22 to i64
  %121 = zext i32 %49 to i64
  %122 = zext i32 %112 to i64
  %123 = zext i32 %22 to i64
  br label %154

124:                                              ; preds = %124, %62
  %125 = phi i64 [ %53, %62 ], [ %151, %124 ]
  %126 = phi i32 [ 1, %62 ], [ %150, %124 ]
  %127 = phi i32 [ %63, %62 ], [ %152, %124 ]
  %128 = getelementptr inbounds i32, i32* %16, i64 %125
  %129 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %125
  %130 = select i1 %13, i32* %128, i32* %129
  %131 = load i32, i32* %130, align 4
  %132 = mul nsw i32 %131, %126
  %133 = add nsw i64 %125, 1
  %134 = getelementptr inbounds i32, i32* %16, i64 %133
  %135 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %133
  %136 = select i1 %13, i32* %134, i32* %135
  %137 = load i32, i32* %136, align 4
  %138 = mul nsw i32 %137, %132
  %139 = add nsw i64 %125, 2
  %140 = getelementptr inbounds i32, i32* %16, i64 %139
  %141 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %139
  %142 = select i1 %13, i32* %140, i32* %141
  %143 = load i32, i32* %142, align 4
  %144 = mul nsw i32 %143, %138
  %145 = add nsw i64 %125, 3
  %146 = getelementptr inbounds i32, i32* %16, i64 %145
  %147 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %145
  %148 = select i1 %13, i32* %146, i32* %147
  %149 = load i32, i32* %148, align 4
  %150 = mul nsw i32 %149, %144
  %151 = add nsw i64 %125, 4
  %152 = add i32 %127, -4
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %94, label %124

154:                                              ; preds = %161, %114
  %155 = phi i64 [ 0, %114 ], [ %162, %161 ]
  br i1 %115, label %156, label %161

156:                                              ; preds = %154
  %157 = mul nsw i64 %155, %120
  %158 = mul nsw i64 %157, %119
  %159 = mul nsw i64 %155, %119
  br label %164

160:                                              ; preds = %161, %111
  ret void

161:                                              ; preds = %170, %154
  %162 = add nuw nsw i64 %155, 1
  %163 = icmp eq i64 %162, %121
  br i1 %163, label %160, label %154

164:                                              ; preds = %170, %156
  %165 = phi i64 [ 0, %156 ], [ %174, %170 ]
  br i1 %116, label %166, label %170

166:                                              ; preds = %164
  %167 = add nsw i64 %165, %158
  %168 = getelementptr inbounds i32, i32* %1, i64 %167
  %169 = load i32, i32* %168, align 4
  br label %176

170:                                              ; preds = %190, %164
  %171 = phi i32 [ 0, %164 ], [ %192, %190 ]
  %172 = add nsw i64 %165, %159
  %173 = getelementptr inbounds i32, i32* %4, i64 %172
  store i32 %171, i32* %173, align 4
  %174 = add nuw nsw i64 %165, 1
  %175 = icmp eq i64 %174, %122
  br i1 %175, label %161, label %164

176:                                              ; preds = %190, %166
  %177 = phi i64 [ 1, %166 ], [ %193, %190 ]
  %178 = phi i32 [ 0, %166 ], [ %192, %190 ]
  %179 = phi i32 [ %169, %166 ], [ %191, %190 ]
  %180 = add nsw i64 %177, %157
  %181 = mul nsw i64 %180, %119
  %182 = add nsw i64 %181, %165
  %183 = getelementptr inbounds i32, i32* %1, i64 %182
  %184 = load i32, i32* %183, align 4
  %185 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32, i32)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32, i32)** %117, align 8
  %186 = tail call zeroext i1 %185(%"union.std::__1::__function::__policy_storage"* %118, i32 %184, i32 %179) #6
  br i1 %186, label %187, label %190

187:                                              ; preds = %176
  %188 = load i32, i32* %183, align 4
  %189 = trunc i64 %177 to i32
  br label %190

190:                                              ; preds = %187, %176
  %191 = phi i32 [ %188, %187 ], [ %179, %176 ]
  %192 = phi i32 [ %189, %187 ], [ %178, %176 ]
  %193 = add nuw nsw i64 %177, 1
  %194 = icmp eq i64 %193, %123
  br i1 %194, label %170, label %176
}

declare i8* @TfLiteTypeGetName(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops9ArgMinMaxIfliNSt3__18functionIFbffEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_(%"class.tflite::RuntimeShape"* dereferenceable(32), float*, i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i64*, %"class.std::__1::function"* dereferenceable(32)) local_unnamed_addr #0 comdat {
  %7 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %8 = load i32, i32* %2, align 4
  %9 = icmp slt i32 %8, 0
  %10 = load i32, i32* %7, align 8
  %11 = select i1 %9, i32 %10, i32 0
  %12 = add i32 %11, %8
  %13 = icmp sgt i32 %10, 5
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %union.anon, %union.anon* %14, i64 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = sext i32 %12 to i64
  %18 = getelementptr inbounds i32, i32* %16, i64 %17
  %19 = bitcast %union.anon* %14 to [5 x i32]*
  %20 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %17
  %21 = select i1 %13, i32* %18, i32* %20
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %12, 0
  br i1 %23, label %24, label %48

24:                                               ; preds = %6
  %25 = zext i32 %12 to i64
  %26 = add nsw i64 %25, -1
  %27 = and i64 %25, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub nsw i64 %25, %27
  br label %64

31:                                               ; preds = %64, %24
  %32 = phi i32 [ undef, %24 ], [ %90, %64 ]
  %33 = phi i64 [ 0, %24 ], [ %91, %64 ]
  %34 = phi i32 [ 1, %24 ], [ %90, %64 ]
  %35 = icmp eq i64 %27, 0
  br i1 %35, label %48, label %36

36:                                               ; preds = %31, %36
  %37 = phi i64 [ %45, %36 ], [ %33, %31 ]
  %38 = phi i32 [ %44, %36 ], [ %34, %31 ]
  %39 = phi i64 [ %46, %36 ], [ %27, %31 ]
  %40 = getelementptr inbounds i32, i32* %16, i64 %37
  %41 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %37
  %42 = select i1 %13, i32* %40, i32* %41
  %43 = load i32, i32* %42, align 4
  %44 = mul nsw i32 %43, %38
  %45 = add nuw nsw i64 %37, 1
  %46 = add i64 %39, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %36, !llvm.loop !157

48:                                               ; preds = %31, %36, %6
  %49 = phi i32 [ 1, %6 ], [ %32, %31 ], [ %44, %36 ]
  %50 = add i32 %12, 1
  %51 = icmp slt i32 %50, %10
  br i1 %51, label %52, label %111

52:                                               ; preds = %48
  %53 = sext i32 %50 to i64
  %54 = xor i32 %11, -1
  %55 = add i32 %10, %54
  %56 = sub i32 %55, %8
  %57 = add i32 %10, -2
  %58 = sub i32 %57, %11
  %59 = sub i32 %58, %8
  %60 = and i32 %56, 3
  %61 = icmp ult i32 %59, 3
  br i1 %61, label %94, label %62

62:                                               ; preds = %52
  %63 = sub i32 %56, %60
  br label %124

64:                                               ; preds = %64, %29
  %65 = phi i64 [ 0, %29 ], [ %91, %64 ]
  %66 = phi i32 [ 1, %29 ], [ %90, %64 ]
  %67 = phi i64 [ %30, %29 ], [ %92, %64 ]
  %68 = getelementptr inbounds i32, i32* %16, i64 %65
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %65
  %70 = select i1 %13, i32* %68, i32* %69
  %71 = load i32, i32* %70, align 4
  %72 = mul nsw i32 %71, %66
  %73 = or i64 %65, 1
  %74 = getelementptr inbounds i32, i32* %16, i64 %73
  %75 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %73
  %76 = select i1 %13, i32* %74, i32* %75
  %77 = load i32, i32* %76, align 4
  %78 = mul nsw i32 %77, %72
  %79 = or i64 %65, 2
  %80 = getelementptr inbounds i32, i32* %16, i64 %79
  %81 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %79
  %82 = select i1 %13, i32* %80, i32* %81
  %83 = load i32, i32* %82, align 4
  %84 = mul nsw i32 %83, %78
  %85 = or i64 %65, 3
  %86 = getelementptr inbounds i32, i32* %16, i64 %85
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %85
  %88 = select i1 %13, i32* %86, i32* %87
  %89 = load i32, i32* %88, align 4
  %90 = mul nsw i32 %89, %84
  %91 = add nuw nsw i64 %65, 4
  %92 = add i64 %67, -4
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %31, label %64

94:                                               ; preds = %124, %52
  %95 = phi i32 [ undef, %52 ], [ %150, %124 ]
  %96 = phi i64 [ %53, %52 ], [ %151, %124 ]
  %97 = phi i32 [ 1, %52 ], [ %150, %124 ]
  %98 = icmp eq i32 %60, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %94, %99
  %100 = phi i64 [ %108, %99 ], [ %96, %94 ]
  %101 = phi i32 [ %107, %99 ], [ %97, %94 ]
  %102 = phi i32 [ %109, %99 ], [ %60, %94 ]
  %103 = getelementptr inbounds i32, i32* %16, i64 %100
  %104 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %100
  %105 = select i1 %13, i32* %103, i32* %104
  %106 = load i32, i32* %105, align 4
  %107 = mul nsw i32 %106, %101
  %108 = add nsw i64 %100, 1
  %109 = add i32 %102, -1
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %99, !llvm.loop !158

111:                                              ; preds = %94, %99, %48
  %112 = phi i32 [ 1, %48 ], [ %95, %94 ], [ %107, %99 ]
  %113 = icmp sgt i32 %49, 0
  br i1 %113, label %114, label %160

114:                                              ; preds = %111
  %115 = icmp sgt i32 %112, 0
  %116 = icmp sgt i32 %22, 1
  %117 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 1, i32 0
  %118 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 0
  %119 = sext i32 %112 to i64
  %120 = sext i32 %22 to i64
  %121 = zext i32 %49 to i64
  %122 = zext i32 %112 to i64
  %123 = zext i32 %22 to i64
  br label %154

124:                                              ; preds = %124, %62
  %125 = phi i64 [ %53, %62 ], [ %151, %124 ]
  %126 = phi i32 [ 1, %62 ], [ %150, %124 ]
  %127 = phi i32 [ %63, %62 ], [ %152, %124 ]
  %128 = getelementptr inbounds i32, i32* %16, i64 %125
  %129 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %125
  %130 = select i1 %13, i32* %128, i32* %129
  %131 = load i32, i32* %130, align 4
  %132 = mul nsw i32 %131, %126
  %133 = add nsw i64 %125, 1
  %134 = getelementptr inbounds i32, i32* %16, i64 %133
  %135 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %133
  %136 = select i1 %13, i32* %134, i32* %135
  %137 = load i32, i32* %136, align 4
  %138 = mul nsw i32 %137, %132
  %139 = add nsw i64 %125, 2
  %140 = getelementptr inbounds i32, i32* %16, i64 %139
  %141 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %139
  %142 = select i1 %13, i32* %140, i32* %141
  %143 = load i32, i32* %142, align 4
  %144 = mul nsw i32 %143, %138
  %145 = add nsw i64 %125, 3
  %146 = getelementptr inbounds i32, i32* %16, i64 %145
  %147 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %145
  %148 = select i1 %13, i32* %146, i32* %147
  %149 = load i32, i32* %148, align 4
  %150 = mul nsw i32 %149, %144
  %151 = add nsw i64 %125, 4
  %152 = add i32 %127, -4
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %94, label %124

154:                                              ; preds = %161, %114
  %155 = phi i64 [ 0, %114 ], [ %162, %161 ]
  br i1 %115, label %156, label %161

156:                                              ; preds = %154
  %157 = mul nsw i64 %155, %120
  %158 = mul nsw i64 %157, %119
  %159 = mul nsw i64 %155, %119
  br label %164

160:                                              ; preds = %161, %111
  ret void

161:                                              ; preds = %170, %154
  %162 = add nuw nsw i64 %155, 1
  %163 = icmp eq i64 %162, %121
  br i1 %163, label %160, label %154

164:                                              ; preds = %170, %156
  %165 = phi i64 [ 0, %156 ], [ %174, %170 ]
  br i1 %116, label %166, label %170

166:                                              ; preds = %164
  %167 = add nsw i64 %165, %158
  %168 = getelementptr inbounds float, float* %1, i64 %167
  %169 = load float, float* %168, align 4
  br label %176

170:                                              ; preds = %189, %164
  %171 = phi i64 [ 0, %164 ], [ %191, %189 ]
  %172 = add nsw i64 %165, %159
  %173 = getelementptr inbounds i64, i64* %4, i64 %172
  store i64 %171, i64* %173, align 8
  %174 = add nuw nsw i64 %165, 1
  %175 = icmp eq i64 %174, %122
  br i1 %175, label %161, label %164

176:                                              ; preds = %189, %166
  %177 = phi i64 [ 1, %166 ], [ %192, %189 ]
  %178 = phi i64 [ 0, %166 ], [ %191, %189 ]
  %179 = phi float [ %169, %166 ], [ %190, %189 ]
  %180 = add nsw i64 %177, %157
  %181 = mul nsw i64 %180, %119
  %182 = add nsw i64 %181, %165
  %183 = getelementptr inbounds float, float* %1, i64 %182
  %184 = load float, float* %183, align 4
  %185 = load i1 (%"union.std::__1::__function::__policy_storage"*, float, float)*, i1 (%"union.std::__1::__function::__policy_storage"*, float, float)** %117, align 8
  %186 = tail call zeroext i1 %185(%"union.std::__1::__function::__policy_storage"* %118, float %184, float %179) #6
  br i1 %186, label %187, label %189

187:                                              ; preds = %176
  %188 = load float, float* %183, align 4
  br label %189

189:                                              ; preds = %187, %176
  %190 = phi float [ %188, %187 ], [ %179, %176 ]
  %191 = phi i64 [ %177, %187 ], [ %178, %176 ]
  %192 = add nuw nsw i64 %177, 1
  %193 = icmp eq i64 %192, %123
  br i1 %193, label %170, label %176
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops9ArgMinMaxIhliNSt3__18functionIFbhhEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_(%"class.tflite::RuntimeShape"* dereferenceable(32), i8*, i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i64*, %"class.std::__1::function.1"* dereferenceable(32)) local_unnamed_addr #0 comdat {
  %7 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %8 = load i32, i32* %2, align 4
  %9 = icmp slt i32 %8, 0
  %10 = load i32, i32* %7, align 8
  %11 = select i1 %9, i32 %10, i32 0
  %12 = add i32 %11, %8
  %13 = icmp sgt i32 %10, 5
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %union.anon, %union.anon* %14, i64 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = sext i32 %12 to i64
  %18 = getelementptr inbounds i32, i32* %16, i64 %17
  %19 = bitcast %union.anon* %14 to [5 x i32]*
  %20 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %17
  %21 = select i1 %13, i32* %18, i32* %20
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %12, 0
  br i1 %23, label %24, label %48

24:                                               ; preds = %6
  %25 = zext i32 %12 to i64
  %26 = add nsw i64 %25, -1
  %27 = and i64 %25, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub nsw i64 %25, %27
  br label %64

31:                                               ; preds = %64, %24
  %32 = phi i32 [ undef, %24 ], [ %90, %64 ]
  %33 = phi i64 [ 0, %24 ], [ %91, %64 ]
  %34 = phi i32 [ 1, %24 ], [ %90, %64 ]
  %35 = icmp eq i64 %27, 0
  br i1 %35, label %48, label %36

36:                                               ; preds = %31, %36
  %37 = phi i64 [ %45, %36 ], [ %33, %31 ]
  %38 = phi i32 [ %44, %36 ], [ %34, %31 ]
  %39 = phi i64 [ %46, %36 ], [ %27, %31 ]
  %40 = getelementptr inbounds i32, i32* %16, i64 %37
  %41 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %37
  %42 = select i1 %13, i32* %40, i32* %41
  %43 = load i32, i32* %42, align 4
  %44 = mul nsw i32 %43, %38
  %45 = add nuw nsw i64 %37, 1
  %46 = add i64 %39, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %36, !llvm.loop !159

48:                                               ; preds = %31, %36, %6
  %49 = phi i32 [ 1, %6 ], [ %32, %31 ], [ %44, %36 ]
  %50 = add i32 %12, 1
  %51 = icmp slt i32 %50, %10
  br i1 %51, label %52, label %111

52:                                               ; preds = %48
  %53 = sext i32 %50 to i64
  %54 = xor i32 %11, -1
  %55 = add i32 %10, %54
  %56 = sub i32 %55, %8
  %57 = add i32 %10, -2
  %58 = sub i32 %57, %11
  %59 = sub i32 %58, %8
  %60 = and i32 %56, 3
  %61 = icmp ult i32 %59, 3
  br i1 %61, label %94, label %62

62:                                               ; preds = %52
  %63 = sub i32 %56, %60
  br label %124

64:                                               ; preds = %64, %29
  %65 = phi i64 [ 0, %29 ], [ %91, %64 ]
  %66 = phi i32 [ 1, %29 ], [ %90, %64 ]
  %67 = phi i64 [ %30, %29 ], [ %92, %64 ]
  %68 = getelementptr inbounds i32, i32* %16, i64 %65
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %65
  %70 = select i1 %13, i32* %68, i32* %69
  %71 = load i32, i32* %70, align 4
  %72 = mul nsw i32 %71, %66
  %73 = or i64 %65, 1
  %74 = getelementptr inbounds i32, i32* %16, i64 %73
  %75 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %73
  %76 = select i1 %13, i32* %74, i32* %75
  %77 = load i32, i32* %76, align 4
  %78 = mul nsw i32 %77, %72
  %79 = or i64 %65, 2
  %80 = getelementptr inbounds i32, i32* %16, i64 %79
  %81 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %79
  %82 = select i1 %13, i32* %80, i32* %81
  %83 = load i32, i32* %82, align 4
  %84 = mul nsw i32 %83, %78
  %85 = or i64 %65, 3
  %86 = getelementptr inbounds i32, i32* %16, i64 %85
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %85
  %88 = select i1 %13, i32* %86, i32* %87
  %89 = load i32, i32* %88, align 4
  %90 = mul nsw i32 %89, %84
  %91 = add nuw nsw i64 %65, 4
  %92 = add i64 %67, -4
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %31, label %64

94:                                               ; preds = %124, %52
  %95 = phi i32 [ undef, %52 ], [ %150, %124 ]
  %96 = phi i64 [ %53, %52 ], [ %151, %124 ]
  %97 = phi i32 [ 1, %52 ], [ %150, %124 ]
  %98 = icmp eq i32 %60, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %94, %99
  %100 = phi i64 [ %108, %99 ], [ %96, %94 ]
  %101 = phi i32 [ %107, %99 ], [ %97, %94 ]
  %102 = phi i32 [ %109, %99 ], [ %60, %94 ]
  %103 = getelementptr inbounds i32, i32* %16, i64 %100
  %104 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %100
  %105 = select i1 %13, i32* %103, i32* %104
  %106 = load i32, i32* %105, align 4
  %107 = mul nsw i32 %106, %101
  %108 = add nsw i64 %100, 1
  %109 = add i32 %102, -1
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %99, !llvm.loop !160

111:                                              ; preds = %94, %99, %48
  %112 = phi i32 [ 1, %48 ], [ %95, %94 ], [ %107, %99 ]
  %113 = icmp sgt i32 %49, 0
  br i1 %113, label %114, label %160

114:                                              ; preds = %111
  %115 = icmp sgt i32 %112, 0
  %116 = icmp sgt i32 %22, 1
  %117 = getelementptr inbounds %"class.std::__1::function.1", %"class.std::__1::function.1"* %5, i64 0, i32 0, i32 1, i32 0
  %118 = getelementptr inbounds %"class.std::__1::function.1", %"class.std::__1::function.1"* %5, i64 0, i32 0, i32 0
  %119 = sext i32 %112 to i64
  %120 = sext i32 %22 to i64
  %121 = zext i32 %49 to i64
  %122 = zext i32 %112 to i64
  %123 = zext i32 %22 to i64
  br label %154

124:                                              ; preds = %124, %62
  %125 = phi i64 [ %53, %62 ], [ %151, %124 ]
  %126 = phi i32 [ 1, %62 ], [ %150, %124 ]
  %127 = phi i32 [ %63, %62 ], [ %152, %124 ]
  %128 = getelementptr inbounds i32, i32* %16, i64 %125
  %129 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %125
  %130 = select i1 %13, i32* %128, i32* %129
  %131 = load i32, i32* %130, align 4
  %132 = mul nsw i32 %131, %126
  %133 = add nsw i64 %125, 1
  %134 = getelementptr inbounds i32, i32* %16, i64 %133
  %135 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %133
  %136 = select i1 %13, i32* %134, i32* %135
  %137 = load i32, i32* %136, align 4
  %138 = mul nsw i32 %137, %132
  %139 = add nsw i64 %125, 2
  %140 = getelementptr inbounds i32, i32* %16, i64 %139
  %141 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %139
  %142 = select i1 %13, i32* %140, i32* %141
  %143 = load i32, i32* %142, align 4
  %144 = mul nsw i32 %143, %138
  %145 = add nsw i64 %125, 3
  %146 = getelementptr inbounds i32, i32* %16, i64 %145
  %147 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %145
  %148 = select i1 %13, i32* %146, i32* %147
  %149 = load i32, i32* %148, align 4
  %150 = mul nsw i32 %149, %144
  %151 = add nsw i64 %125, 4
  %152 = add i32 %127, -4
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %94, label %124

154:                                              ; preds = %161, %114
  %155 = phi i64 [ 0, %114 ], [ %162, %161 ]
  br i1 %115, label %156, label %161

156:                                              ; preds = %154
  %157 = mul nsw i64 %155, %120
  %158 = mul nsw i64 %157, %119
  %159 = mul nsw i64 %155, %119
  br label %164

160:                                              ; preds = %161, %111
  ret void

161:                                              ; preds = %170, %154
  %162 = add nuw nsw i64 %155, 1
  %163 = icmp eq i64 %162, %121
  br i1 %163, label %160, label %154

164:                                              ; preds = %170, %156
  %165 = phi i64 [ 0, %156 ], [ %174, %170 ]
  br i1 %116, label %166, label %170

166:                                              ; preds = %164
  %167 = add nsw i64 %165, %158
  %168 = getelementptr inbounds i8, i8* %1, i64 %167
  %169 = load i8, i8* %168, align 1
  br label %176

170:                                              ; preds = %189, %164
  %171 = phi i64 [ 0, %164 ], [ %191, %189 ]
  %172 = add nsw i64 %165, %159
  %173 = getelementptr inbounds i64, i64* %4, i64 %172
  store i64 %171, i64* %173, align 8
  %174 = add nuw nsw i64 %165, 1
  %175 = icmp eq i64 %174, %122
  br i1 %175, label %161, label %164

176:                                              ; preds = %189, %166
  %177 = phi i64 [ 1, %166 ], [ %192, %189 ]
  %178 = phi i64 [ 0, %166 ], [ %191, %189 ]
  %179 = phi i8 [ %169, %166 ], [ %190, %189 ]
  %180 = add nsw i64 %177, %157
  %181 = mul nsw i64 %180, %119
  %182 = add nsw i64 %181, %165
  %183 = getelementptr inbounds i8, i8* %1, i64 %182
  %184 = load i8, i8* %183, align 1
  %185 = load i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)*, i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)** %117, align 8
  %186 = tail call zeroext i1 %185(%"union.std::__1::__function::__policy_storage"* %118, i8 zeroext %184, i8 zeroext %179) #6
  br i1 %186, label %187, label %189

187:                                              ; preds = %176
  %188 = load i8, i8* %183, align 1
  br label %189

189:                                              ; preds = %187, %176
  %190 = phi i8 [ %188, %187 ], [ %179, %176 ]
  %191 = phi i64 [ %177, %187 ], [ %178, %176 ]
  %192 = add nuw nsw i64 %177, 1
  %193 = icmp eq i64 %192, %123
  br i1 %193, label %170, label %176
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops9ArgMinMaxIaliNSt3__18functionIFbaaEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_(%"class.tflite::RuntimeShape"* dereferenceable(32), i8*, i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i64*, %"class.std::__1::function.7"* dereferenceable(32)) local_unnamed_addr #0 comdat {
  %7 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %8 = load i32, i32* %2, align 4
  %9 = icmp slt i32 %8, 0
  %10 = load i32, i32* %7, align 8
  %11 = select i1 %9, i32 %10, i32 0
  %12 = add i32 %11, %8
  %13 = icmp sgt i32 %10, 5
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %union.anon, %union.anon* %14, i64 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = sext i32 %12 to i64
  %18 = getelementptr inbounds i32, i32* %16, i64 %17
  %19 = bitcast %union.anon* %14 to [5 x i32]*
  %20 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %17
  %21 = select i1 %13, i32* %18, i32* %20
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %12, 0
  br i1 %23, label %24, label %48

24:                                               ; preds = %6
  %25 = zext i32 %12 to i64
  %26 = add nsw i64 %25, -1
  %27 = and i64 %25, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub nsw i64 %25, %27
  br label %64

31:                                               ; preds = %64, %24
  %32 = phi i32 [ undef, %24 ], [ %90, %64 ]
  %33 = phi i64 [ 0, %24 ], [ %91, %64 ]
  %34 = phi i32 [ 1, %24 ], [ %90, %64 ]
  %35 = icmp eq i64 %27, 0
  br i1 %35, label %48, label %36

36:                                               ; preds = %31, %36
  %37 = phi i64 [ %45, %36 ], [ %33, %31 ]
  %38 = phi i32 [ %44, %36 ], [ %34, %31 ]
  %39 = phi i64 [ %46, %36 ], [ %27, %31 ]
  %40 = getelementptr inbounds i32, i32* %16, i64 %37
  %41 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %37
  %42 = select i1 %13, i32* %40, i32* %41
  %43 = load i32, i32* %42, align 4
  %44 = mul nsw i32 %43, %38
  %45 = add nuw nsw i64 %37, 1
  %46 = add i64 %39, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %36, !llvm.loop !161

48:                                               ; preds = %31, %36, %6
  %49 = phi i32 [ 1, %6 ], [ %32, %31 ], [ %44, %36 ]
  %50 = add i32 %12, 1
  %51 = icmp slt i32 %50, %10
  br i1 %51, label %52, label %111

52:                                               ; preds = %48
  %53 = sext i32 %50 to i64
  %54 = xor i32 %11, -1
  %55 = add i32 %10, %54
  %56 = sub i32 %55, %8
  %57 = add i32 %10, -2
  %58 = sub i32 %57, %11
  %59 = sub i32 %58, %8
  %60 = and i32 %56, 3
  %61 = icmp ult i32 %59, 3
  br i1 %61, label %94, label %62

62:                                               ; preds = %52
  %63 = sub i32 %56, %60
  br label %124

64:                                               ; preds = %64, %29
  %65 = phi i64 [ 0, %29 ], [ %91, %64 ]
  %66 = phi i32 [ 1, %29 ], [ %90, %64 ]
  %67 = phi i64 [ %30, %29 ], [ %92, %64 ]
  %68 = getelementptr inbounds i32, i32* %16, i64 %65
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %65
  %70 = select i1 %13, i32* %68, i32* %69
  %71 = load i32, i32* %70, align 4
  %72 = mul nsw i32 %71, %66
  %73 = or i64 %65, 1
  %74 = getelementptr inbounds i32, i32* %16, i64 %73
  %75 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %73
  %76 = select i1 %13, i32* %74, i32* %75
  %77 = load i32, i32* %76, align 4
  %78 = mul nsw i32 %77, %72
  %79 = or i64 %65, 2
  %80 = getelementptr inbounds i32, i32* %16, i64 %79
  %81 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %79
  %82 = select i1 %13, i32* %80, i32* %81
  %83 = load i32, i32* %82, align 4
  %84 = mul nsw i32 %83, %78
  %85 = or i64 %65, 3
  %86 = getelementptr inbounds i32, i32* %16, i64 %85
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %85
  %88 = select i1 %13, i32* %86, i32* %87
  %89 = load i32, i32* %88, align 4
  %90 = mul nsw i32 %89, %84
  %91 = add nuw nsw i64 %65, 4
  %92 = add i64 %67, -4
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %31, label %64

94:                                               ; preds = %124, %52
  %95 = phi i32 [ undef, %52 ], [ %150, %124 ]
  %96 = phi i64 [ %53, %52 ], [ %151, %124 ]
  %97 = phi i32 [ 1, %52 ], [ %150, %124 ]
  %98 = icmp eq i32 %60, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %94, %99
  %100 = phi i64 [ %108, %99 ], [ %96, %94 ]
  %101 = phi i32 [ %107, %99 ], [ %97, %94 ]
  %102 = phi i32 [ %109, %99 ], [ %60, %94 ]
  %103 = getelementptr inbounds i32, i32* %16, i64 %100
  %104 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %100
  %105 = select i1 %13, i32* %103, i32* %104
  %106 = load i32, i32* %105, align 4
  %107 = mul nsw i32 %106, %101
  %108 = add nsw i64 %100, 1
  %109 = add i32 %102, -1
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %99, !llvm.loop !162

111:                                              ; preds = %94, %99, %48
  %112 = phi i32 [ 1, %48 ], [ %95, %94 ], [ %107, %99 ]
  %113 = icmp sgt i32 %49, 0
  br i1 %113, label %114, label %160

114:                                              ; preds = %111
  %115 = icmp sgt i32 %112, 0
  %116 = icmp sgt i32 %22, 1
  %117 = getelementptr inbounds %"class.std::__1::function.7", %"class.std::__1::function.7"* %5, i64 0, i32 0, i32 1, i32 0
  %118 = getelementptr inbounds %"class.std::__1::function.7", %"class.std::__1::function.7"* %5, i64 0, i32 0, i32 0
  %119 = sext i32 %112 to i64
  %120 = sext i32 %22 to i64
  %121 = zext i32 %49 to i64
  %122 = zext i32 %112 to i64
  %123 = zext i32 %22 to i64
  br label %154

124:                                              ; preds = %124, %62
  %125 = phi i64 [ %53, %62 ], [ %151, %124 ]
  %126 = phi i32 [ 1, %62 ], [ %150, %124 ]
  %127 = phi i32 [ %63, %62 ], [ %152, %124 ]
  %128 = getelementptr inbounds i32, i32* %16, i64 %125
  %129 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %125
  %130 = select i1 %13, i32* %128, i32* %129
  %131 = load i32, i32* %130, align 4
  %132 = mul nsw i32 %131, %126
  %133 = add nsw i64 %125, 1
  %134 = getelementptr inbounds i32, i32* %16, i64 %133
  %135 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %133
  %136 = select i1 %13, i32* %134, i32* %135
  %137 = load i32, i32* %136, align 4
  %138 = mul nsw i32 %137, %132
  %139 = add nsw i64 %125, 2
  %140 = getelementptr inbounds i32, i32* %16, i64 %139
  %141 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %139
  %142 = select i1 %13, i32* %140, i32* %141
  %143 = load i32, i32* %142, align 4
  %144 = mul nsw i32 %143, %138
  %145 = add nsw i64 %125, 3
  %146 = getelementptr inbounds i32, i32* %16, i64 %145
  %147 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %145
  %148 = select i1 %13, i32* %146, i32* %147
  %149 = load i32, i32* %148, align 4
  %150 = mul nsw i32 %149, %144
  %151 = add nsw i64 %125, 4
  %152 = add i32 %127, -4
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %94, label %124

154:                                              ; preds = %161, %114
  %155 = phi i64 [ 0, %114 ], [ %162, %161 ]
  br i1 %115, label %156, label %161

156:                                              ; preds = %154
  %157 = mul nsw i64 %155, %120
  %158 = mul nsw i64 %157, %119
  %159 = mul nsw i64 %155, %119
  br label %164

160:                                              ; preds = %161, %111
  ret void

161:                                              ; preds = %170, %154
  %162 = add nuw nsw i64 %155, 1
  %163 = icmp eq i64 %162, %121
  br i1 %163, label %160, label %154

164:                                              ; preds = %170, %156
  %165 = phi i64 [ 0, %156 ], [ %174, %170 ]
  br i1 %116, label %166, label %170

166:                                              ; preds = %164
  %167 = add nsw i64 %165, %158
  %168 = getelementptr inbounds i8, i8* %1, i64 %167
  %169 = load i8, i8* %168, align 1
  br label %176

170:                                              ; preds = %189, %164
  %171 = phi i64 [ 0, %164 ], [ %191, %189 ]
  %172 = add nsw i64 %165, %159
  %173 = getelementptr inbounds i64, i64* %4, i64 %172
  store i64 %171, i64* %173, align 8
  %174 = add nuw nsw i64 %165, 1
  %175 = icmp eq i64 %174, %122
  br i1 %175, label %161, label %164

176:                                              ; preds = %189, %166
  %177 = phi i64 [ 1, %166 ], [ %192, %189 ]
  %178 = phi i64 [ 0, %166 ], [ %191, %189 ]
  %179 = phi i8 [ %169, %166 ], [ %190, %189 ]
  %180 = add nsw i64 %177, %157
  %181 = mul nsw i64 %180, %119
  %182 = add nsw i64 %181, %165
  %183 = getelementptr inbounds i8, i8* %1, i64 %182
  %184 = load i8, i8* %183, align 1
  %185 = load i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)*, i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)** %117, align 8
  %186 = tail call zeroext i1 %185(%"union.std::__1::__function::__policy_storage"* %118, i8 signext %184, i8 signext %179) #6
  br i1 %186, label %187, label %189

187:                                              ; preds = %176
  %188 = load i8, i8* %183, align 1
  br label %189

189:                                              ; preds = %187, %176
  %190 = phi i8 [ %188, %187 ], [ %179, %176 ]
  %191 = phi i64 [ %177, %187 ], [ %178, %176 ]
  %192 = add nuw nsw i64 %177, 1
  %193 = icmp eq i64 %192, %123
  br i1 %193, label %170, label %176
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops9ArgMinMaxIiliNSt3__18functionIFbiiEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_(%"class.tflite::RuntimeShape"* dereferenceable(32), i32*, i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i64*, %"class.std::__1::function.13"* dereferenceable(32)) local_unnamed_addr #0 comdat {
  %7 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %8 = load i32, i32* %2, align 4
  %9 = icmp slt i32 %8, 0
  %10 = load i32, i32* %7, align 8
  %11 = select i1 %9, i32 %10, i32 0
  %12 = add i32 %11, %8
  %13 = icmp sgt i32 %10, 5
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %union.anon, %union.anon* %14, i64 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = sext i32 %12 to i64
  %18 = getelementptr inbounds i32, i32* %16, i64 %17
  %19 = bitcast %union.anon* %14 to [5 x i32]*
  %20 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %17
  %21 = select i1 %13, i32* %18, i32* %20
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %12, 0
  br i1 %23, label %24, label %48

24:                                               ; preds = %6
  %25 = zext i32 %12 to i64
  %26 = add nsw i64 %25, -1
  %27 = and i64 %25, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub nsw i64 %25, %27
  br label %64

31:                                               ; preds = %64, %24
  %32 = phi i32 [ undef, %24 ], [ %90, %64 ]
  %33 = phi i64 [ 0, %24 ], [ %91, %64 ]
  %34 = phi i32 [ 1, %24 ], [ %90, %64 ]
  %35 = icmp eq i64 %27, 0
  br i1 %35, label %48, label %36

36:                                               ; preds = %31, %36
  %37 = phi i64 [ %45, %36 ], [ %33, %31 ]
  %38 = phi i32 [ %44, %36 ], [ %34, %31 ]
  %39 = phi i64 [ %46, %36 ], [ %27, %31 ]
  %40 = getelementptr inbounds i32, i32* %16, i64 %37
  %41 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %37
  %42 = select i1 %13, i32* %40, i32* %41
  %43 = load i32, i32* %42, align 4
  %44 = mul nsw i32 %43, %38
  %45 = add nuw nsw i64 %37, 1
  %46 = add i64 %39, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %36, !llvm.loop !163

48:                                               ; preds = %31, %36, %6
  %49 = phi i32 [ 1, %6 ], [ %32, %31 ], [ %44, %36 ]
  %50 = add i32 %12, 1
  %51 = icmp slt i32 %50, %10
  br i1 %51, label %52, label %111

52:                                               ; preds = %48
  %53 = sext i32 %50 to i64
  %54 = xor i32 %11, -1
  %55 = add i32 %10, %54
  %56 = sub i32 %55, %8
  %57 = add i32 %10, -2
  %58 = sub i32 %57, %11
  %59 = sub i32 %58, %8
  %60 = and i32 %56, 3
  %61 = icmp ult i32 %59, 3
  br i1 %61, label %94, label %62

62:                                               ; preds = %52
  %63 = sub i32 %56, %60
  br label %124

64:                                               ; preds = %64, %29
  %65 = phi i64 [ 0, %29 ], [ %91, %64 ]
  %66 = phi i32 [ 1, %29 ], [ %90, %64 ]
  %67 = phi i64 [ %30, %29 ], [ %92, %64 ]
  %68 = getelementptr inbounds i32, i32* %16, i64 %65
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %65
  %70 = select i1 %13, i32* %68, i32* %69
  %71 = load i32, i32* %70, align 4
  %72 = mul nsw i32 %71, %66
  %73 = or i64 %65, 1
  %74 = getelementptr inbounds i32, i32* %16, i64 %73
  %75 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %73
  %76 = select i1 %13, i32* %74, i32* %75
  %77 = load i32, i32* %76, align 4
  %78 = mul nsw i32 %77, %72
  %79 = or i64 %65, 2
  %80 = getelementptr inbounds i32, i32* %16, i64 %79
  %81 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %79
  %82 = select i1 %13, i32* %80, i32* %81
  %83 = load i32, i32* %82, align 4
  %84 = mul nsw i32 %83, %78
  %85 = or i64 %65, 3
  %86 = getelementptr inbounds i32, i32* %16, i64 %85
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %85
  %88 = select i1 %13, i32* %86, i32* %87
  %89 = load i32, i32* %88, align 4
  %90 = mul nsw i32 %89, %84
  %91 = add nuw nsw i64 %65, 4
  %92 = add i64 %67, -4
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %31, label %64

94:                                               ; preds = %124, %52
  %95 = phi i32 [ undef, %52 ], [ %150, %124 ]
  %96 = phi i64 [ %53, %52 ], [ %151, %124 ]
  %97 = phi i32 [ 1, %52 ], [ %150, %124 ]
  %98 = icmp eq i32 %60, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %94, %99
  %100 = phi i64 [ %108, %99 ], [ %96, %94 ]
  %101 = phi i32 [ %107, %99 ], [ %97, %94 ]
  %102 = phi i32 [ %109, %99 ], [ %60, %94 ]
  %103 = getelementptr inbounds i32, i32* %16, i64 %100
  %104 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %100
  %105 = select i1 %13, i32* %103, i32* %104
  %106 = load i32, i32* %105, align 4
  %107 = mul nsw i32 %106, %101
  %108 = add nsw i64 %100, 1
  %109 = add i32 %102, -1
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %99, !llvm.loop !164

111:                                              ; preds = %94, %99, %48
  %112 = phi i32 [ 1, %48 ], [ %95, %94 ], [ %107, %99 ]
  %113 = icmp sgt i32 %49, 0
  br i1 %113, label %114, label %160

114:                                              ; preds = %111
  %115 = icmp sgt i32 %112, 0
  %116 = icmp sgt i32 %22, 1
  %117 = getelementptr inbounds %"class.std::__1::function.13", %"class.std::__1::function.13"* %5, i64 0, i32 0, i32 1, i32 0
  %118 = getelementptr inbounds %"class.std::__1::function.13", %"class.std::__1::function.13"* %5, i64 0, i32 0, i32 0
  %119 = sext i32 %112 to i64
  %120 = sext i32 %22 to i64
  %121 = zext i32 %49 to i64
  %122 = zext i32 %112 to i64
  %123 = zext i32 %22 to i64
  br label %154

124:                                              ; preds = %124, %62
  %125 = phi i64 [ %53, %62 ], [ %151, %124 ]
  %126 = phi i32 [ 1, %62 ], [ %150, %124 ]
  %127 = phi i32 [ %63, %62 ], [ %152, %124 ]
  %128 = getelementptr inbounds i32, i32* %16, i64 %125
  %129 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %125
  %130 = select i1 %13, i32* %128, i32* %129
  %131 = load i32, i32* %130, align 4
  %132 = mul nsw i32 %131, %126
  %133 = add nsw i64 %125, 1
  %134 = getelementptr inbounds i32, i32* %16, i64 %133
  %135 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %133
  %136 = select i1 %13, i32* %134, i32* %135
  %137 = load i32, i32* %136, align 4
  %138 = mul nsw i32 %137, %132
  %139 = add nsw i64 %125, 2
  %140 = getelementptr inbounds i32, i32* %16, i64 %139
  %141 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %139
  %142 = select i1 %13, i32* %140, i32* %141
  %143 = load i32, i32* %142, align 4
  %144 = mul nsw i32 %143, %138
  %145 = add nsw i64 %125, 3
  %146 = getelementptr inbounds i32, i32* %16, i64 %145
  %147 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %145
  %148 = select i1 %13, i32* %146, i32* %147
  %149 = load i32, i32* %148, align 4
  %150 = mul nsw i32 %149, %144
  %151 = add nsw i64 %125, 4
  %152 = add i32 %127, -4
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %94, label %124

154:                                              ; preds = %161, %114
  %155 = phi i64 [ 0, %114 ], [ %162, %161 ]
  br i1 %115, label %156, label %161

156:                                              ; preds = %154
  %157 = mul nsw i64 %155, %120
  %158 = mul nsw i64 %157, %119
  %159 = mul nsw i64 %155, %119
  br label %164

160:                                              ; preds = %161, %111
  ret void

161:                                              ; preds = %170, %154
  %162 = add nuw nsw i64 %155, 1
  %163 = icmp eq i64 %162, %121
  br i1 %163, label %160, label %154

164:                                              ; preds = %170, %156
  %165 = phi i64 [ 0, %156 ], [ %174, %170 ]
  br i1 %116, label %166, label %170

166:                                              ; preds = %164
  %167 = add nsw i64 %165, %158
  %168 = getelementptr inbounds i32, i32* %1, i64 %167
  %169 = load i32, i32* %168, align 4
  br label %176

170:                                              ; preds = %189, %164
  %171 = phi i64 [ 0, %164 ], [ %191, %189 ]
  %172 = add nsw i64 %165, %159
  %173 = getelementptr inbounds i64, i64* %4, i64 %172
  store i64 %171, i64* %173, align 8
  %174 = add nuw nsw i64 %165, 1
  %175 = icmp eq i64 %174, %122
  br i1 %175, label %161, label %164

176:                                              ; preds = %189, %166
  %177 = phi i64 [ 1, %166 ], [ %192, %189 ]
  %178 = phi i64 [ 0, %166 ], [ %191, %189 ]
  %179 = phi i32 [ %169, %166 ], [ %190, %189 ]
  %180 = add nsw i64 %177, %157
  %181 = mul nsw i64 %180, %119
  %182 = add nsw i64 %181, %165
  %183 = getelementptr inbounds i32, i32* %1, i64 %182
  %184 = load i32, i32* %183, align 4
  %185 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32, i32)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32, i32)** %117, align 8
  %186 = tail call zeroext i1 %185(%"union.std::__1::__function::__policy_storage"* %118, i32 %184, i32 %179) #6
  br i1 %186, label %187, label %189

187:                                              ; preds = %176
  %188 = load i32, i32* %183, align 4
  br label %189

189:                                              ; preds = %187, %176
  %190 = phi i32 [ %188, %187 ], [ %179, %176 ]
  %191 = phi i64 [ %177, %187 ], [ %178, %176 ]
  %192 = add nuw nsw i64 %177, 1
  %193 = icmp eq i64 %192, %123
  br i1 %193, label %170, label %176
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops9ArgMinMaxIfilNSt3__18functionIFbffEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_(%"class.tflite::RuntimeShape"* dereferenceable(32), float*, i64*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.std::__1::function"* dereferenceable(32)) local_unnamed_addr #0 comdat {
  %7 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %8 = load i64, i64* %2, align 8
  %9 = trunc i64 %8 to i32
  %10 = icmp slt i32 %9, 0
  %11 = load i32, i32* %7, align 8
  %12 = select i1 %10, i32 %11, i32 0
  %13 = add i32 %12, %9
  %14 = icmp sgt i32 %11, 5
  %15 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %union.anon, %union.anon* %15, i64 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = sext i32 %13 to i64
  %19 = getelementptr inbounds i32, i32* %17, i64 %18
  %20 = bitcast %union.anon* %15 to [5 x i32]*
  %21 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %18
  %22 = select i1 %14, i32* %19, i32* %21
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %13, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %6
  %26 = zext i32 %13 to i64
  %27 = add nsw i64 %26, -1
  %28 = and i64 %26, 3
  %29 = icmp ult i64 %27, 3
  br i1 %29, label %32, label %30

30:                                               ; preds = %25
  %31 = sub nsw i64 %26, %28
  br label %65

32:                                               ; preds = %65, %25
  %33 = phi i32 [ undef, %25 ], [ %91, %65 ]
  %34 = phi i64 [ 0, %25 ], [ %92, %65 ]
  %35 = phi i32 [ 1, %25 ], [ %91, %65 ]
  %36 = icmp eq i64 %28, 0
  br i1 %36, label %49, label %37

37:                                               ; preds = %32, %37
  %38 = phi i64 [ %46, %37 ], [ %34, %32 ]
  %39 = phi i32 [ %45, %37 ], [ %35, %32 ]
  %40 = phi i64 [ %47, %37 ], [ %28, %32 ]
  %41 = getelementptr inbounds i32, i32* %17, i64 %38
  %42 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %38
  %43 = select i1 %14, i32* %41, i32* %42
  %44 = load i32, i32* %43, align 4
  %45 = mul nsw i32 %44, %39
  %46 = add nuw nsw i64 %38, 1
  %47 = add i64 %40, -1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %37, !llvm.loop !165

49:                                               ; preds = %32, %37, %6
  %50 = phi i32 [ 1, %6 ], [ %33, %32 ], [ %45, %37 ]
  %51 = add i32 %13, 1
  %52 = icmp slt i32 %51, %11
  br i1 %52, label %53, label %112

53:                                               ; preds = %49
  %54 = sext i32 %51 to i64
  %55 = xor i32 %12, -1
  %56 = add i32 %11, %55
  %57 = sub i32 %56, %9
  %58 = add i32 %11, -2
  %59 = sub i32 %58, %12
  %60 = sub i32 %59, %9
  %61 = and i32 %57, 3
  %62 = icmp ult i32 %60, 3
  br i1 %62, label %95, label %63

63:                                               ; preds = %53
  %64 = sub i32 %57, %61
  br label %125

65:                                               ; preds = %65, %30
  %66 = phi i64 [ 0, %30 ], [ %92, %65 ]
  %67 = phi i32 [ 1, %30 ], [ %91, %65 ]
  %68 = phi i64 [ %31, %30 ], [ %93, %65 ]
  %69 = getelementptr inbounds i32, i32* %17, i64 %66
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %66
  %71 = select i1 %14, i32* %69, i32* %70
  %72 = load i32, i32* %71, align 4
  %73 = mul nsw i32 %72, %67
  %74 = or i64 %66, 1
  %75 = getelementptr inbounds i32, i32* %17, i64 %74
  %76 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %74
  %77 = select i1 %14, i32* %75, i32* %76
  %78 = load i32, i32* %77, align 4
  %79 = mul nsw i32 %78, %73
  %80 = or i64 %66, 2
  %81 = getelementptr inbounds i32, i32* %17, i64 %80
  %82 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %80
  %83 = select i1 %14, i32* %81, i32* %82
  %84 = load i32, i32* %83, align 4
  %85 = mul nsw i32 %84, %79
  %86 = or i64 %66, 3
  %87 = getelementptr inbounds i32, i32* %17, i64 %86
  %88 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %86
  %89 = select i1 %14, i32* %87, i32* %88
  %90 = load i32, i32* %89, align 4
  %91 = mul nsw i32 %90, %85
  %92 = add nuw nsw i64 %66, 4
  %93 = add i64 %68, -4
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %32, label %65

95:                                               ; preds = %125, %53
  %96 = phi i32 [ undef, %53 ], [ %151, %125 ]
  %97 = phi i64 [ %54, %53 ], [ %152, %125 ]
  %98 = phi i32 [ 1, %53 ], [ %151, %125 ]
  %99 = icmp eq i32 %61, 0
  br i1 %99, label %112, label %100

100:                                              ; preds = %95, %100
  %101 = phi i64 [ %109, %100 ], [ %97, %95 ]
  %102 = phi i32 [ %108, %100 ], [ %98, %95 ]
  %103 = phi i32 [ %110, %100 ], [ %61, %95 ]
  %104 = getelementptr inbounds i32, i32* %17, i64 %101
  %105 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %101
  %106 = select i1 %14, i32* %104, i32* %105
  %107 = load i32, i32* %106, align 4
  %108 = mul nsw i32 %107, %102
  %109 = add nsw i64 %101, 1
  %110 = add i32 %103, -1
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %100, !llvm.loop !166

112:                                              ; preds = %95, %100, %49
  %113 = phi i32 [ 1, %49 ], [ %96, %95 ], [ %108, %100 ]
  %114 = icmp sgt i32 %50, 0
  br i1 %114, label %115, label %161

115:                                              ; preds = %112
  %116 = icmp sgt i32 %113, 0
  %117 = icmp sgt i32 %23, 1
  %118 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 1, i32 0
  %119 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 0
  %120 = sext i32 %113 to i64
  %121 = sext i32 %23 to i64
  %122 = zext i32 %50 to i64
  %123 = zext i32 %113 to i64
  %124 = zext i32 %23 to i64
  br label %155

125:                                              ; preds = %125, %63
  %126 = phi i64 [ %54, %63 ], [ %152, %125 ]
  %127 = phi i32 [ 1, %63 ], [ %151, %125 ]
  %128 = phi i32 [ %64, %63 ], [ %153, %125 ]
  %129 = getelementptr inbounds i32, i32* %17, i64 %126
  %130 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %126
  %131 = select i1 %14, i32* %129, i32* %130
  %132 = load i32, i32* %131, align 4
  %133 = mul nsw i32 %132, %127
  %134 = add nsw i64 %126, 1
  %135 = getelementptr inbounds i32, i32* %17, i64 %134
  %136 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %134
  %137 = select i1 %14, i32* %135, i32* %136
  %138 = load i32, i32* %137, align 4
  %139 = mul nsw i32 %138, %133
  %140 = add nsw i64 %126, 2
  %141 = getelementptr inbounds i32, i32* %17, i64 %140
  %142 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %140
  %143 = select i1 %14, i32* %141, i32* %142
  %144 = load i32, i32* %143, align 4
  %145 = mul nsw i32 %144, %139
  %146 = add nsw i64 %126, 3
  %147 = getelementptr inbounds i32, i32* %17, i64 %146
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %146
  %149 = select i1 %14, i32* %147, i32* %148
  %150 = load i32, i32* %149, align 4
  %151 = mul nsw i32 %150, %145
  %152 = add nsw i64 %126, 4
  %153 = add i32 %128, -4
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %95, label %125

155:                                              ; preds = %162, %115
  %156 = phi i64 [ 0, %115 ], [ %163, %162 ]
  br i1 %116, label %157, label %162

157:                                              ; preds = %155
  %158 = mul nsw i64 %156, %121
  %159 = mul nsw i64 %158, %120
  %160 = mul nsw i64 %156, %120
  br label %165

161:                                              ; preds = %162, %112
  ret void

162:                                              ; preds = %171, %155
  %163 = add nuw nsw i64 %156, 1
  %164 = icmp eq i64 %163, %122
  br i1 %164, label %161, label %155

165:                                              ; preds = %171, %157
  %166 = phi i64 [ 0, %157 ], [ %175, %171 ]
  br i1 %117, label %167, label %171

167:                                              ; preds = %165
  %168 = add nsw i64 %166, %159
  %169 = getelementptr inbounds float, float* %1, i64 %168
  %170 = load float, float* %169, align 4
  br label %177

171:                                              ; preds = %191, %165
  %172 = phi i32 [ 0, %165 ], [ %193, %191 ]
  %173 = add nsw i64 %166, %160
  %174 = getelementptr inbounds i32, i32* %4, i64 %173
  store i32 %172, i32* %174, align 4
  %175 = add nuw nsw i64 %166, 1
  %176 = icmp eq i64 %175, %123
  br i1 %176, label %162, label %165

177:                                              ; preds = %191, %167
  %178 = phi i64 [ 1, %167 ], [ %194, %191 ]
  %179 = phi i32 [ 0, %167 ], [ %193, %191 ]
  %180 = phi float [ %170, %167 ], [ %192, %191 ]
  %181 = add nsw i64 %178, %158
  %182 = mul nsw i64 %181, %120
  %183 = add nsw i64 %182, %166
  %184 = getelementptr inbounds float, float* %1, i64 %183
  %185 = load float, float* %184, align 4
  %186 = load i1 (%"union.std::__1::__function::__policy_storage"*, float, float)*, i1 (%"union.std::__1::__function::__policy_storage"*, float, float)** %118, align 8
  %187 = tail call zeroext i1 %186(%"union.std::__1::__function::__policy_storage"* %119, float %185, float %180) #6
  br i1 %187, label %188, label %191

188:                                              ; preds = %177
  %189 = load float, float* %184, align 4
  %190 = trunc i64 %178 to i32
  br label %191

191:                                              ; preds = %188, %177
  %192 = phi float [ %189, %188 ], [ %180, %177 ]
  %193 = phi i32 [ %190, %188 ], [ %179, %177 ]
  %194 = add nuw nsw i64 %178, 1
  %195 = icmp eq i64 %194, %124
  br i1 %195, label %171, label %177
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops9ArgMinMaxIhilNSt3__18functionIFbhhEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_(%"class.tflite::RuntimeShape"* dereferenceable(32), i8*, i64*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.std::__1::function.1"* dereferenceable(32)) local_unnamed_addr #0 comdat {
  %7 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %8 = load i64, i64* %2, align 8
  %9 = trunc i64 %8 to i32
  %10 = icmp slt i32 %9, 0
  %11 = load i32, i32* %7, align 8
  %12 = select i1 %10, i32 %11, i32 0
  %13 = add i32 %12, %9
  %14 = icmp sgt i32 %11, 5
  %15 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %union.anon, %union.anon* %15, i64 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = sext i32 %13 to i64
  %19 = getelementptr inbounds i32, i32* %17, i64 %18
  %20 = bitcast %union.anon* %15 to [5 x i32]*
  %21 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %18
  %22 = select i1 %14, i32* %19, i32* %21
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %13, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %6
  %26 = zext i32 %13 to i64
  %27 = add nsw i64 %26, -1
  %28 = and i64 %26, 3
  %29 = icmp ult i64 %27, 3
  br i1 %29, label %32, label %30

30:                                               ; preds = %25
  %31 = sub nsw i64 %26, %28
  br label %65

32:                                               ; preds = %65, %25
  %33 = phi i32 [ undef, %25 ], [ %91, %65 ]
  %34 = phi i64 [ 0, %25 ], [ %92, %65 ]
  %35 = phi i32 [ 1, %25 ], [ %91, %65 ]
  %36 = icmp eq i64 %28, 0
  br i1 %36, label %49, label %37

37:                                               ; preds = %32, %37
  %38 = phi i64 [ %46, %37 ], [ %34, %32 ]
  %39 = phi i32 [ %45, %37 ], [ %35, %32 ]
  %40 = phi i64 [ %47, %37 ], [ %28, %32 ]
  %41 = getelementptr inbounds i32, i32* %17, i64 %38
  %42 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %38
  %43 = select i1 %14, i32* %41, i32* %42
  %44 = load i32, i32* %43, align 4
  %45 = mul nsw i32 %44, %39
  %46 = add nuw nsw i64 %38, 1
  %47 = add i64 %40, -1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %37, !llvm.loop !167

49:                                               ; preds = %32, %37, %6
  %50 = phi i32 [ 1, %6 ], [ %33, %32 ], [ %45, %37 ]
  %51 = add i32 %13, 1
  %52 = icmp slt i32 %51, %11
  br i1 %52, label %53, label %112

53:                                               ; preds = %49
  %54 = sext i32 %51 to i64
  %55 = xor i32 %12, -1
  %56 = add i32 %11, %55
  %57 = sub i32 %56, %9
  %58 = add i32 %11, -2
  %59 = sub i32 %58, %12
  %60 = sub i32 %59, %9
  %61 = and i32 %57, 3
  %62 = icmp ult i32 %60, 3
  br i1 %62, label %95, label %63

63:                                               ; preds = %53
  %64 = sub i32 %57, %61
  br label %125

65:                                               ; preds = %65, %30
  %66 = phi i64 [ 0, %30 ], [ %92, %65 ]
  %67 = phi i32 [ 1, %30 ], [ %91, %65 ]
  %68 = phi i64 [ %31, %30 ], [ %93, %65 ]
  %69 = getelementptr inbounds i32, i32* %17, i64 %66
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %66
  %71 = select i1 %14, i32* %69, i32* %70
  %72 = load i32, i32* %71, align 4
  %73 = mul nsw i32 %72, %67
  %74 = or i64 %66, 1
  %75 = getelementptr inbounds i32, i32* %17, i64 %74
  %76 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %74
  %77 = select i1 %14, i32* %75, i32* %76
  %78 = load i32, i32* %77, align 4
  %79 = mul nsw i32 %78, %73
  %80 = or i64 %66, 2
  %81 = getelementptr inbounds i32, i32* %17, i64 %80
  %82 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %80
  %83 = select i1 %14, i32* %81, i32* %82
  %84 = load i32, i32* %83, align 4
  %85 = mul nsw i32 %84, %79
  %86 = or i64 %66, 3
  %87 = getelementptr inbounds i32, i32* %17, i64 %86
  %88 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %86
  %89 = select i1 %14, i32* %87, i32* %88
  %90 = load i32, i32* %89, align 4
  %91 = mul nsw i32 %90, %85
  %92 = add nuw nsw i64 %66, 4
  %93 = add i64 %68, -4
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %32, label %65

95:                                               ; preds = %125, %53
  %96 = phi i32 [ undef, %53 ], [ %151, %125 ]
  %97 = phi i64 [ %54, %53 ], [ %152, %125 ]
  %98 = phi i32 [ 1, %53 ], [ %151, %125 ]
  %99 = icmp eq i32 %61, 0
  br i1 %99, label %112, label %100

100:                                              ; preds = %95, %100
  %101 = phi i64 [ %109, %100 ], [ %97, %95 ]
  %102 = phi i32 [ %108, %100 ], [ %98, %95 ]
  %103 = phi i32 [ %110, %100 ], [ %61, %95 ]
  %104 = getelementptr inbounds i32, i32* %17, i64 %101
  %105 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %101
  %106 = select i1 %14, i32* %104, i32* %105
  %107 = load i32, i32* %106, align 4
  %108 = mul nsw i32 %107, %102
  %109 = add nsw i64 %101, 1
  %110 = add i32 %103, -1
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %100, !llvm.loop !168

112:                                              ; preds = %95, %100, %49
  %113 = phi i32 [ 1, %49 ], [ %96, %95 ], [ %108, %100 ]
  %114 = icmp sgt i32 %50, 0
  br i1 %114, label %115, label %161

115:                                              ; preds = %112
  %116 = icmp sgt i32 %113, 0
  %117 = icmp sgt i32 %23, 1
  %118 = getelementptr inbounds %"class.std::__1::function.1", %"class.std::__1::function.1"* %5, i64 0, i32 0, i32 1, i32 0
  %119 = getelementptr inbounds %"class.std::__1::function.1", %"class.std::__1::function.1"* %5, i64 0, i32 0, i32 0
  %120 = sext i32 %113 to i64
  %121 = sext i32 %23 to i64
  %122 = zext i32 %50 to i64
  %123 = zext i32 %113 to i64
  %124 = zext i32 %23 to i64
  br label %155

125:                                              ; preds = %125, %63
  %126 = phi i64 [ %54, %63 ], [ %152, %125 ]
  %127 = phi i32 [ 1, %63 ], [ %151, %125 ]
  %128 = phi i32 [ %64, %63 ], [ %153, %125 ]
  %129 = getelementptr inbounds i32, i32* %17, i64 %126
  %130 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %126
  %131 = select i1 %14, i32* %129, i32* %130
  %132 = load i32, i32* %131, align 4
  %133 = mul nsw i32 %132, %127
  %134 = add nsw i64 %126, 1
  %135 = getelementptr inbounds i32, i32* %17, i64 %134
  %136 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %134
  %137 = select i1 %14, i32* %135, i32* %136
  %138 = load i32, i32* %137, align 4
  %139 = mul nsw i32 %138, %133
  %140 = add nsw i64 %126, 2
  %141 = getelementptr inbounds i32, i32* %17, i64 %140
  %142 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %140
  %143 = select i1 %14, i32* %141, i32* %142
  %144 = load i32, i32* %143, align 4
  %145 = mul nsw i32 %144, %139
  %146 = add nsw i64 %126, 3
  %147 = getelementptr inbounds i32, i32* %17, i64 %146
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %146
  %149 = select i1 %14, i32* %147, i32* %148
  %150 = load i32, i32* %149, align 4
  %151 = mul nsw i32 %150, %145
  %152 = add nsw i64 %126, 4
  %153 = add i32 %128, -4
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %95, label %125

155:                                              ; preds = %162, %115
  %156 = phi i64 [ 0, %115 ], [ %163, %162 ]
  br i1 %116, label %157, label %162

157:                                              ; preds = %155
  %158 = mul nsw i64 %156, %121
  %159 = mul nsw i64 %158, %120
  %160 = mul nsw i64 %156, %120
  br label %165

161:                                              ; preds = %162, %112
  ret void

162:                                              ; preds = %171, %155
  %163 = add nuw nsw i64 %156, 1
  %164 = icmp eq i64 %163, %122
  br i1 %164, label %161, label %155

165:                                              ; preds = %171, %157
  %166 = phi i64 [ 0, %157 ], [ %175, %171 ]
  br i1 %117, label %167, label %171

167:                                              ; preds = %165
  %168 = add nsw i64 %166, %159
  %169 = getelementptr inbounds i8, i8* %1, i64 %168
  %170 = load i8, i8* %169, align 1
  br label %177

171:                                              ; preds = %191, %165
  %172 = phi i32 [ 0, %165 ], [ %193, %191 ]
  %173 = add nsw i64 %166, %160
  %174 = getelementptr inbounds i32, i32* %4, i64 %173
  store i32 %172, i32* %174, align 4
  %175 = add nuw nsw i64 %166, 1
  %176 = icmp eq i64 %175, %123
  br i1 %176, label %162, label %165

177:                                              ; preds = %191, %167
  %178 = phi i64 [ 1, %167 ], [ %194, %191 ]
  %179 = phi i32 [ 0, %167 ], [ %193, %191 ]
  %180 = phi i8 [ %170, %167 ], [ %192, %191 ]
  %181 = add nsw i64 %178, %158
  %182 = mul nsw i64 %181, %120
  %183 = add nsw i64 %182, %166
  %184 = getelementptr inbounds i8, i8* %1, i64 %183
  %185 = load i8, i8* %184, align 1
  %186 = load i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)*, i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)** %118, align 8
  %187 = tail call zeroext i1 %186(%"union.std::__1::__function::__policy_storage"* %119, i8 zeroext %185, i8 zeroext %180) #6
  br i1 %187, label %188, label %191

188:                                              ; preds = %177
  %189 = load i8, i8* %184, align 1
  %190 = trunc i64 %178 to i32
  br label %191

191:                                              ; preds = %188, %177
  %192 = phi i8 [ %189, %188 ], [ %180, %177 ]
  %193 = phi i32 [ %190, %188 ], [ %179, %177 ]
  %194 = add nuw nsw i64 %178, 1
  %195 = icmp eq i64 %194, %124
  br i1 %195, label %171, label %177
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops9ArgMinMaxIailNSt3__18functionIFbaaEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_(%"class.tflite::RuntimeShape"* dereferenceable(32), i8*, i64*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.std::__1::function.7"* dereferenceable(32)) local_unnamed_addr #0 comdat {
  %7 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %8 = load i64, i64* %2, align 8
  %9 = trunc i64 %8 to i32
  %10 = icmp slt i32 %9, 0
  %11 = load i32, i32* %7, align 8
  %12 = select i1 %10, i32 %11, i32 0
  %13 = add i32 %12, %9
  %14 = icmp sgt i32 %11, 5
  %15 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %union.anon, %union.anon* %15, i64 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = sext i32 %13 to i64
  %19 = getelementptr inbounds i32, i32* %17, i64 %18
  %20 = bitcast %union.anon* %15 to [5 x i32]*
  %21 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %18
  %22 = select i1 %14, i32* %19, i32* %21
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %13, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %6
  %26 = zext i32 %13 to i64
  %27 = add nsw i64 %26, -1
  %28 = and i64 %26, 3
  %29 = icmp ult i64 %27, 3
  br i1 %29, label %32, label %30

30:                                               ; preds = %25
  %31 = sub nsw i64 %26, %28
  br label %65

32:                                               ; preds = %65, %25
  %33 = phi i32 [ undef, %25 ], [ %91, %65 ]
  %34 = phi i64 [ 0, %25 ], [ %92, %65 ]
  %35 = phi i32 [ 1, %25 ], [ %91, %65 ]
  %36 = icmp eq i64 %28, 0
  br i1 %36, label %49, label %37

37:                                               ; preds = %32, %37
  %38 = phi i64 [ %46, %37 ], [ %34, %32 ]
  %39 = phi i32 [ %45, %37 ], [ %35, %32 ]
  %40 = phi i64 [ %47, %37 ], [ %28, %32 ]
  %41 = getelementptr inbounds i32, i32* %17, i64 %38
  %42 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %38
  %43 = select i1 %14, i32* %41, i32* %42
  %44 = load i32, i32* %43, align 4
  %45 = mul nsw i32 %44, %39
  %46 = add nuw nsw i64 %38, 1
  %47 = add i64 %40, -1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %37, !llvm.loop !169

49:                                               ; preds = %32, %37, %6
  %50 = phi i32 [ 1, %6 ], [ %33, %32 ], [ %45, %37 ]
  %51 = add i32 %13, 1
  %52 = icmp slt i32 %51, %11
  br i1 %52, label %53, label %112

53:                                               ; preds = %49
  %54 = sext i32 %51 to i64
  %55 = xor i32 %12, -1
  %56 = add i32 %11, %55
  %57 = sub i32 %56, %9
  %58 = add i32 %11, -2
  %59 = sub i32 %58, %12
  %60 = sub i32 %59, %9
  %61 = and i32 %57, 3
  %62 = icmp ult i32 %60, 3
  br i1 %62, label %95, label %63

63:                                               ; preds = %53
  %64 = sub i32 %57, %61
  br label %125

65:                                               ; preds = %65, %30
  %66 = phi i64 [ 0, %30 ], [ %92, %65 ]
  %67 = phi i32 [ 1, %30 ], [ %91, %65 ]
  %68 = phi i64 [ %31, %30 ], [ %93, %65 ]
  %69 = getelementptr inbounds i32, i32* %17, i64 %66
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %66
  %71 = select i1 %14, i32* %69, i32* %70
  %72 = load i32, i32* %71, align 4
  %73 = mul nsw i32 %72, %67
  %74 = or i64 %66, 1
  %75 = getelementptr inbounds i32, i32* %17, i64 %74
  %76 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %74
  %77 = select i1 %14, i32* %75, i32* %76
  %78 = load i32, i32* %77, align 4
  %79 = mul nsw i32 %78, %73
  %80 = or i64 %66, 2
  %81 = getelementptr inbounds i32, i32* %17, i64 %80
  %82 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %80
  %83 = select i1 %14, i32* %81, i32* %82
  %84 = load i32, i32* %83, align 4
  %85 = mul nsw i32 %84, %79
  %86 = or i64 %66, 3
  %87 = getelementptr inbounds i32, i32* %17, i64 %86
  %88 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %86
  %89 = select i1 %14, i32* %87, i32* %88
  %90 = load i32, i32* %89, align 4
  %91 = mul nsw i32 %90, %85
  %92 = add nuw nsw i64 %66, 4
  %93 = add i64 %68, -4
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %32, label %65

95:                                               ; preds = %125, %53
  %96 = phi i32 [ undef, %53 ], [ %151, %125 ]
  %97 = phi i64 [ %54, %53 ], [ %152, %125 ]
  %98 = phi i32 [ 1, %53 ], [ %151, %125 ]
  %99 = icmp eq i32 %61, 0
  br i1 %99, label %112, label %100

100:                                              ; preds = %95, %100
  %101 = phi i64 [ %109, %100 ], [ %97, %95 ]
  %102 = phi i32 [ %108, %100 ], [ %98, %95 ]
  %103 = phi i32 [ %110, %100 ], [ %61, %95 ]
  %104 = getelementptr inbounds i32, i32* %17, i64 %101
  %105 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %101
  %106 = select i1 %14, i32* %104, i32* %105
  %107 = load i32, i32* %106, align 4
  %108 = mul nsw i32 %107, %102
  %109 = add nsw i64 %101, 1
  %110 = add i32 %103, -1
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %100, !llvm.loop !170

112:                                              ; preds = %95, %100, %49
  %113 = phi i32 [ 1, %49 ], [ %96, %95 ], [ %108, %100 ]
  %114 = icmp sgt i32 %50, 0
  br i1 %114, label %115, label %161

115:                                              ; preds = %112
  %116 = icmp sgt i32 %113, 0
  %117 = icmp sgt i32 %23, 1
  %118 = getelementptr inbounds %"class.std::__1::function.7", %"class.std::__1::function.7"* %5, i64 0, i32 0, i32 1, i32 0
  %119 = getelementptr inbounds %"class.std::__1::function.7", %"class.std::__1::function.7"* %5, i64 0, i32 0, i32 0
  %120 = sext i32 %113 to i64
  %121 = sext i32 %23 to i64
  %122 = zext i32 %50 to i64
  %123 = zext i32 %113 to i64
  %124 = zext i32 %23 to i64
  br label %155

125:                                              ; preds = %125, %63
  %126 = phi i64 [ %54, %63 ], [ %152, %125 ]
  %127 = phi i32 [ 1, %63 ], [ %151, %125 ]
  %128 = phi i32 [ %64, %63 ], [ %153, %125 ]
  %129 = getelementptr inbounds i32, i32* %17, i64 %126
  %130 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %126
  %131 = select i1 %14, i32* %129, i32* %130
  %132 = load i32, i32* %131, align 4
  %133 = mul nsw i32 %132, %127
  %134 = add nsw i64 %126, 1
  %135 = getelementptr inbounds i32, i32* %17, i64 %134
  %136 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %134
  %137 = select i1 %14, i32* %135, i32* %136
  %138 = load i32, i32* %137, align 4
  %139 = mul nsw i32 %138, %133
  %140 = add nsw i64 %126, 2
  %141 = getelementptr inbounds i32, i32* %17, i64 %140
  %142 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %140
  %143 = select i1 %14, i32* %141, i32* %142
  %144 = load i32, i32* %143, align 4
  %145 = mul nsw i32 %144, %139
  %146 = add nsw i64 %126, 3
  %147 = getelementptr inbounds i32, i32* %17, i64 %146
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %146
  %149 = select i1 %14, i32* %147, i32* %148
  %150 = load i32, i32* %149, align 4
  %151 = mul nsw i32 %150, %145
  %152 = add nsw i64 %126, 4
  %153 = add i32 %128, -4
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %95, label %125

155:                                              ; preds = %162, %115
  %156 = phi i64 [ 0, %115 ], [ %163, %162 ]
  br i1 %116, label %157, label %162

157:                                              ; preds = %155
  %158 = mul nsw i64 %156, %121
  %159 = mul nsw i64 %158, %120
  %160 = mul nsw i64 %156, %120
  br label %165

161:                                              ; preds = %162, %112
  ret void

162:                                              ; preds = %171, %155
  %163 = add nuw nsw i64 %156, 1
  %164 = icmp eq i64 %163, %122
  br i1 %164, label %161, label %155

165:                                              ; preds = %171, %157
  %166 = phi i64 [ 0, %157 ], [ %175, %171 ]
  br i1 %117, label %167, label %171

167:                                              ; preds = %165
  %168 = add nsw i64 %166, %159
  %169 = getelementptr inbounds i8, i8* %1, i64 %168
  %170 = load i8, i8* %169, align 1
  br label %177

171:                                              ; preds = %191, %165
  %172 = phi i32 [ 0, %165 ], [ %193, %191 ]
  %173 = add nsw i64 %166, %160
  %174 = getelementptr inbounds i32, i32* %4, i64 %173
  store i32 %172, i32* %174, align 4
  %175 = add nuw nsw i64 %166, 1
  %176 = icmp eq i64 %175, %123
  br i1 %176, label %162, label %165

177:                                              ; preds = %191, %167
  %178 = phi i64 [ 1, %167 ], [ %194, %191 ]
  %179 = phi i32 [ 0, %167 ], [ %193, %191 ]
  %180 = phi i8 [ %170, %167 ], [ %192, %191 ]
  %181 = add nsw i64 %178, %158
  %182 = mul nsw i64 %181, %120
  %183 = add nsw i64 %182, %166
  %184 = getelementptr inbounds i8, i8* %1, i64 %183
  %185 = load i8, i8* %184, align 1
  %186 = load i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)*, i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)** %118, align 8
  %187 = tail call zeroext i1 %186(%"union.std::__1::__function::__policy_storage"* %119, i8 signext %185, i8 signext %180) #6
  br i1 %187, label %188, label %191

188:                                              ; preds = %177
  %189 = load i8, i8* %184, align 1
  %190 = trunc i64 %178 to i32
  br label %191

191:                                              ; preds = %188, %177
  %192 = phi i8 [ %189, %188 ], [ %180, %177 ]
  %193 = phi i32 [ %190, %188 ], [ %179, %177 ]
  %194 = add nuw nsw i64 %178, 1
  %195 = icmp eq i64 %194, %124
  br i1 %195, label %171, label %177
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops9ArgMinMaxIiilNSt3__18functionIFbiiEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_(%"class.tflite::RuntimeShape"* dereferenceable(32), i32*, i64*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.std::__1::function.13"* dereferenceable(32)) local_unnamed_addr #0 comdat {
  %7 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %8 = load i64, i64* %2, align 8
  %9 = trunc i64 %8 to i32
  %10 = icmp slt i32 %9, 0
  %11 = load i32, i32* %7, align 8
  %12 = select i1 %10, i32 %11, i32 0
  %13 = add i32 %12, %9
  %14 = icmp sgt i32 %11, 5
  %15 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %union.anon, %union.anon* %15, i64 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = sext i32 %13 to i64
  %19 = getelementptr inbounds i32, i32* %17, i64 %18
  %20 = bitcast %union.anon* %15 to [5 x i32]*
  %21 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %18
  %22 = select i1 %14, i32* %19, i32* %21
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %13, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %6
  %26 = zext i32 %13 to i64
  %27 = add nsw i64 %26, -1
  %28 = and i64 %26, 3
  %29 = icmp ult i64 %27, 3
  br i1 %29, label %32, label %30

30:                                               ; preds = %25
  %31 = sub nsw i64 %26, %28
  br label %65

32:                                               ; preds = %65, %25
  %33 = phi i32 [ undef, %25 ], [ %91, %65 ]
  %34 = phi i64 [ 0, %25 ], [ %92, %65 ]
  %35 = phi i32 [ 1, %25 ], [ %91, %65 ]
  %36 = icmp eq i64 %28, 0
  br i1 %36, label %49, label %37

37:                                               ; preds = %32, %37
  %38 = phi i64 [ %46, %37 ], [ %34, %32 ]
  %39 = phi i32 [ %45, %37 ], [ %35, %32 ]
  %40 = phi i64 [ %47, %37 ], [ %28, %32 ]
  %41 = getelementptr inbounds i32, i32* %17, i64 %38
  %42 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %38
  %43 = select i1 %14, i32* %41, i32* %42
  %44 = load i32, i32* %43, align 4
  %45 = mul nsw i32 %44, %39
  %46 = add nuw nsw i64 %38, 1
  %47 = add i64 %40, -1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %37, !llvm.loop !171

49:                                               ; preds = %32, %37, %6
  %50 = phi i32 [ 1, %6 ], [ %33, %32 ], [ %45, %37 ]
  %51 = add i32 %13, 1
  %52 = icmp slt i32 %51, %11
  br i1 %52, label %53, label %112

53:                                               ; preds = %49
  %54 = sext i32 %51 to i64
  %55 = xor i32 %12, -1
  %56 = add i32 %11, %55
  %57 = sub i32 %56, %9
  %58 = add i32 %11, -2
  %59 = sub i32 %58, %12
  %60 = sub i32 %59, %9
  %61 = and i32 %57, 3
  %62 = icmp ult i32 %60, 3
  br i1 %62, label %95, label %63

63:                                               ; preds = %53
  %64 = sub i32 %57, %61
  br label %125

65:                                               ; preds = %65, %30
  %66 = phi i64 [ 0, %30 ], [ %92, %65 ]
  %67 = phi i32 [ 1, %30 ], [ %91, %65 ]
  %68 = phi i64 [ %31, %30 ], [ %93, %65 ]
  %69 = getelementptr inbounds i32, i32* %17, i64 %66
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %66
  %71 = select i1 %14, i32* %69, i32* %70
  %72 = load i32, i32* %71, align 4
  %73 = mul nsw i32 %72, %67
  %74 = or i64 %66, 1
  %75 = getelementptr inbounds i32, i32* %17, i64 %74
  %76 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %74
  %77 = select i1 %14, i32* %75, i32* %76
  %78 = load i32, i32* %77, align 4
  %79 = mul nsw i32 %78, %73
  %80 = or i64 %66, 2
  %81 = getelementptr inbounds i32, i32* %17, i64 %80
  %82 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %80
  %83 = select i1 %14, i32* %81, i32* %82
  %84 = load i32, i32* %83, align 4
  %85 = mul nsw i32 %84, %79
  %86 = or i64 %66, 3
  %87 = getelementptr inbounds i32, i32* %17, i64 %86
  %88 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %86
  %89 = select i1 %14, i32* %87, i32* %88
  %90 = load i32, i32* %89, align 4
  %91 = mul nsw i32 %90, %85
  %92 = add nuw nsw i64 %66, 4
  %93 = add i64 %68, -4
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %32, label %65

95:                                               ; preds = %125, %53
  %96 = phi i32 [ undef, %53 ], [ %151, %125 ]
  %97 = phi i64 [ %54, %53 ], [ %152, %125 ]
  %98 = phi i32 [ 1, %53 ], [ %151, %125 ]
  %99 = icmp eq i32 %61, 0
  br i1 %99, label %112, label %100

100:                                              ; preds = %95, %100
  %101 = phi i64 [ %109, %100 ], [ %97, %95 ]
  %102 = phi i32 [ %108, %100 ], [ %98, %95 ]
  %103 = phi i32 [ %110, %100 ], [ %61, %95 ]
  %104 = getelementptr inbounds i32, i32* %17, i64 %101
  %105 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %101
  %106 = select i1 %14, i32* %104, i32* %105
  %107 = load i32, i32* %106, align 4
  %108 = mul nsw i32 %107, %102
  %109 = add nsw i64 %101, 1
  %110 = add i32 %103, -1
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %100, !llvm.loop !172

112:                                              ; preds = %95, %100, %49
  %113 = phi i32 [ 1, %49 ], [ %96, %95 ], [ %108, %100 ]
  %114 = icmp sgt i32 %50, 0
  br i1 %114, label %115, label %161

115:                                              ; preds = %112
  %116 = icmp sgt i32 %113, 0
  %117 = icmp sgt i32 %23, 1
  %118 = getelementptr inbounds %"class.std::__1::function.13", %"class.std::__1::function.13"* %5, i64 0, i32 0, i32 1, i32 0
  %119 = getelementptr inbounds %"class.std::__1::function.13", %"class.std::__1::function.13"* %5, i64 0, i32 0, i32 0
  %120 = sext i32 %113 to i64
  %121 = sext i32 %23 to i64
  %122 = zext i32 %50 to i64
  %123 = zext i32 %113 to i64
  %124 = zext i32 %23 to i64
  br label %155

125:                                              ; preds = %125, %63
  %126 = phi i64 [ %54, %63 ], [ %152, %125 ]
  %127 = phi i32 [ 1, %63 ], [ %151, %125 ]
  %128 = phi i32 [ %64, %63 ], [ %153, %125 ]
  %129 = getelementptr inbounds i32, i32* %17, i64 %126
  %130 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %126
  %131 = select i1 %14, i32* %129, i32* %130
  %132 = load i32, i32* %131, align 4
  %133 = mul nsw i32 %132, %127
  %134 = add nsw i64 %126, 1
  %135 = getelementptr inbounds i32, i32* %17, i64 %134
  %136 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %134
  %137 = select i1 %14, i32* %135, i32* %136
  %138 = load i32, i32* %137, align 4
  %139 = mul nsw i32 %138, %133
  %140 = add nsw i64 %126, 2
  %141 = getelementptr inbounds i32, i32* %17, i64 %140
  %142 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %140
  %143 = select i1 %14, i32* %141, i32* %142
  %144 = load i32, i32* %143, align 4
  %145 = mul nsw i32 %144, %139
  %146 = add nsw i64 %126, 3
  %147 = getelementptr inbounds i32, i32* %17, i64 %146
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %146
  %149 = select i1 %14, i32* %147, i32* %148
  %150 = load i32, i32* %149, align 4
  %151 = mul nsw i32 %150, %145
  %152 = add nsw i64 %126, 4
  %153 = add i32 %128, -4
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %95, label %125

155:                                              ; preds = %162, %115
  %156 = phi i64 [ 0, %115 ], [ %163, %162 ]
  br i1 %116, label %157, label %162

157:                                              ; preds = %155
  %158 = mul nsw i64 %156, %121
  %159 = mul nsw i64 %158, %120
  %160 = mul nsw i64 %156, %120
  br label %165

161:                                              ; preds = %162, %112
  ret void

162:                                              ; preds = %171, %155
  %163 = add nuw nsw i64 %156, 1
  %164 = icmp eq i64 %163, %122
  br i1 %164, label %161, label %155

165:                                              ; preds = %171, %157
  %166 = phi i64 [ 0, %157 ], [ %175, %171 ]
  br i1 %117, label %167, label %171

167:                                              ; preds = %165
  %168 = add nsw i64 %166, %159
  %169 = getelementptr inbounds i32, i32* %1, i64 %168
  %170 = load i32, i32* %169, align 4
  br label %177

171:                                              ; preds = %191, %165
  %172 = phi i32 [ 0, %165 ], [ %193, %191 ]
  %173 = add nsw i64 %166, %160
  %174 = getelementptr inbounds i32, i32* %4, i64 %173
  store i32 %172, i32* %174, align 4
  %175 = add nuw nsw i64 %166, 1
  %176 = icmp eq i64 %175, %123
  br i1 %176, label %162, label %165

177:                                              ; preds = %191, %167
  %178 = phi i64 [ 1, %167 ], [ %194, %191 ]
  %179 = phi i32 [ 0, %167 ], [ %193, %191 ]
  %180 = phi i32 [ %170, %167 ], [ %192, %191 ]
  %181 = add nsw i64 %178, %158
  %182 = mul nsw i64 %181, %120
  %183 = add nsw i64 %182, %166
  %184 = getelementptr inbounds i32, i32* %1, i64 %183
  %185 = load i32, i32* %184, align 4
  %186 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32, i32)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32, i32)** %118, align 8
  %187 = tail call zeroext i1 %186(%"union.std::__1::__function::__policy_storage"* %119, i32 %185, i32 %180) #6
  br i1 %187, label %188, label %191

188:                                              ; preds = %177
  %189 = load i32, i32* %184, align 4
  %190 = trunc i64 %178 to i32
  br label %191

191:                                              ; preds = %188, %177
  %192 = phi i32 [ %189, %188 ], [ %180, %177 ]
  %193 = phi i32 [ %190, %188 ], [ %179, %177 ]
  %194 = add nuw nsw i64 %178, 1
  %195 = icmp eq i64 %194, %124
  br i1 %195, label %171, label %177
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops9ArgMinMaxIfllNSt3__18functionIFbffEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_(%"class.tflite::RuntimeShape"* dereferenceable(32), float*, i64*, %"class.tflite::RuntimeShape"* dereferenceable(32), i64*, %"class.std::__1::function"* dereferenceable(32)) local_unnamed_addr #0 comdat {
  %7 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %8 = load i64, i64* %2, align 8
  %9 = trunc i64 %8 to i32
  %10 = icmp slt i32 %9, 0
  %11 = load i32, i32* %7, align 8
  %12 = select i1 %10, i32 %11, i32 0
  %13 = add i32 %12, %9
  %14 = icmp sgt i32 %11, 5
  %15 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %union.anon, %union.anon* %15, i64 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = sext i32 %13 to i64
  %19 = getelementptr inbounds i32, i32* %17, i64 %18
  %20 = bitcast %union.anon* %15 to [5 x i32]*
  %21 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %18
  %22 = select i1 %14, i32* %19, i32* %21
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %13, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %6
  %26 = zext i32 %13 to i64
  %27 = add nsw i64 %26, -1
  %28 = and i64 %26, 3
  %29 = icmp ult i64 %27, 3
  br i1 %29, label %32, label %30

30:                                               ; preds = %25
  %31 = sub nsw i64 %26, %28
  br label %65

32:                                               ; preds = %65, %25
  %33 = phi i32 [ undef, %25 ], [ %91, %65 ]
  %34 = phi i64 [ 0, %25 ], [ %92, %65 ]
  %35 = phi i32 [ 1, %25 ], [ %91, %65 ]
  %36 = icmp eq i64 %28, 0
  br i1 %36, label %49, label %37

37:                                               ; preds = %32, %37
  %38 = phi i64 [ %46, %37 ], [ %34, %32 ]
  %39 = phi i32 [ %45, %37 ], [ %35, %32 ]
  %40 = phi i64 [ %47, %37 ], [ %28, %32 ]
  %41 = getelementptr inbounds i32, i32* %17, i64 %38
  %42 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %38
  %43 = select i1 %14, i32* %41, i32* %42
  %44 = load i32, i32* %43, align 4
  %45 = mul nsw i32 %44, %39
  %46 = add nuw nsw i64 %38, 1
  %47 = add i64 %40, -1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %37, !llvm.loop !173

49:                                               ; preds = %32, %37, %6
  %50 = phi i32 [ 1, %6 ], [ %33, %32 ], [ %45, %37 ]
  %51 = add i32 %13, 1
  %52 = icmp slt i32 %51, %11
  br i1 %52, label %53, label %112

53:                                               ; preds = %49
  %54 = sext i32 %51 to i64
  %55 = xor i32 %12, -1
  %56 = add i32 %11, %55
  %57 = sub i32 %56, %9
  %58 = add i32 %11, -2
  %59 = sub i32 %58, %12
  %60 = sub i32 %59, %9
  %61 = and i32 %57, 3
  %62 = icmp ult i32 %60, 3
  br i1 %62, label %95, label %63

63:                                               ; preds = %53
  %64 = sub i32 %57, %61
  br label %125

65:                                               ; preds = %65, %30
  %66 = phi i64 [ 0, %30 ], [ %92, %65 ]
  %67 = phi i32 [ 1, %30 ], [ %91, %65 ]
  %68 = phi i64 [ %31, %30 ], [ %93, %65 ]
  %69 = getelementptr inbounds i32, i32* %17, i64 %66
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %66
  %71 = select i1 %14, i32* %69, i32* %70
  %72 = load i32, i32* %71, align 4
  %73 = mul nsw i32 %72, %67
  %74 = or i64 %66, 1
  %75 = getelementptr inbounds i32, i32* %17, i64 %74
  %76 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %74
  %77 = select i1 %14, i32* %75, i32* %76
  %78 = load i32, i32* %77, align 4
  %79 = mul nsw i32 %78, %73
  %80 = or i64 %66, 2
  %81 = getelementptr inbounds i32, i32* %17, i64 %80
  %82 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %80
  %83 = select i1 %14, i32* %81, i32* %82
  %84 = load i32, i32* %83, align 4
  %85 = mul nsw i32 %84, %79
  %86 = or i64 %66, 3
  %87 = getelementptr inbounds i32, i32* %17, i64 %86
  %88 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %86
  %89 = select i1 %14, i32* %87, i32* %88
  %90 = load i32, i32* %89, align 4
  %91 = mul nsw i32 %90, %85
  %92 = add nuw nsw i64 %66, 4
  %93 = add i64 %68, -4
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %32, label %65

95:                                               ; preds = %125, %53
  %96 = phi i32 [ undef, %53 ], [ %151, %125 ]
  %97 = phi i64 [ %54, %53 ], [ %152, %125 ]
  %98 = phi i32 [ 1, %53 ], [ %151, %125 ]
  %99 = icmp eq i32 %61, 0
  br i1 %99, label %112, label %100

100:                                              ; preds = %95, %100
  %101 = phi i64 [ %109, %100 ], [ %97, %95 ]
  %102 = phi i32 [ %108, %100 ], [ %98, %95 ]
  %103 = phi i32 [ %110, %100 ], [ %61, %95 ]
  %104 = getelementptr inbounds i32, i32* %17, i64 %101
  %105 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %101
  %106 = select i1 %14, i32* %104, i32* %105
  %107 = load i32, i32* %106, align 4
  %108 = mul nsw i32 %107, %102
  %109 = add nsw i64 %101, 1
  %110 = add i32 %103, -1
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %100, !llvm.loop !174

112:                                              ; preds = %95, %100, %49
  %113 = phi i32 [ 1, %49 ], [ %96, %95 ], [ %108, %100 ]
  %114 = icmp sgt i32 %50, 0
  br i1 %114, label %115, label %161

115:                                              ; preds = %112
  %116 = icmp sgt i32 %113, 0
  %117 = icmp sgt i32 %23, 1
  %118 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 1, i32 0
  %119 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 0
  %120 = sext i32 %113 to i64
  %121 = sext i32 %23 to i64
  %122 = zext i32 %50 to i64
  %123 = zext i32 %113 to i64
  %124 = zext i32 %23 to i64
  br label %155

125:                                              ; preds = %125, %63
  %126 = phi i64 [ %54, %63 ], [ %152, %125 ]
  %127 = phi i32 [ 1, %63 ], [ %151, %125 ]
  %128 = phi i32 [ %64, %63 ], [ %153, %125 ]
  %129 = getelementptr inbounds i32, i32* %17, i64 %126
  %130 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %126
  %131 = select i1 %14, i32* %129, i32* %130
  %132 = load i32, i32* %131, align 4
  %133 = mul nsw i32 %132, %127
  %134 = add nsw i64 %126, 1
  %135 = getelementptr inbounds i32, i32* %17, i64 %134
  %136 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %134
  %137 = select i1 %14, i32* %135, i32* %136
  %138 = load i32, i32* %137, align 4
  %139 = mul nsw i32 %138, %133
  %140 = add nsw i64 %126, 2
  %141 = getelementptr inbounds i32, i32* %17, i64 %140
  %142 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %140
  %143 = select i1 %14, i32* %141, i32* %142
  %144 = load i32, i32* %143, align 4
  %145 = mul nsw i32 %144, %139
  %146 = add nsw i64 %126, 3
  %147 = getelementptr inbounds i32, i32* %17, i64 %146
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %146
  %149 = select i1 %14, i32* %147, i32* %148
  %150 = load i32, i32* %149, align 4
  %151 = mul nsw i32 %150, %145
  %152 = add nsw i64 %126, 4
  %153 = add i32 %128, -4
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %95, label %125

155:                                              ; preds = %162, %115
  %156 = phi i64 [ 0, %115 ], [ %163, %162 ]
  br i1 %116, label %157, label %162

157:                                              ; preds = %155
  %158 = mul nsw i64 %156, %121
  %159 = mul nsw i64 %158, %120
  %160 = mul nsw i64 %156, %120
  br label %165

161:                                              ; preds = %162, %112
  ret void

162:                                              ; preds = %171, %155
  %163 = add nuw nsw i64 %156, 1
  %164 = icmp eq i64 %163, %122
  br i1 %164, label %161, label %155

165:                                              ; preds = %171, %157
  %166 = phi i64 [ 0, %157 ], [ %175, %171 ]
  br i1 %117, label %167, label %171

167:                                              ; preds = %165
  %168 = add nsw i64 %166, %159
  %169 = getelementptr inbounds float, float* %1, i64 %168
  %170 = load float, float* %169, align 4
  br label %177

171:                                              ; preds = %190, %165
  %172 = phi i64 [ 0, %165 ], [ %192, %190 ]
  %173 = add nsw i64 %166, %160
  %174 = getelementptr inbounds i64, i64* %4, i64 %173
  store i64 %172, i64* %174, align 8
  %175 = add nuw nsw i64 %166, 1
  %176 = icmp eq i64 %175, %123
  br i1 %176, label %162, label %165

177:                                              ; preds = %190, %167
  %178 = phi i64 [ 1, %167 ], [ %193, %190 ]
  %179 = phi i64 [ 0, %167 ], [ %192, %190 ]
  %180 = phi float [ %170, %167 ], [ %191, %190 ]
  %181 = add nsw i64 %178, %158
  %182 = mul nsw i64 %181, %120
  %183 = add nsw i64 %182, %166
  %184 = getelementptr inbounds float, float* %1, i64 %183
  %185 = load float, float* %184, align 4
  %186 = load i1 (%"union.std::__1::__function::__policy_storage"*, float, float)*, i1 (%"union.std::__1::__function::__policy_storage"*, float, float)** %118, align 8
  %187 = tail call zeroext i1 %186(%"union.std::__1::__function::__policy_storage"* %119, float %185, float %180) #6
  br i1 %187, label %188, label %190

188:                                              ; preds = %177
  %189 = load float, float* %184, align 4
  br label %190

190:                                              ; preds = %188, %177
  %191 = phi float [ %189, %188 ], [ %180, %177 ]
  %192 = phi i64 [ %178, %188 ], [ %179, %177 ]
  %193 = add nuw nsw i64 %178, 1
  %194 = icmp eq i64 %193, %124
  br i1 %194, label %171, label %177
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops9ArgMinMaxIhllNSt3__18functionIFbhhEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_(%"class.tflite::RuntimeShape"* dereferenceable(32), i8*, i64*, %"class.tflite::RuntimeShape"* dereferenceable(32), i64*, %"class.std::__1::function.1"* dereferenceable(32)) local_unnamed_addr #0 comdat {
  %7 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %8 = load i64, i64* %2, align 8
  %9 = trunc i64 %8 to i32
  %10 = icmp slt i32 %9, 0
  %11 = load i32, i32* %7, align 8
  %12 = select i1 %10, i32 %11, i32 0
  %13 = add i32 %12, %9
  %14 = icmp sgt i32 %11, 5
  %15 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %union.anon, %union.anon* %15, i64 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = sext i32 %13 to i64
  %19 = getelementptr inbounds i32, i32* %17, i64 %18
  %20 = bitcast %union.anon* %15 to [5 x i32]*
  %21 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %18
  %22 = select i1 %14, i32* %19, i32* %21
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %13, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %6
  %26 = zext i32 %13 to i64
  %27 = add nsw i64 %26, -1
  %28 = and i64 %26, 3
  %29 = icmp ult i64 %27, 3
  br i1 %29, label %32, label %30

30:                                               ; preds = %25
  %31 = sub nsw i64 %26, %28
  br label %65

32:                                               ; preds = %65, %25
  %33 = phi i32 [ undef, %25 ], [ %91, %65 ]
  %34 = phi i64 [ 0, %25 ], [ %92, %65 ]
  %35 = phi i32 [ 1, %25 ], [ %91, %65 ]
  %36 = icmp eq i64 %28, 0
  br i1 %36, label %49, label %37

37:                                               ; preds = %32, %37
  %38 = phi i64 [ %46, %37 ], [ %34, %32 ]
  %39 = phi i32 [ %45, %37 ], [ %35, %32 ]
  %40 = phi i64 [ %47, %37 ], [ %28, %32 ]
  %41 = getelementptr inbounds i32, i32* %17, i64 %38
  %42 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %38
  %43 = select i1 %14, i32* %41, i32* %42
  %44 = load i32, i32* %43, align 4
  %45 = mul nsw i32 %44, %39
  %46 = add nuw nsw i64 %38, 1
  %47 = add i64 %40, -1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %37, !llvm.loop !175

49:                                               ; preds = %32, %37, %6
  %50 = phi i32 [ 1, %6 ], [ %33, %32 ], [ %45, %37 ]
  %51 = add i32 %13, 1
  %52 = icmp slt i32 %51, %11
  br i1 %52, label %53, label %112

53:                                               ; preds = %49
  %54 = sext i32 %51 to i64
  %55 = xor i32 %12, -1
  %56 = add i32 %11, %55
  %57 = sub i32 %56, %9
  %58 = add i32 %11, -2
  %59 = sub i32 %58, %12
  %60 = sub i32 %59, %9
  %61 = and i32 %57, 3
  %62 = icmp ult i32 %60, 3
  br i1 %62, label %95, label %63

63:                                               ; preds = %53
  %64 = sub i32 %57, %61
  br label %125

65:                                               ; preds = %65, %30
  %66 = phi i64 [ 0, %30 ], [ %92, %65 ]
  %67 = phi i32 [ 1, %30 ], [ %91, %65 ]
  %68 = phi i64 [ %31, %30 ], [ %93, %65 ]
  %69 = getelementptr inbounds i32, i32* %17, i64 %66
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %66
  %71 = select i1 %14, i32* %69, i32* %70
  %72 = load i32, i32* %71, align 4
  %73 = mul nsw i32 %72, %67
  %74 = or i64 %66, 1
  %75 = getelementptr inbounds i32, i32* %17, i64 %74
  %76 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %74
  %77 = select i1 %14, i32* %75, i32* %76
  %78 = load i32, i32* %77, align 4
  %79 = mul nsw i32 %78, %73
  %80 = or i64 %66, 2
  %81 = getelementptr inbounds i32, i32* %17, i64 %80
  %82 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %80
  %83 = select i1 %14, i32* %81, i32* %82
  %84 = load i32, i32* %83, align 4
  %85 = mul nsw i32 %84, %79
  %86 = or i64 %66, 3
  %87 = getelementptr inbounds i32, i32* %17, i64 %86
  %88 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %86
  %89 = select i1 %14, i32* %87, i32* %88
  %90 = load i32, i32* %89, align 4
  %91 = mul nsw i32 %90, %85
  %92 = add nuw nsw i64 %66, 4
  %93 = add i64 %68, -4
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %32, label %65

95:                                               ; preds = %125, %53
  %96 = phi i32 [ undef, %53 ], [ %151, %125 ]
  %97 = phi i64 [ %54, %53 ], [ %152, %125 ]
  %98 = phi i32 [ 1, %53 ], [ %151, %125 ]
  %99 = icmp eq i32 %61, 0
  br i1 %99, label %112, label %100

100:                                              ; preds = %95, %100
  %101 = phi i64 [ %109, %100 ], [ %97, %95 ]
  %102 = phi i32 [ %108, %100 ], [ %98, %95 ]
  %103 = phi i32 [ %110, %100 ], [ %61, %95 ]
  %104 = getelementptr inbounds i32, i32* %17, i64 %101
  %105 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %101
  %106 = select i1 %14, i32* %104, i32* %105
  %107 = load i32, i32* %106, align 4
  %108 = mul nsw i32 %107, %102
  %109 = add nsw i64 %101, 1
  %110 = add i32 %103, -1
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %100, !llvm.loop !176

112:                                              ; preds = %95, %100, %49
  %113 = phi i32 [ 1, %49 ], [ %96, %95 ], [ %108, %100 ]
  %114 = icmp sgt i32 %50, 0
  br i1 %114, label %115, label %161

115:                                              ; preds = %112
  %116 = icmp sgt i32 %113, 0
  %117 = icmp sgt i32 %23, 1
  %118 = getelementptr inbounds %"class.std::__1::function.1", %"class.std::__1::function.1"* %5, i64 0, i32 0, i32 1, i32 0
  %119 = getelementptr inbounds %"class.std::__1::function.1", %"class.std::__1::function.1"* %5, i64 0, i32 0, i32 0
  %120 = sext i32 %113 to i64
  %121 = sext i32 %23 to i64
  %122 = zext i32 %50 to i64
  %123 = zext i32 %113 to i64
  %124 = zext i32 %23 to i64
  br label %155

125:                                              ; preds = %125, %63
  %126 = phi i64 [ %54, %63 ], [ %152, %125 ]
  %127 = phi i32 [ 1, %63 ], [ %151, %125 ]
  %128 = phi i32 [ %64, %63 ], [ %153, %125 ]
  %129 = getelementptr inbounds i32, i32* %17, i64 %126
  %130 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %126
  %131 = select i1 %14, i32* %129, i32* %130
  %132 = load i32, i32* %131, align 4
  %133 = mul nsw i32 %132, %127
  %134 = add nsw i64 %126, 1
  %135 = getelementptr inbounds i32, i32* %17, i64 %134
  %136 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %134
  %137 = select i1 %14, i32* %135, i32* %136
  %138 = load i32, i32* %137, align 4
  %139 = mul nsw i32 %138, %133
  %140 = add nsw i64 %126, 2
  %141 = getelementptr inbounds i32, i32* %17, i64 %140
  %142 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %140
  %143 = select i1 %14, i32* %141, i32* %142
  %144 = load i32, i32* %143, align 4
  %145 = mul nsw i32 %144, %139
  %146 = add nsw i64 %126, 3
  %147 = getelementptr inbounds i32, i32* %17, i64 %146
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %146
  %149 = select i1 %14, i32* %147, i32* %148
  %150 = load i32, i32* %149, align 4
  %151 = mul nsw i32 %150, %145
  %152 = add nsw i64 %126, 4
  %153 = add i32 %128, -4
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %95, label %125

155:                                              ; preds = %162, %115
  %156 = phi i64 [ 0, %115 ], [ %163, %162 ]
  br i1 %116, label %157, label %162

157:                                              ; preds = %155
  %158 = mul nsw i64 %156, %121
  %159 = mul nsw i64 %158, %120
  %160 = mul nsw i64 %156, %120
  br label %165

161:                                              ; preds = %162, %112
  ret void

162:                                              ; preds = %171, %155
  %163 = add nuw nsw i64 %156, 1
  %164 = icmp eq i64 %163, %122
  br i1 %164, label %161, label %155

165:                                              ; preds = %171, %157
  %166 = phi i64 [ 0, %157 ], [ %175, %171 ]
  br i1 %117, label %167, label %171

167:                                              ; preds = %165
  %168 = add nsw i64 %166, %159
  %169 = getelementptr inbounds i8, i8* %1, i64 %168
  %170 = load i8, i8* %169, align 1
  br label %177

171:                                              ; preds = %190, %165
  %172 = phi i64 [ 0, %165 ], [ %192, %190 ]
  %173 = add nsw i64 %166, %160
  %174 = getelementptr inbounds i64, i64* %4, i64 %173
  store i64 %172, i64* %174, align 8
  %175 = add nuw nsw i64 %166, 1
  %176 = icmp eq i64 %175, %123
  br i1 %176, label %162, label %165

177:                                              ; preds = %190, %167
  %178 = phi i64 [ 1, %167 ], [ %193, %190 ]
  %179 = phi i64 [ 0, %167 ], [ %192, %190 ]
  %180 = phi i8 [ %170, %167 ], [ %191, %190 ]
  %181 = add nsw i64 %178, %158
  %182 = mul nsw i64 %181, %120
  %183 = add nsw i64 %182, %166
  %184 = getelementptr inbounds i8, i8* %1, i64 %183
  %185 = load i8, i8* %184, align 1
  %186 = load i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)*, i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)** %118, align 8
  %187 = tail call zeroext i1 %186(%"union.std::__1::__function::__policy_storage"* %119, i8 zeroext %185, i8 zeroext %180) #6
  br i1 %187, label %188, label %190

188:                                              ; preds = %177
  %189 = load i8, i8* %184, align 1
  br label %190

190:                                              ; preds = %188, %177
  %191 = phi i8 [ %189, %188 ], [ %180, %177 ]
  %192 = phi i64 [ %178, %188 ], [ %179, %177 ]
  %193 = add nuw nsw i64 %178, 1
  %194 = icmp eq i64 %193, %124
  br i1 %194, label %171, label %177
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops9ArgMinMaxIallNSt3__18functionIFbaaEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_(%"class.tflite::RuntimeShape"* dereferenceable(32), i8*, i64*, %"class.tflite::RuntimeShape"* dereferenceable(32), i64*, %"class.std::__1::function.7"* dereferenceable(32)) local_unnamed_addr #0 comdat {
  %7 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %8 = load i64, i64* %2, align 8
  %9 = trunc i64 %8 to i32
  %10 = icmp slt i32 %9, 0
  %11 = load i32, i32* %7, align 8
  %12 = select i1 %10, i32 %11, i32 0
  %13 = add i32 %12, %9
  %14 = icmp sgt i32 %11, 5
  %15 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %union.anon, %union.anon* %15, i64 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = sext i32 %13 to i64
  %19 = getelementptr inbounds i32, i32* %17, i64 %18
  %20 = bitcast %union.anon* %15 to [5 x i32]*
  %21 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %18
  %22 = select i1 %14, i32* %19, i32* %21
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %13, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %6
  %26 = zext i32 %13 to i64
  %27 = add nsw i64 %26, -1
  %28 = and i64 %26, 3
  %29 = icmp ult i64 %27, 3
  br i1 %29, label %32, label %30

30:                                               ; preds = %25
  %31 = sub nsw i64 %26, %28
  br label %65

32:                                               ; preds = %65, %25
  %33 = phi i32 [ undef, %25 ], [ %91, %65 ]
  %34 = phi i64 [ 0, %25 ], [ %92, %65 ]
  %35 = phi i32 [ 1, %25 ], [ %91, %65 ]
  %36 = icmp eq i64 %28, 0
  br i1 %36, label %49, label %37

37:                                               ; preds = %32, %37
  %38 = phi i64 [ %46, %37 ], [ %34, %32 ]
  %39 = phi i32 [ %45, %37 ], [ %35, %32 ]
  %40 = phi i64 [ %47, %37 ], [ %28, %32 ]
  %41 = getelementptr inbounds i32, i32* %17, i64 %38
  %42 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %38
  %43 = select i1 %14, i32* %41, i32* %42
  %44 = load i32, i32* %43, align 4
  %45 = mul nsw i32 %44, %39
  %46 = add nuw nsw i64 %38, 1
  %47 = add i64 %40, -1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %37, !llvm.loop !177

49:                                               ; preds = %32, %37, %6
  %50 = phi i32 [ 1, %6 ], [ %33, %32 ], [ %45, %37 ]
  %51 = add i32 %13, 1
  %52 = icmp slt i32 %51, %11
  br i1 %52, label %53, label %112

53:                                               ; preds = %49
  %54 = sext i32 %51 to i64
  %55 = xor i32 %12, -1
  %56 = add i32 %11, %55
  %57 = sub i32 %56, %9
  %58 = add i32 %11, -2
  %59 = sub i32 %58, %12
  %60 = sub i32 %59, %9
  %61 = and i32 %57, 3
  %62 = icmp ult i32 %60, 3
  br i1 %62, label %95, label %63

63:                                               ; preds = %53
  %64 = sub i32 %57, %61
  br label %125

65:                                               ; preds = %65, %30
  %66 = phi i64 [ 0, %30 ], [ %92, %65 ]
  %67 = phi i32 [ 1, %30 ], [ %91, %65 ]
  %68 = phi i64 [ %31, %30 ], [ %93, %65 ]
  %69 = getelementptr inbounds i32, i32* %17, i64 %66
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %66
  %71 = select i1 %14, i32* %69, i32* %70
  %72 = load i32, i32* %71, align 4
  %73 = mul nsw i32 %72, %67
  %74 = or i64 %66, 1
  %75 = getelementptr inbounds i32, i32* %17, i64 %74
  %76 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %74
  %77 = select i1 %14, i32* %75, i32* %76
  %78 = load i32, i32* %77, align 4
  %79 = mul nsw i32 %78, %73
  %80 = or i64 %66, 2
  %81 = getelementptr inbounds i32, i32* %17, i64 %80
  %82 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %80
  %83 = select i1 %14, i32* %81, i32* %82
  %84 = load i32, i32* %83, align 4
  %85 = mul nsw i32 %84, %79
  %86 = or i64 %66, 3
  %87 = getelementptr inbounds i32, i32* %17, i64 %86
  %88 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %86
  %89 = select i1 %14, i32* %87, i32* %88
  %90 = load i32, i32* %89, align 4
  %91 = mul nsw i32 %90, %85
  %92 = add nuw nsw i64 %66, 4
  %93 = add i64 %68, -4
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %32, label %65

95:                                               ; preds = %125, %53
  %96 = phi i32 [ undef, %53 ], [ %151, %125 ]
  %97 = phi i64 [ %54, %53 ], [ %152, %125 ]
  %98 = phi i32 [ 1, %53 ], [ %151, %125 ]
  %99 = icmp eq i32 %61, 0
  br i1 %99, label %112, label %100

100:                                              ; preds = %95, %100
  %101 = phi i64 [ %109, %100 ], [ %97, %95 ]
  %102 = phi i32 [ %108, %100 ], [ %98, %95 ]
  %103 = phi i32 [ %110, %100 ], [ %61, %95 ]
  %104 = getelementptr inbounds i32, i32* %17, i64 %101
  %105 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %101
  %106 = select i1 %14, i32* %104, i32* %105
  %107 = load i32, i32* %106, align 4
  %108 = mul nsw i32 %107, %102
  %109 = add nsw i64 %101, 1
  %110 = add i32 %103, -1
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %100, !llvm.loop !178

112:                                              ; preds = %95, %100, %49
  %113 = phi i32 [ 1, %49 ], [ %96, %95 ], [ %108, %100 ]
  %114 = icmp sgt i32 %50, 0
  br i1 %114, label %115, label %161

115:                                              ; preds = %112
  %116 = icmp sgt i32 %113, 0
  %117 = icmp sgt i32 %23, 1
  %118 = getelementptr inbounds %"class.std::__1::function.7", %"class.std::__1::function.7"* %5, i64 0, i32 0, i32 1, i32 0
  %119 = getelementptr inbounds %"class.std::__1::function.7", %"class.std::__1::function.7"* %5, i64 0, i32 0, i32 0
  %120 = sext i32 %113 to i64
  %121 = sext i32 %23 to i64
  %122 = zext i32 %50 to i64
  %123 = zext i32 %113 to i64
  %124 = zext i32 %23 to i64
  br label %155

125:                                              ; preds = %125, %63
  %126 = phi i64 [ %54, %63 ], [ %152, %125 ]
  %127 = phi i32 [ 1, %63 ], [ %151, %125 ]
  %128 = phi i32 [ %64, %63 ], [ %153, %125 ]
  %129 = getelementptr inbounds i32, i32* %17, i64 %126
  %130 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %126
  %131 = select i1 %14, i32* %129, i32* %130
  %132 = load i32, i32* %131, align 4
  %133 = mul nsw i32 %132, %127
  %134 = add nsw i64 %126, 1
  %135 = getelementptr inbounds i32, i32* %17, i64 %134
  %136 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %134
  %137 = select i1 %14, i32* %135, i32* %136
  %138 = load i32, i32* %137, align 4
  %139 = mul nsw i32 %138, %133
  %140 = add nsw i64 %126, 2
  %141 = getelementptr inbounds i32, i32* %17, i64 %140
  %142 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %140
  %143 = select i1 %14, i32* %141, i32* %142
  %144 = load i32, i32* %143, align 4
  %145 = mul nsw i32 %144, %139
  %146 = add nsw i64 %126, 3
  %147 = getelementptr inbounds i32, i32* %17, i64 %146
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %146
  %149 = select i1 %14, i32* %147, i32* %148
  %150 = load i32, i32* %149, align 4
  %151 = mul nsw i32 %150, %145
  %152 = add nsw i64 %126, 4
  %153 = add i32 %128, -4
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %95, label %125

155:                                              ; preds = %162, %115
  %156 = phi i64 [ 0, %115 ], [ %163, %162 ]
  br i1 %116, label %157, label %162

157:                                              ; preds = %155
  %158 = mul nsw i64 %156, %121
  %159 = mul nsw i64 %158, %120
  %160 = mul nsw i64 %156, %120
  br label %165

161:                                              ; preds = %162, %112
  ret void

162:                                              ; preds = %171, %155
  %163 = add nuw nsw i64 %156, 1
  %164 = icmp eq i64 %163, %122
  br i1 %164, label %161, label %155

165:                                              ; preds = %171, %157
  %166 = phi i64 [ 0, %157 ], [ %175, %171 ]
  br i1 %117, label %167, label %171

167:                                              ; preds = %165
  %168 = add nsw i64 %166, %159
  %169 = getelementptr inbounds i8, i8* %1, i64 %168
  %170 = load i8, i8* %169, align 1
  br label %177

171:                                              ; preds = %190, %165
  %172 = phi i64 [ 0, %165 ], [ %192, %190 ]
  %173 = add nsw i64 %166, %160
  %174 = getelementptr inbounds i64, i64* %4, i64 %173
  store i64 %172, i64* %174, align 8
  %175 = add nuw nsw i64 %166, 1
  %176 = icmp eq i64 %175, %123
  br i1 %176, label %162, label %165

177:                                              ; preds = %190, %167
  %178 = phi i64 [ 1, %167 ], [ %193, %190 ]
  %179 = phi i64 [ 0, %167 ], [ %192, %190 ]
  %180 = phi i8 [ %170, %167 ], [ %191, %190 ]
  %181 = add nsw i64 %178, %158
  %182 = mul nsw i64 %181, %120
  %183 = add nsw i64 %182, %166
  %184 = getelementptr inbounds i8, i8* %1, i64 %183
  %185 = load i8, i8* %184, align 1
  %186 = load i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)*, i1 (%"union.std::__1::__function::__policy_storage"*, i8, i8)** %118, align 8
  %187 = tail call zeroext i1 %186(%"union.std::__1::__function::__policy_storage"* %119, i8 signext %185, i8 signext %180) #6
  br i1 %187, label %188, label %190

188:                                              ; preds = %177
  %189 = load i8, i8* %184, align 1
  br label %190

190:                                              ; preds = %188, %177
  %191 = phi i8 [ %189, %188 ], [ %180, %177 ]
  %192 = phi i64 [ %178, %188 ], [ %179, %177 ]
  %193 = add nuw nsw i64 %178, 1
  %194 = icmp eq i64 %193, %124
  br i1 %194, label %171, label %177
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops9ArgMinMaxIillNSt3__18functionIFbiiEEEEEvRKNS_12RuntimeShapeEPKT_PKT1_S8_PT0_RKT2_(%"class.tflite::RuntimeShape"* dereferenceable(32), i32*, i64*, %"class.tflite::RuntimeShape"* dereferenceable(32), i64*, %"class.std::__1::function.13"* dereferenceable(32)) local_unnamed_addr #0 comdat {
  %7 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %8 = load i64, i64* %2, align 8
  %9 = trunc i64 %8 to i32
  %10 = icmp slt i32 %9, 0
  %11 = load i32, i32* %7, align 8
  %12 = select i1 %10, i32 %11, i32 0
  %13 = add i32 %12, %9
  %14 = icmp sgt i32 %11, 5
  %15 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %union.anon, %union.anon* %15, i64 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = sext i32 %13 to i64
  %19 = getelementptr inbounds i32, i32* %17, i64 %18
  %20 = bitcast %union.anon* %15 to [5 x i32]*
  %21 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %18
  %22 = select i1 %14, i32* %19, i32* %21
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %13, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %6
  %26 = zext i32 %13 to i64
  %27 = add nsw i64 %26, -1
  %28 = and i64 %26, 3
  %29 = icmp ult i64 %27, 3
  br i1 %29, label %32, label %30

30:                                               ; preds = %25
  %31 = sub nsw i64 %26, %28
  br label %65

32:                                               ; preds = %65, %25
  %33 = phi i32 [ undef, %25 ], [ %91, %65 ]
  %34 = phi i64 [ 0, %25 ], [ %92, %65 ]
  %35 = phi i32 [ 1, %25 ], [ %91, %65 ]
  %36 = icmp eq i64 %28, 0
  br i1 %36, label %49, label %37

37:                                               ; preds = %32, %37
  %38 = phi i64 [ %46, %37 ], [ %34, %32 ]
  %39 = phi i32 [ %45, %37 ], [ %35, %32 ]
  %40 = phi i64 [ %47, %37 ], [ %28, %32 ]
  %41 = getelementptr inbounds i32, i32* %17, i64 %38
  %42 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %38
  %43 = select i1 %14, i32* %41, i32* %42
  %44 = load i32, i32* %43, align 4
  %45 = mul nsw i32 %44, %39
  %46 = add nuw nsw i64 %38, 1
  %47 = add i64 %40, -1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %37, !llvm.loop !179

49:                                               ; preds = %32, %37, %6
  %50 = phi i32 [ 1, %6 ], [ %33, %32 ], [ %45, %37 ]
  %51 = add i32 %13, 1
  %52 = icmp slt i32 %51, %11
  br i1 %52, label %53, label %112

53:                                               ; preds = %49
  %54 = sext i32 %51 to i64
  %55 = xor i32 %12, -1
  %56 = add i32 %11, %55
  %57 = sub i32 %56, %9
  %58 = add i32 %11, -2
  %59 = sub i32 %58, %12
  %60 = sub i32 %59, %9
  %61 = and i32 %57, 3
  %62 = icmp ult i32 %60, 3
  br i1 %62, label %95, label %63

63:                                               ; preds = %53
  %64 = sub i32 %57, %61
  br label %125

65:                                               ; preds = %65, %30
  %66 = phi i64 [ 0, %30 ], [ %92, %65 ]
  %67 = phi i32 [ 1, %30 ], [ %91, %65 ]
  %68 = phi i64 [ %31, %30 ], [ %93, %65 ]
  %69 = getelementptr inbounds i32, i32* %17, i64 %66
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %66
  %71 = select i1 %14, i32* %69, i32* %70
  %72 = load i32, i32* %71, align 4
  %73 = mul nsw i32 %72, %67
  %74 = or i64 %66, 1
  %75 = getelementptr inbounds i32, i32* %17, i64 %74
  %76 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %74
  %77 = select i1 %14, i32* %75, i32* %76
  %78 = load i32, i32* %77, align 4
  %79 = mul nsw i32 %78, %73
  %80 = or i64 %66, 2
  %81 = getelementptr inbounds i32, i32* %17, i64 %80
  %82 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %80
  %83 = select i1 %14, i32* %81, i32* %82
  %84 = load i32, i32* %83, align 4
  %85 = mul nsw i32 %84, %79
  %86 = or i64 %66, 3
  %87 = getelementptr inbounds i32, i32* %17, i64 %86
  %88 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %86
  %89 = select i1 %14, i32* %87, i32* %88
  %90 = load i32, i32* %89, align 4
  %91 = mul nsw i32 %90, %85
  %92 = add nuw nsw i64 %66, 4
  %93 = add i64 %68, -4
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %32, label %65

95:                                               ; preds = %125, %53
  %96 = phi i32 [ undef, %53 ], [ %151, %125 ]
  %97 = phi i64 [ %54, %53 ], [ %152, %125 ]
  %98 = phi i32 [ 1, %53 ], [ %151, %125 ]
  %99 = icmp eq i32 %61, 0
  br i1 %99, label %112, label %100

100:                                              ; preds = %95, %100
  %101 = phi i64 [ %109, %100 ], [ %97, %95 ]
  %102 = phi i32 [ %108, %100 ], [ %98, %95 ]
  %103 = phi i32 [ %110, %100 ], [ %61, %95 ]
  %104 = getelementptr inbounds i32, i32* %17, i64 %101
  %105 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %101
  %106 = select i1 %14, i32* %104, i32* %105
  %107 = load i32, i32* %106, align 4
  %108 = mul nsw i32 %107, %102
  %109 = add nsw i64 %101, 1
  %110 = add i32 %103, -1
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %100, !llvm.loop !180

112:                                              ; preds = %95, %100, %49
  %113 = phi i32 [ 1, %49 ], [ %96, %95 ], [ %108, %100 ]
  %114 = icmp sgt i32 %50, 0
  br i1 %114, label %115, label %161

115:                                              ; preds = %112
  %116 = icmp sgt i32 %113, 0
  %117 = icmp sgt i32 %23, 1
  %118 = getelementptr inbounds %"class.std::__1::function.13", %"class.std::__1::function.13"* %5, i64 0, i32 0, i32 1, i32 0
  %119 = getelementptr inbounds %"class.std::__1::function.13", %"class.std::__1::function.13"* %5, i64 0, i32 0, i32 0
  %120 = sext i32 %113 to i64
  %121 = sext i32 %23 to i64
  %122 = zext i32 %50 to i64
  %123 = zext i32 %113 to i64
  %124 = zext i32 %23 to i64
  br label %155

125:                                              ; preds = %125, %63
  %126 = phi i64 [ %54, %63 ], [ %152, %125 ]
  %127 = phi i32 [ 1, %63 ], [ %151, %125 ]
  %128 = phi i32 [ %64, %63 ], [ %153, %125 ]
  %129 = getelementptr inbounds i32, i32* %17, i64 %126
  %130 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %126
  %131 = select i1 %14, i32* %129, i32* %130
  %132 = load i32, i32* %131, align 4
  %133 = mul nsw i32 %132, %127
  %134 = add nsw i64 %126, 1
  %135 = getelementptr inbounds i32, i32* %17, i64 %134
  %136 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %134
  %137 = select i1 %14, i32* %135, i32* %136
  %138 = load i32, i32* %137, align 4
  %139 = mul nsw i32 %138, %133
  %140 = add nsw i64 %126, 2
  %141 = getelementptr inbounds i32, i32* %17, i64 %140
  %142 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %140
  %143 = select i1 %14, i32* %141, i32* %142
  %144 = load i32, i32* %143, align 4
  %145 = mul nsw i32 %144, %139
  %146 = add nsw i64 %126, 3
  %147 = getelementptr inbounds i32, i32* %17, i64 %146
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %146
  %149 = select i1 %14, i32* %147, i32* %148
  %150 = load i32, i32* %149, align 4
  %151 = mul nsw i32 %150, %145
  %152 = add nsw i64 %126, 4
  %153 = add i32 %128, -4
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %95, label %125

155:                                              ; preds = %162, %115
  %156 = phi i64 [ 0, %115 ], [ %163, %162 ]
  br i1 %116, label %157, label %162

157:                                              ; preds = %155
  %158 = mul nsw i64 %156, %121
  %159 = mul nsw i64 %158, %120
  %160 = mul nsw i64 %156, %120
  br label %165

161:                                              ; preds = %162, %112
  ret void

162:                                              ; preds = %171, %155
  %163 = add nuw nsw i64 %156, 1
  %164 = icmp eq i64 %163, %122
  br i1 %164, label %161, label %155

165:                                              ; preds = %171, %157
  %166 = phi i64 [ 0, %157 ], [ %175, %171 ]
  br i1 %117, label %167, label %171

167:                                              ; preds = %165
  %168 = add nsw i64 %166, %159
  %169 = getelementptr inbounds i32, i32* %1, i64 %168
  %170 = load i32, i32* %169, align 4
  br label %177

171:                                              ; preds = %190, %165
  %172 = phi i64 [ 0, %165 ], [ %192, %190 ]
  %173 = add nsw i64 %166, %160
  %174 = getelementptr inbounds i64, i64* %4, i64 %173
  store i64 %172, i64* %174, align 8
  %175 = add nuw nsw i64 %166, 1
  %176 = icmp eq i64 %175, %123
  br i1 %176, label %162, label %165

177:                                              ; preds = %190, %167
  %178 = phi i64 [ 1, %167 ], [ %193, %190 ]
  %179 = phi i64 [ 0, %167 ], [ %192, %190 ]
  %180 = phi i32 [ %170, %167 ], [ %191, %190 ]
  %181 = add nsw i64 %178, %158
  %182 = mul nsw i64 %181, %120
  %183 = add nsw i64 %182, %166
  %184 = getelementptr inbounds i32, i32* %1, i64 %183
  %185 = load i32, i32* %184, align 4
  %186 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32, i32)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32, i32)** %118, align 8
  %187 = tail call zeroext i1 %186(%"union.std::__1::__function::__policy_storage"* %119, i32 %185, i32 %180) #6
  br i1 %187, label %188, label %190

188:                                              ; preds = %177
  %189 = load i32, i32* %184, align 4
  br label %190

190:                                              ; preds = %188, %177
  %191 = phi i32 [ %189, %188 ], [ %180, %177 ]
  %192 = phi i64 [ %178, %188 ], [ %179, %177 ]
  %193 = add nuw nsw i64 %178, 1
  %194 = icmp eq i64 %193, %124
  br i1 %194, label %171, label %177
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin11arg_min_max10ArgMinEvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #0 {
  %3 = tail call i32 @_ZN6tflite3ops7builtin11arg_min_max4EvalEP13TfLiteContextP10TfLiteNodeb(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, i1 zeroext false)
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin11arg_min_max10ArgMaxEvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #0 {
  %3 = tail call i32 @_ZN6tflite3ops7builtin11arg_min_max4EvalEP13TfLiteContextP10TfLiteNodeb(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, i1 zeroext true)
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin16Register_ARG_MAXEv() local_unnamed_addr #3 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin16Register_ARG_MAXEvE1r
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin16Register_ARG_MINEv() local_unnamed_addr #3 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin16Register_ARG_MINEvE1r
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbffEE11__call_implINS0_20__default_alloc_funcINS_7greaterIfEES2_EEEEbPKNS0_16__policy_storageEff(%"union.std::__1::__function::__policy_storage"*, float, float) #0 comdat align 2 {
  %4 = fcmp ogt float %1, %2
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbffEE11__call_implINS0_20__default_alloc_funcINS_4lessIfEES2_EEEEbPKNS0_16__policy_storageEff(%"union.std::__1::__function::__policy_storage"*, float, float) #0 comdat align 2 {
  %4 = fcmp olt float %1, %2
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbhhEE11__call_implINS0_20__default_alloc_funcINS_7greaterIhEES2_EEEEbPKNS0_16__policy_storageEhh(%"union.std::__1::__function::__policy_storage"*, i8 zeroext, i8 zeroext) #0 comdat align 2 {
  %4 = icmp ugt i8 %1, %2
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbhhEE11__call_implINS0_20__default_alloc_funcINS_4lessIhEES2_EEEEbPKNS0_16__policy_storageEhh(%"union.std::__1::__function::__policy_storage"*, i8 zeroext, i8 zeroext) #0 comdat align 2 {
  %4 = icmp ult i8 %1, %2
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbaaEE11__call_implINS0_20__default_alloc_funcINS_7greaterIaEES2_EEEEbPKNS0_16__policy_storageEaa(%"union.std::__1::__function::__policy_storage"*, i8 signext, i8 signext) #0 comdat align 2 {
  %4 = icmp sgt i8 %1, %2
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbaaEE11__call_implINS0_20__default_alloc_funcINS_4lessIaEES2_EEEEbPKNS0_16__policy_storageEaa(%"union.std::__1::__function::__policy_storage"*, i8 signext, i8 signext) #0 comdat align 2 {
  %4 = icmp slt i8 %1, %2
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbiiEE11__call_implINS0_20__default_alloc_funcINS_7greaterIiEES2_EEEEbPKNS0_16__policy_storageEii(%"union.std::__1::__function::__policy_storage"*, i32, i32) #0 comdat align 2 {
  %4 = icmp sgt i32 %1, %2
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbiiEE11__call_implINS0_20__default_alloc_funcINS_4lessIiEES2_EEEEbPKNS0_16__policy_storageEii(%"union.std::__1::__function::__policy_storage"*, i32, i32) #0 comdat align 2 {
  %4 = icmp slt i32 %1, %2
  ret i1 %4
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!7 = distinct !{!7, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!10 = distinct !{!10, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN6tflite3ops7builtin11arg_min_max18GetComparefunctionIfEENSt3__18functionIFbT_S6_EEEb: argument 0"}
!13 = distinct !{!13, !"_ZN6tflite3ops7builtin11arg_min_max18GetComparefunctionIfEENSt3__18functionIFbT_S6_EEEb"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!16 = distinct !{!16, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!19 = distinct !{!19, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN6tflite3ops7builtin11arg_min_max18GetComparefunctionIhEENSt3__18functionIFbT_S6_EEEb: argument 0"}
!22 = distinct !{!22, !"_ZN6tflite3ops7builtin11arg_min_max18GetComparefunctionIhEENSt3__18functionIFbT_S6_EEEb"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!25 = distinct !{!25, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!28 = distinct !{!28, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN6tflite3ops7builtin11arg_min_max18GetComparefunctionIaEENSt3__18functionIFbT_S6_EEEb: argument 0"}
!31 = distinct !{!31, !"_ZN6tflite3ops7builtin11arg_min_max18GetComparefunctionIaEENSt3__18functionIFbT_S6_EEEb"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!34 = distinct !{!34, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!37 = distinct !{!37, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN6tflite3ops7builtin11arg_min_max18GetComparefunctionIiEENSt3__18functionIFbT_S6_EEEb: argument 0"}
!40 = distinct !{!40, !"_ZN6tflite3ops7builtin11arg_min_max18GetComparefunctionIiEENSt3__18functionIFbT_S6_EEEb"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!43 = distinct !{!43, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!46 = distinct !{!46, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZN6tflite3ops7builtin11arg_min_max18GetComparefunctionIfEENSt3__18functionIFbT_S6_EEEb: argument 0"}
!49 = distinct !{!49, !"_ZN6tflite3ops7builtin11arg_min_max18GetComparefunctionIfEENSt3__18functionIFbT_S6_EEEb"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!52 = distinct !{!52, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!55 = distinct !{!55, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZN6tflite3ops7builtin11arg_min_max18GetComparefunctionIhEENSt3__18functionIFbT_S6_EEEb: argument 0"}
!58 = distinct !{!58, !"_ZN6tflite3ops7builtin11arg_min_max18GetComparefunctionIhEENSt3__18functionIFbT_S6_EEEb"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!61 = distinct !{!61, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!64 = distinct !{!64, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZN6tflite3ops7builtin11arg_min_max18GetComparefunctionIaEENSt3__18functionIFbT_S6_EEEb: argument 0"}
!67 = distinct !{!67, !"_ZN6tflite3ops7builtin11arg_min_max18GetComparefunctionIaEENSt3__18functionIFbT_S6_EEEb"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!70 = distinct !{!70, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!73 = distinct !{!73, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!74 = !{!75}
!75 = distinct !{!75, !76, !"_ZN6tflite3ops7builtin11arg_min_max18GetComparefunctionIiEENSt3__18functionIFbT_S6_EEEb: argument 0"}
!76 = distinct !{!76, !"_ZN6tflite3ops7builtin11arg_min_max18GetComparefunctionIiEENSt3__18functionIFbT_S6_EEEb"}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!79 = distinct !{!79, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!82 = distinct !{!82, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!83 = !{!84}
!84 = distinct !{!84, !85, !"_ZN6tflite3ops7builtin11arg_min_max18GetComparefunctionIfEENSt3__18functionIFbT_S6_EEEb: argument 0"}
!85 = distinct !{!85, !"_ZN6tflite3ops7builtin11arg_min_max18GetComparefunctionIfEENSt3__18functionIFbT_S6_EEEb"}
!86 = !{!87}
!87 = distinct !{!87, !88, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!88 = distinct !{!88, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!89 = !{!90}
!90 = distinct !{!90, !91, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!91 = distinct !{!91, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!92 = !{!93}
!93 = distinct !{!93, !94, !"_ZN6tflite3ops7builtin11arg_min_max18GetComparefunctionIhEENSt3__18functionIFbT_S6_EEEb: argument 0"}
!94 = distinct !{!94, !"_ZN6tflite3ops7builtin11arg_min_max18GetComparefunctionIhEENSt3__18functionIFbT_S6_EEEb"}
!95 = !{!96}
!96 = distinct !{!96, !97, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!97 = distinct !{!97, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!98 = !{!99}
!99 = distinct !{!99, !100, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!100 = distinct !{!100, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!101 = !{!102}
!102 = distinct !{!102, !103, !"_ZN6tflite3ops7builtin11arg_min_max18GetComparefunctionIaEENSt3__18functionIFbT_S6_EEEb: argument 0"}
!103 = distinct !{!103, !"_ZN6tflite3ops7builtin11arg_min_max18GetComparefunctionIaEENSt3__18functionIFbT_S6_EEEb"}
!104 = !{!105}
!105 = distinct !{!105, !106, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!106 = distinct !{!106, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!107 = !{!108}
!108 = distinct !{!108, !109, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!109 = distinct !{!109, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!110 = !{!111}
!111 = distinct !{!111, !112, !"_ZN6tflite3ops7builtin11arg_min_max18GetComparefunctionIiEENSt3__18functionIFbT_S6_EEEb: argument 0"}
!112 = distinct !{!112, !"_ZN6tflite3ops7builtin11arg_min_max18GetComparefunctionIiEENSt3__18functionIFbT_S6_EEEb"}
!113 = !{!114}
!114 = distinct !{!114, !115, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!115 = distinct !{!115, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!116 = !{!117}
!117 = distinct !{!117, !118, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!118 = distinct !{!118, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!119 = !{!120}
!120 = distinct !{!120, !121, !"_ZN6tflite3ops7builtin11arg_min_max18GetComparefunctionIfEENSt3__18functionIFbT_S6_EEEb: argument 0"}
!121 = distinct !{!121, !"_ZN6tflite3ops7builtin11arg_min_max18GetComparefunctionIfEENSt3__18functionIFbT_S6_EEEb"}
!122 = !{!123}
!123 = distinct !{!123, !124, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!124 = distinct !{!124, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!125 = !{!126}
!126 = distinct !{!126, !127, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!127 = distinct !{!127, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!128 = !{!129}
!129 = distinct !{!129, !130, !"_ZN6tflite3ops7builtin11arg_min_max18GetComparefunctionIhEENSt3__18functionIFbT_S6_EEEb: argument 0"}
!130 = distinct !{!130, !"_ZN6tflite3ops7builtin11arg_min_max18GetComparefunctionIhEENSt3__18functionIFbT_S6_EEEb"}
!131 = !{!132}
!132 = distinct !{!132, !133, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!133 = distinct !{!133, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!134 = !{!135}
!135 = distinct !{!135, !136, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!136 = distinct !{!136, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!137 = !{!138}
!138 = distinct !{!138, !139, !"_ZN6tflite3ops7builtin11arg_min_max18GetComparefunctionIaEENSt3__18functionIFbT_S6_EEEb: argument 0"}
!139 = distinct !{!139, !"_ZN6tflite3ops7builtin11arg_min_max18GetComparefunctionIaEENSt3__18functionIFbT_S6_EEEb"}
!140 = !{!141}
!141 = distinct !{!141, !142, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!142 = distinct !{!142, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!143 = !{!144}
!144 = distinct !{!144, !145, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!145 = distinct !{!145, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!146 = !{!147}
!147 = distinct !{!147, !148, !"_ZN6tflite3ops7builtin11arg_min_max18GetComparefunctionIiEENSt3__18functionIFbT_S6_EEEb: argument 0"}
!148 = distinct !{!148, !"_ZN6tflite3ops7builtin11arg_min_max18GetComparefunctionIiEENSt3__18functionIFbT_S6_EEEb"}
!149 = distinct !{!149, !3}
!150 = distinct !{!150, !3}
!151 = distinct !{!151, !3}
!152 = distinct !{!152, !3}
!153 = distinct !{!153, !3}
!154 = distinct !{!154, !3}
!155 = distinct !{!155, !3}
!156 = distinct !{!156, !3}
!157 = distinct !{!157, !3}
!158 = distinct !{!158, !3}
!159 = distinct !{!159, !3}
!160 = distinct !{!160, !3}
!161 = distinct !{!161, !3}
!162 = distinct !{!162, !3}
!163 = distinct !{!163, !3}
!164 = distinct !{!164, !3}
!165 = distinct !{!165, !3}
!166 = distinct !{!166, !3}
!167 = distinct !{!167, !3}
!168 = distinct !{!168, !3}
!169 = distinct !{!169, !3}
!170 = distinct !{!170, !3}
!171 = distinct !{!171, !3}
!172 = distinct !{!172, !3}
!173 = distinct !{!173, !3}
!174 = distinct !{!174, !3}
!175 = distinct !{!175, !3}
!176 = distinct !{!176, !3}
!177 = distinct !{!177, !3}
!178 = distinct !{!178, !3}
!179 = distinct !{!179, !3}
!180 = distinct !{!180, !3}
