; ModuleID = '../../base/profiler/module_cache.cc'
source_filename = "../../base/profiler/module_cache.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.std::nothrow_t" = type { i8 }
%"class.base::ModuleCache" = type { %"class.std::__1::set", %"class.base::internal::flat_tree", %"class.std::__1::vector", %"class.base::ModuleCache::AuxiliaryModuleProvider"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.base::ModuleCache::Module"* }
%"class.base::ModuleCache::Module" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::unique_ptr"* }
%"class.base::ModuleCache::AuxiliaryModuleProvider" = type { i32 (...)** }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.std::__1::unique_ptr" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"class.base::ModuleCache::Module"**, %"class.base::ModuleCache::Module"**, %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.base::ModuleCache::Module"** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.base::internal::flat_tree<const base::ModuleCache::Module *, base::identity, std::__1::less<void>, std::__1::vector<const base::ModuleCache::Module *, std::__1::allocator<const base::ModuleCache::Module *> > >::value_compare" = type { i8 }
%class.anon.24 = type { %class.anon*, %"struct.base::identity"* }
%class.anon = type { %"class.base::internal::flat_tree.19"* }
%"class.base::internal::flat_tree.19" = type { %"class.std::__1::vector.12" }
%"struct.base::identity" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"struct.base::internal::flat_tree<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, base::identity, base::ModuleCache::ModuleAndAddressCompare, std::__1::vector<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, std::__1::allocator<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> > > > >::value_compare" = type { i8 }
%"struct.base::ModuleCache::ModuleAndAddressCompare" = type { i8 }
%"struct.std::__1::__split_buffer.51" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.8", %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.std::__1::allocator.10"* }
%"class.std::__1::allocator.10" = type { i8 }

$_ZNSt3__16vectorINS_10unique_ptrIKN4base11ModuleCache6ModuleENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE6insertINS_13move_iteratorINS_11__wrap_iterIPS8_EEEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS8_NS_15iterator_traitsISJ_E9referenceEEE5valueESG_E4typeENSE_IPKS8_EESJ_SJ_ = comdat any

$_ZN4base8internal9flat_treeINSt3__110unique_ptrIKNS_11ModuleCache6ModuleENS2_14default_deleteIS6_EEEENS_8identityENS4_23ModuleAndAddressCompareENS2_6vectorIS9_NS2_9allocatorIS9_EEEEE6insertINS2_13move_iteratorINS2_11__wrap_iterIPS9_EEEEEEvT_SN_ = comdat any

$_ZNSt3__16__treeINS_10unique_ptrIKN4base11ModuleCache6ModuleENS_14default_deleteIS5_EEEENS3_23ModuleAndAddressCompareENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZNSt3__16__treeINS_10unique_ptrIKN4base11ModuleCache6ModuleENS_14default_deleteIS5_EEEENS3_23ModuleAndAddressCompareENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS8_JS8_EEENS_4pairINS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIPKNS1_11ModuleCache6ModuleENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_T_NS_15iterator_traitsISL_E15difference_typeEPNSO_10value_typeEl = comdat any

$_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIPKNS1_11ModuleCache6ModuleENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_T_NS_15iterator_traitsISL_E15difference_typeEPNSO_10value_typeE = comdat any

$_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIPKNS1_11ModuleCache6ModuleENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_SL_T_NS_15iterator_traitsISL_E15difference_typeESP_PNSO_10value_typeEl = comdat any

$_ZN4base8internal9flat_treeINSt3__110unique_ptrIKNS_11ModuleCache6ModuleENS2_14default_deleteIS6_EEEENS_8identityENS4_23ModuleAndAddressCompareENS2_6vectorIS9_NS2_9allocatorIS9_EEEEE13append_uniqueIS9_EENS2_4pairINS2_11__wrap_iterIPS9_EEbEESL_SL_OT_ = comdat any

$_ZN4base8internal9flat_treeINSt3__110unique_ptrIKNS_11ModuleCache6ModuleENS2_14default_deleteIS6_EEEENS_8identityENS4_23ModuleAndAddressCompareENS2_6vectorIS9_NS2_9allocatorIS9_EEEEE15sort_and_uniqueENS2_11__wrap_iterIPS9_EESJ_ = comdat any

$_ZN4base8internal9flat_treeINSt3__110unique_ptrIKNS_11ModuleCache6ModuleENS2_14default_deleteIS6_EEEENS_8identityENS4_23ModuleAndAddressCompareENS2_6vectorIS9_NS2_9allocatorIS9_EEEEE21emplace_hint_key_argsIS9_JS9_EEENS2_4pairINS2_11__wrap_iterIPS9_EEbEENSJ_IPKS9_EERKT_DpOT0_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIKN4base11ModuleCache6ModuleENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE7emplaceIJS8_EEENS_11__wrap_iterIPS8_EENSD_IPKS8_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_10unique_ptrIKN4base11ModuleCache6ModuleENS_14default_deleteIS5_EEEERNS_9allocatorIS8_EEE12emplace_backIJS8_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIKN4base11ModuleCache6ModuleENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS_10unique_ptrIKNS1_11ModuleCache6ModuleENS_14default_deleteIS7_EEEENS1_8identityENS5_23ModuleAndAddressCompareENS_6vectorISA_NS_9allocatorISA_EEEEE13value_compareENS_11__wrap_iterIPSA_EEEEvT0_SN_T_NS_15iterator_traitsISN_E15difference_typeEPNSQ_10value_typeEl = comdat any

$_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeINS_10unique_ptrIKNS1_11ModuleCache6ModuleENS_14default_deleteIS7_EEEENS1_8identityENS5_23ModuleAndAddressCompareENS_6vectorISA_NS_9allocatorISA_EEEEE13value_compareENS_11__wrap_iterIPSA_EEEEvT0_SN_T_NS_15iterator_traitsISN_E15difference_typeEPNSQ_10value_typeE = comdat any

$_ZNSt3__119__merge_move_assignIRN4base8internal9flat_treeINS_10unique_ptrIKNS1_11ModuleCache6ModuleENS_14default_deleteIS7_EEEENS1_8identityENS5_23ModuleAndAddressCompareENS_6vectorISA_NS_9allocatorISA_EEEEE13value_compareEPSA_SK_NS_11__wrap_iterISK_EEEEvT0_SN_T1_SO_T2_T_ = comdat any

$_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS_10unique_ptrIKNS1_11ModuleCache6ModuleENS_14default_deleteIS7_EEEENS1_8identityENS5_23ModuleAndAddressCompareENS_6vectorISA_NS_9allocatorISA_EEEEE13value_compareENS_11__wrap_iterIPSA_EEEEvT0_SN_SN_T_NS_15iterator_traitsISN_E15difference_typeESR_PNSQ_10value_typeEl = comdat any

$_ZNSt3__121__insertion_sort_moveIRN4base8internal9flat_treeINS_10unique_ptrIKNS1_11ModuleCache6ModuleENS_14default_deleteIS7_EEEENS1_8identityENS5_23ModuleAndAddressCompareENS_6vectorISA_NS_9allocatorISA_EEEEE13value_compareENS_11__wrap_iterIPSA_EEEEvT0_SN_PNS_15iterator_traitsISN_E10value_typeET_ = comdat any

$_ZNSt3__124__buffered_inplace_mergeIRN4base8internal9flat_treeINS_10unique_ptrIKNS1_11ModuleCache6ModuleENS_14default_deleteIS7_EEEENS1_8identityENS5_23ModuleAndAddressCompareENS_6vectorISA_NS_9allocatorISA_EEEEE13value_compareENS_11__wrap_iterIPSA_EEEEvT0_SN_SN_T_NS_15iterator_traitsISN_E15difference_typeESR_PNSQ_10value_typeE = comdat any

@.str = private unnamed_addr constant [81 x i8] c"prior_non_native_modules_size + new_modules.size() == non_native_modules_.size()\00", align 1
@.str.1 = private unnamed_addr constant [36 x i8] c"../../base/profiler/module_cache.cc\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"was_inserted\00", align 1
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1

@_ZN4base11ModuleCacheC1Ev = hidden unnamed_addr alias void (%"class.base::ModuleCache"*), void (%"class.base::ModuleCache"*)* @_ZN4base11ModuleCacheC2Ev
@_ZN4base11ModuleCacheD1Ev = hidden unnamed_addr alias void (%"class.base::ModuleCache"*), void (%"class.base::ModuleCache"*)* @_ZN4base11ModuleCacheD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11ModuleCacheC2Ev(%"class.base::ModuleCache"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::ModuleCache", %"class.base::ModuleCache"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.base::ModuleCache", %"class.base::ModuleCache"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = getelementptr inbounds %"class.base::ModuleCache", %"class.base::ModuleCache"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_node_base"** %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %3, %"class.std::__1::__tree_end_node"** %4, align 8
  %6 = getelementptr inbounds %"class.base::ModuleCache", %"class.base::ModuleCache"* %0, i64 0, i32 1
  %7 = bitcast %"class.base::internal::flat_tree"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 56, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11ModuleCacheD2Ev(%"class.base::ModuleCache"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::ModuleCache", %"class.base::ModuleCache"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  %8 = getelementptr inbounds %"class.base::ModuleCache", %"class.base::ModuleCache"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr"* %9, %4
  br i1 %10, label %27, label %11

11:                                               ; preds = %6, %22
  %12 = phi %"class.std::__1::unique_ptr"* [ %13, %22 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %14, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %14, align 8
  %16 = icmp eq %"class.base::ModuleCache::Module"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.base::ModuleCache::Module"* %15 to void (%"class.base::ModuleCache::Module"*)***
  %19 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %19, i64 1
  %21 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %20, align 8
  tail call void %21(%"class.base::ModuleCache::Module"* nonnull %15) #11
  br label %22

22:                                               ; preds = %17, %11
  %23 = icmp eq %"class.std::__1::unique_ptr"* %13, %4
  br i1 %23, label %24, label %11

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector"* %2 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %6
  %28 = phi i8* [ %26, %24 ], [ %7, %6 ]
  store %"class.std::__1::unique_ptr"* %4, %"class.std::__1::unique_ptr"** %8, align 8
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"class.base::ModuleCache", %"class.base::ModuleCache"* %0, i64 0, i32 1
  %31 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %31, align 8
  %33 = icmp eq %"class.std::__1::unique_ptr"* %32, null
  br i1 %33, label %57, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.std::__1::unique_ptr"* %32 to i8*
  %36 = getelementptr inbounds %"class.base::ModuleCache", %"class.base::ModuleCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %37 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %36, align 8
  %38 = icmp eq %"class.std::__1::unique_ptr"* %37, %32
  br i1 %38, label %55, label %39

39:                                               ; preds = %34, %50
  %40 = phi %"class.std::__1::unique_ptr"* [ %41, %50 ], [ %37, %34 ]
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %40, i64 -1
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %42, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %42, align 8
  %44 = icmp eq %"class.base::ModuleCache::Module"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %39
  %46 = bitcast %"class.base::ModuleCache::Module"* %43 to void (%"class.base::ModuleCache::Module"*)***
  %47 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %47, i64 1
  %49 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %48, align 8
  tail call void %49(%"class.base::ModuleCache::Module"* nonnull %43) #11
  br label %50

50:                                               ; preds = %45, %39
  %51 = icmp eq %"class.std::__1::unique_ptr"* %41, %32
  br i1 %51, label %52, label %39

52:                                               ; preds = %50
  %53 = bitcast %"class.base::internal::flat_tree"* %30 to i8**
  %54 = load i8*, i8** %53, align 8
  br label %55

55:                                               ; preds = %52, %34
  %56 = phi i8* [ %54, %52 ], [ %35, %34 ]
  store %"class.std::__1::unique_ptr"* %32, %"class.std::__1::unique_ptr"** %36, align 8
  tail call void @_ZdlPv(i8* %56) #12
  br label %57

57:                                               ; preds = %29, %55
  %58 = getelementptr inbounds %"class.base::ModuleCache", %"class.base::ModuleCache"* %0, i64 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.base::ModuleCache", %"class.base::ModuleCache"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %60 = bitcast %"class.std::__1::__tree_end_node"* %59 to %"class.std::__1::__tree_node"**
  %61 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %60, align 8
  tail call void @_ZNSt3__16__treeINS_10unique_ptrIKN4base11ModuleCache6ModuleENS_14default_deleteIS5_EEEENS3_23ModuleAndAddressCompareENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %58, %"class.std::__1::__tree_node"* %61) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::ModuleCache::Module"* @_ZN4base11ModuleCache19GetModuleForAddressEm(%"class.base::ModuleCache"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = tail call %"class.base::ModuleCache::Module"* @_ZNK4base11ModuleCache27GetExistingModuleForAddressEm(%"class.base::ModuleCache"* %0, i64 %1)
  %5 = icmp eq %"class.base::ModuleCache::Module"* %4, null
  br i1 %5, label %6, label %40

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %9 = tail call %"class.base::ModuleCache::Module"* @_ZN4base11ModuleCache22CreateModuleForAddressEm(i64 %1) #11
  store %"class.base::ModuleCache::Module"* %9, %"class.base::ModuleCache::Module"** %8, align 8
  %10 = icmp eq %"class.base::ModuleCache::Module"* %9, null
  br i1 %10, label %11, label %24

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::ModuleCache", %"class.base::ModuleCache"* %0, i64 0, i32 3
  %13 = load %"class.base::ModuleCache::AuxiliaryModuleProvider"*, %"class.base::ModuleCache::AuxiliaryModuleProvider"** %12, align 8
  %14 = icmp eq %"class.base::ModuleCache::AuxiliaryModuleProvider"* %13, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.base::ModuleCache::AuxiliaryModuleProvider"* %13 to %"class.base::ModuleCache::Module"* (%"class.base::ModuleCache::AuxiliaryModuleProvider"*, i64)***
  %17 = load %"class.base::ModuleCache::Module"* (%"class.base::ModuleCache::AuxiliaryModuleProvider"*, i64)**, %"class.base::ModuleCache::Module"* (%"class.base::ModuleCache::AuxiliaryModuleProvider"*, i64)*** %16, align 8
  %18 = load %"class.base::ModuleCache::Module"* (%"class.base::ModuleCache::AuxiliaryModuleProvider"*, i64)*, %"class.base::ModuleCache::Module"* (%"class.base::ModuleCache::AuxiliaryModuleProvider"*, i64)** %17, align 8
  %19 = tail call %"class.base::ModuleCache::Module"* %18(%"class.base::ModuleCache::AuxiliaryModuleProvider"* nonnull %13, i64 %1) #11
  %20 = ptrtoint %"class.base::ModuleCache::Module"* %19 to i64
  %21 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  store i64 %20, i64* %21, align 8
  %22 = icmp eq %"class.base::ModuleCache::Module"* %19, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %15, %11
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %8, align 8
  br label %38

24:                                               ; preds = %6, %15
  %25 = getelementptr inbounds %"class.base::ModuleCache", %"class.base::ModuleCache"* %0, i64 0, i32 0, i32 0
  %26 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_10unique_ptrIKN4base11ModuleCache6ModuleENS_14default_deleteIS5_EEEENS3_23ModuleAndAddressCompareENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS8_JS8_EEENS_4pairINS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %25, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #11
  %27 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 4
  %29 = bitcast %"class.std::__1::__tree_end_node"* %28 to %"class.base::ModuleCache::Module"**
  %30 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %29, align 8
  %31 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %8, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %8, align 8
  %32 = icmp eq %"class.base::ModuleCache::Module"* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %24
  %34 = bitcast %"class.base::ModuleCache::Module"* %31 to void (%"class.base::ModuleCache::Module"*)***
  %35 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %35, i64 1
  %37 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %36, align 8
  call void %37(%"class.base::ModuleCache::Module"* nonnull %31) #11
  br label %38

38:                                               ; preds = %23, %24, %33
  %39 = phi %"class.base::ModuleCache::Module"* [ null, %23 ], [ %30, %24 ], [ %30, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  br label %40

40:                                               ; preds = %2, %38
  %41 = phi %"class.base::ModuleCache::Module"* [ %39, %38 ], [ %4, %2 ]
  ret %"class.base::ModuleCache::Module"* %41
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::ModuleCache::Module"* @_ZNK4base11ModuleCache27GetExistingModuleForAddressEm(%"class.base::ModuleCache"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::ModuleCache", %"class.base::ModuleCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = getelementptr inbounds %"class.base::ModuleCache", %"class.base::ModuleCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::unique_ptr"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"class.std::__1::unique_ptr"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"class.std::__1::unique_ptr"*
  br i1 %10, label %43, label %12

12:                                               ; preds = %2
  %13 = ashr exact i64 %9, 3
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi %"class.std::__1::unique_ptr"* [ %38, %14 ], [ %4, %12 ]
  %16 = phi i64 [ %37, %14 ], [ %13, %12 ]
  %17 = lshr i64 %16, 1
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 %17
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %19, align 8
  %21 = bitcast %"class.base::ModuleCache::Module"* %20 to i64 (%"class.base::ModuleCache::Module"*)***
  %22 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %21, align 8
  %23 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %22, i64 2
  %24 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %23, align 8
  %25 = tail call i64 %24(%"class.base::ModuleCache::Module"* %20) #11
  %26 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %19, align 8
  %27 = bitcast %"class.base::ModuleCache::Module"* %26 to i64 (%"class.base::ModuleCache::Module"*)***
  %28 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %27, align 8
  %29 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %28, i64 5
  %30 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %29, align 8
  %31 = tail call i64 %30(%"class.base::ModuleCache::Module"* %26) #11
  %32 = add i64 %31, %25
  %33 = icmp ule i64 %32, %1
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %18, i64 1
  %35 = xor i64 %17, -1
  %36 = add i64 %16, %35
  %37 = select i1 %33, i64 %36, i64 %17
  %38 = select i1 %33, %"class.std::__1::unique_ptr"* %34, %"class.std::__1::unique_ptr"* %15
  %39 = icmp eq i64 %37, 0
  br i1 %39, label %40, label %14

40:                                               ; preds = %14
  %41 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %42 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  br label %43

43:                                               ; preds = %40, %2
  %44 = phi i64 [ %42, %40 ], [ %8, %2 ]
  %45 = phi %"class.std::__1::unique_ptr"* [ %41, %40 ], [ %11, %2 ]
  %46 = phi %"class.std::__1::unique_ptr"* [ %38, %40 ], [ %4, %2 ]
  %47 = icmp eq %"class.std::__1::unique_ptr"* %46, %45
  br i1 %47, label %60, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %49, align 8
  %51 = bitcast %"class.base::ModuleCache::Module"* %50 to i64 (%"class.base::ModuleCache::Module"*)***
  %52 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %51, align 8
  %53 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %52, i64 2
  %54 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %53, align 8
  %55 = tail call i64 %54(%"class.base::ModuleCache::Module"* %50) #11
  %56 = icmp ugt i64 %55, %1
  br i1 %56, label %60, label %57

57:                                               ; preds = %48
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 1
  %59 = ptrtoint %"class.std::__1::unique_ptr"* %58 to i64
  br label %60

60:                                               ; preds = %57, %48, %43
  %61 = phi i64 [ %59, %57 ], [ %44, %43 ], [ %44, %48 ]
  %62 = inttoptr i64 %61 to %"class.std::__1::unique_ptr"*
  %63 = icmp eq %"class.std::__1::unique_ptr"* %46, %62
  br i1 %63, label %70, label %64

64:                                               ; preds = %60
  %65 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %66 = icmp eq %"class.std::__1::unique_ptr"* %46, %65
  br i1 %66, label %70, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %68, align 8
  br label %115

70:                                               ; preds = %60, %64
  %71 = getelementptr inbounds %"class.base::ModuleCache", %"class.base::ModuleCache"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %72 = bitcast %"class.std::__1::__tree_end_node"* %71 to %"class.std::__1::__tree_node"**
  %73 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %72, align 8
  %74 = icmp eq %"class.std::__1::__tree_node"* %73, null
  br i1 %74, label %115, label %75

75:                                               ; preds = %70, %75
  %76 = phi %"class.std::__1::__tree_end_node"* [ %98, %75 ], [ %71, %70 ]
  %77 = phi %"class.std::__1::__tree_node"* [ %99, %75 ], [ %73, %70 ]
  %78 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %77, i64 0, i32 1, i32 0, i32 0, i32 0
  %79 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %78, align 8
  %80 = bitcast %"class.base::ModuleCache::Module"* %79 to i64 (%"class.base::ModuleCache::Module"*)***
  %81 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %80, align 8
  %82 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %81, i64 2
  %83 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %82, align 8
  %84 = tail call i64 %83(%"class.base::ModuleCache::Module"* %79) #11
  %85 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %78, align 8
  %86 = bitcast %"class.base::ModuleCache::Module"* %85 to i64 (%"class.base::ModuleCache::Module"*)***
  %87 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %86, align 8
  %88 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %87, i64 5
  %89 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %88, align 8
  %90 = tail call i64 %89(%"class.base::ModuleCache::Module"* %85) #11
  %91 = add i64 %90, %84
  %92 = icmp ule i64 %91, %1
  %93 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %77, i64 0, i32 0, i32 1
  %94 = bitcast %"class.std::__1::__tree_node_base"** %93 to %"class.std::__1::__tree_node"**
  %95 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %77, i64 0, i32 0, i32 0
  %96 = bitcast %"class.std::__1::__tree_node"* %77 to %"class.std::__1::__tree_node"**
  %97 = select i1 %92, %"class.std::__1::__tree_node"** %94, %"class.std::__1::__tree_node"** %96
  %98 = select i1 %92, %"class.std::__1::__tree_end_node"* %76, %"class.std::__1::__tree_end_node"* %95
  %99 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %97, align 8
  %100 = icmp eq %"class.std::__1::__tree_node"* %99, null
  br i1 %100, label %101, label %75

101:                                              ; preds = %75
  %102 = icmp eq %"class.std::__1::__tree_end_node"* %98, %71
  br i1 %102, label %115, label %103

103:                                              ; preds = %101
  %104 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %98, i64 4
  %105 = bitcast %"class.std::__1::__tree_end_node"* %104 to %"class.base::ModuleCache::Module"**
  %106 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %105, align 8
  %107 = bitcast %"class.base::ModuleCache::Module"* %106 to i64 (%"class.base::ModuleCache::Module"*)***
  %108 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %107, align 8
  %109 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %108, i64 2
  %110 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %109, align 8
  %111 = tail call i64 %110(%"class.base::ModuleCache::Module"* %106) #11
  %112 = icmp ugt i64 %111, %1
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %105, align 8
  br label %115

115:                                              ; preds = %103, %101, %70, %113, %67
  %116 = phi %"class.base::ModuleCache::Module"* [ %69, %67 ], [ %114, %113 ], [ null, %70 ], [ null, %101 ], [ null, %103 ]
  ret %"class.base::ModuleCache::Module"* %116
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.base::ModuleCache::Module"* @_ZN4base11ModuleCache22CreateModuleForAddressEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base11ModuleCache10GetModulesEv(%"class.std::__1::vector.12"* noalias sret, %"class.base::ModuleCache"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.std::__1::vector.12"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #11
  %6 = getelementptr inbounds %"class.base::ModuleCache", %"class.base::ModuleCache"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.base::ModuleCache::Module"*** %4 to i64*
  %9 = bitcast %"class.std::__1::vector.12"* %0 to i64*
  %10 = icmp eq i64 %7, 0
  br i1 %10, label %23, label %11

11:                                               ; preds = %2
  %12 = icmp ugt i64 %7, 2305843009213693951
  br i1 %12, label %13, label %14

13:                                               ; preds = %11
  tail call void @abort() #13
  unreachable

14:                                               ; preds = %11
  %15 = bitcast %"class.base::ModuleCache::Module"*** %3 to i64*
  %16 = shl i64 %7, 3
  %17 = tail call i8* @_Znwm(i64 %16) #12
  %18 = bitcast i8* %17 to %"class.base::ModuleCache::Module"**
  %19 = ptrtoint i8* %17 to i64
  %20 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %18, i64 %7
  %21 = ptrtoint %"class.base::ModuleCache::Module"** %20 to i64
  %22 = ptrtoint i8* %17 to i64
  store i64 %22, i64* %9, align 8
  store i64 %19, i64* %15, align 8
  store i64 %21, i64* %8, align 8
  br label %23

23:                                               ; preds = %14, %2
  %24 = phi i64 [ 0, %2 ], [ %19, %14 ]
  %25 = phi %"class.base::ModuleCache::Module"** [ null, %2 ], [ %20, %14 ]
  %26 = phi %"class.base::ModuleCache::Module"** [ null, %2 ], [ %18, %14 ]
  %27 = getelementptr inbounds %"class.base::ModuleCache", %"class.base::ModuleCache"* %1, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %27, align 8
  %29 = getelementptr inbounds %"class.base::ModuleCache", %"class.base::ModuleCache"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %30 = icmp eq %"class.std::__1::__tree_end_node"* %28, %29
  br i1 %30, label %33, label %31

31:                                               ; preds = %23
  %32 = bitcast %"class.base::ModuleCache::Module"*** %3 to i64*
  br label %41

33:                                               ; preds = %131, %23
  %34 = getelementptr inbounds %"class.base::ModuleCache", %"class.base::ModuleCache"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %35 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %34, align 8
  %36 = getelementptr inbounds %"class.base::ModuleCache", %"class.base::ModuleCache"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %37 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %36, align 8
  %38 = icmp eq %"class.std::__1::unique_ptr"* %35, %37
  br i1 %38, label %138, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.base::ModuleCache::Module"*** %3 to i64*
  br label %139

41:                                               ; preds = %134, %31
  %42 = phi i64 [ %24, %31 ], [ %137, %134 ]
  %43 = phi %"class.base::ModuleCache::Module"** [ %25, %31 ], [ %136, %134 ]
  %44 = phi %"class.base::ModuleCache::Module"** [ %26, %31 ], [ %135, %134 ]
  %45 = phi %"class.std::__1::__tree_end_node"* [ %28, %31 ], [ %132, %134 ]
  %46 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %45, i64 4
  %47 = bitcast %"class.std::__1::__tree_end_node"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = icmp ult %"class.base::ModuleCache::Module"** %44, %43
  %50 = ptrtoint %"class.base::ModuleCache::Module"** %43 to i64
  br i1 %49, label %51, label %55

51:                                               ; preds = %41
  %52 = bitcast %"class.base::ModuleCache::Module"** %44 to i64*
  store i64 %48, i64* %52, align 8
  %53 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %44, i64 1
  %54 = ptrtoint %"class.base::ModuleCache::Module"** %53 to i64
  store i64 %54, i64* %32, align 8
  br label %103

55:                                               ; preds = %41
  %56 = ptrtoint %"class.base::ModuleCache::Module"** %44 to i64
  %57 = load i64, i64* %9, align 8
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 3
  %60 = add nsw i64 %59, 1
  %61 = icmp ugt i64 %60, 2305843009213693951
  br i1 %61, label %62, label %64

62:                                               ; preds = %55
  %63 = bitcast %"class.std::__1::vector.12"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %63) #13
  unreachable

64:                                               ; preds = %55
  %65 = sub i64 %50, %57
  %66 = ashr exact i64 %65, 3
  %67 = icmp ult i64 %66, 1152921504606846975
  br i1 %67, label %68, label %76

68:                                               ; preds = %64
  %69 = ashr exact i64 %65, 2
  %70 = icmp ult i64 %69, %60
  %71 = select i1 %70, i64 %60, i64 %69
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %81, label %73

73:                                               ; preds = %68
  %74 = icmp ugt i64 %71, 2305843009213693951
  br i1 %74, label %75, label %76

75:                                               ; preds = %73
  tail call void @abort() #13
  unreachable

76:                                               ; preds = %73, %64
  %77 = phi i64 [ %71, %73 ], [ 2305843009213693951, %64 ]
  %78 = shl i64 %77, 3
  %79 = tail call i8* @_Znwm(i64 %78) #12
  %80 = bitcast i8* %79 to %"class.base::ModuleCache::Module"**
  br label %81

81:                                               ; preds = %76, %68
  %82 = phi i64 [ %77, %76 ], [ 0, %68 ]
  %83 = phi %"class.base::ModuleCache::Module"** [ %80, %76 ], [ null, %68 ]
  %84 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %83, i64 %59
  %85 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %83, i64 %82
  %86 = ptrtoint %"class.base::ModuleCache::Module"** %85 to i64
  %87 = bitcast %"class.base::ModuleCache::Module"** %84 to i64*
  store i64 %48, i64* %87, align 8
  %88 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %84, i64 1
  %89 = ptrtoint %"class.base::ModuleCache::Module"** %88 to i64
  %90 = sub i64 %42, %57
  %91 = ashr exact i64 %90, 3
  %92 = sub nsw i64 0, %91
  %93 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %84, i64 %92
  %94 = ptrtoint %"class.base::ModuleCache::Module"** %93 to i64
  %95 = icmp sgt i64 %90, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %81
  %97 = bitcast %"class.base::ModuleCache::Module"** %93 to i8*
  %98 = inttoptr i64 %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* align 8 %98, i64 %90, i1 false) #11
  br label %99

99:                                               ; preds = %96, %81
  store i64 %94, i64* %9, align 8
  store i64 %89, i64* %32, align 8
  store i64 %86, i64* %8, align 8
  %100 = icmp eq i64 %57, 0
  br i1 %100, label %103, label %101

101:                                              ; preds = %99
  %102 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %102) #12
  br label %103

103:                                              ; preds = %51, %99, %101
  %104 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %45, i64 1, i32 0
  %105 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %104, align 8
  %106 = icmp eq %"class.std::__1::__tree_node_base"* %105, null
  br i1 %106, label %107, label %115

107:                                              ; preds = %103
  %108 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"class.std::__1::__tree_node_base"*
  %109 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %45, i64 2
  %110 = bitcast %"class.std::__1::__tree_end_node"* %109 to %"class.std::__1::__tree_end_node"**
  %111 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %110, align 8
  %112 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %111, i64 0, i32 0
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %112, align 8
  %114 = icmp eq %"class.std::__1::__tree_node_base"* %113, %108
  br i1 %114, label %131, label %122

115:                                              ; preds = %103, %115
  %116 = phi %"class.std::__1::__tree_node_base"* [ %118, %115 ], [ %105, %103 ]
  %117 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %116, i64 0, i32 0, i32 0
  %118 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %117, align 8
  %119 = icmp eq %"class.std::__1::__tree_node_base"* %118, null
  br i1 %119, label %120, label %115

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %116, i64 0, i32 0
  br label %131

122:                                              ; preds = %107, %122
  %123 = phi %"class.std::__1::__tree_end_node"** [ %126, %122 ], [ %110, %107 ]
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to %"class.std::__1::__tree_node_base"**
  %125 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 2
  %127 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %126, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %127, i64 0, i32 0
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = icmp eq %"class.std::__1::__tree_node_base"* %129, %125
  br i1 %130, label %131, label %122

131:                                              ; preds = %122, %107, %120
  %132 = phi %"class.std::__1::__tree_end_node"* [ %121, %120 ], [ %111, %107 ], [ %127, %122 ]
  %133 = icmp eq %"class.std::__1::__tree_end_node"* %132, %29
  br i1 %133, label %33, label %134

134:                                              ; preds = %131
  %135 = load %"class.base::ModuleCache::Module"**, %"class.base::ModuleCache::Module"*** %3, align 8
  %136 = load %"class.base::ModuleCache::Module"**, %"class.base::ModuleCache::Module"*** %4, align 8
  %137 = ptrtoint %"class.base::ModuleCache::Module"** %135 to i64
  br label %41

138:                                              ; preds = %195, %33
  ret void

139:                                              ; preds = %39, %195
  %140 = phi %"class.std::__1::unique_ptr"* [ %35, %39 ], [ %196, %195 ]
  %141 = bitcast %"class.std::__1::unique_ptr"* %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = load %"class.base::ModuleCache::Module"**, %"class.base::ModuleCache::Module"*** %3, align 8
  %144 = load %"class.base::ModuleCache::Module"**, %"class.base::ModuleCache::Module"*** %4, align 8
  %145 = icmp ult %"class.base::ModuleCache::Module"** %143, %144
  %146 = ptrtoint %"class.base::ModuleCache::Module"** %144 to i64
  br i1 %145, label %147, label %151

147:                                              ; preds = %139
  %148 = bitcast %"class.base::ModuleCache::Module"** %143 to i64*
  store i64 %142, i64* %148, align 8
  %149 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %143, i64 1
  %150 = ptrtoint %"class.base::ModuleCache::Module"** %149 to i64
  store i64 %150, i64* %40, align 8
  br label %195

151:                                              ; preds = %139
  %152 = ptrtoint %"class.base::ModuleCache::Module"** %143 to i64
  %153 = load i64, i64* %9, align 8
  %154 = sub i64 %152, %153
  %155 = ashr exact i64 %154, 3
  %156 = add nsw i64 %155, 1
  %157 = icmp ugt i64 %156, 2305843009213693951
  br i1 %157, label %158, label %160

158:                                              ; preds = %151
  %159 = bitcast %"class.std::__1::vector.12"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %159) #13
  unreachable

160:                                              ; preds = %151
  %161 = sub i64 %146, %153
  %162 = ashr exact i64 %161, 3
  %163 = icmp ult i64 %162, 1152921504606846975
  br i1 %163, label %164, label %172

164:                                              ; preds = %160
  %165 = ashr exact i64 %161, 2
  %166 = icmp ult i64 %165, %156
  %167 = select i1 %166, i64 %156, i64 %165
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %177, label %169

169:                                              ; preds = %164
  %170 = icmp ugt i64 %167, 2305843009213693951
  br i1 %170, label %171, label %172

171:                                              ; preds = %169
  tail call void @abort() #13
  unreachable

172:                                              ; preds = %169, %160
  %173 = phi i64 [ %167, %169 ], [ 2305843009213693951, %160 ]
  %174 = shl i64 %173, 3
  %175 = tail call i8* @_Znwm(i64 %174) #12
  %176 = bitcast i8* %175 to %"class.base::ModuleCache::Module"**
  br label %177

177:                                              ; preds = %172, %164
  %178 = phi i64 [ %173, %172 ], [ 0, %164 ]
  %179 = phi i8* [ %175, %172 ], [ null, %164 ]
  %180 = phi %"class.base::ModuleCache::Module"** [ %176, %172 ], [ null, %164 ]
  %181 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %180, i64 %155
  %182 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %180, i64 %178
  %183 = ptrtoint %"class.base::ModuleCache::Module"** %182 to i64
  %184 = bitcast %"class.base::ModuleCache::Module"** %181 to i64*
  store i64 %142, i64* %184, align 8
  %185 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %181, i64 1
  %186 = ptrtoint %"class.base::ModuleCache::Module"** %185 to i64
  %187 = ptrtoint %"class.base::ModuleCache::Module"** %180 to i64
  %188 = icmp sgt i64 %154, 0
  br i1 %188, label %189, label %191

189:                                              ; preds = %177
  %190 = inttoptr i64 %153 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %179, i8* align 8 %190, i64 %154, i1 false) #11
  br label %191

191:                                              ; preds = %189, %177
  store i64 %187, i64* %9, align 8
  store i64 %186, i64* %40, align 8
  store i64 %183, i64* %8, align 8
  %192 = icmp eq i64 %153, 0
  br i1 %192, label %195, label %193

193:                                              ; preds = %191
  %194 = inttoptr i64 %153 to i8*
  tail call void @_ZdlPv(i8* %194) #12
  br label %195

195:                                              ; preds = %147, %191, %193
  %196 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 1
  %197 = icmp eq %"class.std::__1::unique_ptr"* %196, %37
  br i1 %197, label %138, label %139
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11ModuleCache22UpdateNonNativeModulesERKNSt3__16vectorIPKNS0_6ModuleENS1_9allocatorIS5_EEEENS2_INS1_10unique_ptrIS4_NS1_14default_deleteIS4_EEEENS6_ISE_EEEE(%"class.base::ModuleCache"*, %"class.std::__1::vector.12"* nocapture readonly dereferenceable(24), %"class.std::__1::vector"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.base::internal::flat_tree<const base::ModuleCache::Module *, base::identity, std::__1::less<void>, std::__1::vector<const base::ModuleCache::Module *, std::__1::allocator<const base::ModuleCache::Module *> > >::value_compare", align 1
  %5 = alloca %class.anon.24, align 8
  %6 = alloca %class.anon, align 8
  %7 = alloca %"struct.base::identity", align 1
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.base::internal::flat_tree.19", align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = bitcast %"class.base::internal::flat_tree.19"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #11
  %13 = getelementptr inbounds %"class.base::internal::flat_tree.19", %"class.base::internal::flat_tree.19"* %9, i64 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.base::internal::flat_tree.19", %"class.base::internal::flat_tree.19"* %9, i64 0, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.base::internal::flat_tree.19", %"class.base::internal::flat_tree.19"* %9, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.base::ModuleCache::Module"**, %"class.base::ModuleCache::Module"*** %16, align 8
  %18 = bitcast %"class.base::ModuleCache::Module"** %17 to i8*
  %19 = ptrtoint %"class.base::ModuleCache::Module"** %17 to i64
  %20 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %1, i64 0, i32 0, i32 1
  %21 = load %"class.base::ModuleCache::Module"**, %"class.base::ModuleCache::Module"*** %20, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #11
  %22 = ptrtoint %"class.base::ModuleCache::Module"** %21 to i64
  %23 = sub i64 %22, %19
  %24 = ashr exact i64 %23, 3
  %25 = icmp eq i64 %23, 0
  br i1 %25, label %218, label %26

26:                                               ; preds = %3
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = bitcast %"class.base::internal::flat_tree.19"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %29) #13
  unreachable

30:                                               ; preds = %26
  %31 = tail call i8* @_Znwm(i64 %23) #12
  %32 = bitcast i8* %31 to %"class.base::ModuleCache::Module"**
  %33 = bitcast %"class.base::ModuleCache::Module"*** %14 to i8**
  store i8* %31, i8** %33, align 8
  %34 = bitcast %"class.base::internal::flat_tree.19"* %9 to i8**
  store i8* %31, i8** %34, align 8
  %35 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %32, i64 %24
  store %"class.base::ModuleCache::Module"** %35, %"class.base::ModuleCache::Module"*** %15, align 8
  %36 = bitcast %"class.base::ModuleCache::Module"*** %14 to i64*
  %37 = ptrtoint i8* %31 to i64
  %38 = icmp eq %"class.base::ModuleCache::Module"** %17, %21
  br i1 %38, label %215, label %39

39:                                               ; preds = %30
  %40 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %21, i64 -1
  %41 = ptrtoint %"class.base::ModuleCache::Module"** %40 to i64
  %42 = sub i64 %41, %19
  %43 = lshr i64 %42, 3
  %44 = add nuw nsw i64 %43, 1
  %45 = icmp ult i64 %44, 4
  br i1 %45, label %141, label %46

46:                                               ; preds = %39
  %47 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %21, i64 -1
  %48 = ptrtoint %"class.base::ModuleCache::Module"** %47 to i64
  %49 = sub i64 %48, %19
  %50 = lshr i64 %49, 3
  %51 = add i64 %49, 8
  %52 = and i64 %51, -8
  %53 = getelementptr i8, i8* %31, i64 %52
  %54 = add nuw nsw i64 %50, 1
  %55 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %17, i64 %54
  %56 = bitcast %"class.base::ModuleCache::Module"** %55 to i8*
  %57 = icmp ult i8* %31, %56
  %58 = icmp ugt i8* %53, %18
  %59 = and i1 %57, %58
  br i1 %59, label %141, label %60

60:                                               ; preds = %46
  %61 = and i64 %44, 4611686018427387900
  %62 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %32, i64 %61
  %63 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %17, i64 %61
  %64 = add nsw i64 %61, -4
  %65 = lshr exact i64 %64, 2
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 3
  %68 = icmp ult i64 %64, 12
  br i1 %68, label %120, label %69

69:                                               ; preds = %60
  %70 = sub nsw i64 %66, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %117, %71 ]
  %73 = phi i64 [ %70, %69 ], [ %118, %71 ]
  %74 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %32, i64 %72
  %75 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %17, i64 %72
  %76 = bitcast %"class.base::ModuleCache::Module"** %75 to <2 x i64>*
  %77 = load <2 x i64>, <2 x i64>* %76, align 8, !alias.scope !2
  %78 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %75, i64 2
  %79 = bitcast %"class.base::ModuleCache::Module"** %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8, !alias.scope !2
  %81 = bitcast %"class.base::ModuleCache::Module"** %74 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %81, align 8, !alias.scope !5, !noalias !2
  %82 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %74, i64 2
  %83 = bitcast %"class.base::ModuleCache::Module"** %82 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %83, align 8, !alias.scope !5, !noalias !2
  %84 = or i64 %72, 4
  %85 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %32, i64 %84
  %86 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %17, i64 %84
  %87 = bitcast %"class.base::ModuleCache::Module"** %86 to <2 x i64>*
  %88 = load <2 x i64>, <2 x i64>* %87, align 8, !alias.scope !2
  %89 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %86, i64 2
  %90 = bitcast %"class.base::ModuleCache::Module"** %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8, !alias.scope !2
  %92 = bitcast %"class.base::ModuleCache::Module"** %85 to <2 x i64>*
  store <2 x i64> %88, <2 x i64>* %92, align 8, !alias.scope !5, !noalias !2
  %93 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %85, i64 2
  %94 = bitcast %"class.base::ModuleCache::Module"** %93 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %94, align 8, !alias.scope !5, !noalias !2
  %95 = or i64 %72, 8
  %96 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %32, i64 %95
  %97 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %17, i64 %95
  %98 = bitcast %"class.base::ModuleCache::Module"** %97 to <2 x i64>*
  %99 = load <2 x i64>, <2 x i64>* %98, align 8, !alias.scope !2
  %100 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %97, i64 2
  %101 = bitcast %"class.base::ModuleCache::Module"** %100 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 8, !alias.scope !2
  %103 = bitcast %"class.base::ModuleCache::Module"** %96 to <2 x i64>*
  store <2 x i64> %99, <2 x i64>* %103, align 8, !alias.scope !5, !noalias !2
  %104 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %96, i64 2
  %105 = bitcast %"class.base::ModuleCache::Module"** %104 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %105, align 8, !alias.scope !5, !noalias !2
  %106 = or i64 %72, 12
  %107 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %32, i64 %106
  %108 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %17, i64 %106
  %109 = bitcast %"class.base::ModuleCache::Module"** %108 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 8, !alias.scope !2
  %111 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %108, i64 2
  %112 = bitcast %"class.base::ModuleCache::Module"** %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8, !alias.scope !2
  %114 = bitcast %"class.base::ModuleCache::Module"** %107 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %114, align 8, !alias.scope !5, !noalias !2
  %115 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %107, i64 2
  %116 = bitcast %"class.base::ModuleCache::Module"** %115 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %116, align 8, !alias.scope !5, !noalias !2
  %117 = add i64 %72, 16
  %118 = add i64 %73, -4
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %71, !llvm.loop !7

120:                                              ; preds = %71, %60
  %121 = phi i64 [ 0, %60 ], [ %117, %71 ]
  %122 = icmp eq i64 %67, 0
  br i1 %122, label %139, label %123

123:                                              ; preds = %120, %123
  %124 = phi i64 [ %136, %123 ], [ %121, %120 ]
  %125 = phi i64 [ %137, %123 ], [ %67, %120 ]
  %126 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %32, i64 %124
  %127 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %17, i64 %124
  %128 = bitcast %"class.base::ModuleCache::Module"** %127 to <2 x i64>*
  %129 = load <2 x i64>, <2 x i64>* %128, align 8, !alias.scope !2
  %130 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %127, i64 2
  %131 = bitcast %"class.base::ModuleCache::Module"** %130 to <2 x i64>*
  %132 = load <2 x i64>, <2 x i64>* %131, align 8, !alias.scope !2
  %133 = bitcast %"class.base::ModuleCache::Module"** %126 to <2 x i64>*
  store <2 x i64> %129, <2 x i64>* %133, align 8, !alias.scope !5, !noalias !2
  %134 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %126, i64 2
  %135 = bitcast %"class.base::ModuleCache::Module"** %134 to <2 x i64>*
  store <2 x i64> %132, <2 x i64>* %135, align 8, !alias.scope !5, !noalias !2
  %136 = add i64 %124, 4
  %137 = add i64 %125, -1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %123, !llvm.loop !9

139:                                              ; preds = %123, %120
  %140 = icmp eq i64 %44, %61
  br i1 %140, label %212, label %141

141:                                              ; preds = %139, %46, %39
  %142 = phi %"class.base::ModuleCache::Module"** [ %32, %46 ], [ %32, %39 ], [ %62, %139 ]
  %143 = phi %"class.base::ModuleCache::Module"** [ %17, %46 ], [ %17, %39 ], [ %63, %139 ]
  %144 = ptrtoint %"class.base::ModuleCache::Module"** %143 to i64
  %145 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %21, i64 -1
  %146 = ptrtoint %"class.base::ModuleCache::Module"** %145 to i64
  %147 = sub i64 %146, %144
  %148 = lshr i64 %147, 3
  %149 = add nuw nsw i64 %148, 1
  %150 = and i64 %149, 7
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %163, label %152

152:                                              ; preds = %141, %152
  %153 = phi %"class.base::ModuleCache::Module"** [ %160, %152 ], [ %142, %141 ]
  %154 = phi %"class.base::ModuleCache::Module"** [ %159, %152 ], [ %143, %141 ]
  %155 = phi i64 [ %161, %152 ], [ %150, %141 ]
  %156 = bitcast %"class.base::ModuleCache::Module"** %153 to i64*
  %157 = bitcast %"class.base::ModuleCache::Module"** %154 to i64*
  %158 = load i64, i64* %157, align 8
  store i64 %158, i64* %156, align 8
  %159 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %154, i64 1
  %160 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %153, i64 1
  %161 = add i64 %155, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %152, !llvm.loop !11

163:                                              ; preds = %152, %141
  %164 = phi %"class.base::ModuleCache::Module"** [ undef, %141 ], [ %160, %152 ]
  %165 = phi %"class.base::ModuleCache::Module"** [ %142, %141 ], [ %160, %152 ]
  %166 = phi %"class.base::ModuleCache::Module"** [ %143, %141 ], [ %159, %152 ]
  %167 = icmp ult i64 %147, 56
  br i1 %167, label %212, label %168

168:                                              ; preds = %163, %168
  %169 = phi %"class.base::ModuleCache::Module"** [ %210, %168 ], [ %165, %163 ]
  %170 = phi %"class.base::ModuleCache::Module"** [ %209, %168 ], [ %166, %163 ]
  %171 = bitcast %"class.base::ModuleCache::Module"** %169 to i64*
  %172 = bitcast %"class.base::ModuleCache::Module"** %170 to i64*
  %173 = load i64, i64* %172, align 8
  store i64 %173, i64* %171, align 8
  %174 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %170, i64 1
  %175 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %169, i64 1
  %176 = bitcast %"class.base::ModuleCache::Module"** %175 to i64*
  %177 = bitcast %"class.base::ModuleCache::Module"** %174 to i64*
  %178 = load i64, i64* %177, align 8
  store i64 %178, i64* %176, align 8
  %179 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %170, i64 2
  %180 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %169, i64 2
  %181 = bitcast %"class.base::ModuleCache::Module"** %180 to i64*
  %182 = bitcast %"class.base::ModuleCache::Module"** %179 to i64*
  %183 = load i64, i64* %182, align 8
  store i64 %183, i64* %181, align 8
  %184 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %170, i64 3
  %185 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %169, i64 3
  %186 = bitcast %"class.base::ModuleCache::Module"** %185 to i64*
  %187 = bitcast %"class.base::ModuleCache::Module"** %184 to i64*
  %188 = load i64, i64* %187, align 8
  store i64 %188, i64* %186, align 8
  %189 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %170, i64 4
  %190 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %169, i64 4
  %191 = bitcast %"class.base::ModuleCache::Module"** %190 to i64*
  %192 = bitcast %"class.base::ModuleCache::Module"** %189 to i64*
  %193 = load i64, i64* %192, align 8
  store i64 %193, i64* %191, align 8
  %194 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %170, i64 5
  %195 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %169, i64 5
  %196 = bitcast %"class.base::ModuleCache::Module"** %195 to i64*
  %197 = bitcast %"class.base::ModuleCache::Module"** %194 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %170, i64 6
  %200 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %169, i64 6
  %201 = bitcast %"class.base::ModuleCache::Module"** %200 to i64*
  %202 = bitcast %"class.base::ModuleCache::Module"** %199 to i64*
  %203 = load i64, i64* %202, align 8
  store i64 %203, i64* %201, align 8
  %204 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %170, i64 7
  %205 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %169, i64 7
  %206 = bitcast %"class.base::ModuleCache::Module"** %205 to i64*
  %207 = bitcast %"class.base::ModuleCache::Module"** %204 to i64*
  %208 = load i64, i64* %207, align 8
  store i64 %208, i64* %206, align 8
  %209 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %170, i64 8
  %210 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %169, i64 8
  %211 = icmp eq %"class.base::ModuleCache::Module"** %209, %21
  br i1 %211, label %212, label %168, !llvm.loop !12

212:                                              ; preds = %163, %168, %139
  %213 = phi %"class.base::ModuleCache::Module"** [ %62, %139 ], [ %164, %163 ], [ %210, %168 ]
  %214 = ptrtoint %"class.base::ModuleCache::Module"** %213 to i64
  br label %215

215:                                              ; preds = %212, %30
  %216 = phi i64 [ %37, %30 ], [ %214, %212 ]
  store i64 %216, i64* %36, align 8
  %217 = inttoptr i64 %216 to %"class.base::ModuleCache::Module"**
  br label %218

218:                                              ; preds = %3, %215
  %219 = phi %"class.base::ModuleCache::Module"** [ null, %3 ], [ %217, %215 ]
  %220 = phi %"class.base::ModuleCache::Module"** [ null, %3 ], [ %32, %215 ]
  %221 = ptrtoint %"class.base::ModuleCache::Module"** %219 to i64
  %222 = getelementptr inbounds %"struct.base::internal::flat_tree<const base::ModuleCache::Module *, base::identity, std::__1::less<void>, std::__1::vector<const base::ModuleCache::Module *, std::__1::allocator<const base::ModuleCache::Module *> > >::value_compare", %"struct.base::internal::flat_tree<const base::ModuleCache::Module *, base::identity, std::__1::less<void>, std::__1::vector<const base::ModuleCache::Module *, std::__1::allocator<const base::ModuleCache::Module *> > >::value_compare"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %222)
  %223 = ptrtoint %"class.base::ModuleCache::Module"** %220 to i64
  %224 = sub i64 %221, %223
  %225 = ashr exact i64 %224, 3
  %226 = icmp sgt i64 %224, 1024
  br i1 %226, label %227, label %238

227:                                              ; preds = %218
  %228 = icmp slt i64 %225, 1152921504606846975
  %229 = select i1 %228, i64 %225, i64 1152921504606846975
  br label %230

230:                                              ; preds = %235, %227
  %231 = phi i64 [ %236, %235 ], [ %229, %227 ]
  %232 = shl i64 %231, 3
  %233 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %232, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #11
  %234 = icmp eq i8* %233, null
  br i1 %234, label %235, label %239

235:                                              ; preds = %230
  %236 = lshr i64 %231, 1
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %238, label %230

238:                                              ; preds = %235, %218
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIPKNS1_11ModuleCache6ModuleENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_T_NS_15iterator_traitsISL_E15difference_typeEPNSO_10value_typeEl(%"class.base::ModuleCache::Module"** %220, %"class.base::ModuleCache::Module"** %219, %"struct.base::internal::flat_tree<const base::ModuleCache::Module *, base::identity, std::__1::less<void>, std::__1::vector<const base::ModuleCache::Module *, std::__1::allocator<const base::ModuleCache::Module *> > >::value_compare"* nonnull dereferenceable(1) %4, i64 %225, %"class.base::ModuleCache::Module"** null, i64 0) #11
  br label %241

239:                                              ; preds = %230
  %240 = bitcast i8* %233 to %"class.base::ModuleCache::Module"**
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIPKNS1_11ModuleCache6ModuleENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_T_NS_15iterator_traitsISL_E15difference_typeEPNSO_10value_typeEl(%"class.base::ModuleCache::Module"** %220, %"class.base::ModuleCache::Module"** %219, %"struct.base::internal::flat_tree<const base::ModuleCache::Module *, base::identity, std::__1::less<void>, std::__1::vector<const base::ModuleCache::Module *, std::__1::allocator<const base::ModuleCache::Module *> > >::value_compare"* nonnull dereferenceable(1) %4, i64 %225, %"class.base::ModuleCache::Module"** nonnull %240, i64 %231) #11
  call void @_ZdlPv(i8* nonnull %233) #12
  br label %241

241:                                              ; preds = %238, %239
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %222)
  %242 = icmp eq %"class.base::ModuleCache::Module"** %220, %219
  br i1 %242, label %294, label %243

243:                                              ; preds = %241, %247
  %244 = phi %"class.base::ModuleCache::Module"** [ %245, %247 ], [ %220, %241 ]
  %245 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %244, i64 1
  %246 = icmp eq %"class.base::ModuleCache::Module"** %245, %219
  br i1 %246, label %294, label %247

247:                                              ; preds = %243
  %248 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %244, align 8
  %249 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %245, align 8
  %250 = icmp ult %"class.base::ModuleCache::Module"* %248, %249
  br i1 %250, label %243, label %251

251:                                              ; preds = %247
  %252 = icmp eq %"class.base::ModuleCache::Module"** %244, %219
  br i1 %252, label %294, label %253

253:                                              ; preds = %251
  %254 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %244, i64 2
  %255 = icmp eq %"class.base::ModuleCache::Module"** %254, %219
  br i1 %255, label %279, label %256

256:                                              ; preds = %253
  %257 = ptrtoint %"class.base::ModuleCache::Module"** %244 to i64
  br label %258

258:                                              ; preds = %275, %256
  %259 = phi %"class.base::ModuleCache::Module"* [ %276, %275 ], [ %248, %256 ]
  %260 = phi %"class.base::ModuleCache::Module"** [ %274, %275 ], [ %244, %256 ]
  %261 = phi %"class.base::ModuleCache::Module"** [ %272, %275 ], [ %254, %256 ]
  %262 = phi i64 [ %271, %275 ], [ %257, %256 ]
  %263 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %261, align 8
  %264 = icmp ult %"class.base::ModuleCache::Module"* %259, %263
  br i1 %264, label %265, label %270

265:                                              ; preds = %258
  %266 = ptrtoint %"class.base::ModuleCache::Module"* %263 to i64
  %267 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %260, i64 1
  %268 = ptrtoint %"class.base::ModuleCache::Module"** %267 to i64
  %269 = bitcast %"class.base::ModuleCache::Module"** %267 to i64*
  store i64 %266, i64* %269, align 8
  br label %270

270:                                              ; preds = %265, %258
  %271 = phi i64 [ %262, %258 ], [ %268, %265 ]
  %272 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %261, i64 1
  %273 = icmp eq %"class.base::ModuleCache::Module"** %272, %219
  %274 = inttoptr i64 %271 to %"class.base::ModuleCache::Module"**
  br i1 %273, label %277, label %275

275:                                              ; preds = %270
  %276 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %274, align 8
  br label %258

277:                                              ; preds = %270
  %278 = inttoptr i64 %271 to %"class.base::ModuleCache::Module"**
  br label %279

279:                                              ; preds = %277, %253
  %280 = phi %"class.base::ModuleCache::Module"** [ %244, %253 ], [ %278, %277 ]
  %281 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %280, i64 1
  %282 = icmp eq %"class.base::ModuleCache::Module"** %281, %219
  br i1 %282, label %294, label %283

283:                                              ; preds = %279
  %284 = bitcast %"class.base::ModuleCache::Module"*** %14 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = sub i64 %285, %221
  %287 = ashr exact i64 %286, 3
  %288 = icmp eq i64 %286, 0
  br i1 %288, label %292, label %289

289:                                              ; preds = %283
  %290 = bitcast %"class.base::ModuleCache::Module"** %281 to i8*
  %291 = bitcast %"class.base::ModuleCache::Module"** %219 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %290, i8* align 8 %291, i64 %286, i1 false) #11
  br label %292

292:                                              ; preds = %289, %283
  %293 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %281, i64 %287
  store %"class.base::ModuleCache::Module"** %293, %"class.base::ModuleCache::Module"*** %14, align 8
  br label %294

294:                                              ; preds = %243, %241, %251, %279, %292
  %295 = getelementptr inbounds %"class.base::ModuleCache", %"class.base::ModuleCache"* %0, i64 0, i32 1
  %296 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %295, i64 0, i32 0, i32 0, i32 0
  %297 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %296, align 8
  %298 = getelementptr inbounds %"class.base::ModuleCache", %"class.base::ModuleCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %299 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %298, align 8
  %300 = bitcast %class.anon* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %300) #11
  %301 = getelementptr inbounds %"struct.base::identity", %"struct.base::identity"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %301) #11
  %302 = getelementptr inbounds %class.anon, %class.anon* %6, i64 0, i32 0
  store %"class.base::internal::flat_tree.19"* %9, %"class.base::internal::flat_tree.19"** %302, align 8
  %303 = bitcast %class.anon.24* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %303) #11
  %304 = getelementptr inbounds %class.anon.24, %class.anon.24* %5, i64 0, i32 0
  store %class.anon* %6, %class.anon** %304, align 8
  %305 = getelementptr inbounds %class.anon.24, %class.anon.24* %5, i64 0, i32 1
  store %"struct.base::identity"* %7, %"struct.base::identity"** %305, align 8
  %306 = icmp eq %"class.std::__1::unique_ptr"* %297, %299
  br i1 %306, label %415, label %307

307:                                              ; preds = %294
  %308 = load %"class.base::ModuleCache::Module"**, %"class.base::ModuleCache::Module"*** %13, align 8
  %309 = bitcast %"class.base::ModuleCache::Module"*** %14 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = ptrtoint %"class.base::ModuleCache::Module"** %308 to i64
  %312 = sub i64 %310, %311
  %313 = icmp eq i64 %312, 0
  %314 = inttoptr i64 %310 to %"class.base::ModuleCache::Module"**
  %315 = ashr exact i64 %312, 3
  br label %316

316:                                              ; preds = %351, %307
  %317 = phi %"class.std::__1::unique_ptr"* [ %297, %307 ], [ %352, %351 ]
  %318 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %317, i64 0, i32 0, i32 0, i32 0
  %319 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %318, align 8
  br i1 %313, label %335, label %320

320:                                              ; preds = %316, %320
  %321 = phi %"class.base::ModuleCache::Module"** [ %331, %320 ], [ %308, %316 ]
  %322 = phi i64 [ %330, %320 ], [ %315, %316 ]
  %323 = lshr i64 %322, 1
  %324 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %321, i64 %323
  %325 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %324, align 8
  %326 = icmp ult %"class.base::ModuleCache::Module"* %325, %319
  %327 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %324, i64 1
  %328 = xor i64 %323, -1
  %329 = add i64 %322, %328
  %330 = select i1 %326, i64 %329, i64 %323
  %331 = select i1 %326, %"class.base::ModuleCache::Module"** %327, %"class.base::ModuleCache::Module"** %321
  %332 = icmp eq i64 %330, 0
  br i1 %332, label %333, label %320

333:                                              ; preds = %320
  %334 = ptrtoint %"class.base::ModuleCache::Module"** %331 to i64
  br label %335

335:                                              ; preds = %333, %316
  %336 = phi i64 [ %334, %333 ], [ %311, %316 ]
  %337 = phi %"class.base::ModuleCache::Module"** [ %331, %333 ], [ %308, %316 ]
  %338 = icmp eq %"class.base::ModuleCache::Module"** %337, %314
  br i1 %338, label %345, label %339

339:                                              ; preds = %335
  %340 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %337, align 8
  %341 = icmp ult %"class.base::ModuleCache::Module"* %319, %340
  br i1 %341, label %345, label %342

342:                                              ; preds = %339
  %343 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %337, i64 1
  %344 = ptrtoint %"class.base::ModuleCache::Module"** %343 to i64
  br label %345

345:                                              ; preds = %342, %339, %335
  %346 = phi i64 [ %344, %342 ], [ %336, %335 ], [ %336, %339 ]
  %347 = inttoptr i64 %346 to %"class.base::ModuleCache::Module"**
  %348 = icmp eq %"class.base::ModuleCache::Module"** %337, %347
  %349 = select i1 %348, %"class.base::ModuleCache::Module"** %314, %"class.base::ModuleCache::Module"** %337
  %350 = icmp eq %"class.base::ModuleCache::Module"** %349, %314
  br i1 %350, label %351, label %354

351:                                              ; preds = %345
  %352 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %317, i64 1
  %353 = icmp eq %"class.std::__1::unique_ptr"* %352, %299
  br i1 %353, label %415, label %316

354:                                              ; preds = %345, %386
  %355 = phi %"class.std::__1::unique_ptr"* [ %356, %386 ], [ %299, %345 ]
  %356 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %355, i64 -1
  %357 = icmp eq %"class.std::__1::unique_ptr"* %317, %356
  br i1 %357, label %415, label %358

358:                                              ; preds = %354
  %359 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %356, i64 0, i32 0, i32 0, i32 0
  %360 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %359, align 8
  br i1 %313, label %376, label %361

361:                                              ; preds = %358, %361
  %362 = phi %"class.base::ModuleCache::Module"** [ %372, %361 ], [ %308, %358 ]
  %363 = phi i64 [ %371, %361 ], [ %315, %358 ]
  %364 = lshr i64 %363, 1
  %365 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %362, i64 %364
  %366 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %365, align 8
  %367 = icmp ult %"class.base::ModuleCache::Module"* %366, %360
  %368 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %365, i64 1
  %369 = xor i64 %364, -1
  %370 = add i64 %363, %369
  %371 = select i1 %367, i64 %370, i64 %364
  %372 = select i1 %367, %"class.base::ModuleCache::Module"** %368, %"class.base::ModuleCache::Module"** %362
  %373 = icmp eq i64 %371, 0
  br i1 %373, label %374, label %361

374:                                              ; preds = %361
  %375 = ptrtoint %"class.base::ModuleCache::Module"** %372 to i64
  br label %376

376:                                              ; preds = %374, %358
  %377 = phi i64 [ %375, %374 ], [ %311, %358 ]
  %378 = phi %"class.base::ModuleCache::Module"** [ %372, %374 ], [ %308, %358 ]
  %379 = icmp eq %"class.base::ModuleCache::Module"** %378, %314
  br i1 %379, label %386, label %380

380:                                              ; preds = %376
  %381 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %378, align 8
  %382 = icmp ult %"class.base::ModuleCache::Module"* %360, %381
  br i1 %382, label %386, label %383

383:                                              ; preds = %380
  %384 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %378, i64 1
  %385 = ptrtoint %"class.base::ModuleCache::Module"** %384 to i64
  br label %386

386:                                              ; preds = %383, %380, %376
  %387 = phi i64 [ %385, %383 ], [ %377, %376 ], [ %377, %380 ]
  %388 = inttoptr i64 %387 to %"class.base::ModuleCache::Module"**
  %389 = icmp eq %"class.base::ModuleCache::Module"** %378, %388
  %390 = select i1 %389, %"class.base::ModuleCache::Module"** %314, %"class.base::ModuleCache::Module"** %378
  %391 = icmp eq %"class.base::ModuleCache::Module"** %390, %314
  br i1 %391, label %392, label %354

392:                                              ; preds = %386
  %393 = ptrtoint %"class.std::__1::unique_ptr"* %317 to i64
  %394 = ptrtoint %"class.std::__1::unique_ptr"* %356 to i64
  %395 = sub i64 %394, %393
  %396 = ashr exact i64 %395, 3
  %397 = add nsw i64 %396, 1
  %398 = icmp sgt i64 %395, 16
  br i1 %398, label %399, label %410

399:                                              ; preds = %392
  %400 = icmp slt i64 %397, 1152921504606846975
  %401 = select i1 %400, i64 %397, i64 1152921504606846975
  br label %402

402:                                              ; preds = %407, %399
  %403 = phi i64 [ %408, %407 ], [ %401, %399 ]
  %404 = shl i64 %403, 3
  %405 = call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %404, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #11
  %406 = icmp eq i8* %405, null
  br i1 %406, label %407, label %412

407:                                              ; preds = %402
  %408 = lshr i64 %403, 1
  %409 = icmp eq i64 %408, 0
  br i1 %409, label %410, label %402

410:                                              ; preds = %407, %392
  %411 = call fastcc %"class.std::__1::unique_ptr"* @"_ZNSt3__118__stable_partitionIRZN4base8internal23ProjectedUnaryPredicateIZNS1_11ModuleCache22UpdateNonNativeModulesERKNS_6vectorIPKNS4_6ModuleENS_9allocatorIS8_EEEENS5_INS_10unique_ptrIS7_NS_14default_deleteIS7_EEEENS9_ISH_EEEEE3$_0NS1_8identityEEEDaRT_RT0_EUlTyOSM_E_NS_11__wrap_iterIPSH_EElNS_4pairISU_lEEEESO_SO_SO_SM_T1_T2_NS_26bidirectional_iterator_tagE"(%"class.std::__1::unique_ptr"* %317, %"class.std::__1::unique_ptr"* %356, %class.anon.24* nonnull dereferenceable(16) %5, i64 %397, %"class.std::__1::unique_ptr"* null, i64 0) #11
  br label %415

412:                                              ; preds = %402
  %413 = bitcast i8* %405 to %"class.std::__1::unique_ptr"*
  %414 = call fastcc %"class.std::__1::unique_ptr"* @"_ZNSt3__118__stable_partitionIRZN4base8internal23ProjectedUnaryPredicateIZNS1_11ModuleCache22UpdateNonNativeModulesERKNS_6vectorIPKNS4_6ModuleENS_9allocatorIS8_EEEENS5_INS_10unique_ptrIS7_NS_14default_deleteIS7_EEEENS9_ISH_EEEEE3$_0NS1_8identityEEEDaRT_RT0_EUlTyOSM_E_NS_11__wrap_iterIPSH_EElNS_4pairISU_lEEEESO_SO_SO_SM_T1_T2_NS_26bidirectional_iterator_tagE"(%"class.std::__1::unique_ptr"* %317, %"class.std::__1::unique_ptr"* %356, %class.anon.24* nonnull dereferenceable(16) %5, i64 %397, %"class.std::__1::unique_ptr"* nonnull %413, i64 %403) #11
  call void @_ZdlPv(i8* nonnull %405) #12
  br label %415

415:                                              ; preds = %351, %354, %294, %410, %412
  %416 = phi %"class.std::__1::unique_ptr"* [ %414, %412 ], [ %297, %294 ], [ %411, %410 ], [ %317, %354 ], [ %299, %351 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %303) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %300) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %301) #11
  %417 = getelementptr inbounds %"class.base::ModuleCache", %"class.base::ModuleCache"* %0, i64 0, i32 2
  %418 = getelementptr inbounds %"class.base::ModuleCache", %"class.base::ModuleCache"* %0, i64 0, i32 2, i32 0, i32 1
  %419 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %418, align 8
  %420 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %298, align 8
  %421 = call %"class.std::__1::unique_ptr"* @_ZNSt3__16vectorINS_10unique_ptrIKN4base11ModuleCache6ModuleENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE6insertINS_13move_iteratorINS_11__wrap_iterIPS8_EEEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS8_NS_15iterator_traitsISJ_E9referenceEEE5valueESG_E4typeENSE_IPKS8_EESJ_SJ_(%"class.std::__1::vector"* %417, %"class.std::__1::unique_ptr"* %419, %"class.std::__1::unique_ptr"* %416, %"class.std::__1::unique_ptr"* %420)
  %422 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %298, align 8
  %423 = icmp eq %"class.std::__1::unique_ptr"* %416, %422
  br i1 %423, label %438, label %424

424:                                              ; preds = %415, %435
  %425 = phi %"class.std::__1::unique_ptr"* [ %426, %435 ], [ %422, %415 ]
  %426 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %425, i64 -1
  %427 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %426, i64 0, i32 0, i32 0, i32 0
  %428 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %427, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %427, align 8
  %429 = icmp eq %"class.base::ModuleCache::Module"* %428, null
  br i1 %429, label %435, label %430

430:                                              ; preds = %424
  %431 = bitcast %"class.base::ModuleCache::Module"* %428 to void (%"class.base::ModuleCache::Module"*)***
  %432 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %431, align 8
  %433 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %432, i64 1
  %434 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %433, align 8
  call void %434(%"class.base::ModuleCache::Module"* nonnull %428) #11
  br label %435

435:                                              ; preds = %430, %424
  %436 = icmp eq %"class.std::__1::unique_ptr"* %426, %416
  br i1 %436, label %437, label %424

437:                                              ; preds = %435
  store %"class.std::__1::unique_ptr"* %416, %"class.std::__1::unique_ptr"** %298, align 8
  br label %438

438:                                              ; preds = %415, %437
  %439 = phi %"class.std::__1::unique_ptr"* [ %422, %415 ], [ %416, %437 ]
  %440 = ptrtoint %"class.std::__1::unique_ptr"* %439 to i64
  %441 = bitcast %"class.std::__1::unique_ptr"** %298 to i64*
  %442 = bitcast %"class.base::internal::flat_tree"* %295 to i64*
  %443 = load i64, i64* %442, align 8
  %444 = sub i64 %440, %443
  %445 = ashr exact i64 %444, 3
  %446 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %447 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %446, align 8
  %448 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %449 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %448, align 8
  call void @_ZN4base8internal9flat_treeINSt3__110unique_ptrIKNS_11ModuleCache6ModuleENS2_14default_deleteIS6_EEEENS_8identityENS4_23ModuleAndAddressCompareENS2_6vectorIS9_NS2_9allocatorIS9_EEEEE6insertINS2_13move_iteratorINS2_11__wrap_iterIPS9_EEEEEEvT_SN_(%"class.base::internal::flat_tree"* %295, %"class.std::__1::unique_ptr"* %447, %"class.std::__1::unique_ptr"* %449)
  %450 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %450) #11
  %451 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %451, align 8
  %452 = bitcast %"class.std::__1::unique_ptr"** %448 to i64*
  %453 = load i64, i64* %452, align 8
  %454 = bitcast %"class.std::__1::vector"* %2 to i64*
  %455 = load i64, i64* %454, align 8
  %456 = sub i64 %453, %455
  %457 = ashr exact i64 %456, 3
  %458 = add nsw i64 %457, %445
  %459 = load i64, i64* %441, align 8
  %460 = load i64, i64* %442, align 8
  %461 = sub i64 %459, %460
  %462 = ashr exact i64 %461, 3
  %463 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %463)
  %464 = icmp eq i64 %458, %462
  br i1 %464, label %465, label %466

465:                                              ; preds = %438
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %463)
  store i8* null, i8** %451, align 8
  br label %475

466:                                              ; preds = %438
  %467 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %458) #11
  %468 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %462) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %8, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str, i64 0, i64 0), i8* %467, i8* %468) #11
  %469 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  %470 = load i8*, i8** %469, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %463)
  store i8* %470, i8** %451, align 8
  %471 = icmp eq i8* %470, null
  br i1 %471, label %475, label %472

472:                                              ; preds = %466
  %473 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %473) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %10) #11
  %474 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %473) #11
  br label %475

475:                                              ; preds = %465, %466, %472
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %450) #11
  %476 = load %"class.base::ModuleCache::Module"**, %"class.base::ModuleCache::Module"*** %13, align 8
  %477 = icmp eq %"class.base::ModuleCache::Module"** %476, null
  br i1 %477, label %482, label %478

478:                                              ; preds = %475
  %479 = ptrtoint %"class.base::ModuleCache::Module"** %476 to i64
  %480 = bitcast %"class.base::ModuleCache::Module"*** %14 to i64*
  store i64 %479, i64* %480, align 8
  %481 = bitcast %"class.base::ModuleCache::Module"** %476 to i8*
  call void @_ZdlPv(i8* %481) #12
  br label %482

482:                                              ; preds = %475, %478
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::unique_ptr"* @_ZNSt3__16vectorINS_10unique_ptrIKN4base11ModuleCache6ModuleENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE6insertINS_13move_iteratorINS_11__wrap_iterIPS8_EEEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS8_NS_15iterator_traitsISJ_E9referenceEEE5valueESG_E4typeENSE_IPKS8_EESJ_SJ_(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.std::__1::unique_ptr"* %2 to i64
  %6 = ptrtoint %"class.std::__1::unique_ptr"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %8 = ptrtoint %"class.std::__1::unique_ptr"* %3 to i64
  %9 = sub i64 %8, %5
  %10 = ashr exact i64 %9, 3
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %568

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.std::__1::unique_ptr"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %17 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %18 = ptrtoint %"class.std::__1::unique_ptr"* %17 to i64
  %19 = sub i64 %15, %18
  %20 = ashr exact i64 %19, 3
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %"class.std::__1::unique_ptr"** %16 to i64*
  br i1 %21, label %252, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %6
  %25 = ashr exact i64 %24, 3
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %116

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 %25
  %29 = icmp eq %"class.std::__1::unique_ptr"* %28, %3
  br i1 %29, label %111, label %30

30:                                               ; preds = %27
  %31 = xor i64 %25, -1
  %32 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 %31, i32 0, i32 0, i32 0
  %33 = ptrtoint %"class.base::ModuleCache::Module"** %32 to i64
  %34 = sub i64 %33, %5
  %35 = lshr i64 %34, 3
  %36 = add nuw nsw i64 %35, 1
  %37 = and i64 %36, 7
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %51, label %39

39:                                               ; preds = %30, %39
  %40 = phi %"class.std::__1::unique_ptr"* [ %48, %39 ], [ %17, %30 ]
  %41 = phi %"class.std::__1::unique_ptr"* [ %47, %39 ], [ %28, %30 ]
  %42 = phi i64 [ %49, %39 ], [ %37, %30 ]
  %43 = bitcast %"class.std::__1::unique_ptr"* %40 to i64*
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %41, i64 0, i32 0, i32 0, i32 0
  %45 = bitcast %"class.std::__1::unique_ptr"* %41 to i64*
  %46 = load i64, i64* %45, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %44, align 8
  store i64 %46, i64* %43, align 8
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %41, i64 1
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %40, i64 1
  %49 = add i64 %42, -1
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %39, !llvm.loop !13

51:                                               ; preds = %39, %30
  %52 = phi %"class.std::__1::unique_ptr"* [ undef, %30 ], [ %48, %39 ]
  %53 = phi %"class.std::__1::unique_ptr"* [ %17, %30 ], [ %48, %39 ]
  %54 = phi %"class.std::__1::unique_ptr"* [ %28, %30 ], [ %47, %39 ]
  %55 = icmp ult i64 %34, 56
  br i1 %55, label %108, label %56

56:                                               ; preds = %51, %56
  %57 = phi %"class.std::__1::unique_ptr"* [ %106, %56 ], [ %53, %51 ]
  %58 = phi %"class.std::__1::unique_ptr"* [ %105, %56 ], [ %54, %51 ]
  %59 = bitcast %"class.std::__1::unique_ptr"* %57 to i64*
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %58, i64 0, i32 0, i32 0, i32 0
  %61 = bitcast %"class.std::__1::unique_ptr"* %58 to i64*
  %62 = load i64, i64* %61, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %60, align 8
  store i64 %62, i64* %59, align 8
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %58, i64 1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %57, i64 1
  %65 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %63, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  %68 = load i64, i64* %67, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %66, align 8
  store i64 %68, i64* %65, align 8
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %58, i64 2
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %57, i64 2
  %71 = bitcast %"class.std::__1::unique_ptr"* %70 to i64*
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %69, i64 0, i32 0, i32 0, i32 0
  %73 = bitcast %"class.std::__1::unique_ptr"* %69 to i64*
  %74 = load i64, i64* %73, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %72, align 8
  store i64 %74, i64* %71, align 8
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %58, i64 3
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %57, i64 3
  %77 = bitcast %"class.std::__1::unique_ptr"* %76 to i64*
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %75, i64 0, i32 0, i32 0, i32 0
  %79 = bitcast %"class.std::__1::unique_ptr"* %75 to i64*
  %80 = load i64, i64* %79, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %78, align 8
  store i64 %80, i64* %77, align 8
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %58, i64 4
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %57, i64 4
  %83 = bitcast %"class.std::__1::unique_ptr"* %82 to i64*
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %81, i64 0, i32 0, i32 0, i32 0
  %85 = bitcast %"class.std::__1::unique_ptr"* %81 to i64*
  %86 = load i64, i64* %85, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %84, align 8
  store i64 %86, i64* %83, align 8
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %58, i64 5
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %57, i64 5
  %89 = bitcast %"class.std::__1::unique_ptr"* %88 to i64*
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 0, i32 0, i32 0, i32 0
  %91 = bitcast %"class.std::__1::unique_ptr"* %87 to i64*
  %92 = load i64, i64* %91, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %90, align 8
  store i64 %92, i64* %89, align 8
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %58, i64 6
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %57, i64 6
  %95 = bitcast %"class.std::__1::unique_ptr"* %94 to i64*
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %93, i64 0, i32 0, i32 0, i32 0
  %97 = bitcast %"class.std::__1::unique_ptr"* %93 to i64*
  %98 = load i64, i64* %97, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %96, align 8
  store i64 %98, i64* %95, align 8
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %58, i64 7
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %57, i64 7
  %101 = bitcast %"class.std::__1::unique_ptr"* %100 to i64*
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %99, i64 0, i32 0, i32 0, i32 0
  %103 = bitcast %"class.std::__1::unique_ptr"* %99 to i64*
  %104 = load i64, i64* %103, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %102, align 8
  store i64 %104, i64* %101, align 8
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %58, i64 8
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %57, i64 8
  %107 = icmp eq %"class.std::__1::unique_ptr"* %105, %3
  br i1 %107, label %108, label %56

108:                                              ; preds = %56, %51
  %109 = phi %"class.std::__1::unique_ptr"* [ %52, %51 ], [ %106, %56 ]
  %110 = ptrtoint %"class.std::__1::unique_ptr"* %109 to i64
  br label %111

111:                                              ; preds = %108, %27
  %112 = phi i64 [ %18, %27 ], [ %110, %108 ]
  store i64 %112, i64* %22, align 8
  %113 = icmp sgt i64 %24, 0
  br i1 %113, label %114, label %568

114:                                              ; preds = %111
  %115 = inttoptr i64 %112 to %"class.std::__1::unique_ptr"*
  br label %116

116:                                              ; preds = %114, %23
  %117 = phi i64 [ %112, %114 ], [ %18, %23 ]
  %118 = phi %"class.std::__1::unique_ptr"* [ %115, %114 ], [ %17, %23 ]
  %119 = phi %"class.std::__1::unique_ptr"* [ %28, %114 ], [ %3, %23 ]
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 %10
  %121 = ptrtoint %"class.std::__1::unique_ptr"* %120 to i64
  %122 = sub i64 %117, %121
  %123 = ashr exact i64 %122, 3
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 %123
  %125 = icmp ult %"class.std::__1::unique_ptr"* %124, %17
  br i1 %125, label %126, label %157

126:                                              ; preds = %116
  %127 = sub nsw i64 0, %123
  %128 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %17, i64 %127, i32 0, i32 0, i32 0
  %129 = bitcast %"class.base::ModuleCache::Module"** %128 to i8*
  %130 = xor i64 %6, -1
  %131 = getelementptr i8, i8* %129, i64 %130
  %132 = ptrtoint i8* %131 to i64
  %133 = lshr i64 %132, 3
  %134 = add nuw nsw i64 %133, 1
  %135 = and i64 %134, 7
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %149, label %137

137:                                              ; preds = %126, %137
  %138 = phi %"class.std::__1::unique_ptr"* [ %146, %137 ], [ %118, %126 ]
  %139 = phi %"class.std::__1::unique_ptr"* [ %145, %137 ], [ %124, %126 ]
  %140 = phi i64 [ %147, %137 ], [ %135, %126 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %139, i64 0, i32 0, i32 0, i32 0
  %142 = bitcast %"class.std::__1::unique_ptr"* %139 to i64*
  %143 = load i64, i64* %142, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %141, align 8
  %144 = bitcast %"class.std::__1::unique_ptr"* %138 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %139, i64 1
  %146 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %138, i64 1
  %147 = add i64 %140, -1
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %149, label %137, !llvm.loop !14

149:                                              ; preds = %137, %126
  %150 = phi %"class.std::__1::unique_ptr"* [ %118, %126 ], [ %146, %137 ]
  %151 = phi %"class.std::__1::unique_ptr"* [ %124, %126 ], [ %145, %137 ]
  %152 = phi %"class.std::__1::unique_ptr"* [ undef, %126 ], [ %146, %137 ]
  %153 = icmp ult i8* %131, inttoptr (i64 56 to i8*)
  br i1 %153, label %154, label %179

154:                                              ; preds = %179, %149
  %155 = phi %"class.std::__1::unique_ptr"* [ %152, %149 ], [ %229, %179 ]
  %156 = ptrtoint %"class.std::__1::unique_ptr"* %155 to i64
  br label %157

157:                                              ; preds = %154, %116
  %158 = phi i64 [ %156, %154 ], [ %117, %116 ]
  store i64 %158, i64* %22, align 8
  %159 = icmp eq i64 %122, 0
  br i1 %159, label %231, label %160

160:                                              ; preds = %157, %177
  %161 = phi %"class.std::__1::unique_ptr"* [ %164, %177 ], [ %118, %157 ]
  %162 = phi %"class.std::__1::unique_ptr"* [ %163, %177 ], [ %124, %157 ]
  %163 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %162, i64 -1
  %164 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %161, i64 -1
  %165 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %163, i64 0, i32 0, i32 0, i32 0
  %166 = bitcast %"class.std::__1::unique_ptr"* %163 to i64*
  %167 = load i64, i64* %166, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %165, align 8
  %168 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %164, i64 0, i32 0, i32 0, i32 0
  %169 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %168, align 8
  %170 = bitcast %"class.std::__1::unique_ptr"* %164 to i64*
  store i64 %167, i64* %170, align 8
  %171 = icmp eq %"class.base::ModuleCache::Module"* %169, null
  br i1 %171, label %177, label %172

172:                                              ; preds = %160
  %173 = bitcast %"class.base::ModuleCache::Module"* %169 to void (%"class.base::ModuleCache::Module"*)***
  %174 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %173, align 8
  %175 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %174, i64 1
  %176 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %175, align 8
  tail call void %176(%"class.base::ModuleCache::Module"* nonnull %169) #11
  br label %177

177:                                              ; preds = %172, %160
  %178 = icmp eq %"class.std::__1::unique_ptr"* %163, %1
  br i1 %178, label %231, label %160

179:                                              ; preds = %149, %179
  %180 = phi %"class.std::__1::unique_ptr"* [ %229, %179 ], [ %150, %149 ]
  %181 = phi %"class.std::__1::unique_ptr"* [ %228, %179 ], [ %151, %149 ]
  %182 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %181, i64 0, i32 0, i32 0, i32 0
  %183 = bitcast %"class.std::__1::unique_ptr"* %181 to i64*
  %184 = load i64, i64* %183, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %182, align 8
  %185 = bitcast %"class.std::__1::unique_ptr"* %180 to i64*
  store i64 %184, i64* %185, align 8
  %186 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %181, i64 1
  %187 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %180, i64 1
  %188 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %186, i64 0, i32 0, i32 0, i32 0
  %189 = bitcast %"class.std::__1::unique_ptr"* %186 to i64*
  %190 = load i64, i64* %189, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %188, align 8
  %191 = bitcast %"class.std::__1::unique_ptr"* %187 to i64*
  store i64 %190, i64* %191, align 8
  %192 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %181, i64 2
  %193 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %180, i64 2
  %194 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %192, i64 0, i32 0, i32 0, i32 0
  %195 = bitcast %"class.std::__1::unique_ptr"* %192 to i64*
  %196 = load i64, i64* %195, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %194, align 8
  %197 = bitcast %"class.std::__1::unique_ptr"* %193 to i64*
  store i64 %196, i64* %197, align 8
  %198 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %181, i64 3
  %199 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %180, i64 3
  %200 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %198, i64 0, i32 0, i32 0, i32 0
  %201 = bitcast %"class.std::__1::unique_ptr"* %198 to i64*
  %202 = load i64, i64* %201, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %200, align 8
  %203 = bitcast %"class.std::__1::unique_ptr"* %199 to i64*
  store i64 %202, i64* %203, align 8
  %204 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %181, i64 4
  %205 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %180, i64 4
  %206 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %204, i64 0, i32 0, i32 0, i32 0
  %207 = bitcast %"class.std::__1::unique_ptr"* %204 to i64*
  %208 = load i64, i64* %207, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %206, align 8
  %209 = bitcast %"class.std::__1::unique_ptr"* %205 to i64*
  store i64 %208, i64* %209, align 8
  %210 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %181, i64 5
  %211 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %180, i64 5
  %212 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %210, i64 0, i32 0, i32 0, i32 0
  %213 = bitcast %"class.std::__1::unique_ptr"* %210 to i64*
  %214 = load i64, i64* %213, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %212, align 8
  %215 = bitcast %"class.std::__1::unique_ptr"* %211 to i64*
  store i64 %214, i64* %215, align 8
  %216 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %181, i64 6
  %217 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %180, i64 6
  %218 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %216, i64 0, i32 0, i32 0, i32 0
  %219 = bitcast %"class.std::__1::unique_ptr"* %216 to i64*
  %220 = load i64, i64* %219, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %218, align 8
  %221 = bitcast %"class.std::__1::unique_ptr"* %217 to i64*
  store i64 %220, i64* %221, align 8
  %222 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %181, i64 7
  %223 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %180, i64 7
  %224 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %222, i64 0, i32 0, i32 0, i32 0
  %225 = bitcast %"class.std::__1::unique_ptr"* %222 to i64*
  %226 = load i64, i64* %225, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %224, align 8
  %227 = bitcast %"class.std::__1::unique_ptr"* %223 to i64*
  store i64 %226, i64* %227, align 8
  %228 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %181, i64 8
  %229 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %180, i64 8
  %230 = icmp ult %"class.std::__1::unique_ptr"* %228, %17
  br i1 %230, label %179, label %154

231:                                              ; preds = %177, %157
  %232 = icmp eq %"class.std::__1::unique_ptr"* %119, %2
  br i1 %232, label %568, label %233

233:                                              ; preds = %231, %248
  %234 = phi %"class.std::__1::unique_ptr"* [ %250, %248 ], [ %1, %231 ]
  %235 = phi %"class.std::__1::unique_ptr"* [ %249, %248 ], [ %2, %231 ]
  %236 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %235, i64 0, i32 0, i32 0, i32 0
  %237 = bitcast %"class.std::__1::unique_ptr"* %235 to i64*
  %238 = load i64, i64* %237, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %236, align 8
  %239 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %234, i64 0, i32 0, i32 0, i32 0
  %240 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %239, align 8
  %241 = bitcast %"class.std::__1::unique_ptr"* %234 to i64*
  store i64 %238, i64* %241, align 8
  %242 = icmp eq %"class.base::ModuleCache::Module"* %240, null
  br i1 %242, label %248, label %243

243:                                              ; preds = %233
  %244 = bitcast %"class.base::ModuleCache::Module"* %240 to void (%"class.base::ModuleCache::Module"*)***
  %245 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %244, align 8
  %246 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %245, i64 1
  %247 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %246, align 8
  tail call void %247(%"class.base::ModuleCache::Module"* nonnull %240) #11
  br label %248

248:                                              ; preds = %243, %233
  %249 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %235, i64 1
  %250 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %234, i64 1
  %251 = icmp eq %"class.std::__1::unique_ptr"* %249, %119
  br i1 %251, label %568, label %233

252:                                              ; preds = %12
  %253 = bitcast %"class.std::__1::vector"* %0 to i64*
  %254 = load i64, i64* %253, align 8
  %255 = sub i64 %18, %254
  %256 = ashr exact i64 %255, 3
  %257 = add nsw i64 %256, %10
  %258 = icmp ugt i64 %257, 2305843009213693951
  br i1 %258, label %259, label %261

259:                                              ; preds = %252
  %260 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %260) #13
  unreachable

261:                                              ; preds = %252
  %262 = sub i64 %15, %254
  %263 = ashr exact i64 %262, 3
  %264 = icmp ult i64 %263, 1152921504606846975
  br i1 %264, label %268, label %265

265:                                              ; preds = %261
  %266 = sub i64 %6, %254
  %267 = ashr exact i64 %266, 3
  br label %278

268:                                              ; preds = %261
  %269 = ashr exact i64 %262, 2
  %270 = icmp ult i64 %269, %257
  %271 = select i1 %270, i64 %257, i64 %269
  %272 = sub i64 %6, %254
  %273 = ashr exact i64 %272, 3
  %274 = icmp eq i64 %271, 0
  br i1 %274, label %284, label %275

275:                                              ; preds = %268
  %276 = icmp ugt i64 %271, 2305843009213693951
  br i1 %276, label %277, label %278

277:                                              ; preds = %275
  tail call void @abort() #13
  unreachable

278:                                              ; preds = %265, %275
  %279 = phi i64 [ 2305843009213693951, %265 ], [ %271, %275 ]
  %280 = phi i64 [ %267, %265 ], [ %273, %275 ]
  %281 = shl i64 %279, 3
  %282 = tail call i8* @_Znwm(i64 %281) #12
  %283 = bitcast i8* %282 to %"class.std::__1::unique_ptr"*
  br label %284

284:                                              ; preds = %278, %268
  %285 = phi i64 [ %280, %278 ], [ %273, %268 ]
  %286 = phi i64 [ %279, %278 ], [ 0, %268 ]
  %287 = phi %"class.std::__1::unique_ptr"* [ %283, %278 ], [ null, %268 ]
  %288 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %287, i64 %285
  %289 = ptrtoint %"class.std::__1::unique_ptr"* %288 to i64
  %290 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %287, i64 %286
  %291 = ptrtoint %"class.std::__1::unique_ptr"* %290 to i64
  %292 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %288, i64 %10
  %293 = add i64 %9, -8
  %294 = lshr i64 %293, 3
  %295 = add nuw nsw i64 %294, 1
  %296 = and i64 %295, 7
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %314, label %298

298:                                              ; preds = %284, %298
  %299 = phi %"class.std::__1::unique_ptr"* [ %307, %298 ], [ %288, %284 ]
  %300 = phi i64 [ %308, %298 ], [ %289, %284 ]
  %301 = phi %"class.std::__1::unique_ptr"* [ %309, %298 ], [ %2, %284 ]
  %302 = phi i64 [ %310, %298 ], [ %296, %284 ]
  %303 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %301, i64 0, i32 0, i32 0, i32 0
  %304 = bitcast %"class.std::__1::unique_ptr"* %301 to i64*
  %305 = load i64, i64* %304, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %303, align 8
  %306 = inttoptr i64 %300 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %299, i64 1
  %308 = ptrtoint %"class.std::__1::unique_ptr"* %307 to i64
  %309 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %301, i64 1
  %310 = add i64 %302, -1
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %298, !llvm.loop !15

312:                                              ; preds = %298
  %313 = ptrtoint %"class.std::__1::unique_ptr"* %307 to i64
  br label %314

314:                                              ; preds = %284, %312
  %315 = phi %"class.std::__1::unique_ptr"* [ %288, %284 ], [ %307, %312 ]
  %316 = phi i64 [ %289, %284 ], [ %313, %312 ]
  %317 = phi %"class.std::__1::unique_ptr"* [ %2, %284 ], [ %309, %312 ]
  %318 = icmp ult i64 %293, 56
  br i1 %318, label %373, label %319

319:                                              ; preds = %314, %319
  %320 = phi %"class.std::__1::unique_ptr"* [ %369, %319 ], [ %315, %314 ]
  %321 = phi i64 [ %370, %319 ], [ %316, %314 ]
  %322 = phi %"class.std::__1::unique_ptr"* [ %371, %319 ], [ %317, %314 ]
  %323 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %322, i64 0, i32 0, i32 0, i32 0
  %324 = bitcast %"class.std::__1::unique_ptr"* %322 to i64*
  %325 = load i64, i64* %324, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %323, align 8
  %326 = inttoptr i64 %321 to i64*
  store i64 %325, i64* %326, align 8
  %327 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %320, i64 1
  %328 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %322, i64 1
  %329 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %328, i64 0, i32 0, i32 0, i32 0
  %330 = bitcast %"class.std::__1::unique_ptr"* %328 to i64*
  %331 = load i64, i64* %330, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %329, align 8
  %332 = bitcast %"class.std::__1::unique_ptr"* %327 to i64*
  store i64 %331, i64* %332, align 8
  %333 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %320, i64 2
  %334 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %322, i64 2
  %335 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %334, i64 0, i32 0, i32 0, i32 0
  %336 = bitcast %"class.std::__1::unique_ptr"* %334 to i64*
  %337 = load i64, i64* %336, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %335, align 8
  %338 = bitcast %"class.std::__1::unique_ptr"* %333 to i64*
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %320, i64 3
  %340 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %322, i64 3
  %341 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %340, i64 0, i32 0, i32 0, i32 0
  %342 = bitcast %"class.std::__1::unique_ptr"* %340 to i64*
  %343 = load i64, i64* %342, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %341, align 8
  %344 = bitcast %"class.std::__1::unique_ptr"* %339 to i64*
  store i64 %343, i64* %344, align 8
  %345 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %320, i64 4
  %346 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %322, i64 4
  %347 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %346, i64 0, i32 0, i32 0, i32 0
  %348 = bitcast %"class.std::__1::unique_ptr"* %346 to i64*
  %349 = load i64, i64* %348, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %347, align 8
  %350 = bitcast %"class.std::__1::unique_ptr"* %345 to i64*
  store i64 %349, i64* %350, align 8
  %351 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %320, i64 5
  %352 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %322, i64 5
  %353 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %352, i64 0, i32 0, i32 0, i32 0
  %354 = bitcast %"class.std::__1::unique_ptr"* %352 to i64*
  %355 = load i64, i64* %354, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %353, align 8
  %356 = bitcast %"class.std::__1::unique_ptr"* %351 to i64*
  store i64 %355, i64* %356, align 8
  %357 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %320, i64 6
  %358 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %322, i64 6
  %359 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %358, i64 0, i32 0, i32 0, i32 0
  %360 = bitcast %"class.std::__1::unique_ptr"* %358 to i64*
  %361 = load i64, i64* %360, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %359, align 8
  %362 = bitcast %"class.std::__1::unique_ptr"* %357 to i64*
  store i64 %361, i64* %362, align 8
  %363 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %320, i64 7
  %364 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %322, i64 7
  %365 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %364, i64 0, i32 0, i32 0, i32 0
  %366 = bitcast %"class.std::__1::unique_ptr"* %364 to i64*
  %367 = load i64, i64* %366, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %365, align 8
  %368 = bitcast %"class.std::__1::unique_ptr"* %363 to i64*
  store i64 %367, i64* %368, align 8
  %369 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %320, i64 8
  %370 = ptrtoint %"class.std::__1::unique_ptr"* %369 to i64
  %371 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %322, i64 8
  %372 = icmp eq %"class.std::__1::unique_ptr"* %292, %369
  br i1 %372, label %373, label %319

373:                                              ; preds = %319, %314
  %374 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %375 = icmp eq %"class.std::__1::unique_ptr"* %374, %1
  br i1 %375, label %457, label %376

376:                                              ; preds = %373
  %377 = ptrtoint %"class.std::__1::unique_ptr"* %374 to i64
  %378 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 -1, i32 0, i32 0, i32 0
  %379 = ptrtoint %"class.base::ModuleCache::Module"** %378 to i64
  %380 = sub i64 %379, %377
  %381 = lshr i64 %380, 3
  %382 = add nuw nsw i64 %381, 1
  %383 = and i64 %382, 7
  %384 = icmp eq i64 %383, 0
  br i1 %384, label %397, label %385

385:                                              ; preds = %376, %385
  %386 = phi %"class.std::__1::unique_ptr"* [ %389, %385 ], [ %288, %376 ]
  %387 = phi %"class.std::__1::unique_ptr"* [ %390, %385 ], [ %1, %376 ]
  %388 = phi i64 [ %395, %385 ], [ %383, %376 ]
  %389 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %386, i64 -1
  %390 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %387, i64 -1
  %391 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %390, i64 0, i32 0, i32 0, i32 0
  %392 = bitcast %"class.std::__1::unique_ptr"* %390 to i64*
  %393 = load i64, i64* %392, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %391, align 8
  %394 = bitcast %"class.std::__1::unique_ptr"* %389 to i64*
  store i64 %393, i64* %394, align 8
  %395 = add i64 %388, -1
  %396 = icmp eq i64 %395, 0
  br i1 %396, label %397, label %385, !llvm.loop !16

397:                                              ; preds = %385, %376
  %398 = phi %"class.std::__1::unique_ptr"* [ undef, %376 ], [ %389, %385 ]
  %399 = phi %"class.std::__1::unique_ptr"* [ %288, %376 ], [ %389, %385 ]
  %400 = phi %"class.std::__1::unique_ptr"* [ %1, %376 ], [ %390, %385 ]
  %401 = icmp ult i64 %380, 56
  br i1 %401, label %454, label %402

402:                                              ; preds = %397, %402
  %403 = phi %"class.std::__1::unique_ptr"* [ %447, %402 ], [ %399, %397 ]
  %404 = phi %"class.std::__1::unique_ptr"* [ %448, %402 ], [ %400, %397 ]
  %405 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %403, i64 -1
  %406 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %404, i64 -1
  %407 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %406, i64 0, i32 0, i32 0, i32 0
  %408 = bitcast %"class.std::__1::unique_ptr"* %406 to i64*
  %409 = load i64, i64* %408, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %407, align 8
  %410 = bitcast %"class.std::__1::unique_ptr"* %405 to i64*
  store i64 %409, i64* %410, align 8
  %411 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %403, i64 -2
  %412 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %404, i64 -2
  %413 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %412, i64 0, i32 0, i32 0, i32 0
  %414 = bitcast %"class.std::__1::unique_ptr"* %412 to i64*
  %415 = load i64, i64* %414, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %413, align 8
  %416 = bitcast %"class.std::__1::unique_ptr"* %411 to i64*
  store i64 %415, i64* %416, align 8
  %417 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %403, i64 -3
  %418 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %404, i64 -3
  %419 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %418, i64 0, i32 0, i32 0, i32 0
  %420 = bitcast %"class.std::__1::unique_ptr"* %418 to i64*
  %421 = load i64, i64* %420, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %419, align 8
  %422 = bitcast %"class.std::__1::unique_ptr"* %417 to i64*
  store i64 %421, i64* %422, align 8
  %423 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %403, i64 -4
  %424 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %404, i64 -4
  %425 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %424, i64 0, i32 0, i32 0, i32 0
  %426 = bitcast %"class.std::__1::unique_ptr"* %424 to i64*
  %427 = load i64, i64* %426, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %425, align 8
  %428 = bitcast %"class.std::__1::unique_ptr"* %423 to i64*
  store i64 %427, i64* %428, align 8
  %429 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %403, i64 -5
  %430 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %404, i64 -5
  %431 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %430, i64 0, i32 0, i32 0, i32 0
  %432 = bitcast %"class.std::__1::unique_ptr"* %430 to i64*
  %433 = load i64, i64* %432, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %431, align 8
  %434 = bitcast %"class.std::__1::unique_ptr"* %429 to i64*
  store i64 %433, i64* %434, align 8
  %435 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %403, i64 -6
  %436 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %404, i64 -6
  %437 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %436, i64 0, i32 0, i32 0, i32 0
  %438 = bitcast %"class.std::__1::unique_ptr"* %436 to i64*
  %439 = load i64, i64* %438, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %437, align 8
  %440 = bitcast %"class.std::__1::unique_ptr"* %435 to i64*
  store i64 %439, i64* %440, align 8
  %441 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %403, i64 -7
  %442 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %404, i64 -7
  %443 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %442, i64 0, i32 0, i32 0, i32 0
  %444 = bitcast %"class.std::__1::unique_ptr"* %442 to i64*
  %445 = load i64, i64* %444, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %443, align 8
  %446 = bitcast %"class.std::__1::unique_ptr"* %441 to i64*
  store i64 %445, i64* %446, align 8
  %447 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %403, i64 -8
  %448 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %404, i64 -8
  %449 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %448, i64 0, i32 0, i32 0, i32 0
  %450 = bitcast %"class.std::__1::unique_ptr"* %448 to i64*
  %451 = load i64, i64* %450, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %449, align 8
  %452 = bitcast %"class.std::__1::unique_ptr"* %447 to i64*
  store i64 %451, i64* %452, align 8
  %453 = icmp eq %"class.std::__1::unique_ptr"* %448, %374
  br i1 %453, label %454, label %402

454:                                              ; preds = %402, %397
  %455 = phi %"class.std::__1::unique_ptr"* [ %398, %397 ], [ %447, %402 ]
  %456 = ptrtoint %"class.std::__1::unique_ptr"* %455 to i64
  br label %457

457:                                              ; preds = %454, %373
  %458 = phi i64 [ %289, %373 ], [ %456, %454 ]
  %459 = phi %"class.std::__1::unique_ptr"* [ %288, %373 ], [ %455, %454 ]
  %460 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %461 = icmp eq %"class.std::__1::unique_ptr"* %460, %1
  br i1 %461, label %487, label %462

462:                                              ; preds = %457
  %463 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %460, i64 -1, i32 0, i32 0, i32 0
  %464 = ptrtoint %"class.base::ModuleCache::Module"** %463 to i64
  %465 = sub i64 %464, %6
  %466 = lshr i64 %465, 3
  %467 = add nuw nsw i64 %466, 1
  %468 = and i64 %467, 7
  %469 = icmp eq i64 %468, 0
  br i1 %469, label %482, label %470

470:                                              ; preds = %462, %470
  %471 = phi %"class.std::__1::unique_ptr"* [ %479, %470 ], [ %292, %462 ]
  %472 = phi %"class.std::__1::unique_ptr"* [ %478, %470 ], [ %1, %462 ]
  %473 = phi i64 [ %480, %470 ], [ %468, %462 ]
  %474 = bitcast %"class.std::__1::unique_ptr"* %471 to i64*
  %475 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %472, i64 0, i32 0, i32 0, i32 0
  %476 = bitcast %"class.std::__1::unique_ptr"* %472 to i64*
  %477 = load i64, i64* %476, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %475, align 8
  store i64 %477, i64* %474, align 8
  %478 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %472, i64 1
  %479 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %471, i64 1
  %480 = add i64 %473, -1
  %481 = icmp eq i64 %480, 0
  br i1 %481, label %482, label %470, !llvm.loop !17

482:                                              ; preds = %470, %462
  %483 = phi %"class.std::__1::unique_ptr"* [ undef, %462 ], [ %479, %470 ]
  %484 = phi %"class.std::__1::unique_ptr"* [ %292, %462 ], [ %479, %470 ]
  %485 = phi %"class.std::__1::unique_ptr"* [ %1, %462 ], [ %478, %470 ]
  %486 = icmp ult i64 %465, 56
  br i1 %486, label %541, label %489

487:                                              ; preds = %457
  %488 = ptrtoint %"class.std::__1::unique_ptr"* %459 to i64
  br label %544

489:                                              ; preds = %482, %489
  %490 = phi %"class.std::__1::unique_ptr"* [ %539, %489 ], [ %484, %482 ]
  %491 = phi %"class.std::__1::unique_ptr"* [ %538, %489 ], [ %485, %482 ]
  %492 = bitcast %"class.std::__1::unique_ptr"* %490 to i64*
  %493 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %491, i64 0, i32 0, i32 0, i32 0
  %494 = bitcast %"class.std::__1::unique_ptr"* %491 to i64*
  %495 = load i64, i64* %494, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %493, align 8
  store i64 %495, i64* %492, align 8
  %496 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %491, i64 1
  %497 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %490, i64 1
  %498 = bitcast %"class.std::__1::unique_ptr"* %497 to i64*
  %499 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %496, i64 0, i32 0, i32 0, i32 0
  %500 = bitcast %"class.std::__1::unique_ptr"* %496 to i64*
  %501 = load i64, i64* %500, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %499, align 8
  store i64 %501, i64* %498, align 8
  %502 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %491, i64 2
  %503 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %490, i64 2
  %504 = bitcast %"class.std::__1::unique_ptr"* %503 to i64*
  %505 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %502, i64 0, i32 0, i32 0, i32 0
  %506 = bitcast %"class.std::__1::unique_ptr"* %502 to i64*
  %507 = load i64, i64* %506, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %505, align 8
  store i64 %507, i64* %504, align 8
  %508 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %491, i64 3
  %509 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %490, i64 3
  %510 = bitcast %"class.std::__1::unique_ptr"* %509 to i64*
  %511 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %508, i64 0, i32 0, i32 0, i32 0
  %512 = bitcast %"class.std::__1::unique_ptr"* %508 to i64*
  %513 = load i64, i64* %512, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %511, align 8
  store i64 %513, i64* %510, align 8
  %514 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %491, i64 4
  %515 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %490, i64 4
  %516 = bitcast %"class.std::__1::unique_ptr"* %515 to i64*
  %517 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %514, i64 0, i32 0, i32 0, i32 0
  %518 = bitcast %"class.std::__1::unique_ptr"* %514 to i64*
  %519 = load i64, i64* %518, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %517, align 8
  store i64 %519, i64* %516, align 8
  %520 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %491, i64 5
  %521 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %490, i64 5
  %522 = bitcast %"class.std::__1::unique_ptr"* %521 to i64*
  %523 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %520, i64 0, i32 0, i32 0, i32 0
  %524 = bitcast %"class.std::__1::unique_ptr"* %520 to i64*
  %525 = load i64, i64* %524, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %523, align 8
  store i64 %525, i64* %522, align 8
  %526 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %491, i64 6
  %527 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %490, i64 6
  %528 = bitcast %"class.std::__1::unique_ptr"* %527 to i64*
  %529 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %526, i64 0, i32 0, i32 0, i32 0
  %530 = bitcast %"class.std::__1::unique_ptr"* %526 to i64*
  %531 = load i64, i64* %530, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %529, align 8
  store i64 %531, i64* %528, align 8
  %532 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %491, i64 7
  %533 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %490, i64 7
  %534 = bitcast %"class.std::__1::unique_ptr"* %533 to i64*
  %535 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %532, i64 0, i32 0, i32 0, i32 0
  %536 = bitcast %"class.std::__1::unique_ptr"* %532 to i64*
  %537 = load i64, i64* %536, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %535, align 8
  store i64 %537, i64* %534, align 8
  %538 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %491, i64 8
  %539 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %490, i64 8
  %540 = icmp eq %"class.std::__1::unique_ptr"* %538, %460
  br i1 %540, label %541, label %489

541:                                              ; preds = %489, %482
  %542 = phi %"class.std::__1::unique_ptr"* [ %483, %482 ], [ %539, %489 ]
  %543 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  br label %544

544:                                              ; preds = %541, %487
  %545 = phi %"class.std::__1::unique_ptr"* [ %1, %487 ], [ %543, %541 ]
  %546 = phi %"class.std::__1::unique_ptr"* [ %292, %487 ], [ %542, %541 ]
  %547 = phi i64 [ %488, %487 ], [ %458, %541 ]
  %548 = ptrtoint %"class.std::__1::unique_ptr"* %546 to i64
  %549 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  store i64 %547, i64* %253, align 8
  store i64 %548, i64* %22, align 8
  store i64 %291, i64* %14, align 8
  %550 = icmp eq %"class.std::__1::unique_ptr"* %545, %549
  br i1 %550, label %564, label %551

551:                                              ; preds = %544, %562
  %552 = phi %"class.std::__1::unique_ptr"* [ %553, %562 ], [ %545, %544 ]
  %553 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %552, i64 -1
  %554 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %553, i64 0, i32 0, i32 0, i32 0
  %555 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %554, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %554, align 8
  %556 = icmp eq %"class.base::ModuleCache::Module"* %555, null
  br i1 %556, label %562, label %557

557:                                              ; preds = %551
  %558 = bitcast %"class.base::ModuleCache::Module"* %555 to void (%"class.base::ModuleCache::Module"*)***
  %559 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %558, align 8
  %560 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %559, i64 1
  %561 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %560, align 8
  tail call void %561(%"class.base::ModuleCache::Module"* nonnull %555) #11
  br label %562

562:                                              ; preds = %557, %551
  %563 = icmp eq %"class.std::__1::unique_ptr"* %553, %549
  br i1 %563, label %564, label %551

564:                                              ; preds = %562, %544
  %565 = icmp eq %"class.std::__1::unique_ptr"* %549, null
  br i1 %565, label %568, label %566

566:                                              ; preds = %564
  %567 = bitcast %"class.std::__1::unique_ptr"* %549 to i8*
  tail call void @_ZdlPv(i8* %567) #12
  br label %568

568:                                              ; preds = %248, %566, %564, %111, %231, %4
  %569 = phi %"class.std::__1::unique_ptr"* [ %1, %4 ], [ %1, %231 ], [ %1, %111 ], [ %288, %564 ], [ %288, %566 ], [ %1, %248 ]
  ret %"class.std::__1::unique_ptr"* %569
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9flat_treeINSt3__110unique_ptrIKNS_11ModuleCache6ModuleENS2_14default_deleteIS6_EEEENS_8identityENS4_23ModuleAndAddressCompareENS2_6vectorIS9_NS2_9allocatorIS9_EEEEE6insertINS2_13move_iteratorINS2_11__wrap_iterIPS9_EEEEEEvT_SN_(%"class.base::internal::flat_tree"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.base::internal::flat_tree<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, base::identity, base::ModuleCache::ModuleAndAddressCompare, std::__1::vector<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, std::__1::allocator<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> > > > >::value_compare", align 1
  %5 = icmp eq %"class.std::__1::unique_ptr"* %1, %2
  br i1 %5, label %81, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 1
  %8 = icmp eq %"class.std::__1::unique_ptr"* %7, %2
  %9 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 1
  br i1 %8, label %10, label %13

10:                                               ; preds = %6
  %11 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %12 = tail call { %"class.std::__1::unique_ptr"*, i8 } @_ZN4base8internal9flat_treeINSt3__110unique_ptrIKNS_11ModuleCache6ModuleENS2_14default_deleteIS6_EEEENS_8identityENS4_23ModuleAndAddressCompareENS2_6vectorIS9_NS2_9allocatorIS9_EEEEE21emplace_hint_key_argsIS9_JS9_EEENS2_4pairINS2_11__wrap_iterIPS9_EEbEENSJ_IPKS9_EERKT_DpOT0_(%"class.base::internal::flat_tree"* %0, %"class.std::__1::unique_ptr"* %11, %"class.std::__1::unique_ptr"* dereferenceable(8) %1, %"class.std::__1::unique_ptr"* dereferenceable(8) %1) #11
  br label %81

13:                                               ; preds = %6
  %14 = bitcast %"class.std::__1::unique_ptr"** %9 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.base::internal::flat_tree"* %0 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = ashr exact i64 %18, 3
  %20 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 0
  %21 = inttoptr i64 %17 to %"class.std::__1::unique_ptr"*
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 %19
  br label %23

23:                                               ; preds = %13, %43
  %24 = phi %"class.std::__1::unique_ptr"* [ %22, %13 ], [ %48, %43 ]
  %25 = phi %"class.std::__1::unique_ptr"* [ %21, %13 ], [ %44, %43 ]
  %26 = phi %"class.std::__1::unique_ptr"* [ %1, %13 ], [ %46, %43 ]
  %27 = phi i64 [ %19, %13 ], [ %45, %43 ]
  %28 = tail call { %"class.std::__1::unique_ptr"*, i8 } @_ZN4base8internal9flat_treeINSt3__110unique_ptrIKNS_11ModuleCache6ModuleENS2_14default_deleteIS6_EEEENS_8identityENS4_23ModuleAndAddressCompareENS2_6vectorIS9_NS2_9allocatorIS9_EEEEE13append_uniqueIS9_EENS2_4pairINS2_11__wrap_iterIPS9_EEbEESL_SL_OT_(%"class.base::internal::flat_tree"* %0, %"class.std::__1::unique_ptr"* %25, %"class.std::__1::unique_ptr"* %24, %"class.std::__1::unique_ptr"* dereferenceable(8) %26)
  %29 = extractvalue { %"class.std::__1::unique_ptr"*, i8 } %28, 1
  %30 = and i8 %29, 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %23
  %33 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %20, align 8
  br label %43

34:                                               ; preds = %23
  %35 = extractvalue { %"class.std::__1::unique_ptr"*, i8 } %28, 0
  %36 = load i64, i64* %16, align 8
  %37 = ptrtoint %"class.std::__1::unique_ptr"* %35 to i64
  %38 = sub i64 %37, %36
  %39 = ashr exact i64 %38, 3
  %40 = icmp slt i64 %39, %27
  %41 = select i1 %40, i64 %39, i64 %27
  %42 = inttoptr i64 %36 to %"class.std::__1::unique_ptr"*
  br label %43

43:                                               ; preds = %32, %34
  %44 = phi %"class.std::__1::unique_ptr"* [ %33, %32 ], [ %42, %34 ]
  %45 = phi i64 [ %27, %32 ], [ %41, %34 ]
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %26, i64 1
  %47 = icmp eq %"class.std::__1::unique_ptr"* %46, %2
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %44, i64 %19
  br i1 %47, label %49, label %23

49:                                               ; preds = %43
  %50 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  tail call void @_ZN4base8internal9flat_treeINSt3__110unique_ptrIKNS_11ModuleCache6ModuleENS2_14default_deleteIS6_EEEENS_8identityENS4_23ModuleAndAddressCompareENS2_6vectorIS9_NS2_9allocatorIS9_EEEEE15sort_and_uniqueENS2_11__wrap_iterIPS9_EESJ_(%"class.base::internal::flat_tree"* %0, %"class.std::__1::unique_ptr"* %48, %"class.std::__1::unique_ptr"* %50)
  %51 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %20, align 8
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %51, i64 %45
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %51, i64 %19
  %54 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %55 = getelementptr inbounds %"struct.base::internal::flat_tree<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, base::identity, base::ModuleCache::ModuleAndAddressCompare, std::__1::vector<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, std::__1::allocator<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> > > > >::value_compare", %"struct.base::internal::flat_tree<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, base::identity, base::ModuleCache::ModuleAndAddressCompare, std::__1::vector<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, std::__1::allocator<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> > > > >::value_compare"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %55)
  %56 = ptrtoint %"class.std::__1::unique_ptr"* %52 to i64
  %57 = ptrtoint %"class.std::__1::unique_ptr"* %53 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = ptrtoint %"class.std::__1::unique_ptr"* %54 to i64
  %61 = sub i64 %60, %57
  %62 = ashr exact i64 %61, 3
  %63 = icmp slt i64 %62, %59
  %64 = select i1 %63, i64 %62, i64 %59
  %65 = icmp sgt i64 %64, 0
  br i1 %65, label %66, label %77

66:                                               ; preds = %49
  %67 = icmp slt i64 %64, 1152921504606846975
  %68 = select i1 %67, i64 %64, i64 1152921504606846975
  br label %69

69:                                               ; preds = %74, %66
  %70 = phi i64 [ %75, %74 ], [ %68, %66 ]
  %71 = shl i64 %70, 3
  %72 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %71, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #11
  %73 = icmp eq i8* %72, null
  br i1 %73, label %74, label %78

74:                                               ; preds = %69
  %75 = lshr i64 %70, 1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %69

77:                                               ; preds = %74, %49
  call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS_10unique_ptrIKNS1_11ModuleCache6ModuleENS_14default_deleteIS7_EEEENS1_8identityENS5_23ModuleAndAddressCompareENS_6vectorISA_NS_9allocatorISA_EEEEE13value_compareENS_11__wrap_iterIPSA_EEEEvT0_SN_SN_T_NS_15iterator_traitsISN_E15difference_typeESR_PNSQ_10value_typeEl(%"class.std::__1::unique_ptr"* %52, %"class.std::__1::unique_ptr"* %53, %"class.std::__1::unique_ptr"* %54, %"struct.base::internal::flat_tree<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, base::identity, base::ModuleCache::ModuleAndAddressCompare, std::__1::vector<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, std::__1::allocator<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> > > > >::value_compare"* nonnull dereferenceable(1) %4, i64 %59, i64 %62, %"class.std::__1::unique_ptr"* null, i64 0) #11
  br label %80

78:                                               ; preds = %69
  %79 = bitcast i8* %72 to %"class.std::__1::unique_ptr"*
  call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS_10unique_ptrIKNS1_11ModuleCache6ModuleENS_14default_deleteIS7_EEEENS1_8identityENS5_23ModuleAndAddressCompareENS_6vectorISA_NS_9allocatorISA_EEEEE13value_compareENS_11__wrap_iterIPSA_EEEEvT0_SN_SN_T_NS_15iterator_traitsISN_E15difference_typeESR_PNSQ_10value_typeEl(%"class.std::__1::unique_ptr"* %52, %"class.std::__1::unique_ptr"* %53, %"class.std::__1::unique_ptr"* %54, %"struct.base::internal::flat_tree<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, base::identity, base::ModuleCache::ModuleAndAddressCompare, std::__1::vector<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, std::__1::allocator<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> > > > >::value_compare"* nonnull dereferenceable(1) %4, i64 %59, i64 %62, %"class.std::__1::unique_ptr"* nonnull %79, i64 %70) #11
  call void @_ZdlPv(i8* nonnull %72) #12
  br label %80

80:                                               ; preds = %77, %78
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %55)
  br label %81

81:                                               ; preds = %3, %80, %10
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11ModuleCache21AddCustomNativeModuleENSt3__110unique_ptrIKNS0_6ModuleENS1_14default_deleteIS4_EEEE(%"class.base::ModuleCache"*, %"class.base::ModuleCache::Module"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.base::ModuleCache::Module"* %1, %"class.base::ModuleCache::Module"** %5, align 8
  %6 = getelementptr inbounds %"class.base::ModuleCache", %"class.base::ModuleCache"* %0, i64 0, i32 0, i32 0
  %7 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_10unique_ptrIKN4base11ModuleCache6ModuleENS_14default_deleteIS5_EEEENS3_23ModuleAndAddressCompareENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS8_JS8_EEENS_4pairINS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %6, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #11
  %8 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %7, 1
  %9 = and i8 %8, 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 119, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0)) #11
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #11
  br label %14

14:                                               ; preds = %2, %11
  %15 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %5, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %5, align 8
  %16 = icmp eq %"class.base::ModuleCache::Module"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %14
  %18 = bitcast %"class.base::ModuleCache::Module"* %15 to void (%"class.base::ModuleCache::Module"*)***
  %19 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %19, i64 1
  %21 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %20, align 8
  call void %21(%"class.base::ModuleCache::Module"* nonnull %15) #11
  br label %22

22:                                               ; preds = %14, %17
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base11ModuleCache31RegisterAuxiliaryModuleProviderEPNS0_23AuxiliaryModuleProviderE(%"class.base::ModuleCache"* nocapture, %"class.base::ModuleCache::AuxiliaryModuleProvider"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.base::ModuleCache", %"class.base::ModuleCache"* %0, i64 0, i32 3
  store %"class.base::ModuleCache::AuxiliaryModuleProvider"* %1, %"class.base::ModuleCache::AuxiliaryModuleProvider"** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base11ModuleCache33UnregisterAuxiliaryModuleProviderEPNS0_23AuxiliaryModuleProviderE(%"class.base::ModuleCache"* nocapture, %"class.base::ModuleCache::AuxiliaryModuleProvider"* nocapture readnone) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.base::ModuleCache", %"class.base::ModuleCache"* %0, i64 0, i32 3
  store %"class.base::ModuleCache::AuxiliaryModuleProvider"* null, %"class.base::ModuleCache::AuxiliaryModuleProvider"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4base11ModuleCache23ModuleAndAddressCompareclERKNSt3__110unique_ptrIKNS0_6ModuleENS2_14default_deleteIS5_EEEESA_(%"struct.base::ModuleCache::ModuleAndAddressCompare"* nocapture readnone, %"class.std::__1::unique_ptr"* nocapture readonly dereferenceable(8), %"class.std::__1::unique_ptr"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %4, align 8
  %6 = bitcast %"class.base::ModuleCache::Module"* %5 to i64 (%"class.base::ModuleCache::Module"*)***
  %7 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %6, align 8
  %8 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %7, i64 2
  %9 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %8, align 8
  %10 = tail call i64 %9(%"class.base::ModuleCache::Module"* %5) #11
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %11, align 8
  %13 = bitcast %"class.base::ModuleCache::Module"* %12 to i64 (%"class.base::ModuleCache::Module"*)***
  %14 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %13, align 8
  %15 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %14, i64 2
  %16 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %15, align 8
  %17 = tail call i64 %16(%"class.base::ModuleCache::Module"* %12) #11
  %18 = icmp ult i64 %10, %17
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4base11ModuleCache23ModuleAndAddressCompareclERKNSt3__110unique_ptrIKNS0_6ModuleENS2_14default_deleteIS5_EEEEm(%"struct.base::ModuleCache::ModuleAndAddressCompare"* nocapture readnone, %"class.std::__1::unique_ptr"* nocapture readonly dereferenceable(8), i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %4, align 8
  %6 = bitcast %"class.base::ModuleCache::Module"* %5 to i64 (%"class.base::ModuleCache::Module"*)***
  %7 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %6, align 8
  %8 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %7, i64 2
  %9 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %8, align 8
  %10 = tail call i64 %9(%"class.base::ModuleCache::Module"* %5) #11
  %11 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %4, align 8
  %12 = bitcast %"class.base::ModuleCache::Module"* %11 to i64 (%"class.base::ModuleCache::Module"*)***
  %13 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %12, align 8
  %14 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %13, i64 5
  %15 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %14, align 8
  %16 = tail call i64 %15(%"class.base::ModuleCache::Module"* %11) #11
  %17 = add i64 %16, %10
  %18 = icmp ule i64 %17, %2
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4base11ModuleCache23ModuleAndAddressCompareclEmRKNSt3__110unique_ptrIKNS0_6ModuleENS2_14default_deleteIS5_EEEE(%"struct.base::ModuleCache::ModuleAndAddressCompare"* nocapture readnone, i64, %"class.std::__1::unique_ptr"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %4, align 8
  %6 = bitcast %"class.base::ModuleCache::Module"* %5 to i64 (%"class.base::ModuleCache::Module"*)***
  %7 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %6, align 8
  %8 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %7, i64 2
  %9 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %8, align 8
  %10 = tail call i64 %9(%"class.base::ModuleCache::Module"* %5) #11
  %11 = icmp ugt i64 %10, %1
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.std::__1::unique_ptr"* @"_ZNSt3__118__stable_partitionIRZN4base8internal23ProjectedUnaryPredicateIZNS1_11ModuleCache22UpdateNonNativeModulesERKNS_6vectorIPKNS4_6ModuleENS_9allocatorIS8_EEEENS5_INS_10unique_ptrIS7_NS_14default_deleteIS7_EEEENS9_ISH_EEEEE3$_0NS1_8identityEEEDaRT_RT0_EUlTyOSM_E_NS_11__wrap_iterIPSH_EElNS_4pairISU_lEEEESO_SO_SO_SM_T1_T2_NS_26bidirectional_iterator_tagE"(%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %class.anon.24* dereferenceable(16), i64, %"class.std::__1::unique_ptr"*, i64) unnamed_addr #0 {
  %7 = ptrtoint %"class.std::__1::unique_ptr"* %0 to i64
  switch i64 %3, label %77 [
    i64 2, label %8
    i64 3, label %13
  ]

8:                                                ; preds = %6
  %9 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %9, align 8
  store i64 %10, i64* %11, align 8
  br label %476

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 1
  %15 = getelementptr inbounds %class.anon.24, %class.anon.24* %2, i64 0, i32 0
  %16 = load %class.anon*, %class.anon** %15, align 8
  %17 = getelementptr inbounds %class.anon, %class.anon* %16, i64 0, i32 0
  %18 = load %"class.base::internal::flat_tree.19"*, %"class.base::internal::flat_tree.19"** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %19, align 8
  %21 = getelementptr inbounds %"class.base::internal::flat_tree.19", %"class.base::internal::flat_tree.19"* %18, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.base::ModuleCache::Module"**, %"class.base::ModuleCache::Module"*** %21, align 8
  %23 = getelementptr inbounds %"class.base::internal::flat_tree.19", %"class.base::internal::flat_tree.19"* %18, i64 0, i32 0, i32 0, i32 1
  %24 = bitcast %"class.base::ModuleCache::Module"*** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = ptrtoint %"class.base::ModuleCache::Module"** %22 to i64
  %27 = sub i64 %25, %26
  %28 = icmp eq i64 %27, 0
  %29 = inttoptr i64 %25 to %"class.base::ModuleCache::Module"**
  %30 = ptrtoint %"class.base::ModuleCache::Module"* %20 to i64
  br i1 %28, label %48, label %31

31:                                               ; preds = %13
  %32 = ashr exact i64 %27, 3
  br label %33

33:                                               ; preds = %33, %31
  %34 = phi %"class.base::ModuleCache::Module"** [ %22, %31 ], [ %44, %33 ]
  %35 = phi i64 [ %32, %31 ], [ %43, %33 ]
  %36 = lshr i64 %35, 1
  %37 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %34, i64 %36
  %38 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %37, align 8
  %39 = icmp ult %"class.base::ModuleCache::Module"* %38, %20
  %40 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %37, i64 1
  %41 = xor i64 %36, -1
  %42 = add i64 %35, %41
  %43 = select i1 %39, i64 %42, i64 %36
  %44 = select i1 %39, %"class.base::ModuleCache::Module"** %40, %"class.base::ModuleCache::Module"** %34
  %45 = icmp eq i64 %43, 0
  br i1 %45, label %46, label %33

46:                                               ; preds = %33
  %47 = ptrtoint %"class.base::ModuleCache::Module"** %44 to i64
  br label %48

48:                                               ; preds = %46, %13
  %49 = phi i64 [ %47, %46 ], [ %26, %13 ]
  %50 = phi %"class.base::ModuleCache::Module"** [ %44, %46 ], [ %22, %13 ]
  %51 = icmp eq %"class.base::ModuleCache::Module"** %50, %29
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %50, align 8
  %54 = icmp ult %"class.base::ModuleCache::Module"* %20, %53
  br i1 %54, label %58, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %50, i64 1
  %57 = ptrtoint %"class.base::ModuleCache::Module"** %56 to i64
  br label %58

58:                                               ; preds = %48, %52, %55
  %59 = phi i64 [ %57, %55 ], [ %49, %48 ], [ %49, %52 ]
  %60 = inttoptr i64 %59 to %"class.base::ModuleCache::Module"**
  %61 = icmp eq %"class.base::ModuleCache::Module"** %50, %60
  %62 = select i1 %61, %"class.base::ModuleCache::Module"** %29, %"class.base::ModuleCache::Module"** %50
  %63 = icmp eq %"class.base::ModuleCache::Module"** %62, %29
  br i1 %63, label %64, label %70

64:                                               ; preds = %58
  %65 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  store i64 %30, i64* %65, align 8
  store i64 %66, i64* %67, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %69 = load i64, i64* %68, align 8
  store i64 %69, i64* %67, align 8
  store i64 %66, i64* %68, align 8
  br label %476

70:                                               ; preds = %58
  %71 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  %72 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %73 = load i64, i64* %72, align 8
  store i64 %73, i64* %71, align 8
  store i64 %30, i64* %72, align 8
  %74 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = load i64, i64* %71, align 8
  store i64 %76, i64* %74, align 8
  store i64 %75, i64* %71, align 8
  br label %476

77:                                               ; preds = %6
  %78 = icmp sgt i64 %3, %5
  br i1 %78, label %224, label %79

79:                                               ; preds = %77
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %81 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  %82 = load i64, i64* %81, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %80, align 8
  %83 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %82, i64* %83, align 8
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 1
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 1
  %86 = icmp eq %"class.std::__1::unique_ptr"* %85, %1
  br i1 %86, label %166, label %87

87:                                               ; preds = %79
  %88 = getelementptr inbounds %class.anon.24, %class.anon.24* %2, i64 0, i32 0
  br label %89

89:                                               ; preds = %87, %160
  %90 = phi %"class.std::__1::unique_ptr"* [ %85, %87 ], [ %164, %160 ]
  %91 = phi %"class.std::__1::unique_ptr"* [ %84, %87 ], [ %163, %160 ]
  %92 = phi i64 [ %7, %87 ], [ %162, %160 ]
  %93 = phi i64 [ 1, %87 ], [ %161, %160 ]
  %94 = load %class.anon*, %class.anon** %88, align 8
  %95 = getelementptr inbounds %class.anon, %class.anon* %94, i64 0, i32 0
  %96 = load %"class.base::internal::flat_tree.19"*, %"class.base::internal::flat_tree.19"** %95, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %90, i64 0, i32 0, i32 0, i32 0
  %98 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %97, align 8
  %99 = getelementptr inbounds %"class.base::internal::flat_tree.19", %"class.base::internal::flat_tree.19"* %96, i64 0, i32 0, i32 0, i32 0
  %100 = load %"class.base::ModuleCache::Module"**, %"class.base::ModuleCache::Module"*** %99, align 8
  %101 = getelementptr inbounds %"class.base::internal::flat_tree.19", %"class.base::internal::flat_tree.19"* %96, i64 0, i32 0, i32 0, i32 1
  %102 = bitcast %"class.base::ModuleCache::Module"*** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = ptrtoint %"class.base::ModuleCache::Module"** %100 to i64
  %105 = sub i64 %103, %104
  %106 = icmp eq i64 %105, 0
  %107 = inttoptr i64 %103 to %"class.base::ModuleCache::Module"**
  %108 = ptrtoint %"class.base::ModuleCache::Module"* %98 to i64
  br i1 %106, label %126, label %109

109:                                              ; preds = %89
  %110 = ashr exact i64 %105, 3
  br label %111

111:                                              ; preds = %111, %109
  %112 = phi %"class.base::ModuleCache::Module"** [ %100, %109 ], [ %122, %111 ]
  %113 = phi i64 [ %110, %109 ], [ %121, %111 ]
  %114 = lshr i64 %113, 1
  %115 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %112, i64 %114
  %116 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %115, align 8
  %117 = icmp ult %"class.base::ModuleCache::Module"* %116, %98
  %118 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %115, i64 1
  %119 = xor i64 %114, -1
  %120 = add i64 %113, %119
  %121 = select i1 %117, i64 %120, i64 %114
  %122 = select i1 %117, %"class.base::ModuleCache::Module"** %118, %"class.base::ModuleCache::Module"** %112
  %123 = icmp eq i64 %121, 0
  br i1 %123, label %124, label %111

124:                                              ; preds = %111
  %125 = ptrtoint %"class.base::ModuleCache::Module"** %122 to i64
  br label %126

126:                                              ; preds = %124, %89
  %127 = phi i64 [ %125, %124 ], [ %104, %89 ]
  %128 = phi %"class.base::ModuleCache::Module"** [ %122, %124 ], [ %100, %89 ]
  %129 = icmp eq %"class.base::ModuleCache::Module"** %128, %107
  br i1 %129, label %136, label %130

130:                                              ; preds = %126
  %131 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %128, align 8
  %132 = icmp ult %"class.base::ModuleCache::Module"* %98, %131
  br i1 %132, label %136, label %133

133:                                              ; preds = %130
  %134 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %128, i64 1
  %135 = ptrtoint %"class.base::ModuleCache::Module"** %134 to i64
  br label %136

136:                                              ; preds = %126, %130, %133
  %137 = phi i64 [ %135, %133 ], [ %127, %126 ], [ %127, %130 ]
  %138 = inttoptr i64 %137 to %"class.base::ModuleCache::Module"**
  %139 = icmp eq %"class.base::ModuleCache::Module"** %128, %138
  %140 = select i1 %139, %"class.base::ModuleCache::Module"** %107, %"class.base::ModuleCache::Module"** %128
  %141 = icmp eq %"class.base::ModuleCache::Module"** %140, %107
  br i1 %141, label %142, label %156

142:                                              ; preds = %136
  %143 = inttoptr i64 %92 to %"class.std::__1::unique_ptr"*
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %97, align 8
  %144 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %143, i64 0, i32 0, i32 0, i32 0
  %145 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %144, align 8
  %146 = inttoptr i64 %92 to i64*
  store i64 %108, i64* %146, align 8
  %147 = icmp eq %"class.base::ModuleCache::Module"* %145, null
  br i1 %147, label %153, label %148

148:                                              ; preds = %142
  %149 = bitcast %"class.base::ModuleCache::Module"* %145 to void (%"class.base::ModuleCache::Module"*)***
  %150 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %149, align 8
  %151 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %150, i64 1
  %152 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %151, align 8
  tail call void %152(%"class.base::ModuleCache::Module"* nonnull %145) #11
  br label %153

153:                                              ; preds = %142, %148
  %154 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %143, i64 1
  %155 = ptrtoint %"class.std::__1::unique_ptr"* %154 to i64
  br label %160

156:                                              ; preds = %136
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %97, align 8
  %157 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %108, i64* %157, align 8
  %158 = add i64 %93, 1
  %159 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %91, i64 1
  br label %160

160:                                              ; preds = %156, %153
  %161 = phi i64 [ %93, %153 ], [ %158, %156 ]
  %162 = phi i64 [ %155, %153 ], [ %92, %156 ]
  %163 = phi %"class.std::__1::unique_ptr"* [ %91, %153 ], [ %159, %156 ]
  %164 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %90, i64 1
  %165 = icmp eq %"class.std::__1::unique_ptr"* %164, %1
  br i1 %165, label %166, label %89

166:                                              ; preds = %160, %79
  %167 = phi i64 [ 1, %79 ], [ %161, %160 ]
  %168 = phi i64 [ %7, %79 ], [ %162, %160 ]
  %169 = phi %"class.std::__1::unique_ptr"* [ %84, %79 ], [ %163, %160 ]
  %170 = inttoptr i64 %168 to %"class.std::__1::unique_ptr"*
  %171 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %172 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %173 = load i64, i64* %172, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %171, align 8
  %174 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %170, i64 0, i32 0, i32 0, i32 0
  %175 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %174, align 8
  %176 = inttoptr i64 %168 to i64*
  store i64 %173, i64* %176, align 8
  %177 = icmp eq %"class.base::ModuleCache::Module"* %175, null
  br i1 %177, label %183, label %178

178:                                              ; preds = %166
  %179 = bitcast %"class.base::ModuleCache::Module"* %175 to void (%"class.base::ModuleCache::Module"*)***
  %180 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %179, align 8
  %181 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %180, i64 1
  %182 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %181, align 8
  tail call void %182(%"class.base::ModuleCache::Module"* nonnull %175) #11
  br label %183

183:                                              ; preds = %166, %178
  %184 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %170, i64 1
  %185 = icmp ugt %"class.std::__1::unique_ptr"* %169, %4
  br i1 %185, label %205, label %186

186:                                              ; preds = %220, %183
  %187 = icmp eq %"class.std::__1::unique_ptr"* %4, null
  %188 = icmp eq i64 %167, 0
  %189 = or i1 %187, %188
  br i1 %189, label %476, label %190

190:                                              ; preds = %186, %201
  %191 = phi i64 [ %202, %201 ], [ 0, %186 ]
  %192 = phi %"class.std::__1::unique_ptr"* [ %203, %201 ], [ %4, %186 ]
  %193 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %192, i64 0, i32 0, i32 0, i32 0
  %194 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %193, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %193, align 8
  %195 = icmp eq %"class.base::ModuleCache::Module"* %194, null
  br i1 %195, label %201, label %196

196:                                              ; preds = %190
  %197 = bitcast %"class.base::ModuleCache::Module"* %194 to void (%"class.base::ModuleCache::Module"*)***
  %198 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %197, align 8
  %199 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %198, i64 1
  %200 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %199, align 8
  tail call void %200(%"class.base::ModuleCache::Module"* nonnull %194) #11
  br label %201

201:                                              ; preds = %196, %190
  %202 = add nuw i64 %191, 1
  %203 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %192, i64 1
  %204 = icmp eq i64 %202, %167
  br i1 %204, label %476, label %190

205:                                              ; preds = %183, %220
  %206 = phi %"class.std::__1::unique_ptr"* [ %221, %220 ], [ %4, %183 ]
  %207 = phi %"class.std::__1::unique_ptr"* [ %222, %220 ], [ %184, %183 ]
  %208 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %206, i64 0, i32 0, i32 0, i32 0
  %209 = bitcast %"class.std::__1::unique_ptr"* %206 to i64*
  %210 = load i64, i64* %209, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %208, align 8
  %211 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %207, i64 0, i32 0, i32 0, i32 0
  %212 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %211, align 8
  %213 = bitcast %"class.std::__1::unique_ptr"* %207 to i64*
  store i64 %210, i64* %213, align 8
  %214 = icmp eq %"class.base::ModuleCache::Module"* %212, null
  br i1 %214, label %220, label %215

215:                                              ; preds = %205
  %216 = bitcast %"class.base::ModuleCache::Module"* %212 to void (%"class.base::ModuleCache::Module"*)***
  %217 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %216, align 8
  %218 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %217, i64 1
  %219 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %218, align 8
  tail call void %219(%"class.base::ModuleCache::Module"* nonnull %212) #11
  br label %220

220:                                              ; preds = %205, %215
  %221 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %206, i64 1
  %222 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %207, i64 1
  %223 = icmp ult %"class.std::__1::unique_ptr"* %221, %169
  br i1 %223, label %205, label %186

224:                                              ; preds = %77
  %225 = sdiv i64 %3, 2
  %226 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 %225
  %227 = ptrtoint %"class.std::__1::unique_ptr"* %226 to i64
  %228 = getelementptr inbounds %class.anon.24, %class.anon.24* %2, i64 0, i32 0
  %229 = load %class.anon*, %class.anon** %228, align 8
  %230 = getelementptr inbounds %class.anon, %class.anon* %229, i64 0, i32 0
  %231 = load %"class.base::internal::flat_tree.19"*, %"class.base::internal::flat_tree.19"** %230, align 8
  %232 = getelementptr inbounds %"class.base::internal::flat_tree.19", %"class.base::internal::flat_tree.19"* %231, i64 0, i32 0, i32 0, i32 0
  %233 = load %"class.base::ModuleCache::Module"**, %"class.base::ModuleCache::Module"*** %232, align 8
  %234 = getelementptr inbounds %"class.base::internal::flat_tree.19", %"class.base::internal::flat_tree.19"* %231, i64 0, i32 0, i32 0, i32 1
  %235 = bitcast %"class.base::ModuleCache::Module"*** %234 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = ptrtoint %"class.base::ModuleCache::Module"** %233 to i64
  %238 = sub i64 %236, %237
  %239 = icmp eq i64 %238, 0
  %240 = inttoptr i64 %236 to %"class.base::ModuleCache::Module"**
  %241 = ashr exact i64 %238, 3
  br label %242

242:                                              ; preds = %281, %224
  %243 = phi %"class.std::__1::unique_ptr"* [ %226, %224 ], [ %245, %281 ]
  %244 = phi i64 [ %225, %224 ], [ %282, %281 ]
  %245 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %243, i64 -1
  %246 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %245, i64 0, i32 0, i32 0, i32 0
  %247 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %246, align 8
  br i1 %239, label %263, label %248

248:                                              ; preds = %242, %248
  %249 = phi %"class.base::ModuleCache::Module"** [ %259, %248 ], [ %233, %242 ]
  %250 = phi i64 [ %258, %248 ], [ %241, %242 ]
  %251 = lshr i64 %250, 1
  %252 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %249, i64 %251
  %253 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %252, align 8
  %254 = icmp ult %"class.base::ModuleCache::Module"* %253, %247
  %255 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %252, i64 1
  %256 = xor i64 %251, -1
  %257 = add i64 %250, %256
  %258 = select i1 %254, i64 %257, i64 %251
  %259 = select i1 %254, %"class.base::ModuleCache::Module"** %255, %"class.base::ModuleCache::Module"** %249
  %260 = icmp eq i64 %258, 0
  br i1 %260, label %261, label %248

261:                                              ; preds = %248
  %262 = ptrtoint %"class.base::ModuleCache::Module"** %259 to i64
  br label %263

263:                                              ; preds = %261, %242
  %264 = phi i64 [ %262, %261 ], [ %237, %242 ]
  %265 = phi %"class.base::ModuleCache::Module"** [ %259, %261 ], [ %233, %242 ]
  %266 = icmp eq %"class.base::ModuleCache::Module"** %265, %240
  br i1 %266, label %273, label %267

267:                                              ; preds = %263
  %268 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %265, align 8
  %269 = icmp ult %"class.base::ModuleCache::Module"* %247, %268
  br i1 %269, label %273, label %270

270:                                              ; preds = %267
  %271 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %265, i64 1
  %272 = ptrtoint %"class.base::ModuleCache::Module"** %271 to i64
  br label %273

273:                                              ; preds = %263, %267, %270
  %274 = phi i64 [ %272, %270 ], [ %264, %263 ], [ %264, %267 ]
  %275 = inttoptr i64 %274 to %"class.base::ModuleCache::Module"**
  %276 = icmp eq %"class.base::ModuleCache::Module"** %265, %275
  %277 = select i1 %276, %"class.base::ModuleCache::Module"** %240, %"class.base::ModuleCache::Module"** %265
  %278 = icmp eq %"class.base::ModuleCache::Module"** %277, %240
  br i1 %278, label %283, label %279

279:                                              ; preds = %273
  %280 = icmp eq %"class.std::__1::unique_ptr"* %245, %0
  br i1 %280, label %297, label %281

281:                                              ; preds = %279
  %282 = add nsw i64 %244, -1
  br label %242

283:                                              ; preds = %273
  %284 = tail call fastcc %"class.std::__1::unique_ptr"* @"_ZNSt3__118__stable_partitionIRZN4base8internal23ProjectedUnaryPredicateIZNS1_11ModuleCache22UpdateNonNativeModulesERKNS_6vectorIPKNS4_6ModuleENS_9allocatorIS8_EEEENS5_INS_10unique_ptrIS7_NS_14default_deleteIS7_EEEENS9_ISH_EEEEE3$_0NS1_8identityEEEDaRT_RT0_EUlTyOSM_E_NS_11__wrap_iterIPSH_EElNS_4pairISU_lEEEESO_SO_SO_SM_T1_T2_NS_26bidirectional_iterator_tagE"(%"class.std::__1::unique_ptr"* %0, %"class.std::__1::unique_ptr"* %245, %class.anon.24* dereferenceable(16) %2, i64 %244, %"class.std::__1::unique_ptr"* %4, i64 %5)
  %285 = load %class.anon*, %class.anon** %228, align 8
  %286 = getelementptr inbounds %class.anon, %class.anon* %285, i64 0, i32 0
  %287 = load %"class.base::internal::flat_tree.19"*, %"class.base::internal::flat_tree.19"** %286, align 8
  %288 = getelementptr inbounds %"class.base::internal::flat_tree.19", %"class.base::internal::flat_tree.19"* %287, i64 0, i32 0, i32 0, i32 0
  %289 = load %"class.base::ModuleCache::Module"**, %"class.base::ModuleCache::Module"*** %288, align 8
  %290 = getelementptr inbounds %"class.base::internal::flat_tree.19", %"class.base::internal::flat_tree.19"* %287, i64 0, i32 0, i32 0, i32 1
  %291 = bitcast %"class.base::ModuleCache::Module"*** %290 to i64*
  %292 = load i64, i64* %291, align 8
  %293 = ptrtoint %"class.base::ModuleCache::Module"** %289 to i64
  %294 = sub i64 %292, %293
  %295 = inttoptr i64 %292 to %"class.base::ModuleCache::Module"**
  %296 = ashr exact i64 %294, 3
  br label %297

297:                                              ; preds = %279, %283
  %298 = phi i64 [ %296, %283 ], [ %241, %279 ]
  %299 = phi %"class.base::ModuleCache::Module"** [ %295, %283 ], [ %240, %279 ]
  %300 = phi i64 [ %294, %283 ], [ %238, %279 ]
  %301 = phi i64 [ %293, %283 ], [ %237, %279 ]
  %302 = phi %"class.base::ModuleCache::Module"** [ %289, %283 ], [ %233, %279 ]
  %303 = phi %"class.std::__1::unique_ptr"* [ %284, %283 ], [ %0, %279 ]
  %304 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 1
  %305 = sub nsw i64 %3, %225
  %306 = icmp eq i64 %300, 0
  br label %307

307:                                              ; preds = %346, %297
  %308 = phi %"class.std::__1::unique_ptr"* [ %226, %297 ], [ %344, %346 ]
  %309 = phi i64 [ %305, %297 ], [ %347, %346 ]
  %310 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %308, i64 0, i32 0, i32 0, i32 0
  %311 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %310, align 8
  br i1 %306, label %327, label %312

312:                                              ; preds = %307, %312
  %313 = phi %"class.base::ModuleCache::Module"** [ %323, %312 ], [ %302, %307 ]
  %314 = phi i64 [ %322, %312 ], [ %298, %307 ]
  %315 = lshr i64 %314, 1
  %316 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %313, i64 %315
  %317 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %316, align 8
  %318 = icmp ult %"class.base::ModuleCache::Module"* %317, %311
  %319 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %316, i64 1
  %320 = xor i64 %315, -1
  %321 = add i64 %314, %320
  %322 = select i1 %318, i64 %321, i64 %315
  %323 = select i1 %318, %"class.base::ModuleCache::Module"** %319, %"class.base::ModuleCache::Module"** %313
  %324 = icmp eq i64 %322, 0
  br i1 %324, label %325, label %312

325:                                              ; preds = %312
  %326 = ptrtoint %"class.base::ModuleCache::Module"** %323 to i64
  br label %327

327:                                              ; preds = %325, %307
  %328 = phi i64 [ %326, %325 ], [ %301, %307 ]
  %329 = phi %"class.base::ModuleCache::Module"** [ %323, %325 ], [ %302, %307 ]
  %330 = icmp eq %"class.base::ModuleCache::Module"** %329, %299
  br i1 %330, label %337, label %331

331:                                              ; preds = %327
  %332 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %329, align 8
  %333 = icmp ult %"class.base::ModuleCache::Module"* %311, %332
  br i1 %333, label %337, label %334

334:                                              ; preds = %331
  %335 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %329, i64 1
  %336 = ptrtoint %"class.base::ModuleCache::Module"** %335 to i64
  br label %337

337:                                              ; preds = %327, %331, %334
  %338 = phi i64 [ %336, %334 ], [ %328, %327 ], [ %328, %331 ]
  %339 = inttoptr i64 %338 to %"class.base::ModuleCache::Module"**
  %340 = icmp eq %"class.base::ModuleCache::Module"** %329, %339
  %341 = select i1 %340, %"class.base::ModuleCache::Module"** %299, %"class.base::ModuleCache::Module"** %329
  %342 = icmp eq %"class.base::ModuleCache::Module"** %341, %299
  br i1 %342, label %343, label %348

343:                                              ; preds = %337
  %344 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %308, i64 1
  %345 = icmp eq %"class.std::__1::unique_ptr"* %344, %1
  br i1 %345, label %350, label %346

346:                                              ; preds = %343
  %347 = add nsw i64 %309, -1
  br label %307

348:                                              ; preds = %337
  %349 = tail call fastcc %"class.std::__1::unique_ptr"* @"_ZNSt3__118__stable_partitionIRZN4base8internal23ProjectedUnaryPredicateIZNS1_11ModuleCache22UpdateNonNativeModulesERKNS_6vectorIPKNS4_6ModuleENS_9allocatorIS8_EEEENS5_INS_10unique_ptrIS7_NS_14default_deleteIS7_EEEENS9_ISH_EEEEE3$_0NS1_8identityEEEDaRT_RT0_EUlTyOSM_E_NS_11__wrap_iterIPSH_EElNS_4pairISU_lEEEESO_SO_SO_SM_T1_T2_NS_26bidirectional_iterator_tagE"(%"class.std::__1::unique_ptr"* %308, %"class.std::__1::unique_ptr"* %1, %class.anon.24* dereferenceable(16) %2, i64 %309, %"class.std::__1::unique_ptr"* %4, i64 %5)
  br label %350

350:                                              ; preds = %343, %348
  %351 = phi %"class.std::__1::unique_ptr"* [ %349, %348 ], [ %304, %343 ]
  %352 = icmp eq %"class.std::__1::unique_ptr"* %303, %226
  br i1 %352, label %476, label %353

353:                                              ; preds = %350
  %354 = icmp eq %"class.std::__1::unique_ptr"* %226, %351
  br i1 %354, label %476, label %355

355:                                              ; preds = %353
  %356 = bitcast %"class.std::__1::unique_ptr"* %303 to i64*
  %357 = load i64, i64* %356, align 8
  %358 = bitcast %"class.std::__1::unique_ptr"* %226 to i64*
  %359 = load i64, i64* %358, align 8
  store i64 %359, i64* %356, align 8
  store i64 %357, i64* %358, align 8
  %360 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %303, i64 1
  %361 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %226, i64 1
  %362 = icmp eq %"class.std::__1::unique_ptr"* %361, %351
  br i1 %362, label %450, label %363

363:                                              ; preds = %355
  %364 = sub nsw i64 -2, %225
  %365 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %351, i64 %364, i32 0, i32 0, i32 0
  %366 = ptrtoint %"class.base::ModuleCache::Module"** %365 to i64
  %367 = sub i64 %366, %7
  %368 = lshr i64 %367, 3
  %369 = add nuw nsw i64 %368, 1
  %370 = and i64 %369, 3
  %371 = icmp eq i64 %370, 0
  br i1 %371, label %392, label %372

372:                                              ; preds = %363, %372
  %373 = phi %"class.std::__1::unique_ptr"* [ %387, %372 ], [ %226, %363 ]
  %374 = phi %"class.std::__1::unique_ptr"* [ %386, %372 ], [ %361, %363 ]
  %375 = phi %"class.std::__1::unique_ptr"* [ %385, %372 ], [ %360, %363 ]
  %376 = phi i64 [ %380, %372 ], [ %227, %363 ]
  %377 = phi i64 [ %388, %372 ], [ %370, %363 ]
  %378 = ptrtoint %"class.std::__1::unique_ptr"* %374 to i64
  %379 = icmp eq %"class.std::__1::unique_ptr"* %375, %373
  %380 = select i1 %379, i64 %378, i64 %376
  %381 = bitcast %"class.std::__1::unique_ptr"* %375 to i64*
  %382 = load i64, i64* %381, align 8
  %383 = bitcast %"class.std::__1::unique_ptr"* %374 to i64*
  %384 = load i64, i64* %383, align 8
  store i64 %384, i64* %381, align 8
  store i64 %382, i64* %383, align 8
  %385 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %375, i64 1
  %386 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %374, i64 1
  %387 = inttoptr i64 %380 to %"class.std::__1::unique_ptr"*
  %388 = add i64 %377, -1
  %389 = icmp eq i64 %388, 0
  br i1 %389, label %390, label %372, !llvm.loop !18

390:                                              ; preds = %372
  %391 = inttoptr i64 %380 to %"class.std::__1::unique_ptr"*
  br label %392

392:                                              ; preds = %363, %390
  %393 = phi i64 [ undef, %363 ], [ %380, %390 ]
  %394 = phi %"class.std::__1::unique_ptr"* [ undef, %363 ], [ %385, %390 ]
  %395 = phi %"class.std::__1::unique_ptr"* [ %226, %363 ], [ %391, %390 ]
  %396 = phi %"class.std::__1::unique_ptr"* [ %361, %363 ], [ %386, %390 ]
  %397 = phi %"class.std::__1::unique_ptr"* [ %360, %363 ], [ %385, %390 ]
  %398 = phi i64 [ %227, %363 ], [ %380, %390 ]
  %399 = icmp ult i64 %367, 24
  br i1 %399, label %446, label %400

400:                                              ; preds = %392, %400
  %401 = phi %"class.std::__1::unique_ptr"* [ %445, %400 ], [ %395, %392 ]
  %402 = phi %"class.std::__1::unique_ptr"* [ %443, %400 ], [ %396, %392 ]
  %403 = phi %"class.std::__1::unique_ptr"* [ %442, %400 ], [ %397, %392 ]
  %404 = phi i64 [ %437, %400 ], [ %398, %392 ]
  %405 = ptrtoint %"class.std::__1::unique_ptr"* %402 to i64
  %406 = icmp eq %"class.std::__1::unique_ptr"* %403, %401
  %407 = select i1 %406, i64 %405, i64 %404
  %408 = bitcast %"class.std::__1::unique_ptr"* %403 to i64*
  %409 = load i64, i64* %408, align 8
  %410 = bitcast %"class.std::__1::unique_ptr"* %402 to i64*
  %411 = load i64, i64* %410, align 8
  store i64 %411, i64* %408, align 8
  store i64 %409, i64* %410, align 8
  %412 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %403, i64 1
  %413 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %402, i64 1
  %414 = inttoptr i64 %407 to %"class.std::__1::unique_ptr"*
  %415 = ptrtoint %"class.std::__1::unique_ptr"* %413 to i64
  %416 = icmp eq %"class.std::__1::unique_ptr"* %412, %414
  %417 = select i1 %416, i64 %415, i64 %407
  %418 = bitcast %"class.std::__1::unique_ptr"* %412 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"class.std::__1::unique_ptr"* %413 to i64*
  %421 = load i64, i64* %420, align 8
  store i64 %421, i64* %418, align 8
  store i64 %419, i64* %420, align 8
  %422 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %403, i64 2
  %423 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %402, i64 2
  %424 = inttoptr i64 %417 to %"class.std::__1::unique_ptr"*
  %425 = ptrtoint %"class.std::__1::unique_ptr"* %423 to i64
  %426 = icmp eq %"class.std::__1::unique_ptr"* %422, %424
  %427 = select i1 %426, i64 %425, i64 %417
  %428 = bitcast %"class.std::__1::unique_ptr"* %422 to i64*
  %429 = load i64, i64* %428, align 8
  %430 = bitcast %"class.std::__1::unique_ptr"* %423 to i64*
  %431 = load i64, i64* %430, align 8
  store i64 %431, i64* %428, align 8
  store i64 %429, i64* %430, align 8
  %432 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %403, i64 3
  %433 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %402, i64 3
  %434 = inttoptr i64 %427 to %"class.std::__1::unique_ptr"*
  %435 = ptrtoint %"class.std::__1::unique_ptr"* %433 to i64
  %436 = icmp eq %"class.std::__1::unique_ptr"* %432, %434
  %437 = select i1 %436, i64 %435, i64 %427
  %438 = bitcast %"class.std::__1::unique_ptr"* %432 to i64*
  %439 = load i64, i64* %438, align 8
  %440 = bitcast %"class.std::__1::unique_ptr"* %433 to i64*
  %441 = load i64, i64* %440, align 8
  store i64 %441, i64* %438, align 8
  store i64 %439, i64* %440, align 8
  %442 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %403, i64 4
  %443 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %402, i64 4
  %444 = icmp eq %"class.std::__1::unique_ptr"* %443, %351
  %445 = inttoptr i64 %437 to %"class.std::__1::unique_ptr"*
  br i1 %444, label %446, label %400

446:                                              ; preds = %400, %392
  %447 = phi i64 [ %393, %392 ], [ %437, %400 ]
  %448 = phi %"class.std::__1::unique_ptr"* [ %394, %392 ], [ %442, %400 ]
  %449 = inttoptr i64 %447 to %"class.std::__1::unique_ptr"*
  br label %450

450:                                              ; preds = %446, %355
  %451 = phi i64 [ %227, %355 ], [ %447, %446 ]
  %452 = phi %"class.std::__1::unique_ptr"* [ %360, %355 ], [ %448, %446 ]
  %453 = phi %"class.std::__1::unique_ptr"* [ %226, %355 ], [ %449, %446 ]
  %454 = icmp eq %"class.std::__1::unique_ptr"* %452, %453
  br i1 %454, label %476, label %455

455:                                              ; preds = %450, %473
  %456 = phi i64 [ %475, %473 ], [ %451, %450 ]
  %457 = phi %"class.std::__1::unique_ptr"* [ %468, %473 ], [ %452, %450 ]
  %458 = phi i64 [ %474, %473 ], [ %451, %450 ]
  %459 = inttoptr i64 %456 to %"class.std::__1::unique_ptr"*
  br label %460

460:                                              ; preds = %455, %472
  %461 = phi %"class.std::__1::unique_ptr"* [ %468, %472 ], [ %457, %455 ]
  %462 = phi i64 [ %456, %472 ], [ %458, %455 ]
  %463 = inttoptr i64 %462 to %"class.std::__1::unique_ptr"*
  %464 = bitcast %"class.std::__1::unique_ptr"* %461 to i64*
  %465 = load i64, i64* %464, align 8
  %466 = inttoptr i64 %462 to i64*
  %467 = load i64, i64* %466, align 8
  store i64 %467, i64* %464, align 8
  store i64 %465, i64* %466, align 8
  %468 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %461, i64 1
  %469 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %463, i64 1
  %470 = icmp eq %"class.std::__1::unique_ptr"* %469, %351
  %471 = icmp eq %"class.std::__1::unique_ptr"* %468, %459
  br i1 %470, label %472, label %473

472:                                              ; preds = %460
  br i1 %471, label %476, label %460

473:                                              ; preds = %460
  %474 = ptrtoint %"class.std::__1::unique_ptr"* %469 to i64
  %475 = select i1 %471, i64 %474, i64 %456
  br label %455

476:                                              ; preds = %201, %472, %450, %353, %350, %186, %64, %70, %8
  %477 = phi %"class.std::__1::unique_ptr"* [ %1, %8 ], [ %1, %64 ], [ %14, %70 ], [ %184, %186 ], [ %303, %353 ], [ %351, %350 ], [ %452, %450 ], [ %452, %472 ], [ %184, %201 ]
  ret %"class.std::__1::unique_ptr"* %477
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_10unique_ptrIKN4base11ModuleCache6ModuleENS_14default_deleteIS5_EEEENS3_23ModuleAndAddressCompareENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_10unique_ptrIKN4base11ModuleCache6ModuleENS_14default_deleteIS5_EEEENS3_23ModuleAndAddressCompareENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_10unique_ptrIKN4base11ModuleCache6ModuleENS_14default_deleteIS5_EEEENS3_23ModuleAndAddressCompareENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #11
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %10, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %10, align 8
  %12 = icmp eq %"class.base::ModuleCache::Module"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %4
  %14 = bitcast %"class.base::ModuleCache::Module"* %11 to void (%"class.base::ModuleCache::Module"*)***
  %15 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %15, i64 1
  %17 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %16, align 8
  tail call void %17(%"class.base::ModuleCache::Module"* nonnull %11) #11
  br label %18

18:                                               ; preds = %4, %13
  %19 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_10unique_ptrIKN4base11ModuleCache6ModuleENS_14default_deleteIS5_EEEENS3_23ModuleAndAddressCompareENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS8_JS8_EEENS_4pairINS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"class.std::__1::unique_ptr"* dereferenceable(8), %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %60, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %56, %8
  %12 = phi %"class.std::__1::__tree_node"* [ %59, %56 ], [ %6, %8 ]
  %13 = phi %"class.std::__1::__tree_node_base"** [ %58, %56 ], [ %9, %8 ]
  %14 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %10, align 8
  %15 = bitcast %"class.base::ModuleCache::Module"* %14 to i64 (%"class.base::ModuleCache::Module"*)***
  %16 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %15, align 8
  %17 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %16, i64 2
  %18 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %17, align 8
  %19 = tail call i64 %18(%"class.base::ModuleCache::Module"* %14) #11
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %20, align 8
  %22 = bitcast %"class.base::ModuleCache::Module"* %21 to i64 (%"class.base::ModuleCache::Module"*)***
  %23 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %23, i64 2
  %25 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %24, align 8
  %26 = tail call i64 %25(%"class.base::ModuleCache::Module"* %21) #11
  %27 = icmp ult i64 %19, %26
  br i1 %27, label %28, label %34

28:                                               ; preds = %11
  %29 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node_base"* %30, null
  br i1 %31, label %32, label %56

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %62

34:                                               ; preds = %11
  %35 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %20, align 8
  %36 = bitcast %"class.base::ModuleCache::Module"* %35 to i64 (%"class.base::ModuleCache::Module"*)***
  %37 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %36, align 8
  %38 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %37, i64 2
  %39 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %38, align 8
  %40 = tail call i64 %39(%"class.base::ModuleCache::Module"* %35) #11
  %41 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %10, align 8
  %42 = bitcast %"class.base::ModuleCache::Module"* %41 to i64 (%"class.base::ModuleCache::Module"*)***
  %43 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %42, align 8
  %44 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %43, i64 2
  %45 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %44, align 8
  %46 = tail call i64 %45(%"class.base::ModuleCache::Module"* %41) #11
  %47 = icmp ult i64 %40, %46
  br i1 %47, label %48, label %54

48:                                               ; preds = %34
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 1
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %56

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %62

54:                                               ; preds = %34
  %55 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %62

56:                                               ; preds = %48, %28
  %57 = phi %"class.std::__1::__tree_node_base"* [ %30, %28 ], [ %50, %48 ]
  %58 = phi %"class.std::__1::__tree_node_base"** [ %29, %28 ], [ %49, %48 ]
  %59 = bitcast %"class.std::__1::__tree_node_base"* %57 to %"class.std::__1::__tree_node"*
  br label %11

60:                                               ; preds = %3
  %61 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %62

62:                                               ; preds = %32, %52, %54, %60
  %63 = phi %"class.std::__1::__tree_end_node"* [ %4, %60 ], [ %33, %32 ], [ %53, %52 ], [ %55, %54 ]
  %64 = phi %"class.std::__1::__tree_node_base"** [ %61, %60 ], [ %29, %32 ], [ %49, %52 ], [ %13, %54 ]
  %65 = bitcast %"class.std::__1::__tree_node_base"** %64 to %"class.std::__1::__tree_node"**
  %66 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node"* %66, null
  br i1 %67, label %68, label %96

68:                                               ; preds = %62
  %69 = tail call i8* @_Znwm(i64 40) #12, !noalias !19
  %70 = getelementptr inbounds i8, i8* %69, i64 32
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %72 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  %73 = load i64, i64* %72, align 8, !noalias !19
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %71, align 8, !noalias !19
  %74 = bitcast i8* %70 to i64*
  store i64 %73, i64* %74, align 8, !noalias !19
  %75 = bitcast i8* %69 to %"class.std::__1::__tree_node"*
  %76 = bitcast i8* %69 to %"class.std::__1::__tree_node_base"*
  %77 = getelementptr inbounds i8, i8* %69, i64 16
  %78 = bitcast i8* %77 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %63, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = bitcast %"class.std::__1::__tree_node_base"** %64 to i8**
  store i8* %69, i8** %79, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %81 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %80, align 8
  %82 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %81, i64 0, i32 0
  %83 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %82, align 8
  %84 = icmp eq %"class.std::__1::__tree_node_base"* %83, null
  br i1 %84, label %89, label %85

85:                                               ; preds = %68
  %86 = ptrtoint %"class.std::__1::__tree_node_base"* %83 to i64
  %87 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %86, i64* %87, align 8
  %88 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %64, align 8
  br label %89

89:                                               ; preds = %85, %68
  %90 = phi %"class.std::__1::__tree_node_base"* [ %76, %68 ], [ %88, %85 ]
  %91 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %91, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %92, %"class.std::__1::__tree_node_base"* %90) #11
  %93 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, 1
  store i64 %95, i64* %93, align 8
  br label %96

96:                                               ; preds = %89, %62
  %97 = phi i8 [ 1, %89 ], [ 0, %62 ]
  %98 = phi %"class.std::__1::__tree_node"* [ %75, %89 ], [ %66, %62 ]
  %99 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %98, i64 0, i32 0, i32 0
  %100 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %99, 0
  %101 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %100, i8 %97, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %101
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !22
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !22
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !22
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIPKNS1_11ModuleCache6ModuleENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_T_NS_15iterator_traitsISL_E15difference_typeEPNSO_10value_typeEl(%"class.base::ModuleCache::Module"**, %"class.base::ModuleCache::Module"**, %"struct.base::internal::flat_tree<const base::ModuleCache::Module *, base::identity, std::__1::less<void>, std::__1::vector<const base::ModuleCache::Module *, std::__1::allocator<const base::ModuleCache::Module *> > >::value_compare"* dereferenceable(1), i64, %"class.base::ModuleCache::Module"**, i64) local_unnamed_addr #0 comdat {
  %7 = ptrtoint %"class.base::ModuleCache::Module"** %0 to i64
  switch i64 %3, label %18 [
    i64 0, label %456
    i64 1, label %456
    i64 2, label %8
  ]

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %1, i64 -1
  %10 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %9, align 8
  %11 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %0, align 8
  %12 = icmp ult %"class.base::ModuleCache::Module"* %10, %11
  br i1 %12, label %13, label %456

13:                                               ; preds = %8
  %14 = ptrtoint %"class.base::ModuleCache::Module"* %10 to i64
  %15 = ptrtoint %"class.base::ModuleCache::Module"* %11 to i64
  %16 = bitcast %"class.base::ModuleCache::Module"** %0 to i64*
  %17 = bitcast %"class.base::ModuleCache::Module"** %9 to i64*
  store i64 %14, i64* %16, align 8
  store i64 %15, i64* %17, align 8
  br label %456

18:                                               ; preds = %6
  %19 = icmp slt i64 %3, 129
  br i1 %19, label %20, label %74

20:                                               ; preds = %18
  %21 = icmp eq %"class.base::ModuleCache::Module"** %0, %1
  br i1 %21, label %456, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %0, i64 1
  %24 = icmp eq %"class.base::ModuleCache::Module"** %23, %1
  br i1 %24, label %456, label %25

25:                                               ; preds = %22
  %26 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %1, i64 -2
  %27 = ptrtoint %"class.base::ModuleCache::Module"** %26 to i64
  %28 = sub i64 %27, %7
  %29 = and i64 %28, 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %48

31:                                               ; preds = %25
  %32 = bitcast %"class.base::ModuleCache::Module"** %23 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = inttoptr i64 %33 to %"class.base::ModuleCache::Module"*
  br label %35

35:                                               ; preds = %40, %31
  %36 = phi %"class.base::ModuleCache::Module"** [ %23, %31 ], [ %37, %40 ]
  %37 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %36, i64 -1
  %38 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %37, align 8
  %39 = icmp ugt %"class.base::ModuleCache::Module"* %38, %34
  br i1 %39, label %40, label %44

40:                                               ; preds = %35
  %41 = ptrtoint %"class.base::ModuleCache::Module"* %38 to i64
  %42 = bitcast %"class.base::ModuleCache::Module"** %36 to i64*
  store i64 %41, i64* %42, align 8
  %43 = icmp eq %"class.base::ModuleCache::Module"** %37, %0
  br i1 %43, label %44, label %35

44:                                               ; preds = %35, %40
  %45 = phi %"class.base::ModuleCache::Module"** [ %36, %35 ], [ %0, %40 ]
  %46 = bitcast %"class.base::ModuleCache::Module"** %45 to i64*
  store i64 %33, i64* %46, align 8
  %47 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %0, i64 2
  br label %48

48:                                               ; preds = %44, %25
  %49 = phi %"class.base::ModuleCache::Module"** [ %23, %25 ], [ %47, %44 ]
  %50 = icmp ult i64 %28, 8
  br i1 %50, label %456, label %51

51:                                               ; preds = %48, %468
  %52 = phi %"class.base::ModuleCache::Module"** [ %471, %468 ], [ %49, %48 ]
  %53 = bitcast %"class.base::ModuleCache::Module"** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = icmp eq %"class.base::ModuleCache::Module"** %52, %0
  br i1 %55, label %63, label %56

56:                                               ; preds = %51
  %57 = inttoptr i64 %54 to %"class.base::ModuleCache::Module"*
  br label %58

58:                                               ; preds = %70, %56
  %59 = phi %"class.base::ModuleCache::Module"** [ %52, %56 ], [ %60, %70 ]
  %60 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %59, i64 -1
  %61 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %60, align 8
  %62 = icmp ugt %"class.base::ModuleCache::Module"* %61, %57
  br i1 %62, label %70, label %63

63:                                               ; preds = %70, %58, %51
  %64 = phi %"class.base::ModuleCache::Module"** [ %0, %51 ], [ %59, %58 ], [ %0, %70 ]
  %65 = bitcast %"class.base::ModuleCache::Module"** %64 to i64*
  store i64 %54, i64* %65, align 8
  %66 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %52, i64 1
  %67 = bitcast %"class.base::ModuleCache::Module"** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq %"class.base::ModuleCache::Module"** %66, %0
  br i1 %69, label %468, label %457

70:                                               ; preds = %58
  %71 = ptrtoint %"class.base::ModuleCache::Module"* %61 to i64
  %72 = bitcast %"class.base::ModuleCache::Module"** %59 to i64*
  store i64 %71, i64* %72, align 8
  %73 = icmp eq %"class.base::ModuleCache::Module"** %60, %0
  br i1 %73, label %63, label %58

74:                                               ; preds = %18
  %75 = lshr i64 %3, 1
  %76 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %0, i64 %75
  %77 = icmp sgt i64 %3, %5
  br i1 %77, label %454, label %78

78:                                               ; preds = %74
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIPKNS1_11ModuleCache6ModuleENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_T_NS_15iterator_traitsISL_E15difference_typeEPNSO_10value_typeE(%"class.base::ModuleCache::Module"** %0, %"class.base::ModuleCache::Module"** %76, %"struct.base::internal::flat_tree<const base::ModuleCache::Module *, base::identity, std::__1::less<void>, std::__1::vector<const base::ModuleCache::Module *, std::__1::allocator<const base::ModuleCache::Module *> > >::value_compare"* dereferenceable(1) %2, i64 %75, %"class.base::ModuleCache::Module"** %4)
  %79 = sub nsw i64 %3, %75
  %80 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %4, i64 %75
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIPKNS1_11ModuleCache6ModuleENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_T_NS_15iterator_traitsISL_E15difference_typeEPNSO_10value_typeE(%"class.base::ModuleCache::Module"** %76, %"class.base::ModuleCache::Module"** %1, %"struct.base::internal::flat_tree<const base::ModuleCache::Module *, base::identity, std::__1::less<void>, std::__1::vector<const base::ModuleCache::Module *, std::__1::allocator<const base::ModuleCache::Module *> > >::value_compare"* dereferenceable(1) %2, i64 %79, %"class.base::ModuleCache::Module"** %80)
  %81 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %4, i64 %3
  br label %213

82:                                               ; preds = %405
  %83 = ptrtoint %"class.base::ModuleCache::Module"** %406 to i64
  %84 = icmp eq %"class.base::ModuleCache::Module"** %406, %81
  br i1 %84, label %456, label %85

85:                                               ; preds = %82
  %86 = add i64 %3, -1
  %87 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %4, i64 %86
  %88 = ptrtoint %"class.base::ModuleCache::Module"** %87 to i64
  %89 = sub i64 %88, %83
  %90 = lshr i64 %89, 3
  %91 = add nuw nsw i64 %90, 1
  %92 = icmp ult i64 %91, 4
  br i1 %92, label %93, label %120

93:                                               ; preds = %211, %120, %85
  %94 = phi %"class.base::ModuleCache::Module"** [ %406, %120 ], [ %406, %85 ], [ %134, %211 ]
  %95 = phi %"class.base::ModuleCache::Module"** [ %408, %120 ], [ %408, %85 ], [ %135, %211 ]
  %96 = ptrtoint %"class.base::ModuleCache::Module"** %94 to i64
  %97 = add i64 %3, -1
  %98 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %4, i64 %97
  %99 = ptrtoint %"class.base::ModuleCache::Module"** %98 to i64
  %100 = sub i64 %99, %96
  %101 = lshr i64 %100, 3
  %102 = add nuw nsw i64 %101, 1
  %103 = and i64 %102, 7
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %116, label %105

105:                                              ; preds = %93, %105
  %106 = phi %"class.base::ModuleCache::Module"** [ %112, %105 ], [ %94, %93 ]
  %107 = phi %"class.base::ModuleCache::Module"** [ %113, %105 ], [ %95, %93 ]
  %108 = phi i64 [ %114, %105 ], [ %103, %93 ]
  %109 = bitcast %"class.base::ModuleCache::Module"** %106 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = bitcast %"class.base::ModuleCache::Module"** %107 to i64*
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %106, i64 1
  %113 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %107, i64 1
  %114 = add i64 %108, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %105, !llvm.loop !23

116:                                              ; preds = %105, %93
  %117 = phi %"class.base::ModuleCache::Module"** [ %94, %93 ], [ %112, %105 ]
  %118 = phi %"class.base::ModuleCache::Module"** [ %95, %93 ], [ %113, %105 ]
  %119 = icmp ult i64 %100, 56
  br i1 %119, label %456, label %410

120:                                              ; preds = %85
  %121 = add i64 %3, -1
  %122 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %4, i64 %121
  %123 = ptrtoint %"class.base::ModuleCache::Module"** %122 to i64
  %124 = sub i64 %123, %83
  %125 = lshr i64 %124, 3
  %126 = add nuw nsw i64 %125, 1
  %127 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %408, i64 %126
  %128 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %406, i64 %126
  %129 = icmp ult %"class.base::ModuleCache::Module"** %408, %128
  %130 = icmp ult %"class.base::ModuleCache::Module"** %406, %127
  %131 = and i1 %129, %130
  br i1 %131, label %93, label %132

132:                                              ; preds = %120
  %133 = and i64 %91, 4611686018427387900
  %134 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %406, i64 %133
  %135 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %408, i64 %133
  %136 = add nsw i64 %133, -4
  %137 = lshr exact i64 %136, 2
  %138 = add nuw nsw i64 %137, 1
  %139 = and i64 %138, 3
  %140 = icmp ult i64 %136, 12
  br i1 %140, label %192, label %141

141:                                              ; preds = %132
  %142 = sub nsw i64 %138, %139
  br label %143

143:                                              ; preds = %143, %141
  %144 = phi i64 [ 0, %141 ], [ %189, %143 ]
  %145 = phi i64 [ %142, %141 ], [ %190, %143 ]
  %146 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %406, i64 %144
  %147 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %408, i64 %144
  %148 = bitcast %"class.base::ModuleCache::Module"** %146 to <2 x i64>*
  %149 = load <2 x i64>, <2 x i64>* %148, align 8, !alias.scope !24
  %150 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %146, i64 2
  %151 = bitcast %"class.base::ModuleCache::Module"** %150 to <2 x i64>*
  %152 = load <2 x i64>, <2 x i64>* %151, align 8, !alias.scope !24
  %153 = bitcast %"class.base::ModuleCache::Module"** %147 to <2 x i64>*
  store <2 x i64> %149, <2 x i64>* %153, align 8, !alias.scope !27, !noalias !24
  %154 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %147, i64 2
  %155 = bitcast %"class.base::ModuleCache::Module"** %154 to <2 x i64>*
  store <2 x i64> %152, <2 x i64>* %155, align 8, !alias.scope !27, !noalias !24
  %156 = or i64 %144, 4
  %157 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %406, i64 %156
  %158 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %408, i64 %156
  %159 = bitcast %"class.base::ModuleCache::Module"** %157 to <2 x i64>*
  %160 = load <2 x i64>, <2 x i64>* %159, align 8, !alias.scope !24
  %161 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %157, i64 2
  %162 = bitcast %"class.base::ModuleCache::Module"** %161 to <2 x i64>*
  %163 = load <2 x i64>, <2 x i64>* %162, align 8, !alias.scope !24
  %164 = bitcast %"class.base::ModuleCache::Module"** %158 to <2 x i64>*
  store <2 x i64> %160, <2 x i64>* %164, align 8, !alias.scope !27, !noalias !24
  %165 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %158, i64 2
  %166 = bitcast %"class.base::ModuleCache::Module"** %165 to <2 x i64>*
  store <2 x i64> %163, <2 x i64>* %166, align 8, !alias.scope !27, !noalias !24
  %167 = or i64 %144, 8
  %168 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %406, i64 %167
  %169 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %408, i64 %167
  %170 = bitcast %"class.base::ModuleCache::Module"** %168 to <2 x i64>*
  %171 = load <2 x i64>, <2 x i64>* %170, align 8, !alias.scope !24
  %172 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %168, i64 2
  %173 = bitcast %"class.base::ModuleCache::Module"** %172 to <2 x i64>*
  %174 = load <2 x i64>, <2 x i64>* %173, align 8, !alias.scope !24
  %175 = bitcast %"class.base::ModuleCache::Module"** %169 to <2 x i64>*
  store <2 x i64> %171, <2 x i64>* %175, align 8, !alias.scope !27, !noalias !24
  %176 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %169, i64 2
  %177 = bitcast %"class.base::ModuleCache::Module"** %176 to <2 x i64>*
  store <2 x i64> %174, <2 x i64>* %177, align 8, !alias.scope !27, !noalias !24
  %178 = or i64 %144, 12
  %179 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %406, i64 %178
  %180 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %408, i64 %178
  %181 = bitcast %"class.base::ModuleCache::Module"** %179 to <2 x i64>*
  %182 = load <2 x i64>, <2 x i64>* %181, align 8, !alias.scope !24
  %183 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %179, i64 2
  %184 = bitcast %"class.base::ModuleCache::Module"** %183 to <2 x i64>*
  %185 = load <2 x i64>, <2 x i64>* %184, align 8, !alias.scope !24
  %186 = bitcast %"class.base::ModuleCache::Module"** %180 to <2 x i64>*
  store <2 x i64> %182, <2 x i64>* %186, align 8, !alias.scope !27, !noalias !24
  %187 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %180, i64 2
  %188 = bitcast %"class.base::ModuleCache::Module"** %187 to <2 x i64>*
  store <2 x i64> %185, <2 x i64>* %188, align 8, !alias.scope !27, !noalias !24
  %189 = add i64 %144, 16
  %190 = add i64 %145, -4
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %192, label %143, !llvm.loop !29

192:                                              ; preds = %143, %132
  %193 = phi i64 [ 0, %132 ], [ %189, %143 ]
  %194 = icmp eq i64 %139, 0
  br i1 %194, label %211, label %195

195:                                              ; preds = %192, %195
  %196 = phi i64 [ %208, %195 ], [ %193, %192 ]
  %197 = phi i64 [ %209, %195 ], [ %139, %192 ]
  %198 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %406, i64 %196
  %199 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %408, i64 %196
  %200 = bitcast %"class.base::ModuleCache::Module"** %198 to <2 x i64>*
  %201 = load <2 x i64>, <2 x i64>* %200, align 8, !alias.scope !24
  %202 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %198, i64 2
  %203 = bitcast %"class.base::ModuleCache::Module"** %202 to <2 x i64>*
  %204 = load <2 x i64>, <2 x i64>* %203, align 8, !alias.scope !24
  %205 = bitcast %"class.base::ModuleCache::Module"** %199 to <2 x i64>*
  store <2 x i64> %201, <2 x i64>* %205, align 8, !alias.scope !27, !noalias !24
  %206 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %199, i64 2
  %207 = bitcast %"class.base::ModuleCache::Module"** %206 to <2 x i64>*
  store <2 x i64> %204, <2 x i64>* %207, align 8, !alias.scope !27, !noalias !24
  %208 = add i64 %196, 4
  %209 = add i64 %197, -1
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %211, label %195, !llvm.loop !30

211:                                              ; preds = %195, %192
  %212 = icmp eq i64 %91, %133
  br i1 %212, label %456, label %93

213:                                              ; preds = %78, %405
  %214 = phi %"class.base::ModuleCache::Module"** [ %407, %405 ], [ %4, %78 ]
  %215 = phi %"class.base::ModuleCache::Module"** [ %406, %405 ], [ %80, %78 ]
  %216 = phi %"class.base::ModuleCache::Module"** [ %408, %405 ], [ %0, %78 ]
  %217 = icmp eq %"class.base::ModuleCache::Module"** %215, %81
  br i1 %217, label %218, label %393

218:                                              ; preds = %213
  %219 = ptrtoint %"class.base::ModuleCache::Module"** %214 to i64
  %220 = icmp eq %"class.base::ModuleCache::Module"** %214, %80
  br i1 %220, label %456, label %221

221:                                              ; preds = %218
  %222 = add nsw i64 %75, -1
  %223 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %4, i64 %222
  %224 = ptrtoint %"class.base::ModuleCache::Module"** %223 to i64
  %225 = sub i64 %224, %219
  %226 = lshr i64 %225, 3
  %227 = add nuw nsw i64 %226, 1
  %228 = icmp ult i64 %227, 4
  br i1 %228, label %322, label %229

229:                                              ; preds = %221
  %230 = add nsw i64 %75, -1
  %231 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %4, i64 %230
  %232 = ptrtoint %"class.base::ModuleCache::Module"** %231 to i64
  %233 = sub i64 %232, %219
  %234 = lshr i64 %233, 3
  %235 = add nuw nsw i64 %234, 1
  %236 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %216, i64 %235
  %237 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %214, i64 %235
  %238 = icmp ult %"class.base::ModuleCache::Module"** %216, %237
  %239 = icmp ult %"class.base::ModuleCache::Module"** %214, %236
  %240 = and i1 %238, %239
  br i1 %240, label %322, label %241

241:                                              ; preds = %229
  %242 = and i64 %227, 4611686018427387900
  %243 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %214, i64 %242
  %244 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %216, i64 %242
  %245 = add nsw i64 %242, -4
  %246 = lshr exact i64 %245, 2
  %247 = add nuw nsw i64 %246, 1
  %248 = and i64 %247, 3
  %249 = icmp ult i64 %245, 12
  br i1 %249, label %301, label %250

250:                                              ; preds = %241
  %251 = sub nsw i64 %247, %248
  br label %252

252:                                              ; preds = %252, %250
  %253 = phi i64 [ 0, %250 ], [ %298, %252 ]
  %254 = phi i64 [ %251, %250 ], [ %299, %252 ]
  %255 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %214, i64 %253
  %256 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %216, i64 %253
  %257 = bitcast %"class.base::ModuleCache::Module"** %255 to <2 x i64>*
  %258 = load <2 x i64>, <2 x i64>* %257, align 8, !alias.scope !31
  %259 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %255, i64 2
  %260 = bitcast %"class.base::ModuleCache::Module"** %259 to <2 x i64>*
  %261 = load <2 x i64>, <2 x i64>* %260, align 8, !alias.scope !31
  %262 = bitcast %"class.base::ModuleCache::Module"** %256 to <2 x i64>*
  store <2 x i64> %258, <2 x i64>* %262, align 8, !alias.scope !34, !noalias !31
  %263 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %256, i64 2
  %264 = bitcast %"class.base::ModuleCache::Module"** %263 to <2 x i64>*
  store <2 x i64> %261, <2 x i64>* %264, align 8, !alias.scope !34, !noalias !31
  %265 = or i64 %253, 4
  %266 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %214, i64 %265
  %267 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %216, i64 %265
  %268 = bitcast %"class.base::ModuleCache::Module"** %266 to <2 x i64>*
  %269 = load <2 x i64>, <2 x i64>* %268, align 8, !alias.scope !31
  %270 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %266, i64 2
  %271 = bitcast %"class.base::ModuleCache::Module"** %270 to <2 x i64>*
  %272 = load <2 x i64>, <2 x i64>* %271, align 8, !alias.scope !31
  %273 = bitcast %"class.base::ModuleCache::Module"** %267 to <2 x i64>*
  store <2 x i64> %269, <2 x i64>* %273, align 8, !alias.scope !34, !noalias !31
  %274 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %267, i64 2
  %275 = bitcast %"class.base::ModuleCache::Module"** %274 to <2 x i64>*
  store <2 x i64> %272, <2 x i64>* %275, align 8, !alias.scope !34, !noalias !31
  %276 = or i64 %253, 8
  %277 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %214, i64 %276
  %278 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %216, i64 %276
  %279 = bitcast %"class.base::ModuleCache::Module"** %277 to <2 x i64>*
  %280 = load <2 x i64>, <2 x i64>* %279, align 8, !alias.scope !31
  %281 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %277, i64 2
  %282 = bitcast %"class.base::ModuleCache::Module"** %281 to <2 x i64>*
  %283 = load <2 x i64>, <2 x i64>* %282, align 8, !alias.scope !31
  %284 = bitcast %"class.base::ModuleCache::Module"** %278 to <2 x i64>*
  store <2 x i64> %280, <2 x i64>* %284, align 8, !alias.scope !34, !noalias !31
  %285 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %278, i64 2
  %286 = bitcast %"class.base::ModuleCache::Module"** %285 to <2 x i64>*
  store <2 x i64> %283, <2 x i64>* %286, align 8, !alias.scope !34, !noalias !31
  %287 = or i64 %253, 12
  %288 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %214, i64 %287
  %289 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %216, i64 %287
  %290 = bitcast %"class.base::ModuleCache::Module"** %288 to <2 x i64>*
  %291 = load <2 x i64>, <2 x i64>* %290, align 8, !alias.scope !31
  %292 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %288, i64 2
  %293 = bitcast %"class.base::ModuleCache::Module"** %292 to <2 x i64>*
  %294 = load <2 x i64>, <2 x i64>* %293, align 8, !alias.scope !31
  %295 = bitcast %"class.base::ModuleCache::Module"** %289 to <2 x i64>*
  store <2 x i64> %291, <2 x i64>* %295, align 8, !alias.scope !34, !noalias !31
  %296 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %289, i64 2
  %297 = bitcast %"class.base::ModuleCache::Module"** %296 to <2 x i64>*
  store <2 x i64> %294, <2 x i64>* %297, align 8, !alias.scope !34, !noalias !31
  %298 = add i64 %253, 16
  %299 = add i64 %254, -4
  %300 = icmp eq i64 %299, 0
  br i1 %300, label %301, label %252, !llvm.loop !36

301:                                              ; preds = %252, %241
  %302 = phi i64 [ 0, %241 ], [ %298, %252 ]
  %303 = icmp eq i64 %248, 0
  br i1 %303, label %320, label %304

304:                                              ; preds = %301, %304
  %305 = phi i64 [ %317, %304 ], [ %302, %301 ]
  %306 = phi i64 [ %318, %304 ], [ %248, %301 ]
  %307 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %214, i64 %305
  %308 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %216, i64 %305
  %309 = bitcast %"class.base::ModuleCache::Module"** %307 to <2 x i64>*
  %310 = load <2 x i64>, <2 x i64>* %309, align 8, !alias.scope !31
  %311 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %307, i64 2
  %312 = bitcast %"class.base::ModuleCache::Module"** %311 to <2 x i64>*
  %313 = load <2 x i64>, <2 x i64>* %312, align 8, !alias.scope !31
  %314 = bitcast %"class.base::ModuleCache::Module"** %308 to <2 x i64>*
  store <2 x i64> %310, <2 x i64>* %314, align 8, !alias.scope !34, !noalias !31
  %315 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %308, i64 2
  %316 = bitcast %"class.base::ModuleCache::Module"** %315 to <2 x i64>*
  store <2 x i64> %313, <2 x i64>* %316, align 8, !alias.scope !34, !noalias !31
  %317 = add i64 %305, 4
  %318 = add i64 %306, -1
  %319 = icmp eq i64 %318, 0
  br i1 %319, label %320, label %304, !llvm.loop !37

320:                                              ; preds = %304, %301
  %321 = icmp eq i64 %227, %242
  br i1 %321, label %456, label %322

322:                                              ; preds = %320, %229, %221
  %323 = phi %"class.base::ModuleCache::Module"** [ %214, %229 ], [ %214, %221 ], [ %243, %320 ]
  %324 = phi %"class.base::ModuleCache::Module"** [ %216, %229 ], [ %216, %221 ], [ %244, %320 ]
  %325 = ptrtoint %"class.base::ModuleCache::Module"** %323 to i64
  %326 = add nsw i64 %75, -1
  %327 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %4, i64 %326
  %328 = ptrtoint %"class.base::ModuleCache::Module"** %327 to i64
  %329 = sub i64 %328, %325
  %330 = lshr i64 %329, 3
  %331 = add nuw nsw i64 %330, 1
  %332 = and i64 %331, 7
  %333 = icmp eq i64 %332, 0
  br i1 %333, label %345, label %334

334:                                              ; preds = %322, %334
  %335 = phi %"class.base::ModuleCache::Module"** [ %341, %334 ], [ %323, %322 ]
  %336 = phi %"class.base::ModuleCache::Module"** [ %342, %334 ], [ %324, %322 ]
  %337 = phi i64 [ %343, %334 ], [ %332, %322 ]
  %338 = bitcast %"class.base::ModuleCache::Module"** %335 to i64*
  %339 = load i64, i64* %338, align 8
  %340 = bitcast %"class.base::ModuleCache::Module"** %336 to i64*
  store i64 %339, i64* %340, align 8
  %341 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %335, i64 1
  %342 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %336, i64 1
  %343 = add i64 %337, -1
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %345, label %334, !llvm.loop !38

345:                                              ; preds = %334, %322
  %346 = phi %"class.base::ModuleCache::Module"** [ %323, %322 ], [ %341, %334 ]
  %347 = phi %"class.base::ModuleCache::Module"** [ %324, %322 ], [ %342, %334 ]
  %348 = icmp ult i64 %329, 56
  br i1 %348, label %456, label %349

349:                                              ; preds = %345, %349
  %350 = phi %"class.base::ModuleCache::Module"** [ %390, %349 ], [ %346, %345 ]
  %351 = phi %"class.base::ModuleCache::Module"** [ %391, %349 ], [ %347, %345 ]
  %352 = bitcast %"class.base::ModuleCache::Module"** %350 to i64*
  %353 = load i64, i64* %352, align 8
  %354 = bitcast %"class.base::ModuleCache::Module"** %351 to i64*
  store i64 %353, i64* %354, align 8
  %355 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %350, i64 1
  %356 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %351, i64 1
  %357 = bitcast %"class.base::ModuleCache::Module"** %355 to i64*
  %358 = load i64, i64* %357, align 8
  %359 = bitcast %"class.base::ModuleCache::Module"** %356 to i64*
  store i64 %358, i64* %359, align 8
  %360 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %350, i64 2
  %361 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %351, i64 2
  %362 = bitcast %"class.base::ModuleCache::Module"** %360 to i64*
  %363 = load i64, i64* %362, align 8
  %364 = bitcast %"class.base::ModuleCache::Module"** %361 to i64*
  store i64 %363, i64* %364, align 8
  %365 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %350, i64 3
  %366 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %351, i64 3
  %367 = bitcast %"class.base::ModuleCache::Module"** %365 to i64*
  %368 = load i64, i64* %367, align 8
  %369 = bitcast %"class.base::ModuleCache::Module"** %366 to i64*
  store i64 %368, i64* %369, align 8
  %370 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %350, i64 4
  %371 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %351, i64 4
  %372 = bitcast %"class.base::ModuleCache::Module"** %370 to i64*
  %373 = load i64, i64* %372, align 8
  %374 = bitcast %"class.base::ModuleCache::Module"** %371 to i64*
  store i64 %373, i64* %374, align 8
  %375 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %350, i64 5
  %376 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %351, i64 5
  %377 = bitcast %"class.base::ModuleCache::Module"** %375 to i64*
  %378 = load i64, i64* %377, align 8
  %379 = bitcast %"class.base::ModuleCache::Module"** %376 to i64*
  store i64 %378, i64* %379, align 8
  %380 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %350, i64 6
  %381 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %351, i64 6
  %382 = bitcast %"class.base::ModuleCache::Module"** %380 to i64*
  %383 = load i64, i64* %382, align 8
  %384 = bitcast %"class.base::ModuleCache::Module"** %381 to i64*
  store i64 %383, i64* %384, align 8
  %385 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %350, i64 7
  %386 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %351, i64 7
  %387 = bitcast %"class.base::ModuleCache::Module"** %385 to i64*
  %388 = load i64, i64* %387, align 8
  %389 = bitcast %"class.base::ModuleCache::Module"** %386 to i64*
  store i64 %388, i64* %389, align 8
  %390 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %350, i64 8
  %391 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %351, i64 8
  %392 = icmp eq %"class.base::ModuleCache::Module"** %390, %80
  br i1 %392, label %456, label %349, !llvm.loop !39

393:                                              ; preds = %213
  %394 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %215, align 8
  %395 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %214, align 8
  %396 = icmp ult %"class.base::ModuleCache::Module"* %394, %395
  br i1 %396, label %397, label %401

397:                                              ; preds = %393
  %398 = ptrtoint %"class.base::ModuleCache::Module"* %394 to i64
  %399 = bitcast %"class.base::ModuleCache::Module"** %216 to i64*
  store i64 %398, i64* %399, align 8
  %400 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %215, i64 1
  br label %405

401:                                              ; preds = %393
  %402 = ptrtoint %"class.base::ModuleCache::Module"* %395 to i64
  %403 = bitcast %"class.base::ModuleCache::Module"** %216 to i64*
  store i64 %402, i64* %403, align 8
  %404 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %214, i64 1
  br label %405

405:                                              ; preds = %401, %397
  %406 = phi %"class.base::ModuleCache::Module"** [ %400, %397 ], [ %215, %401 ]
  %407 = phi %"class.base::ModuleCache::Module"** [ %214, %397 ], [ %404, %401 ]
  %408 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %216, i64 1
  %409 = icmp eq %"class.base::ModuleCache::Module"** %407, %80
  br i1 %409, label %82, label %213

410:                                              ; preds = %116, %410
  %411 = phi %"class.base::ModuleCache::Module"** [ %451, %410 ], [ %117, %116 ]
  %412 = phi %"class.base::ModuleCache::Module"** [ %452, %410 ], [ %118, %116 ]
  %413 = bitcast %"class.base::ModuleCache::Module"** %411 to i64*
  %414 = load i64, i64* %413, align 8
  %415 = bitcast %"class.base::ModuleCache::Module"** %412 to i64*
  store i64 %414, i64* %415, align 8
  %416 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %411, i64 1
  %417 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %412, i64 1
  %418 = bitcast %"class.base::ModuleCache::Module"** %416 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"class.base::ModuleCache::Module"** %417 to i64*
  store i64 %419, i64* %420, align 8
  %421 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %411, i64 2
  %422 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %412, i64 2
  %423 = bitcast %"class.base::ModuleCache::Module"** %421 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"class.base::ModuleCache::Module"** %422 to i64*
  store i64 %424, i64* %425, align 8
  %426 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %411, i64 3
  %427 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %412, i64 3
  %428 = bitcast %"class.base::ModuleCache::Module"** %426 to i64*
  %429 = load i64, i64* %428, align 8
  %430 = bitcast %"class.base::ModuleCache::Module"** %427 to i64*
  store i64 %429, i64* %430, align 8
  %431 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %411, i64 4
  %432 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %412, i64 4
  %433 = bitcast %"class.base::ModuleCache::Module"** %431 to i64*
  %434 = load i64, i64* %433, align 8
  %435 = bitcast %"class.base::ModuleCache::Module"** %432 to i64*
  store i64 %434, i64* %435, align 8
  %436 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %411, i64 5
  %437 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %412, i64 5
  %438 = bitcast %"class.base::ModuleCache::Module"** %436 to i64*
  %439 = load i64, i64* %438, align 8
  %440 = bitcast %"class.base::ModuleCache::Module"** %437 to i64*
  store i64 %439, i64* %440, align 8
  %441 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %411, i64 6
  %442 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %412, i64 6
  %443 = bitcast %"class.base::ModuleCache::Module"** %441 to i64*
  %444 = load i64, i64* %443, align 8
  %445 = bitcast %"class.base::ModuleCache::Module"** %442 to i64*
  store i64 %444, i64* %445, align 8
  %446 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %411, i64 7
  %447 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %412, i64 7
  %448 = bitcast %"class.base::ModuleCache::Module"** %446 to i64*
  %449 = load i64, i64* %448, align 8
  %450 = bitcast %"class.base::ModuleCache::Module"** %447 to i64*
  store i64 %449, i64* %450, align 8
  %451 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %411, i64 8
  %452 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %412, i64 8
  %453 = icmp eq %"class.base::ModuleCache::Module"** %451, %81
  br i1 %453, label %456, label %410, !llvm.loop !40

454:                                              ; preds = %74
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIPKNS1_11ModuleCache6ModuleENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_T_NS_15iterator_traitsISL_E15difference_typeEPNSO_10value_typeEl(%"class.base::ModuleCache::Module"** %0, %"class.base::ModuleCache::Module"** %76, %"struct.base::internal::flat_tree<const base::ModuleCache::Module *, base::identity, std::__1::less<void>, std::__1::vector<const base::ModuleCache::Module *, std::__1::allocator<const base::ModuleCache::Module *> > >::value_compare"* dereferenceable(1) %2, i64 %75, %"class.base::ModuleCache::Module"** %4, i64 %5)
  %455 = sub nsw i64 %3, %75
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIPKNS1_11ModuleCache6ModuleENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_T_NS_15iterator_traitsISL_E15difference_typeEPNSO_10value_typeEl(%"class.base::ModuleCache::Module"** %76, %"class.base::ModuleCache::Module"** %1, %"struct.base::internal::flat_tree<const base::ModuleCache::Module *, base::identity, std::__1::less<void>, std::__1::vector<const base::ModuleCache::Module *, std::__1::allocator<const base::ModuleCache::Module *> > >::value_compare"* dereferenceable(1) %2, i64 %455, %"class.base::ModuleCache::Module"** %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIPKNS1_11ModuleCache6ModuleENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_SL_T_NS_15iterator_traitsISL_E15difference_typeESP_PNSO_10value_typeEl(%"class.base::ModuleCache::Module"** %0, %"class.base::ModuleCache::Module"** %76, %"class.base::ModuleCache::Module"** %1, %"struct.base::internal::flat_tree<const base::ModuleCache::Module *, base::identity, std::__1::less<void>, std::__1::vector<const base::ModuleCache::Module *, std::__1::allocator<const base::ModuleCache::Module *> > >::value_compare"* dereferenceable(1) %2, i64 %75, i64 %455, %"class.base::ModuleCache::Module"** %4, i64 %5)
  ret void

456:                                              ; preds = %116, %410, %345, %349, %48, %468, %211, %320, %218, %82, %22, %20, %8, %13, %6, %6
  ret void

457:                                              ; preds = %63
  %458 = inttoptr i64 %68 to %"class.base::ModuleCache::Module"*
  br label %459

459:                                              ; preds = %464, %457
  %460 = phi %"class.base::ModuleCache::Module"** [ %66, %457 ], [ %461, %464 ]
  %461 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %460, i64 -1
  %462 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %461, align 8
  %463 = icmp ugt %"class.base::ModuleCache::Module"* %462, %458
  br i1 %463, label %464, label %468

464:                                              ; preds = %459
  %465 = ptrtoint %"class.base::ModuleCache::Module"* %462 to i64
  %466 = bitcast %"class.base::ModuleCache::Module"** %460 to i64*
  store i64 %465, i64* %466, align 8
  %467 = icmp eq %"class.base::ModuleCache::Module"** %461, %0
  br i1 %467, label %468, label %459

468:                                              ; preds = %459, %464, %63
  %469 = phi %"class.base::ModuleCache::Module"** [ %0, %63 ], [ %460, %459 ], [ %0, %464 ]
  %470 = bitcast %"class.base::ModuleCache::Module"** %469 to i64*
  store i64 %68, i64* %470, align 8
  %471 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %52, i64 2
  %472 = icmp eq %"class.base::ModuleCache::Module"** %471, %1
  br i1 %472, label %456, label %51
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIPKNS1_11ModuleCache6ModuleENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_T_NS_15iterator_traitsISL_E15difference_typeEPNSO_10value_typeE(%"class.base::ModuleCache::Module"**, %"class.base::ModuleCache::Module"**, %"struct.base::internal::flat_tree<const base::ModuleCache::Module *, base::identity, std::__1::less<void>, std::__1::vector<const base::ModuleCache::Module *, std::__1::allocator<const base::ModuleCache::Module *> > >::value_compare"* dereferenceable(1), i64, %"class.base::ModuleCache::Module"**) local_unnamed_addr #0 comdat {
  switch i64 %3, label %29 [
    i64 0, label %454
    i64 1, label %6
    i64 2, label %10
  ]

6:                                                ; preds = %5
  %7 = bitcast %"class.base::ModuleCache::Module"** %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::ModuleCache::Module"** %4 to i64*
  store i64 %8, i64* %9, align 8
  br label %454

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %1, i64 -1
  %12 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %11, align 8
  %13 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %0, align 8
  %14 = icmp ult %"class.base::ModuleCache::Module"* %12, %13
  br i1 %14, label %15, label %22

15:                                               ; preds = %10
  %16 = ptrtoint %"class.base::ModuleCache::Module"* %12 to i64
  %17 = bitcast %"class.base::ModuleCache::Module"** %4 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %4, i64 1
  %19 = bitcast %"class.base::ModuleCache::Module"** %0 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.base::ModuleCache::Module"** %18 to i64*
  store i64 %20, i64* %21, align 8
  br label %454

22:                                               ; preds = %10
  %23 = ptrtoint %"class.base::ModuleCache::Module"* %13 to i64
  %24 = bitcast %"class.base::ModuleCache::Module"** %4 to i64*
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %4, i64 1
  %26 = bitcast %"class.base::ModuleCache::Module"** %11 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.base::ModuleCache::Module"** %25 to i64*
  store i64 %27, i64* %28, align 8
  br label %454

29:                                               ; preds = %5
  %30 = icmp slt i64 %3, 9
  br i1 %30, label %31, label %77

31:                                               ; preds = %29
  %32 = icmp eq %"class.base::ModuleCache::Module"** %0, %1
  br i1 %32, label %454, label %33

33:                                               ; preds = %31
  %34 = bitcast %"class.base::ModuleCache::Module"** %0 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.base::ModuleCache::Module"** %4 to i64*
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %0, i64 1
  %38 = icmp eq %"class.base::ModuleCache::Module"** %37, %1
  br i1 %38, label %454, label %39

39:                                               ; preds = %33
  %40 = inttoptr i64 %35 to %"class.base::ModuleCache::Module"*
  br label %41

41:                                               ; preds = %74, %39
  %42 = phi i64 [ %76, %74 ], [ %35, %39 ]
  %43 = phi %"class.base::ModuleCache::Module"* [ %75, %74 ], [ %40, %39 ]
  %44 = phi %"class.base::ModuleCache::Module"** [ %72, %74 ], [ %37, %39 ]
  %45 = phi %"class.base::ModuleCache::Module"** [ %46, %74 ], [ %4, %39 ]
  %46 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %45, i64 1
  %47 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %44, align 8
  %48 = icmp ult %"class.base::ModuleCache::Module"* %47, %43
  br i1 %48, label %49, label %68

49:                                               ; preds = %41
  %50 = bitcast %"class.base::ModuleCache::Module"** %46 to i64*
  store i64 %42, i64* %50, align 8
  %51 = icmp eq %"class.base::ModuleCache::Module"** %45, %4
  br i1 %51, label %64, label %52

52:                                               ; preds = %49, %60
  %53 = phi %"class.base::ModuleCache::Module"** [ %54, %60 ], [ %45, %49 ]
  %54 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %53, i64 -1
  %55 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %44, align 8
  %56 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %54, align 8
  %57 = icmp ult %"class.base::ModuleCache::Module"* %55, %56
  br i1 %57, label %60, label %58

58:                                               ; preds = %52
  %59 = bitcast %"class.base::ModuleCache::Module"** %53 to i64*
  br label %64

60:                                               ; preds = %52
  %61 = ptrtoint %"class.base::ModuleCache::Module"* %56 to i64
  %62 = bitcast %"class.base::ModuleCache::Module"** %53 to i64*
  store i64 %61, i64* %62, align 8
  %63 = icmp eq %"class.base::ModuleCache::Module"** %54, %4
  br i1 %63, label %64, label %52

64:                                               ; preds = %60, %58, %49
  %65 = phi i64* [ %36, %49 ], [ %59, %58 ], [ %36, %60 ]
  %66 = bitcast %"class.base::ModuleCache::Module"** %44 to i64*
  %67 = load i64, i64* %66, align 8
  store i64 %67, i64* %65, align 8
  br label %71

68:                                               ; preds = %41
  %69 = ptrtoint %"class.base::ModuleCache::Module"* %47 to i64
  %70 = bitcast %"class.base::ModuleCache::Module"** %46 to i64*
  store i64 %69, i64* %70, align 8
  br label %71

71:                                               ; preds = %68, %64
  %72 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %44, i64 1
  %73 = icmp eq %"class.base::ModuleCache::Module"** %72, %1
  br i1 %73, label %454, label %74

74:                                               ; preds = %71
  %75 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %46, align 8
  %76 = ptrtoint %"class.base::ModuleCache::Module"* %75 to i64
  br label %41

77:                                               ; preds = %29
  %78 = lshr i64 %3, 1
  %79 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %0, i64 %78
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIPKNS1_11ModuleCache6ModuleENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_T_NS_15iterator_traitsISL_E15difference_typeEPNSO_10value_typeEl(%"class.base::ModuleCache::Module"** %0, %"class.base::ModuleCache::Module"** %79, %"struct.base::internal::flat_tree<const base::ModuleCache::Module *, base::identity, std::__1::less<void>, std::__1::vector<const base::ModuleCache::Module *, std::__1::allocator<const base::ModuleCache::Module *> > >::value_compare"* dereferenceable(1) %2, i64 %78, %"class.base::ModuleCache::Module"** %4, i64 %78)
  %80 = sub nsw i64 %3, %78
  %81 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %4, i64 %78
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIPKNS1_11ModuleCache6ModuleENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_T_NS_15iterator_traitsISL_E15difference_typeEPNSO_10value_typeEl(%"class.base::ModuleCache::Module"** %79, %"class.base::ModuleCache::Module"** %1, %"struct.base::internal::flat_tree<const base::ModuleCache::Module *, base::identity, std::__1::less<void>, std::__1::vector<const base::ModuleCache::Module *, std::__1::allocator<const base::ModuleCache::Module *> > >::value_compare"* dereferenceable(1) %2, i64 %80, %"class.base::ModuleCache::Module"** %81, i64 %80)
  %82 = icmp eq i64 %78, 0
  br i1 %82, label %83, label %257

83:                                               ; preds = %449, %77
  %84 = phi %"class.base::ModuleCache::Module"** [ %79, %77 ], [ %450, %449 ]
  %85 = phi %"class.base::ModuleCache::Module"** [ %4, %77 ], [ %452, %449 ]
  %86 = ptrtoint %"class.base::ModuleCache::Module"** %84 to i64
  %87 = icmp eq %"class.base::ModuleCache::Module"** %84, %1
  br i1 %87, label %454, label %88

88:                                               ; preds = %83
  %89 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %1, i64 -1
  %90 = ptrtoint %"class.base::ModuleCache::Module"** %89 to i64
  %91 = sub i64 %90, %86
  %92 = lshr i64 %91, 3
  %93 = add nuw nsw i64 %92, 1
  %94 = icmp ult i64 %93, 4
  br i1 %94, label %187, label %95

95:                                               ; preds = %88
  %96 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %1, i64 -1
  %97 = ptrtoint %"class.base::ModuleCache::Module"** %96 to i64
  %98 = sub i64 %97, %86
  %99 = lshr i64 %98, 3
  %100 = add nuw nsw i64 %99, 1
  %101 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %85, i64 %100
  %102 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %84, i64 %100
  %103 = icmp ult %"class.base::ModuleCache::Module"** %85, %102
  %104 = icmp ult %"class.base::ModuleCache::Module"** %84, %101
  %105 = and i1 %103, %104
  br i1 %105, label %187, label %106

106:                                              ; preds = %95
  %107 = and i64 %93, 4611686018427387900
  %108 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %85, i64 %107
  %109 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %84, i64 %107
  %110 = add nsw i64 %107, -4
  %111 = lshr exact i64 %110, 2
  %112 = add nuw nsw i64 %111, 1
  %113 = and i64 %112, 3
  %114 = icmp ult i64 %110, 12
  br i1 %114, label %166, label %115

115:                                              ; preds = %106
  %116 = sub nsw i64 %112, %113
  br label %117

117:                                              ; preds = %117, %115
  %118 = phi i64 [ 0, %115 ], [ %163, %117 ]
  %119 = phi i64 [ %116, %115 ], [ %164, %117 ]
  %120 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %85, i64 %118
  %121 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %84, i64 %118
  %122 = bitcast %"class.base::ModuleCache::Module"** %121 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 8, !alias.scope !41
  %124 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %121, i64 2
  %125 = bitcast %"class.base::ModuleCache::Module"** %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8, !alias.scope !41
  %127 = bitcast %"class.base::ModuleCache::Module"** %120 to <2 x i64>*
  store <2 x i64> %123, <2 x i64>* %127, align 8, !alias.scope !44, !noalias !41
  %128 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %120, i64 2
  %129 = bitcast %"class.base::ModuleCache::Module"** %128 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %129, align 8, !alias.scope !44, !noalias !41
  %130 = or i64 %118, 4
  %131 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %85, i64 %130
  %132 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %84, i64 %130
  %133 = bitcast %"class.base::ModuleCache::Module"** %132 to <2 x i64>*
  %134 = load <2 x i64>, <2 x i64>* %133, align 8, !alias.scope !41
  %135 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %132, i64 2
  %136 = bitcast %"class.base::ModuleCache::Module"** %135 to <2 x i64>*
  %137 = load <2 x i64>, <2 x i64>* %136, align 8, !alias.scope !41
  %138 = bitcast %"class.base::ModuleCache::Module"** %131 to <2 x i64>*
  store <2 x i64> %134, <2 x i64>* %138, align 8, !alias.scope !44, !noalias !41
  %139 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %131, i64 2
  %140 = bitcast %"class.base::ModuleCache::Module"** %139 to <2 x i64>*
  store <2 x i64> %137, <2 x i64>* %140, align 8, !alias.scope !44, !noalias !41
  %141 = or i64 %118, 8
  %142 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %85, i64 %141
  %143 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %84, i64 %141
  %144 = bitcast %"class.base::ModuleCache::Module"** %143 to <2 x i64>*
  %145 = load <2 x i64>, <2 x i64>* %144, align 8, !alias.scope !41
  %146 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %143, i64 2
  %147 = bitcast %"class.base::ModuleCache::Module"** %146 to <2 x i64>*
  %148 = load <2 x i64>, <2 x i64>* %147, align 8, !alias.scope !41
  %149 = bitcast %"class.base::ModuleCache::Module"** %142 to <2 x i64>*
  store <2 x i64> %145, <2 x i64>* %149, align 8, !alias.scope !44, !noalias !41
  %150 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %142, i64 2
  %151 = bitcast %"class.base::ModuleCache::Module"** %150 to <2 x i64>*
  store <2 x i64> %148, <2 x i64>* %151, align 8, !alias.scope !44, !noalias !41
  %152 = or i64 %118, 12
  %153 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %85, i64 %152
  %154 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %84, i64 %152
  %155 = bitcast %"class.base::ModuleCache::Module"** %154 to <2 x i64>*
  %156 = load <2 x i64>, <2 x i64>* %155, align 8, !alias.scope !41
  %157 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %154, i64 2
  %158 = bitcast %"class.base::ModuleCache::Module"** %157 to <2 x i64>*
  %159 = load <2 x i64>, <2 x i64>* %158, align 8, !alias.scope !41
  %160 = bitcast %"class.base::ModuleCache::Module"** %153 to <2 x i64>*
  store <2 x i64> %156, <2 x i64>* %160, align 8, !alias.scope !44, !noalias !41
  %161 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %153, i64 2
  %162 = bitcast %"class.base::ModuleCache::Module"** %161 to <2 x i64>*
  store <2 x i64> %159, <2 x i64>* %162, align 8, !alias.scope !44, !noalias !41
  %163 = add i64 %118, 16
  %164 = add i64 %119, -4
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %166, label %117, !llvm.loop !46

166:                                              ; preds = %117, %106
  %167 = phi i64 [ 0, %106 ], [ %163, %117 ]
  %168 = icmp eq i64 %113, 0
  br i1 %168, label %185, label %169

169:                                              ; preds = %166, %169
  %170 = phi i64 [ %182, %169 ], [ %167, %166 ]
  %171 = phi i64 [ %183, %169 ], [ %113, %166 ]
  %172 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %85, i64 %170
  %173 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %84, i64 %170
  %174 = bitcast %"class.base::ModuleCache::Module"** %173 to <2 x i64>*
  %175 = load <2 x i64>, <2 x i64>* %174, align 8, !alias.scope !41
  %176 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %173, i64 2
  %177 = bitcast %"class.base::ModuleCache::Module"** %176 to <2 x i64>*
  %178 = load <2 x i64>, <2 x i64>* %177, align 8, !alias.scope !41
  %179 = bitcast %"class.base::ModuleCache::Module"** %172 to <2 x i64>*
  store <2 x i64> %175, <2 x i64>* %179, align 8, !alias.scope !44, !noalias !41
  %180 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %172, i64 2
  %181 = bitcast %"class.base::ModuleCache::Module"** %180 to <2 x i64>*
  store <2 x i64> %178, <2 x i64>* %181, align 8, !alias.scope !44, !noalias !41
  %182 = add i64 %170, 4
  %183 = add i64 %171, -1
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %185, label %169, !llvm.loop !47

185:                                              ; preds = %169, %166
  %186 = icmp eq i64 %93, %107
  br i1 %186, label %454, label %187

187:                                              ; preds = %185, %95, %88
  %188 = phi %"class.base::ModuleCache::Module"** [ %85, %95 ], [ %85, %88 ], [ %108, %185 ]
  %189 = phi %"class.base::ModuleCache::Module"** [ %84, %95 ], [ %84, %88 ], [ %109, %185 ]
  %190 = ptrtoint %"class.base::ModuleCache::Module"** %189 to i64
  %191 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %1, i64 -1
  %192 = ptrtoint %"class.base::ModuleCache::Module"** %191 to i64
  %193 = sub i64 %192, %190
  %194 = lshr i64 %193, 3
  %195 = add nuw nsw i64 %194, 1
  %196 = and i64 %195, 7
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %209, label %198

198:                                              ; preds = %187, %198
  %199 = phi %"class.base::ModuleCache::Module"** [ %206, %198 ], [ %188, %187 ]
  %200 = phi %"class.base::ModuleCache::Module"** [ %205, %198 ], [ %189, %187 ]
  %201 = phi i64 [ %207, %198 ], [ %196, %187 ]
  %202 = bitcast %"class.base::ModuleCache::Module"** %200 to i64*
  %203 = load i64, i64* %202, align 8
  %204 = bitcast %"class.base::ModuleCache::Module"** %199 to i64*
  store i64 %203, i64* %204, align 8
  %205 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %200, i64 1
  %206 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %199, i64 1
  %207 = add i64 %201, -1
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %209, label %198, !llvm.loop !48

209:                                              ; preds = %198, %187
  %210 = phi %"class.base::ModuleCache::Module"** [ %188, %187 ], [ %206, %198 ]
  %211 = phi %"class.base::ModuleCache::Module"** [ %189, %187 ], [ %205, %198 ]
  %212 = icmp ult i64 %193, 56
  br i1 %212, label %454, label %213

213:                                              ; preds = %209, %213
  %214 = phi %"class.base::ModuleCache::Module"** [ %255, %213 ], [ %210, %209 ]
  %215 = phi %"class.base::ModuleCache::Module"** [ %254, %213 ], [ %211, %209 ]
  %216 = bitcast %"class.base::ModuleCache::Module"** %215 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = bitcast %"class.base::ModuleCache::Module"** %214 to i64*
  store i64 %217, i64* %218, align 8
  %219 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %215, i64 1
  %220 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %214, i64 1
  %221 = bitcast %"class.base::ModuleCache::Module"** %219 to i64*
  %222 = load i64, i64* %221, align 8
  %223 = bitcast %"class.base::ModuleCache::Module"** %220 to i64*
  store i64 %222, i64* %223, align 8
  %224 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %215, i64 2
  %225 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %214, i64 2
  %226 = bitcast %"class.base::ModuleCache::Module"** %224 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = bitcast %"class.base::ModuleCache::Module"** %225 to i64*
  store i64 %227, i64* %228, align 8
  %229 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %215, i64 3
  %230 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %214, i64 3
  %231 = bitcast %"class.base::ModuleCache::Module"** %229 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = bitcast %"class.base::ModuleCache::Module"** %230 to i64*
  store i64 %232, i64* %233, align 8
  %234 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %215, i64 4
  %235 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %214, i64 4
  %236 = bitcast %"class.base::ModuleCache::Module"** %234 to i64*
  %237 = load i64, i64* %236, align 8
  %238 = bitcast %"class.base::ModuleCache::Module"** %235 to i64*
  store i64 %237, i64* %238, align 8
  %239 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %215, i64 5
  %240 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %214, i64 5
  %241 = bitcast %"class.base::ModuleCache::Module"** %239 to i64*
  %242 = load i64, i64* %241, align 8
  %243 = bitcast %"class.base::ModuleCache::Module"** %240 to i64*
  store i64 %242, i64* %243, align 8
  %244 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %215, i64 6
  %245 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %214, i64 6
  %246 = bitcast %"class.base::ModuleCache::Module"** %244 to i64*
  %247 = load i64, i64* %246, align 8
  %248 = bitcast %"class.base::ModuleCache::Module"** %245 to i64*
  store i64 %247, i64* %248, align 8
  %249 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %215, i64 7
  %250 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %214, i64 7
  %251 = bitcast %"class.base::ModuleCache::Module"** %249 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = bitcast %"class.base::ModuleCache::Module"** %250 to i64*
  store i64 %252, i64* %253, align 8
  %254 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %215, i64 8
  %255 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %214, i64 8
  %256 = icmp eq %"class.base::ModuleCache::Module"** %254, %1
  br i1 %256, label %454, label %213, !llvm.loop !49

257:                                              ; preds = %77, %449
  %258 = phi %"class.base::ModuleCache::Module"** [ %452, %449 ], [ %4, %77 ]
  %259 = phi %"class.base::ModuleCache::Module"** [ %451, %449 ], [ %0, %77 ]
  %260 = phi %"class.base::ModuleCache::Module"** [ %450, %449 ], [ %79, %77 ]
  %261 = icmp eq %"class.base::ModuleCache::Module"** %260, %1
  br i1 %261, label %262, label %437

262:                                              ; preds = %257
  %263 = ptrtoint %"class.base::ModuleCache::Module"** %259 to i64
  %264 = icmp eq %"class.base::ModuleCache::Module"** %259, %79
  br i1 %264, label %454, label %265

265:                                              ; preds = %262
  %266 = add nsw i64 %78, -1
  %267 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %0, i64 %266
  %268 = ptrtoint %"class.base::ModuleCache::Module"** %267 to i64
  %269 = sub i64 %268, %263
  %270 = lshr i64 %269, 3
  %271 = add nuw nsw i64 %270, 1
  %272 = icmp ult i64 %271, 4
  br i1 %272, label %366, label %273

273:                                              ; preds = %265
  %274 = add nsw i64 %78, -1
  %275 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %0, i64 %274
  %276 = ptrtoint %"class.base::ModuleCache::Module"** %275 to i64
  %277 = sub i64 %276, %263
  %278 = lshr i64 %277, 3
  %279 = add nuw nsw i64 %278, 1
  %280 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %258, i64 %279
  %281 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %259, i64 %279
  %282 = icmp ult %"class.base::ModuleCache::Module"** %258, %281
  %283 = icmp ult %"class.base::ModuleCache::Module"** %259, %280
  %284 = and i1 %282, %283
  br i1 %284, label %366, label %285

285:                                              ; preds = %273
  %286 = and i64 %271, 4611686018427387900
  %287 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %258, i64 %286
  %288 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %259, i64 %286
  %289 = add nsw i64 %286, -4
  %290 = lshr exact i64 %289, 2
  %291 = add nuw nsw i64 %290, 1
  %292 = and i64 %291, 3
  %293 = icmp ult i64 %289, 12
  br i1 %293, label %345, label %294

294:                                              ; preds = %285
  %295 = sub nsw i64 %291, %292
  br label %296

296:                                              ; preds = %296, %294
  %297 = phi i64 [ 0, %294 ], [ %342, %296 ]
  %298 = phi i64 [ %295, %294 ], [ %343, %296 ]
  %299 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %258, i64 %297
  %300 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %259, i64 %297
  %301 = bitcast %"class.base::ModuleCache::Module"** %300 to <2 x i64>*
  %302 = load <2 x i64>, <2 x i64>* %301, align 8, !alias.scope !50
  %303 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %300, i64 2
  %304 = bitcast %"class.base::ModuleCache::Module"** %303 to <2 x i64>*
  %305 = load <2 x i64>, <2 x i64>* %304, align 8, !alias.scope !50
  %306 = bitcast %"class.base::ModuleCache::Module"** %299 to <2 x i64>*
  store <2 x i64> %302, <2 x i64>* %306, align 8, !alias.scope !53, !noalias !50
  %307 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %299, i64 2
  %308 = bitcast %"class.base::ModuleCache::Module"** %307 to <2 x i64>*
  store <2 x i64> %305, <2 x i64>* %308, align 8, !alias.scope !53, !noalias !50
  %309 = or i64 %297, 4
  %310 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %258, i64 %309
  %311 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %259, i64 %309
  %312 = bitcast %"class.base::ModuleCache::Module"** %311 to <2 x i64>*
  %313 = load <2 x i64>, <2 x i64>* %312, align 8, !alias.scope !50
  %314 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %311, i64 2
  %315 = bitcast %"class.base::ModuleCache::Module"** %314 to <2 x i64>*
  %316 = load <2 x i64>, <2 x i64>* %315, align 8, !alias.scope !50
  %317 = bitcast %"class.base::ModuleCache::Module"** %310 to <2 x i64>*
  store <2 x i64> %313, <2 x i64>* %317, align 8, !alias.scope !53, !noalias !50
  %318 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %310, i64 2
  %319 = bitcast %"class.base::ModuleCache::Module"** %318 to <2 x i64>*
  store <2 x i64> %316, <2 x i64>* %319, align 8, !alias.scope !53, !noalias !50
  %320 = or i64 %297, 8
  %321 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %258, i64 %320
  %322 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %259, i64 %320
  %323 = bitcast %"class.base::ModuleCache::Module"** %322 to <2 x i64>*
  %324 = load <2 x i64>, <2 x i64>* %323, align 8, !alias.scope !50
  %325 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %322, i64 2
  %326 = bitcast %"class.base::ModuleCache::Module"** %325 to <2 x i64>*
  %327 = load <2 x i64>, <2 x i64>* %326, align 8, !alias.scope !50
  %328 = bitcast %"class.base::ModuleCache::Module"** %321 to <2 x i64>*
  store <2 x i64> %324, <2 x i64>* %328, align 8, !alias.scope !53, !noalias !50
  %329 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %321, i64 2
  %330 = bitcast %"class.base::ModuleCache::Module"** %329 to <2 x i64>*
  store <2 x i64> %327, <2 x i64>* %330, align 8, !alias.scope !53, !noalias !50
  %331 = or i64 %297, 12
  %332 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %258, i64 %331
  %333 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %259, i64 %331
  %334 = bitcast %"class.base::ModuleCache::Module"** %333 to <2 x i64>*
  %335 = load <2 x i64>, <2 x i64>* %334, align 8, !alias.scope !50
  %336 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %333, i64 2
  %337 = bitcast %"class.base::ModuleCache::Module"** %336 to <2 x i64>*
  %338 = load <2 x i64>, <2 x i64>* %337, align 8, !alias.scope !50
  %339 = bitcast %"class.base::ModuleCache::Module"** %332 to <2 x i64>*
  store <2 x i64> %335, <2 x i64>* %339, align 8, !alias.scope !53, !noalias !50
  %340 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %332, i64 2
  %341 = bitcast %"class.base::ModuleCache::Module"** %340 to <2 x i64>*
  store <2 x i64> %338, <2 x i64>* %341, align 8, !alias.scope !53, !noalias !50
  %342 = add i64 %297, 16
  %343 = add i64 %298, -4
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %345, label %296, !llvm.loop !55

345:                                              ; preds = %296, %285
  %346 = phi i64 [ 0, %285 ], [ %342, %296 ]
  %347 = icmp eq i64 %292, 0
  br i1 %347, label %364, label %348

348:                                              ; preds = %345, %348
  %349 = phi i64 [ %361, %348 ], [ %346, %345 ]
  %350 = phi i64 [ %362, %348 ], [ %292, %345 ]
  %351 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %258, i64 %349
  %352 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %259, i64 %349
  %353 = bitcast %"class.base::ModuleCache::Module"** %352 to <2 x i64>*
  %354 = load <2 x i64>, <2 x i64>* %353, align 8, !alias.scope !50
  %355 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %352, i64 2
  %356 = bitcast %"class.base::ModuleCache::Module"** %355 to <2 x i64>*
  %357 = load <2 x i64>, <2 x i64>* %356, align 8, !alias.scope !50
  %358 = bitcast %"class.base::ModuleCache::Module"** %351 to <2 x i64>*
  store <2 x i64> %354, <2 x i64>* %358, align 8, !alias.scope !53, !noalias !50
  %359 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %351, i64 2
  %360 = bitcast %"class.base::ModuleCache::Module"** %359 to <2 x i64>*
  store <2 x i64> %357, <2 x i64>* %360, align 8, !alias.scope !53, !noalias !50
  %361 = add i64 %349, 4
  %362 = add i64 %350, -1
  %363 = icmp eq i64 %362, 0
  br i1 %363, label %364, label %348, !llvm.loop !56

364:                                              ; preds = %348, %345
  %365 = icmp eq i64 %271, %286
  br i1 %365, label %454, label %366

366:                                              ; preds = %364, %273, %265
  %367 = phi %"class.base::ModuleCache::Module"** [ %258, %273 ], [ %258, %265 ], [ %287, %364 ]
  %368 = phi %"class.base::ModuleCache::Module"** [ %259, %273 ], [ %259, %265 ], [ %288, %364 ]
  %369 = ptrtoint %"class.base::ModuleCache::Module"** %368 to i64
  %370 = add nsw i64 %78, -1
  %371 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %0, i64 %370
  %372 = ptrtoint %"class.base::ModuleCache::Module"** %371 to i64
  %373 = sub i64 %372, %369
  %374 = lshr i64 %373, 3
  %375 = add nuw nsw i64 %374, 1
  %376 = and i64 %375, 7
  %377 = icmp eq i64 %376, 0
  br i1 %377, label %389, label %378

378:                                              ; preds = %366, %378
  %379 = phi %"class.base::ModuleCache::Module"** [ %386, %378 ], [ %367, %366 ]
  %380 = phi %"class.base::ModuleCache::Module"** [ %385, %378 ], [ %368, %366 ]
  %381 = phi i64 [ %387, %378 ], [ %376, %366 ]
  %382 = bitcast %"class.base::ModuleCache::Module"** %380 to i64*
  %383 = load i64, i64* %382, align 8
  %384 = bitcast %"class.base::ModuleCache::Module"** %379 to i64*
  store i64 %383, i64* %384, align 8
  %385 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %380, i64 1
  %386 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %379, i64 1
  %387 = add i64 %381, -1
  %388 = icmp eq i64 %387, 0
  br i1 %388, label %389, label %378, !llvm.loop !57

389:                                              ; preds = %378, %366
  %390 = phi %"class.base::ModuleCache::Module"** [ %367, %366 ], [ %386, %378 ]
  %391 = phi %"class.base::ModuleCache::Module"** [ %368, %366 ], [ %385, %378 ]
  %392 = icmp ult i64 %373, 56
  br i1 %392, label %454, label %393

393:                                              ; preds = %389, %393
  %394 = phi %"class.base::ModuleCache::Module"** [ %435, %393 ], [ %390, %389 ]
  %395 = phi %"class.base::ModuleCache::Module"** [ %434, %393 ], [ %391, %389 ]
  %396 = bitcast %"class.base::ModuleCache::Module"** %395 to i64*
  %397 = load i64, i64* %396, align 8
  %398 = bitcast %"class.base::ModuleCache::Module"** %394 to i64*
  store i64 %397, i64* %398, align 8
  %399 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %395, i64 1
  %400 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %394, i64 1
  %401 = bitcast %"class.base::ModuleCache::Module"** %399 to i64*
  %402 = load i64, i64* %401, align 8
  %403 = bitcast %"class.base::ModuleCache::Module"** %400 to i64*
  store i64 %402, i64* %403, align 8
  %404 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %395, i64 2
  %405 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %394, i64 2
  %406 = bitcast %"class.base::ModuleCache::Module"** %404 to i64*
  %407 = load i64, i64* %406, align 8
  %408 = bitcast %"class.base::ModuleCache::Module"** %405 to i64*
  store i64 %407, i64* %408, align 8
  %409 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %395, i64 3
  %410 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %394, i64 3
  %411 = bitcast %"class.base::ModuleCache::Module"** %409 to i64*
  %412 = load i64, i64* %411, align 8
  %413 = bitcast %"class.base::ModuleCache::Module"** %410 to i64*
  store i64 %412, i64* %413, align 8
  %414 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %395, i64 4
  %415 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %394, i64 4
  %416 = bitcast %"class.base::ModuleCache::Module"** %414 to i64*
  %417 = load i64, i64* %416, align 8
  %418 = bitcast %"class.base::ModuleCache::Module"** %415 to i64*
  store i64 %417, i64* %418, align 8
  %419 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %395, i64 5
  %420 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %394, i64 5
  %421 = bitcast %"class.base::ModuleCache::Module"** %419 to i64*
  %422 = load i64, i64* %421, align 8
  %423 = bitcast %"class.base::ModuleCache::Module"** %420 to i64*
  store i64 %422, i64* %423, align 8
  %424 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %395, i64 6
  %425 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %394, i64 6
  %426 = bitcast %"class.base::ModuleCache::Module"** %424 to i64*
  %427 = load i64, i64* %426, align 8
  %428 = bitcast %"class.base::ModuleCache::Module"** %425 to i64*
  store i64 %427, i64* %428, align 8
  %429 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %395, i64 7
  %430 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %394, i64 7
  %431 = bitcast %"class.base::ModuleCache::Module"** %429 to i64*
  %432 = load i64, i64* %431, align 8
  %433 = bitcast %"class.base::ModuleCache::Module"** %430 to i64*
  store i64 %432, i64* %433, align 8
  %434 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %395, i64 8
  %435 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %394, i64 8
  %436 = icmp eq %"class.base::ModuleCache::Module"** %434, %79
  br i1 %436, label %454, label %393, !llvm.loop !58

437:                                              ; preds = %257
  %438 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %260, align 8
  %439 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %259, align 8
  %440 = icmp ult %"class.base::ModuleCache::Module"* %438, %439
  br i1 %440, label %441, label %445

441:                                              ; preds = %437
  %442 = ptrtoint %"class.base::ModuleCache::Module"* %438 to i64
  %443 = bitcast %"class.base::ModuleCache::Module"** %258 to i64*
  store i64 %442, i64* %443, align 8
  %444 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %260, i64 1
  br label %449

445:                                              ; preds = %437
  %446 = ptrtoint %"class.base::ModuleCache::Module"* %439 to i64
  %447 = bitcast %"class.base::ModuleCache::Module"** %258 to i64*
  store i64 %446, i64* %447, align 8
  %448 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %259, i64 1
  br label %449

449:                                              ; preds = %445, %441
  %450 = phi %"class.base::ModuleCache::Module"** [ %444, %441 ], [ %260, %445 ]
  %451 = phi %"class.base::ModuleCache::Module"** [ %259, %441 ], [ %448, %445 ]
  %452 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %258, i64 1
  %453 = icmp eq %"class.base::ModuleCache::Module"** %451, %79
  br i1 %453, label %83, label %257

454:                                              ; preds = %389, %393, %209, %213, %71, %364, %185, %262, %83, %33, %31, %15, %22, %5, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIPKNS1_11ModuleCache6ModuleENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_SL_T_NS_15iterator_traitsISL_E15difference_typeESP_PNSO_10value_typeEl(%"class.base::ModuleCache::Module"**, %"class.base::ModuleCache::Module"**, %"class.base::ModuleCache::Module"**, %"struct.base::internal::flat_tree<const base::ModuleCache::Module *, base::identity, std::__1::less<void>, std::__1::vector<const base::ModuleCache::Module *, std::__1::allocator<const base::ModuleCache::Module *> > >::value_compare"* dereferenceable(1), i64, i64, %"class.base::ModuleCache::Module"**, i64) local_unnamed_addr #0 comdat {
  %9 = ptrtoint %"class.base::ModuleCache::Module"** %6 to i64
  %10 = icmp eq i64 %5, 0
  br i1 %10, label %975, label %11

11:                                               ; preds = %8
  %12 = ptrtoint %"class.base::ModuleCache::Module"** %1 to i64
  %13 = ptrtoint %"class.base::ModuleCache::Module"** %0 to i64
  br label %14

14:                                               ; preds = %11, %968
  %15 = phi %"class.base::ModuleCache::Module"** [ %973, %968 ], [ %2, %11 ]
  %16 = phi i64 [ %972, %968 ], [ %4, %11 ]
  %17 = phi i64 [ %971, %968 ], [ %5, %11 ]
  %18 = phi i64 [ %970, %968 ], [ %12, %11 ]
  %19 = phi i64 [ %969, %968 ], [ %13, %11 ]
  %20 = icmp sgt i64 %16, %7
  %21 = icmp sgt i64 %17, %7
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %29

23:                                               ; preds = %14
  %24 = icmp eq i64 %16, 0
  br i1 %24, label %975, label %25

25:                                               ; preds = %23
  %26 = inttoptr i64 %18 to %"class.base::ModuleCache::Module"**
  %27 = inttoptr i64 %18 to i8*
  %28 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %26, align 8
  br label %610

29:                                               ; preds = %14
  %30 = inttoptr i64 %19 to %"class.base::ModuleCache::Module"**
  %31 = inttoptr i64 %19 to i8*
  %32 = inttoptr i64 %18 to %"class.base::ModuleCache::Module"**
  %33 = inttoptr i64 %18 to i8*
  %34 = icmp sgt i64 %16, %17
  br i1 %34, label %168, label %35

35:                                               ; preds = %29
  %36 = icmp eq %"class.base::ModuleCache::Module"** %30, %32
  br i1 %36, label %975, label %37

37:                                               ; preds = %35
  %38 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %32, i64 -1
  %39 = bitcast %"class.base::ModuleCache::Module"** %38 to i8*
  %40 = sub i64 0, %19
  %41 = getelementptr i8, i8* %39, i64 %40
  %42 = ptrtoint i8* %41 to i64
  %43 = lshr i64 %42, 3
  %44 = add nuw nsw i64 %43, 1
  %45 = icmp ult i64 %44, 4
  br i1 %45, label %46, label %73

46:                                               ; preds = %166, %73, %37
  %47 = phi %"class.base::ModuleCache::Module"** [ %6, %73 ], [ %6, %37 ], [ %89, %166 ]
  %48 = phi %"class.base::ModuleCache::Module"** [ %30, %73 ], [ %30, %37 ], [ %90, %166 ]
  %49 = ptrtoint %"class.base::ModuleCache::Module"** %48 to i64
  %50 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %32, i64 -1
  %51 = ptrtoint %"class.base::ModuleCache::Module"** %50 to i64
  %52 = sub i64 %51, %49
  %53 = lshr i64 %52, 3
  %54 = add nuw nsw i64 %53, 1
  %55 = and i64 %54, 7
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %68, label %57

57:                                               ; preds = %46, %57
  %58 = phi %"class.base::ModuleCache::Module"** [ %65, %57 ], [ %47, %46 ]
  %59 = phi %"class.base::ModuleCache::Module"** [ %64, %57 ], [ %48, %46 ]
  %60 = phi i64 [ %66, %57 ], [ %55, %46 ]
  %61 = bitcast %"class.base::ModuleCache::Module"** %59 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.base::ModuleCache::Module"** %58 to i64*
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %59, i64 1
  %65 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %58, i64 1
  %66 = add i64 %60, -1
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %57, !llvm.loop !59

68:                                               ; preds = %57, %46
  %69 = phi %"class.base::ModuleCache::Module"** [ undef, %46 ], [ %65, %57 ]
  %70 = phi %"class.base::ModuleCache::Module"** [ %47, %46 ], [ %65, %57 ]
  %71 = phi %"class.base::ModuleCache::Module"** [ %48, %46 ], [ %64, %57 ]
  %72 = icmp ult i64 %52, 56
  br i1 %72, label %301, label %334

73:                                               ; preds = %37
  %74 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %32, i64 -1
  %75 = bitcast %"class.base::ModuleCache::Module"** %74 to i8*
  %76 = sub i64 0, %19
  %77 = getelementptr i8, i8* %75, i64 %76
  %78 = ptrtoint i8* %77 to i64
  %79 = lshr i64 %78, 3
  %80 = add nuw nsw i64 %79, 1
  %81 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %6, i64 %80
  %82 = bitcast %"class.base::ModuleCache::Module"** %81 to i8*
  %83 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %30, i64 %80
  %84 = icmp ugt %"class.base::ModuleCache::Module"** %83, %6
  %85 = icmp ult i8* %31, %82
  %86 = and i1 %84, %85
  br i1 %86, label %46, label %87

87:                                               ; preds = %73
  %88 = and i64 %44, 4611686018427387900
  %89 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %6, i64 %88
  %90 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %30, i64 %88
  %91 = add nsw i64 %88, -4
  %92 = lshr exact i64 %91, 2
  %93 = add nuw nsw i64 %92, 1
  %94 = and i64 %93, 3
  %95 = icmp ult i64 %91, 12
  br i1 %95, label %147, label %96

96:                                               ; preds = %87
  %97 = sub nsw i64 %93, %94
  br label %98

98:                                               ; preds = %98, %96
  %99 = phi i64 [ 0, %96 ], [ %144, %98 ]
  %100 = phi i64 [ %97, %96 ], [ %145, %98 ]
  %101 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %6, i64 %99
  %102 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %30, i64 %99
  %103 = bitcast %"class.base::ModuleCache::Module"** %102 to <2 x i64>*
  %104 = load <2 x i64>, <2 x i64>* %103, align 8, !alias.scope !60
  %105 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %102, i64 2
  %106 = bitcast %"class.base::ModuleCache::Module"** %105 to <2 x i64>*
  %107 = load <2 x i64>, <2 x i64>* %106, align 8, !alias.scope !60
  %108 = bitcast %"class.base::ModuleCache::Module"** %101 to <2 x i64>*
  store <2 x i64> %104, <2 x i64>* %108, align 8, !alias.scope !63, !noalias !60
  %109 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %101, i64 2
  %110 = bitcast %"class.base::ModuleCache::Module"** %109 to <2 x i64>*
  store <2 x i64> %107, <2 x i64>* %110, align 8, !alias.scope !63, !noalias !60
  %111 = or i64 %99, 4
  %112 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %6, i64 %111
  %113 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %30, i64 %111
  %114 = bitcast %"class.base::ModuleCache::Module"** %113 to <2 x i64>*
  %115 = load <2 x i64>, <2 x i64>* %114, align 8, !alias.scope !60
  %116 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %113, i64 2
  %117 = bitcast %"class.base::ModuleCache::Module"** %116 to <2 x i64>*
  %118 = load <2 x i64>, <2 x i64>* %117, align 8, !alias.scope !60
  %119 = bitcast %"class.base::ModuleCache::Module"** %112 to <2 x i64>*
  store <2 x i64> %115, <2 x i64>* %119, align 8, !alias.scope !63, !noalias !60
  %120 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %112, i64 2
  %121 = bitcast %"class.base::ModuleCache::Module"** %120 to <2 x i64>*
  store <2 x i64> %118, <2 x i64>* %121, align 8, !alias.scope !63, !noalias !60
  %122 = or i64 %99, 8
  %123 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %6, i64 %122
  %124 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %30, i64 %122
  %125 = bitcast %"class.base::ModuleCache::Module"** %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8, !alias.scope !60
  %127 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %124, i64 2
  %128 = bitcast %"class.base::ModuleCache::Module"** %127 to <2 x i64>*
  %129 = load <2 x i64>, <2 x i64>* %128, align 8, !alias.scope !60
  %130 = bitcast %"class.base::ModuleCache::Module"** %123 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %130, align 8, !alias.scope !63, !noalias !60
  %131 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %123, i64 2
  %132 = bitcast %"class.base::ModuleCache::Module"** %131 to <2 x i64>*
  store <2 x i64> %129, <2 x i64>* %132, align 8, !alias.scope !63, !noalias !60
  %133 = or i64 %99, 12
  %134 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %6, i64 %133
  %135 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %30, i64 %133
  %136 = bitcast %"class.base::ModuleCache::Module"** %135 to <2 x i64>*
  %137 = load <2 x i64>, <2 x i64>* %136, align 8, !alias.scope !60
  %138 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %135, i64 2
  %139 = bitcast %"class.base::ModuleCache::Module"** %138 to <2 x i64>*
  %140 = load <2 x i64>, <2 x i64>* %139, align 8, !alias.scope !60
  %141 = bitcast %"class.base::ModuleCache::Module"** %134 to <2 x i64>*
  store <2 x i64> %137, <2 x i64>* %141, align 8, !alias.scope !63, !noalias !60
  %142 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %134, i64 2
  %143 = bitcast %"class.base::ModuleCache::Module"** %142 to <2 x i64>*
  store <2 x i64> %140, <2 x i64>* %143, align 8, !alias.scope !63, !noalias !60
  %144 = add i64 %99, 16
  %145 = add i64 %100, -4
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %147, label %98, !llvm.loop !65

147:                                              ; preds = %98, %87
  %148 = phi i64 [ 0, %87 ], [ %144, %98 ]
  %149 = icmp eq i64 %94, 0
  br i1 %149, label %166, label %150

150:                                              ; preds = %147, %150
  %151 = phi i64 [ %163, %150 ], [ %148, %147 ]
  %152 = phi i64 [ %164, %150 ], [ %94, %147 ]
  %153 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %6, i64 %151
  %154 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %30, i64 %151
  %155 = bitcast %"class.base::ModuleCache::Module"** %154 to <2 x i64>*
  %156 = load <2 x i64>, <2 x i64>* %155, align 8, !alias.scope !60
  %157 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %154, i64 2
  %158 = bitcast %"class.base::ModuleCache::Module"** %157 to <2 x i64>*
  %159 = load <2 x i64>, <2 x i64>* %158, align 8, !alias.scope !60
  %160 = bitcast %"class.base::ModuleCache::Module"** %153 to <2 x i64>*
  store <2 x i64> %156, <2 x i64>* %160, align 8, !alias.scope !63, !noalias !60
  %161 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %153, i64 2
  %162 = bitcast %"class.base::ModuleCache::Module"** %161 to <2 x i64>*
  store <2 x i64> %159, <2 x i64>* %162, align 8, !alias.scope !63, !noalias !60
  %163 = add i64 %151, 4
  %164 = add i64 %152, -1
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %166, label %150, !llvm.loop !66

166:                                              ; preds = %150, %147
  %167 = icmp eq i64 %44, %88
  br i1 %167, label %301, label %46

168:                                              ; preds = %29
  %169 = icmp eq %"class.base::ModuleCache::Module"** %15, %32
  br i1 %169, label %975, label %170

170:                                              ; preds = %168
  %171 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %15, i64 -1
  %172 = bitcast %"class.base::ModuleCache::Module"** %171 to i8*
  %173 = sub i64 0, %18
  %174 = getelementptr i8, i8* %172, i64 %173
  %175 = ptrtoint i8* %174 to i64
  %176 = lshr i64 %175, 3
  %177 = add nuw nsw i64 %176, 1
  %178 = icmp ult i64 %177, 4
  br i1 %178, label %179, label %206

179:                                              ; preds = %299, %206, %170
  %180 = phi %"class.base::ModuleCache::Module"** [ %6, %206 ], [ %6, %170 ], [ %222, %299 ]
  %181 = phi %"class.base::ModuleCache::Module"** [ %32, %206 ], [ %32, %170 ], [ %223, %299 ]
  %182 = ptrtoint %"class.base::ModuleCache::Module"** %181 to i64
  %183 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %15, i64 -1
  %184 = ptrtoint %"class.base::ModuleCache::Module"** %183 to i64
  %185 = sub i64 %184, %182
  %186 = lshr i64 %185, 3
  %187 = add nuw nsw i64 %186, 1
  %188 = and i64 %187, 7
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %201, label %190

190:                                              ; preds = %179, %190
  %191 = phi %"class.base::ModuleCache::Module"** [ %198, %190 ], [ %180, %179 ]
  %192 = phi %"class.base::ModuleCache::Module"** [ %197, %190 ], [ %181, %179 ]
  %193 = phi i64 [ %199, %190 ], [ %188, %179 ]
  %194 = bitcast %"class.base::ModuleCache::Module"** %192 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = bitcast %"class.base::ModuleCache::Module"** %191 to i64*
  store i64 %195, i64* %196, align 8
  %197 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %192, i64 1
  %198 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %191, i64 1
  %199 = add i64 %193, -1
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %201, label %190, !llvm.loop !67

201:                                              ; preds = %190, %179
  %202 = phi %"class.base::ModuleCache::Module"** [ undef, %179 ], [ %198, %190 ]
  %203 = phi %"class.base::ModuleCache::Module"** [ %180, %179 ], [ %198, %190 ]
  %204 = phi %"class.base::ModuleCache::Module"** [ %181, %179 ], [ %197, %190 ]
  %205 = icmp ult i64 %185, 56
  br i1 %205, label %378, label %566

206:                                              ; preds = %170
  %207 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %15, i64 -1
  %208 = bitcast %"class.base::ModuleCache::Module"** %207 to i8*
  %209 = sub i64 0, %18
  %210 = getelementptr i8, i8* %208, i64 %209
  %211 = ptrtoint i8* %210 to i64
  %212 = lshr i64 %211, 3
  %213 = add nuw nsw i64 %212, 1
  %214 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %6, i64 %213
  %215 = bitcast %"class.base::ModuleCache::Module"** %214 to i8*
  %216 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %32, i64 %213
  %217 = icmp ugt %"class.base::ModuleCache::Module"** %216, %6
  %218 = icmp ult i8* %33, %215
  %219 = and i1 %217, %218
  br i1 %219, label %179, label %220

220:                                              ; preds = %206
  %221 = and i64 %177, 4611686018427387900
  %222 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %6, i64 %221
  %223 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %32, i64 %221
  %224 = add nsw i64 %221, -4
  %225 = lshr exact i64 %224, 2
  %226 = add nuw nsw i64 %225, 1
  %227 = and i64 %226, 3
  %228 = icmp ult i64 %224, 12
  br i1 %228, label %280, label %229

229:                                              ; preds = %220
  %230 = sub nsw i64 %226, %227
  br label %231

231:                                              ; preds = %231, %229
  %232 = phi i64 [ 0, %229 ], [ %277, %231 ]
  %233 = phi i64 [ %230, %229 ], [ %278, %231 ]
  %234 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %6, i64 %232
  %235 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %32, i64 %232
  %236 = bitcast %"class.base::ModuleCache::Module"** %235 to <2 x i64>*
  %237 = load <2 x i64>, <2 x i64>* %236, align 8, !alias.scope !68
  %238 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %235, i64 2
  %239 = bitcast %"class.base::ModuleCache::Module"** %238 to <2 x i64>*
  %240 = load <2 x i64>, <2 x i64>* %239, align 8, !alias.scope !68
  %241 = bitcast %"class.base::ModuleCache::Module"** %234 to <2 x i64>*
  store <2 x i64> %237, <2 x i64>* %241, align 8, !alias.scope !71, !noalias !68
  %242 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %234, i64 2
  %243 = bitcast %"class.base::ModuleCache::Module"** %242 to <2 x i64>*
  store <2 x i64> %240, <2 x i64>* %243, align 8, !alias.scope !71, !noalias !68
  %244 = or i64 %232, 4
  %245 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %6, i64 %244
  %246 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %32, i64 %244
  %247 = bitcast %"class.base::ModuleCache::Module"** %246 to <2 x i64>*
  %248 = load <2 x i64>, <2 x i64>* %247, align 8, !alias.scope !68
  %249 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %246, i64 2
  %250 = bitcast %"class.base::ModuleCache::Module"** %249 to <2 x i64>*
  %251 = load <2 x i64>, <2 x i64>* %250, align 8, !alias.scope !68
  %252 = bitcast %"class.base::ModuleCache::Module"** %245 to <2 x i64>*
  store <2 x i64> %248, <2 x i64>* %252, align 8, !alias.scope !71, !noalias !68
  %253 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %245, i64 2
  %254 = bitcast %"class.base::ModuleCache::Module"** %253 to <2 x i64>*
  store <2 x i64> %251, <2 x i64>* %254, align 8, !alias.scope !71, !noalias !68
  %255 = or i64 %232, 8
  %256 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %6, i64 %255
  %257 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %32, i64 %255
  %258 = bitcast %"class.base::ModuleCache::Module"** %257 to <2 x i64>*
  %259 = load <2 x i64>, <2 x i64>* %258, align 8, !alias.scope !68
  %260 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %257, i64 2
  %261 = bitcast %"class.base::ModuleCache::Module"** %260 to <2 x i64>*
  %262 = load <2 x i64>, <2 x i64>* %261, align 8, !alias.scope !68
  %263 = bitcast %"class.base::ModuleCache::Module"** %256 to <2 x i64>*
  store <2 x i64> %259, <2 x i64>* %263, align 8, !alias.scope !71, !noalias !68
  %264 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %256, i64 2
  %265 = bitcast %"class.base::ModuleCache::Module"** %264 to <2 x i64>*
  store <2 x i64> %262, <2 x i64>* %265, align 8, !alias.scope !71, !noalias !68
  %266 = or i64 %232, 12
  %267 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %6, i64 %266
  %268 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %32, i64 %266
  %269 = bitcast %"class.base::ModuleCache::Module"** %268 to <2 x i64>*
  %270 = load <2 x i64>, <2 x i64>* %269, align 8, !alias.scope !68
  %271 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %268, i64 2
  %272 = bitcast %"class.base::ModuleCache::Module"** %271 to <2 x i64>*
  %273 = load <2 x i64>, <2 x i64>* %272, align 8, !alias.scope !68
  %274 = bitcast %"class.base::ModuleCache::Module"** %267 to <2 x i64>*
  store <2 x i64> %270, <2 x i64>* %274, align 8, !alias.scope !71, !noalias !68
  %275 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %267, i64 2
  %276 = bitcast %"class.base::ModuleCache::Module"** %275 to <2 x i64>*
  store <2 x i64> %273, <2 x i64>* %276, align 8, !alias.scope !71, !noalias !68
  %277 = add i64 %232, 16
  %278 = add i64 %233, -4
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %231, !llvm.loop !73

280:                                              ; preds = %231, %220
  %281 = phi i64 [ 0, %220 ], [ %277, %231 ]
  %282 = icmp eq i64 %227, 0
  br i1 %282, label %299, label %283

283:                                              ; preds = %280, %283
  %284 = phi i64 [ %296, %283 ], [ %281, %280 ]
  %285 = phi i64 [ %297, %283 ], [ %227, %280 ]
  %286 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %6, i64 %284
  %287 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %32, i64 %284
  %288 = bitcast %"class.base::ModuleCache::Module"** %287 to <2 x i64>*
  %289 = load <2 x i64>, <2 x i64>* %288, align 8, !alias.scope !68
  %290 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %287, i64 2
  %291 = bitcast %"class.base::ModuleCache::Module"** %290 to <2 x i64>*
  %292 = load <2 x i64>, <2 x i64>* %291, align 8, !alias.scope !68
  %293 = bitcast %"class.base::ModuleCache::Module"** %286 to <2 x i64>*
  store <2 x i64> %289, <2 x i64>* %293, align 8, !alias.scope !71, !noalias !68
  %294 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %286, i64 2
  %295 = bitcast %"class.base::ModuleCache::Module"** %294 to <2 x i64>*
  store <2 x i64> %292, <2 x i64>* %295, align 8, !alias.scope !71, !noalias !68
  %296 = add i64 %284, 4
  %297 = add i64 %285, -1
  %298 = icmp eq i64 %297, 0
  br i1 %298, label %299, label %283, !llvm.loop !74

299:                                              ; preds = %283, %280
  %300 = icmp eq i64 %177, %221
  br i1 %300, label %378, label %179

301:                                              ; preds = %68, %334, %166
  %302 = phi %"class.base::ModuleCache::Module"** [ %89, %166 ], [ %69, %68 ], [ %376, %334 ]
  %303 = icmp eq %"class.base::ModuleCache::Module"** %302, %6
  br i1 %303, label %975, label %304

304:                                              ; preds = %301, %329
  %305 = phi %"class.base::ModuleCache::Module"** [ %331, %329 ], [ %6, %301 ]
  %306 = phi %"class.base::ModuleCache::Module"** [ %332, %329 ], [ %30, %301 ]
  %307 = phi %"class.base::ModuleCache::Module"** [ %330, %329 ], [ %32, %301 ]
  %308 = icmp eq %"class.base::ModuleCache::Module"** %307, %15
  br i1 %308, label %309, label %317

309:                                              ; preds = %304
  %310 = ptrtoint %"class.base::ModuleCache::Module"** %302 to i64
  %311 = ptrtoint %"class.base::ModuleCache::Module"** %305 to i64
  %312 = sub i64 %310, %311
  %313 = icmp eq i64 %312, 0
  br i1 %313, label %975, label %314

314:                                              ; preds = %309
  %315 = bitcast %"class.base::ModuleCache::Module"** %306 to i8*
  %316 = bitcast %"class.base::ModuleCache::Module"** %305 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %315, i8* align 8 %316, i64 %312, i1 false) #11
  br label %975

317:                                              ; preds = %304
  %318 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %307, align 8
  %319 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %305, align 8
  %320 = icmp ult %"class.base::ModuleCache::Module"* %318, %319
  br i1 %320, label %321, label %325

321:                                              ; preds = %317
  %322 = ptrtoint %"class.base::ModuleCache::Module"* %318 to i64
  %323 = bitcast %"class.base::ModuleCache::Module"** %306 to i64*
  store i64 %322, i64* %323, align 8
  %324 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %307, i64 1
  br label %329

325:                                              ; preds = %317
  %326 = ptrtoint %"class.base::ModuleCache::Module"* %319 to i64
  %327 = bitcast %"class.base::ModuleCache::Module"** %306 to i64*
  store i64 %326, i64* %327, align 8
  %328 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %305, i64 1
  br label %329

329:                                              ; preds = %325, %321
  %330 = phi %"class.base::ModuleCache::Module"** [ %324, %321 ], [ %307, %325 ]
  %331 = phi %"class.base::ModuleCache::Module"** [ %305, %321 ], [ %328, %325 ]
  %332 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %306, i64 1
  %333 = icmp eq %"class.base::ModuleCache::Module"** %331, %302
  br i1 %333, label %975, label %304

334:                                              ; preds = %68, %334
  %335 = phi %"class.base::ModuleCache::Module"** [ %376, %334 ], [ %70, %68 ]
  %336 = phi %"class.base::ModuleCache::Module"** [ %375, %334 ], [ %71, %68 ]
  %337 = bitcast %"class.base::ModuleCache::Module"** %336 to i64*
  %338 = load i64, i64* %337, align 8
  %339 = bitcast %"class.base::ModuleCache::Module"** %335 to i64*
  store i64 %338, i64* %339, align 8
  %340 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %336, i64 1
  %341 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %335, i64 1
  %342 = bitcast %"class.base::ModuleCache::Module"** %340 to i64*
  %343 = load i64, i64* %342, align 8
  %344 = bitcast %"class.base::ModuleCache::Module"** %341 to i64*
  store i64 %343, i64* %344, align 8
  %345 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %336, i64 2
  %346 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %335, i64 2
  %347 = bitcast %"class.base::ModuleCache::Module"** %345 to i64*
  %348 = load i64, i64* %347, align 8
  %349 = bitcast %"class.base::ModuleCache::Module"** %346 to i64*
  store i64 %348, i64* %349, align 8
  %350 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %336, i64 3
  %351 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %335, i64 3
  %352 = bitcast %"class.base::ModuleCache::Module"** %350 to i64*
  %353 = load i64, i64* %352, align 8
  %354 = bitcast %"class.base::ModuleCache::Module"** %351 to i64*
  store i64 %353, i64* %354, align 8
  %355 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %336, i64 4
  %356 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %335, i64 4
  %357 = bitcast %"class.base::ModuleCache::Module"** %355 to i64*
  %358 = load i64, i64* %357, align 8
  %359 = bitcast %"class.base::ModuleCache::Module"** %356 to i64*
  store i64 %358, i64* %359, align 8
  %360 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %336, i64 5
  %361 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %335, i64 5
  %362 = bitcast %"class.base::ModuleCache::Module"** %360 to i64*
  %363 = load i64, i64* %362, align 8
  %364 = bitcast %"class.base::ModuleCache::Module"** %361 to i64*
  store i64 %363, i64* %364, align 8
  %365 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %336, i64 6
  %366 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %335, i64 6
  %367 = bitcast %"class.base::ModuleCache::Module"** %365 to i64*
  %368 = load i64, i64* %367, align 8
  %369 = bitcast %"class.base::ModuleCache::Module"** %366 to i64*
  store i64 %368, i64* %369, align 8
  %370 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %336, i64 7
  %371 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %335, i64 7
  %372 = bitcast %"class.base::ModuleCache::Module"** %370 to i64*
  %373 = load i64, i64* %372, align 8
  %374 = bitcast %"class.base::ModuleCache::Module"** %371 to i64*
  store i64 %373, i64* %374, align 8
  %375 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %336, i64 8
  %376 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %335, i64 8
  %377 = icmp eq %"class.base::ModuleCache::Module"** %375, %32
  br i1 %377, label %301, label %334, !llvm.loop !75

378:                                              ; preds = %201, %566, %299
  %379 = phi %"class.base::ModuleCache::Module"** [ %222, %299 ], [ %202, %201 ], [ %608, %566 ]
  %380 = icmp eq %"class.base::ModuleCache::Module"** %379, %6
  br i1 %380, label %975, label %381

381:                                              ; preds = %378, %552
  %382 = phi %"class.base::ModuleCache::Module"** [ %564, %552 ], [ %15, %378 ]
  %383 = phi %"class.base::ModuleCache::Module"** [ %560, %552 ], [ %379, %378 ]
  %384 = phi %"class.base::ModuleCache::Module"** [ %559, %552 ], [ %32, %378 ]
  %385 = icmp eq %"class.base::ModuleCache::Module"** %384, %30
  br i1 %385, label %386, label %552

386:                                              ; preds = %381
  %387 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %383, i64 -1
  %388 = ptrtoint %"class.base::ModuleCache::Module"** %387 to i64
  %389 = sub i64 %388, %9
  %390 = lshr i64 %389, 3
  %391 = add nuw nsw i64 %390, 1
  %392 = icmp ult i64 %391, 4
  br i1 %392, label %483, label %393

393:                                              ; preds = %386
  %394 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %383, i64 -1
  %395 = ptrtoint %"class.base::ModuleCache::Module"** %394 to i64
  %396 = sub i64 %395, %9
  %397 = lshr i64 %396, 3
  %398 = xor i64 %397, -1
  %399 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %382, i64 %398
  %400 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %383, i64 %398
  %401 = icmp ult %"class.base::ModuleCache::Module"** %399, %383
  %402 = icmp ult %"class.base::ModuleCache::Module"** %400, %382
  %403 = and i1 %401, %402
  br i1 %403, label %483, label %404

404:                                              ; preds = %393
  %405 = and i64 %391, 4611686018427387900
  %406 = sub nsw i64 0, %405
  %407 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %383, i64 %406
  %408 = sub nsw i64 0, %405
  %409 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %382, i64 %408
  %410 = add nsw i64 %405, -4
  %411 = lshr exact i64 %410, 2
  %412 = add nuw nsw i64 %411, 1
  %413 = and i64 %412, 1
  %414 = icmp eq i64 %410, 0
  br i1 %414, label %461, label %415

415:                                              ; preds = %404
  %416 = sub nuw nsw i64 %412, %413
  %417 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %383, i64 -1
  %418 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %382, i64 -1
  %419 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %383, i64 -1
  %420 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %382, i64 -1
  br label %421

421:                                              ; preds = %421, %415
  %422 = phi i64 [ 0, %415 ], [ %456, %421 ]
  %423 = phi i64 [ %416, %415 ], [ %457, %421 ]
  %424 = sub i64 0, %422
  %425 = sub i64 0, %422
  %426 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %417, i64 %424
  %427 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %426, i64 -1
  %428 = bitcast %"class.base::ModuleCache::Module"** %427 to <2 x i64>*
  %429 = load <2 x i64>, <2 x i64>* %428, align 8, !alias.scope !76
  %430 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %426, i64 -2
  %431 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %430, i64 -1
  %432 = bitcast %"class.base::ModuleCache::Module"** %431 to <2 x i64>*
  %433 = load <2 x i64>, <2 x i64>* %432, align 8, !alias.scope !76
  %434 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %418, i64 %425
  %435 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %434, i64 -1
  %436 = bitcast %"class.base::ModuleCache::Module"** %435 to <2 x i64>*
  store <2 x i64> %429, <2 x i64>* %436, align 8, !alias.scope !79, !noalias !76
  %437 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %434, i64 -2
  %438 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %437, i64 -1
  %439 = bitcast %"class.base::ModuleCache::Module"** %438 to <2 x i64>*
  store <2 x i64> %433, <2 x i64>* %439, align 8, !alias.scope !79, !noalias !76
  %440 = sub nuw nsw i64 -4, %422
  %441 = sub nuw nsw i64 -4, %422
  %442 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %419, i64 %440
  %443 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %442, i64 -1
  %444 = bitcast %"class.base::ModuleCache::Module"** %443 to <2 x i64>*
  %445 = load <2 x i64>, <2 x i64>* %444, align 8, !alias.scope !76
  %446 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %442, i64 -2
  %447 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %446, i64 -1
  %448 = bitcast %"class.base::ModuleCache::Module"** %447 to <2 x i64>*
  %449 = load <2 x i64>, <2 x i64>* %448, align 8, !alias.scope !76
  %450 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %420, i64 %441
  %451 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %450, i64 -1
  %452 = bitcast %"class.base::ModuleCache::Module"** %451 to <2 x i64>*
  store <2 x i64> %445, <2 x i64>* %452, align 8, !alias.scope !79, !noalias !76
  %453 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %450, i64 -2
  %454 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %453, i64 -1
  %455 = bitcast %"class.base::ModuleCache::Module"** %454 to <2 x i64>*
  store <2 x i64> %449, <2 x i64>* %455, align 8, !alias.scope !79, !noalias !76
  %456 = add i64 %422, 8
  %457 = add i64 %423, -2
  %458 = icmp eq i64 %457, 0
  br i1 %458, label %459, label %421, !llvm.loop !81

459:                                              ; preds = %421
  %460 = sub nuw nsw i64 -8, %422
  br label %461

461:                                              ; preds = %459, %404
  %462 = phi i64 [ 0, %404 ], [ %460, %459 ]
  %463 = icmp eq i64 %413, 0
  br i1 %463, label %481, label %464

464:                                              ; preds = %461
  %465 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %383, i64 -1
  %466 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %382, i64 -1
  %467 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %465, i64 %462
  %468 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %467, i64 -1
  %469 = bitcast %"class.base::ModuleCache::Module"** %468 to <2 x i64>*
  %470 = load <2 x i64>, <2 x i64>* %469, align 8, !alias.scope !76
  %471 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %467, i64 -2
  %472 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %471, i64 -1
  %473 = bitcast %"class.base::ModuleCache::Module"** %472 to <2 x i64>*
  %474 = load <2 x i64>, <2 x i64>* %473, align 8, !alias.scope !76
  %475 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %466, i64 %462
  %476 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %475, i64 -1
  %477 = bitcast %"class.base::ModuleCache::Module"** %476 to <2 x i64>*
  store <2 x i64> %470, <2 x i64>* %477, align 8, !alias.scope !79, !noalias !76
  %478 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %475, i64 -2
  %479 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %478, i64 -1
  %480 = bitcast %"class.base::ModuleCache::Module"** %479 to <2 x i64>*
  store <2 x i64> %474, <2 x i64>* %480, align 8, !alias.scope !79, !noalias !76
  br label %481

481:                                              ; preds = %461, %464
  %482 = icmp eq i64 %391, %405
  br i1 %482, label %975, label %483

483:                                              ; preds = %481, %393, %386
  %484 = phi %"class.base::ModuleCache::Module"** [ %383, %393 ], [ %383, %386 ], [ %407, %481 ]
  %485 = phi %"class.base::ModuleCache::Module"** [ %382, %393 ], [ %382, %386 ], [ %409, %481 ]
  %486 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %484, i64 -1
  %487 = ptrtoint %"class.base::ModuleCache::Module"** %486 to i64
  %488 = sub i64 %487, %9
  %489 = lshr i64 %488, 3
  %490 = add nuw nsw i64 %489, 1
  %491 = and i64 %490, 7
  %492 = icmp eq i64 %491, 0
  br i1 %492, label %504, label %493

493:                                              ; preds = %483, %493
  %494 = phi %"class.base::ModuleCache::Module"** [ %497, %493 ], [ %484, %483 ]
  %495 = phi %"class.base::ModuleCache::Module"** [ %500, %493 ], [ %485, %483 ]
  %496 = phi i64 [ %502, %493 ], [ %491, %483 ]
  %497 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %494, i64 -1
  %498 = bitcast %"class.base::ModuleCache::Module"** %497 to i64*
  %499 = load i64, i64* %498, align 8
  %500 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %495, i64 -1
  %501 = bitcast %"class.base::ModuleCache::Module"** %500 to i64*
  store i64 %499, i64* %501, align 8
  %502 = add i64 %496, -1
  %503 = icmp eq i64 %502, 0
  br i1 %503, label %504, label %493, !llvm.loop !82

504:                                              ; preds = %493, %483
  %505 = phi %"class.base::ModuleCache::Module"** [ %484, %483 ], [ %497, %493 ]
  %506 = phi %"class.base::ModuleCache::Module"** [ %485, %483 ], [ %500, %493 ]
  %507 = icmp ult i64 %488, 56
  br i1 %507, label %975, label %508

508:                                              ; preds = %504, %508
  %509 = phi %"class.base::ModuleCache::Module"** [ %546, %508 ], [ %505, %504 ]
  %510 = phi %"class.base::ModuleCache::Module"** [ %549, %508 ], [ %506, %504 ]
  %511 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %509, i64 -1
  %512 = bitcast %"class.base::ModuleCache::Module"** %511 to i64*
  %513 = load i64, i64* %512, align 8
  %514 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %510, i64 -1
  %515 = bitcast %"class.base::ModuleCache::Module"** %514 to i64*
  store i64 %513, i64* %515, align 8
  %516 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %509, i64 -2
  %517 = bitcast %"class.base::ModuleCache::Module"** %516 to i64*
  %518 = load i64, i64* %517, align 8
  %519 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %510, i64 -2
  %520 = bitcast %"class.base::ModuleCache::Module"** %519 to i64*
  store i64 %518, i64* %520, align 8
  %521 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %509, i64 -3
  %522 = bitcast %"class.base::ModuleCache::Module"** %521 to i64*
  %523 = load i64, i64* %522, align 8
  %524 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %510, i64 -3
  %525 = bitcast %"class.base::ModuleCache::Module"** %524 to i64*
  store i64 %523, i64* %525, align 8
  %526 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %509, i64 -4
  %527 = bitcast %"class.base::ModuleCache::Module"** %526 to i64*
  %528 = load i64, i64* %527, align 8
  %529 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %510, i64 -4
  %530 = bitcast %"class.base::ModuleCache::Module"** %529 to i64*
  store i64 %528, i64* %530, align 8
  %531 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %509, i64 -5
  %532 = bitcast %"class.base::ModuleCache::Module"** %531 to i64*
  %533 = load i64, i64* %532, align 8
  %534 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %510, i64 -5
  %535 = bitcast %"class.base::ModuleCache::Module"** %534 to i64*
  store i64 %533, i64* %535, align 8
  %536 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %509, i64 -6
  %537 = bitcast %"class.base::ModuleCache::Module"** %536 to i64*
  %538 = load i64, i64* %537, align 8
  %539 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %510, i64 -6
  %540 = bitcast %"class.base::ModuleCache::Module"** %539 to i64*
  store i64 %538, i64* %540, align 8
  %541 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %509, i64 -7
  %542 = bitcast %"class.base::ModuleCache::Module"** %541 to i64*
  %543 = load i64, i64* %542, align 8
  %544 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %510, i64 -7
  %545 = bitcast %"class.base::ModuleCache::Module"** %544 to i64*
  store i64 %543, i64* %545, align 8
  %546 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %509, i64 -8
  %547 = bitcast %"class.base::ModuleCache::Module"** %546 to i64*
  %548 = load i64, i64* %547, align 8
  %549 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %510, i64 -8
  %550 = bitcast %"class.base::ModuleCache::Module"** %549 to i64*
  store i64 %548, i64* %550, align 8
  %551 = icmp eq %"class.base::ModuleCache::Module"** %546, %6
  br i1 %551, label %975, label %508, !llvm.loop !83

552:                                              ; preds = %381
  %553 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %384, i64 -1
  %554 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %383, i64 -1
  %555 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %554, align 8
  %556 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %553, align 8
  %557 = icmp ult %"class.base::ModuleCache::Module"* %555, %556
  %558 = select i1 %557, %"class.base::ModuleCache::Module"* %556, %"class.base::ModuleCache::Module"* %555
  %559 = select i1 %557, %"class.base::ModuleCache::Module"** %553, %"class.base::ModuleCache::Module"** %384
  %560 = select i1 %557, %"class.base::ModuleCache::Module"** %383, %"class.base::ModuleCache::Module"** %554
  %561 = ptrtoint %"class.base::ModuleCache::Module"* %558 to i64
  %562 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %382, i64 -1
  %563 = bitcast %"class.base::ModuleCache::Module"** %562 to i64*
  store i64 %561, i64* %563, align 8
  %564 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %382, i64 -1
  %565 = icmp eq %"class.base::ModuleCache::Module"** %560, %6
  br i1 %565, label %975, label %381

566:                                              ; preds = %201, %566
  %567 = phi %"class.base::ModuleCache::Module"** [ %608, %566 ], [ %203, %201 ]
  %568 = phi %"class.base::ModuleCache::Module"** [ %607, %566 ], [ %204, %201 ]
  %569 = bitcast %"class.base::ModuleCache::Module"** %568 to i64*
  %570 = load i64, i64* %569, align 8
  %571 = bitcast %"class.base::ModuleCache::Module"** %567 to i64*
  store i64 %570, i64* %571, align 8
  %572 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %568, i64 1
  %573 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %567, i64 1
  %574 = bitcast %"class.base::ModuleCache::Module"** %572 to i64*
  %575 = load i64, i64* %574, align 8
  %576 = bitcast %"class.base::ModuleCache::Module"** %573 to i64*
  store i64 %575, i64* %576, align 8
  %577 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %568, i64 2
  %578 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %567, i64 2
  %579 = bitcast %"class.base::ModuleCache::Module"** %577 to i64*
  %580 = load i64, i64* %579, align 8
  %581 = bitcast %"class.base::ModuleCache::Module"** %578 to i64*
  store i64 %580, i64* %581, align 8
  %582 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %568, i64 3
  %583 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %567, i64 3
  %584 = bitcast %"class.base::ModuleCache::Module"** %582 to i64*
  %585 = load i64, i64* %584, align 8
  %586 = bitcast %"class.base::ModuleCache::Module"** %583 to i64*
  store i64 %585, i64* %586, align 8
  %587 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %568, i64 4
  %588 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %567, i64 4
  %589 = bitcast %"class.base::ModuleCache::Module"** %587 to i64*
  %590 = load i64, i64* %589, align 8
  %591 = bitcast %"class.base::ModuleCache::Module"** %588 to i64*
  store i64 %590, i64* %591, align 8
  %592 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %568, i64 5
  %593 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %567, i64 5
  %594 = bitcast %"class.base::ModuleCache::Module"** %592 to i64*
  %595 = load i64, i64* %594, align 8
  %596 = bitcast %"class.base::ModuleCache::Module"** %593 to i64*
  store i64 %595, i64* %596, align 8
  %597 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %568, i64 6
  %598 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %567, i64 6
  %599 = bitcast %"class.base::ModuleCache::Module"** %597 to i64*
  %600 = load i64, i64* %599, align 8
  %601 = bitcast %"class.base::ModuleCache::Module"** %598 to i64*
  store i64 %600, i64* %601, align 8
  %602 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %568, i64 7
  %603 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %567, i64 7
  %604 = bitcast %"class.base::ModuleCache::Module"** %602 to i64*
  %605 = load i64, i64* %604, align 8
  %606 = bitcast %"class.base::ModuleCache::Module"** %603 to i64*
  store i64 %605, i64* %606, align 8
  %607 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %568, i64 8
  %608 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %567, i64 8
  %609 = icmp eq %"class.base::ModuleCache::Module"** %607, %15
  br i1 %609, label %378, label %566, !llvm.loop !84

610:                                              ; preds = %25, %616
  %611 = phi i64 [ %16, %25 ], [ %619, %616 ]
  %612 = phi i64 [ %19, %25 ], [ %618, %616 ]
  %613 = inttoptr i64 %612 to %"class.base::ModuleCache::Module"**
  %614 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %613, align 8
  %615 = icmp ult %"class.base::ModuleCache::Module"* %28, %614
  br i1 %615, label %621, label %616

616:                                              ; preds = %610
  %617 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %613, i64 1
  %618 = ptrtoint %"class.base::ModuleCache::Module"** %617 to i64
  %619 = add nsw i64 %611, -1
  %620 = icmp eq i64 %619, 0
  br i1 %620, label %975, label %610

621:                                              ; preds = %610
  %622 = inttoptr i64 %612 to %"class.base::ModuleCache::Module"**
  %623 = icmp slt i64 %611, %17
  br i1 %623, label %624, label %651

624:                                              ; preds = %621
  %625 = sdiv i64 %17, 2
  %626 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %26, i64 %625
  %627 = ptrtoint %"class.base::ModuleCache::Module"** %626 to i64
  %628 = sub i64 %18, %612
  %629 = icmp eq i64 %628, 0
  br i1 %629, label %646, label %630

630:                                              ; preds = %624
  %631 = ashr exact i64 %628, 3
  %632 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %626, align 8
  br label %633

633:                                              ; preds = %633, %630
  %634 = phi %"class.base::ModuleCache::Module"** [ %622, %630 ], [ %644, %633 ]
  %635 = phi i64 [ %631, %630 ], [ %643, %633 ]
  %636 = lshr i64 %635, 1
  %637 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %634, i64 %636
  %638 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %637, align 8
  %639 = icmp ult %"class.base::ModuleCache::Module"* %632, %638
  %640 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %637, i64 1
  %641 = xor i64 %636, -1
  %642 = add i64 %635, %641
  %643 = select i1 %639, i64 %636, i64 %642
  %644 = select i1 %639, %"class.base::ModuleCache::Module"** %634, %"class.base::ModuleCache::Module"** %640
  %645 = icmp eq i64 %643, 0
  br i1 %645, label %646, label %633

646:                                              ; preds = %633, %624
  %647 = phi %"class.base::ModuleCache::Module"** [ %622, %624 ], [ %644, %633 ]
  %648 = ptrtoint %"class.base::ModuleCache::Module"** %647 to i64
  %649 = sub i64 %648, %612
  %650 = ashr exact i64 %649, 3
  br label %686

651:                                              ; preds = %621
  %652 = icmp eq i64 %611, 1
  br i1 %652, label %653, label %658

653:                                              ; preds = %651
  %654 = inttoptr i64 %612 to i64*
  %655 = load i64, i64* %654, align 8
  %656 = inttoptr i64 %18 to i64*
  %657 = load i64, i64* %656, align 8
  store i64 %657, i64* %654, align 8
  store i64 %655, i64* %656, align 8
  br label %975

658:                                              ; preds = %651
  %659 = sdiv i64 %611, 2
  %660 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %622, i64 %659
  %661 = ptrtoint %"class.base::ModuleCache::Module"** %660 to i64
  %662 = ptrtoint %"class.base::ModuleCache::Module"** %15 to i64
  %663 = sub i64 %662, %18
  %664 = icmp eq i64 %663, 0
  br i1 %664, label %681, label %665

665:                                              ; preds = %658
  %666 = ashr exact i64 %663, 3
  %667 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %660, align 8
  br label %668

668:                                              ; preds = %668, %665
  %669 = phi %"class.base::ModuleCache::Module"** [ %26, %665 ], [ %679, %668 ]
  %670 = phi i64 [ %666, %665 ], [ %678, %668 ]
  %671 = lshr i64 %670, 1
  %672 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %669, i64 %671
  %673 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %672, align 8
  %674 = icmp ult %"class.base::ModuleCache::Module"* %673, %667
  %675 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %672, i64 1
  %676 = xor i64 %671, -1
  %677 = add i64 %670, %676
  %678 = select i1 %674, i64 %677, i64 %671
  %679 = select i1 %674, %"class.base::ModuleCache::Module"** %675, %"class.base::ModuleCache::Module"** %669
  %680 = icmp eq i64 %678, 0
  br i1 %680, label %681, label %668

681:                                              ; preds = %668, %658
  %682 = phi %"class.base::ModuleCache::Module"** [ %26, %658 ], [ %679, %668 ]
  %683 = ptrtoint %"class.base::ModuleCache::Module"** %682 to i64
  %684 = sub i64 %683, %18
  %685 = ashr exact i64 %684, 3
  br label %686

686:                                              ; preds = %681, %646
  %687 = phi i64 [ %648, %646 ], [ %661, %681 ]
  %688 = phi i64 [ %627, %646 ], [ %683, %681 ]
  %689 = phi i64 [ %625, %646 ], [ %685, %681 ]
  %690 = phi i64 [ %650, %646 ], [ %659, %681 ]
  %691 = sub nsw i64 %611, %690
  %692 = sub nsw i64 %17, %689
  %693 = inttoptr i64 %687 to %"class.base::ModuleCache::Module"**
  %694 = inttoptr i64 %687 to i8*
  %695 = inttoptr i64 %688 to %"class.base::ModuleCache::Module"**
  %696 = inttoptr i64 %687 to i8*
  %697 = inttoptr i64 %18 to i8*
  %698 = icmp eq %"class.base::ModuleCache::Module"** %693, %26
  br i1 %698, label %960, label %699

699:                                              ; preds = %686
  %700 = icmp eq %"class.base::ModuleCache::Module"** %26, %695
  br i1 %700, label %960, label %701

701:                                              ; preds = %699
  %702 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %693, i64 1
  %703 = icmp eq %"class.base::ModuleCache::Module"** %702, %26
  br i1 %703, label %704, label %714

704:                                              ; preds = %701
  %705 = inttoptr i64 %687 to i64*
  %706 = load i64, i64* %705, align 8
  %707 = sub i64 %688, %18
  %708 = ashr exact i64 %707, 3
  %709 = icmp eq i64 %707, 0
  br i1 %709, label %711, label %710

710:                                              ; preds = %704
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %696, i8* align 8 %697, i64 %707, i1 false) #11
  br label %711

711:                                              ; preds = %710, %704
  %712 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %693, i64 %708
  %713 = bitcast %"class.base::ModuleCache::Module"** %712 to i64*
  store i64 %706, i64* %713, align 8
  br label %960

714:                                              ; preds = %701
  %715 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %26, i64 1
  %716 = icmp eq %"class.base::ModuleCache::Module"** %715, %695
  br i1 %716, label %717, label %732

717:                                              ; preds = %714
  %718 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %695, i64 -1
  %719 = bitcast %"class.base::ModuleCache::Module"** %718 to i64*
  %720 = load i64, i64* %719, align 8
  %721 = ptrtoint %"class.base::ModuleCache::Module"** %718 to i64
  %722 = sub i64 %721, %687
  %723 = icmp eq i64 %722, 0
  br i1 %723, label %729, label %724

724:                                              ; preds = %717
  %725 = ashr exact i64 %722, 3
  %726 = sub nsw i64 0, %725
  %727 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %695, i64 %726
  %728 = bitcast %"class.base::ModuleCache::Module"** %727 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %728, i8* align 8 %696, i64 %722, i1 false) #11
  br label %729

729:                                              ; preds = %724, %717
  %730 = phi %"class.base::ModuleCache::Module"** [ %727, %724 ], [ %695, %717 ]
  %731 = inttoptr i64 %687 to i64*
  store i64 %720, i64* %731, align 8
  br label %960

732:                                              ; preds = %714
  %733 = sub i64 %18, %687
  %734 = ashr exact i64 %733, 3
  %735 = sub i64 %688, %18
  %736 = ashr exact i64 %735, 3
  %737 = icmp eq i64 %734, %736
  br i1 %737, label %738, label %890

738:                                              ; preds = %732
  %739 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %26, i64 -1
  %740 = bitcast %"class.base::ModuleCache::Module"** %739 to i8*
  %741 = sub i64 0, %687
  %742 = getelementptr i8, i8* %740, i64 %741
  %743 = ptrtoint i8* %742 to i64
  %744 = lshr i64 %743, 3
  %745 = add nuw nsw i64 %744, 1
  %746 = icmp ult i64 %745, 4
  br i1 %746, label %835, label %747

747:                                              ; preds = %738
  %748 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %693, i64 1
  %749 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %26, i64 -1
  %750 = bitcast %"class.base::ModuleCache::Module"** %749 to i8*
  %751 = sub i64 0, %687
  %752 = getelementptr i8, i8* %750, i64 %751
  %753 = ptrtoint i8* %752 to i64
  %754 = lshr i64 %753, 3
  %755 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %748, i64 %754
  %756 = bitcast %"class.base::ModuleCache::Module"** %755 to i8*
  %757 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %26, i64 1
  %758 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %757, i64 %754
  %759 = bitcast %"class.base::ModuleCache::Module"** %758 to i8*
  %760 = icmp ult i8* %694, %759
  %761 = icmp ult i8* %27, %756
  %762 = and i1 %760, %761
  br i1 %762, label %835, label %763

763:                                              ; preds = %747
  %764 = and i64 %745, 4611686018427387900
  %765 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %26, i64 %764
  %766 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %693, i64 %764
  %767 = add nsw i64 %764, -4
  %768 = lshr exact i64 %767, 2
  %769 = add nuw nsw i64 %768, 1
  %770 = and i64 %769, 1
  %771 = icmp eq i64 %767, 0
  br i1 %771, label %813, label %772

772:                                              ; preds = %763
  %773 = sub nuw nsw i64 %769, %770
  br label %774

774:                                              ; preds = %774, %772
  %775 = phi i64 [ 0, %772 ], [ %810, %774 ]
  %776 = phi i64 [ %773, %772 ], [ %811, %774 ]
  %777 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %26, i64 %775
  %778 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %693, i64 %775
  %779 = bitcast %"class.base::ModuleCache::Module"** %778 to <2 x i64>*
  %780 = load <2 x i64>, <2 x i64>* %779, align 8, !alias.scope !85, !noalias !88
  %781 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %778, i64 2
  %782 = bitcast %"class.base::ModuleCache::Module"** %781 to <2 x i64>*
  %783 = load <2 x i64>, <2 x i64>* %782, align 8, !alias.scope !85, !noalias !88
  %784 = bitcast %"class.base::ModuleCache::Module"** %777 to <2 x i64>*
  %785 = load <2 x i64>, <2 x i64>* %784, align 8, !alias.scope !88
  %786 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %777, i64 2
  %787 = bitcast %"class.base::ModuleCache::Module"** %786 to <2 x i64>*
  %788 = load <2 x i64>, <2 x i64>* %787, align 8, !alias.scope !88
  %789 = bitcast %"class.base::ModuleCache::Module"** %778 to <2 x i64>*
  store <2 x i64> %785, <2 x i64>* %789, align 8, !alias.scope !85, !noalias !88
  %790 = bitcast %"class.base::ModuleCache::Module"** %781 to <2 x i64>*
  store <2 x i64> %788, <2 x i64>* %790, align 8, !alias.scope !85, !noalias !88
  %791 = bitcast %"class.base::ModuleCache::Module"** %777 to <2 x i64>*
  store <2 x i64> %780, <2 x i64>* %791, align 8, !alias.scope !88
  %792 = bitcast %"class.base::ModuleCache::Module"** %786 to <2 x i64>*
  store <2 x i64> %783, <2 x i64>* %792, align 8, !alias.scope !88
  %793 = or i64 %775, 4
  %794 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %26, i64 %793
  %795 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %693, i64 %793
  %796 = bitcast %"class.base::ModuleCache::Module"** %795 to <2 x i64>*
  %797 = load <2 x i64>, <2 x i64>* %796, align 8, !alias.scope !85, !noalias !88
  %798 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %795, i64 2
  %799 = bitcast %"class.base::ModuleCache::Module"** %798 to <2 x i64>*
  %800 = load <2 x i64>, <2 x i64>* %799, align 8, !alias.scope !85, !noalias !88
  %801 = bitcast %"class.base::ModuleCache::Module"** %794 to <2 x i64>*
  %802 = load <2 x i64>, <2 x i64>* %801, align 8, !alias.scope !88
  %803 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %794, i64 2
  %804 = bitcast %"class.base::ModuleCache::Module"** %803 to <2 x i64>*
  %805 = load <2 x i64>, <2 x i64>* %804, align 8, !alias.scope !88
  %806 = bitcast %"class.base::ModuleCache::Module"** %795 to <2 x i64>*
  store <2 x i64> %802, <2 x i64>* %806, align 8, !alias.scope !85, !noalias !88
  %807 = bitcast %"class.base::ModuleCache::Module"** %798 to <2 x i64>*
  store <2 x i64> %805, <2 x i64>* %807, align 8, !alias.scope !85, !noalias !88
  %808 = bitcast %"class.base::ModuleCache::Module"** %794 to <2 x i64>*
  store <2 x i64> %797, <2 x i64>* %808, align 8, !alias.scope !88
  %809 = bitcast %"class.base::ModuleCache::Module"** %803 to <2 x i64>*
  store <2 x i64> %800, <2 x i64>* %809, align 8, !alias.scope !88
  %810 = add i64 %775, 8
  %811 = add i64 %776, -2
  %812 = icmp eq i64 %811, 0
  br i1 %812, label %813, label %774, !llvm.loop !90

813:                                              ; preds = %774, %763
  %814 = phi i64 [ 0, %763 ], [ %810, %774 ]
  %815 = icmp eq i64 %770, 0
  br i1 %815, label %833, label %816

816:                                              ; preds = %813
  %817 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %26, i64 %814
  %818 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %693, i64 %814
  %819 = bitcast %"class.base::ModuleCache::Module"** %818 to <2 x i64>*
  %820 = load <2 x i64>, <2 x i64>* %819, align 8, !alias.scope !85, !noalias !88
  %821 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %818, i64 2
  %822 = bitcast %"class.base::ModuleCache::Module"** %821 to <2 x i64>*
  %823 = load <2 x i64>, <2 x i64>* %822, align 8, !alias.scope !85, !noalias !88
  %824 = bitcast %"class.base::ModuleCache::Module"** %817 to <2 x i64>*
  %825 = load <2 x i64>, <2 x i64>* %824, align 8, !alias.scope !88
  %826 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %817, i64 2
  %827 = bitcast %"class.base::ModuleCache::Module"** %826 to <2 x i64>*
  %828 = load <2 x i64>, <2 x i64>* %827, align 8, !alias.scope !88
  %829 = bitcast %"class.base::ModuleCache::Module"** %818 to <2 x i64>*
  store <2 x i64> %825, <2 x i64>* %829, align 8, !alias.scope !85, !noalias !88
  %830 = bitcast %"class.base::ModuleCache::Module"** %821 to <2 x i64>*
  store <2 x i64> %828, <2 x i64>* %830, align 8, !alias.scope !85, !noalias !88
  %831 = bitcast %"class.base::ModuleCache::Module"** %817 to <2 x i64>*
  store <2 x i64> %820, <2 x i64>* %831, align 8, !alias.scope !88
  %832 = bitcast %"class.base::ModuleCache::Module"** %826 to <2 x i64>*
  store <2 x i64> %823, <2 x i64>* %832, align 8, !alias.scope !88
  br label %833

833:                                              ; preds = %813, %816
  %834 = icmp eq i64 %745, %764
  br i1 %834, label %960, label %835

835:                                              ; preds = %833, %747, %738
  %836 = phi %"class.base::ModuleCache::Module"** [ %26, %747 ], [ %26, %738 ], [ %765, %833 ]
  %837 = phi %"class.base::ModuleCache::Module"** [ %693, %747 ], [ %693, %738 ], [ %766, %833 ]
  %838 = ptrtoint %"class.base::ModuleCache::Module"** %837 to i64
  %839 = getelementptr %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %26, i64 -1
  %840 = ptrtoint %"class.base::ModuleCache::Module"** %839 to i64
  %841 = sub i64 %840, %838
  %842 = lshr i64 %841, 3
  %843 = add nuw nsw i64 %842, 1
  %844 = and i64 %843, 3
  %845 = icmp eq i64 %844, 0
  br i1 %845, label %858, label %846

846:                                              ; preds = %835, %846
  %847 = phi %"class.base::ModuleCache::Module"** [ %855, %846 ], [ %836, %835 ]
  %848 = phi %"class.base::ModuleCache::Module"** [ %854, %846 ], [ %837, %835 ]
  %849 = phi i64 [ %856, %846 ], [ %844, %835 ]
  %850 = bitcast %"class.base::ModuleCache::Module"** %848 to i64*
  %851 = load i64, i64* %850, align 8
  %852 = bitcast %"class.base::ModuleCache::Module"** %847 to i64*
  %853 = load i64, i64* %852, align 8
  store i64 %853, i64* %850, align 8
  store i64 %851, i64* %852, align 8
  %854 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %848, i64 1
  %855 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %847, i64 1
  %856 = add i64 %849, -1
  %857 = icmp eq i64 %856, 0
  br i1 %857, label %858, label %846, !llvm.loop !91

858:                                              ; preds = %846, %835
  %859 = phi %"class.base::ModuleCache::Module"** [ %836, %835 ], [ %855, %846 ]
  %860 = phi %"class.base::ModuleCache::Module"** [ %837, %835 ], [ %854, %846 ]
  %861 = icmp ult i64 %841, 24
  br i1 %861, label %960, label %862

862:                                              ; preds = %858, %862
  %863 = phi %"class.base::ModuleCache::Module"** [ %888, %862 ], [ %859, %858 ]
  %864 = phi %"class.base::ModuleCache::Module"** [ %887, %862 ], [ %860, %858 ]
  %865 = bitcast %"class.base::ModuleCache::Module"** %864 to i64*
  %866 = load i64, i64* %865, align 8
  %867 = bitcast %"class.base::ModuleCache::Module"** %863 to i64*
  %868 = load i64, i64* %867, align 8
  store i64 %868, i64* %865, align 8
  store i64 %866, i64* %867, align 8
  %869 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %864, i64 1
  %870 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %863, i64 1
  %871 = bitcast %"class.base::ModuleCache::Module"** %869 to i64*
  %872 = load i64, i64* %871, align 8
  %873 = bitcast %"class.base::ModuleCache::Module"** %870 to i64*
  %874 = load i64, i64* %873, align 8
  store i64 %874, i64* %871, align 8
  store i64 %872, i64* %873, align 8
  %875 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %864, i64 2
  %876 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %863, i64 2
  %877 = bitcast %"class.base::ModuleCache::Module"** %875 to i64*
  %878 = load i64, i64* %877, align 8
  %879 = bitcast %"class.base::ModuleCache::Module"** %876 to i64*
  %880 = load i64, i64* %879, align 8
  store i64 %880, i64* %877, align 8
  store i64 %878, i64* %879, align 8
  %881 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %864, i64 3
  %882 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %863, i64 3
  %883 = bitcast %"class.base::ModuleCache::Module"** %881 to i64*
  %884 = load i64, i64* %883, align 8
  %885 = bitcast %"class.base::ModuleCache::Module"** %882 to i64*
  %886 = load i64, i64* %885, align 8
  store i64 %886, i64* %883, align 8
  store i64 %884, i64* %885, align 8
  %887 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %864, i64 4
  %888 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %863, i64 4
  %889 = icmp eq %"class.base::ModuleCache::Module"** %887, %26
  br i1 %889, label %960, label %862, !llvm.loop !92

890:                                              ; preds = %732, %890
  %891 = phi i64 [ %893, %890 ], [ %736, %732 ]
  %892 = phi i64 [ %891, %890 ], [ %734, %732 ]
  %893 = srem i64 %892, %891
  %894 = icmp eq i64 %893, 0
  br i1 %894, label %895, label %890

895:                                              ; preds = %890
  %896 = icmp eq i64 %891, 0
  br i1 %896, label %929, label %897

897:                                              ; preds = %895
  %898 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %693, i64 %891
  %899 = shl nsw i64 %891, 3
  %900 = add i64 %899, -8
  %901 = and i64 %900, 8
  %902 = icmp eq i64 %901, 0
  br i1 %902, label %903, label %926

903:                                              ; preds = %897
  %904 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %898, i64 -1
  %905 = ptrtoint %"class.base::ModuleCache::Module"** %904 to i64
  %906 = bitcast %"class.base::ModuleCache::Module"** %904 to i64*
  %907 = load i64, i64* %906, align 8
  %908 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %904, i64 %734
  br label %909

909:                                              ; preds = %909, %903
  %910 = phi i64 [ %905, %903 ], [ %912, %909 ]
  %911 = phi %"class.base::ModuleCache::Module"** [ %908, %903 ], [ %922, %909 ]
  %912 = ptrtoint %"class.base::ModuleCache::Module"** %911 to i64
  %913 = bitcast %"class.base::ModuleCache::Module"** %911 to i64*
  %914 = load i64, i64* %913, align 8
  %915 = inttoptr i64 %910 to i64*
  store i64 %914, i64* %915, align 8
  %916 = sub i64 %688, %912
  %917 = ashr exact i64 %916, 3
  %918 = icmp slt i64 %734, %917
  %919 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %911, i64 %734
  %920 = sub nsw i64 %734, %917
  %921 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %693, i64 %920
  %922 = select i1 %918, %"class.base::ModuleCache::Module"** %919, %"class.base::ModuleCache::Module"** %921
  %923 = icmp eq %"class.base::ModuleCache::Module"** %922, %904
  br i1 %923, label %924, label %909

924:                                              ; preds = %909
  %925 = bitcast %"class.base::ModuleCache::Module"** %911 to i64*
  store i64 %907, i64* %925, align 8
  br label %926

926:                                              ; preds = %924, %897
  %927 = phi %"class.base::ModuleCache::Module"** [ %904, %924 ], [ %898, %897 ]
  %928 = icmp eq i64 %900, 0
  br i1 %928, label %929, label %931

929:                                              ; preds = %926, %991, %895
  %930 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %693, i64 %736
  br label %960

931:                                              ; preds = %926, %991
  %932 = phi %"class.base::ModuleCache::Module"** [ %955, %991 ], [ %927, %926 ]
  %933 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %932, i64 -1
  %934 = ptrtoint %"class.base::ModuleCache::Module"** %933 to i64
  %935 = bitcast %"class.base::ModuleCache::Module"** %933 to i64*
  %936 = load i64, i64* %935, align 8
  %937 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %933, i64 %734
  br label %938

938:                                              ; preds = %938, %931
  %939 = phi i64 [ %934, %931 ], [ %941, %938 ]
  %940 = phi %"class.base::ModuleCache::Module"** [ %937, %931 ], [ %951, %938 ]
  %941 = ptrtoint %"class.base::ModuleCache::Module"** %940 to i64
  %942 = bitcast %"class.base::ModuleCache::Module"** %940 to i64*
  %943 = load i64, i64* %942, align 8
  %944 = inttoptr i64 %939 to i64*
  store i64 %943, i64* %944, align 8
  %945 = sub i64 %688, %941
  %946 = ashr exact i64 %945, 3
  %947 = icmp slt i64 %734, %946
  %948 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %940, i64 %734
  %949 = sub nsw i64 %734, %946
  %950 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %693, i64 %949
  %951 = select i1 %947, %"class.base::ModuleCache::Module"** %948, %"class.base::ModuleCache::Module"** %950
  %952 = icmp eq %"class.base::ModuleCache::Module"** %951, %933
  br i1 %952, label %953, label %938

953:                                              ; preds = %938
  %954 = bitcast %"class.base::ModuleCache::Module"** %940 to i64*
  store i64 %936, i64* %954, align 8
  %955 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %932, i64 -2
  %956 = ptrtoint %"class.base::ModuleCache::Module"** %955 to i64
  %957 = bitcast %"class.base::ModuleCache::Module"** %955 to i64*
  %958 = load i64, i64* %957, align 8
  %959 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %955, i64 %734
  br label %976

960:                                              ; preds = %858, %862, %833, %686, %699, %711, %729, %929
  %961 = phi %"class.base::ModuleCache::Module"** [ %693, %699 ], [ %695, %686 ], [ %712, %711 ], [ %730, %729 ], [ %930, %929 ], [ %26, %833 ], [ %26, %862 ], [ %26, %858 ]
  %962 = add nsw i64 %690, %689
  %963 = add nsw i64 %691, %692
  %964 = icmp slt i64 %962, %963
  br i1 %964, label %965, label %967

965:                                              ; preds = %960
  %966 = ptrtoint %"class.base::ModuleCache::Module"** %961 to i64
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIPKNS1_11ModuleCache6ModuleENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_SL_T_NS_15iterator_traitsISL_E15difference_typeESP_PNSO_10value_typeEl(%"class.base::ModuleCache::Module"** %622, %"class.base::ModuleCache::Module"** %693, %"class.base::ModuleCache::Module"** %961, %"struct.base::internal::flat_tree<const base::ModuleCache::Module *, base::identity, std::__1::less<void>, std::__1::vector<const base::ModuleCache::Module *, std::__1::allocator<const base::ModuleCache::Module *> > >::value_compare"* dereferenceable(1) %3, i64 %690, i64 %689, %"class.base::ModuleCache::Module"** %6, i64 %7)
  br label %968

967:                                              ; preds = %960
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIPKNS1_11ModuleCache6ModuleENS1_8identityENS_4lessIvEENS_6vectorIS7_NS_9allocatorIS7_EEEEE13value_compareENS_11__wrap_iterIPS7_EEEEvT0_SL_SL_T_NS_15iterator_traitsISL_E15difference_typeESP_PNSO_10value_typeEl(%"class.base::ModuleCache::Module"** %961, %"class.base::ModuleCache::Module"** %695, %"class.base::ModuleCache::Module"** %15, %"struct.base::internal::flat_tree<const base::ModuleCache::Module *, base::identity, std::__1::less<void>, std::__1::vector<const base::ModuleCache::Module *, std::__1::allocator<const base::ModuleCache::Module *> > >::value_compare"* dereferenceable(1) %3, i64 %691, i64 %692, %"class.base::ModuleCache::Module"** %6, i64 %7)
  br label %968

968:                                              ; preds = %965, %967
  %969 = phi i64 [ %966, %965 ], [ %612, %967 ]
  %970 = phi i64 [ %688, %965 ], [ %687, %967 ]
  %971 = phi i64 [ %692, %965 ], [ %689, %967 ]
  %972 = phi i64 [ %691, %965 ], [ %690, %967 ]
  %973 = phi %"class.base::ModuleCache::Module"** [ %15, %965 ], [ %961, %967 ]
  %974 = icmp eq i64 %971, 0
  br i1 %974, label %975, label %14

975:                                              ; preds = %968, %23, %616, %329, %552, %504, %508, %481, %8, %653, %378, %314, %309, %301, %168, %35
  ret void

976:                                              ; preds = %976, %953
  %977 = phi i64 [ %956, %953 ], [ %979, %976 ]
  %978 = phi %"class.base::ModuleCache::Module"** [ %959, %953 ], [ %989, %976 ]
  %979 = ptrtoint %"class.base::ModuleCache::Module"** %978 to i64
  %980 = bitcast %"class.base::ModuleCache::Module"** %978 to i64*
  %981 = load i64, i64* %980, align 8
  %982 = inttoptr i64 %977 to i64*
  store i64 %981, i64* %982, align 8
  %983 = sub i64 %688, %979
  %984 = ashr exact i64 %983, 3
  %985 = icmp slt i64 %734, %984
  %986 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %978, i64 %734
  %987 = sub nsw i64 %734, %984
  %988 = getelementptr inbounds %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %693, i64 %987
  %989 = select i1 %985, %"class.base::ModuleCache::Module"** %986, %"class.base::ModuleCache::Module"** %988
  %990 = icmp eq %"class.base::ModuleCache::Module"** %989, %955
  br i1 %990, label %991, label %976

991:                                              ; preds = %976
  %992 = bitcast %"class.base::ModuleCache::Module"** %978 to i64*
  store i64 %958, i64* %992, align 8
  %993 = icmp eq %"class.base::ModuleCache::Module"** %955, %693
  br i1 %993, label %929, label %931
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::unique_ptr"*, i8 } @_ZN4base8internal9flat_treeINSt3__110unique_ptrIKNS_11ModuleCache6ModuleENS2_14default_deleteIS6_EEEENS_8identityENS4_23ModuleAndAddressCompareENS2_6vectorIS9_NS2_9allocatorIS9_EEEEE13append_uniqueIS9_EENS2_4pairINS2_11__wrap_iterIPS9_EEbEESL_SL_OT_(%"class.base::internal::flat_tree"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.std::__1::unique_ptr"* %1 to i64
  %6 = ptrtoint %"class.std::__1::unique_ptr"* %2 to i64
  %7 = sub i64 %6, %5
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %39, label %9

9:                                                ; preds = %4
  %10 = ashr exact i64 %7, 3
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  br label %12

12:                                               ; preds = %12, %9
  %13 = phi %"class.std::__1::unique_ptr"* [ %1, %9 ], [ %35, %12 ]
  %14 = phi i64 [ %10, %9 ], [ %34, %12 ]
  %15 = lshr i64 %14, 1
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 %15
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %17, align 8
  %19 = bitcast %"class.base::ModuleCache::Module"* %18 to i64 (%"class.base::ModuleCache::Module"*)***
  %20 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %19, align 8
  %21 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %20, i64 2
  %22 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %21, align 8
  %23 = tail call i64 %22(%"class.base::ModuleCache::Module"* %18) #11
  %24 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %11, align 8
  %25 = bitcast %"class.base::ModuleCache::Module"* %24 to i64 (%"class.base::ModuleCache::Module"*)***
  %26 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %25, align 8
  %27 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %26, i64 2
  %28 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %27, align 8
  %29 = tail call i64 %28(%"class.base::ModuleCache::Module"* %24) #11
  %30 = icmp ult i64 %23, %29
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %16, i64 1
  %32 = xor i64 %15, -1
  %33 = add i64 %14, %32
  %34 = select i1 %30, i64 %33, i64 %15
  %35 = select i1 %30, %"class.std::__1::unique_ptr"* %31, %"class.std::__1::unique_ptr"* %13
  %36 = icmp eq i64 %34, 0
  br i1 %36, label %37, label %12

37:                                               ; preds = %12
  %38 = ptrtoint %"class.std::__1::unique_ptr"* %35 to i64
  br label %39

39:                                               ; preds = %37, %4
  %40 = phi i64 [ %38, %37 ], [ %5, %4 ]
  %41 = phi %"class.std::__1::unique_ptr"* [ %35, %37 ], [ %1, %4 ]
  %42 = icmp eq %"class.std::__1::unique_ptr"* %41, %2
  br i1 %42, label %59, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %44, align 8
  %46 = bitcast %"class.base::ModuleCache::Module"* %45 to i64 (%"class.base::ModuleCache::Module"*)***
  %47 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %46, align 8
  %48 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %47, i64 2
  %49 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %48, align 8
  %50 = tail call i64 %49(%"class.base::ModuleCache::Module"* %45) #11
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %41, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %51, align 8
  %53 = bitcast %"class.base::ModuleCache::Module"* %52 to i64 (%"class.base::ModuleCache::Module"*)***
  %54 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %53, align 8
  %55 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %54, i64 2
  %56 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %55, align 8
  %57 = tail call i64 %56(%"class.base::ModuleCache::Module"* %52) #11
  %58 = icmp ult i64 %50, %57
  br i1 %58, label %59, label %84

59:                                               ; preds = %39, %43
  %60 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 0
  %61 = bitcast %"class.base::internal::flat_tree"* %0 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %40, %62
  %64 = ashr exact i64 %63, 3
  %65 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 1
  %66 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %65, align 8
  %67 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %68 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %67, align 8
  %69 = icmp ult %"class.std::__1::unique_ptr"* %66, %68
  br i1 %69, label %70, label %78

70:                                               ; preds = %59
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %72 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  %73 = load i64, i64* %72, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %71, align 8
  %74 = bitcast %"class.std::__1::unique_ptr"* %66 to i64*
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %66, i64 1
  %76 = ptrtoint %"class.std::__1::unique_ptr"* %75 to i64
  %77 = bitcast %"class.std::__1::unique_ptr"** %65 to i64*
  store i64 %76, i64* %77, align 8
  br label %80

78:                                               ; preds = %59
  %79 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0
  tail call void @_ZNSt3__16vectorINS_10unique_ptrIKN4base11ModuleCache6ModuleENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector"* %79, %"class.std::__1::unique_ptr"* dereferenceable(8) %3) #11
  br label %80

80:                                               ; preds = %70, %78
  %81 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %60, align 8
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %81, i64 %64
  %83 = ptrtoint %"class.std::__1::unique_ptr"* %82 to i64
  br label %84

84:                                               ; preds = %43, %80
  %85 = phi i64 [ %83, %80 ], [ %40, %43 ]
  %86 = phi i8 [ 1, %80 ], [ 0, %43 ]
  %87 = inttoptr i64 %85 to %"class.std::__1::unique_ptr"*
  %88 = insertvalue { %"class.std::__1::unique_ptr"*, i8 } undef, %"class.std::__1::unique_ptr"* %87, 0
  %89 = insertvalue { %"class.std::__1::unique_ptr"*, i8 } %88, i8 %86, 1
  ret { %"class.std::__1::unique_ptr"*, i8 } %89
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9flat_treeINSt3__110unique_ptrIKNS_11ModuleCache6ModuleENS2_14default_deleteIS6_EEEENS_8identityENS4_23ModuleAndAddressCompareENS2_6vectorIS9_NS2_9allocatorIS9_EEEEE15sort_and_uniqueENS2_11__wrap_iterIPS9_EESJ_(%"class.base::internal::flat_tree"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.base::internal::flat_tree<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, base::identity, base::ModuleCache::ModuleAndAddressCompare, std::__1::vector<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, std::__1::allocator<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> > > > >::value_compare", align 1
  %5 = ptrtoint %"class.std::__1::unique_ptr"* %2 to i64
  %6 = getelementptr inbounds %"struct.base::internal::flat_tree<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, base::identity, base::ModuleCache::ModuleAndAddressCompare, std::__1::vector<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, std::__1::allocator<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> > > > >::value_compare", %"struct.base::internal::flat_tree<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, base::identity, base::ModuleCache::ModuleAndAddressCompare, std::__1::vector<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, std::__1::allocator<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> > > > >::value_compare"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6)
  %7 = ptrtoint %"class.std::__1::unique_ptr"* %1 to i64
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = icmp sgt i64 %8, 0
  br i1 %10, label %11, label %22

11:                                               ; preds = %3
  %12 = icmp slt i64 %9, 1152921504606846975
  %13 = select i1 %12, i64 %9, i64 1152921504606846975
  br label %14

14:                                               ; preds = %19, %11
  %15 = phi i64 [ %20, %19 ], [ %13, %11 ]
  %16 = shl i64 %15, 3
  %17 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %16, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #11
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %23

19:                                               ; preds = %14
  %20 = lshr i64 %15, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %14

22:                                               ; preds = %19, %3
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS_10unique_ptrIKNS1_11ModuleCache6ModuleENS_14default_deleteIS7_EEEENS1_8identityENS5_23ModuleAndAddressCompareENS_6vectorISA_NS_9allocatorISA_EEEEE13value_compareENS_11__wrap_iterIPSA_EEEEvT0_SN_T_NS_15iterator_traitsISN_E15difference_typeEPNSQ_10value_typeEl(%"class.std::__1::unique_ptr"* %1, %"class.std::__1::unique_ptr"* %2, %"struct.base::internal::flat_tree<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, base::identity, base::ModuleCache::ModuleAndAddressCompare, std::__1::vector<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, std::__1::allocator<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> > > > >::value_compare"* nonnull dereferenceable(1) %4, i64 %9, %"class.std::__1::unique_ptr"* null, i64 0) #11
  br label %25

23:                                               ; preds = %14
  %24 = bitcast i8* %17 to %"class.std::__1::unique_ptr"*
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS_10unique_ptrIKNS1_11ModuleCache6ModuleENS_14default_deleteIS7_EEEENS1_8identityENS5_23ModuleAndAddressCompareENS_6vectorISA_NS_9allocatorISA_EEEEE13value_compareENS_11__wrap_iterIPSA_EEEEvT0_SN_T_NS_15iterator_traitsISN_E15difference_typeEPNSQ_10value_typeEl(%"class.std::__1::unique_ptr"* %1, %"class.std::__1::unique_ptr"* %2, %"struct.base::internal::flat_tree<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, base::identity, base::ModuleCache::ModuleAndAddressCompare, std::__1::vector<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, std::__1::allocator<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> > > > >::value_compare"* nonnull dereferenceable(1) %4, i64 %9, %"class.std::__1::unique_ptr"* nonnull %24, i64 %15) #11
  call void @_ZdlPv(i8* nonnull %17) #12
  br label %25

25:                                               ; preds = %22, %23
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6)
  %26 = icmp eq %"class.std::__1::unique_ptr"* %1, %2
  br i1 %26, label %97, label %27

27:                                               ; preds = %25, %31
  %28 = phi %"class.std::__1::unique_ptr"* [ %29, %31 ], [ %1, %25 ]
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %28, i64 1
  %30 = icmp eq %"class.std::__1::unique_ptr"* %29, %2
  br i1 %30, label %97, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %28, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %32, align 8
  %34 = bitcast %"class.base::ModuleCache::Module"* %33 to i64 (%"class.base::ModuleCache::Module"*)***
  %35 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %34, align 8
  %36 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %35, i64 2
  %37 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %36, align 8
  %38 = call i64 %37(%"class.base::ModuleCache::Module"* %33) #11
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %29, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %39, align 8
  %41 = bitcast %"class.base::ModuleCache::Module"* %40 to i64 (%"class.base::ModuleCache::Module"*)***
  %42 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %41, align 8
  %43 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %42, i64 2
  %44 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %43, align 8
  %45 = call i64 %44(%"class.base::ModuleCache::Module"* %40) #11
  %46 = icmp ult i64 %38, %45
  br i1 %46, label %27, label %47

47:                                               ; preds = %31
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %28 to i64
  %49 = icmp eq %"class.std::__1::unique_ptr"* %28, %2
  br i1 %49, label %97, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %28, i64 2
  %52 = icmp eq %"class.std::__1::unique_ptr"* %51, %2
  br i1 %52, label %93, label %53

53:                                               ; preds = %50, %86
  %54 = phi %"class.std::__1::unique_ptr"* [ %90, %86 ], [ %28, %50 ]
  %55 = phi %"class.std::__1::unique_ptr"* [ %88, %86 ], [ %51, %50 ]
  %56 = phi i64 [ %87, %86 ], [ %48, %50 ]
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %54, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %57, align 8
  %59 = bitcast %"class.base::ModuleCache::Module"* %58 to i64 (%"class.base::ModuleCache::Module"*)***
  %60 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %59, align 8
  %61 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %60, i64 2
  %62 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %61, align 8
  %63 = call i64 %62(%"class.base::ModuleCache::Module"* %58) #11
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %55, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %64, align 8
  %66 = bitcast %"class.base::ModuleCache::Module"* %65 to i64 (%"class.base::ModuleCache::Module"*)***
  %67 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %66, align 8
  %68 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %67, i64 2
  %69 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %68, align 8
  %70 = call i64 %69(%"class.base::ModuleCache::Module"* %65) #11
  %71 = icmp ult i64 %63, %70
  br i1 %71, label %72, label %86

72:                                               ; preds = %53
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %54, i64 1
  %74 = ptrtoint %"class.std::__1::unique_ptr"* %73 to i64
  %75 = bitcast %"class.std::__1::unique_ptr"* %55 to i64*
  %76 = load i64, i64* %75, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %64, align 8
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %73, i64 0, i32 0, i32 0, i32 0
  %78 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %77, align 8
  %79 = bitcast %"class.std::__1::unique_ptr"* %73 to i64*
  store i64 %76, i64* %79, align 8
  %80 = icmp eq %"class.base::ModuleCache::Module"* %78, null
  br i1 %80, label %86, label %81

81:                                               ; preds = %72
  %82 = bitcast %"class.base::ModuleCache::Module"* %78 to void (%"class.base::ModuleCache::Module"*)***
  %83 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %83, i64 1
  %85 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %84, align 8
  call void %85(%"class.base::ModuleCache::Module"* nonnull %78) #11
  br label %86

86:                                               ; preds = %81, %72, %53
  %87 = phi i64 [ %56, %53 ], [ %74, %72 ], [ %74, %81 ]
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %55, i64 1
  %89 = icmp eq %"class.std::__1::unique_ptr"* %88, %2
  %90 = inttoptr i64 %87 to %"class.std::__1::unique_ptr"*
  br i1 %89, label %91, label %53

91:                                               ; preds = %86
  %92 = inttoptr i64 %87 to %"class.std::__1::unique_ptr"*
  br label %93

93:                                               ; preds = %91, %50
  %94 = phi %"class.std::__1::unique_ptr"* [ %28, %50 ], [ %92, %91 ]
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %94, i64 1
  %96 = ptrtoint %"class.std::__1::unique_ptr"* %95 to i64
  br label %97

97:                                               ; preds = %27, %25, %47, %93
  %98 = phi i64 [ %96, %93 ], [ %48, %47 ], [ %5, %25 ], [ %5, %27 ]
  %99 = inttoptr i64 %98 to %"class.std::__1::unique_ptr"*
  %100 = icmp eq %"class.std::__1::unique_ptr"* %99, %2
  br i1 %100, label %144, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 1
  %103 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %102, align 8
  %104 = icmp eq %"class.std::__1::unique_ptr"* %103, %2
  br i1 %104, label %126, label %105

105:                                              ; preds = %101, %120
  %106 = phi %"class.std::__1::unique_ptr"* [ %122, %120 ], [ %99, %101 ]
  %107 = phi %"class.std::__1::unique_ptr"* [ %121, %120 ], [ %2, %101 ]
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %107, i64 0, i32 0, i32 0, i32 0
  %109 = bitcast %"class.std::__1::unique_ptr"* %107 to i64*
  %110 = load i64, i64* %109, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %108, align 8
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %106, i64 0, i32 0, i32 0, i32 0
  %112 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %111, align 8
  %113 = bitcast %"class.std::__1::unique_ptr"* %106 to i64*
  store i64 %110, i64* %113, align 8
  %114 = icmp eq %"class.base::ModuleCache::Module"* %112, null
  br i1 %114, label %120, label %115

115:                                              ; preds = %105
  %116 = bitcast %"class.base::ModuleCache::Module"* %112 to void (%"class.base::ModuleCache::Module"*)***
  %117 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %116, align 8
  %118 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %117, i64 1
  %119 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %118, align 8
  call void %119(%"class.base::ModuleCache::Module"* nonnull %112) #11
  br label %120

120:                                              ; preds = %115, %105
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %107, i64 1
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %106, i64 1
  %123 = icmp eq %"class.std::__1::unique_ptr"* %121, %103
  br i1 %123, label %124, label %105

124:                                              ; preds = %120
  %125 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %102, align 8
  br label %126

126:                                              ; preds = %124, %101
  %127 = phi %"class.std::__1::unique_ptr"* [ %2, %101 ], [ %125, %124 ]
  %128 = phi %"class.std::__1::unique_ptr"* [ %99, %101 ], [ %122, %124 ]
  %129 = icmp eq %"class.std::__1::unique_ptr"* %127, %128
  br i1 %129, label %143, label %130

130:                                              ; preds = %126, %141
  %131 = phi %"class.std::__1::unique_ptr"* [ %132, %141 ], [ %127, %126 ]
  %132 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %131, i64 -1
  %133 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %132, i64 0, i32 0, i32 0, i32 0
  %134 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %133, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %133, align 8
  %135 = icmp eq %"class.base::ModuleCache::Module"* %134, null
  br i1 %135, label %141, label %136

136:                                              ; preds = %130
  %137 = bitcast %"class.base::ModuleCache::Module"* %134 to void (%"class.base::ModuleCache::Module"*)***
  %138 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %137, align 8
  %139 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %138, i64 1
  %140 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %139, align 8
  call void %140(%"class.base::ModuleCache::Module"* nonnull %134) #11
  br label %141

141:                                              ; preds = %136, %130
  %142 = icmp eq %"class.std::__1::unique_ptr"* %132, %128
  br i1 %142, label %143, label %130

143:                                              ; preds = %141, %126
  store %"class.std::__1::unique_ptr"* %128, %"class.std::__1::unique_ptr"** %102, align 8
  br label %144

144:                                              ; preds = %97, %143
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::unique_ptr"*, i8 } @_ZN4base8internal9flat_treeINSt3__110unique_ptrIKNS_11ModuleCache6ModuleENS2_14default_deleteIS6_EEEENS_8identityENS4_23ModuleAndAddressCompareENS2_6vectorIS9_NS2_9allocatorIS9_EEEEE21emplace_hint_key_argsIS9_JS9_EEENS2_4pairINS2_11__wrap_iterIPS9_EEbEENSJ_IPKS9_EERKT_DpOT0_(%"class.base::internal::flat_tree"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"* dereferenceable(8), %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr"* %6, %1
  br i1 %7, label %24, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 -1, i32 0, i32 0, i32 0
  %10 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %9, align 8
  %11 = bitcast %"class.base::ModuleCache::Module"* %10 to i64 (%"class.base::ModuleCache::Module"*)***
  %12 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %11, align 8
  %13 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %12, i64 2
  %14 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %13, align 8
  %15 = tail call i64 %14(%"class.base::ModuleCache::Module"* %10) #11
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %16, align 8
  %18 = bitcast %"class.base::ModuleCache::Module"* %17 to i64 (%"class.base::ModuleCache::Module"*)***
  %19 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %18, align 8
  %20 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %19, i64 2
  %21 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %20, align 8
  %22 = tail call i64 %21(%"class.base::ModuleCache::Module"* %17) #11
  %23 = icmp ult i64 %15, %22
  br i1 %23, label %24, label %61

24:                                               ; preds = %4, %8
  %25 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 1
  %26 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %25, align 8
  %27 = icmp eq %"class.std::__1::unique_ptr"* %26, %1
  br i1 %27, label %44, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %29, align 8
  %31 = bitcast %"class.base::ModuleCache::Module"* %30 to i64 (%"class.base::ModuleCache::Module"*)***
  %32 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %31, align 8
  %33 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %32, i64 2
  %34 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %33, align 8
  %35 = tail call i64 %34(%"class.base::ModuleCache::Module"* %30) #11
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %36, align 8
  %38 = bitcast %"class.base::ModuleCache::Module"* %37 to i64 (%"class.base::ModuleCache::Module"*)***
  %39 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %38, align 8
  %40 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %39, i64 2
  %41 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %40, align 8
  %42 = tail call i64 %41(%"class.base::ModuleCache::Module"* %37) #11
  %43 = icmp ult i64 %35, %42
  br i1 %43, label %44, label %47

44:                                               ; preds = %24, %28
  %45 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0
  %46 = tail call %"class.std::__1::unique_ptr"* @_ZNSt3__16vectorINS_10unique_ptrIKN4base11ModuleCache6ModuleENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE7emplaceIJS8_EEENS_11__wrap_iterIPS8_EENSD_IPKS8_EEDpOT_(%"class.std::__1::vector"* %45, %"class.std::__1::unique_ptr"* %1, %"class.std::__1::unique_ptr"* dereferenceable(8) %3) #11
  br label %123

47:                                               ; preds = %28
  %48 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %36, align 8
  %49 = bitcast %"class.base::ModuleCache::Module"* %48 to i64 (%"class.base::ModuleCache::Module"*)***
  %50 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %49, align 8
  %51 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %50, i64 2
  %52 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %51, align 8
  %53 = tail call i64 %52(%"class.base::ModuleCache::Module"* %48) #11
  %54 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %29, align 8
  %55 = bitcast %"class.base::ModuleCache::Module"* %54 to i64 (%"class.base::ModuleCache::Module"*)***
  %56 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %55, align 8
  %57 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %56, i64 2
  %58 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %57, align 8
  %59 = tail call i64 %58(%"class.base::ModuleCache::Module"* %54) #11
  %60 = icmp ult i64 %53, %59
  br i1 %60, label %61, label %123

61:                                               ; preds = %47, %8
  %62 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %63 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 1
  %64 = bitcast %"class.std::__1::unique_ptr"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = ptrtoint %"class.std::__1::unique_ptr"* %62 to i64
  %67 = sub i64 %65, %66
  %68 = icmp eq i64 %67, 0
  %69 = inttoptr i64 %65 to %"class.std::__1::unique_ptr"*
  br i1 %68, label %100, label %70

70:                                               ; preds = %61
  %71 = ashr exact i64 %67, 3
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  br label %73

73:                                               ; preds = %73, %70
  %74 = phi %"class.std::__1::unique_ptr"* [ %62, %70 ], [ %96, %73 ]
  %75 = phi i64 [ %71, %70 ], [ %95, %73 ]
  %76 = lshr i64 %75, 1
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %74, i64 %76
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %78, align 8
  %80 = bitcast %"class.base::ModuleCache::Module"* %79 to i64 (%"class.base::ModuleCache::Module"*)***
  %81 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %80, align 8
  %82 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %81, i64 2
  %83 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %82, align 8
  %84 = tail call i64 %83(%"class.base::ModuleCache::Module"* %79) #11
  %85 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %72, align 8
  %86 = bitcast %"class.base::ModuleCache::Module"* %85 to i64 (%"class.base::ModuleCache::Module"*)***
  %87 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %86, align 8
  %88 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %87, i64 2
  %89 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %88, align 8
  %90 = tail call i64 %89(%"class.base::ModuleCache::Module"* %85) #11
  %91 = icmp ult i64 %84, %90
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 1
  %93 = xor i64 %76, -1
  %94 = add i64 %75, %93
  %95 = select i1 %91, i64 %94, i64 %76
  %96 = select i1 %91, %"class.std::__1::unique_ptr"* %92, %"class.std::__1::unique_ptr"* %74
  %97 = icmp eq i64 %95, 0
  br i1 %97, label %98, label %73

98:                                               ; preds = %73
  %99 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %63, align 8
  br label %100

100:                                              ; preds = %98, %61
  %101 = phi %"class.std::__1::unique_ptr"* [ %69, %61 ], [ %99, %98 ]
  %102 = phi %"class.std::__1::unique_ptr"* [ %62, %61 ], [ %96, %98 ]
  %103 = icmp eq %"class.std::__1::unique_ptr"* %102, %101
  br i1 %103, label %120, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %106 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %105, align 8
  %107 = bitcast %"class.base::ModuleCache::Module"* %106 to i64 (%"class.base::ModuleCache::Module"*)***
  %108 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %107, align 8
  %109 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %108, i64 2
  %110 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %109, align 8
  %111 = tail call i64 %110(%"class.base::ModuleCache::Module"* %106) #11
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %102, i64 0, i32 0, i32 0, i32 0
  %113 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %112, align 8
  %114 = bitcast %"class.base::ModuleCache::Module"* %113 to i64 (%"class.base::ModuleCache::Module"*)***
  %115 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %114, align 8
  %116 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %115, i64 2
  %117 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %116, align 8
  %118 = tail call i64 %117(%"class.base::ModuleCache::Module"* %113) #11
  %119 = icmp ult i64 %111, %118
  br i1 %119, label %120, label %123

120:                                              ; preds = %104, %100
  %121 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0
  %122 = tail call %"class.std::__1::unique_ptr"* @_ZNSt3__16vectorINS_10unique_ptrIKN4base11ModuleCache6ModuleENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE7emplaceIJS8_EEENS_11__wrap_iterIPS8_EENSD_IPKS8_EEDpOT_(%"class.std::__1::vector"* %121, %"class.std::__1::unique_ptr"* %102, %"class.std::__1::unique_ptr"* dereferenceable(8) %3) #11
  br label %123

123:                                              ; preds = %120, %104, %47, %44
  %124 = phi %"class.std::__1::unique_ptr"* [ %46, %44 ], [ %1, %47 ], [ %122, %120 ], [ %102, %104 ]
  %125 = phi i8 [ 1, %44 ], [ 0, %47 ], [ 1, %120 ], [ 0, %104 ]
  %126 = insertvalue { %"class.std::__1::unique_ptr"*, i8 } undef, %"class.std::__1::unique_ptr"* %124, 0
  %127 = insertvalue { %"class.std::__1::unique_ptr"*, i8 } %126, i8 %125, 1
  ret { %"class.std::__1::unique_ptr"*, i8 } %127
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::unique_ptr"* @_ZNSt3__16vectorINS_10unique_ptrIKN4base11ModuleCache6ModuleENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE7emplaceIJS8_EEENS_11__wrap_iterIPS8_EENSD_IPKS8_EEDpOT_(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::unique_ptr"* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.51", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %11 = icmp ult %"class.std::__1::unique_ptr"* %8, %10
  %12 = ptrtoint %"class.std::__1::unique_ptr"* %10 to i64
  br i1 %11, label %13, label %148

13:                                               ; preds = %3
  %14 = icmp eq %"class.std::__1::unique_ptr"* %8, %1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  %17 = load i64, i64* %16, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %15, align 8
  br i1 %14, label %18, label %23

18:                                               ; preds = %13
  %19 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 1
  %21 = ptrtoint %"class.std::__1::unique_ptr"* %20 to i64
  %22 = bitcast %"class.std::__1::unique_ptr"** %7 to i64*
  store i64 %21, i64* %22, align 8
  br label %381

23:                                               ; preds = %13
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 1
  %26 = ptrtoint %"class.std::__1::unique_ptr"* %24 to i64
  %27 = ptrtoint %"class.std::__1::unique_ptr"* %25 to i64
  %28 = sub i64 %26, %27
  %29 = ashr exact i64 %28, 3
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 %29
  %31 = bitcast %"class.std::__1::unique_ptr"** %7 to i64*
  %32 = icmp ult %"class.std::__1::unique_ptr"* %30, %24
  br i1 %32, label %33, label %64

33:                                               ; preds = %23
  %34 = sub nsw i64 0, %29
  %35 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 %34, i32 0, i32 0, i32 0
  %36 = bitcast %"class.base::ModuleCache::Module"** %35 to i8*
  %37 = xor i64 %4, -1
  %38 = getelementptr i8, i8* %36, i64 %37
  %39 = ptrtoint i8* %38 to i64
  %40 = lshr i64 %39, 3
  %41 = add nuw nsw i64 %40, 1
  %42 = and i64 %41, 7
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %56, label %44

44:                                               ; preds = %33, %44
  %45 = phi %"class.std::__1::unique_ptr"* [ %53, %44 ], [ %24, %33 ]
  %46 = phi %"class.std::__1::unique_ptr"* [ %52, %44 ], [ %30, %33 ]
  %47 = phi i64 [ %54, %44 ], [ %42, %33 ]
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 0, i32 0, i32 0, i32 0
  %49 = bitcast %"class.std::__1::unique_ptr"* %46 to i64*
  %50 = load i64, i64* %49, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %48, align 8
  %51 = bitcast %"class.std::__1::unique_ptr"* %45 to i64*
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 1
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %45, i64 1
  %54 = add i64 %47, -1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %44, !llvm.loop !93

56:                                               ; preds = %44, %33
  %57 = phi %"class.std::__1::unique_ptr"* [ %24, %33 ], [ %53, %44 ]
  %58 = phi %"class.std::__1::unique_ptr"* [ %30, %33 ], [ %52, %44 ]
  %59 = phi %"class.std::__1::unique_ptr"* [ undef, %33 ], [ %53, %44 ]
  %60 = icmp ult i8* %38, inttoptr (i64 56 to i8*)
  br i1 %60, label %61, label %86

61:                                               ; preds = %86, %56
  %62 = phi %"class.std::__1::unique_ptr"* [ %59, %56 ], [ %136, %86 ]
  %63 = ptrtoint %"class.std::__1::unique_ptr"* %62 to i64
  br label %64

64:                                               ; preds = %61, %23
  %65 = phi i64 [ %63, %61 ], [ %26, %23 ]
  store i64 %65, i64* %31, align 8
  %66 = icmp eq i64 %28, 0
  br i1 %66, label %138, label %67

67:                                               ; preds = %64, %84
  %68 = phi %"class.std::__1::unique_ptr"* [ %71, %84 ], [ %24, %64 ]
  %69 = phi %"class.std::__1::unique_ptr"* [ %70, %84 ], [ %30, %64 ]
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %69, i64 -1
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %68, i64 -1
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %70, i64 0, i32 0, i32 0, i32 0
  %73 = bitcast %"class.std::__1::unique_ptr"* %70 to i64*
  %74 = load i64, i64* %73, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %72, align 8
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %71, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %75, align 8
  %77 = bitcast %"class.std::__1::unique_ptr"* %71 to i64*
  store i64 %74, i64* %77, align 8
  %78 = icmp eq %"class.base::ModuleCache::Module"* %76, null
  br i1 %78, label %84, label %79

79:                                               ; preds = %67
  %80 = bitcast %"class.base::ModuleCache::Module"* %76 to void (%"class.base::ModuleCache::Module"*)***
  %81 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %81, i64 1
  %83 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %82, align 8
  tail call void %83(%"class.base::ModuleCache::Module"* nonnull %76) #11
  br label %84

84:                                               ; preds = %79, %67
  %85 = icmp eq %"class.std::__1::unique_ptr"* %70, %1
  br i1 %85, label %138, label %67

86:                                               ; preds = %56, %86
  %87 = phi %"class.std::__1::unique_ptr"* [ %136, %86 ], [ %57, %56 ]
  %88 = phi %"class.std::__1::unique_ptr"* [ %135, %86 ], [ %58, %56 ]
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %88, i64 0, i32 0, i32 0, i32 0
  %90 = bitcast %"class.std::__1::unique_ptr"* %88 to i64*
  %91 = load i64, i64* %90, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %89, align 8
  %92 = bitcast %"class.std::__1::unique_ptr"* %87 to i64*
  store i64 %91, i64* %92, align 8
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %88, i64 1
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 1
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %93, i64 0, i32 0, i32 0, i32 0
  %96 = bitcast %"class.std::__1::unique_ptr"* %93 to i64*
  %97 = load i64, i64* %96, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %95, align 8
  %98 = bitcast %"class.std::__1::unique_ptr"* %94 to i64*
  store i64 %97, i64* %98, align 8
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %88, i64 2
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 2
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %99, i64 0, i32 0, i32 0, i32 0
  %102 = bitcast %"class.std::__1::unique_ptr"* %99 to i64*
  %103 = load i64, i64* %102, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %101, align 8
  %104 = bitcast %"class.std::__1::unique_ptr"* %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %88, i64 3
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 3
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %105, i64 0, i32 0, i32 0, i32 0
  %108 = bitcast %"class.std::__1::unique_ptr"* %105 to i64*
  %109 = load i64, i64* %108, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %107, align 8
  %110 = bitcast %"class.std::__1::unique_ptr"* %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %88, i64 4
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 4
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %111, i64 0, i32 0, i32 0, i32 0
  %114 = bitcast %"class.std::__1::unique_ptr"* %111 to i64*
  %115 = load i64, i64* %114, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %113, align 8
  %116 = bitcast %"class.std::__1::unique_ptr"* %112 to i64*
  store i64 %115, i64* %116, align 8
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %88, i64 5
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 5
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %117, i64 0, i32 0, i32 0, i32 0
  %120 = bitcast %"class.std::__1::unique_ptr"* %117 to i64*
  %121 = load i64, i64* %120, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %119, align 8
  %122 = bitcast %"class.std::__1::unique_ptr"* %118 to i64*
  store i64 %121, i64* %122, align 8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %88, i64 6
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 6
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %123, i64 0, i32 0, i32 0, i32 0
  %126 = bitcast %"class.std::__1::unique_ptr"* %123 to i64*
  %127 = load i64, i64* %126, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %125, align 8
  %128 = bitcast %"class.std::__1::unique_ptr"* %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %88, i64 7
  %130 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 7
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %129, i64 0, i32 0, i32 0, i32 0
  %132 = bitcast %"class.std::__1::unique_ptr"* %129 to i64*
  %133 = load i64, i64* %132, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %131, align 8
  %134 = bitcast %"class.std::__1::unique_ptr"* %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %88, i64 8
  %136 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 8
  %137 = icmp ult %"class.std::__1::unique_ptr"* %135, %24
  br i1 %137, label %86, label %61

138:                                              ; preds = %84, %64
  %139 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %140 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %139, align 8
  %141 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  store i64 %17, i64* %141, align 8
  %142 = icmp eq %"class.base::ModuleCache::Module"* %140, null
  br i1 %142, label %381, label %143

143:                                              ; preds = %138
  %144 = bitcast %"class.base::ModuleCache::Module"* %140 to void (%"class.base::ModuleCache::Module"*)***
  %145 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %144, align 8
  %146 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %145, i64 1
  %147 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %146, align 8
  tail call void %147(%"class.base::ModuleCache::Module"* nonnull %140) #11
  br label %381

148:                                              ; preds = %3
  %149 = ptrtoint %"class.std::__1::unique_ptr"* %8 to i64
  %150 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2
  %151 = bitcast %"struct.std::__1::__split_buffer.51"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %151) #11
  %152 = getelementptr inbounds %"struct.std::__1::__split_buffer.51", %"struct.std::__1::__split_buffer.51"* %5, i64 0, i32 0
  %153 = getelementptr inbounds %"struct.std::__1::__split_buffer.51", %"struct.std::__1::__split_buffer.51"* %5, i64 0, i32 1
  %154 = getelementptr inbounds %"struct.std::__1::__split_buffer.51", %"struct.std::__1::__split_buffer.51"* %5, i64 0, i32 2
  %155 = getelementptr inbounds %"struct.std::__1::__split_buffer.51", %"struct.std::__1::__split_buffer.51"* %5, i64 0, i32 3, i32 0, i32 0
  %156 = getelementptr inbounds %"struct.std::__1::__split_buffer.51", %"struct.std::__1::__split_buffer.51"* %5, i64 0, i32 3, i32 1, i32 0
  %157 = bitcast %"class.std::__1::unique_ptr"** %7 to i64*
  %158 = bitcast %"class.std::__1::vector"* %0 to i64*
  %159 = bitcast %"struct.std::__1::__split_buffer.51"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %159, i8 -86, i64 40, i1 false)
  %160 = load i64, i64* %158, align 8
  %161 = sub i64 %149, %160
  %162 = ashr exact i64 %161, 3
  %163 = add nsw i64 %162, 1
  %164 = icmp ugt i64 %163, 2305843009213693951
  br i1 %164, label %165, label %167

165:                                              ; preds = %148
  %166 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %166) #13
  unreachable

167:                                              ; preds = %148
  %168 = bitcast %"class.std::__1::unique_ptr"** %9 to i64*
  %169 = sub i64 %12, %160
  %170 = ashr exact i64 %169, 3
  %171 = icmp ult i64 %170, 1152921504606846975
  br i1 %171, label %176, label %172

172:                                              ; preds = %167
  %173 = sub i64 %4, %160
  %174 = ashr exact i64 %173, 3
  store %"class.std::__1::unique_ptr"* null, %"class.std::__1::unique_ptr"** %155, align 8
  %175 = bitcast %"class.std::__1::allocator.10"** %156 to %"class.std::__1::__compressed_pair.7"**
  store %"class.std::__1::__compressed_pair.7"* %150, %"class.std::__1::__compressed_pair.7"** %175, align 8
  br label %187

176:                                              ; preds = %167
  %177 = ashr exact i64 %169, 2
  %178 = icmp ult i64 %177, %163
  %179 = select i1 %178, i64 %163, i64 %177
  %180 = sub i64 %4, %160
  %181 = ashr exact i64 %180, 3
  store %"class.std::__1::unique_ptr"* null, %"class.std::__1::unique_ptr"** %155, align 8
  %182 = bitcast %"class.std::__1::allocator.10"** %156 to %"class.std::__1::__compressed_pair.7"**
  store %"class.std::__1::__compressed_pair.7"* %150, %"class.std::__1::__compressed_pair.7"** %182, align 8
  %183 = icmp eq i64 %179, 0
  br i1 %183, label %193, label %184

184:                                              ; preds = %176
  %185 = icmp ugt i64 %179, 2305843009213693951
  br i1 %185, label %186, label %187

186:                                              ; preds = %184
  tail call void @abort() #13
  unreachable

187:                                              ; preds = %172, %184
  %188 = phi i64 [ 2305843009213693951, %172 ], [ %179, %184 ]
  %189 = phi i64 [ %174, %172 ], [ %181, %184 ]
  %190 = shl i64 %188, 3
  %191 = tail call i8* @_Znwm(i64 %190) #12
  %192 = bitcast i8* %191 to %"class.std::__1::unique_ptr"*
  br label %193

193:                                              ; preds = %176, %187
  %194 = phi i64 [ %189, %187 ], [ %181, %176 ]
  %195 = phi i64 [ %188, %187 ], [ 0, %176 ]
  %196 = phi %"class.std::__1::unique_ptr"* [ %192, %187 ], [ null, %176 ]
  store %"class.std::__1::unique_ptr"* %196, %"class.std::__1::unique_ptr"** %152, align 8
  %197 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %196, i64 %194
  store %"class.std::__1::unique_ptr"* %197, %"class.std::__1::unique_ptr"** %154, align 8
  store %"class.std::__1::unique_ptr"* %197, %"class.std::__1::unique_ptr"** %153, align 8
  %198 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %196, i64 %195
  store %"class.std::__1::unique_ptr"* %198, %"class.std::__1::unique_ptr"** %155, align 8
  call void @_ZNSt3__114__split_bufferINS_10unique_ptrIKN4base11ModuleCache6ModuleENS_14default_deleteIS5_EEEERNS_9allocatorIS8_EEE12emplace_backIJS8_EEEvDpOT_(%"struct.std::__1::__split_buffer.51"* nonnull %5, %"class.std::__1::unique_ptr"* dereferenceable(8) %2)
  %199 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %153, align 8
  %200 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %201 = icmp eq %"class.std::__1::unique_ptr"* %200, %1
  br i1 %201, label %266, label %202

202:                                              ; preds = %193
  %203 = ptrtoint %"class.std::__1::unique_ptr"* %200 to i64
  %204 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 -1, i32 0, i32 0, i32 0
  %205 = ptrtoint %"class.base::ModuleCache::Module"** %204 to i64
  %206 = sub i64 %205, %203
  %207 = lshr i64 %206, 3
  %208 = add nuw nsw i64 %207, 1
  %209 = and i64 %208, 3
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %225, label %211

211:                                              ; preds = %202, %211
  %212 = phi %"class.std::__1::unique_ptr"* [ %222, %211 ], [ %199, %202 ]
  %213 = phi %"class.std::__1::unique_ptr"* [ %216, %211 ], [ %1, %202 ]
  %214 = phi i64 [ %223, %211 ], [ %209, %202 ]
  %215 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %212, i64 -1
  %216 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %213, i64 -1
  %217 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %216, i64 0, i32 0, i32 0, i32 0
  %218 = bitcast %"class.std::__1::unique_ptr"* %216 to i64*
  %219 = load i64, i64* %218, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %217, align 8
  %220 = bitcast %"class.std::__1::unique_ptr"* %215 to i64*
  store i64 %219, i64* %220, align 8
  %221 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %153, align 8
  %222 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %221, i64 -1
  store %"class.std::__1::unique_ptr"* %222, %"class.std::__1::unique_ptr"** %153, align 8
  %223 = add i64 %214, -1
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %225, label %211, !llvm.loop !94

225:                                              ; preds = %211, %202
  %226 = phi %"class.std::__1::unique_ptr"* [ undef, %202 ], [ %222, %211 ]
  %227 = phi %"class.std::__1::unique_ptr"* [ %199, %202 ], [ %222, %211 ]
  %228 = phi %"class.std::__1::unique_ptr"* [ %1, %202 ], [ %216, %211 ]
  %229 = icmp ult i64 %206, 24
  br i1 %229, label %266, label %230

230:                                              ; preds = %225, %230
  %231 = phi %"class.std::__1::unique_ptr"* [ %264, %230 ], [ %227, %225 ]
  %232 = phi %"class.std::__1::unique_ptr"* [ %258, %230 ], [ %228, %225 ]
  %233 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %231, i64 -1
  %234 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %232, i64 -1
  %235 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %234, i64 0, i32 0, i32 0, i32 0
  %236 = bitcast %"class.std::__1::unique_ptr"* %234 to i64*
  %237 = load i64, i64* %236, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %235, align 8
  %238 = bitcast %"class.std::__1::unique_ptr"* %233 to i64*
  store i64 %237, i64* %238, align 8
  %239 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %153, align 8
  %240 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %239, i64 -1
  store %"class.std::__1::unique_ptr"* %240, %"class.std::__1::unique_ptr"** %153, align 8
  %241 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %239, i64 -2
  %242 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %232, i64 -2
  %243 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %242, i64 0, i32 0, i32 0, i32 0
  %244 = bitcast %"class.std::__1::unique_ptr"* %242 to i64*
  %245 = load i64, i64* %244, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %243, align 8
  %246 = bitcast %"class.std::__1::unique_ptr"* %241 to i64*
  store i64 %245, i64* %246, align 8
  %247 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %153, align 8
  %248 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %247, i64 -1
  store %"class.std::__1::unique_ptr"* %248, %"class.std::__1::unique_ptr"** %153, align 8
  %249 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %247, i64 -2
  %250 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %232, i64 -3
  %251 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %250, i64 0, i32 0, i32 0, i32 0
  %252 = bitcast %"class.std::__1::unique_ptr"* %250 to i64*
  %253 = load i64, i64* %252, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %251, align 8
  %254 = bitcast %"class.std::__1::unique_ptr"* %249 to i64*
  store i64 %253, i64* %254, align 8
  %255 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %153, align 8
  %256 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %255, i64 -1
  store %"class.std::__1::unique_ptr"* %256, %"class.std::__1::unique_ptr"** %153, align 8
  %257 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %255, i64 -2
  %258 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %232, i64 -4
  %259 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %258, i64 0, i32 0, i32 0, i32 0
  %260 = bitcast %"class.std::__1::unique_ptr"* %258 to i64*
  %261 = load i64, i64* %260, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %259, align 8
  %262 = bitcast %"class.std::__1::unique_ptr"* %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %153, align 8
  %264 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %263, i64 -1
  store %"class.std::__1::unique_ptr"* %264, %"class.std::__1::unique_ptr"** %153, align 8
  %265 = icmp eq %"class.std::__1::unique_ptr"* %258, %200
  br i1 %265, label %266, label %230

266:                                              ; preds = %225, %230, %193
  %267 = phi %"class.std::__1::unique_ptr"* [ %199, %193 ], [ %226, %225 ], [ %264, %230 ]
  %268 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %269 = icmp eq %"class.std::__1::unique_ptr"* %268, %1
  br i1 %269, label %270, label %276

270:                                              ; preds = %266
  %271 = ptrtoint %"class.std::__1::unique_ptr"* %268 to i64
  %272 = ptrtoint %"class.std::__1::unique_ptr"* %267 to i64
  %273 = bitcast %"class.std::__1::unique_ptr"** %153 to i64*
  %274 = bitcast %"class.std::__1::unique_ptr"** %154 to i64*
  %275 = load i64, i64* %274, align 8
  br label %345

276:                                              ; preds = %266
  %277 = bitcast %"class.std::__1::unique_ptr"** %154 to i64**
  %278 = load i64*, i64** %277, align 8
  %279 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %268, i64 -1, i32 0, i32 0, i32 0
  %280 = ptrtoint %"class.base::ModuleCache::Module"** %279 to i64
  %281 = sub i64 %280, %4
  %282 = lshr i64 %281, 3
  %283 = add nuw nsw i64 %282, 1
  %284 = and i64 %283, 3
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %301, label %286

286:                                              ; preds = %276, %286
  %287 = phi i64* [ %296, %286 ], [ %278, %276 ]
  %288 = phi %"class.std::__1::unique_ptr"* [ %293, %286 ], [ %1, %276 ]
  %289 = phi i64 [ %297, %286 ], [ %284, %276 ]
  %290 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %288, i64 0, i32 0, i32 0, i32 0
  %291 = bitcast %"class.std::__1::unique_ptr"* %288 to i64*
  %292 = load i64, i64* %291, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %290, align 8
  store i64 %292, i64* %287, align 8
  %293 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %288, i64 1
  %294 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %154, align 8
  %295 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %294, i64 1
  store %"class.std::__1::unique_ptr"* %295, %"class.std::__1::unique_ptr"** %154, align 8
  %296 = bitcast %"class.std::__1::unique_ptr"* %295 to i64*
  %297 = add i64 %289, -1
  %298 = icmp eq i64 %297, 0
  br i1 %298, label %299, label %286, !llvm.loop !95

299:                                              ; preds = %286
  %300 = bitcast %"class.std::__1::unique_ptr"* %295 to i64*
  br label %301

301:                                              ; preds = %276, %299
  %302 = phi %"class.std::__1::unique_ptr"* [ undef, %276 ], [ %295, %299 ]
  %303 = phi i64* [ %278, %276 ], [ %300, %299 ]
  %304 = phi %"class.std::__1::unique_ptr"* [ %1, %276 ], [ %293, %299 ]
  %305 = icmp ult i64 %281, 24
  br i1 %305, label %338, label %306

306:                                              ; preds = %301, %306
  %307 = phi i64* [ %337, %306 ], [ %303, %301 ]
  %308 = phi %"class.std::__1::unique_ptr"* [ %333, %306 ], [ %304, %301 ]
  %309 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %308, i64 0, i32 0, i32 0, i32 0
  %310 = bitcast %"class.std::__1::unique_ptr"* %308 to i64*
  %311 = load i64, i64* %310, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %309, align 8
  store i64 %311, i64* %307, align 8
  %312 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %308, i64 1
  %313 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %154, align 8
  %314 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %313, i64 1
  store %"class.std::__1::unique_ptr"* %314, %"class.std::__1::unique_ptr"** %154, align 8
  %315 = bitcast %"class.std::__1::unique_ptr"* %314 to i64*
  %316 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %312, i64 0, i32 0, i32 0, i32 0
  %317 = bitcast %"class.std::__1::unique_ptr"* %312 to i64*
  %318 = load i64, i64* %317, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %316, align 8
  store i64 %318, i64* %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %308, i64 2
  %320 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %154, align 8
  %321 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %320, i64 1
  store %"class.std::__1::unique_ptr"* %321, %"class.std::__1::unique_ptr"** %154, align 8
  %322 = bitcast %"class.std::__1::unique_ptr"* %321 to i64*
  %323 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %319, i64 0, i32 0, i32 0, i32 0
  %324 = bitcast %"class.std::__1::unique_ptr"* %319 to i64*
  %325 = load i64, i64* %324, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %323, align 8
  store i64 %325, i64* %322, align 8
  %326 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %308, i64 3
  %327 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %154, align 8
  %328 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %327, i64 1
  store %"class.std::__1::unique_ptr"* %328, %"class.std::__1::unique_ptr"** %154, align 8
  %329 = bitcast %"class.std::__1::unique_ptr"* %328 to i64*
  %330 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %326, i64 0, i32 0, i32 0, i32 0
  %331 = bitcast %"class.std::__1::unique_ptr"* %326 to i64*
  %332 = load i64, i64* %331, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %330, align 8
  store i64 %332, i64* %329, align 8
  %333 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %308, i64 4
  %334 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %154, align 8
  %335 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %334, i64 1
  store %"class.std::__1::unique_ptr"* %335, %"class.std::__1::unique_ptr"** %154, align 8
  %336 = icmp eq %"class.std::__1::unique_ptr"* %333, %268
  %337 = bitcast %"class.std::__1::unique_ptr"* %335 to i64*
  br i1 %336, label %338, label %306

338:                                              ; preds = %306, %301
  %339 = phi %"class.std::__1::unique_ptr"* [ %302, %301 ], [ %335, %306 ]
  %340 = ptrtoint %"class.std::__1::unique_ptr"* %339 to i64
  %341 = bitcast %"class.std::__1::unique_ptr"** %153 to i64*
  %342 = load i64, i64* %341, align 8
  %343 = load i64, i64* %157, align 8
  %344 = bitcast %"class.std::__1::unique_ptr"** %154 to i64*
  br label %345

345:                                              ; preds = %270, %338
  %346 = phi i64* [ %274, %270 ], [ %344, %338 ]
  %347 = phi i64 [ %275, %270 ], [ %340, %338 ]
  %348 = phi i64 [ %271, %270 ], [ %343, %338 ]
  %349 = phi i64* [ %273, %270 ], [ %341, %338 ]
  %350 = phi i64 [ %272, %270 ], [ %342, %338 ]
  %351 = load i64, i64* %158, align 8
  store i64 %350, i64* %158, align 8
  store i64 %351, i64* %349, align 8
  store i64 %347, i64* %157, align 8
  store i64 %348, i64* %346, align 8
  %352 = load i64, i64* %168, align 8
  %353 = bitcast %"class.std::__1::unique_ptr"** %155 to i64*
  %354 = load i64, i64* %353, align 8
  store i64 %354, i64* %168, align 8
  store i64 %352, i64* %353, align 8
  %355 = bitcast %"struct.std::__1::__split_buffer.51"* %5 to i64*
  store i64 %351, i64* %355, align 8
  %356 = inttoptr i64 %351 to %"class.std::__1::unique_ptr"*
  %357 = inttoptr i64 %348 to %"class.std::__1::unique_ptr"*
  %358 = icmp eq %"class.std::__1::unique_ptr"* %357, %356
  br i1 %358, label %375, label %359

359:                                              ; preds = %345, %370
  %360 = phi %"class.std::__1::unique_ptr"* [ %371, %370 ], [ %357, %345 ]
  %361 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %360, i64 -1
  store %"class.std::__1::unique_ptr"* %361, %"class.std::__1::unique_ptr"** %154, align 8
  %362 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %361, i64 0, i32 0, i32 0, i32 0
  %363 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %362, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %362, align 8
  %364 = icmp eq %"class.base::ModuleCache::Module"* %363, null
  br i1 %364, label %370, label %365

365:                                              ; preds = %359
  %366 = bitcast %"class.base::ModuleCache::Module"* %363 to void (%"class.base::ModuleCache::Module"*)***
  %367 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %366, align 8
  %368 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %367, i64 1
  %369 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %368, align 8
  call void %369(%"class.base::ModuleCache::Module"* nonnull %363) #11
  br label %370

370:                                              ; preds = %365, %359
  %371 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %154, align 8
  %372 = icmp eq %"class.std::__1::unique_ptr"* %371, %356
  br i1 %372, label %373, label %359

373:                                              ; preds = %370
  %374 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %152, align 8
  br label %375

375:                                              ; preds = %373, %345
  %376 = phi %"class.std::__1::unique_ptr"* [ %374, %373 ], [ %356, %345 ]
  %377 = icmp eq %"class.std::__1::unique_ptr"* %376, null
  br i1 %377, label %380, label %378

378:                                              ; preds = %375
  %379 = bitcast %"class.std::__1::unique_ptr"* %376 to i8*
  call void @_ZdlPv(i8* %379) #12
  br label %380

380:                                              ; preds = %375, %378
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %151) #11
  br label %381

381:                                              ; preds = %138, %143, %18, %380
  %382 = phi %"class.std::__1::unique_ptr"* [ %1, %18 ], [ %199, %380 ], [ %1, %143 ], [ %1, %138 ]
  ret %"class.std::__1::unique_ptr"* %382
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_10unique_ptrIKN4base11ModuleCache6ModuleENS_14default_deleteIS5_EEEERNS_9allocatorIS8_EEE12emplace_backIJS8_EEEvDpOT_(%"struct.std::__1::__split_buffer.51"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.51", %"struct.std::__1::__split_buffer.51"* %0, i64 0, i32 2
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.51", %"struct.std::__1::__split_buffer.51"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr"* %4, %6
  %8 = ptrtoint %"class.std::__1::unique_ptr"* %6 to i64
  br i1 %7, label %9, label %185

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.51", %"struct.std::__1::__split_buffer.51"* %0, i64 0, i32 1
  %11 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.51", %"struct.std::__1::__split_buffer.51"* %0, i64 0, i32 0
  %13 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %12, align 8
  %14 = icmp ugt %"class.std::__1::unique_ptr"* %11, %13
  %15 = ptrtoint %"class.std::__1::unique_ptr"* %13 to i64
  br i1 %14, label %16, label %49

16:                                               ; preds = %9
  %17 = ptrtoint %"class.std::__1::unique_ptr"* %11 to i64
  %18 = sub i64 %17, %15
  %19 = ashr exact i64 %18, 3
  %20 = add nsw i64 %19, 1
  %21 = sdiv i64 %20, -2
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 %21
  %23 = icmp eq %"class.std::__1::unique_ptr"* %11, %4
  br i1 %23, label %45, label %24

24:                                               ; preds = %16, %39
  %25 = phi %"class.std::__1::unique_ptr"* [ %41, %39 ], [ %22, %16 ]
  %26 = phi %"class.std::__1::unique_ptr"* [ %40, %39 ], [ %11, %16 ]
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::unique_ptr"* %26 to i64*
  %29 = load i64, i64* %28, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %27, align 8
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr"* %25 to i64*
  store i64 %29, i64* %32, align 8
  %33 = icmp eq %"class.base::ModuleCache::Module"* %31, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %24
  %35 = bitcast %"class.base::ModuleCache::Module"* %31 to void (%"class.base::ModuleCache::Module"*)***
  %36 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %36, i64 1
  %38 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %37, align 8
  tail call void %38(%"class.base::ModuleCache::Module"* nonnull %31) #11
  br label %39

39:                                               ; preds = %34, %24
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %26, i64 1
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 1
  %42 = icmp eq %"class.std::__1::unique_ptr"* %40, %4
  br i1 %42, label %43, label %24

43:                                               ; preds = %39
  %44 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %10, align 8
  br label %45

45:                                               ; preds = %43, %16
  %46 = phi %"class.std::__1::unique_ptr"* [ %4, %16 ], [ %44, %43 ]
  %47 = phi %"class.std::__1::unique_ptr"* [ %22, %16 ], [ %41, %43 ]
  store %"class.std::__1::unique_ptr"* %47, %"class.std::__1::unique_ptr"** %3, align 8
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 %21
  store %"class.std::__1::unique_ptr"* %48, %"class.std::__1::unique_ptr"** %10, align 8
  br label %185

49:                                               ; preds = %9
  %50 = bitcast %"class.std::__1::unique_ptr"** %5 to i64*
  %51 = bitcast %"struct.std::__1::__split_buffer.51"* %0 to i64*
  %52 = sub i64 %8, %15
  %53 = ashr exact i64 %52, 2
  %54 = icmp eq i64 %52, 0
  %55 = select i1 %54, i64 1, i64 %53
  %56 = icmp ugt i64 %55, 2305843009213693951
  br i1 %56, label %57, label %58

57:                                               ; preds = %49
  tail call void @abort() #13
  unreachable

58:                                               ; preds = %49
  %59 = lshr i64 %55, 2
  %60 = shl i64 %55, 3
  %61 = tail call i8* @_Znwm(i64 %60) #12
  %62 = bitcast i8* %61 to %"class.std::__1::unique_ptr"*
  %63 = ptrtoint i8* %61 to i64
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %62, i64 %59
  %65 = ptrtoint %"class.std::__1::unique_ptr"* %64 to i64
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %62, i64 %55
  %67 = ptrtoint %"class.std::__1::unique_ptr"* %66 to i64
  %68 = ptrtoint %"class.std::__1::unique_ptr"* %11 to i64
  %69 = ptrtoint %"class.std::__1::unique_ptr"* %4 to i64
  %70 = sub i64 %69, %68
  %71 = ashr exact i64 %70, 3
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 %71
  %73 = icmp eq i64 %70, 0
  br i1 %73, label %160, label %74

74:                                               ; preds = %58
  %75 = add i64 %70, -8
  %76 = lshr i64 %75, 3
  %77 = add nuw nsw i64 %76, 1
  %78 = and i64 %77, 7
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %96, label %80

80:                                               ; preds = %74, %80
  %81 = phi %"class.std::__1::unique_ptr"* [ %89, %80 ], [ %64, %74 ]
  %82 = phi i64 [ %90, %80 ], [ %65, %74 ]
  %83 = phi %"class.std::__1::unique_ptr"* [ %91, %80 ], [ %11, %74 ]
  %84 = phi i64 [ %92, %80 ], [ %78, %74 ]
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 0, i32 0, i32 0, i32 0
  %86 = bitcast %"class.std::__1::unique_ptr"* %83 to i64*
  %87 = load i64, i64* %86, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %85, align 8
  %88 = inttoptr i64 %82 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %81, i64 1
  %90 = ptrtoint %"class.std::__1::unique_ptr"* %89 to i64
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 1
  %92 = add i64 %84, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %80, !llvm.loop !96

94:                                               ; preds = %80
  %95 = ptrtoint %"class.std::__1::unique_ptr"* %89 to i64
  br label %96

96:                                               ; preds = %74, %94
  %97 = phi %"class.std::__1::unique_ptr"* [ %64, %74 ], [ %89, %94 ]
  %98 = phi i64 [ %65, %74 ], [ %95, %94 ]
  %99 = phi %"class.std::__1::unique_ptr"* [ %11, %74 ], [ %91, %94 ]
  %100 = icmp ult i64 %75, 56
  br i1 %100, label %155, label %101

101:                                              ; preds = %96, %101
  %102 = phi %"class.std::__1::unique_ptr"* [ %151, %101 ], [ %97, %96 ]
  %103 = phi i64 [ %152, %101 ], [ %98, %96 ]
  %104 = phi %"class.std::__1::unique_ptr"* [ %153, %101 ], [ %99, %96 ]
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %105, align 8
  %108 = inttoptr i64 %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %102, i64 1
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 1
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %102, i64 2
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 2
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %102, i64 3
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 3
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %102, i64 4
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 4
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %128, i64 0, i32 0, i32 0, i32 0
  %130 = bitcast %"class.std::__1::unique_ptr"* %128 to i64*
  %131 = load i64, i64* %130, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %129, align 8
  %132 = bitcast %"class.std::__1::unique_ptr"* %127 to i64*
  store i64 %131, i64* %132, align 8
  %133 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %102, i64 5
  %134 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 5
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %134, i64 0, i32 0, i32 0, i32 0
  %136 = bitcast %"class.std::__1::unique_ptr"* %134 to i64*
  %137 = load i64, i64* %136, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %135, align 8
  %138 = bitcast %"class.std::__1::unique_ptr"* %133 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %102, i64 6
  %140 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 6
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 0, i32 0, i32 0, i32 0
  %142 = bitcast %"class.std::__1::unique_ptr"* %140 to i64*
  %143 = load i64, i64* %142, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %141, align 8
  %144 = bitcast %"class.std::__1::unique_ptr"* %139 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %102, i64 7
  %146 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 7
  %147 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %146, i64 0, i32 0, i32 0, i32 0
  %148 = bitcast %"class.std::__1::unique_ptr"* %146 to i64*
  %149 = load i64, i64* %148, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %147, align 8
  %150 = bitcast %"class.std::__1::unique_ptr"* %145 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %102, i64 8
  %152 = ptrtoint %"class.std::__1::unique_ptr"* %151 to i64
  %153 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 8
  %154 = icmp eq %"class.std::__1::unique_ptr"* %72, %151
  br i1 %154, label %155, label %101

155:                                              ; preds = %101, %96
  %156 = ptrtoint %"class.std::__1::unique_ptr"* %72 to i64
  %157 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %12, align 8
  %158 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %10, align 8
  %159 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %160

160:                                              ; preds = %58, %155
  %161 = phi %"class.std::__1::unique_ptr"* [ %159, %155 ], [ %4, %58 ]
  %162 = phi %"class.std::__1::unique_ptr"* [ %158, %155 ], [ %11, %58 ]
  %163 = phi %"class.std::__1::unique_ptr"* [ %157, %155 ], [ %13, %58 ]
  %164 = phi i64 [ %156, %155 ], [ %65, %58 ]
  store i64 %63, i64* %51, align 8
  %165 = bitcast %"class.std::__1::unique_ptr"** %10 to i64*
  store i64 %65, i64* %165, align 8
  %166 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  store i64 %164, i64* %166, align 8
  store i64 %67, i64* %50, align 8
  %167 = icmp eq %"class.std::__1::unique_ptr"* %161, %162
  br i1 %167, label %181, label %168

168:                                              ; preds = %160, %179
  %169 = phi %"class.std::__1::unique_ptr"* [ %170, %179 ], [ %161, %160 ]
  %170 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %169, i64 -1
  %171 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %170, i64 0, i32 0, i32 0, i32 0
  %172 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %171, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %171, align 8
  %173 = icmp eq %"class.base::ModuleCache::Module"* %172, null
  br i1 %173, label %179, label %174

174:                                              ; preds = %168
  %175 = bitcast %"class.base::ModuleCache::Module"* %172 to void (%"class.base::ModuleCache::Module"*)***
  %176 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %175, align 8
  %177 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %176, i64 1
  %178 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %177, align 8
  tail call void %178(%"class.base::ModuleCache::Module"* nonnull %172) #11
  br label %179

179:                                              ; preds = %174, %168
  %180 = icmp eq %"class.std::__1::unique_ptr"* %170, %162
  br i1 %180, label %181, label %168

181:                                              ; preds = %179, %160
  %182 = icmp eq %"class.std::__1::unique_ptr"* %163, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %181
  %184 = bitcast %"class.std::__1::unique_ptr"* %163 to i8*
  tail call void @_ZdlPv(i8* %184) #12
  br label %185

185:                                              ; preds = %183, %181, %45, %2
  %186 = bitcast %"class.std::__1::unique_ptr"** %3 to i64**
  %187 = load i64*, i64** %186, align 8
  %188 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %189 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %190 = load i64, i64* %189, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %188, align 8
  store i64 %190, i64* %187, align 8
  %191 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %192 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %191, i64 1
  store %"class.std::__1::unique_ptr"* %192, %"class.std::__1::unique_ptr"** %3, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIKN4base11ModuleCache6ModuleENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.base::ModuleCache::Module"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !97

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %142, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %142, align 8
  %144 = icmp eq %"class.base::ModuleCache::Module"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.base::ModuleCache::Module"* %143 to void (%"class.base::ModuleCache::Module"*)***
  %147 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %147, i64 1
  %149 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %148, align 8
  tail call void %149(%"class.base::ModuleCache::Module"* nonnull %143) #11
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #12
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS_10unique_ptrIKNS1_11ModuleCache6ModuleENS_14default_deleteIS7_EEEENS1_8identityENS5_23ModuleAndAddressCompareENS_6vectorISA_NS_9allocatorISA_EEEEE13value_compareENS_11__wrap_iterIPSA_EEEEvT0_SN_T_NS_15iterator_traitsISN_E15difference_typeEPNSQ_10value_typeEl(%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"struct.base::internal::flat_tree<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, base::identity, base::ModuleCache::ModuleAndAddressCompare, std::__1::vector<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, std::__1::allocator<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> > > > >::value_compare"* dereferenceable(1), i64, %"class.std::__1::unique_ptr"*, i64) local_unnamed_addr #0 comdat {
  switch i64 %3, label %29 [
    i64 0, label %114
    i64 1, label %114
    i64 2, label %7
  ]

7:                                                ; preds = %6
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 -1
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %9, align 8
  %11 = bitcast %"class.base::ModuleCache::Module"* %10 to i64 (%"class.base::ModuleCache::Module"*)***
  %12 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %11, align 8
  %13 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %12, i64 2
  %14 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %13, align 8
  %15 = tail call i64 %14(%"class.base::ModuleCache::Module"* %10) #11
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %16, align 8
  %18 = bitcast %"class.base::ModuleCache::Module"* %17 to i64 (%"class.base::ModuleCache::Module"*)***
  %19 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %18, align 8
  %20 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %19, i64 2
  %21 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %20, align 8
  %22 = tail call i64 %21(%"class.base::ModuleCache::Module"* %17) #11
  %23 = icmp ult i64 %15, %22
  br i1 %23, label %24, label %114

24:                                               ; preds = %7
  %25 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.std::__1::unique_ptr"* %8 to i64*
  %28 = load i64, i64* %27, align 8
  store i64 %28, i64* %25, align 8
  store i64 %26, i64* %27, align 8
  br label %114

29:                                               ; preds = %6
  %30 = icmp slt i64 %3, 1
  br i1 %30, label %31, label %88

31:                                               ; preds = %29
  %32 = icmp eq %"class.std::__1::unique_ptr"* %0, %1
  br i1 %32, label %114, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 1
  %35 = icmp eq %"class.std::__1::unique_ptr"* %34, %1
  br i1 %35, label %114, label %36

36:                                               ; preds = %33, %71
  %37 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %34, %33 ]
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  %40 = load i64, i64* %39, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %38, align 8
  %41 = icmp eq %"class.std::__1::unique_ptr"* %37, %0
  br i1 %41, label %60, label %42

42:                                               ; preds = %36
  %43 = inttoptr i64 %40 to %"class.base::ModuleCache::Module"*
  %44 = inttoptr i64 %40 to i64 (%"class.base::ModuleCache::Module"*)***
  br label %45

45:                                               ; preds = %86, %42
  %46 = phi %"class.std::__1::unique_ptr"* [ %37, %42 ], [ %47, %86 ]
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 -1
  %48 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %44, align 8
  %49 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %48, i64 2
  %50 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %49, align 8
  %51 = tail call i64 %50(%"class.base::ModuleCache::Module"* %43) #11
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %47, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %52, align 8
  %54 = bitcast %"class.base::ModuleCache::Module"* %53 to i64 (%"class.base::ModuleCache::Module"*)***
  %55 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %54, align 8
  %56 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %55, i64 2
  %57 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %56, align 8
  %58 = tail call i64 %57(%"class.base::ModuleCache::Module"* %53) #11
  %59 = icmp ult i64 %51, %58
  br i1 %59, label %74, label %60

60:                                               ; preds = %86, %45, %36
  %61 = phi %"class.std::__1::unique_ptr"* [ %0, %36 ], [ %46, %45 ], [ %0, %86 ]
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %62, align 8
  %64 = bitcast %"class.std::__1::unique_ptr"* %61 to i64*
  store i64 %40, i64* %64, align 8
  %65 = icmp eq %"class.base::ModuleCache::Module"* %63, null
  br i1 %65, label %71, label %66

66:                                               ; preds = %60
  %67 = bitcast %"class.base::ModuleCache::Module"* %63 to void (%"class.base::ModuleCache::Module"*)***
  %68 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %68, i64 1
  %70 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %69, align 8
  tail call void %70(%"class.base::ModuleCache::Module"* nonnull %63) #11
  br label %71

71:                                               ; preds = %66, %60
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %73 = icmp eq %"class.std::__1::unique_ptr"* %72, %1
  br i1 %73, label %114, label %36

74:                                               ; preds = %45
  %75 = bitcast %"class.std::__1::unique_ptr"* %47 to i64*
  %76 = load i64, i64* %75, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %52, align 8
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 0, i32 0, i32 0, i32 0
  %78 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %77, align 8
  %79 = bitcast %"class.std::__1::unique_ptr"* %46 to i64*
  store i64 %76, i64* %79, align 8
  %80 = icmp eq %"class.base::ModuleCache::Module"* %78, null
  br i1 %80, label %86, label %81

81:                                               ; preds = %74
  %82 = bitcast %"class.base::ModuleCache::Module"* %78 to void (%"class.base::ModuleCache::Module"*)***
  %83 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %83, i64 1
  %85 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %84, align 8
  tail call void %85(%"class.base::ModuleCache::Module"* nonnull %78) #11
  br label %86

86:                                               ; preds = %81, %74
  %87 = icmp eq %"class.std::__1::unique_ptr"* %47, %0
  br i1 %87, label %60, label %45

88:                                               ; preds = %29
  %89 = lshr i64 %3, 1
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 %89
  %91 = icmp sgt i64 %3, %5
  br i1 %91, label %112, label %92

92:                                               ; preds = %88
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeINS_10unique_ptrIKNS1_11ModuleCache6ModuleENS_14default_deleteIS7_EEEENS1_8identityENS5_23ModuleAndAddressCompareENS_6vectorISA_NS_9allocatorISA_EEEEE13value_compareENS_11__wrap_iterIPSA_EEEEvT0_SN_T_NS_15iterator_traitsISN_E15difference_typeEPNSQ_10value_typeE(%"class.std::__1::unique_ptr"* %0, %"class.std::__1::unique_ptr"* %90, %"struct.base::internal::flat_tree<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, base::identity, base::ModuleCache::ModuleAndAddressCompare, std::__1::vector<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, std::__1::allocator<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> > > > >::value_compare"* dereferenceable(1) %2, i64 %89, %"class.std::__1::unique_ptr"* %4)
  %93 = sub nsw i64 %3, %89
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 %89
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeINS_10unique_ptrIKNS1_11ModuleCache6ModuleENS_14default_deleteIS7_EEEENS1_8identityENS5_23ModuleAndAddressCompareENS_6vectorISA_NS_9allocatorISA_EEEEE13value_compareENS_11__wrap_iterIPSA_EEEEvT0_SN_T_NS_15iterator_traitsISN_E15difference_typeEPNSQ_10value_typeE(%"class.std::__1::unique_ptr"* %90, %"class.std::__1::unique_ptr"* %1, %"struct.base::internal::flat_tree<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, base::identity, base::ModuleCache::ModuleAndAddressCompare, std::__1::vector<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, std::__1::allocator<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> > > > >::value_compare"* dereferenceable(1) %2, i64 %93, %"class.std::__1::unique_ptr"* %94)
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 %3
  tail call void @_ZNSt3__119__merge_move_assignIRN4base8internal9flat_treeINS_10unique_ptrIKNS1_11ModuleCache6ModuleENS_14default_deleteIS7_EEEENS1_8identityENS5_23ModuleAndAddressCompareENS_6vectorISA_NS_9allocatorISA_EEEEE13value_compareEPSA_SK_NS_11__wrap_iterISK_EEEEvT0_SN_T1_SO_T2_T_(%"class.std::__1::unique_ptr"* %4, %"class.std::__1::unique_ptr"* %94, %"class.std::__1::unique_ptr"* %94, %"class.std::__1::unique_ptr"* %95, %"class.std::__1::unique_ptr"* %0, %"struct.base::internal::flat_tree<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, base::identity, base::ModuleCache::ModuleAndAddressCompare, std::__1::vector<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, std::__1::allocator<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> > > > >::value_compare"* dereferenceable(1) %2)
  %96 = icmp eq %"class.std::__1::unique_ptr"* %4, null
  br i1 %96, label %114, label %97

97:                                               ; preds = %92, %108
  %98 = phi i64 [ %109, %108 ], [ 0, %92 ]
  %99 = phi %"class.std::__1::unique_ptr"* [ %110, %108 ], [ %4, %92 ]
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %99, i64 0, i32 0, i32 0, i32 0
  %101 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %100, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %100, align 8
  %102 = icmp eq %"class.base::ModuleCache::Module"* %101, null
  br i1 %102, label %108, label %103

103:                                              ; preds = %97
  %104 = bitcast %"class.base::ModuleCache::Module"* %101 to void (%"class.base::ModuleCache::Module"*)***
  %105 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %104, align 8
  %106 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %105, i64 1
  %107 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %106, align 8
  tail call void %107(%"class.base::ModuleCache::Module"* nonnull %101) #11
  br label %108

108:                                              ; preds = %103, %97
  %109 = add nuw i64 %98, 1
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %99, i64 1
  %111 = icmp eq i64 %109, %3
  br i1 %111, label %114, label %97

112:                                              ; preds = %88
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS_10unique_ptrIKNS1_11ModuleCache6ModuleENS_14default_deleteIS7_EEEENS1_8identityENS5_23ModuleAndAddressCompareENS_6vectorISA_NS_9allocatorISA_EEEEE13value_compareENS_11__wrap_iterIPSA_EEEEvT0_SN_T_NS_15iterator_traitsISN_E15difference_typeEPNSQ_10value_typeEl(%"class.std::__1::unique_ptr"* %0, %"class.std::__1::unique_ptr"* %90, %"struct.base::internal::flat_tree<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, base::identity, base::ModuleCache::ModuleAndAddressCompare, std::__1::vector<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, std::__1::allocator<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> > > > >::value_compare"* dereferenceable(1) %2, i64 %89, %"class.std::__1::unique_ptr"* %4, i64 %5)
  %113 = sub nsw i64 %3, %89
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS_10unique_ptrIKNS1_11ModuleCache6ModuleENS_14default_deleteIS7_EEEENS1_8identityENS5_23ModuleAndAddressCompareENS_6vectorISA_NS_9allocatorISA_EEEEE13value_compareENS_11__wrap_iterIPSA_EEEEvT0_SN_T_NS_15iterator_traitsISN_E15difference_typeEPNSQ_10value_typeEl(%"class.std::__1::unique_ptr"* %90, %"class.std::__1::unique_ptr"* %1, %"struct.base::internal::flat_tree<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, base::identity, base::ModuleCache::ModuleAndAddressCompare, std::__1::vector<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, std::__1::allocator<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> > > > >::value_compare"* dereferenceable(1) %2, i64 %113, %"class.std::__1::unique_ptr"* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS_10unique_ptrIKNS1_11ModuleCache6ModuleENS_14default_deleteIS7_EEEENS1_8identityENS5_23ModuleAndAddressCompareENS_6vectorISA_NS_9allocatorISA_EEEEE13value_compareENS_11__wrap_iterIPSA_EEEEvT0_SN_SN_T_NS_15iterator_traitsISN_E15difference_typeESR_PNSQ_10value_typeEl(%"class.std::__1::unique_ptr"* %0, %"class.std::__1::unique_ptr"* %90, %"class.std::__1::unique_ptr"* %1, %"struct.base::internal::flat_tree<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, base::identity, base::ModuleCache::ModuleAndAddressCompare, std::__1::vector<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, std::__1::allocator<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> > > > >::value_compare"* dereferenceable(1) %2, i64 %89, i64 %113, %"class.std::__1::unique_ptr"* %4, i64 %5)
  ret void

114:                                              ; preds = %108, %71, %92, %33, %31, %7, %24, %6, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeINS_10unique_ptrIKNS1_11ModuleCache6ModuleENS_14default_deleteIS7_EEEENS1_8identityENS5_23ModuleAndAddressCompareENS_6vectorISA_NS_9allocatorISA_EEEEE13value_compareENS_11__wrap_iterIPSA_EEEEvT0_SN_T_NS_15iterator_traitsISN_E15difference_typeEPNSQ_10value_typeE(%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"struct.base::internal::flat_tree<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, base::identity, base::ModuleCache::ModuleAndAddressCompare, std::__1::vector<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, std::__1::allocator<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> > > > >::value_compare"* dereferenceable(1), i64, %"class.std::__1::unique_ptr"*) local_unnamed_addr #0 comdat {
  switch i64 %3, label %44 [
    i64 0, label %250
    i64 1, label %6
    i64 2, label %11
  ]

6:                                                ; preds = %5
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %7, align 8
  %10 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %9, i64* %10, align 8
  br label %250

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 -1
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %13, align 8
  %15 = bitcast %"class.base::ModuleCache::Module"* %14 to i64 (%"class.base::ModuleCache::Module"*)***
  %16 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %15, align 8
  %17 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %16, i64 2
  %18 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %17, align 8
  %19 = tail call i64 %18(%"class.base::ModuleCache::Module"* %14) #11
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %20, align 8
  %22 = bitcast %"class.base::ModuleCache::Module"* %21 to i64 (%"class.base::ModuleCache::Module"*)***
  %23 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %23, i64 2
  %25 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %24, align 8
  %26 = tail call i64 %25(%"class.base::ModuleCache::Module"* %21) #11
  %27 = icmp ult i64 %19, %26
  br i1 %27, label %28, label %36

28:                                               ; preds = %11
  %29 = bitcast %"class.std::__1::unique_ptr"* %12 to i64*
  %30 = load i64, i64* %29, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %13, align 8
  %31 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 1
  %33 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  %34 = load i64, i64* %33, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %20, align 8
  %35 = bitcast %"class.std::__1::unique_ptr"* %32 to i64*
  store i64 %34, i64* %35, align 8
  br label %250

36:                                               ; preds = %11
  %37 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  %38 = load i64, i64* %37, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %20, align 8
  %39 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 1
  %41 = bitcast %"class.std::__1::unique_ptr"* %12 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %13, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %40 to i64*
  store i64 %42, i64* %43, align 8
  br label %250

44:                                               ; preds = %5
  %45 = icmp slt i64 %3, 9
  br i1 %45, label %46, label %47

46:                                               ; preds = %44
  tail call void @_ZNSt3__121__insertion_sort_moveIRN4base8internal9flat_treeINS_10unique_ptrIKNS1_11ModuleCache6ModuleENS_14default_deleteIS7_EEEENS1_8identityENS5_23ModuleAndAddressCompareENS_6vectorISA_NS_9allocatorISA_EEEEE13value_compareENS_11__wrap_iterIPSA_EEEEvT0_SN_PNS_15iterator_traitsISN_E10value_typeET_(%"class.std::__1::unique_ptr"* %0, %"class.std::__1::unique_ptr"* %1, %"class.std::__1::unique_ptr"* %4, %"struct.base::internal::flat_tree<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, base::identity, base::ModuleCache::ModuleAndAddressCompare, std::__1::vector<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, std::__1::allocator<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> > > > >::value_compare"* dereferenceable(1) %2)
  br label %250

47:                                               ; preds = %44
  %48 = lshr i64 %3, 1
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 %48
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS_10unique_ptrIKNS1_11ModuleCache6ModuleENS_14default_deleteIS7_EEEENS1_8identityENS5_23ModuleAndAddressCompareENS_6vectorISA_NS_9allocatorISA_EEEEE13value_compareENS_11__wrap_iterIPSA_EEEEvT0_SN_T_NS_15iterator_traitsISN_E15difference_typeEPNSQ_10value_typeEl(%"class.std::__1::unique_ptr"* %0, %"class.std::__1::unique_ptr"* %49, %"struct.base::internal::flat_tree<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, base::identity, base::ModuleCache::ModuleAndAddressCompare, std::__1::vector<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, std::__1::allocator<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> > > > >::value_compare"* dereferenceable(1) %2, i64 %48, %"class.std::__1::unique_ptr"* %4, i64 %48)
  %50 = sub nsw i64 %3, %48
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 %48
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS_10unique_ptrIKNS1_11ModuleCache6ModuleENS_14default_deleteIS7_EEEENS1_8identityENS5_23ModuleAndAddressCompareENS_6vectorISA_NS_9allocatorISA_EEEEE13value_compareENS_11__wrap_iterIPSA_EEEEvT0_SN_T_NS_15iterator_traitsISN_E15difference_typeEPNSQ_10value_typeEl(%"class.std::__1::unique_ptr"* %49, %"class.std::__1::unique_ptr"* %1, %"struct.base::internal::flat_tree<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, base::identity, base::ModuleCache::ModuleAndAddressCompare, std::__1::vector<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, std::__1::allocator<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> > > > >::value_compare"* dereferenceable(1) %2, i64 %50, %"class.std::__1::unique_ptr"* %51, i64 %50)
  %52 = icmp eq i64 %48, 0
  br i1 %52, label %53, label %134

53:                                               ; preds = %245, %47
  %54 = phi %"class.std::__1::unique_ptr"* [ %49, %47 ], [ %246, %245 ]
  %55 = phi %"class.std::__1::unique_ptr"* [ %4, %47 ], [ %248, %245 ]
  %56 = icmp eq %"class.std::__1::unique_ptr"* %54, %1
  br i1 %56, label %250, label %57

57:                                               ; preds = %53
  %58 = ptrtoint %"class.std::__1::unique_ptr"* %54 to i64
  %59 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 -1, i32 0, i32 0, i32 0
  %60 = ptrtoint %"class.base::ModuleCache::Module"** %59 to i64
  %61 = sub i64 %60, %58
  %62 = lshr i64 %61, 3
  %63 = add nuw nsw i64 %62, 1
  %64 = and i64 %63, 7
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %78, label %66

66:                                               ; preds = %57, %66
  %67 = phi %"class.std::__1::unique_ptr"* [ %75, %66 ], [ %55, %57 ]
  %68 = phi %"class.std::__1::unique_ptr"* [ %74, %66 ], [ %54, %57 ]
  %69 = phi i64 [ %76, %66 ], [ %64, %57 ]
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %68, i64 0, i32 0, i32 0, i32 0
  %71 = bitcast %"class.std::__1::unique_ptr"* %68 to i64*
  %72 = load i64, i64* %71, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %70, align 8
  %73 = bitcast %"class.std::__1::unique_ptr"* %67 to i64*
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %68, i64 1
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %67, i64 1
  %76 = add i64 %69, -1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %66, !llvm.loop !98

78:                                               ; preds = %66, %57
  %79 = phi %"class.std::__1::unique_ptr"* [ %55, %57 ], [ %75, %66 ]
  %80 = phi %"class.std::__1::unique_ptr"* [ %54, %57 ], [ %74, %66 ]
  %81 = icmp ult i64 %61, 56
  br i1 %81, label %250, label %82

82:                                               ; preds = %78, %82
  %83 = phi %"class.std::__1::unique_ptr"* [ %132, %82 ], [ %79, %78 ]
  %84 = phi %"class.std::__1::unique_ptr"* [ %131, %82 ], [ %80, %78 ]
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %84, i64 0, i32 0, i32 0, i32 0
  %86 = bitcast %"class.std::__1::unique_ptr"* %84 to i64*
  %87 = load i64, i64* %86, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %85, align 8
  %88 = bitcast %"class.std::__1::unique_ptr"* %83 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %84, i64 1
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 1
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %89, i64 0, i32 0, i32 0, i32 0
  %92 = bitcast %"class.std::__1::unique_ptr"* %89 to i64*
  %93 = load i64, i64* %92, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %91, align 8
  %94 = bitcast %"class.std::__1::unique_ptr"* %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %84, i64 2
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 2
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %95, i64 0, i32 0, i32 0, i32 0
  %98 = bitcast %"class.std::__1::unique_ptr"* %95 to i64*
  %99 = load i64, i64* %98, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %97, align 8
  %100 = bitcast %"class.std::__1::unique_ptr"* %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %84, i64 3
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 3
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %101, i64 0, i32 0, i32 0, i32 0
  %104 = bitcast %"class.std::__1::unique_ptr"* %101 to i64*
  %105 = load i64, i64* %104, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %103, align 8
  %106 = bitcast %"class.std::__1::unique_ptr"* %102 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %84, i64 4
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 4
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %107, i64 0, i32 0, i32 0, i32 0
  %110 = bitcast %"class.std::__1::unique_ptr"* %107 to i64*
  %111 = load i64, i64* %110, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %109, align 8
  %112 = bitcast %"class.std::__1::unique_ptr"* %108 to i64*
  store i64 %111, i64* %112, align 8
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %84, i64 5
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 5
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %113, i64 0, i32 0, i32 0, i32 0
  %116 = bitcast %"class.std::__1::unique_ptr"* %113 to i64*
  %117 = load i64, i64* %116, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %115, align 8
  %118 = bitcast %"class.std::__1::unique_ptr"* %114 to i64*
  store i64 %117, i64* %118, align 8
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %84, i64 6
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 6
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %119, i64 0, i32 0, i32 0, i32 0
  %122 = bitcast %"class.std::__1::unique_ptr"* %119 to i64*
  %123 = load i64, i64* %122, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %121, align 8
  %124 = bitcast %"class.std::__1::unique_ptr"* %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %84, i64 7
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 7
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %125, i64 0, i32 0, i32 0, i32 0
  %128 = bitcast %"class.std::__1::unique_ptr"* %125 to i64*
  %129 = load i64, i64* %128, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %127, align 8
  %130 = bitcast %"class.std::__1::unique_ptr"* %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %84, i64 8
  %132 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 8
  %133 = icmp eq %"class.std::__1::unique_ptr"* %131, %1
  br i1 %133, label %250, label %82

134:                                              ; preds = %47, %245
  %135 = phi %"class.std::__1::unique_ptr"* [ %248, %245 ], [ %4, %47 ]
  %136 = phi %"class.std::__1::unique_ptr"* [ %247, %245 ], [ %0, %47 ]
  %137 = phi %"class.std::__1::unique_ptr"* [ %246, %245 ], [ %49, %47 ]
  %138 = icmp eq %"class.std::__1::unique_ptr"* %137, %1
  br i1 %138, label %139, label %219

139:                                              ; preds = %134
  %140 = icmp eq %"class.std::__1::unique_ptr"* %136, %49
  br i1 %140, label %250, label %141

141:                                              ; preds = %139
  %142 = ptrtoint %"class.std::__1::unique_ptr"* %136 to i64
  %143 = add nsw i64 %48, -1
  %144 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 %143, i32 0, i32 0, i32 0
  %145 = ptrtoint %"class.base::ModuleCache::Module"** %144 to i64
  %146 = sub i64 %145, %142
  %147 = lshr i64 %146, 3
  %148 = add nuw nsw i64 %147, 1
  %149 = and i64 %148, 7
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %163, label %151

151:                                              ; preds = %141, %151
  %152 = phi %"class.std::__1::unique_ptr"* [ %160, %151 ], [ %135, %141 ]
  %153 = phi %"class.std::__1::unique_ptr"* [ %159, %151 ], [ %136, %141 ]
  %154 = phi i64 [ %161, %151 ], [ %149, %141 ]
  %155 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %153, i64 0, i32 0, i32 0, i32 0
  %156 = bitcast %"class.std::__1::unique_ptr"* %153 to i64*
  %157 = load i64, i64* %156, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %155, align 8
  %158 = bitcast %"class.std::__1::unique_ptr"* %152 to i64*
  store i64 %157, i64* %158, align 8
  %159 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %153, i64 1
  %160 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %152, i64 1
  %161 = add i64 %154, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %151, !llvm.loop !99

163:                                              ; preds = %151, %141
  %164 = phi %"class.std::__1::unique_ptr"* [ %135, %141 ], [ %160, %151 ]
  %165 = phi %"class.std::__1::unique_ptr"* [ %136, %141 ], [ %159, %151 ]
  %166 = icmp ult i64 %146, 56
  br i1 %166, label %250, label %167

167:                                              ; preds = %163, %167
  %168 = phi %"class.std::__1::unique_ptr"* [ %217, %167 ], [ %164, %163 ]
  %169 = phi %"class.std::__1::unique_ptr"* [ %216, %167 ], [ %165, %163 ]
  %170 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %169, i64 0, i32 0, i32 0, i32 0
  %171 = bitcast %"class.std::__1::unique_ptr"* %169 to i64*
  %172 = load i64, i64* %171, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %170, align 8
  %173 = bitcast %"class.std::__1::unique_ptr"* %168 to i64*
  store i64 %172, i64* %173, align 8
  %174 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %169, i64 1
  %175 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %168, i64 1
  %176 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %174, i64 0, i32 0, i32 0, i32 0
  %177 = bitcast %"class.std::__1::unique_ptr"* %174 to i64*
  %178 = load i64, i64* %177, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %176, align 8
  %179 = bitcast %"class.std::__1::unique_ptr"* %175 to i64*
  store i64 %178, i64* %179, align 8
  %180 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %169, i64 2
  %181 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %168, i64 2
  %182 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %180, i64 0, i32 0, i32 0, i32 0
  %183 = bitcast %"class.std::__1::unique_ptr"* %180 to i64*
  %184 = load i64, i64* %183, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %182, align 8
  %185 = bitcast %"class.std::__1::unique_ptr"* %181 to i64*
  store i64 %184, i64* %185, align 8
  %186 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %169, i64 3
  %187 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %168, i64 3
  %188 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %186, i64 0, i32 0, i32 0, i32 0
  %189 = bitcast %"class.std::__1::unique_ptr"* %186 to i64*
  %190 = load i64, i64* %189, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %188, align 8
  %191 = bitcast %"class.std::__1::unique_ptr"* %187 to i64*
  store i64 %190, i64* %191, align 8
  %192 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %169, i64 4
  %193 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %168, i64 4
  %194 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %192, i64 0, i32 0, i32 0, i32 0
  %195 = bitcast %"class.std::__1::unique_ptr"* %192 to i64*
  %196 = load i64, i64* %195, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %194, align 8
  %197 = bitcast %"class.std::__1::unique_ptr"* %193 to i64*
  store i64 %196, i64* %197, align 8
  %198 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %169, i64 5
  %199 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %168, i64 5
  %200 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %198, i64 0, i32 0, i32 0, i32 0
  %201 = bitcast %"class.std::__1::unique_ptr"* %198 to i64*
  %202 = load i64, i64* %201, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %200, align 8
  %203 = bitcast %"class.std::__1::unique_ptr"* %199 to i64*
  store i64 %202, i64* %203, align 8
  %204 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %169, i64 6
  %205 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %168, i64 6
  %206 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %204, i64 0, i32 0, i32 0, i32 0
  %207 = bitcast %"class.std::__1::unique_ptr"* %204 to i64*
  %208 = load i64, i64* %207, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %206, align 8
  %209 = bitcast %"class.std::__1::unique_ptr"* %205 to i64*
  store i64 %208, i64* %209, align 8
  %210 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %169, i64 7
  %211 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %168, i64 7
  %212 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %210, i64 0, i32 0, i32 0, i32 0
  %213 = bitcast %"class.std::__1::unique_ptr"* %210 to i64*
  %214 = load i64, i64* %213, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %212, align 8
  %215 = bitcast %"class.std::__1::unique_ptr"* %211 to i64*
  store i64 %214, i64* %215, align 8
  %216 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %169, i64 8
  %217 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %168, i64 8
  %218 = icmp eq %"class.std::__1::unique_ptr"* %216, %49
  br i1 %218, label %250, label %167

219:                                              ; preds = %134
  %220 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %137, i64 0, i32 0, i32 0, i32 0
  %221 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %220, align 8
  %222 = bitcast %"class.base::ModuleCache::Module"* %221 to i64 (%"class.base::ModuleCache::Module"*)***
  %223 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %222, align 8
  %224 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %223, i64 2
  %225 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %224, align 8
  %226 = tail call i64 %225(%"class.base::ModuleCache::Module"* %221) #11
  %227 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %136, i64 0, i32 0, i32 0, i32 0
  %228 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %227, align 8
  %229 = bitcast %"class.base::ModuleCache::Module"* %228 to i64 (%"class.base::ModuleCache::Module"*)***
  %230 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %229, align 8
  %231 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %230, i64 2
  %232 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %231, align 8
  %233 = tail call i64 %232(%"class.base::ModuleCache::Module"* %228) #11
  %234 = icmp ult i64 %226, %233
  br i1 %234, label %235, label %240

235:                                              ; preds = %219
  %236 = bitcast %"class.std::__1::unique_ptr"* %137 to i64*
  %237 = load i64, i64* %236, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %220, align 8
  %238 = bitcast %"class.std::__1::unique_ptr"* %135 to i64*
  store i64 %237, i64* %238, align 8
  %239 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %137, i64 1
  br label %245

240:                                              ; preds = %219
  %241 = bitcast %"class.std::__1::unique_ptr"* %136 to i64*
  %242 = load i64, i64* %241, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %227, align 8
  %243 = bitcast %"class.std::__1::unique_ptr"* %135 to i64*
  store i64 %242, i64* %243, align 8
  %244 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %136, i64 1
  br label %245

245:                                              ; preds = %240, %235
  %246 = phi %"class.std::__1::unique_ptr"* [ %239, %235 ], [ %137, %240 ]
  %247 = phi %"class.std::__1::unique_ptr"* [ %136, %235 ], [ %244, %240 ]
  %248 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %135, i64 1
  %249 = icmp eq %"class.std::__1::unique_ptr"* %247, %49
  br i1 %249, label %53, label %134

250:                                              ; preds = %163, %167, %78, %82, %139, %53, %36, %28, %5, %46, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__119__merge_move_assignIRN4base8internal9flat_treeINS_10unique_ptrIKNS1_11ModuleCache6ModuleENS_14default_deleteIS7_EEEENS1_8identityENS5_23ModuleAndAddressCompareENS_6vectorISA_NS_9allocatorISA_EEEEE13value_compareEPSA_SK_NS_11__wrap_iterISK_EEEEvT0_SN_T1_SO_T2_T_(%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"struct.base::internal::flat_tree<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, base::identity, base::ModuleCache::ModuleAndAddressCompare, std::__1::vector<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, std::__1::allocator<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> > > > >::value_compare"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %7 = icmp eq %"class.std::__1::unique_ptr"* %0, %1
  br i1 %7, label %8, label %12

8:                                                ; preds = %82, %6
  %9 = phi %"class.std::__1::unique_ptr"* [ %4, %6 ], [ %85, %82 ]
  %10 = phi %"class.std::__1::unique_ptr"* [ %2, %6 ], [ %83, %82 ]
  %11 = icmp eq %"class.std::__1::unique_ptr"* %10, %3
  br i1 %11, label %106, label %87

12:                                               ; preds = %6, %82
  %13 = phi %"class.std::__1::unique_ptr"* [ %84, %82 ], [ %0, %6 ]
  %14 = phi %"class.std::__1::unique_ptr"* [ %83, %82 ], [ %2, %6 ]
  %15 = phi %"class.std::__1::unique_ptr"* [ %85, %82 ], [ %4, %6 ]
  %16 = icmp eq %"class.std::__1::unique_ptr"* %14, %3
  br i1 %16, label %17, label %38

17:                                               ; preds = %12
  %18 = icmp eq %"class.std::__1::unique_ptr"* %13, %1
  br i1 %18, label %106, label %19

19:                                               ; preds = %17, %34
  %20 = phi %"class.std::__1::unique_ptr"* [ %35, %34 ], [ %13, %17 ]
  %21 = phi %"class.std::__1::unique_ptr"* [ %36, %34 ], [ %15, %17 ]
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.std::__1::unique_ptr"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %22, align 8
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %25, align 8
  %27 = bitcast %"class.std::__1::unique_ptr"* %21 to i64*
  store i64 %24, i64* %27, align 8
  %28 = icmp eq %"class.base::ModuleCache::Module"* %26, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %19
  %30 = bitcast %"class.base::ModuleCache::Module"* %26 to void (%"class.base::ModuleCache::Module"*)***
  %31 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %31, i64 1
  %33 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %32, align 8
  tail call void %33(%"class.base::ModuleCache::Module"* nonnull %26) #11
  br label %34

34:                                               ; preds = %19, %29
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 1
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 1
  %37 = icmp eq %"class.std::__1::unique_ptr"* %35, %1
  br i1 %37, label %106, label %19

38:                                               ; preds = %12
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %39, align 8
  %41 = bitcast %"class.base::ModuleCache::Module"* %40 to i64 (%"class.base::ModuleCache::Module"*)***
  %42 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %41, align 8
  %43 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %42, i64 2
  %44 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %43, align 8
  %45 = tail call i64 %44(%"class.base::ModuleCache::Module"* %40) #11
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %46, align 8
  %48 = bitcast %"class.base::ModuleCache::Module"* %47 to i64 (%"class.base::ModuleCache::Module"*)***
  %49 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %48, align 8
  %50 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %49, i64 2
  %51 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %50, align 8
  %52 = tail call i64 %51(%"class.base::ModuleCache::Module"* %47) #11
  %53 = icmp ult i64 %45, %52
  br i1 %53, label %54, label %68

54:                                               ; preds = %38
  %55 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  %56 = load i64, i64* %55, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %57, align 8
  %59 = bitcast %"class.std::__1::unique_ptr"* %15 to i64*
  store i64 %56, i64* %59, align 8
  %60 = icmp eq %"class.base::ModuleCache::Module"* %58, null
  br i1 %60, label %66, label %61

61:                                               ; preds = %54
  %62 = bitcast %"class.base::ModuleCache::Module"* %58 to void (%"class.base::ModuleCache::Module"*)***
  %63 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %63, i64 1
  %65 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %64, align 8
  tail call void %65(%"class.base::ModuleCache::Module"* nonnull %58) #11
  br label %66

66:                                               ; preds = %54, %61
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 1
  br label %82

68:                                               ; preds = %38
  %69 = bitcast %"class.std::__1::unique_ptr"* %13 to i64*
  %70 = load i64, i64* %69, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %46, align 8
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 0, i32 0, i32 0, i32 0
  %72 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %71, align 8
  %73 = bitcast %"class.std::__1::unique_ptr"* %15 to i64*
  store i64 %70, i64* %73, align 8
  %74 = icmp eq %"class.base::ModuleCache::Module"* %72, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %68
  %76 = bitcast %"class.base::ModuleCache::Module"* %72 to void (%"class.base::ModuleCache::Module"*)***
  %77 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %77, i64 1
  %79 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %78, align 8
  tail call void %79(%"class.base::ModuleCache::Module"* nonnull %72) #11
  br label %80

80:                                               ; preds = %68, %75
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 1
  br label %82

82:                                               ; preds = %66, %80
  %83 = phi %"class.std::__1::unique_ptr"* [ %67, %66 ], [ %14, %80 ]
  %84 = phi %"class.std::__1::unique_ptr"* [ %13, %66 ], [ %81, %80 ]
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 1
  %86 = icmp eq %"class.std::__1::unique_ptr"* %84, %1
  br i1 %86, label %8, label %12

87:                                               ; preds = %8, %102
  %88 = phi %"class.std::__1::unique_ptr"* [ %103, %102 ], [ %10, %8 ]
  %89 = phi %"class.std::__1::unique_ptr"* [ %104, %102 ], [ %9, %8 ]
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %88, i64 0, i32 0, i32 0, i32 0
  %91 = bitcast %"class.std::__1::unique_ptr"* %88 to i64*
  %92 = load i64, i64* %91, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %90, align 8
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %89, i64 0, i32 0, i32 0, i32 0
  %94 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %93, align 8
  %95 = bitcast %"class.std::__1::unique_ptr"* %89 to i64*
  store i64 %92, i64* %95, align 8
  %96 = icmp eq %"class.base::ModuleCache::Module"* %94, null
  br i1 %96, label %102, label %97

97:                                               ; preds = %87
  %98 = bitcast %"class.base::ModuleCache::Module"* %94 to void (%"class.base::ModuleCache::Module"*)***
  %99 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %98, align 8
  %100 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %99, i64 1
  %101 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %100, align 8
  tail call void %101(%"class.base::ModuleCache::Module"* nonnull %94) #11
  br label %102

102:                                              ; preds = %87, %97
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %88, i64 1
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %89, i64 1
  %105 = icmp eq %"class.std::__1::unique_ptr"* %103, %3
  br i1 %105, label %106, label %87

106:                                              ; preds = %34, %102, %17, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS_10unique_ptrIKNS1_11ModuleCache6ModuleENS_14default_deleteIS7_EEEENS1_8identityENS5_23ModuleAndAddressCompareENS_6vectorISA_NS_9allocatorISA_EEEEE13value_compareENS_11__wrap_iterIPSA_EEEEvT0_SN_SN_T_NS_15iterator_traitsISN_E15difference_typeESR_PNSQ_10value_typeEl(%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"struct.base::internal::flat_tree<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, base::identity, base::ModuleCache::ModuleAndAddressCompare, std::__1::vector<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, std::__1::allocator<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> > > > >::value_compare"* dereferenceable(1), i64, i64, %"class.std::__1::unique_ptr"*, i64) local_unnamed_addr #0 comdat {
  %9 = icmp eq i64 %5, 0
  br i1 %9, label %291, label %10

10:                                               ; preds = %8
  %11 = ptrtoint %"class.std::__1::unique_ptr"* %1 to i64
  %12 = ptrtoint %"class.std::__1::unique_ptr"* %0 to i64
  br label %13

13:                                               ; preds = %10, %284
  %14 = phi %"class.std::__1::unique_ptr"* [ %289, %284 ], [ %2, %10 ]
  %15 = phi i64 [ %288, %284 ], [ %4, %10 ]
  %16 = phi i64 [ %287, %284 ], [ %5, %10 ]
  %17 = phi i64 [ %286, %284 ], [ %11, %10 ]
  %18 = phi i64 [ %285, %284 ], [ %12, %10 ]
  %19 = icmp sgt i64 %15, %7
  %20 = icmp sgt i64 %16, %7
  %21 = and i1 %20, %19
  br i1 %21, label %22, label %27

22:                                               ; preds = %13
  %23 = icmp eq i64 %15, 0
  br i1 %23, label %291, label %24

24:                                               ; preds = %22
  %25 = inttoptr i64 %17 to %"class.std::__1::unique_ptr"*
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 0, i32 0, i32 0, i32 0
  br label %30

27:                                               ; preds = %13
  %28 = inttoptr i64 %18 to %"class.std::__1::unique_ptr"*
  %29 = inttoptr i64 %17 to %"class.std::__1::unique_ptr"*
  tail call void @_ZNSt3__124__buffered_inplace_mergeIRN4base8internal9flat_treeINS_10unique_ptrIKNS1_11ModuleCache6ModuleENS_14default_deleteIS7_EEEENS1_8identityENS5_23ModuleAndAddressCompareENS_6vectorISA_NS_9allocatorISA_EEEEE13value_compareENS_11__wrap_iterIPSA_EEEEvT0_SN_SN_T_NS_15iterator_traitsISN_E15difference_typeESR_PNSQ_10value_typeE(%"class.std::__1::unique_ptr"* %28, %"class.std::__1::unique_ptr"* %29, %"class.std::__1::unique_ptr"* %14, %"struct.base::internal::flat_tree<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, base::identity, base::ModuleCache::ModuleAndAddressCompare, std::__1::vector<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, std::__1::allocator<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> > > > >::value_compare"* dereferenceable(1) %3, i64 %15, i64 %16, %"class.std::__1::unique_ptr"* %6)
  br label %291

30:                                               ; preds = %24, %48
  %31 = phi i64 [ %15, %24 ], [ %51, %48 ]
  %32 = phi i64 [ %18, %24 ], [ %50, %48 ]
  %33 = inttoptr i64 %32 to %"class.std::__1::unique_ptr"*
  %34 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %26, align 8
  %35 = bitcast %"class.base::ModuleCache::Module"* %34 to i64 (%"class.base::ModuleCache::Module"*)***
  %36 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %35, align 8
  %37 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %36, i64 2
  %38 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %37, align 8
  %39 = tail call i64 %38(%"class.base::ModuleCache::Module"* %34) #11
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %33, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %40, align 8
  %42 = bitcast %"class.base::ModuleCache::Module"* %41 to i64 (%"class.base::ModuleCache::Module"*)***
  %43 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %42, align 8
  %44 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %43, i64 2
  %45 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %44, align 8
  %46 = tail call i64 %45(%"class.base::ModuleCache::Module"* %41) #11
  %47 = icmp ult i64 %39, %46
  br i1 %47, label %53, label %48

48:                                               ; preds = %30
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %33, i64 1
  %50 = ptrtoint %"class.std::__1::unique_ptr"* %49 to i64
  %51 = add nsw i64 %31, -1
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %291, label %30

53:                                               ; preds = %30
  %54 = inttoptr i64 %32 to %"class.std::__1::unique_ptr"*
  %55 = icmp slt i64 %31, %16
  br i1 %55, label %56, label %95

56:                                               ; preds = %53
  %57 = sdiv i64 %16, 2
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 %57
  %59 = ptrtoint %"class.std::__1::unique_ptr"* %58 to i64
  %60 = sub i64 %17, %32
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %90, label %62

62:                                               ; preds = %56
  %63 = ashr exact i64 %60, 3
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %58, i64 0, i32 0, i32 0, i32 0
  br label %65

65:                                               ; preds = %65, %62
  %66 = phi %"class.std::__1::unique_ptr"* [ %54, %62 ], [ %88, %65 ]
  %67 = phi i64 [ %63, %62 ], [ %87, %65 ]
  %68 = lshr i64 %67, 1
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %66, i64 %68
  %70 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %64, align 8
  %71 = bitcast %"class.base::ModuleCache::Module"* %70 to i64 (%"class.base::ModuleCache::Module"*)***
  %72 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %72, i64 2
  %74 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %73, align 8
  %75 = tail call i64 %74(%"class.base::ModuleCache::Module"* %70) #11
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %69, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %76, align 8
  %78 = bitcast %"class.base::ModuleCache::Module"* %77 to i64 (%"class.base::ModuleCache::Module"*)***
  %79 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %78, align 8
  %80 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %79, i64 2
  %81 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %80, align 8
  %82 = tail call i64 %81(%"class.base::ModuleCache::Module"* %77) #11
  %83 = icmp ult i64 %75, %82
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %69, i64 1
  %85 = xor i64 %68, -1
  %86 = add i64 %67, %85
  %87 = select i1 %83, i64 %68, i64 %86
  %88 = select i1 %83, %"class.std::__1::unique_ptr"* %66, %"class.std::__1::unique_ptr"* %84
  %89 = icmp eq i64 %87, 0
  br i1 %89, label %90, label %65

90:                                               ; preds = %65, %56
  %91 = phi %"class.std::__1::unique_ptr"* [ %54, %56 ], [ %88, %65 ]
  %92 = ptrtoint %"class.std::__1::unique_ptr"* %91 to i64
  %93 = sub i64 %92, %32
  %94 = ashr exact i64 %93, 3
  br label %142

95:                                               ; preds = %53
  %96 = icmp eq i64 %31, 1
  br i1 %96, label %97, label %102

97:                                               ; preds = %95
  %98 = inttoptr i64 %32 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = inttoptr i64 %17 to i64*
  %101 = load i64, i64* %100, align 8
  store i64 %101, i64* %98, align 8
  store i64 %99, i64* %100, align 8
  br label %291

102:                                              ; preds = %95
  %103 = sdiv i64 %31, 2
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %54, i64 %103
  %105 = ptrtoint %"class.std::__1::unique_ptr"* %104 to i64
  %106 = ptrtoint %"class.std::__1::unique_ptr"* %14 to i64
  %107 = sub i64 %106, %17
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %137, label %109

109:                                              ; preds = %102
  %110 = ashr exact i64 %107, 3
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  br label %112

112:                                              ; preds = %112, %109
  %113 = phi %"class.std::__1::unique_ptr"* [ %25, %109 ], [ %135, %112 ]
  %114 = phi i64 [ %110, %109 ], [ %134, %112 ]
  %115 = lshr i64 %114, 1
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %113, i64 %115
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %117, align 8
  %119 = bitcast %"class.base::ModuleCache::Module"* %118 to i64 (%"class.base::ModuleCache::Module"*)***
  %120 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %119, align 8
  %121 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %120, i64 2
  %122 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %121, align 8
  %123 = tail call i64 %122(%"class.base::ModuleCache::Module"* %118) #11
  %124 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %111, align 8
  %125 = bitcast %"class.base::ModuleCache::Module"* %124 to i64 (%"class.base::ModuleCache::Module"*)***
  %126 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %125, align 8
  %127 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %126, i64 2
  %128 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %127, align 8
  %129 = tail call i64 %128(%"class.base::ModuleCache::Module"* %124) #11
  %130 = icmp ult i64 %123, %129
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 1
  %132 = xor i64 %115, -1
  %133 = add i64 %114, %132
  %134 = select i1 %130, i64 %133, i64 %115
  %135 = select i1 %130, %"class.std::__1::unique_ptr"* %131, %"class.std::__1::unique_ptr"* %113
  %136 = icmp eq i64 %134, 0
  br i1 %136, label %137, label %112

137:                                              ; preds = %112, %102
  %138 = phi %"class.std::__1::unique_ptr"* [ %25, %102 ], [ %135, %112 ]
  %139 = ptrtoint %"class.std::__1::unique_ptr"* %138 to i64
  %140 = sub i64 %139, %17
  %141 = ashr exact i64 %140, 3
  br label %142

142:                                              ; preds = %137, %90
  %143 = phi i64 [ %92, %90 ], [ %105, %137 ]
  %144 = phi i64 [ %59, %90 ], [ %139, %137 ]
  %145 = phi i64 [ %57, %90 ], [ %141, %137 ]
  %146 = phi i64 [ %94, %90 ], [ %103, %137 ]
  %147 = sub nsw i64 %31, %146
  %148 = sub nsw i64 %16, %145
  %149 = inttoptr i64 %143 to %"class.std::__1::unique_ptr"*
  %150 = inttoptr i64 %144 to %"class.std::__1::unique_ptr"*
  %151 = icmp eq %"class.std::__1::unique_ptr"* %149, %25
  br i1 %151, label %276, label %152

152:                                              ; preds = %142
  %153 = icmp eq %"class.std::__1::unique_ptr"* %25, %150
  br i1 %153, label %276, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %143 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = inttoptr i64 %17 to i64*
  %158 = load i64, i64* %157, align 8
  store i64 %158, i64* %155, align 8
  store i64 %156, i64* %157, align 8
  %159 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %149, i64 1
  %160 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 1
  %161 = icmp eq %"class.std::__1::unique_ptr"* %160, %150
  br i1 %161, label %250, label %162

162:                                              ; preds = %154
  %163 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %150, i64 -2
  %164 = bitcast %"class.std::__1::unique_ptr"* %163 to i8*
  %165 = sub i64 0, %17
  %166 = getelementptr i8, i8* %164, i64 %165
  %167 = ptrtoint i8* %166 to i64
  %168 = lshr i64 %167, 3
  %169 = add nuw nsw i64 %168, 1
  %170 = and i64 %169, 3
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %192, label %172

172:                                              ; preds = %162, %172
  %173 = phi %"class.std::__1::unique_ptr"* [ %187, %172 ], [ %25, %162 ]
  %174 = phi %"class.std::__1::unique_ptr"* [ %186, %172 ], [ %160, %162 ]
  %175 = phi %"class.std::__1::unique_ptr"* [ %185, %172 ], [ %159, %162 ]
  %176 = phi i64 [ %180, %172 ], [ %17, %162 ]
  %177 = phi i64 [ %188, %172 ], [ %170, %162 ]
  %178 = ptrtoint %"class.std::__1::unique_ptr"* %174 to i64
  %179 = icmp eq %"class.std::__1::unique_ptr"* %175, %173
  %180 = select i1 %179, i64 %178, i64 %176
  %181 = bitcast %"class.std::__1::unique_ptr"* %175 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = bitcast %"class.std::__1::unique_ptr"* %174 to i64*
  %184 = load i64, i64* %183, align 8
  store i64 %184, i64* %181, align 8
  store i64 %182, i64* %183, align 8
  %185 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %175, i64 1
  %186 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %174, i64 1
  %187 = inttoptr i64 %180 to %"class.std::__1::unique_ptr"*
  %188 = add i64 %177, -1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %190, label %172, !llvm.loop !100

190:                                              ; preds = %172
  %191 = inttoptr i64 %180 to %"class.std::__1::unique_ptr"*
  br label %192

192:                                              ; preds = %162, %190
  %193 = phi i64 [ undef, %162 ], [ %180, %190 ]
  %194 = phi %"class.std::__1::unique_ptr"* [ undef, %162 ], [ %185, %190 ]
  %195 = phi %"class.std::__1::unique_ptr"* [ %25, %162 ], [ %191, %190 ]
  %196 = phi %"class.std::__1::unique_ptr"* [ %160, %162 ], [ %186, %190 ]
  %197 = phi %"class.std::__1::unique_ptr"* [ %159, %162 ], [ %185, %190 ]
  %198 = phi i64 [ %17, %162 ], [ %180, %190 ]
  %199 = icmp ult i8* %166, inttoptr (i64 24 to i8*)
  br i1 %199, label %246, label %200

200:                                              ; preds = %192, %200
  %201 = phi %"class.std::__1::unique_ptr"* [ %245, %200 ], [ %195, %192 ]
  %202 = phi %"class.std::__1::unique_ptr"* [ %243, %200 ], [ %196, %192 ]
  %203 = phi %"class.std::__1::unique_ptr"* [ %242, %200 ], [ %197, %192 ]
  %204 = phi i64 [ %237, %200 ], [ %198, %192 ]
  %205 = ptrtoint %"class.std::__1::unique_ptr"* %202 to i64
  %206 = icmp eq %"class.std::__1::unique_ptr"* %203, %201
  %207 = select i1 %206, i64 %205, i64 %204
  %208 = bitcast %"class.std::__1::unique_ptr"* %203 to i64*
  %209 = load i64, i64* %208, align 8
  %210 = bitcast %"class.std::__1::unique_ptr"* %202 to i64*
  %211 = load i64, i64* %210, align 8
  store i64 %211, i64* %208, align 8
  store i64 %209, i64* %210, align 8
  %212 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %203, i64 1
  %213 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %202, i64 1
  %214 = inttoptr i64 %207 to %"class.std::__1::unique_ptr"*
  %215 = ptrtoint %"class.std::__1::unique_ptr"* %213 to i64
  %216 = icmp eq %"class.std::__1::unique_ptr"* %212, %214
  %217 = select i1 %216, i64 %215, i64 %207
  %218 = bitcast %"class.std::__1::unique_ptr"* %212 to i64*
  %219 = load i64, i64* %218, align 8
  %220 = bitcast %"class.std::__1::unique_ptr"* %213 to i64*
  %221 = load i64, i64* %220, align 8
  store i64 %221, i64* %218, align 8
  store i64 %219, i64* %220, align 8
  %222 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %203, i64 2
  %223 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %202, i64 2
  %224 = inttoptr i64 %217 to %"class.std::__1::unique_ptr"*
  %225 = ptrtoint %"class.std::__1::unique_ptr"* %223 to i64
  %226 = icmp eq %"class.std::__1::unique_ptr"* %222, %224
  %227 = select i1 %226, i64 %225, i64 %217
  %228 = bitcast %"class.std::__1::unique_ptr"* %222 to i64*
  %229 = load i64, i64* %228, align 8
  %230 = bitcast %"class.std::__1::unique_ptr"* %223 to i64*
  %231 = load i64, i64* %230, align 8
  store i64 %231, i64* %228, align 8
  store i64 %229, i64* %230, align 8
  %232 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %203, i64 3
  %233 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %202, i64 3
  %234 = inttoptr i64 %227 to %"class.std::__1::unique_ptr"*
  %235 = ptrtoint %"class.std::__1::unique_ptr"* %233 to i64
  %236 = icmp eq %"class.std::__1::unique_ptr"* %232, %234
  %237 = select i1 %236, i64 %235, i64 %227
  %238 = bitcast %"class.std::__1::unique_ptr"* %232 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = bitcast %"class.std::__1::unique_ptr"* %233 to i64*
  %241 = load i64, i64* %240, align 8
  store i64 %241, i64* %238, align 8
  store i64 %239, i64* %240, align 8
  %242 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %203, i64 4
  %243 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %202, i64 4
  %244 = icmp eq %"class.std::__1::unique_ptr"* %243, %150
  %245 = inttoptr i64 %237 to %"class.std::__1::unique_ptr"*
  br i1 %244, label %246, label %200

246:                                              ; preds = %200, %192
  %247 = phi i64 [ %193, %192 ], [ %237, %200 ]
  %248 = phi %"class.std::__1::unique_ptr"* [ %194, %192 ], [ %242, %200 ]
  %249 = inttoptr i64 %247 to %"class.std::__1::unique_ptr"*
  br label %250

250:                                              ; preds = %246, %154
  %251 = phi i64 [ %17, %154 ], [ %247, %246 ]
  %252 = phi %"class.std::__1::unique_ptr"* [ %159, %154 ], [ %248, %246 ]
  %253 = phi %"class.std::__1::unique_ptr"* [ %25, %154 ], [ %249, %246 ]
  %254 = icmp eq %"class.std::__1::unique_ptr"* %252, %253
  br i1 %254, label %276, label %255

255:                                              ; preds = %250, %273
  %256 = phi i64 [ %275, %273 ], [ %251, %250 ]
  %257 = phi %"class.std::__1::unique_ptr"* [ %268, %273 ], [ %252, %250 ]
  %258 = phi i64 [ %274, %273 ], [ %251, %250 ]
  %259 = inttoptr i64 %256 to %"class.std::__1::unique_ptr"*
  br label %260

260:                                              ; preds = %255, %272
  %261 = phi %"class.std::__1::unique_ptr"* [ %268, %272 ], [ %257, %255 ]
  %262 = phi i64 [ %256, %272 ], [ %258, %255 ]
  %263 = inttoptr i64 %262 to %"class.std::__1::unique_ptr"*
  %264 = bitcast %"class.std::__1::unique_ptr"* %261 to i64*
  %265 = load i64, i64* %264, align 8
  %266 = inttoptr i64 %262 to i64*
  %267 = load i64, i64* %266, align 8
  store i64 %267, i64* %264, align 8
  store i64 %265, i64* %266, align 8
  %268 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %261, i64 1
  %269 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %263, i64 1
  %270 = icmp eq %"class.std::__1::unique_ptr"* %269, %150
  %271 = icmp eq %"class.std::__1::unique_ptr"* %268, %259
  br i1 %270, label %272, label %273

272:                                              ; preds = %260
  br i1 %271, label %276, label %260

273:                                              ; preds = %260
  %274 = ptrtoint %"class.std::__1::unique_ptr"* %269 to i64
  %275 = select i1 %271, i64 %274, i64 %256
  br label %255

276:                                              ; preds = %272, %142, %152, %250
  %277 = phi %"class.std::__1::unique_ptr"* [ %149, %152 ], [ %150, %142 ], [ %252, %250 ], [ %252, %272 ]
  %278 = add nsw i64 %146, %145
  %279 = add nsw i64 %147, %148
  %280 = icmp slt i64 %278, %279
  br i1 %280, label %281, label %283

281:                                              ; preds = %276
  %282 = ptrtoint %"class.std::__1::unique_ptr"* %277 to i64
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS_10unique_ptrIKNS1_11ModuleCache6ModuleENS_14default_deleteIS7_EEEENS1_8identityENS5_23ModuleAndAddressCompareENS_6vectorISA_NS_9allocatorISA_EEEEE13value_compareENS_11__wrap_iterIPSA_EEEEvT0_SN_SN_T_NS_15iterator_traitsISN_E15difference_typeESR_PNSQ_10value_typeEl(%"class.std::__1::unique_ptr"* %54, %"class.std::__1::unique_ptr"* %149, %"class.std::__1::unique_ptr"* %277, %"struct.base::internal::flat_tree<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, base::identity, base::ModuleCache::ModuleAndAddressCompare, std::__1::vector<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, std::__1::allocator<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> > > > >::value_compare"* dereferenceable(1) %3, i64 %146, i64 %145, %"class.std::__1::unique_ptr"* %6, i64 %7)
  br label %284

283:                                              ; preds = %276
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS_10unique_ptrIKNS1_11ModuleCache6ModuleENS_14default_deleteIS7_EEEENS1_8identityENS5_23ModuleAndAddressCompareENS_6vectorISA_NS_9allocatorISA_EEEEE13value_compareENS_11__wrap_iterIPSA_EEEEvT0_SN_SN_T_NS_15iterator_traitsISN_E15difference_typeESR_PNSQ_10value_typeEl(%"class.std::__1::unique_ptr"* %277, %"class.std::__1::unique_ptr"* %150, %"class.std::__1::unique_ptr"* %14, %"struct.base::internal::flat_tree<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, base::identity, base::ModuleCache::ModuleAndAddressCompare, std::__1::vector<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, std::__1::allocator<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> > > > >::value_compare"* dereferenceable(1) %3, i64 %147, i64 %148, %"class.std::__1::unique_ptr"* %6, i64 %7)
  br label %284

284:                                              ; preds = %281, %283
  %285 = phi i64 [ %282, %281 ], [ %32, %283 ]
  %286 = phi i64 [ %144, %281 ], [ %143, %283 ]
  %287 = phi i64 [ %148, %281 ], [ %145, %283 ]
  %288 = phi i64 [ %147, %281 ], [ %146, %283 ]
  %289 = phi %"class.std::__1::unique_ptr"* [ %14, %281 ], [ %277, %283 ]
  %290 = icmp eq i64 %287, 0
  br i1 %290, label %291, label %13

291:                                              ; preds = %284, %22, %48, %8, %97, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__121__insertion_sort_moveIRN4base8internal9flat_treeINS_10unique_ptrIKNS1_11ModuleCache6ModuleENS_14default_deleteIS7_EEEENS1_8identityENS5_23ModuleAndAddressCompareENS_6vectorISA_NS_9allocatorISA_EEEEE13value_compareENS_11__wrap_iterIPSA_EEEEvT0_SN_PNS_15iterator_traitsISN_E10value_typeET_(%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"struct.base::internal::flat_tree<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, base::identity, base::ModuleCache::ModuleAndAddressCompare, std::__1::vector<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, std::__1::allocator<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> > > > >::value_compare"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %5 = icmp eq %"class.std::__1::unique_ptr"* %0, %1
  br i1 %5, label %90, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %7, align 8
  %10 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 1
  %12 = icmp eq %"class.std::__1::unique_ptr"* %11, %1
  br i1 %12, label %90, label %13

13:                                               ; preds = %6, %87
  %14 = phi %"class.std::__1::unique_ptr"* [ %88, %87 ], [ %11, %6 ]
  %15 = phi %"class.std::__1::unique_ptr"* [ %16, %87 ], [ %2, %6 ]
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 1
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %17, align 8
  %19 = bitcast %"class.base::ModuleCache::Module"* %18 to i64 (%"class.base::ModuleCache::Module"*)***
  %20 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %19, align 8
  %21 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %20, i64 2
  %22 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %21, align 8
  %23 = tail call i64 %22(%"class.base::ModuleCache::Module"* %18) #11
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %24, align 8
  %26 = bitcast %"class.base::ModuleCache::Module"* %25 to i64 (%"class.base::ModuleCache::Module"*)***
  %27 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %26, align 8
  %28 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %27, i64 2
  %29 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %28, align 8
  %30 = tail call i64 %29(%"class.base::ModuleCache::Module"* %25) #11
  %31 = icmp ult i64 %23, %30
  br i1 %31, label %32, label %83

32:                                               ; preds = %13
  %33 = bitcast %"class.std::__1::unique_ptr"* %15 to i64*
  %34 = load i64, i64* %33, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %24, align 8
  %35 = bitcast %"class.std::__1::unique_ptr"* %16 to i64*
  store i64 %34, i64* %35, align 8
  %36 = icmp eq %"class.std::__1::unique_ptr"* %15, %2
  br i1 %36, label %70, label %37

37:                                               ; preds = %32, %68
  %38 = phi %"class.std::__1::unique_ptr"* [ %39, %68 ], [ %15, %32 ]
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %38, i64 -1
  %40 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %17, align 8
  %41 = bitcast %"class.base::ModuleCache::Module"* %40 to i64 (%"class.base::ModuleCache::Module"*)***
  %42 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %41, align 8
  %43 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %42, i64 2
  %44 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %43, align 8
  %45 = tail call i64 %44(%"class.base::ModuleCache::Module"* %40) #11
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %39, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %46, align 8
  %48 = bitcast %"class.base::ModuleCache::Module"* %47 to i64 (%"class.base::ModuleCache::Module"*)***
  %49 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %48, align 8
  %50 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %49, i64 2
  %51 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %50, align 8
  %52 = tail call i64 %51(%"class.base::ModuleCache::Module"* %47) #11
  %53 = icmp ult i64 %45, %52
  br i1 %53, label %56, label %54

54:                                               ; preds = %37
  %55 = bitcast %"class.std::__1::unique_ptr"* %38 to i64*
  br label %70

56:                                               ; preds = %37
  %57 = bitcast %"class.std::__1::unique_ptr"* %39 to i64*
  %58 = load i64, i64* %57, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %46, align 8
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %38, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %59, align 8
  %61 = bitcast %"class.std::__1::unique_ptr"* %38 to i64*
  store i64 %58, i64* %61, align 8
  %62 = icmp eq %"class.base::ModuleCache::Module"* %60, null
  br i1 %62, label %68, label %63

63:                                               ; preds = %56
  %64 = bitcast %"class.base::ModuleCache::Module"* %60 to void (%"class.base::ModuleCache::Module"*)***
  %65 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %65, i64 1
  %67 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %66, align 8
  tail call void %67(%"class.base::ModuleCache::Module"* nonnull %60) #11
  br label %68

68:                                               ; preds = %56, %63
  %69 = icmp eq %"class.std::__1::unique_ptr"* %39, %2
  br i1 %69, label %70, label %37

70:                                               ; preds = %68, %54, %32
  %71 = phi i64* [ %10, %32 ], [ %55, %54 ], [ %10, %68 ]
  %72 = phi %"class.std::__1::unique_ptr"* [ %2, %32 ], [ %38, %54 ], [ %2, %68 ]
  %73 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  %74 = load i64, i64* %73, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %17, align 8
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %72, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %75, align 8
  store i64 %74, i64* %71, align 8
  %77 = icmp eq %"class.base::ModuleCache::Module"* %76, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %70
  %79 = bitcast %"class.base::ModuleCache::Module"* %76 to void (%"class.base::ModuleCache::Module"*)***
  %80 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %80, i64 1
  %82 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %81, align 8
  tail call void %82(%"class.base::ModuleCache::Module"* nonnull %76) #11
  br label %87

83:                                               ; preds = %13
  %84 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  %85 = load i64, i64* %84, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %17, align 8
  %86 = bitcast %"class.std::__1::unique_ptr"* %16 to i64*
  store i64 %85, i64* %86, align 8
  br label %87

87:                                               ; preds = %78, %70, %83
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 1
  %89 = icmp eq %"class.std::__1::unique_ptr"* %88, %1
  br i1 %89, label %90, label %13

90:                                               ; preds = %87, %6, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__124__buffered_inplace_mergeIRN4base8internal9flat_treeINS_10unique_ptrIKNS1_11ModuleCache6ModuleENS_14default_deleteIS7_EEEENS1_8identityENS5_23ModuleAndAddressCompareENS_6vectorISA_NS_9allocatorISA_EEEEE13value_compareENS_11__wrap_iterIPSA_EEEEvT0_SN_SN_T_NS_15iterator_traitsISN_E15difference_typeESR_PNSQ_10value_typeE(%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"struct.base::internal::flat_tree<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, base::identity, base::ModuleCache::ModuleAndAddressCompare, std::__1::vector<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> >, std::__1::allocator<std::__1::unique_ptr<const base::ModuleCache::Module, std::__1::default_delete<const base::ModuleCache::Module> > > > >::value_compare"* dereferenceable(1), i64, i64, %"class.std::__1::unique_ptr"*) local_unnamed_addr #0 comdat {
  %8 = ptrtoint %"class.std::__1::unique_ptr"* %0 to i64
  %9 = ptrtoint %"class.std::__1::unique_ptr"* %1 to i64
  %10 = icmp sgt i64 %4, %5
  br i1 %10, label %43, label %11

11:                                               ; preds = %7
  %12 = icmp eq %"class.std::__1::unique_ptr"* %0, %1
  br i1 %12, label %349, label %13

13:                                               ; preds = %11
  %14 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 -1, i32 0, i32 0, i32 0
  %15 = ptrtoint %"class.base::ModuleCache::Module"** %14 to i64
  %16 = sub i64 %15, %8
  %17 = lshr i64 %16, 3
  %18 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 -1, i32 0, i32 0, i32 0
  %19 = ptrtoint %"class.base::ModuleCache::Module"** %18 to i64
  %20 = sub i64 %19, %8
  %21 = lshr i64 %20, 3
  %22 = add nuw nsw i64 %21, 1
  %23 = and i64 %22, 7
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %13, %25
  %26 = phi %"class.std::__1::unique_ptr"* [ %34, %25 ], [ %6, %13 ]
  %27 = phi %"class.std::__1::unique_ptr"* [ %33, %25 ], [ %0, %13 ]
  %28 = phi i64 [ %35, %25 ], [ %23, %13 ]
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %27, i64 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.std::__1::unique_ptr"* %27 to i64*
  %31 = load i64, i64* %30, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %29, align 8
  %32 = bitcast %"class.std::__1::unique_ptr"* %26 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %27, i64 1
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %26, i64 1
  %35 = add i64 %28, -1
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %25, !llvm.loop !101

37:                                               ; preds = %25, %13
  %38 = phi %"class.std::__1::unique_ptr"* [ undef, %13 ], [ %26, %25 ]
  %39 = phi %"class.std::__1::unique_ptr"* [ undef, %13 ], [ %34, %25 ]
  %40 = phi %"class.std::__1::unique_ptr"* [ %6, %13 ], [ %34, %25 ]
  %41 = phi %"class.std::__1::unique_ptr"* [ %0, %13 ], [ %33, %25 ]
  %42 = icmp ult i64 %20, 56
  br i1 %42, label %74, label %152

43:                                               ; preds = %7
  %44 = icmp eq %"class.std::__1::unique_ptr"* %1, %2
  br i1 %44, label %349, label %45

45:                                               ; preds = %43
  %46 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 -1, i32 0, i32 0, i32 0
  %47 = ptrtoint %"class.base::ModuleCache::Module"** %46 to i64
  %48 = sub i64 %47, %9
  %49 = lshr i64 %48, 3
  %50 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 -1, i32 0, i32 0, i32 0
  %51 = ptrtoint %"class.base::ModuleCache::Module"** %50 to i64
  %52 = sub i64 %51, %9
  %53 = lshr i64 %52, 3
  %54 = add nuw nsw i64 %53, 1
  %55 = and i64 %54, 7
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %45, %57
  %58 = phi %"class.std::__1::unique_ptr"* [ %66, %57 ], [ %6, %45 ]
  %59 = phi %"class.std::__1::unique_ptr"* [ %65, %57 ], [ %1, %45 ]
  %60 = phi i64 [ %67, %57 ], [ %55, %45 ]
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 0, i32 0, i32 0, i32 0
  %62 = bitcast %"class.std::__1::unique_ptr"* %59 to i64*
  %63 = load i64, i64* %62, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %61, align 8
  %64 = bitcast %"class.std::__1::unique_ptr"* %58 to i64*
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 1
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %58, i64 1
  %67 = add i64 %60, -1
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %57, !llvm.loop !102

69:                                               ; preds = %57, %45
  %70 = phi %"class.std::__1::unique_ptr"* [ undef, %45 ], [ %66, %57 ]
  %71 = phi %"class.std::__1::unique_ptr"* [ %6, %45 ], [ %66, %57 ]
  %72 = phi %"class.std::__1::unique_ptr"* [ %1, %45 ], [ %65, %57 ]
  %73 = icmp ult i64 %52, 56
  br i1 %73, label %204, label %279

74:                                               ; preds = %152, %37
  %75 = phi %"class.std::__1::unique_ptr"* [ %38, %37 ], [ %196, %152 ]
  %76 = phi %"class.std::__1::unique_ptr"* [ %39, %37 ], [ %202, %152 ]
  %77 = add nuw nsw i64 %17, 1
  %78 = icmp eq %"class.std::__1::unique_ptr"* %76, %6
  br i1 %78, label %331, label %79

79:                                               ; preds = %74, %147
  %80 = phi %"class.std::__1::unique_ptr"* [ %149, %147 ], [ %6, %74 ]
  %81 = phi %"class.std::__1::unique_ptr"* [ %150, %147 ], [ %0, %74 ]
  %82 = phi %"class.std::__1::unique_ptr"* [ %148, %147 ], [ %1, %74 ]
  %83 = icmp eq %"class.std::__1::unique_ptr"* %82, %2
  br i1 %83, label %84, label %103

84:                                               ; preds = %79, %99
  %85 = phi %"class.std::__1::unique_ptr"* [ %101, %99 ], [ %81, %79 ]
  %86 = phi %"class.std::__1::unique_ptr"* [ %100, %99 ], [ %80, %79 ]
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %87, align 8
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %85, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %90, align 8
  %92 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %92, align 8
  %93 = icmp eq %"class.base::ModuleCache::Module"* %91, null
  br i1 %93, label %99, label %94

94:                                               ; preds = %84
  %95 = bitcast %"class.base::ModuleCache::Module"* %91 to void (%"class.base::ModuleCache::Module"*)***
  %96 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %96, i64 1
  %98 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %97, align 8
  tail call void %98(%"class.base::ModuleCache::Module"* nonnull %91) #11
  br label %99

99:                                               ; preds = %94, %84
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 1
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %85, i64 1
  %102 = icmp eq %"class.std::__1::unique_ptr"* %86, %75
  br i1 %102, label %331, label %84

103:                                              ; preds = %79
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %82, i64 0, i32 0, i32 0, i32 0
  %105 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %104, align 8
  %106 = bitcast %"class.base::ModuleCache::Module"* %105 to i64 (%"class.base::ModuleCache::Module"*)***
  %107 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %106, align 8
  %108 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %107, i64 2
  %109 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %108, align 8
  %110 = tail call i64 %109(%"class.base::ModuleCache::Module"* %105) #11
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %112 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %111, align 8
  %113 = bitcast %"class.base::ModuleCache::Module"* %112 to i64 (%"class.base::ModuleCache::Module"*)***
  %114 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %113, align 8
  %115 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %114, i64 2
  %116 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %115, align 8
  %117 = tail call i64 %116(%"class.base::ModuleCache::Module"* %112) #11
  %118 = icmp ult i64 %110, %117
  br i1 %118, label %119, label %133

119:                                              ; preds = %103
  %120 = bitcast %"class.std::__1::unique_ptr"* %82 to i64*
  %121 = load i64, i64* %120, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %104, align 8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %81, i64 0, i32 0, i32 0, i32 0
  %123 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %122, align 8
  %124 = bitcast %"class.std::__1::unique_ptr"* %81 to i64*
  store i64 %121, i64* %124, align 8
  %125 = icmp eq %"class.base::ModuleCache::Module"* %123, null
  br i1 %125, label %131, label %126

126:                                              ; preds = %119
  %127 = bitcast %"class.base::ModuleCache::Module"* %123 to void (%"class.base::ModuleCache::Module"*)***
  %128 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %127, align 8
  %129 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %128, i64 1
  %130 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %129, align 8
  tail call void %130(%"class.base::ModuleCache::Module"* nonnull %123) #11
  br label %131

131:                                              ; preds = %126, %119
  %132 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %82, i64 1
  br label %147

133:                                              ; preds = %103
  %134 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %135 = load i64, i64* %134, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %111, align 8
  %136 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %81, i64 0, i32 0, i32 0, i32 0
  %137 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %136, align 8
  %138 = bitcast %"class.std::__1::unique_ptr"* %81 to i64*
  store i64 %135, i64* %138, align 8
  %139 = icmp eq %"class.base::ModuleCache::Module"* %137, null
  br i1 %139, label %145, label %140

140:                                              ; preds = %133
  %141 = bitcast %"class.base::ModuleCache::Module"* %137 to void (%"class.base::ModuleCache::Module"*)***
  %142 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %141, align 8
  %143 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %142, i64 1
  %144 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %143, align 8
  tail call void %144(%"class.base::ModuleCache::Module"* nonnull %137) #11
  br label %145

145:                                              ; preds = %140, %133
  %146 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 1
  br label %147

147:                                              ; preds = %145, %131
  %148 = phi %"class.std::__1::unique_ptr"* [ %132, %131 ], [ %82, %145 ]
  %149 = phi %"class.std::__1::unique_ptr"* [ %80, %131 ], [ %146, %145 ]
  %150 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %81, i64 1
  %151 = icmp eq %"class.std::__1::unique_ptr"* %149, %76
  br i1 %151, label %331, label %79

152:                                              ; preds = %37, %152
  %153 = phi %"class.std::__1::unique_ptr"* [ %202, %152 ], [ %40, %37 ]
  %154 = phi %"class.std::__1::unique_ptr"* [ %201, %152 ], [ %41, %37 ]
  %155 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %154, i64 0, i32 0, i32 0, i32 0
  %156 = bitcast %"class.std::__1::unique_ptr"* %154 to i64*
  %157 = load i64, i64* %156, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %155, align 8
  %158 = bitcast %"class.std::__1::unique_ptr"* %153 to i64*
  store i64 %157, i64* %158, align 8
  %159 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %154, i64 1
  %160 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %153, i64 1
  %161 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %159, i64 0, i32 0, i32 0, i32 0
  %162 = bitcast %"class.std::__1::unique_ptr"* %159 to i64*
  %163 = load i64, i64* %162, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %161, align 8
  %164 = bitcast %"class.std::__1::unique_ptr"* %160 to i64*
  store i64 %163, i64* %164, align 8
  %165 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %154, i64 2
  %166 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %153, i64 2
  %167 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %165, i64 0, i32 0, i32 0, i32 0
  %168 = bitcast %"class.std::__1::unique_ptr"* %165 to i64*
  %169 = load i64, i64* %168, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %167, align 8
  %170 = bitcast %"class.std::__1::unique_ptr"* %166 to i64*
  store i64 %169, i64* %170, align 8
  %171 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %154, i64 3
  %172 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %153, i64 3
  %173 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %171, i64 0, i32 0, i32 0, i32 0
  %174 = bitcast %"class.std::__1::unique_ptr"* %171 to i64*
  %175 = load i64, i64* %174, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %173, align 8
  %176 = bitcast %"class.std::__1::unique_ptr"* %172 to i64*
  store i64 %175, i64* %176, align 8
  %177 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %154, i64 4
  %178 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %153, i64 4
  %179 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %177, i64 0, i32 0, i32 0, i32 0
  %180 = bitcast %"class.std::__1::unique_ptr"* %177 to i64*
  %181 = load i64, i64* %180, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %179, align 8
  %182 = bitcast %"class.std::__1::unique_ptr"* %178 to i64*
  store i64 %181, i64* %182, align 8
  %183 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %154, i64 5
  %184 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %153, i64 5
  %185 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %183, i64 0, i32 0, i32 0, i32 0
  %186 = bitcast %"class.std::__1::unique_ptr"* %183 to i64*
  %187 = load i64, i64* %186, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %185, align 8
  %188 = bitcast %"class.std::__1::unique_ptr"* %184 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %154, i64 6
  %190 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %153, i64 6
  %191 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %189, i64 0, i32 0, i32 0, i32 0
  %192 = bitcast %"class.std::__1::unique_ptr"* %189 to i64*
  %193 = load i64, i64* %192, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %191, align 8
  %194 = bitcast %"class.std::__1::unique_ptr"* %190 to i64*
  store i64 %193, i64* %194, align 8
  %195 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %154, i64 7
  %196 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %153, i64 7
  %197 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %195, i64 0, i32 0, i32 0, i32 0
  %198 = bitcast %"class.std::__1::unique_ptr"* %195 to i64*
  %199 = load i64, i64* %198, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %197, align 8
  %200 = bitcast %"class.std::__1::unique_ptr"* %196 to i64*
  store i64 %199, i64* %200, align 8
  %201 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %154, i64 8
  %202 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %153, i64 8
  %203 = icmp eq %"class.std::__1::unique_ptr"* %201, %1
  br i1 %203, label %74, label %152

204:                                              ; preds = %279, %69
  %205 = phi %"class.std::__1::unique_ptr"* [ %70, %69 ], [ %329, %279 ]
  %206 = add nuw nsw i64 %49, 1
  %207 = icmp eq %"class.std::__1::unique_ptr"* %205, %6
  br i1 %207, label %331, label %208

208:                                              ; preds = %204, %275
  %209 = phi %"class.std::__1::unique_ptr"* [ %250, %275 ], [ %2, %204 ]
  %210 = phi %"class.std::__1::unique_ptr"* [ %277, %275 ], [ %205, %204 ]
  %211 = phi %"class.std::__1::unique_ptr"* [ %276, %275 ], [ %1, %204 ]
  %212 = icmp eq %"class.std::__1::unique_ptr"* %211, %0
  br i1 %212, label %213, label %232

213:                                              ; preds = %208, %230
  %214 = phi %"class.std::__1::unique_ptr"* [ %216, %230 ], [ %210, %208 ]
  %215 = phi %"class.std::__1::unique_ptr"* [ %217, %230 ], [ %209, %208 ]
  %216 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %214, i64 -1
  %217 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %215, i64 -1
  %218 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %216, i64 0, i32 0, i32 0, i32 0
  %219 = bitcast %"class.std::__1::unique_ptr"* %216 to i64*
  %220 = load i64, i64* %219, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %218, align 8
  %221 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %217, i64 0, i32 0, i32 0, i32 0
  %222 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %221, align 8
  %223 = bitcast %"class.std::__1::unique_ptr"* %217 to i64*
  store i64 %220, i64* %223, align 8
  %224 = icmp eq %"class.base::ModuleCache::Module"* %222, null
  br i1 %224, label %230, label %225

225:                                              ; preds = %213
  %226 = bitcast %"class.base::ModuleCache::Module"* %222 to void (%"class.base::ModuleCache::Module"*)***
  %227 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %226, align 8
  %228 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %227, i64 1
  %229 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %228, align 8
  tail call void %229(%"class.base::ModuleCache::Module"* nonnull %222) #11
  br label %230

230:                                              ; preds = %225, %213
  %231 = icmp eq %"class.std::__1::unique_ptr"* %216, %6
  br i1 %231, label %331, label %213

232:                                              ; preds = %208
  %233 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %211, i64 -1
  %234 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %210, i64 -1
  %235 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %234, i64 0, i32 0, i32 0, i32 0
  %236 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %235, align 8
  %237 = bitcast %"class.base::ModuleCache::Module"* %236 to i64 (%"class.base::ModuleCache::Module"*)***
  %238 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %237, align 8
  %239 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %238, i64 2
  %240 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %239, align 8
  %241 = tail call i64 %240(%"class.base::ModuleCache::Module"* %236) #11
  %242 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %233, i64 0, i32 0, i32 0, i32 0
  %243 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %242, align 8
  %244 = bitcast %"class.base::ModuleCache::Module"* %243 to i64 (%"class.base::ModuleCache::Module"*)***
  %245 = load i64 (%"class.base::ModuleCache::Module"*)**, i64 (%"class.base::ModuleCache::Module"*)*** %244, align 8
  %246 = getelementptr inbounds i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %245, i64 2
  %247 = load i64 (%"class.base::ModuleCache::Module"*)*, i64 (%"class.base::ModuleCache::Module"*)** %246, align 8
  %248 = tail call i64 %247(%"class.base::ModuleCache::Module"* %243) #11
  %249 = icmp ult i64 %241, %248
  %250 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %209, i64 -1
  br i1 %249, label %251, label %263

251:                                              ; preds = %232
  %252 = bitcast %"class.std::__1::unique_ptr"* %233 to i64*
  %253 = load i64, i64* %252, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %242, align 8
  %254 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %250, i64 0, i32 0, i32 0, i32 0
  %255 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %254, align 8
  %256 = bitcast %"class.std::__1::unique_ptr"* %250 to i64*
  store i64 %253, i64* %256, align 8
  %257 = icmp eq %"class.base::ModuleCache::Module"* %255, null
  br i1 %257, label %275, label %258

258:                                              ; preds = %251
  %259 = bitcast %"class.base::ModuleCache::Module"* %255 to void (%"class.base::ModuleCache::Module"*)***
  %260 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %259, align 8
  %261 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %260, i64 1
  %262 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %261, align 8
  tail call void %262(%"class.base::ModuleCache::Module"* nonnull %255) #11
  br label %275

263:                                              ; preds = %232
  %264 = bitcast %"class.std::__1::unique_ptr"* %234 to i64*
  %265 = load i64, i64* %264, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %235, align 8
  %266 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %250, i64 0, i32 0, i32 0, i32 0
  %267 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %266, align 8
  %268 = bitcast %"class.std::__1::unique_ptr"* %250 to i64*
  store i64 %265, i64* %268, align 8
  %269 = icmp eq %"class.base::ModuleCache::Module"* %267, null
  br i1 %269, label %275, label %270

270:                                              ; preds = %263
  %271 = bitcast %"class.base::ModuleCache::Module"* %267 to void (%"class.base::ModuleCache::Module"*)***
  %272 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %271, align 8
  %273 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %272, i64 1
  %274 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %273, align 8
  tail call void %274(%"class.base::ModuleCache::Module"* nonnull %267) #11
  br label %275

275:                                              ; preds = %270, %263, %258, %251
  %276 = phi %"class.std::__1::unique_ptr"* [ %233, %251 ], [ %233, %258 ], [ %211, %263 ], [ %211, %270 ]
  %277 = phi %"class.std::__1::unique_ptr"* [ %210, %251 ], [ %210, %258 ], [ %234, %263 ], [ %234, %270 ]
  %278 = icmp eq %"class.std::__1::unique_ptr"* %277, %6
  br i1 %278, label %331, label %208

279:                                              ; preds = %69, %279
  %280 = phi %"class.std::__1::unique_ptr"* [ %329, %279 ], [ %71, %69 ]
  %281 = phi %"class.std::__1::unique_ptr"* [ %328, %279 ], [ %72, %69 ]
  %282 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %281, i64 0, i32 0, i32 0, i32 0
  %283 = bitcast %"class.std::__1::unique_ptr"* %281 to i64*
  %284 = load i64, i64* %283, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %282, align 8
  %285 = bitcast %"class.std::__1::unique_ptr"* %280 to i64*
  store i64 %284, i64* %285, align 8
  %286 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %281, i64 1
  %287 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %280, i64 1
  %288 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %286, i64 0, i32 0, i32 0, i32 0
  %289 = bitcast %"class.std::__1::unique_ptr"* %286 to i64*
  %290 = load i64, i64* %289, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %288, align 8
  %291 = bitcast %"class.std::__1::unique_ptr"* %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %281, i64 2
  %293 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %280, i64 2
  %294 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %292, i64 0, i32 0, i32 0, i32 0
  %295 = bitcast %"class.std::__1::unique_ptr"* %292 to i64*
  %296 = load i64, i64* %295, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %294, align 8
  %297 = bitcast %"class.std::__1::unique_ptr"* %293 to i64*
  store i64 %296, i64* %297, align 8
  %298 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %281, i64 3
  %299 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %280, i64 3
  %300 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %298, i64 0, i32 0, i32 0, i32 0
  %301 = bitcast %"class.std::__1::unique_ptr"* %298 to i64*
  %302 = load i64, i64* %301, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %300, align 8
  %303 = bitcast %"class.std::__1::unique_ptr"* %299 to i64*
  store i64 %302, i64* %303, align 8
  %304 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %281, i64 4
  %305 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %280, i64 4
  %306 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %304, i64 0, i32 0, i32 0, i32 0
  %307 = bitcast %"class.std::__1::unique_ptr"* %304 to i64*
  %308 = load i64, i64* %307, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %306, align 8
  %309 = bitcast %"class.std::__1::unique_ptr"* %305 to i64*
  store i64 %308, i64* %309, align 8
  %310 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %281, i64 5
  %311 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %280, i64 5
  %312 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %310, i64 0, i32 0, i32 0, i32 0
  %313 = bitcast %"class.std::__1::unique_ptr"* %310 to i64*
  %314 = load i64, i64* %313, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %312, align 8
  %315 = bitcast %"class.std::__1::unique_ptr"* %311 to i64*
  store i64 %314, i64* %315, align 8
  %316 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %281, i64 6
  %317 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %280, i64 6
  %318 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %316, i64 0, i32 0, i32 0, i32 0
  %319 = bitcast %"class.std::__1::unique_ptr"* %316 to i64*
  %320 = load i64, i64* %319, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %318, align 8
  %321 = bitcast %"class.std::__1::unique_ptr"* %317 to i64*
  store i64 %320, i64* %321, align 8
  %322 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %281, i64 7
  %323 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %280, i64 7
  %324 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %322, i64 0, i32 0, i32 0, i32 0
  %325 = bitcast %"class.std::__1::unique_ptr"* %322 to i64*
  %326 = load i64, i64* %325, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %324, align 8
  %327 = bitcast %"class.std::__1::unique_ptr"* %323 to i64*
  store i64 %326, i64* %327, align 8
  %328 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %281, i64 8
  %329 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %280, i64 8
  %330 = icmp eq %"class.std::__1::unique_ptr"* %328, %2
  br i1 %330, label %204, label %279

331:                                              ; preds = %147, %99, %275, %230, %204, %74
  %332 = phi i64 [ %77, %74 ], [ %206, %204 ], [ %206, %230 ], [ %206, %275 ], [ %77, %99 ], [ %77, %147 ]
  %333 = icmp eq %"class.std::__1::unique_ptr"* %6, null
  br i1 %333, label %349, label %334

334:                                              ; preds = %331, %345
  %335 = phi i64 [ %346, %345 ], [ 0, %331 ]
  %336 = phi %"class.std::__1::unique_ptr"* [ %347, %345 ], [ %6, %331 ]
  %337 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %336, i64 0, i32 0, i32 0, i32 0
  %338 = load %"class.base::ModuleCache::Module"*, %"class.base::ModuleCache::Module"** %337, align 8
  store %"class.base::ModuleCache::Module"* null, %"class.base::ModuleCache::Module"** %337, align 8
  %339 = icmp eq %"class.base::ModuleCache::Module"* %338, null
  br i1 %339, label %345, label %340

340:                                              ; preds = %334
  %341 = bitcast %"class.base::ModuleCache::Module"* %338 to void (%"class.base::ModuleCache::Module"*)***
  %342 = load void (%"class.base::ModuleCache::Module"*)**, void (%"class.base::ModuleCache::Module"*)*** %341, align 8
  %343 = getelementptr inbounds void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %342, i64 1
  %344 = load void (%"class.base::ModuleCache::Module"*)*, void (%"class.base::ModuleCache::Module"*)** %343, align 8
  tail call void %344(%"class.base::ModuleCache::Module"* nonnull %338) #11
  br label %345

345:                                              ; preds = %340, %334
  %346 = add nuw nsw i64 %335, 1
  %347 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %336, i64 1
  %348 = icmp eq i64 %346, %332
  br i1 %348, label %349, label %334

349:                                              ; preds = %345, %43, %11, %331
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = distinct !{!13, !10}
!14 = distinct !{!14, !10}
!15 = distinct !{!15, !10}
!16 = distinct !{!16, !10}
!17 = distinct !{!17, !10}
!18 = distinct !{!18, !10}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNSt3__16__treeINS_10unique_ptrIKN4base11ModuleCache6ModuleENS_14default_deleteIS5_EEEENS3_23ModuleAndAddressCompareENS_9allocatorIS8_EEE16__construct_nodeIJS8_EEENS1_INS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSA_ISG_EEEEEEDpOT_: argument 0"}
!21 = distinct !{!21, !"_ZNSt3__16__treeINS_10unique_ptrIKN4base11ModuleCache6ModuleENS_14default_deleteIS5_EEEENS3_23ModuleAndAddressCompareENS_9allocatorIS8_EEE16__construct_nodeIJS8_EEENS1_INS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSA_ISG_EEEEEEDpOT_"}
!22 = !{i8 0, i8 2}
!23 = distinct !{!23, !10}
!24 = !{!25}
!25 = distinct !{!25, !26}
!26 = distinct !{!26, !"LVerDomain"}
!27 = !{!28}
!28 = distinct !{!28, !26}
!29 = distinct !{!29, !8}
!30 = distinct !{!30, !10}
!31 = !{!32}
!32 = distinct !{!32, !33}
!33 = distinct !{!33, !"LVerDomain"}
!34 = !{!35}
!35 = distinct !{!35, !33}
!36 = distinct !{!36, !8}
!37 = distinct !{!37, !10}
!38 = distinct !{!38, !10}
!39 = distinct !{!39, !8}
!40 = distinct !{!40, !8}
!41 = !{!42}
!42 = distinct !{!42, !43}
!43 = distinct !{!43, !"LVerDomain"}
!44 = !{!45}
!45 = distinct !{!45, !43}
!46 = distinct !{!46, !8}
!47 = distinct !{!47, !10}
!48 = distinct !{!48, !10}
!49 = distinct !{!49, !8}
!50 = !{!51}
!51 = distinct !{!51, !52}
!52 = distinct !{!52, !"LVerDomain"}
!53 = !{!54}
!54 = distinct !{!54, !52}
!55 = distinct !{!55, !8}
!56 = distinct !{!56, !10}
!57 = distinct !{!57, !10}
!58 = distinct !{!58, !8}
!59 = distinct !{!59, !10}
!60 = !{!61}
!61 = distinct !{!61, !62}
!62 = distinct !{!62, !"LVerDomain"}
!63 = !{!64}
!64 = distinct !{!64, !62}
!65 = distinct !{!65, !8}
!66 = distinct !{!66, !10}
!67 = distinct !{!67, !10}
!68 = !{!69}
!69 = distinct !{!69, !70}
!70 = distinct !{!70, !"LVerDomain"}
!71 = !{!72}
!72 = distinct !{!72, !70}
!73 = distinct !{!73, !8}
!74 = distinct !{!74, !10}
!75 = distinct !{!75, !8}
!76 = !{!77}
!77 = distinct !{!77, !78}
!78 = distinct !{!78, !"LVerDomain"}
!79 = !{!80}
!80 = distinct !{!80, !78}
!81 = distinct !{!81, !8}
!82 = distinct !{!82, !10}
!83 = distinct !{!83, !8}
!84 = distinct !{!84, !8}
!85 = !{!86}
!86 = distinct !{!86, !87}
!87 = distinct !{!87, !"LVerDomain"}
!88 = !{!89}
!89 = distinct !{!89, !87}
!90 = distinct !{!90, !8}
!91 = distinct !{!91, !10}
!92 = distinct !{!92, !8}
!93 = distinct !{!93, !10}
!94 = distinct !{!94, !10}
!95 = distinct !{!95, !10}
!96 = distinct !{!96, !10}
!97 = distinct !{!97, !10}
!98 = distinct !{!98, !10}
!99 = distinct !{!99, !10}
!100 = distinct !{!100, !10}
!101 = distinct !{!101, !10}
!102 = distinct !{!102, !10}
