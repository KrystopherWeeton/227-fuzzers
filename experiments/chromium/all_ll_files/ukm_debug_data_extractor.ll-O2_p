; ModuleID = '../../components/ukm/debug/ukm_debug_data_extractor.cc'
source_filename = "../../components/ukm/debug/ukm_debug_data_extractor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ukm::debug::UkmDebugDataExtractor" = type { i8 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.0" }
%"union.absl::variant_internal::DestructibleUnionImpl.0" = type { %"union.absl::variant_internal::DestructibleUnionImpl.1" }
%"union.absl::variant_internal::DestructibleUnionImpl.1" = type { %"union.absl::variant_internal::DestructibleUnionImpl.2" }
%"union.absl::variant_internal::DestructibleUnionImpl.2" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.base::Value"* }
%"class.ukm::UkmService" = type { %"class.ukm::UkmRecorderImpl", %class.PrefService*, i8, i64, i32, i32, %"class.metrics::MetricsServiceClient"*, %"class.metrics::DelegatingProvider", %"class.std::__1::unique_ptr.250", %"class.ukm::UkmReportingService", %"class.std::__1::unique_ptr.295", %"class.base::TimeTicks", i8, i8, %"class.base::OnceCallback", %"class.base::WeakPtrFactory.306" }
%"class.ukm::UkmRecorderImpl" = type { %"class.ukm::UkmRecorder", i8, i8, i8, i8, i32, %"class.base::RepeatingCallback", %"class.std::__1::unique_ptr", %"class.std::__1::map", %"class.std::__1::set", i32, %"class.base::flat_map.47", %"class.base::flat_map.57", %"struct.ukm::UkmRecorderImpl::Recordings", i64, i64, i64 }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.ukm::UkmEntryFilter"* }
%"class.ukm::UkmEntryFilter" = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { i64 }
%"class.std::__1::set" = type { %"class.std::__1::__tree.40" }
%"class.std::__1::__tree.40" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.41", %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.base::flat_map.47" = type { %"class.base::internal::flat_tree.48" }
%"class.base::internal::flat_tree.48" = type { %"class.std::__1::vector.49" }
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { %"struct.std::__1::pair.51"*, %"struct.std::__1::pair.51"*, %"class.std::__1::__compressed_pair.52" }
%"struct.std::__1::pair.51" = type opaque
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.std::__1::pair.51"* }
%"class.base::flat_map.57" = type { %"class.base::internal::flat_tree.58" }
%"class.base::internal::flat_tree.58" = type { %"class.std::__1::vector.59" }
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { %"struct.std::__1::pair.61"*, %"struct.std::__1::pair.61"*, %"class.std::__1::__compressed_pair.62" }
%"struct.std::__1::pair.61" = type { i64, i64 }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.std::__1::pair.61"* }
%"struct.ukm::UkmRecorderImpl::Recordings" = type { %"class.std::__1::map.67", %"class.std::__1::vector.78", %"class.std::__1::unordered_set", %"class.std::__1::unordered_set.119", %"class.std::__1::map.145", %"struct.ukm::UkmRecorderImpl::Recordings::SourceCounts" }
%"class.std::__1::map.67" = type { %"class.std::__1::__tree.68" }
%"class.std::__1::__tree.68" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.69", %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::vector.78" = type { %"class.std::__1::__vector_base.79" }
%"class.std::__1::__vector_base.79" = type { %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"*, %"class.std::__1::__compressed_pair.96" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.80" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.ukm::mojom::UkmEntry"* }
%"class.ukm::mojom::UkmEntry" = type { i64, i64, %"class.base::flat_map.83" }
%"class.base::flat_map.83" = type { %"class.base::internal::flat_tree.84" }
%"class.base::internal::flat_tree.84" = type { %"class.std::__1::vector.85" }
%"class.std::__1::vector.85" = type { %"class.std::__1::__vector_base.86" }
%"class.std::__1::__vector_base.86" = type { %"struct.std::__1::pair.87"*, %"struct.std::__1::pair.87"*, %"class.std::__1::__compressed_pair.88" }
%"struct.std::__1::pair.87" = type { i64, i64 }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.std::__1::pair.87"* }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.mojo::StructPtr"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.101", %"class.std::__1::__compressed_pair.109", %"class.std::__1::__compressed_pair.114", %"class.std::__1::__compressed_pair.116", [4 x i8] }>
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103", %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { float }
%"class.std::__1::unordered_set.119" = type { %"class.std::__1::__hash_table.120" }
%"class.std::__1::__hash_table.120" = type <{ %"class.std::__1::unique_ptr.121", %"class.std::__1::__compressed_pair.131", %"class.std::__1::__compressed_pair.136", %"class.std::__1::__compressed_pair.140", [4 x i8] }>
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123", %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"struct.std::__1::__hash_node_base.124"** }
%"struct.std::__1::__hash_node_base.124" = type { %"struct.std::__1::__hash_node_base.124"* }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.std::__1::__bucket_list_deallocator.126" }
%"class.std::__1::__bucket_list_deallocator.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.std::__1::__hash_node_base.124" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"class.std::__1::map.145" = type { %"class.std::__1::__tree.146" }
%"class.std::__1::__tree.146" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.147", %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.ukm::UkmRecorderImpl::Recordings::SourceCounts" = type { i64, i64, i64 }
%class.PrefService = type { i32 (...)**, %"class.std::__1::unique_ptr.154", %"class.std::__1::unique_ptr.160", %class.scoped_refptr.184, %"class.base::RepeatingCallback.185", %class.scoped_refptr.186, %"class.std::__1::unordered_map.218" }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %class.PrefNotifierImpl* }
%class.PrefNotifierImpl = type opaque
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %class.PrefValueStore* }
%class.PrefValueStore = type { i32 (...)**, [7 x %"class.PrefValueStore::PrefStoreKeeper"], %"class.base::RepeatingCallback.164", %class.PrefNotifier*, %"class.std::__1::map.165", i8, %"class.std::__1::unique_ptr.175" }
%"class.PrefValueStore::PrefStoreKeeper" = type <{ %"class.PrefStore::Observer", %class.PrefValueStore*, %class.scoped_refptr.163, i32, [4 x i8] }>
%"class.PrefStore::Observer" = type { i32 (...)** }
%class.scoped_refptr.163 = type { %class.PrefStore* }
%class.PrefStore = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::RepeatingCallback.164" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.PrefNotifier = type opaque
%"class.std::__1::map.165" = type { %"class.std::__1::__tree.166" }
%"class.std::__1::__tree.166" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.167", %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.PrefValueStore::Delegate"* }
%"class.PrefValueStore::Delegate" = type { i32 (...)** }
%class.scoped_refptr.184 = type { %class.PersistentPrefStore* }
%class.PersistentPrefStore = type { %class.WriteablePrefStore.base, [4 x i8] }
%class.WriteablePrefStore.base = type { %class.PrefStore.base }
%class.PrefStore.base = type <{ i32 (...)**, %"class.base::RefCounted" }>
%"class.base::RepeatingCallback.185" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.186 = type { %class.PrefRegistry* }
%class.PrefRegistry = type { i32 (...)**, %"class.base::RefCounted.187", %class.scoped_refptr.188, %"class.std::__1::unordered_map", %"class.std::__1::set.210" }
%"class.base::RefCounted.187" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.188 = type { %class.DefaultPrefStore* }
%class.DefaultPrefStore = type opaque
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.189" }
%"class.std::__1::__hash_table.189" = type <{ %"class.std::__1::unique_ptr.190", %"class.std::__1::__compressed_pair.200", %"class.std::__1::__compressed_pair.205", %"class.std::__1::__compressed_pair.207", [4 x i8] }>
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192", %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"struct.std::__1::__hash_node_base.193"** }
%"struct.std::__1::__hash_node_base.193" = type { %"struct.std::__1::__hash_node_base.193"* }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.std::__1::__bucket_list_deallocator.195" }
%"class.std::__1::__bucket_list_deallocator.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"struct.std::__1::__hash_node_base.193" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"class.std::__1::set.210" = type { %"class.std::__1::__tree.211" }
%"class.std::__1::__tree.211" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.212", %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::unordered_map.218" = type { %"class.std::__1::__hash_table.219" }
%"class.std::__1::__hash_table.219" = type <{ %"class.std::__1::unique_ptr.220", %"class.std::__1::__compressed_pair.230", %"class.std::__1::__compressed_pair.235", %"class.std::__1::__compressed_pair.238", [4 x i8] }>
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222", %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"struct.std::__1::__hash_node_base.223"** }
%"struct.std::__1::__hash_node_base.223" = type { %"struct.std::__1::__hash_node_base.223"* }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.std::__1::__bucket_list_deallocator.225" }
%"class.std::__1::__bucket_list_deallocator.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"struct.std::__1::__hash_node_base.223" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"class.metrics::MetricsServiceClient" = type opaque
%"class.metrics::DelegatingProvider" = type { %"class.metrics::MetricsProvider", %"class.std::__1::vector.242" }
%"class.metrics::MetricsProvider" = type { i32 (...)** }
%"class.std::__1::vector.242" = type { %"class.std::__1::__vector_base.243" }
%"class.std::__1::__vector_base.243" = type { %"class.std::__1::unique_ptr.244"*, %"class.std::__1::unique_ptr.244"*, %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::unique_ptr.244" = type opaque
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.std::__1::unique_ptr.244"* }
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.metrics::UkmDemographicMetricsProvider"* }
%"class.metrics::UkmDemographicMetricsProvider" = type { i32 (...)** }
%"class.ukm::UkmReportingService" = type { %"class.metrics::ReportingService", %"class.metrics::UnsentLogStore" }
%"class.metrics::ReportingService" = type { i32 (...)**, %"class.metrics::MetricsServiceClient"*, i64, i8, %"class.std::__1::unique_ptr.256", i8, %"class.std::__1::unique_ptr.262", %"class.std::__1::unique_ptr.268", %"class.base::TimeTicks", %"class.metrics::ReportingInfo", %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.metrics::MetricsLogUploader"* }
%"class.metrics::MetricsLogUploader" = type { i32 (...)** }
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.metrics::MetricsUploadScheduler"* }
%"class.metrics::MetricsUploadScheduler" = type opaque
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.metrics::DataUseTracker"* }
%"class.metrics::DataUseTracker" = type { i32 (...)**, %class.PrefService* }
%"class.metrics::ReportingInfo" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", i32, i32, i32, i8, [3 x i8] }>
%"class.google::protobuf::MessageLite" = type { i32 (...)**, %"class.google::protobuf::internal::InternalMetadata" }
%"class.google::protobuf::internal::InternalMetadata" = type { i8* }
%"class.google::protobuf::internal::HasBits" = type { [1 x i32] }
%"class.google::protobuf::internal::CachedSize" = type { %"struct.std::__1::atomic" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.274 }
%class.scoped_refptr.274 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.275", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.275" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.276" }
%"struct.std::__1::atomic.276" = type { %"struct.std::__1::__atomic_base.277" }
%"struct.std::__1::__atomic_base.277" = type { %"struct.std::__1::__atomic_base.278" }
%"struct.std::__1::__atomic_base.278" = type { %"struct.std::__1::__cxx_atomic_impl.279" }
%"struct.std::__1::__cxx_atomic_impl.279" = type { %"struct.std::__1::__cxx_atomic_base_impl.280" }
%"struct.std::__1::__cxx_atomic_base_impl.280" = type { i8 }
%"class.metrics::UnsentLogStore" = type { %"class.metrics::LogStore", %"class.std::__1::unique_ptr.281", %class.PrefService*, i8*, i8*, i64, i64, i64, %"class.std::__1::basic_string", %"class.std::__1::vector.287", i32, i32 }
%"class.metrics::LogStore" = type { i32 (...)** }
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.metrics::UnsentLogStoreMetrics"* }
%"class.metrics::UnsentLogStoreMetrics" = type opaque
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"class.std::__1::unique_ptr.289"*, %"class.std::__1::unique_ptr.289"*, %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::unique_ptr.289" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"struct.metrics::UnsentLogStore::LogInfo"* }
%"struct.metrics::UnsentLogStore::LogInfo" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.absl::optional.347" }
%"class.absl::optional.347" = type { %"class.absl::optional_internal::optional_data.348" }
%"class.absl::optional_internal::optional_data.348" = type { %"class.absl::optional_internal::optional_data_base.349" }
%"class.absl::optional_internal::optional_data_base.349" = type { %"class.absl::optional_internal::optional_data_dtor_base.350" }
%"class.absl::optional_internal::optional_data_dtor_base.350" = type { i8, %union.anon.351 }
%union.anon.351 = type { i32 }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.std::__1::unique_ptr.289"* }
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.metrics::MetricsRotationScheduler"* }
%"class.metrics::MetricsRotationScheduler" = type { %"class.metrics::MetricsScheduler.base", i8, i8, %"class.base::RepeatingCallback.302" }
%"class.metrics::MetricsScheduler.base" = type <{ i32 (...)**, %"class.base::RepeatingCallback.298", %"class.base::OneShotTimer", %"class.base::TimeDelta", i8, i8 }>
%"class.base::RepeatingCallback.298" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.299, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.301" }
%class.scoped_refptr.299 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.300" }>
%"class.base::RefCountedThreadSafe.300" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.301" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::RepeatingCallback.302" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.306" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::ListValue" = type { %"class.base::Value" }
%"class.std::__1::map.307" = type { %"class.std::__1::__tree.308" }
%"class.std::__1::__tree.308" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.309", %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__tree_node.377" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.378" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type.378" = type { %"struct.std::__1::pair.343" }
%"struct.std::__1::pair.343" = type { i64, %"struct.ukm::debug::(anonymous namespace)::SourceData" }
%"struct.ukm::debug::(anonymous namespace)::SourceData" = type { %"class.ukm::UkmSource"*, %"class.std::__1::vector.336" }
%"class.ukm::UkmSource" = type { i64, i64, %"struct.ukm::UkmSource::NavigationData", i32, %"class.base::TimeTicks" }
%"struct.ukm::UkmSource::NavigationData" = type { %"class.std::__1::vector.320", i64, i64, i64, i64, i8, i32, i8, i8, %"class.absl::optional" }
%"class.std::__1::vector.320" = type { %"class.std::__1::__vector_base.321" }
%"class.std::__1::__vector_base.321" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.328" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.322" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %class.GURL* }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.332 }
%union.anon.332 = type { %"class.base::TimeTicks" }
%"class.std::__1::vector.336" = type { %"class.std::__1::__vector_base.337" }
%"class.std::__1::__vector_base.337" = type { %"class.ukm::mojom::UkmEntry"**, %"class.ukm::mojom::UkmEntry"**, %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"class.ukm::mojom::UkmEntry"** }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.357" }
%"struct.std::__1::pair.357" = type { i64, %"struct.ukm::builders::EntryDecoder" }
%"struct.ukm::builders::EntryDecoder" = type { i8*, %"class.std::__1::map.358" }
%"class.std::__1::map.358" = type { %"class.std::__1::__tree.359" }
%"class.std::__1::__tree.359" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.360", %"class.std::__1::__compressed_pair.364" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__tree_node.373" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.374" }
%"struct.std::__1::__value_type.374" = type { %"struct.std::__1::pair.372" }
%"struct.std::__1::pair.372" = type { i64, i8* }
%"class.std::__1::__basic_string_common" = type { i8 }

$_ZNSt3__16vectorIN4base5ValueENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@.str = private unnamed_addr constant [6 x i8] c"state\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"client_id\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"%016lx\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"session_id\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"is_sampling_enabled\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"id\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"url\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"entries\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"sources\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@.str.11 = private unnamed_addr constant [8 x i8] c"metrics\00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c"Unknown %lu\00", align 1

@_ZN3ukm5debug21UkmDebugDataExtractorC1Ev = hidden unnamed_addr alias void (%"class.ukm::debug::UkmDebugDataExtractor"*), void (%"class.ukm::debug::UkmDebugDataExtractor"*)* @_ZN3ukm5debug21UkmDebugDataExtractorC2Ev
@_ZN3ukm5debug21UkmDebugDataExtractorD1Ev = hidden unnamed_addr alias void (%"class.ukm::debug::UkmDebugDataExtractor"*), void (%"class.ukm::debug::UkmDebugDataExtractor"*)* @_ZN3ukm5debug21UkmDebugDataExtractorD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3ukm5debug21UkmDebugDataExtractorC2Ev(%"class.ukm::debug::UkmDebugDataExtractor"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3ukm5debug21UkmDebugDataExtractorD2Ev(%"class.ukm::debug::UkmDebugDataExtractor"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3ukm5debug21UkmDebugDataExtractor17UInt64AsPairOfIntEm(%"class.base::Value"* noalias sret, i64) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::vector.20", align 8
  %4 = alloca %"class.base::Value", align 8
  %5 = alloca %"class.base::Value", align 8
  %6 = bitcast %"class.std::__1::vector.20"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %3, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %3, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #11
  %10 = bitcast %"class.base::Value"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #11
  %11 = lshr i64 %1, 32
  %12 = trunc i64 %11 to i32
  call void @_ZN4base5ValueC1Ei(%"class.base::Value"* nonnull %4, i32 %12) #11
  call void @_ZNSt3__16vectorIN4base5ValueENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.20"* nonnull %3, %"class.base::Value"* nonnull dereferenceable(32) %4) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #11
  %13 = bitcast %"class.base::Value"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #11
  %14 = trunc i64 %1 to i32
  call void @_ZN4base5ValueC1Ei(%"class.base::Value"* nonnull %5, i32 %14) #11
  %15 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %16 = load %"class.base::Value"*, %"class.base::Value"** %9, align 8
  %17 = icmp ult %"class.base::Value"* %15, %16
  br i1 %17, label %18, label %22

18:                                               ; preds = %2
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %15, %"class.base::Value"* nonnull dereferenceable(32) %5) #11
  %19 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %15, i64 1
  %20 = ptrtoint %"class.base::Value"* %19 to i64
  %21 = bitcast %"class.base::Value"** %8 to i64*
  store i64 %20, i64* %21, align 8
  br label %24

22:                                               ; preds = %2
  call void @_ZNSt3__16vectorIN4base5ValueENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.20"* nonnull %3, %"class.base::Value"* nonnull dereferenceable(32) %5) #11
  %23 = bitcast %"class.base::Value"** %8 to i64*
  br label %24

24:                                               ; preds = %18, %22
  %25 = phi i64* [ %21, %18 ], [ %23, %22 ]
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #11
  %26 = bitcast %"class.std::__1::vector.20"* %3 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = load i64, i64* %25, align 8
  %29 = sub i64 %28, %27
  %30 = ashr exact i64 %29, 5
  %31 = inttoptr i64 %27 to %"class.base::Value"*
  call void @_ZN4base5ValueC1ENS_4spanIKS0_Lm18446744073709551615EEE(%"class.base::Value"* %0, i64 %30, %"class.base::Value"* %31) #11
  %32 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %33 = icmp eq %"class.base::Value"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %24
  %35 = bitcast %"class.base::Value"* %32 to i8*
  %36 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %37 = icmp eq %"class.base::Value"* %36, %32
  br i1 %37, label %45, label %38

38:                                               ; preds = %34, %38
  %39 = phi %"class.base::Value"* [ %40, %38 ], [ %36, %34 ]
  %40 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %39, i64 -1
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %40) #11
  %41 = icmp eq %"class.base::Value"* %40, %32
  br i1 %41, label %42, label %38

42:                                               ; preds = %38
  %43 = bitcast %"class.std::__1::vector.20"* %3 to i8**
  %44 = load i8*, i8** %43, align 8
  br label %45

45:                                               ; preds = %42, %34
  %46 = phi i8* [ %44, %42 ], [ %35, %34 ]
  store %"class.base::Value"* %32, %"class.base::Value"** %8, align 8
  call void @_ZdlPv(i8* %46) #12
  br label %47

47:                                               ; preds = %24, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4base5ValueC1Ei(%"class.base::Value"*, i32) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4base5ValueC1ENS_4spanIKS0_Lm18446744073709551615EEE(%"class.base::Value"*, i64, %"class.base::Value"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3ukm5debug21UkmDebugDataExtractor17GetStructuredDataEPKNS_10UkmServiceE(%"class.base::Value"* noalias sret, %"class.ukm::UkmService"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::DictionaryValue", align 8
  %4 = alloca %"class.base::Value", align 8
  %5 = alloca %"class.base::Value", align 8
  %6 = alloca %"class.base::ListValue", align 8
  %7 = alloca %"class.base::DictionaryValue", align 8
  %8 = alloca %"class.base::Value", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.base::Value", align 8
  %11 = alloca %"class.base::DictionaryValue", align 8
  %12 = alloca %"class.base::Value", align 8
  %13 = alloca %"class.base::Value", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.base::Value", align 8
  %16 = alloca %"class.base::Value", align 8
  %17 = alloca %"class.std::__1::map.307", align 8
  %18 = alloca %"class.base::ListValue", align 8
  %19 = alloca %"class.base::DictionaryValue", align 8
  %20 = alloca %"class.base::Value", align 8
  %21 = alloca %"class.base::Value", align 8
  %22 = alloca %"class.base::Value", align 8
  %23 = alloca %"class.base::ListValue", align 8
  %24 = alloca %"class.base::Value", align 8
  %25 = icmp eq %"class.ukm::UkmService"* %1, null
  br i1 %25, label %26, label %27

26:                                               ; preds = %2
  tail call void @_ZN4base5ValueC1Ev(%"class.base::Value"* %0) #11
  br label %552

27:                                               ; preds = %2
  %28 = bitcast %"class.base::DictionaryValue"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #11
  %29 = bitcast %"class.base::DictionaryValue"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 32, i1 false)
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %11) #11
  %30 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %11, i64 0, i32 0
  %31 = bitcast %"class.base::Value"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.ukm::UkmService", %"class.ukm::UkmService"* %1, i64 0, i32 0
  %33 = getelementptr inbounds %"class.ukm::UkmService", %"class.ukm::UkmService"* %1, i64 0, i32 0, i32 1
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = icmp ne i8 %34, 0
  call void @_ZN4base5ValueC1Eb(%"class.base::Value"* nonnull %12, i1 zeroext %35) #11
  %36 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %30, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %12) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #11
  %37 = bitcast %"class.base::Value"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37) #11
  %38 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #11
  %39 = getelementptr inbounds %"class.ukm::UkmService", %"class.ukm::UkmService"* %1, i64 0, i32 3
  %40 = load i64, i64* %39, align 8
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %14, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i64 %40) #11
  call void @_ZN4base5ValueC1EONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"* nonnull %13, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %14) #11
  %41 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %30, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %13) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %13) #11
  %42 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %27
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @_ZdlPv(i8* %48) #12
  br label %49

49:                                               ; preds = %27, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #11
  %50 = bitcast %"class.base::Value"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %50) #11
  %51 = getelementptr inbounds %"class.ukm::UkmService", %"class.ukm::UkmService"* %1, i64 0, i32 4
  %52 = load i32, i32* %51, align 8
  call void @_ZN4base5ValueC1Ei(%"class.base::Value"* nonnull %15, i32 %52) #11
  %53 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %30, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %15) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %50) #11
  %54 = bitcast %"class.base::Value"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %54) #11
  %55 = call zeroext i1 @_ZNK3ukm15UkmRecorderImpl17IsSamplingEnabledEv(%"class.ukm::UkmRecorderImpl"* %32) #11
  call void @_ZN4base5ValueC1Eb(%"class.base::Value"* nonnull %16, i1 zeroext %55) #11
  %56 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %30, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %16) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %54) #11
  %57 = bitcast %"class.std::__1::map.307"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #11
  %58 = getelementptr inbounds %"class.std::__1::map.307", %"class.std::__1::map.307"* %17, i64 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.std::__1::map.307", %"class.std::__1::map.307"* %17, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.std::__1::map.307", %"class.std::__1::map.307"* %17, i64 0, i32 0, i32 2, i32 0, i32 0
  %61 = getelementptr inbounds %"class.std::__1::map.307", %"class.std::__1::map.307"* %17, i64 0, i32 0, i32 1, i32 0, i32 0
  %62 = bitcast %"class.std::__1::__tree_node_base"** %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %61, %"class.std::__1::__tree_end_node"** %58, align 8
  %63 = getelementptr inbounds %"class.ukm::UkmService", %"class.ukm::UkmService"* %1, i64 0, i32 0, i32 13, i32 0, i32 0, i32 0
  %64 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %65 = getelementptr inbounds %"class.ukm::UkmService", %"class.ukm::UkmService"* %1, i64 0, i32 0, i32 13, i32 0, i32 0, i32 1, i32 0, i32 0
  %66 = icmp eq %"class.std::__1::__tree_end_node"* %64, %65
  br i1 %66, label %71, label %67

67:                                               ; preds = %49
  %68 = bitcast %"class.std::__1::__tree_end_node"* %61 to %"class.std::__1::__tree_node.377"**
  %69 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %61, i64 0, i32 0
  %70 = bitcast %"class.std::__1::map.307"* %17 to i64*
  br label %81

71:                                               ; preds = %178, %49
  %72 = getelementptr inbounds %"class.ukm::UkmService", %"class.ukm::UkmService"* %1, i64 0, i32 0, i32 13, i32 1, i32 0, i32 0
  %73 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %72, align 8
  %74 = getelementptr inbounds %"class.ukm::UkmService", %"class.ukm::UkmService"* %1, i64 0, i32 0, i32 13, i32 1, i32 0, i32 1
  %75 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %74, align 8
  %76 = icmp eq %"class.mojo::StructPtr"* %73, %75
  br i1 %76, label %183, label %77

77:                                               ; preds = %71
  %78 = bitcast %"class.std::__1::__tree_end_node"* %61 to %"class.std::__1::__tree_node.377"**
  %79 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %61, i64 0, i32 0
  %80 = bitcast %"class.std::__1::map.307"* %17 to i64*
  br label %218

81:                                               ; preds = %181, %67
  %82 = phi %"class.std::__1::__tree_node.377"* [ null, %67 ], [ %182, %181 ]
  %83 = phi %"class.std::__1::__tree_end_node"* [ %64, %67 ], [ %179, %181 ]
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %83, i64 4
  %85 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %83, i64 5
  %86 = bitcast %"class.std::__1::__tree_end_node"* %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.std::__1::__tree_end_node"* %84 to i64*
  %89 = icmp eq %"class.std::__1::__tree_node.377"* %82, null
  br i1 %89, label %118, label %90

90:                                               ; preds = %81
  %91 = load i64, i64* %88, align 8
  br label %92

92:                                               ; preds = %114, %90
  %93 = phi %"class.std::__1::__tree_node.377"* [ %117, %114 ], [ %82, %90 ]
  %94 = phi %"class.std::__1::__tree_node_base"** [ %116, %114 ], [ %59, %90 ]
  %95 = getelementptr inbounds %"class.std::__1::__tree_node.377", %"class.std::__1::__tree_node.377"* %93, i64 0, i32 1, i32 0, i32 0
  %96 = load i64, i64* %95, align 8
  %97 = icmp slt i64 %91, %96
  br i1 %97, label %98, label %104

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.std::__1::__tree_node.377", %"class.std::__1::__tree_node.377"* %93, i64 0, i32 0, i32 0, i32 0
  %100 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %99, align 8
  %101 = icmp eq %"class.std::__1::__tree_node_base"* %100, null
  br i1 %101, label %102, label %114

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.std::__1::__tree_node.377", %"class.std::__1::__tree_node.377"* %93, i64 0, i32 0, i32 0
  br label %118

104:                                              ; preds = %92
  %105 = icmp slt i64 %96, %91
  br i1 %105, label %106, label %112

106:                                              ; preds = %104
  %107 = getelementptr inbounds %"class.std::__1::__tree_node.377", %"class.std::__1::__tree_node.377"* %93, i64 0, i32 0, i32 1
  %108 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %107, align 8
  %109 = icmp eq %"class.std::__1::__tree_node_base"* %108, null
  br i1 %109, label %110, label %114

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.std::__1::__tree_node.377", %"class.std::__1::__tree_node.377"* %93, i64 0, i32 0, i32 0
  br label %118

112:                                              ; preds = %104
  %113 = getelementptr inbounds %"class.std::__1::__tree_node.377", %"class.std::__1::__tree_node.377"* %93, i64 0, i32 0, i32 0
  br label %118

114:                                              ; preds = %106, %98
  %115 = phi %"class.std::__1::__tree_node_base"* [ %100, %98 ], [ %108, %106 ]
  %116 = phi %"class.std::__1::__tree_node_base"** [ %99, %98 ], [ %107, %106 ]
  %117 = bitcast %"class.std::__1::__tree_node_base"* %115 to %"class.std::__1::__tree_node.377"*
  br label %92

118:                                              ; preds = %81, %112, %110, %102
  %119 = phi %"class.std::__1::__tree_end_node"* [ %103, %102 ], [ %111, %110 ], [ %113, %112 ], [ %61, %81 ]
  %120 = phi %"class.std::__1::__tree_node_base"** [ %99, %102 ], [ %107, %110 ], [ %94, %112 ], [ %69, %81 ]
  %121 = bitcast %"class.std::__1::__tree_node_base"** %120 to %"class.std::__1::__tree_node.377"**
  %122 = load %"class.std::__1::__tree_node.377"*, %"class.std::__1::__tree_node.377"** %121, align 8
  %123 = icmp eq %"class.std::__1::__tree_node.377"* %122, null
  br i1 %123, label %124, label %147

124:                                              ; preds = %118
  %125 = call i8* @_Znwm(i64 72) #12, !noalias !3
  %126 = getelementptr inbounds i8, i8* %125, i64 32
  %127 = bitcast i8* %126 to i64*
  %128 = load i64, i64* %88, align 8, !noalias !3
  store i64 %128, i64* %127, align 8, !noalias !3
  %129 = getelementptr inbounds i8, i8* %125, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %129, i8 0, i64 32, i1 false) #11, !noalias !3
  %130 = bitcast i8* %125 to %"class.std::__1::__tree_node.377"*
  %131 = bitcast i8* %125 to %"class.std::__1::__tree_node_base"*
  %132 = getelementptr inbounds i8, i8* %125, i64 16
  %133 = bitcast i8* %132 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %125, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %133, align 8
  %134 = bitcast %"class.std::__1::__tree_node_base"** %120 to i8**
  store i8* %125, i8** %134, align 8
  %135 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %58, align 8
  %136 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %135, i64 0, i32 0
  %137 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %136, align 8
  %138 = icmp eq %"class.std::__1::__tree_node_base"* %137, null
  br i1 %138, label %142, label %139

139:                                              ; preds = %124
  %140 = ptrtoint %"class.std::__1::__tree_node_base"* %137 to i64
  store i64 %140, i64* %70, align 8
  %141 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %120, align 8
  br label %142

142:                                              ; preds = %139, %124
  %143 = phi %"class.std::__1::__tree_node_base"* [ %131, %124 ], [ %141, %139 ]
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %144, %"class.std::__1::__tree_node_base"* %143) #11
  %145 = load i64, i64* %60, align 8
  %146 = add i64 %145, 1
  store i64 %146, i64* %60, align 8
  br label %147

147:                                              ; preds = %118, %142
  %148 = phi %"class.std::__1::__tree_node.377"* [ %130, %142 ], [ %122, %118 ]
  %149 = getelementptr inbounds %"class.std::__1::__tree_node.377", %"class.std::__1::__tree_node.377"* %148, i64 0, i32 1, i32 0, i32 1
  %150 = bitcast %"struct.ukm::debug::(anonymous namespace)::SourceData"* %149 to i64*
  store i64 %87, i64* %150, align 8
  %151 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %83, i64 1, i32 0
  %152 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %151, align 8
  %153 = icmp eq %"class.std::__1::__tree_node_base"* %152, null
  br i1 %153, label %154, label %162

154:                                              ; preds = %147
  %155 = bitcast %"class.std::__1::__tree_end_node"* %83 to %"class.std::__1::__tree_node_base"*
  %156 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %83, i64 2
  %157 = bitcast %"class.std::__1::__tree_end_node"* %156 to %"class.std::__1::__tree_end_node"**
  %158 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %157, align 8
  %159 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %158, i64 0, i32 0
  %160 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %159, align 8
  %161 = icmp eq %"class.std::__1::__tree_node_base"* %160, %155
  br i1 %161, label %178, label %169

162:                                              ; preds = %147, %162
  %163 = phi %"class.std::__1::__tree_node_base"* [ %165, %162 ], [ %152, %147 ]
  %164 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 0, i32 0
  %165 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %164, align 8
  %166 = icmp eq %"class.std::__1::__tree_node_base"* %165, null
  br i1 %166, label %167, label %162

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 0
  br label %178

169:                                              ; preds = %154, %169
  %170 = phi %"class.std::__1::__tree_end_node"** [ %173, %169 ], [ %157, %154 ]
  %171 = bitcast %"class.std::__1::__tree_end_node"** %170 to %"class.std::__1::__tree_node_base"**
  %172 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %171, align 8
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %172, i64 0, i32 2
  %174 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %173, align 8
  %175 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %174, i64 0, i32 0
  %176 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %175, align 8
  %177 = icmp eq %"class.std::__1::__tree_node_base"* %176, %172
  br i1 %177, label %178, label %169

178:                                              ; preds = %169, %154, %167
  %179 = phi %"class.std::__1::__tree_end_node"* [ %168, %167 ], [ %158, %154 ], [ %174, %169 ]
  %180 = icmp eq %"class.std::__1::__tree_end_node"* %179, %65
  br i1 %180, label %71, label %181

181:                                              ; preds = %178
  %182 = load %"class.std::__1::__tree_node.377"*, %"class.std::__1::__tree_node.377"** %68, align 8
  br label %81

183:                                              ; preds = %357, %71
  %184 = bitcast %"class.base::ListValue"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %184) #11
  %185 = bitcast %"class.base::ListValue"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %185, i8 -86, i64 32, i1 false)
  call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %18) #11
  %186 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %58, align 8
  %187 = icmp eq %"class.std::__1::__tree_end_node"* %186, %61
  br i1 %187, label %360, label %188

188:                                              ; preds = %183
  %189 = bitcast %"class.base::DictionaryValue"* %19 to i8*
  %190 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %19, i64 0, i32 0
  %191 = bitcast %"class.base::Value"* %20 to i8*
  %192 = bitcast %"class.base::Value"* %21 to i8*
  %193 = bitcast %"class.base::Value"* %22 to i8*
  %194 = bitcast %"class.base::ListValue"* %23 to i8*
  %195 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %23, i64 0, i32 0
  %196 = bitcast %"class.base::Value"* %24 to i8*
  %197 = bitcast %"class.base::DictionaryValue"* %3 to i8*
  %198 = getelementptr inbounds %"class.ukm::UkmService", %"class.ukm::UkmService"* %1, i64 0, i32 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %199 = bitcast %"class.std::__1::__tree_end_node"* %198 to %"class.std::__1::__tree_node"**
  %200 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %3, i64 0, i32 0
  %201 = bitcast %"class.base::Value"* %5 to i8*
  %202 = bitcast %"class.base::ListValue"* %6 to i8*
  %203 = bitcast %"class.base::DictionaryValue"* %7 to i8*
  %204 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %7, i64 0, i32 0
  %205 = bitcast %"class.base::Value"* %8 to i8*
  %206 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %207 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %209 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %210 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %211 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %210, i64 0, i32 1, i32 0
  %212 = bitcast %"class.base::Value"* %10 to i8*
  %213 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %6, i64 0, i32 0
  %214 = bitcast %"class.base::Value"* %4 to i8*
  %215 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %18, i64 0, i32 0
  %216 = bitcast %"class.base::DictionaryValue"* %19 to i8*
  %217 = bitcast %"class.base::ListValue"* %23 to i8*
  br label %366

218:                                              ; preds = %77, %357
  %219 = phi %"class.mojo::StructPtr"* [ %73, %77 ], [ %358, %357 ]
  %220 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %219, i64 0, i32 0, i32 0, i32 0, i32 0
  %221 = load %"class.ukm::mojom::UkmEntry"*, %"class.ukm::mojom::UkmEntry"** %220, align 8
  %222 = getelementptr inbounds %"class.ukm::mojom::UkmEntry", %"class.ukm::mojom::UkmEntry"* %221, i64 0, i32 0
  %223 = load %"class.std::__1::__tree_node.377"*, %"class.std::__1::__tree_node.377"** %78, align 8
  %224 = icmp eq %"class.std::__1::__tree_node.377"* %223, null
  %225 = ptrtoint %"class.ukm::mojom::UkmEntry"* %221 to i64
  br i1 %224, label %254, label %226

226:                                              ; preds = %218
  %227 = load i64, i64* %222, align 8
  br label %228

228:                                              ; preds = %250, %226
  %229 = phi %"class.std::__1::__tree_node.377"* [ %253, %250 ], [ %223, %226 ]
  %230 = phi %"class.std::__1::__tree_node_base"** [ %252, %250 ], [ %59, %226 ]
  %231 = getelementptr inbounds %"class.std::__1::__tree_node.377", %"class.std::__1::__tree_node.377"* %229, i64 0, i32 1, i32 0, i32 0
  %232 = load i64, i64* %231, align 8
  %233 = icmp slt i64 %227, %232
  br i1 %233, label %234, label %240

234:                                              ; preds = %228
  %235 = getelementptr inbounds %"class.std::__1::__tree_node.377", %"class.std::__1::__tree_node.377"* %229, i64 0, i32 0, i32 0, i32 0
  %236 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %235, align 8
  %237 = icmp eq %"class.std::__1::__tree_node_base"* %236, null
  br i1 %237, label %238, label %250

238:                                              ; preds = %234
  %239 = getelementptr inbounds %"class.std::__1::__tree_node.377", %"class.std::__1::__tree_node.377"* %229, i64 0, i32 0, i32 0
  br label %254

240:                                              ; preds = %228
  %241 = icmp slt i64 %232, %227
  br i1 %241, label %242, label %248

242:                                              ; preds = %240
  %243 = getelementptr inbounds %"class.std::__1::__tree_node.377", %"class.std::__1::__tree_node.377"* %229, i64 0, i32 0, i32 1
  %244 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %243, align 8
  %245 = icmp eq %"class.std::__1::__tree_node_base"* %244, null
  br i1 %245, label %246, label %250

246:                                              ; preds = %242
  %247 = getelementptr inbounds %"class.std::__1::__tree_node.377", %"class.std::__1::__tree_node.377"* %229, i64 0, i32 0, i32 0
  br label %254

248:                                              ; preds = %240
  %249 = getelementptr inbounds %"class.std::__1::__tree_node.377", %"class.std::__1::__tree_node.377"* %229, i64 0, i32 0, i32 0
  br label %254

250:                                              ; preds = %242, %234
  %251 = phi %"class.std::__1::__tree_node_base"* [ %236, %234 ], [ %244, %242 ]
  %252 = phi %"class.std::__1::__tree_node_base"** [ %235, %234 ], [ %243, %242 ]
  %253 = bitcast %"class.std::__1::__tree_node_base"* %251 to %"class.std::__1::__tree_node.377"*
  br label %228

254:                                              ; preds = %218, %248, %246, %238
  %255 = phi %"class.std::__1::__tree_end_node"* [ %239, %238 ], [ %247, %246 ], [ %249, %248 ], [ %61, %218 ]
  %256 = phi %"class.std::__1::__tree_node_base"** [ %235, %238 ], [ %243, %246 ], [ %230, %248 ], [ %79, %218 ]
  %257 = bitcast %"class.std::__1::__tree_node_base"** %256 to %"class.std::__1::__tree_node.377"**
  %258 = load %"class.std::__1::__tree_node.377"*, %"class.std::__1::__tree_node.377"** %257, align 8
  %259 = icmp eq %"class.std::__1::__tree_node.377"* %258, null
  br i1 %259, label %260, label %285

260:                                              ; preds = %254
  %261 = call i8* @_Znwm(i64 72) #12, !noalias !6
  %262 = getelementptr inbounds i8, i8* %261, i64 32
  %263 = bitcast i8* %262 to i64*
  %264 = load i64, i64* %222, align 8, !noalias !6
  store i64 %264, i64* %263, align 8, !noalias !6
  %265 = getelementptr inbounds i8, i8* %261, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %265, i8 0, i64 32, i1 false) #11, !noalias !6
  %266 = bitcast i8* %261 to %"class.std::__1::__tree_node.377"*
  %267 = bitcast i8* %261 to %"class.std::__1::__tree_node_base"*
  %268 = getelementptr inbounds i8, i8* %261, i64 16
  %269 = bitcast i8* %268 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %261, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %255, %"class.std::__1::__tree_end_node"** %269, align 8
  %270 = bitcast %"class.std::__1::__tree_node_base"** %256 to i8**
  store i8* %261, i8** %270, align 8
  %271 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %58, align 8
  %272 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %271, i64 0, i32 0
  %273 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %272, align 8
  %274 = icmp eq %"class.std::__1::__tree_node_base"* %273, null
  br i1 %274, label %278, label %275

275:                                              ; preds = %260
  %276 = ptrtoint %"class.std::__1::__tree_node_base"* %273 to i64
  store i64 %276, i64* %80, align 8
  %277 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %256, align 8
  br label %278

278:                                              ; preds = %275, %260
  %279 = phi %"class.std::__1::__tree_node_base"* [ %267, %260 ], [ %277, %275 ]
  %280 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %280, %"class.std::__1::__tree_node_base"* %279) #11
  %281 = load i64, i64* %60, align 8
  %282 = add i64 %281, 1
  store i64 %282, i64* %60, align 8
  %283 = bitcast %"class.mojo::StructPtr"* %219 to i64*
  %284 = load i64, i64* %283, align 8
  br label %285

285:                                              ; preds = %254, %278
  %286 = phi i64 [ %284, %278 ], [ %225, %254 ]
  %287 = phi %"class.std::__1::__tree_node.377"* [ %266, %278 ], [ %258, %254 ]
  %288 = getelementptr inbounds %"class.std::__1::__tree_node.377", %"class.std::__1::__tree_node.377"* %287, i64 0, i32 1, i32 0, i32 1, i32 1
  %289 = getelementptr inbounds %"class.std::__1::__tree_node.377", %"class.std::__1::__tree_node.377"* %287, i64 0, i32 1, i32 0, i32 1, i32 1, i32 0, i32 1
  %290 = load %"class.ukm::mojom::UkmEntry"**, %"class.ukm::mojom::UkmEntry"*** %289, align 8
  %291 = getelementptr inbounds %"class.std::__1::__tree_node.377", %"class.std::__1::__tree_node.377"* %287, i64 0, i32 1, i32 0, i32 1, i32 1, i32 0, i32 2, i32 0, i32 0
  %292 = load %"class.ukm::mojom::UkmEntry"**, %"class.ukm::mojom::UkmEntry"*** %291, align 8
  %293 = icmp ult %"class.ukm::mojom::UkmEntry"** %290, %292
  %294 = ptrtoint %"class.ukm::mojom::UkmEntry"** %292 to i64
  br i1 %293, label %295, label %300

295:                                              ; preds = %285
  %296 = bitcast %"class.ukm::mojom::UkmEntry"** %290 to i64*
  store i64 %286, i64* %296, align 8
  %297 = getelementptr inbounds %"class.ukm::mojom::UkmEntry"*, %"class.ukm::mojom::UkmEntry"** %290, i64 1
  %298 = ptrtoint %"class.ukm::mojom::UkmEntry"** %297 to i64
  %299 = bitcast %"class.ukm::mojom::UkmEntry"*** %289 to i64*
  store i64 %298, i64* %299, align 8
  br label %357

300:                                              ; preds = %285
  %301 = ptrtoint %"class.ukm::mojom::UkmEntry"** %290 to i64
  %302 = bitcast %"class.ukm::mojom::UkmEntry"*** %289 to i64*
  %303 = bitcast %"class.std::__1::vector.336"* %288 to i64*
  %304 = load i64, i64* %303, align 8
  %305 = sub i64 %301, %304
  %306 = ashr exact i64 %305, 3
  %307 = add nsw i64 %306, 1
  %308 = icmp ugt i64 %307, 2305843009213693951
  br i1 %308, label %309, label %311

309:                                              ; preds = %300
  %310 = bitcast %"class.std::__1::vector.336"* %288 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %310) #13
  unreachable

311:                                              ; preds = %300
  %312 = bitcast %"class.ukm::mojom::UkmEntry"*** %291 to i64*
  %313 = sub i64 %294, %304
  %314 = ashr exact i64 %313, 3
  %315 = icmp ult i64 %314, 1152921504606846975
  br i1 %315, label %316, label %324

316:                                              ; preds = %311
  %317 = ashr exact i64 %313, 2
  %318 = icmp ult i64 %317, %307
  %319 = select i1 %318, i64 %307, i64 %317
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %329, label %321

321:                                              ; preds = %316
  %322 = icmp ugt i64 %319, 2305843009213693951
  br i1 %322, label %323, label %324

323:                                              ; preds = %321
  call void @abort() #13
  unreachable

324:                                              ; preds = %321, %311
  %325 = phi i64 [ %319, %321 ], [ 2305843009213693951, %311 ]
  %326 = shl i64 %325, 3
  %327 = call i8* @_Znwm(i64 %326) #12
  %328 = bitcast i8* %327 to %"class.ukm::mojom::UkmEntry"**
  br label %329

329:                                              ; preds = %324, %316
  %330 = phi i64 [ %325, %324 ], [ 0, %316 ]
  %331 = phi %"class.ukm::mojom::UkmEntry"** [ %328, %324 ], [ null, %316 ]
  %332 = getelementptr inbounds %"class.ukm::mojom::UkmEntry"*, %"class.ukm::mojom::UkmEntry"** %331, i64 %306
  %333 = getelementptr inbounds %"class.ukm::mojom::UkmEntry"*, %"class.ukm::mojom::UkmEntry"** %331, i64 %330
  %334 = ptrtoint %"class.ukm::mojom::UkmEntry"** %333 to i64
  %335 = bitcast %"class.ukm::mojom::UkmEntry"** %332 to i64*
  store i64 %286, i64* %335, align 8
  %336 = getelementptr inbounds %"class.ukm::mojom::UkmEntry"*, %"class.ukm::mojom::UkmEntry"** %332, i64 1
  %337 = ptrtoint %"class.ukm::mojom::UkmEntry"** %336 to i64
  %338 = getelementptr inbounds %"class.std::__1::vector.336", %"class.std::__1::vector.336"* %288, i64 0, i32 0, i32 0
  %339 = load %"class.ukm::mojom::UkmEntry"**, %"class.ukm::mojom::UkmEntry"*** %338, align 8
  %340 = load i64, i64* %302, align 8
  %341 = ptrtoint %"class.ukm::mojom::UkmEntry"** %339 to i64
  %342 = sub i64 %340, %341
  %343 = ashr exact i64 %342, 3
  %344 = sub nsw i64 0, %343
  %345 = getelementptr inbounds %"class.ukm::mojom::UkmEntry"*, %"class.ukm::mojom::UkmEntry"** %332, i64 %344
  %346 = ptrtoint %"class.ukm::mojom::UkmEntry"** %345 to i64
  %347 = icmp sgt i64 %342, 0
  br i1 %347, label %348, label %352

348:                                              ; preds = %329
  %349 = bitcast %"class.ukm::mojom::UkmEntry"** %345 to i8*
  %350 = bitcast %"class.ukm::mojom::UkmEntry"** %339 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %349, i8* align 8 %350, i64 %342, i1 false) #11
  %351 = load %"class.ukm::mojom::UkmEntry"**, %"class.ukm::mojom::UkmEntry"*** %338, align 8
  br label %352

352:                                              ; preds = %348, %329
  %353 = phi %"class.ukm::mojom::UkmEntry"** [ %339, %329 ], [ %351, %348 ]
  store i64 %346, i64* %303, align 8
  store i64 %337, i64* %302, align 8
  store i64 %334, i64* %312, align 8
  %354 = icmp eq %"class.ukm::mojom::UkmEntry"** %353, null
  br i1 %354, label %357, label %355

355:                                              ; preds = %352
  %356 = bitcast %"class.ukm::mojom::UkmEntry"** %353 to i8*
  call void @_ZdlPv(i8* %356) #12
  br label %357

357:                                              ; preds = %295, %352, %355
  %358 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %219, i64 1
  %359 = icmp eq %"class.mojo::StructPtr"* %358, %75
  br i1 %359, label %183, label %218

360:                                              ; preds = %437, %183
  %361 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %18, i64 0, i32 0
  %362 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %30, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %361) #11
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %0, %"class.base::Value"* nonnull dereferenceable(32) %30) #11
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %361) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %184) #11
  %363 = getelementptr inbounds %"class.std::__1::map.307", %"class.std::__1::map.307"* %17, i64 0, i32 0
  %364 = bitcast %"class.std::__1::__tree_end_node"* %61 to %"class.std::__1::__tree_node.377"**
  %365 = load %"class.std::__1::__tree_node.377"*, %"class.std::__1::__tree_node.377"** %364, align 8
  call fastcc void @_ZNSt3__16__treeINS_12__value_typeIlN3ukm5debug12_GLOBAL__N_110SourceDataEEENS_19__map_value_compareIlS6_NS_4lessIlEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.308"* nonnull %363, %"class.std::__1::__tree_node.377"* %365) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #11
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %30) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #11
  br label %552

366:                                              ; preds = %188, %437
  %367 = phi %"class.std::__1::__tree_end_node"* [ %186, %188 ], [ %438, %437 ]
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %367, i64 5
  %369 = bitcast %"class.std::__1::__tree_end_node"* %368 to %"class.ukm::UkmSource"**
  %370 = load %"class.ukm::UkmSource"*, %"class.ukm::UkmSource"** %369, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %189) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %216, i8 -86, i64 32, i1 false)
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %19) #11
  %371 = icmp eq %"class.ukm::UkmSource"* %370, null
  br i1 %371, label %393, label %372

372:                                              ; preds = %366
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %191) #11
  %373 = getelementptr inbounds %"class.ukm::UkmSource", %"class.ukm::UkmSource"* %370, i64 0, i32 0
  %374 = load i64, i64* %373, align 8
  call void @_ZN3ukm5debug21UkmDebugDataExtractor17UInt64AsPairOfIntEm(%"class.base::Value"* nonnull sret %20, i64 %374)
  %375 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %190, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %20) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %191) #11
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %192) #11
  %376 = getelementptr inbounds %"class.ukm::UkmSource", %"class.ukm::UkmSource"* %370, i64 0, i32 2, i32 0, i32 0, i32 1
  %377 = load %class.GURL*, %class.GURL** %376, align 8
  %378 = getelementptr inbounds %class.GURL, %class.GURL* %377, i64 -1
  %379 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* %378) #11
  %380 = bitcast %"class.std::__1::basic_string"* %379 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %381 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %380, i64 0, i32 1, i32 0
  %382 = load i8, i8* %381, align 1
  %383 = icmp slt i8 %382, 0
  %384 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %379, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %385 = load i8*, i8** %384, align 8
  %386 = bitcast %"class.std::__1::basic_string"* %379 to i8*
  %387 = select i1 %383, i8* %385, i8* %386
  %388 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %379, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %389 = load i64, i64* %388, align 8
  %390 = zext i8 %382 to i64
  %391 = select i1 %383, i64 %389, i64 %390
  call void @_ZN4base5ValueC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* nonnull %21, i8* %387, i64 %391) #11
  %392 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %190, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %21) #11
  br label %398

393:                                              ; preds = %366
  %394 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %367, i64 4
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %193) #11
  %395 = bitcast %"class.std::__1::__tree_end_node"* %394 to i64*
  %396 = load i64, i64* %395, align 8
  call void @_ZN3ukm5debug21UkmDebugDataExtractor17UInt64AsPairOfIntEm(%"class.base::Value"* nonnull sret %22, i64 %396)
  %397 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %190, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %22) #11
  br label %398

398:                                              ; preds = %393, %372
  %399 = phi %"class.base::Value"* [ %22, %393 ], [ %21, %372 ]
  %400 = phi i8* [ %193, %393 ], [ %192, %372 ]
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %399) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %400) #11
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %194) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %217, i8 -86, i64 32, i1 false)
  call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %23) #11
  %401 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %367, i64 6
  %402 = bitcast %"class.std::__1::__tree_end_node"* %401 to %"class.ukm::mojom::UkmEntry"***
  %403 = load %"class.ukm::mojom::UkmEntry"**, %"class.ukm::mojom::UkmEntry"*** %402, align 8
  %404 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %367, i64 7
  %405 = bitcast %"class.std::__1::__tree_end_node"* %404 to %"class.ukm::mojom::UkmEntry"***
  %406 = load %"class.ukm::mojom::UkmEntry"**, %"class.ukm::mojom::UkmEntry"*** %405, align 8
  %407 = icmp eq %"class.ukm::mojom::UkmEntry"** %403, %406
  br i1 %407, label %408, label %440

408:                                              ; preds = %548, %398
  %409 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %190, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %195) #11
  call void @_ZN4base5Value6AppendEOS0_(%"class.base::Value"* nonnull %215, %"class.base::Value"* nonnull dereferenceable(32) %190) #11
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %195) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %194) #11
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %190) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %189) #11
  %410 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %367, i64 1, i32 0
  %411 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %410, align 8
  %412 = icmp eq %"class.std::__1::__tree_node_base"* %411, null
  br i1 %412, label %413, label %421

413:                                              ; preds = %408
  %414 = bitcast %"class.std::__1::__tree_end_node"* %367 to %"class.std::__1::__tree_node_base"*
  %415 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %367, i64 2
  %416 = bitcast %"class.std::__1::__tree_end_node"* %415 to %"class.std::__1::__tree_end_node"**
  %417 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %416, align 8
  %418 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %417, i64 0, i32 0
  %419 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %418, align 8
  %420 = icmp eq %"class.std::__1::__tree_node_base"* %419, %414
  br i1 %420, label %437, label %428

421:                                              ; preds = %408, %421
  %422 = phi %"class.std::__1::__tree_node_base"* [ %424, %421 ], [ %411, %408 ]
  %423 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %422, i64 0, i32 0, i32 0
  %424 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %423, align 8
  %425 = icmp eq %"class.std::__1::__tree_node_base"* %424, null
  br i1 %425, label %426, label %421

426:                                              ; preds = %421
  %427 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %422, i64 0, i32 0
  br label %437

428:                                              ; preds = %413, %428
  %429 = phi %"class.std::__1::__tree_end_node"** [ %432, %428 ], [ %416, %413 ]
  %430 = bitcast %"class.std::__1::__tree_end_node"** %429 to %"class.std::__1::__tree_node_base"**
  %431 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %430, align 8
  %432 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %431, i64 0, i32 2
  %433 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %432, align 8
  %434 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %433, i64 0, i32 0
  %435 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %434, align 8
  %436 = icmp eq %"class.std::__1::__tree_node_base"* %435, %431
  br i1 %436, label %437, label %428

437:                                              ; preds = %428, %413, %426
  %438 = phi %"class.std::__1::__tree_end_node"* [ %427, %426 ], [ %417, %413 ], [ %433, %428 ]
  %439 = icmp eq %"class.std::__1::__tree_end_node"* %438, %61
  br i1 %439, label %360, label %366

440:                                              ; preds = %398, %548
  %441 = phi %"class.ukm::mojom::UkmEntry"** [ %550, %548 ], [ %403, %398 ]
  %442 = load %"class.ukm::mojom::UkmEntry"*, %"class.ukm::mojom::UkmEntry"** %441, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %196) #11
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %197) #11, !noalias !9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %197, i8 -86, i64 32, i1 false) #11, !noalias !9
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %3) #11, !noalias !9
  %443 = getelementptr inbounds %"class.ukm::mojom::UkmEntry", %"class.ukm::mojom::UkmEntry"* %442, i64 0, i32 1
  %444 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %199, align 8, !noalias !9
  %445 = icmp eq %"class.std::__1::__tree_node"* %444, null
  %446 = load i64, i64* %443, align 8, !noalias !9
  br i1 %445, label %468, label %447

447:                                              ; preds = %440, %447
  %448 = phi %"class.std::__1::__tree_end_node"* [ %458, %447 ], [ %198, %440 ]
  %449 = phi %"class.std::__1::__tree_node"* [ %459, %447 ], [ %444, %440 ]
  %450 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %449, i64 0, i32 1, i32 0, i32 0
  %451 = load i64, i64* %450, align 8
  %452 = icmp ult i64 %451, %446
  %453 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %449, i64 0, i32 0, i32 1
  %454 = bitcast %"class.std::__1::__tree_node_base"** %453 to %"class.std::__1::__tree_node"**
  %455 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %449, i64 0, i32 0, i32 0
  %456 = bitcast %"class.std::__1::__tree_node"* %449 to %"class.std::__1::__tree_node"**
  %457 = select i1 %452, %"class.std::__1::__tree_node"** %454, %"class.std::__1::__tree_node"** %456
  %458 = select i1 %452, %"class.std::__1::__tree_end_node"* %448, %"class.std::__1::__tree_end_node"* %455
  %459 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %457, align 8
  %460 = icmp eq %"class.std::__1::__tree_node"* %459, null
  br i1 %460, label %461, label %447

461:                                              ; preds = %447
  %462 = icmp eq %"class.std::__1::__tree_end_node"* %458, %198
  br i1 %462, label %468, label %463

463:                                              ; preds = %461
  %464 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %458, i64 4
  %465 = bitcast %"class.std::__1::__tree_end_node"* %464 to i64*
  %466 = load i64, i64* %465, align 8
  %467 = icmp ult i64 %446, %466
  br i1 %467, label %468, label %470

468:                                              ; preds = %463, %461, %440
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %214) #11, !noalias !9
  call void @_ZN3ukm5debug21UkmDebugDataExtractor17UInt64AsPairOfIntEm(%"class.base::Value"* nonnull sret %4, i64 %446) #11
  %469 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %200, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %4) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %4) #11
  br label %548

470:                                              ; preds = %463
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %201) #11, !noalias !9
  %471 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %458, i64 5
  %472 = bitcast %"class.std::__1::__tree_end_node"* %471 to i8**
  %473 = load i8*, i8** %472, align 8
  call void @_ZN4base5ValueC1EPKc(%"class.base::Value"* nonnull %5, i8* %473) #11
  %474 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %200, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %5) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %201) #11, !noalias !9
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %202) #11, !noalias !9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %202, i8 -86, i64 32, i1 false) #11, !noalias !9
  call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %6) #11
  %475 = getelementptr inbounds %"class.ukm::mojom::UkmEntry", %"class.ukm::mojom::UkmEntry"* %442, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %476 = load %"struct.std::__1::pair.87"*, %"struct.std::__1::pair.87"** %475, align 8, !noalias !9
  %477 = getelementptr inbounds %"class.ukm::mojom::UkmEntry", %"class.ukm::mojom::UkmEntry"* %442, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %478 = load %"struct.std::__1::pair.87"*, %"struct.std::__1::pair.87"** %477, align 8, !noalias !9
  %479 = icmp eq %"struct.std::__1::pair.87"* %476, %478
  br i1 %479, label %483, label %480

480:                                              ; preds = %470
  %481 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %458, i64 7
  %482 = bitcast %"class.std::__1::__tree_end_node"* %481 to %"class.std::__1::__tree_node.373"**
  br label %485

483:                                              ; preds = %542, %470
  %484 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %200, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %213) #11
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %213) #11
  br label %548

485:                                              ; preds = %542, %480
  %486 = phi %"struct.std::__1::pair.87"* [ %476, %480 ], [ %546, %542 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %203) #11, !noalias !9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %203, i8 -86, i64 32, i1 false) #11, !noalias !9
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %7) #11
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %205) #11, !noalias !9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %206) #11, !noalias !9
  %487 = getelementptr inbounds %"struct.std::__1::pair.87", %"struct.std::__1::pair.87"* %486, i64 0, i32 0
  %488 = load i64, i64* %487, align 8
  %489 = load %"class.std::__1::__tree_node.373"*, %"class.std::__1::__tree_node.373"** %482, align 8, !noalias !12
  %490 = icmp eq %"class.std::__1::__tree_node.373"* %489, null
  br i1 %490, label %512, label %491

491:                                              ; preds = %485, %491
  %492 = phi %"class.std::__1::__tree_end_node"* [ %502, %491 ], [ %481, %485 ]
  %493 = phi %"class.std::__1::__tree_node.373"* [ %503, %491 ], [ %489, %485 ]
  %494 = getelementptr inbounds %"class.std::__1::__tree_node.373", %"class.std::__1::__tree_node.373"* %493, i64 0, i32 1, i32 0, i32 0
  %495 = load i64, i64* %494, align 8
  %496 = icmp ult i64 %495, %488
  %497 = getelementptr inbounds %"class.std::__1::__tree_node.373", %"class.std::__1::__tree_node.373"* %493, i64 0, i32 0, i32 1
  %498 = bitcast %"class.std::__1::__tree_node_base"** %497 to %"class.std::__1::__tree_node.373"**
  %499 = getelementptr inbounds %"class.std::__1::__tree_node.373", %"class.std::__1::__tree_node.373"* %493, i64 0, i32 0, i32 0
  %500 = bitcast %"class.std::__1::__tree_node.373"* %493 to %"class.std::__1::__tree_node.373"**
  %501 = select i1 %496, %"class.std::__1::__tree_node.373"** %498, %"class.std::__1::__tree_node.373"** %500
  %502 = select i1 %496, %"class.std::__1::__tree_end_node"* %492, %"class.std::__1::__tree_end_node"* %499
  %503 = load %"class.std::__1::__tree_node.373"*, %"class.std::__1::__tree_node.373"** %501, align 8
  %504 = icmp eq %"class.std::__1::__tree_node.373"* %503, null
  br i1 %504, label %505, label %491

505:                                              ; preds = %491
  %506 = icmp eq %"class.std::__1::__tree_end_node"* %502, %481
  br i1 %506, label %512, label %507

507:                                              ; preds = %505
  %508 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %502, i64 4
  %509 = bitcast %"class.std::__1::__tree_end_node"* %508 to i64*
  %510 = load i64, i64* %509, align 8
  %511 = icmp ugt i64 %510, %488
  br i1 %511, label %512, label %513

512:                                              ; preds = %507, %505, %485
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %9, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i64 0, i64 0), i64 %488) #11
  br label %536

513:                                              ; preds = %507
  %514 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %502, i64 5
  %515 = bitcast %"class.std::__1::__tree_end_node"* %514 to i8**
  %516 = load i8*, i8** %515, align 8
  %517 = call i64 @strlen(i8* %516) #11
  %518 = icmp ugt i64 %517, -17
  br i1 %518, label %519, label %521

519:                                              ; preds = %513
  %520 = bitcast %"class.std::__1::basic_string"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %520) #13
  unreachable

521:                                              ; preds = %513
  %522 = icmp ult i64 %517, 23
  br i1 %522, label %528, label %523

523:                                              ; preds = %521
  %524 = add nuw i64 %517, 16
  %525 = and i64 %524, -16
  %526 = call i8* @_Znwm(i64 %525) #12
  store i8* %526, i8** %207, align 8, !alias.scope !12, !noalias !9
  %527 = or i64 %525, -9223372036854775808
  store i64 %527, i64* %208, align 8, !alias.scope !12, !noalias !9
  store i64 %517, i64* %209, align 8, !alias.scope !12, !noalias !9
  br label %531

528:                                              ; preds = %521
  %529 = trunc i64 %517 to i8
  store i8 %529, i8* %211, align 1, !alias.scope !12, !noalias !9
  %530 = icmp eq i64 %517, 0
  br i1 %530, label %533, label %531

531:                                              ; preds = %528, %523
  %532 = phi i8* [ %526, %523 ], [ %206, %528 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %532, i8* align 1 %516, i64 %517, i1 false) #11
  br label %533

533:                                              ; preds = %531, %528
  %534 = phi i8* [ %206, %528 ], [ %532, %531 ]
  %535 = getelementptr inbounds i8, i8* %534, i64 %517
  store i8 0, i8* %535, align 1, !noalias !9
  br label %536

536:                                              ; preds = %533, %512
  call void @_ZN4base5ValueC1EONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"* nonnull %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9) #11
  %537 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %204, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %8) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %8) #11
  %538 = load i8, i8* %211, align 1, !noalias !9
  %539 = icmp slt i8 %538, 0
  br i1 %539, label %540, label %542

540:                                              ; preds = %536
  %541 = load i8*, i8** %207, align 8, !noalias !9
  call void @_ZdlPv(i8* %541) #12
  br label %542

542:                                              ; preds = %540, %536
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %206) #11, !noalias !9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %205) #11, !noalias !9
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %212) #11, !noalias !9
  %543 = getelementptr inbounds %"struct.std::__1::pair.87", %"struct.std::__1::pair.87"* %486, i64 0, i32 1
  %544 = load i64, i64* %543, align 8
  call void @_ZN3ukm5debug21UkmDebugDataExtractor17UInt64AsPairOfIntEm(%"class.base::Value"* nonnull sret %10, i64 %544) #11
  %545 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %204, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %10) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %212) #11, !noalias !9
  call void @_ZN4base5Value6AppendEOS0_(%"class.base::Value"* nonnull %213, %"class.base::Value"* nonnull dereferenceable(32) %204) #11
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %204) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %203) #11, !noalias !9
  %546 = getelementptr inbounds %"struct.std::__1::pair.87", %"struct.std::__1::pair.87"* %486, i64 1
  %547 = icmp eq %"struct.std::__1::pair.87"* %546, %478
  br i1 %547, label %483, label %485

548:                                              ; preds = %468, %483
  %549 = phi i8* [ %214, %468 ], [ %202, %483 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %549) #11, !noalias !9
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* nonnull %24, %"class.base::Value"* nonnull dereferenceable(32) %200) #11
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %200) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %197) #11, !noalias !9
  call void @_ZN4base5Value6AppendEOS0_(%"class.base::Value"* nonnull %195, %"class.base::Value"* nonnull dereferenceable(32) %24) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %24) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %196) #11
  %550 = getelementptr inbounds %"class.ukm::mojom::UkmEntry"*, %"class.ukm::mojom::UkmEntry"** %441, i64 1
  %551 = icmp eq %"class.ukm::mojom::UkmEntry"** %550, %406
  br i1 %551, label %408, label %440

552:                                              ; preds = %360, %26
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1Ev(%"class.base::Value"*) unnamed_addr #4

declare void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"*) unnamed_addr #3

declare %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"*, i8*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #3

declare void @_ZN4base5ValueC1Eb(%"class.base::Value"*, i1 zeroext) unnamed_addr #3

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1EONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #4

declare zeroext i1 @_ZNK3ukm15UkmRecorderImpl17IsSamplingEnabledEv(%"class.ukm::UkmRecorderImpl"*) local_unnamed_addr #3

declare void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"*) unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL*) local_unnamed_addr #3

declare void @_ZN4base5ValueC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) unnamed_addr #3

declare void @_ZN4base5Value6AppendEOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1EOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) unnamed_addr #4

declare void @_ZN4base5ValueC1EPKc(%"class.base::Value"*, i8*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base5ValueENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.20"*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.base::Value"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.20"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.20"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.base::Value"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.base::Value"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.base::Value"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %36, i64 %9
  %38 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %36, i64 %35
  %39 = ptrtoint %"class.base::Value"* %38 to i64
  tail call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %37, %"class.base::Value"* dereferenceable(32) %1) #11
  %40 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %37, i64 1
  %41 = ptrtoint %"class.base::Value"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 0
  %43 = load %"class.base::Value"*, %"class.base::Value"** %42, align 8
  %44 = load %"class.base::Value"*, %"class.base::Value"** %3, align 8
  %45 = icmp eq %"class.base::Value"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"class.base::Value"* %43 to i64
  br label %57

48:                                               ; preds = %34, %48
  %49 = phi %"class.base::Value"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"class.base::Value"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %49, i64 -1
  %52 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %50, i64 -1
  tail call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %51, %"class.base::Value"* dereferenceable(32) %52) #11
  %53 = icmp eq %"class.base::Value"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  %56 = load %"class.base::Value"*, %"class.base::Value"** %3, align 8
  br label %57

57:                                               ; preds = %46, %54
  %58 = phi %"class.base::Value"* [ %43, %46 ], [ %56, %54 ]
  %59 = phi %"class.base::Value"* [ %37, %46 ], [ %51, %54 ]
  %60 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %61 = ptrtoint %"class.base::Value"* %59 to i64
  store i64 %61, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %62 = inttoptr i64 %60 to %"class.base::Value"*
  %63 = icmp eq %"class.base::Value"* %58, %62
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %64
  %65 = phi %"class.base::Value"* [ %66, %64 ], [ %58, %57 ]
  %66 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %65, i64 -1
  tail call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %66) #11
  %67 = icmp eq %"class.base::Value"* %66, %62
  br i1 %67, label %68, label %64

68:                                               ; preds = %64, %57
  %69 = icmp eq i64 %60, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %60 to i8*
  tail call void @_ZdlPv(i8* %71) #12
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__16__treeINS_12__value_typeIlN3ukm5debug12_GLOBAL__N_110SourceDataEEENS_19__map_value_compareIlS6_NS_4lessIlEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.308"* readnone, %"class.std::__1::__tree_node.377"*) unnamed_addr #1 align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.377"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.377"* %1 to %"class.std::__1::__tree_node.377"**
  %6 = load %"class.std::__1::__tree_node.377"*, %"class.std::__1::__tree_node.377"** %5, align 8
  tail call fastcc void @_ZNSt3__16__treeINS_12__value_typeIlN3ukm5debug12_GLOBAL__N_110SourceDataEEENS_19__map_value_compareIlS6_NS_4lessIlEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.308"* %0, %"class.std::__1::__tree_node.377"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.377", %"class.std::__1::__tree_node.377"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.377"**
  %9 = load %"class.std::__1::__tree_node.377"*, %"class.std::__1::__tree_node.377"** %8, align 8
  tail call fastcc void @_ZNSt3__16__treeINS_12__value_typeIlN3ukm5debug12_GLOBAL__N_110SourceDataEEENS_19__map_value_compareIlS6_NS_4lessIlEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.308"* %0, %"class.std::__1::__tree_node.377"* %9) #11
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.377", %"class.std::__1::__tree_node.377"* %1, i64 0, i32 1, i32 0, i32 1, i32 1, i32 0, i32 0
  %11 = load %"class.ukm::mojom::UkmEntry"**, %"class.ukm::mojom::UkmEntry"*** %10, align 8
  %12 = icmp eq %"class.ukm::mojom::UkmEntry"** %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %4
  %14 = ptrtoint %"class.ukm::mojom::UkmEntry"** %11 to i64
  %15 = getelementptr inbounds %"class.std::__1::__tree_node.377", %"class.std::__1::__tree_node.377"* %1, i64 0, i32 1, i32 0, i32 1, i32 1, i32 0, i32 1
  %16 = bitcast %"class.ukm::mojom::UkmEntry"*** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"class.ukm::mojom::UkmEntry"** %11 to i8*
  tail call void @_ZdlPv(i8* %17) #12
  br label %18

18:                                               ; preds = %4, %13
  %19 = bitcast %"class.std::__1::__tree_node.377"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #1 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__16__treeINS_12__value_typeIlN3ukm5debug12_GLOBAL__N_110SourceDataEEENS_19__map_value_compareIlS6_NS_4lessIlEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKlEEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__16__treeINS_12__value_typeIlN3ukm5debug12_GLOBAL__N_110SourceDataEEENS_19__map_value_compareIlS6_NS_4lessIlEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKlEEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__16__treeINS_12__value_typeIlN3ukm5debug12_GLOBAL__N_110SourceDataEEENS_19__map_value_compareIlS6_NS_4lessIlEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKlEEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__16__treeINS_12__value_typeIlN3ukm5debug12_GLOBAL__N_110SourceDataEEENS_19__map_value_compareIlS6_NS_4lessIlEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKlEEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN3ukm5debug12_GLOBAL__N_119ConvertEntryToValueERKNSt3__13mapImNS_8builders12EntryDecoderENS2_4lessImEENS2_9allocatorINS2_4pairIKmS5_EEEEEERKNS_5mojom8UkmEntryE: argument 0"}
!11 = distinct !{!11, !"_ZN3ukm5debug12_GLOBAL__N_119ConvertEntryToValueERKNSt3__13mapImNS_8builders12EntryDecoderENS2_4lessImEENS2_9allocatorINS2_4pairIKmS5_EEEEEERKNS_5mojom8UkmEntryE"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN3ukm5debug12_GLOBAL__N_17GetNameERKNS_8builders12EntryDecoderEm: argument 0"}
!14 = distinct !{!14, !"_ZN3ukm5debug12_GLOBAL__N_17GetNameERKNS_8builders12EntryDecoderEm"}
