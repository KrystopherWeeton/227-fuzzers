; ModuleID = '../../third_party/swiftshader/src/OpenGL/libGLESv2/VertexDataManager.cpp'
source_filename = "../../third_party/swiftshader/src/OpenGL/libGLESv2/VertexDataManager.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.es2::VertexDataManager" = type { i32 (...)**, %"class.es2::Context"*, %"class.es2::StreamingVertexBuffer"*, [32 x i8], [32 x %"class.es2::ConstantVertexBuffer"*] }
%"class.es2::StreamingVertexBuffer" = type <{ %"class.es2::VertexBuffer", i32, i32, i32, [4 x i8] }>
%"class.es2::VertexBuffer" = type { i32 (...)**, %"class.sw::Resource"* }
%"class.sw::Resource" = type { i64, %"class.sw::MutexLock", %"class.sw::Event", i32, i32, i32, i8, i8* }
%"class.sw::MutexLock" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.sw::Event" = type <{ %union.pthread_cond_t, %union.pthread_mutex_t, i8, [7 x i8] }>
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.0, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.0 = type { i64 }
%"class.es2::ConstantVertexBuffer" = type { %"class.es2::VertexBuffer" }
%"class.es2::Context" = type { %"class.egl::Context", %"class.egl::Config"*, %"struct.es2::State", %"class.gl::BindingPointer.7", %"class.gl::BindingPointer.8", %"class.gl::BindingPointer.9", %"class.gl::BindingPointer.10", %"class.gl::BindingPointer.11", %"class.gl::BindingPointer.12", %"class.gl::NameSpace", %"class.gl::NameSpace.17", %"class.gl::NameSpace.28", %"class.gl::NameSpace.39", %"class.gl::NameSpace.50", %"class.es2::VertexDataManager"*, %"class.es2::IndexDataManager"*, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.es2::Device"*, %"class.es2::ResourceManager"* }
%"class.egl::Context" = type { %"class.gl::Object.base", %"class.egl::Display"* }
%"class.gl::Object.base" = type <{ i32 (...)**, i32 }>
%"class.egl::Display" = type opaque
%"class.egl::Config" = type opaque
%"struct.es2::State" = type { %"struct.es2::Color", float, i32, i8, i32, i32, i8, i32, i8, i32, i32, i32, i32, i32, i32, %"struct.es2::Color", i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, float, float, i8, i8, float, i8, i8, i8, i8, i8, i8, i32, float, i32, i32, i32, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32, %"class.gl::BindingPointer", %"class.gl::BindingPointer", %"class.gl::BindingPointer", %"class.gl::BindingPointer", %"class.gl::BindingPointer", %"class.gl::BindingPointer", %"class.gl::BindingPointer", [24 x %"class.es2::BufferBinding"], i32, i32, %"class.gl::BindingPointer.2", i32, i32, i32, [32 x %"class.gl::BindingPointer.3"], [32 x %"class.es2::VertexAttribute"], [6 x [32 x %"class.gl::BindingPointer.5"]], [3 x %"class.gl::BindingPointer.6"], %"struct.gl::PixelStorageModes", %"struct.gl::PixelStorageModes" }
%"struct.es2::Color" = type { float, float, float, float }
%"class.gl::BindingPointer" = type { %"class.es2::Buffer"* }
%"class.es2::Buffer" = type <{ %"class.gl::NamedObject", %"class.sw::Resource"*, i64, i32, i8, [3 x i8], i64, i64, i32, [4 x i8] }>
%"class.gl::NamedObject" = type { %"class.gl::Object.base", i32 }
%"class.es2::BufferBinding" = type { %"class.gl::BindingPointer", i32, i32 }
%"class.gl::BindingPointer.2" = type { %"class.es2::Renderbuffer"* }
%"class.es2::Renderbuffer" = type opaque
%"class.gl::BindingPointer.3" = type { %"class.es2::Sampler"* }
%"class.es2::Sampler" = type opaque
%"class.es2::VertexAttribute" = type { i32, i32, i8, i8, i32, i32, %union.anon.4, %"class.gl::BindingPointer", i8, [4 x %"union.es2::VertexAttribute::ValueUnion"], i32 }
%union.anon.4 = type { i8* }
%"union.es2::VertexAttribute::ValueUnion" = type { float }
%"class.gl::BindingPointer.5" = type { %"class.es2::Texture"* }
%"class.es2::Texture" = type opaque
%"class.gl::BindingPointer.6" = type { %"class.es2::Query"* }
%"class.es2::Query" = type opaque
%"struct.gl::PixelStorageModes" = type { i32, i32, i32, i32, i32, i32 }
%"class.gl::BindingPointer.7" = type { %"class.es2::Texture2D"* }
%"class.es2::Texture2D" = type opaque
%"class.gl::BindingPointer.8" = type { %"class.es2::Texture3D"* }
%"class.es2::Texture3D" = type opaque
%"class.gl::BindingPointer.9" = type { %"class.es2::Texture2DArray"* }
%"class.es2::Texture2DArray" = type opaque
%"class.gl::BindingPointer.10" = type { %"class.es2::TextureCubeMap"* }
%"class.es2::TextureCubeMap" = type opaque
%"class.gl::BindingPointer.11" = type { %"class.es2::Texture2DRect"* }
%"class.es2::Texture2DRect" = type opaque
%"class.gl::BindingPointer.12" = type { %"class.es2::TextureExternal"* }
%"class.es2::TextureExternal" = type opaque
%"class.gl::NameSpace" = type <{ %"class.std::__1::map", i32, [4 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i64 }
%"class.gl::NameSpace.17" = type <{ %"class.std::__1::map.18", i32, [4 x i8] }>
%"class.std::__1::map.18" = type { %"class.std::__1::__tree.19" }
%"class.std::__1::__tree.19" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.20", %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.gl::NameSpace.28" = type <{ %"class.std::__1::map.29", i32, [4 x i8] }>
%"class.std::__1::map.29" = type { %"class.std::__1::__tree.30" }
%"class.std::__1::__tree.30" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.gl::NameSpace.39" = type <{ %"class.std::__1::map.40", i32, [4 x i8] }>
%"class.std::__1::map.40" = type { %"class.std::__1::__tree.41" }
%"class.std::__1::__tree.41" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.gl::NameSpace.50" = type <{ %"class.std::__1::map.51", i32, [4 x i8] }>
%"class.std::__1::map.51" = type { %"class.std::__1::__tree.52" }
%"class.std::__1::__tree.52" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.53", %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.es2::IndexDataManager" = type { i32 (...)**, %"class.es2::StreamingIndexBuffer"* }
%"class.es2::StreamingIndexBuffer" = type { i32 (...)**, %"class.sw::Resource"*, i64, i64 }
%"class.es2::Device" = type { %"class.sw::Renderer", %"class.sw::Context"*, %"struct.es2::Viewport", %"struct.sw::RectT", i8, %"class.sw::PixelShader"*, %"class.sw::VertexShader"*, i8, i32, i8, i32, [264 x [4 x float]], [259 x [4 x float]], [8 x %"class.egl::Image"*], %"class.egl::Image"*, %"class.egl::Image"*, [8 x i8] }
%"class.sw::Renderer" = type { %"class.sw::VertexProcessor.base", [15 x i8], %"class.sw::PixelProcessor", %"class.sw::SetupProcessor", %"class.sw::Context"*, %"class.sw::Clipper"*, %"class.sw::Blitter"*, %"struct.sw::Viewport", %"struct.sw::RectT", i32, [16 x %"struct.sw::Triangle"*], [16 x %"struct.sw::Primitive"*], [6 x %"struct.sw::Plane"], [6 x %"struct.sw::Plane"], i8, %"class.sw::AtomicInt", %"class.sw::AtomicInt", [16 x %"class.sw::Thread"*], [16 x %"class.sw::Event"*], [16 x %"class.sw::Event"*], %"class.sw::Event"*, [16 x %"struct.sw::Renderer::PrimitiveProgress"], [16 x %"struct.sw::Renderer::PixelProgress"], [16 x %"struct.sw::Renderer::Task"], [16 x %"struct.sw::DrawCall"*], [16 x %"struct.sw::DrawCall"*], %"class.sw::AtomicInt", %"class.sw::AtomicInt", [32 x %"struct.sw::Renderer::Task"], %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"class.sw::MutexLock", [16 x %"struct.sw::VertexTask"*], %"class.sw::SwiftConfig"*, %"class.std::__1::list", %"class.sw::Resource"*, %"struct.sw::VertexProcessor::State", %"struct.sw::SetupProcessor::State", %"struct.sw::PixelProcessor::State", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr" }
%"class.sw::VertexProcessor.base" = type <{ i32 (...)**, [8 x i8], [260 x %"struct.sw::float4"], [16 x %"struct.sw::int4"], [16 x i8], %"struct.sw::VertexProcessor::PointSprite", %"struct.sw::VertexProcessor::FixedFunction", [24 x %"struct.sw::VertexProcessor::UniformBufferInfo"], [64 x %"struct.sw::VertexProcessor::TransformFeedbackInfo"], %"class.sw::Context"*, %"class.sw::LRUCache"*, [12 x %"struct.sw::Matrix"], %"struct.sw::Matrix", %"struct.sw::Matrix", %"struct.sw::Matrix", %"struct.sw::Matrix", %"struct.sw::Matrix", [12 x %"struct.sw::Matrix"], i8, [12 x i8], i8, i8, i8, i8 }>
%"struct.sw::float4" = type { float, float, float, float }
%"struct.sw::int4" = type { i32, i32, i32, i32 }
%"struct.sw::VertexProcessor::PointSprite" = type { %"struct.sw::float4", float, float, float, float, float, [12 x i8] }
%"struct.sw::VertexProcessor::FixedFunction" = type { [12 x [4 x %"struct.sw::float4"]], [12 x [4 x %"struct.sw::float4"]], [12 x [4 x %"struct.sw::float4"]], [8 x [4 x %"struct.sw::float4"]], [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"], [8 x %"struct.sw::float4"], [8 x float], %"struct.sw::float4", %"struct.sw::float4", float, [12 x i8], %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4" }
%"struct.sw::VertexProcessor::UniformBufferInfo" = type <{ %"class.sw::Resource"*, i32, [4 x i8] }>
%"struct.sw::VertexProcessor::TransformFeedbackInfo" = type <{ %"class.sw::Resource"*, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.sw::LRUCache" = type opaque
%"struct.sw::Matrix" = type { [4 x [4 x float]] }
%"class.sw::PixelProcessor" = type { i32 (...)**, [8 x [4 x [4 x i16]]], [8 x i8], [264 x %"struct.sw::float4"], [16 x %"struct.sw::int4"], [16 x i8], %"struct.sw::PixelProcessor::Stencil", %"struct.sw::PixelProcessor::Stencil", %"struct.sw::PixelProcessor::Fog", %"struct.sw::PixelProcessor::Factor", [24 x %"struct.sw::PixelProcessor::UniformBufferInfo"], %"class.sw::Context"*, %"class.sw::LRUCache.80"* }
%"struct.sw::PixelProcessor::Stencil" = type { i64, i64, i64, i64, i64, i64 }
%"struct.sw::PixelProcessor::Fog" = type { %"struct.sw::float4", %"struct.sw::float4", [3 x [4 x i16]], [8 x i8], [3 x %"struct.sw::float4"], %"struct.sw::float4", %"struct.sw::float4" }
%"struct.sw::PixelProcessor::Factor" = type { [4 x [4 x i16]], [4 x i16], [4 x [4 x i16]], [8 x i8], [4 x %"struct.sw::float4"], [4 x [4 x i16]], [4 x %"struct.sw::float4"] }
%"struct.sw::PixelProcessor::UniformBufferInfo" = type <{ %"class.sw::Resource"*, i32, [4 x i8] }>
%"class.sw::LRUCache.80" = type opaque
%"class.sw::SetupProcessor" = type { %"class.sw::Context"*, %"class.sw::LRUCache.81"* }
%"class.sw::LRUCache.81" = type opaque
%"class.sw::Clipper" = type opaque
%"class.sw::Blitter" = type { i32 (...)**, %"class.sw::LRUCache.82"*, %"class.sw::MutexLock" }
%"class.sw::LRUCache.82" = type opaque
%"struct.sw::Viewport" = type { float, float, float, float, float, float }
%"struct.sw::Triangle" = type opaque
%"struct.sw::Primitive" = type opaque
%"struct.sw::Plane" = type { float, float, float, float }
%"class.sw::Thread" = type <{ i64, i8, [7 x i8] }>
%"struct.sw::Renderer::PrimitiveProgress" = type { %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"class.sw::AtomicInt" }
%"struct.sw::Renderer::PixelProgress" = type { %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"class.sw::AtomicInt" }
%"struct.sw::Renderer::Task" = type { %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"class.sw::AtomicInt" }
%"struct.sw::DrawCall" = type { %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr", void (%"struct.sw::Vertex"*, i32*, %"struct.sw::VertexTask"*, %"struct.sw::DrawData"*)*, i1 (%"struct.sw::Primitive"*, %"struct.sw::Triangle"*, %"struct.sw::Polygon"*, %"struct.sw::DrawData"*)*, void (%"struct.sw::Primitive"*, i32, i32, %"struct.sw::DrawData"*)*, { i64, i64 }, %"struct.sw::SetupProcessor::State", [32 x %"class.sw::Resource"*], %"class.sw::Resource"*, [8 x %"class.sw::Surface"*], %"class.sw::Surface"*, %"class.sw::Surface"*, [32 x %"class.sw::Resource"*], [24 x %"class.sw::Resource"*], [24 x %"class.sw::Resource"*], [64 x %"class.sw::Resource"*], i32, i32, i32, i32, i32, i32, %"class.std::__1::list"*, %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"class.sw::AtomicInt", %"struct.sw::DrawData"* }
%"struct.sw::Vertex" = type { %union.anon.83, i32, i32, float, float, i32, [3 x i32] }
%union.anon.83 = type { [34 x %"struct.sw::float4"] }
%"struct.sw::VertexTask" = type { i32, i32, [8 x i8], %"struct.sw::VertexCache" }
%"struct.sw::VertexCache" = type { [16 x [4 x %"struct.sw::Vertex"]], [16 x i32], i32, [12 x i8] }
%"struct.sw::Polygon" = type opaque
%"class.sw::Surface" = type <{ i32 (...)**, %"class.sw::Resource"*, %"struct.sw::Surface::Buffer", %"struct.sw::Surface::Buffer", %"struct.sw::Surface::Buffer", i8, i8, i8, i8, i32, i8, i8, [6 x i8] }>
%"struct.sw::Surface::Buffer" = type <{ i8*, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, %"class.sw::AtomicInt", i8, [3 x i8] }>
%"struct.sw::DrawData" = type { %"struct.sw::Constants"*, [32 x i8*], [32 x i32], [8 x i8], [32 x %"struct.sw::Texture"], i8*, [8 x i8], %union.anon.85, %"struct.sw::DrawData::PS", i32, [12 x i8], %"struct.sw::VertexProcessor::PointSprite", float, [2 x %"struct.sw::PixelProcessor::Stencil"], [8 x i8], %"struct.sw::PixelProcessor::Fog", %"struct.sw::PixelProcessor::Factor", [16 x i32], [8 x %"struct.sw::TextureStage::Uniforms"], %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", float, float, float, float, [6 x %"struct.sw::Plane"], [8 x i32*], [8 x i32], [8 x i32], float*, i32, i32, i8*, i32, i32, i32, i32, i32, i32, %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4" }
%"struct.sw::Constants" = type opaque
%"struct.sw::Texture" = type { [14 x %"struct.sw::Mipmap"], float, [12 x i8], %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", [4 x [4 x i16]], [4 x %"struct.sw::float4"], float, i32, i32, float, float, [12 x i8] }
%"struct.sw::Mipmap" = type { [6 x i8*], %"struct.sw::float4", %"struct.sw::float4", %"struct.sw::float4", [4 x i16], [4 x i16], [4 x i16], [4 x i16], [4 x i16], [4 x i16], [4 x i16], [8 x i8], %"struct.sw::int4", %"struct.sw::int4" }
%union.anon.85 = type { %"struct.sw::DrawData::VS" }
%"struct.sw::DrawData::VS" = type { [260 x %"struct.sw::float4"], [24 x i8*], [64 x i8*], [64 x i32], [64 x i32], [64 x i32], [64 x i32], [16 x %"struct.sw::int4"], [16 x i8] }
%"struct.sw::DrawData::PS" = type { [8 x [4 x [4 x i16]]], [264 x %"struct.sw::float4"], [24 x i8*], [16 x %"struct.sw::int4"], [16 x i8] }
%"struct.sw::TextureStage::Uniforms" = type { [4 x [4 x i16]], [2 x [2 x %"struct.sw::float4"]], [2 x [2 x [4 x i16]]], [4 x i16], [4 x i16] }
%"class.sw::AtomicInt" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.61" }
%"struct.std::__1::__atomic_base.61" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.sw::SwiftConfig" = type opaque
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.88" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.sw::VertexProcessor::State" = type <{ %"struct.sw::VertexProcessor::States", i32, [4 x i8] }>
%"struct.sw::VertexProcessor::States" = type { i64, i48, [9 x i8], [3 x i8], [8 x %"struct.sw::VertexProcessor::States::TextureState"], [16 x %"struct.sw::Sampler::State"], [32 x %"struct.sw::VertexProcessor::States::Input"], [34 x %"struct.sw::VertexProcessor::States::Output"] }
%"struct.sw::VertexProcessor::States::TextureState" = type { i8, i8, [2 x i8] }
%"struct.sw::Sampler::State" = type { [6 x i8], [2 x i8] }
%"struct.sw::VertexProcessor::States::Input" = type { i16, [2 x i8] }
%"struct.sw::VertexProcessor::States::Output" = type { %union.anon.94, %union.anon.96 }
%union.anon.94 = type { i8 }
%union.anon.96 = type { i8 }
%"struct.sw::SetupProcessor::State" = type { %"struct.sw::SetupProcessor::States", i32 }
%"struct.sw::SetupProcessor::States" = type { i32, %union.anon.86 }
%union.anon.86 = type { [32 x [4 x %"struct.sw::SetupProcessor::States::Gradient"]] }
%"struct.sw::SetupProcessor::States::Gradient" = type { i8 }
%"struct.sw::PixelProcessor::State" = type { %"struct.sw::PixelProcessor::States", i32 }
%"struct.sw::PixelProcessor::States" = type { i32, i32, i32, i16, i32, [8 x i32], i16, [2 x i8], [16 x %"struct.sw::Sampler::State"], [8 x %"struct.sw::TextureStage::State"], %union.anon.100 }
%"struct.sw::TextureStage::State" = type { [6 x i8], [2 x i8] }
%union.anon.100 = type { [32 x %"struct.sw::PixelProcessor::States::Interpolant"] }
%"struct.sw::PixelProcessor::States::Interpolant" = type { i16 }
%"class.std::__1::shared_ptr" = type { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* }
%"class.rr::Routine" = type { i32 (...)** }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.sw::Context" = type <{ i32, i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, i8, [3 x i8], float, float, float, [8 x i8], [8 x %"class.sw::TextureStage"], [32 x %"class.sw::Sampler"], [32 x %"class.sw::Resource"*], [32 x %"struct.sw::Stream"], %"class.sw::Resource"*, i8, [3 x i8], float, float, i8, [16 x i8], [3 x i8], [8 x i32], i8, i8, [2 x i8], [8 x i32], [8 x i8], [4 x i8], [8 x %"class.sw::Surface"*], [8 x i32], %"class.sw::Surface"*, i32, [4 x i8], %"class.sw::Surface"*, i32, i8, [3 x i8], i32, i32, i8, i8, i8, i8, i32, %"class.sw::PixelShader"*, %"class.sw::VertexShader"*, float, i32, i8, i8, [8 x i8], [2 x i8], [8 x %"struct.sw::Point"], i32, i32, i32, i32, i8, i8, i8, i8, i64, i8, i8, [2 x i8], i32, i8, i8, [2 x i8], i32, i32, i32, i8, [3 x i8], i32, i32, i32, i8, i8, [2 x i8], float, [8 x i32], i8, [3 x i8], i32, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.sw::TextureStage" = type { %"struct.sw::TextureStage::Uniforms", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.sw::Sampler"*, %"class.sw::TextureStage"*, [8 x i8] }
%"class.sw::Sampler" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.sw::Texture", float, [12 x i8] }>
%"struct.sw::Stream" = type <{ %"struct.sw::StreamResource", i32, i8, i8, [2 x i8] }>
%"struct.sw::StreamResource" = type { %"class.sw::Resource"*, i8*, i32 }
%"struct.sw::Point" = type { %union.anon.78 }
%union.anon.78 = type { [3 x float] }
%"struct.es2::Viewport" = type { i32, i32, i32, i32, float, float }
%"struct.sw::RectT" = type { i32, i32, i32, i32 }
%"class.sw::PixelShader" = type { %"class.sw::Shader.base", [32 x [4 x %"struct.sw::Shader::Semantic"]], i8, i8, i8, i8, i8, [6 x i8] }
%"class.sw::Shader.base" = type <{ i32 (...)**, i32, i32, i32, i8, i8, i8, i8, %"struct.sw::Shader::Limits", i32, %union.anon.62, [2 x i8], %"class.std::__1::vector", i16, [2 x i8], i32, i8, i8, i8, i8, i8 }>
%"struct.sw::Shader::Limits" = type { i32, i32, i32, i32 }
%union.anon.62 = type { i16 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.sw::Shader::Instruction"**, %"struct.sw::Shader::Instruction"**, %"class.std::__1::__compressed_pair.73" }
%"struct.sw::Shader::Instruction" = type <{ i32 (...)**, i32, %union.anon.64, i8, i8, i8, i8, i32, i32, i8, [3 x i8], %"struct.sw::Shader::DestinationParameter", [5 x %"struct.sw::Shader::SourceParameter"], %union.anon.71, [4 x i8] }>
%union.anon.64 = type { i32 }
%"struct.sw::Shader::DestinationParameter" = type { %"struct.sw::Shader::Parameter.base", %union.anon.69, i8, i8 }
%"struct.sw::Shader::Parameter.base" = type <{ %union.anon.66, i8 }>
%union.anon.66 = type { %struct.anon.67 }
%struct.anon.67 = type { i32, %"struct.sw::Shader::Relative" }
%"struct.sw::Shader::Relative" = type { i8, i32, i8, i32, i8 }
%union.anon.69 = type { i8 }
%"struct.sw::Shader::SourceParameter" = type { %"struct.sw::Shader::Parameter.base", [3 x i8] }
%union.anon.71 = type { i32 }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"struct.sw::Shader::Instruction"** }
%"struct.sw::Shader::Semantic" = type { i8, i8, i8, i8 }
%"class.sw::VertexShader" = type <{ %"class.sw::Shader.base", [32 x %"struct.sw::Shader::Semantic"], [34 x [4 x %"struct.sw::Shader::Semantic"]], [32 x i8], [3 x i8], i32, i32, i8, i8, i8, [5 x i8] }>
%"class.egl::Image" = type { %"class.sw::Surface.base", [6 x i8], %"class.gl::Object.base", i32, i32, i32, i32, i8, %"class.egl::Texture"* }
%"class.sw::Surface.base" = type <{ i32 (...)**, %"class.sw::Resource"*, %"struct.sw::Surface::Buffer", %"struct.sw::Surface::Buffer", %"struct.sw::Surface::Buffer", i8, i8, i8, i8, i32, i8, i8 }>
%"class.egl::Texture" = type { %"class.gl::NamedObject" }
%"class.es2::ResourceManager" = type { i64, %"class.sw::MutexLock", %"class.gl::NameSpace.102", %"class.gl::NameSpace.113", %"class.gl::NameSpace.124", %"class.gl::NameSpace.135", %"class.gl::NameSpace.146", %"class.gl::NameSpace.157", %"class.gl::NameSpace.168", %"class.gl::NameSpace.179" }
%"class.gl::NameSpace.102" = type <{ %"class.std::__1::map.103", i32, [4 x i8] }>
%"class.std::__1::map.103" = type { %"class.std::__1::__tree.104" }
%"class.std::__1::__tree.104" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.105", %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.gl::NameSpace.113" = type <{ %"class.std::__1::map.114", i32, [4 x i8] }>
%"class.std::__1::map.114" = type { %"class.std::__1::__tree.115" }
%"class.std::__1::__tree.115" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.116", %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.gl::NameSpace.124" = type <{ %"class.std::__1::map.125", i32, [4 x i8] }>
%"class.std::__1::map.125" = type { %"class.std::__1::__tree.126" }
%"class.std::__1::__tree.126" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.127", %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.gl::NameSpace.135" = type <{ %"class.std::__1::map.136", i32, [4 x i8] }>
%"class.std::__1::map.136" = type { %"class.std::__1::__tree.137" }
%"class.std::__1::__tree.137" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.138", %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.gl::NameSpace.146" = type <{ %"class.std::__1::map.147", i32, [4 x i8] }>
%"class.std::__1::map.147" = type { %"class.std::__1::__tree.148" }
%"class.std::__1::__tree.148" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.149", %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.gl::NameSpace.157" = type <{ %"class.std::__1::map.158", i32, [4 x i8] }>
%"class.std::__1::map.158" = type { %"class.std::__1::__tree.159" }
%"class.std::__1::__tree.159" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.gl::NameSpace.168" = type <{ %"class.std::__1::map.169", i32, [4 x i8] }>
%"class.std::__1::map.169" = type { %"class.std::__1::__tree.170" }
%"class.std::__1::__tree.170" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.171", %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.gl::NameSpace.179" = type <{ %"class.std::__1::map.180", i32, [4 x i8] }>
%"class.std::__1::map.180" = type { %"class.std::__1::__tree.181" }
%"class.std::__1::__tree.181" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.182", %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.es2::TranslatedAttribute" = type { i32, i32, i8, i32, i32, %"class.sw::Resource"* }
%"class.es2::Program" = type <{ %"class.es2::FragmentShader"*, %"class.es2::VertexShader"*, %"class.sw::PixelShader"*, %"class.sw::VertexShader"*, %"class.std::__1::map.239", %"class.std::__1::map.239", %"class.std::__1::vector.218", [32 x i32], [24 x i32], %"class.std::__1::vector.250", i32, [4 x i8], i64, [16 x %"struct.es2::Program::Sampler"], [16 x %"struct.es2::Program::Sampler"], %"class.std::__1::vector.257", %"class.std::__1::vector.264", %"class.std::__1::vector.271", %"class.std::__1::vector.278", %"class.std::__1::vector.292", i8, i8, [6 x i8], i8*, i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.es2::ResourceManager"*, i32, [4 x i8] }>
%"class.es2::FragmentShader" = type { %"class.es2::Shader", %"class.sw::PixelShader"* }
%"class.es2::Shader" = type { %"class.glsl::Shader.base", i8*, %"class.std::__1::basic_string", i32, i32, i8, %"class.es2::ResourceManager"* }
%"class.glsl::Shader.base" = type <{ i32 (...)**, %"class.std::__1::list.190", %"class.std::__1::vector.197", %"class.std::__1::vector.197", %"class.std::__1::vector.218", %"class.std::__1::vector.225", i32 }>
%"class.std::__1::list.190" = type { %"class.std::__1::__list_imp.191" }
%"class.std::__1::__list_imp.191" = type { %"struct.std::__1::__list_node_base.192", %"class.std::__1::__compressed_pair.193" }
%"struct.std::__1::__list_node_base.192" = type { %"struct.std::__1::__list_node_base.192"*, %"struct.std::__1::__list_node_base.192"* }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::vector.197" = type { %"class.std::__1::__vector_base.198" }
%"class.std::__1::__vector_base.198" = type { %"struct.glsl::Uniform"*, %"struct.glsl::Uniform"*, %"class.std::__1::__compressed_pair.213" }
%"struct.glsl::Uniform" = type <{ %"struct.glsl::ShaderVariable", i32, %"struct.glsl::BlockMemberInfo", [4 x i8] }>
%"struct.glsl::ShaderVariable" = type { i32, i32, %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.206" }
%"class.std::__1::vector.206" = type { %"class.std::__1::__vector_base.207" }
%"class.std::__1::__vector_base.207" = type { %"struct.glsl::ShaderVariable"*, %"struct.glsl::ShaderVariable"*, %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"struct.glsl::ShaderVariable"* }
%"struct.glsl::BlockMemberInfo" = type <{ i32, i32, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.glsl::Uniform"* }
%"class.std::__1::vector.225" = type { %"class.std::__1::__vector_base.226" }
%"class.std::__1::__vector_base.226" = type { %"struct.glsl::UniformBlock"*, %"struct.glsl::UniformBlock"*, %"class.std::__1::__compressed_pair.234" }
%"struct.glsl::UniformBlock" = type { %"class.std::__1::basic_string", i32, i32, i32, i8, %"class.std::__1::vector.227", i32, i32 }
%"class.std::__1::vector.227" = type { %"class.std::__1::__vector_base.228" }
%"class.std::__1::__vector_base.228" = type { i32*, i32*, %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { i32* }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"struct.glsl::UniformBlock"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.201 }
%union.anon.201 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.es2::VertexShader" = type { %"class.es2::Shader", %"class.sw::VertexShader"* }
%"class.std::__1::map.239" = type { %"class.std::__1::__tree.240" }
%"class.std::__1::__tree.240" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::vector.218" = type { %"class.std::__1::__vector_base.219" }
%"class.std::__1::__vector_base.219" = type { %"struct.glsl::Attribute"*, %"struct.glsl::Attribute"*, %"class.std::__1::__compressed_pair.220" }
%"struct.glsl::Attribute" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"struct.glsl::Attribute"* }
%"class.std::__1::vector.250" = type { %"class.std::__1::__vector_base.251" }
%"class.std::__1::__vector_base.251" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.std::__1::basic_string"* }
%"struct.es2::Program::Sampler" = type { i8, i32, i32 }
%"class.std::__1::vector.257" = type { %"class.std::__1::__vector_base.258" }
%"class.std::__1::__vector_base.258" = type { %"struct.es2::Uniform"**, %"struct.es2::Uniform"**, %"class.std::__1::__compressed_pair.259" }
%"struct.es2::Uniform" = type <{ i32, i32, %"class.std::__1::basic_string", i32, %"struct.es2::Uniform::BlockInfo", %"class.std::__1::vector.206", i8*, i8, i8, i16, i16, [2 x i8] }>
%"struct.es2::Uniform::BlockInfo" = type <{ i32, i32, i32, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.es2::Uniform"** }
%"class.std::__1::vector.264" = type { %"class.std::__1::__vector_base.265" }
%"class.std::__1::__vector_base.265" = type { %"struct.es2::Uniform"*, %"struct.es2::Uniform"*, %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"struct.es2::Uniform"* }
%"class.std::__1::vector.271" = type { %"class.std::__1::__vector_base.272" }
%"class.std::__1::__vector_base.272" = type { %"struct.es2::UniformLocation"*, %"struct.es2::UniformLocation"*, %"class.std::__1::__compressed_pair.273" }
%"struct.es2::UniformLocation" = type { %"class.std::__1::basic_string", i32, i32 }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"struct.es2::UniformLocation"* }
%"class.std::__1::vector.278" = type { %"class.std::__1::__vector_base.279" }
%"class.std::__1::__vector_base.279" = type { %"struct.es2::UniformBlock"**, %"struct.es2::UniformBlock"**, %"class.std::__1::__compressed_pair.287" }
%"struct.es2::UniformBlock" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.280", i32, i32 }
%"class.std::__1::vector.280" = type { %"class.std::__1::__vector_base.281" }
%"class.std::__1::__vector_base.281" = type { i32*, i32*, %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { i32* }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"struct.es2::UniformBlock"** }
%"class.std::__1::vector.292" = type { %"class.std::__1::__vector_base.293" }
%"class.std::__1::__vector_base.293" = type { %"struct.es2::LinkedVarying"*, %"struct.es2::LinkedVarying"*, %"class.std::__1::__compressed_pair.294" }
%"struct.es2::LinkedVarying" = type { %"class.std::__1::basic_string", i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"struct.es2::LinkedVarying"* }

$_ZNK3es215VertexAttribute8typeSizeEv = comdat any

@_ZTVN3es217VertexDataManagerE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.es2::VertexDataManager"*)* @_ZN3es217VertexDataManagerD2Ev to i8*), i8* bitcast (void (%"class.es2::VertexDataManager"*)* @_ZN3es217VertexDataManagerD0Ev to i8*)] }, align 8
@_ZTVN3es212VertexBufferE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.es2::VertexBuffer"*)* @_ZN3es212VertexBufferD2Ev to i8*), i8* bitcast (void (%"class.es2::VertexBuffer"*)* @_ZN3es212VertexBufferD0Ev to i8*)] }, align 8
@_ZTVN3es220ConstantVertexBufferE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.es2::VertexBuffer"*)* @_ZN3es212VertexBufferD2Ev to i8*), i8* bitcast (void (%"class.es2::ConstantVertexBuffer"*)* @_ZN3es220ConstantVertexBufferD0Ev to i8*)] }, align 8
@_ZTVN3es221StreamingVertexBufferE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.es2::VertexBuffer"*)* @_ZN3es212VertexBufferD2Ev to i8*), i8* bitcast (void (%"class.es2::StreamingVertexBuffer"*)* @_ZN3es221StreamingVertexBufferD0Ev to i8*)] }, align 8

@_ZN3es217VertexDataManagerC1EPNS_7ContextE = hidden unnamed_addr alias void (%"class.es2::VertexDataManager"*, %"class.es2::Context"*), void (%"class.es2::VertexDataManager"*, %"class.es2::Context"*)* @_ZN3es217VertexDataManagerC2EPNS_7ContextE
@_ZN3es217VertexDataManagerD1Ev = hidden unnamed_addr alias void (%"class.es2::VertexDataManager"*), void (%"class.es2::VertexDataManager"*)* @_ZN3es217VertexDataManagerD2Ev
@_ZN3es212VertexBufferC1Ej = hidden unnamed_addr alias void (%"class.es2::VertexBuffer"*, i32), void (%"class.es2::VertexBuffer"*, i32)* @_ZN3es212VertexBufferC2Ej
@_ZN3es212VertexBufferD1Ev = hidden unnamed_addr alias void (%"class.es2::VertexBuffer"*), void (%"class.es2::VertexBuffer"*)* @_ZN3es212VertexBufferD2Ev
@_ZN3es220ConstantVertexBufferC1Effff = hidden unnamed_addr alias void (%"class.es2::ConstantVertexBuffer"*, float, float, float, float), void (%"class.es2::ConstantVertexBuffer"*, float, float, float, float)* @_ZN3es220ConstantVertexBufferC2Effff
@_ZN3es220ConstantVertexBufferD2Ev = hidden unnamed_addr alias void (%"class.es2::ConstantVertexBuffer"*), bitcast (void (%"class.es2::VertexBuffer"*)* @_ZN3es212VertexBufferD2Ev to void (%"class.es2::ConstantVertexBuffer"*)*)
@_ZN3es220ConstantVertexBufferD1Ev = hidden unnamed_addr alias void (%"class.es2::ConstantVertexBuffer"*), bitcast (void (%"class.es2::VertexBuffer"*)* @_ZN3es212VertexBufferD2Ev to void (%"class.es2::ConstantVertexBuffer"*)*)
@_ZN3es221StreamingVertexBufferC1Ej = hidden unnamed_addr alias void (%"class.es2::StreamingVertexBuffer"*, i32), void (%"class.es2::StreamingVertexBuffer"*, i32)* @_ZN3es221StreamingVertexBufferC2Ej
@_ZN3es221StreamingVertexBufferD2Ev = hidden unnamed_addr alias void (%"class.es2::StreamingVertexBuffer"*), bitcast (void (%"class.es2::VertexBuffer"*)* @_ZN3es212VertexBufferD2Ev to void (%"class.es2::StreamingVertexBuffer"*)*)
@_ZN3es221StreamingVertexBufferD1Ev = hidden unnamed_addr alias void (%"class.es2::StreamingVertexBuffer"*), bitcast (void (%"class.es2::VertexBuffer"*)* @_ZN3es212VertexBufferD2Ev to void (%"class.es2::StreamingVertexBuffer"*)*)

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es217VertexDataManagerC2EPNS_7ContextE(%"class.es2::VertexDataManager"* nocapture, %"class.es2::Context"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.es2::VertexDataManager", %"class.es2::VertexDataManager"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3es217VertexDataManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.es2::VertexDataManager", %"class.es2::VertexDataManager"* %0, i64 0, i32 1
  store %"class.es2::Context"* %1, %"class.es2::Context"** %4, align 8
  %5 = getelementptr %"class.es2::VertexDataManager", %"class.es2::VertexDataManager"* %0, i64 0, i32 3, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %5, i8 1, i64 32, i1 false)
  %6 = getelementptr %"class.es2::VertexDataManager", %"class.es2::VertexDataManager"* %0, i64 0, i32 4, i64 0
  %7 = bitcast %"class.es2::ConstantVertexBuffer"** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 256, i1 false)
  %8 = tail call i8* @_Znwm(i64 32) #7
  %9 = bitcast i8* %8 to i32 (...)***
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = tail call i8* @_Znwm(i64 168) #7
  %12 = bitcast i8* %11 to %"class.sw::Resource"*
  tail call void @_ZN2sw8ResourceC1Em(%"class.sw::Resource"* nonnull %12, i64 1049600) #8
  %13 = bitcast i8* %10 to i8**
  store i8* %11, i8** %13, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3es221StreamingVertexBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %14 = getelementptr inbounds i8, i8* %8, i64 16
  %15 = bitcast i8* %14 to i32*
  store i32 1048576, i32* %15, align 8
  %16 = getelementptr inbounds i8, i8* %8, i64 20
  %17 = bitcast i8* %16 to i32*
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %8, i64 24
  %19 = bitcast i8* %18 to i32*
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.es2::VertexDataManager", %"class.es2::VertexDataManager"* %0, i64 0, i32 2
  %21 = bitcast %"class.es2::StreamingVertexBuffer"** %20 to i8**
  store i8* %8, i8** %21, align 8
  ret void
}

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es217VertexDataManagerD2Ev(%"class.es2::VertexDataManager"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.es2::VertexDataManager", %"class.es2::VertexDataManager"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3es217VertexDataManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.es2::VertexDataManager", %"class.es2::VertexDataManager"* %0, i64 0, i32 2
  %4 = load %"class.es2::StreamingVertexBuffer"*, %"class.es2::StreamingVertexBuffer"** %3, align 8
  %5 = icmp eq %"class.es2::StreamingVertexBuffer"* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %7, %1
  br label %13

7:                                                ; preds = %1
  %8 = bitcast %"class.es2::StreamingVertexBuffer"* %4 to void (%"class.es2::StreamingVertexBuffer"*)***
  %9 = load void (%"class.es2::StreamingVertexBuffer"*)**, void (%"class.es2::StreamingVertexBuffer"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.es2::StreamingVertexBuffer"*)*, void (%"class.es2::StreamingVertexBuffer"*)** %9, i64 1
  %11 = load void (%"class.es2::StreamingVertexBuffer"*)*, void (%"class.es2::StreamingVertexBuffer"*)** %10, align 8
  tail call void %11(%"class.es2::StreamingVertexBuffer"* nonnull %4) #8
  br label %6

12:                                               ; preds = %23
  ret void

13:                                               ; preds = %6, %23
  %14 = phi i64 [ %24, %23 ], [ 0, %6 ]
  %15 = getelementptr inbounds %"class.es2::VertexDataManager", %"class.es2::VertexDataManager"* %0, i64 0, i32 4, i64 %14
  %16 = load %"class.es2::ConstantVertexBuffer"*, %"class.es2::ConstantVertexBuffer"** %15, align 8
  %17 = icmp eq %"class.es2::ConstantVertexBuffer"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.es2::ConstantVertexBuffer"* %16 to void (%"class.es2::ConstantVertexBuffer"*)***
  %20 = load void (%"class.es2::ConstantVertexBuffer"*)**, void (%"class.es2::ConstantVertexBuffer"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.es2::ConstantVertexBuffer"*)*, void (%"class.es2::ConstantVertexBuffer"*)** %20, i64 1
  %22 = load void (%"class.es2::ConstantVertexBuffer"*)*, void (%"class.es2::ConstantVertexBuffer"*)** %21, align 8
  tail call void %22(%"class.es2::ConstantVertexBuffer"* nonnull %16) #8
  br label %23

23:                                               ; preds = %13, %18
  %24 = add nuw nsw i64 %14, 1
  %25 = icmp eq i64 %24, 32
  br i1 %25, label %12, label %13
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es217VertexDataManagerD0Ev(%"class.es2::VertexDataManager"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3es217VertexDataManagerD2Ev(%"class.es2::VertexDataManager"* %0) #8
  %2 = bitcast %"class.es2::VertexDataManager"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN3es217VertexDataManager18writeAttributeDataEPNS_21StreamingVertexBufferEiiRKNS_15VertexAttributeE(%"class.es2::VertexDataManager"* nocapture readnone, %"class.es2::StreamingVertexBuffer"*, i32, i32, %"class.es2::VertexAttribute"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.es2::VertexAttribute", %"class.es2::VertexAttribute"* %4, i64 0, i32 7, i32 0
  %7 = load %"class.es2::Buffer"*, %"class.es2::Buffer"** %6, align 8
  %8 = getelementptr inbounds %"class.es2::VertexAttribute", %"class.es2::VertexAttribute"* %4, i64 0, i32 4
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %5
  %12 = tail call i32 @_ZNK3es215VertexAttribute8typeSizeEv(%"class.es2::VertexAttribute"* %4) #8
  br label %13

13:                                               ; preds = %5, %11
  %14 = phi i32 [ %12, %11 ], [ %9, %5 ]
  %15 = tail call i32 @_ZNK3es215VertexAttribute8typeSizeEv(%"class.es2::VertexAttribute"* %4) #9
  %16 = icmp eq %"class.es2::StreamingVertexBuffer"* %1, null
  br i1 %16, label %74, label %17

17:                                               ; preds = %13
  %18 = tail call i32 @_ZNK3es215VertexAttribute8typeSizeEv(%"class.es2::VertexAttribute"* %4) #9
  %19 = getelementptr inbounds %"class.es2::StreamingVertexBuffer", %"class.es2::StreamingVertexBuffer"* %1, i64 0, i32 0, i32 1
  %20 = load %"class.sw::Resource"*, %"class.sw::Resource"** %19, align 8
  %21 = icmp eq %"class.sw::Resource"* %20, null
  br i1 %21, label %74, label %22

22:                                               ; preds = %17
  %23 = mul nsw i32 %18, %3
  %24 = tail call i8* @_ZN2sw8Resource4lockENS_8AccessorE(%"class.sw::Resource"* nonnull %20, i32 1) #8
  %25 = getelementptr inbounds %"class.es2::StreamingVertexBuffer", %"class.es2::StreamingVertexBuffer"* %1, i64 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds i8, i8* %24, i64 %27
  %29 = add i32 %26, %23
  store i32 %29, i32* %25, align 4
  %30 = icmp eq i8* %28, null
  br i1 %30, label %74, label %31

31:                                               ; preds = %22
  %32 = icmp eq %"class.es2::Buffer"* %7, null
  br i1 %32, label %45, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.es2::Buffer", %"class.es2::Buffer"* %7, i64 0, i32 1
  %35 = load %"class.sw::Resource"*, %"class.sw::Resource"** %34, align 8
  %36 = icmp eq %"class.sw::Resource"* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %33
  %38 = tail call i8* @_ZNK2sw8Resource4dataEv(%"class.sw::Resource"* nonnull %35) #8
  br label %39

39:                                               ; preds = %33, %37
  %40 = phi i8* [ %38, %37 ], [ null, %33 ]
  %41 = getelementptr inbounds %"class.es2::VertexAttribute", %"class.es2::VertexAttribute"* %4, i64 0, i32 6
  %42 = bitcast %union.anon.4* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds i8, i8* %40, i64 %43
  br label %48

45:                                               ; preds = %31
  %46 = getelementptr inbounds %"class.es2::VertexAttribute", %"class.es2::VertexAttribute"* %4, i64 0, i32 6, i32 0
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %45, %39
  %49 = phi i8* [ %44, %39 ], [ %47, %45 ]
  %50 = mul nsw i32 %14, %2
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %49, i64 %51
  %53 = icmp eq i32 %14, %15
  br i1 %53, label %59, label %54

54:                                               ; preds = %48
  %55 = icmp sgt i32 %3, 0
  br i1 %55, label %56, label %70

56:                                               ; preds = %54
  %57 = sext i32 %15 to i64
  %58 = sext i32 %14 to i64
  br label %62

59:                                               ; preds = %48
  %60 = mul nsw i32 %14, %3
  %61 = sext i32 %60 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 %52, i64 %61, i1 false)
  br label %70

62:                                               ; preds = %62, %56
  %63 = phi i32 [ 0, %56 ], [ %68, %62 ]
  %64 = phi i8* [ %52, %56 ], [ %67, %62 ]
  %65 = phi i8* [ %28, %56 ], [ %66, %62 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %65, i8* align 1 %64, i64 %57, i1 false)
  %66 = getelementptr inbounds i8, i8* %65, i64 %57
  %67 = getelementptr inbounds i8, i8* %64, i64 %58
  %68 = add nuw nsw i32 %63, 1
  %69 = icmp eq i32 %68, %3
  br i1 %69, label %70, label %62

70:                                               ; preds = %62, %54, %59
  %71 = load %"class.sw::Resource"*, %"class.sw::Resource"** %19, align 8
  %72 = icmp eq %"class.sw::Resource"* %71, null
  br i1 %72, label %74, label %73

73:                                               ; preds = %70
  tail call void @_ZN2sw8Resource6unlockEv(%"class.sw::Resource"* nonnull %71) #8
  br label %74

74:                                               ; preds = %17, %13, %73, %70, %22
  %75 = phi i32 [ -1, %22 ], [ %26, %70 ], [ %26, %73 ], [ -1, %13 ], [ -1, %17 ]
  ret i32 %75
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNK3es215VertexAttribute8typeSizeEv(%"class.es2::VertexAttribute"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.es2::VertexAttribute", %"class.es2::VertexAttribute"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %38 [
    i32 5120, label %4
    i32 5121, label %7
    i32 5122, label %10
    i32 5123, label %14
    i32 5124, label %18
    i32 5125, label %22
    i32 5132, label %26
    i32 5126, label %30
    i32 36193, label %34
    i32 5131, label %34
    i32 36255, label %42
    i32 33640, label %42
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.es2::VertexAttribute", %"class.es2::VertexAttribute"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  br label %42

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.es2::VertexAttribute", %"class.es2::VertexAttribute"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  br label %42

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.es2::VertexAttribute", %"class.es2::VertexAttribute"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = shl i32 %12, 1
  br label %42

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.es2::VertexAttribute", %"class.es2::VertexAttribute"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = shl i32 %16, 1
  br label %42

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.es2::VertexAttribute", %"class.es2::VertexAttribute"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = shl i32 %20, 2
  br label %42

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.es2::VertexAttribute", %"class.es2::VertexAttribute"* %0, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = shl i32 %24, 2
  br label %42

26:                                               ; preds = %1
  %27 = getelementptr inbounds %"class.es2::VertexAttribute", %"class.es2::VertexAttribute"* %0, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = shl i32 %28, 2
  br label %42

30:                                               ; preds = %1
  %31 = getelementptr inbounds %"class.es2::VertexAttribute", %"class.es2::VertexAttribute"* %0, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = shl i32 %32, 2
  br label %42

34:                                               ; preds = %1, %1
  %35 = getelementptr inbounds %"class.es2::VertexAttribute", %"class.es2::VertexAttribute"* %0, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = shl i32 %36, 1
  br label %42

38:                                               ; preds = %1
  %39 = getelementptr inbounds %"class.es2::VertexAttribute", %"class.es2::VertexAttribute"* %0, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = shl i32 %40, 2
  br label %42

42:                                               ; preds = %1, %1, %38, %34, %30, %26, %22, %18, %14, %10, %7, %4
  %43 = phi i32 [ %41, %38 ], [ %37, %34 ], [ %33, %30 ], [ %29, %26 ], [ %25, %22 ], [ %21, %18 ], [ %17, %14 ], [ %13, %10 ], [ %9, %7 ], [ %6, %4 ], [ 4, %1 ], [ 4, %1 ]
  ret i32 %43
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i8* @_ZN3es221StreamingVertexBuffer3mapERKNS_15VertexAttributeEjPj(%"class.es2::StreamingVertexBuffer"* nocapture, %"class.es2::VertexAttribute"* nocapture readnone dereferenceable(64), i32, i32* nocapture) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.es2::StreamingVertexBuffer", %"class.es2::StreamingVertexBuffer"* %0, i64 0, i32 0, i32 1
  %6 = load %"class.sw::Resource"*, %"class.sw::Resource"** %5, align 8
  %7 = icmp eq %"class.sw::Resource"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %4
  %9 = tail call i8* @_ZN2sw8Resource4lockENS_8AccessorE(%"class.sw::Resource"* nonnull %6, i32 1) #8
  %10 = getelementptr inbounds %"class.es2::StreamingVertexBuffer", %"class.es2::StreamingVertexBuffer"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds i8, i8* %9, i64 %12
  store i32 %11, i32* %3, align 4
  %14 = load i32, i32* %10, align 4
  %15 = add i32 %14, %2
  store i32 %15, i32* %10, align 4
  br label %16

16:                                               ; preds = %4, %8
  %17 = phi i8* [ %13, %8 ], [ null, %4 ]
  ret i8* %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es212VertexBuffer5unmapEv(%"class.es2::VertexBuffer"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.es2::VertexBuffer", %"class.es2::VertexBuffer"* %0, i64 0, i32 1
  %3 = load %"class.sw::Resource"*, %"class.sw::Resource"** %2, align 8
  %4 = icmp eq %"class.sw::Resource"* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN2sw8Resource6unlockEv(%"class.sw::Resource"* nonnull %3) #8
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN3es217VertexDataManager17prepareVertexDataEiiPNS_19TranslatedAttributeEi(%"class.es2::VertexDataManager"* nocapture, i32, i32, %"struct.es2::TranslatedAttribute"*, i32) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.es2::VertexDataManager", %"class.es2::VertexDataManager"* %0, i64 0, i32 2
  %7 = load %"class.es2::StreamingVertexBuffer"*, %"class.es2::StreamingVertexBuffer"** %6, align 8
  %8 = icmp eq %"class.es2::StreamingVertexBuffer"* %7, null
  br i1 %8, label %202, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.es2::VertexDataManager", %"class.es2::VertexDataManager"* %0, i64 0, i32 1
  %11 = load %"class.es2::Context"*, %"class.es2::Context"** %10, align 8
  %12 = tail call dereferenceable(2048) [32 x %"class.es2::VertexAttribute"]* @_ZN3es27Context24getVertexArrayAttributesEv(%"class.es2::Context"* %11) #8
  %13 = load %"class.es2::Context"*, %"class.es2::Context"** %10, align 8
  %14 = tail call dereferenceable(2048) [32 x %"class.es2::VertexAttribute"]* @_ZN3es27Context26getCurrentVertexAttributesEv(%"class.es2::Context"* %13) #8
  %15 = load %"class.es2::Context"*, %"class.es2::Context"** %10, align 8
  %16 = tail call %"class.es2::Program"* @_ZNK3es27Context17getCurrentProgramEv(%"class.es2::Context"* %15) #8
  br label %20

17:                                               ; preds = %49
  %18 = load %"class.es2::StreamingVertexBuffer"*, %"class.es2::StreamingVertexBuffer"** %6, align 8
  tail call void @_ZN3es221StreamingVertexBuffer20reserveRequiredSpaceEv(%"class.es2::StreamingVertexBuffer"* %18) #9
  %19 = bitcast %"class.es2::StreamingVertexBuffer"** %6 to %"class.es2::VertexBuffer"**
  br label %52

20:                                               ; preds = %49, %9
  %21 = phi i64 [ 0, %9 ], [ %50, %49 ]
  %22 = getelementptr inbounds [32 x %"class.es2::VertexAttribute"], [32 x %"class.es2::VertexAttribute"]* %12, i64 0, i64 %21, i32 8
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  %25 = select i1 %24, [32 x %"class.es2::VertexAttribute"]* %14, [32 x %"class.es2::VertexAttribute"]* %12
  %26 = getelementptr inbounds [32 x %"class.es2::VertexAttribute"], [32 x %"class.es2::VertexAttribute"]* %25, i64 0, i64 %21
  %27 = trunc i64 %21 to i32
  %28 = tail call i32 @_ZN3es27Program18getAttributeStreamEi(%"class.es2::Program"* %16, i32 %27) #8
  %29 = icmp eq i32 %28, -1
  br i1 %29, label %49, label %30

30:                                               ; preds = %20
  %31 = getelementptr inbounds [32 x %"class.es2::VertexAttribute"], [32 x %"class.es2::VertexAttribute"]* %25, i64 0, i64 %21, i32 8
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %49, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds [32 x %"class.es2::VertexAttribute"], [32 x %"class.es2::VertexAttribute"]* %25, i64 0, i64 %21, i32 7, i32 0
  %36 = load %"class.es2::Buffer"*, %"class.es2::Buffer"** %35, align 8
  %37 = icmp eq %"class.es2::Buffer"* %36, null
  br i1 %37, label %38, label %49

38:                                               ; preds = %34
  %39 = getelementptr inbounds [32 x %"class.es2::VertexAttribute"], [32 x %"class.es2::VertexAttribute"]* %25, i64 0, i64 %21, i32 5
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, 0
  %42 = load %"class.es2::StreamingVertexBuffer"*, %"class.es2::StreamingVertexBuffer"** %6, align 8
  %43 = tail call i32 @_ZNK3es215VertexAttribute8typeSizeEv(%"class.es2::VertexAttribute"* %26) #9
  %44 = select i1 %41, i32 %2, i32 1
  %45 = mul nsw i32 %43, %44
  %46 = getelementptr inbounds %"class.es2::StreamingVertexBuffer", %"class.es2::StreamingVertexBuffer"* %42, i64 0, i32 3
  %47 = load i32, i32* %46, align 8
  %48 = add i32 %47, %45
  store i32 %48, i32* %46, align 8
  br label %49

49:                                               ; preds = %30, %20, %34, %38
  %50 = add nuw nsw i64 %21, 1
  %51 = icmp eq i64 %50, 32
  br i1 %51, label %17, label %20

52:                                               ; preds = %199, %17
  %53 = phi i64 [ 0, %17 ], [ %200, %199 ]
  %54 = trunc i64 %53 to i32
  %55 = tail call i32 @_ZN3es27Program18getAttributeStreamEi(%"class.es2::Program"* %16, i32 %54) #8
  %56 = icmp eq i32 %55, -1
  br i1 %56, label %199, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds [32 x %"class.es2::VertexAttribute"], [32 x %"class.es2::VertexAttribute"]* %12, i64 0, i64 %53, i32 8
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp eq i8 %59, 0
  %61 = select i1 %60, [32 x %"class.es2::VertexAttribute"]* %14, [32 x %"class.es2::VertexAttribute"]* %12
  %62 = getelementptr inbounds [32 x %"class.es2::VertexAttribute"], [32 x %"class.es2::VertexAttribute"]* %61, i64 0, i64 %53
  %63 = getelementptr inbounds [32 x %"class.es2::VertexAttribute"], [32 x %"class.es2::VertexAttribute"]* %61, i64 0, i64 %53, i32 8
  %64 = load i8, i8* %63, align 8, !range !2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %152, label %66

66:                                               ; preds = %57
  %67 = getelementptr inbounds [32 x %"class.es2::VertexAttribute"], [32 x %"class.es2::VertexAttribute"]* %61, i64 0, i64 %53, i32 5
  %68 = load i32, i32* %67, align 8
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = udiv i32 %4, %68
  br label %72

72:                                               ; preds = %66, %70
  %73 = phi i32 [ %71, %70 ], [ %1, %66 ]
  %74 = getelementptr inbounds [32 x %"class.es2::VertexAttribute"], [32 x %"class.es2::VertexAttribute"]* %61, i64 0, i64 %53, i32 7, i32 0
  %75 = load %"class.es2::Buffer"*, %"class.es2::Buffer"** %74, align 8
  %76 = icmp eq %"class.es2::Buffer"* %75, null
  br i1 %76, label %77, label %81

77:                                               ; preds = %72
  %78 = getelementptr inbounds [32 x %"class.es2::VertexAttribute"], [32 x %"class.es2::VertexAttribute"]* %61, i64 0, i64 %53, i32 6, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = icmp eq i8* %79, null
  br i1 %80, label %202, label %112

81:                                               ; preds = %72
  %82 = getelementptr inbounds %"class.es2::Buffer", %"class.es2::Buffer"* %75, i64 0, i32 1
  %83 = load %"class.sw::Resource"*, %"class.sw::Resource"** %82, align 8
  %84 = icmp eq %"class.sw::Resource"* %83, null
  br i1 %84, label %202, label %85

85:                                               ; preds = %81
  %86 = tail call i8* @_ZNK2sw8Resource4dataEv(%"class.sw::Resource"* nonnull %83) #8
  %87 = icmp eq i8* %86, null
  br i1 %87, label %202, label %88

88:                                               ; preds = %85
  %89 = tail call %"class.sw::Resource"* @_ZN3es26Buffer11getResourceEv(%"class.es2::Buffer"* nonnull %75) #8
  %90 = icmp eq %"class.sw::Resource"* %89, null
  br i1 %90, label %112, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %"struct.es2::TranslatedAttribute", %"struct.es2::TranslatedAttribute"* %3, i64 %53, i32 5
  store %"class.sw::Resource"* %89, %"class.sw::Resource"** %92, align 8
  %93 = getelementptr inbounds [32 x %"class.es2::VertexAttribute"], [32 x %"class.es2::VertexAttribute"]* %61, i64 0, i64 %53, i32 4
  %94 = load i32, i32* %93, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %98

96:                                               ; preds = %91
  %97 = tail call i32 @_ZNK3es215VertexAttribute8typeSizeEv(%"class.es2::VertexAttribute"* %62) #8
  br label %98

98:                                               ; preds = %91, %96
  %99 = phi i32 [ %97, %96 ], [ %94, %91 ]
  %100 = mul nsw i32 %99, %73
  %101 = getelementptr inbounds [32 x %"class.es2::VertexAttribute"], [32 x %"class.es2::VertexAttribute"]* %61, i64 0, i64 %53, i32 6
  %102 = bitcast %union.anon.4* %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = trunc i64 %103 to i32
  %105 = add nsw i32 %100, %104
  %106 = getelementptr inbounds %"struct.es2::TranslatedAttribute", %"struct.es2::TranslatedAttribute"* %3, i64 %53, i32 3
  store i32 %105, i32* %106, align 4
  br i1 %69, label %127, label %107

107:                                              ; preds = %98
  %108 = load i32, i32* %93, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %127

110:                                              ; preds = %107
  %111 = tail call i32 @_ZNK3es215VertexAttribute8typeSizeEv(%"class.es2::VertexAttribute"* %62) #8
  br label %127

112:                                              ; preds = %77, %88
  %113 = load %"class.es2::StreamingVertexBuffer"*, %"class.es2::StreamingVertexBuffer"** %6, align 8
  %114 = select i1 %69, i32 1, i32 %2
  %115 = tail call i32 @_ZN3es217VertexDataManager18writeAttributeDataEPNS_21StreamingVertexBufferEiiRKNS_15VertexAttributeE(%"class.es2::VertexDataManager"* undef, %"class.es2::StreamingVertexBuffer"* %113, i32 %73, i32 %114, %"class.es2::VertexAttribute"* dereferenceable(64) %62) #9
  %116 = icmp eq i32 %115, -1
  br i1 %116, label %202, label %117

117:                                              ; preds = %112
  %118 = load %"class.es2::VertexBuffer"*, %"class.es2::VertexBuffer"** %19, align 8
  %119 = getelementptr inbounds %"class.es2::VertexBuffer", %"class.es2::VertexBuffer"* %118, i64 0, i32 1
  %120 = bitcast %"class.sw::Resource"** %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = getelementptr inbounds %"struct.es2::TranslatedAttribute", %"struct.es2::TranslatedAttribute"* %3, i64 %53, i32 5
  %123 = bitcast %"class.sw::Resource"** %122 to i64*
  store i64 %121, i64* %123, align 8
  %124 = getelementptr inbounds %"struct.es2::TranslatedAttribute", %"struct.es2::TranslatedAttribute"* %3, i64 %53, i32 3
  store i32 %115, i32* %124, align 4
  br i1 %69, label %127, label %125

125:                                              ; preds = %117
  %126 = tail call i32 @_ZNK3es215VertexAttribute8typeSizeEv(%"class.es2::VertexAttribute"* %62) #9
  br label %127

127:                                              ; preds = %117, %125, %98, %107, %110
  %128 = phi i32 [ 0, %98 ], [ %111, %110 ], [ %108, %107 ], [ %126, %125 ], [ 0, %117 ]
  %129 = getelementptr inbounds %"struct.es2::TranslatedAttribute", %"struct.es2::TranslatedAttribute"* %3, i64 %53, i32 4
  store i32 %128, i32* %129, align 8
  %130 = getelementptr inbounds %"class.es2::VertexAttribute", %"class.es2::VertexAttribute"* %62, i64 0, i32 0
  %131 = load i32, i32* %130, align 8
  switch i32 %131, label %143 [
    i32 5120, label %144
    i32 5121, label %132
    i32 5122, label %133
    i32 5123, label %134
    i32 5124, label %135
    i32 5125, label %136
    i32 5132, label %137
    i32 5126, label %138
    i32 5131, label %139
    i32 36193, label %140
    i32 36255, label %141
    i32 33640, label %142
  ]

132:                                              ; preds = %127
  br label %144

133:                                              ; preds = %127
  br label %144

134:                                              ; preds = %127
  br label %144

135:                                              ; preds = %127
  br label %144

136:                                              ; preds = %127
  br label %144

137:                                              ; preds = %127
  br label %144

138:                                              ; preds = %127
  br label %144

139:                                              ; preds = %127
  br label %144

140:                                              ; preds = %127
  br label %144

141:                                              ; preds = %127
  br label %144

142:                                              ; preds = %127
  br label %144

143:                                              ; preds = %127
  br label %144

144:                                              ; preds = %127, %132, %133, %134, %135, %136, %137, %138, %139, %140, %141, %142, %143
  %145 = phi i32 [ 5, %132 ], [ 7, %133 ], [ 8, %134 ], [ 9, %135 ], [ 10, %136 ], [ 11, %137 ], [ 4, %138 ], [ 12, %139 ], [ 12, %140 ], [ 13, %141 ], [ 14, %142 ], [ 4, %143 ], [ 6, %127 ]
  %146 = getelementptr inbounds %"struct.es2::TranslatedAttribute", %"struct.es2::TranslatedAttribute"* %3, i64 %53, i32 0
  store i32 %145, i32* %146, align 8
  %147 = getelementptr inbounds [32 x %"class.es2::VertexAttribute"], [32 x %"class.es2::VertexAttribute"]* %61, i64 0, i64 %53, i32 1
  %148 = load i32, i32* %147, align 4
  %149 = getelementptr inbounds %"struct.es2::TranslatedAttribute", %"struct.es2::TranslatedAttribute"* %3, i64 %53, i32 1
  store i32 %148, i32* %149, align 4
  %150 = getelementptr inbounds [32 x %"class.es2::VertexAttribute"], [32 x %"class.es2::VertexAttribute"]* %61, i64 0, i64 %53, i32 2
  %151 = load i8, i8* %150, align 8, !range !2
  br label %196

152:                                              ; preds = %57
  %153 = getelementptr inbounds %"class.es2::VertexDataManager", %"class.es2::VertexDataManager"* %0, i64 0, i32 3, i64 %53
  %154 = load i8, i8* %153, align 1, !range !2
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %177, label %156

156:                                              ; preds = %152
  %157 = getelementptr inbounds %"class.es2::VertexDataManager", %"class.es2::VertexDataManager"* %0, i64 0, i32 4, i64 %53
  %158 = load %"class.es2::ConstantVertexBuffer"*, %"class.es2::ConstantVertexBuffer"** %157, align 8
  %159 = icmp eq %"class.es2::ConstantVertexBuffer"* %158, null
  br i1 %159, label %165, label %160

160:                                              ; preds = %156
  %161 = bitcast %"class.es2::ConstantVertexBuffer"* %158 to void (%"class.es2::ConstantVertexBuffer"*)***
  %162 = load void (%"class.es2::ConstantVertexBuffer"*)**, void (%"class.es2::ConstantVertexBuffer"*)*** %161, align 8
  %163 = getelementptr inbounds void (%"class.es2::ConstantVertexBuffer"*)*, void (%"class.es2::ConstantVertexBuffer"*)** %162, i64 1
  %164 = load void (%"class.es2::ConstantVertexBuffer"*)*, void (%"class.es2::ConstantVertexBuffer"*)** %163, align 8
  tail call void %164(%"class.es2::ConstantVertexBuffer"* nonnull %158) #8
  br label %165

165:                                              ; preds = %160, %156
  %166 = tail call i8* @_Znwm(i64 16) #7
  %167 = bitcast i8* %166 to %"class.es2::ConstantVertexBuffer"*
  %168 = getelementptr inbounds [32 x %"class.es2::VertexAttribute"], [32 x %"class.es2::VertexAttribute"]* %61, i64 0, i64 %53, i32 9, i64 0, i32 0
  %169 = load float, float* %168, align 4
  %170 = getelementptr inbounds [32 x %"class.es2::VertexAttribute"], [32 x %"class.es2::VertexAttribute"]* %61, i64 0, i64 %53, i32 9, i64 1, i32 0
  %171 = load float, float* %170, align 4
  %172 = getelementptr inbounds [32 x %"class.es2::VertexAttribute"], [32 x %"class.es2::VertexAttribute"]* %61, i64 0, i64 %53, i32 9, i64 2, i32 0
  %173 = load float, float* %172, align 4
  %174 = getelementptr inbounds [32 x %"class.es2::VertexAttribute"], [32 x %"class.es2::VertexAttribute"]* %61, i64 0, i64 %53, i32 9, i64 3, i32 0
  %175 = load float, float* %174, align 4
  tail call void @_ZN3es220ConstantVertexBufferC2Effff(%"class.es2::ConstantVertexBuffer"* nonnull %167, float %169, float %171, float %173, float %175) #9
  %176 = bitcast %"class.es2::ConstantVertexBuffer"** %157 to i8**
  store i8* %166, i8** %176, align 8
  store i8 0, i8* %153, align 1
  br label %177

177:                                              ; preds = %152, %165
  %178 = getelementptr inbounds %"class.es2::VertexDataManager", %"class.es2::VertexDataManager"* %0, i64 0, i32 4, i64 %53
  %179 = bitcast %"class.es2::ConstantVertexBuffer"** %178 to %"class.es2::VertexBuffer"**
  %180 = load %"class.es2::VertexBuffer"*, %"class.es2::VertexBuffer"** %179, align 8
  %181 = getelementptr inbounds %"class.es2::VertexBuffer", %"class.es2::VertexBuffer"* %180, i64 0, i32 1
  %182 = bitcast %"class.sw::Resource"** %181 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = getelementptr inbounds %"struct.es2::TranslatedAttribute", %"struct.es2::TranslatedAttribute"* %3, i64 %53, i32 5
  %185 = bitcast %"class.sw::Resource"** %184 to i64*
  store i64 %183, i64* %185, align 8
  %186 = getelementptr inbounds [32 x %"class.es2::VertexAttribute"], [32 x %"class.es2::VertexAttribute"]* %61, i64 0, i64 %53, i32 10
  %187 = load i32, i32* %186, align 4
  %188 = icmp eq i32 %187, 5125
  %189 = select i1 %188, i32 10, i32 4
  %190 = icmp eq i32 %187, 5124
  %191 = select i1 %190, i32 9, i32 %189
  %192 = getelementptr inbounds %"struct.es2::TranslatedAttribute", %"struct.es2::TranslatedAttribute"* %3, i64 %53, i32 0
  store i32 %191, i32* %192, align 8
  %193 = getelementptr inbounds %"struct.es2::TranslatedAttribute", %"struct.es2::TranslatedAttribute"* %3, i64 %53, i32 1
  store i32 4, i32* %193, align 4
  %194 = getelementptr inbounds %"struct.es2::TranslatedAttribute", %"struct.es2::TranslatedAttribute"* %3, i64 %53, i32 4
  store i32 0, i32* %194, align 8
  %195 = getelementptr inbounds %"struct.es2::TranslatedAttribute", %"struct.es2::TranslatedAttribute"* %3, i64 %53, i32 3
  store i32 0, i32* %195, align 4
  br label %196

196:                                              ; preds = %144, %177
  %197 = phi i8 [ 0, %177 ], [ %151, %144 ]
  %198 = getelementptr inbounds %"struct.es2::TranslatedAttribute", %"struct.es2::TranslatedAttribute"* %3, i64 %53, i32 2
  store i8 %197, i8* %198, align 8
  br label %199

199:                                              ; preds = %196, %52
  %200 = add nuw nsw i64 %53, 1
  %201 = icmp eq i64 %200, 32
  br i1 %201, label %202, label %52

202:                                              ; preds = %81, %112, %77, %85, %199, %5
  %203 = phi i32 [ 1285, %5 ], [ 1282, %81 ], [ 1285, %112 ], [ 1282, %77 ], [ 1282, %85 ], [ 0, %199 ]
  ret i32 %203
}

; Function Attrs: optsize
declare dereferenceable(2048) [32 x %"class.es2::VertexAttribute"]* @_ZN3es27Context24getVertexArrayAttributesEv(%"class.es2::Context"*) local_unnamed_addr #4

; Function Attrs: optsize
declare dereferenceable(2048) [32 x %"class.es2::VertexAttribute"]* @_ZN3es27Context26getCurrentVertexAttributesEv(%"class.es2::Context"*) local_unnamed_addr #4

; Function Attrs: optsize
declare %"class.es2::Program"* @_ZNK3es27Context17getCurrentProgramEv(%"class.es2::Context"*) local_unnamed_addr #4

; Function Attrs: optsize
declare i32 @_ZN3es27Program18getAttributeStreamEi(%"class.es2::Program"*, i32) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN3es221StreamingVertexBuffer16addRequiredSpaceEj(%"class.es2::StreamingVertexBuffer"* nocapture, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.es2::StreamingVertexBuffer", %"class.es2::StreamingVertexBuffer"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = add i32 %4, %1
  store i32 %5, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es221StreamingVertexBuffer20reserveRequiredSpaceEv(%"class.es2::StreamingVertexBuffer"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.es2::StreamingVertexBuffer", %"class.es2::StreamingVertexBuffer"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.es2::StreamingVertexBuffer", %"class.es2::StreamingVertexBuffer"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ugt i32 %3, %5
  br i1 %6, label %7, label %26

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.es2::StreamingVertexBuffer", %"class.es2::StreamingVertexBuffer"* %0, i64 0, i32 0, i32 1
  %9 = load %"class.sw::Resource"*, %"class.sw::Resource"** %8, align 8
  %10 = icmp eq %"class.sw::Resource"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  tail call void @_ZN2sw8Resource8destructEv(%"class.sw::Resource"* nonnull %9) #8
  store %"class.sw::Resource"* null, %"class.sw::Resource"** %8, align 8
  %12 = load i32, i32* %4, align 8
  %13 = load i32, i32* %2, align 4
  br label %14

14:                                               ; preds = %7, %11
  %15 = phi i32 [ %3, %7 ], [ %13, %11 ]
  %16 = phi i32 [ %5, %7 ], [ %12, %11 ]
  %17 = mul i32 %16, 3
  %18 = lshr i32 %17, 1
  %19 = icmp ult i32 %15, %18
  %20 = select i1 %19, i32 %18, i32 %15
  store i32 %20, i32* %4, align 8
  %21 = tail call i8* @_Znwm(i64 168) #7
  %22 = bitcast i8* %21 to %"class.sw::Resource"*
  %23 = zext i32 %20 to i64
  tail call void @_ZN2sw8ResourceC1Em(%"class.sw::Resource"* nonnull %22, i64 %23) #8
  %24 = bitcast %"class.sw::Resource"** %8 to i8**
  store i8* %21, i8** %24, align 8
  %25 = getelementptr inbounds %"class.es2::StreamingVertexBuffer", %"class.es2::StreamingVertexBuffer"* %0, i64 0, i32 2
  br label %41

26:                                               ; preds = %1
  %27 = getelementptr inbounds %"class.es2::StreamingVertexBuffer", %"class.es2::StreamingVertexBuffer"* %0, i64 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = add i32 %28, %3
  %30 = icmp ugt i32 %29, %5
  br i1 %30, label %31, label %43

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.es2::StreamingVertexBuffer", %"class.es2::StreamingVertexBuffer"* %0, i64 0, i32 0, i32 1
  %33 = load %"class.sw::Resource"*, %"class.sw::Resource"** %32, align 8
  %34 = icmp eq %"class.sw::Resource"* %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %31
  tail call void @_ZN2sw8Resource8destructEv(%"class.sw::Resource"* nonnull %33) #8
  %36 = tail call i8* @_Znwm(i64 168) #7
  %37 = bitcast i8* %36 to %"class.sw::Resource"*
  %38 = load i32, i32* %4, align 8
  %39 = zext i32 %38 to i64
  tail call void @_ZN2sw8ResourceC1Em(%"class.sw::Resource"* nonnull %37, i64 %39) #8
  %40 = bitcast %"class.sw::Resource"** %32 to i8**
  store i8* %36, i8** %40, align 8
  br label %41

41:                                               ; preds = %35, %31, %14
  %42 = phi i32* [ %25, %14 ], [ %27, %31 ], [ %27, %35 ]
  store i32 0, i32* %42, align 4
  br label %43

43:                                               ; preds = %41, %26
  store i32 0, i32* %2, align 8
  ret void
}

; Function Attrs: optsize
declare %"class.sw::Resource"* @_ZN3es26Buffer11getResourceEv(%"class.es2::Buffer"*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden %"class.sw::Resource"* @_ZNK3es212VertexBuffer11getResourceEv(%"class.es2::VertexBuffer"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.es2::VertexBuffer", %"class.es2::VertexBuffer"* %0, i64 0, i32 1
  %3 = load %"class.sw::Resource"*, %"class.sw::Resource"** %2, align 8
  ret %"class.sw::Resource"* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es212VertexBufferC2Ej(%"class.es2::VertexBuffer"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.es2::VertexBuffer", %"class.es2::VertexBuffer"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3es212VertexBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.es2::VertexBuffer", %"class.es2::VertexBuffer"* %0, i64 0, i32 1
  store %"class.sw::Resource"* null, %"class.sw::Resource"** %4, align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = tail call i8* @_Znwm(i64 168) #7
  %8 = bitcast i8* %7 to %"class.sw::Resource"*
  %9 = add i32 %1, 1024
  %10 = zext i32 %9 to i64
  tail call void @_ZN2sw8ResourceC1Em(%"class.sw::Resource"* nonnull %8, i64 %10) #8
  %11 = bitcast %"class.sw::Resource"** %4 to i8**
  store i8* %7, i8** %11, align 8
  br label %12

12:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw8ResourceC1Em(%"class.sw::Resource"*, i64) unnamed_addr #4

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es212VertexBufferD2Ev(%"class.es2::VertexBuffer"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.es2::VertexBuffer", %"class.es2::VertexBuffer"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3es212VertexBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.es2::VertexBuffer", %"class.es2::VertexBuffer"* %0, i64 0, i32 1
  %4 = load %"class.sw::Resource"*, %"class.sw::Resource"** %3, align 8
  %5 = icmp eq %"class.sw::Resource"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZN2sw8Resource8destructEv(%"class.sw::Resource"* nonnull %4) #8
  br label %7

7:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw8Resource8destructEv(%"class.sw::Resource"*) local_unnamed_addr #4

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es212VertexBufferD0Ev(%"class.es2::VertexBuffer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.es2::VertexBuffer", %"class.es2::VertexBuffer"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3es212VertexBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.es2::VertexBuffer", %"class.es2::VertexBuffer"* %0, i64 0, i32 1
  %4 = load %"class.sw::Resource"*, %"class.sw::Resource"** %3, align 8
  %5 = icmp eq %"class.sw::Resource"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZN2sw8Resource8destructEv(%"class.sw::Resource"* nonnull %4) #8
  br label %7

7:                                                ; preds = %1, %6
  %8 = bitcast %"class.es2::VertexBuffer"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #7
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw8Resource6unlockEv(%"class.sw::Resource"*) local_unnamed_addr #4

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es220ConstantVertexBufferC2Effff(%"class.es2::ConstantVertexBuffer"* nocapture, float, float, float, float) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.es2::ConstantVertexBuffer", %"class.es2::ConstantVertexBuffer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3es212VertexBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.es2::ConstantVertexBuffer", %"class.es2::ConstantVertexBuffer"* %0, i64 0, i32 0, i32 1
  store %"class.sw::Resource"* null, %"class.sw::Resource"** %7, align 8
  %8 = tail call i8* @_Znwm(i64 168) #7
  %9 = bitcast i8* %8 to %"class.sw::Resource"*
  tail call void @_ZN2sw8ResourceC1Em(%"class.sw::Resource"* nonnull %9, i64 1040) #8
  %10 = bitcast %"class.sw::Resource"** %7 to i8**
  store i8* %8, i8** %10, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3es220ConstantVertexBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %11 = tail call i8* @_ZN2sw8Resource4lockENS_8AccessorE(%"class.sw::Resource"* nonnull %9, i32 0) #8
  %12 = bitcast i8* %11 to float*
  store float %1, float* %12, align 4
  %13 = getelementptr inbounds i8, i8* %11, i64 4
  %14 = bitcast i8* %13 to float*
  store float %2, float* %14, align 4
  %15 = getelementptr inbounds i8, i8* %11, i64 8
  %16 = bitcast i8* %15 to float*
  store float %3, float* %16, align 4
  %17 = getelementptr inbounds i8, i8* %11, i64 12
  %18 = bitcast i8* %17 to float*
  store float %4, float* %18, align 4
  %19 = load %"class.sw::Resource"*, %"class.sw::Resource"** %7, align 8
  tail call void @_ZN2sw8Resource6unlockEv(%"class.sw::Resource"* %19) #8
  ret void
}

; Function Attrs: optsize
declare i8* @_ZN2sw8Resource4lockENS_8AccessorE(%"class.sw::Resource"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es220ConstantVertexBufferD0Ev(%"class.es2::ConstantVertexBuffer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.es2::ConstantVertexBuffer", %"class.es2::ConstantVertexBuffer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3es212VertexBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.es2::ConstantVertexBuffer", %"class.es2::ConstantVertexBuffer"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.sw::Resource"*, %"class.sw::Resource"** %3, align 8
  %5 = icmp eq %"class.sw::Resource"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZN2sw8Resource8destructEv(%"class.sw::Resource"* nonnull %4) #8
  br label %7

7:                                                ; preds = %1, %6
  %8 = bitcast %"class.es2::ConstantVertexBuffer"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #7
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es221StreamingVertexBufferC2Ej(%"class.es2::StreamingVertexBuffer"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.es2::StreamingVertexBuffer", %"class.es2::StreamingVertexBuffer"* %0, i64 0, i32 0
  tail call void @_ZN3es212VertexBufferC2Ej(%"class.es2::VertexBuffer"* %3, i32 %1) #9
  %4 = getelementptr inbounds %"class.es2::StreamingVertexBuffer", %"class.es2::StreamingVertexBuffer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3es221StreamingVertexBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.es2::StreamingVertexBuffer", %"class.es2::StreamingVertexBuffer"* %0, i64 0, i32 1
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.es2::StreamingVertexBuffer", %"class.es2::StreamingVertexBuffer"* %0, i64 0, i32 2
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %"class.es2::StreamingVertexBuffer", %"class.es2::StreamingVertexBuffer"* %0, i64 0, i32 3
  store i32 0, i32* %7, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es221StreamingVertexBufferD0Ev(%"class.es2::StreamingVertexBuffer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.es2::StreamingVertexBuffer", %"class.es2::StreamingVertexBuffer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3es212VertexBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.es2::StreamingVertexBuffer", %"class.es2::StreamingVertexBuffer"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.sw::Resource"*, %"class.sw::Resource"** %3, align 8
  %5 = icmp eq %"class.sw::Resource"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZN2sw8Resource8destructEv(%"class.sw::Resource"* nonnull %4) #8
  br label %7

7:                                                ; preds = %1, %6
  %8 = bitcast %"class.es2::StreamingVertexBuffer"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #7
  ret void
}

; Function Attrs: optsize
declare i8* @_ZNK2sw8Resource4dataEv(%"class.sw::Resource"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind optsize }
attributes #8 = { nounwind optsize }
attributes #9 = { optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
