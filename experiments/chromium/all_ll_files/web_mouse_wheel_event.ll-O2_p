; ModuleID = '../../third_party/blink/common/input/web_mouse_wheel_event.cc'
source_filename = "../../third_party/blink/common/input/web_mouse_wheel_event.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::Vector2dF" = type { float, float }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.gfx::PointF" = type { float, float }
%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.blink::WebMouseWheelEvent" = type <{ %"class.blink::WebMouseEvent.base", float, float, float, float, float, float, i32, i32, i32, i32, i32, i8, i8, [6 x i8] }>
%"class.blink::WebMouseEvent.base" = type <{ %"class.blink::WebInputEvent", %"class.blink::WebPointerProperties", i32, i32 }>
%"class.blink::WebPointerProperties" = type { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, %"class.gfx::PointF", %"class.gfx::PointF" }
%"class.blink::WebMouseEvent" = type <{ %"class.blink::WebInputEvent", %"class.blink::WebPointerProperties", i32, i32, [4 x i8] }>

$_ZN5blink13WebInputEventD2Ev = comdat any

$_ZN5blink18WebMouseWheelEventD0Ev = comdat any

@__const._ZNK5blink18WebMouseWheelEvent16FlattenTransformEv.result = private unnamed_addr constant <{ <{ { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, i32 }>, float, float, float, float, float, float, i32, i32, i32, i32, i32, i8, i8, [6 x i8] }> <{ <{ { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, i32 }> <{ { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), float 0xFFFFFFFFE0000000, %"class.gfx::Vector2dF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [4 x i8] c"\AA\AA\AA\AA", %"class.base::TimeTicks" { %"class.base::time_internal::TimeBase" { i64 -6148914691236517206 } }, i32 -1431655766, i32 -1431655766 }, { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" } { i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, i32 -1431655766 }>, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }>, align 8
@_ZTVN5blink18WebMouseWheelEventE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WebInputEvent"*)* @_ZN5blink13WebInputEventD2Ev to i8*), i8* bitcast (void (%"class.blink::WebMouseWheelEvent"*)* @_ZN5blink18WebMouseWheelEventD0Ev to i8*), i8* bitcast (%"class.blink::WebInputEvent"* (%"class.blink::WebMouseWheelEvent"*)* @_ZNK5blink18WebMouseWheelEvent5CloneEv to i8*), i8* bitcast (i1 (%"class.blink::WebMouseWheelEvent"*, %"class.blink::WebInputEvent"*)* @_ZNK5blink18WebMouseWheelEvent11CanCoalesceERKNS_13WebInputEventE to i8*), i8* bitcast (void (%"class.blink::WebMouseWheelEvent"*, %"class.blink::WebInputEvent"*)* @_ZN5blink18WebMouseWheelEvent8CoalesceERKNS_13WebInputEventE to i8*), i8* bitcast (void ()* @_ZNK5blink13WebInputEvent18GetScrollInputTypeEv to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::WebInputEvent"* @_ZNK5blink18WebMouseWheelEvent5CloneEv(%"class.blink::WebMouseWheelEvent"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 160) #7
  %3 = bitcast i8* %2 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast float* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %6, i64 32, i1 false) #8
  %7 = getelementptr inbounds i8, i8* %2, i64 40
  %8 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 0, i32 1
  %9 = bitcast %"class.blink::WebPointerProperties"* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %9, i64 60, i1 false) #8
  %10 = getelementptr inbounds i8, i8* %2, i64 100
  %11 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 0, i32 2
  %12 = bitcast i32* %11 to i64*
  %13 = bitcast i8* %10 to i64*
  %14 = load i64, i64* %12, align 4
  store i64 %14, i64* %13, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink18WebMouseWheelEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %15 = getelementptr inbounds i8, i8* %2, i64 108
  %16 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 1
  %17 = bitcast float* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 %17, i64 46, i1 false) #8
  %18 = bitcast i8* %2 to %"class.blink::WebInputEvent"*
  ret %"class.blink::WebInputEvent"* %18
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink18WebMouseWheelEvent11CanCoalesceERKNS_13WebInputEventE(%"class.blink::WebMouseWheelEvent"* nocapture readonly, %"class.blink::WebInputEvent"* nocapture readonly dereferenceable(40)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 6
  br i1 %5, label %6, label %46

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 0, i32 0, i32 5
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 0, i32 5
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %8, %10
  br i1 %11, label %12, label %46

12:                                               ; preds = %6
  %13 = bitcast %"class.blink::WebInputEvent"* %1 to %"class.blink::WebMouseWheelEvent"*
  %14 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 13
  %15 = load i8, i8* %14, align 1
  %16 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %13, i64 0, i32 13
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %15, %17
  br i1 %18, label %19, label %46

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 12
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 3, i32 4
  %23 = bitcast i32* %22 to i8*
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %21, %24
  br i1 %25, label %26, label %46

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 7
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 3, i32 2
  %30 = bitcast %"class.gfx::Vector2dF"* %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %28, %31
  br i1 %32, label %33, label %40

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 8
  %35 = load i32, i32* %34, align 8
  %36 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 3, i32 2, i32 1
  %37 = bitcast float* %36 to i32*
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %35, %38
  br i1 %39, label %46, label %40

40:                                               ; preds = %33, %26
  %41 = icmp ne i8 %21, 0
  %42 = icmp eq i32 %28, 1
  %43 = and i1 %41, %42
  %44 = icmp eq i32 %31, 4
  %45 = and i1 %43, %44
  br label %46

46:                                               ; preds = %40, %33, %19, %6, %12, %2
  %47 = phi i1 [ false, %2 ], [ false, %12 ], [ false, %6 ], [ %45, %40 ], [ false, %19 ], [ true, %33 ]
  ret i1 %47
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink18WebMouseWheelEvent19HaveConsistentPhaseERKS0_(%"class.blink::WebMouseWheelEvent"* nocapture readonly, %"class.blink::WebMouseWheelEvent"* nocapture readonly dereferenceable(160)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 12
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %1, i64 0, i32 12
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %4, %6
  br i1 %7, label %8, label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 7
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %1, i64 0, i32 7
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %20

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 8
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %1, i64 0, i32 8
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %26, label %20

20:                                               ; preds = %14, %8
  %21 = icmp ne i8 %4, 0
  %22 = icmp eq i32 %10, 1
  %23 = and i1 %21, %22
  %24 = icmp eq i32 %12, 4
  %25 = and i1 %23, %24
  ret i1 %25

26:                                               ; preds = %14, %2
  %27 = phi i1 [ false, %2 ], [ true, %14 ]
  ret i1 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18WebMouseWheelEvent8CoalesceERKNS_13WebInputEventE(%"class.blink::WebMouseWheelEvent"* nocapture, %"class.blink::WebInputEvent"* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::WebInputEvent"* %1 to %"class.blink::WebMouseWheelEvent"*
  %4 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 1
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 5
  %7 = load float, float* %6, align 4
  %8 = fmul float %5, %7
  %9 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %3, i64 0, i32 1
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %3, i64 0, i32 5
  %12 = load float, float* %11, align 4
  %13 = fmul float %10, %12
  %14 = fadd float %8, %13
  %15 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 2
  %16 = load float, float* %15, align 8
  %17 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 6
  %18 = load float, float* %17, align 8
  %19 = fmul float %16, %18
  %20 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 2, i32 4
  %21 = bitcast i32* %20 to float*
  %22 = load float, float* %21, align 8
  %23 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 3, i32 1
  %24 = load float, float* %23, align 8
  %25 = fmul float %22, %24
  %26 = fadd float %19, %25
  %27 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 3
  %28 = load float, float* %27, align 4
  %29 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 4
  %30 = load float, float* %29, align 8
  %31 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 0, i32 1, i32 8
  %32 = load i32, i32* %31, align 8
  %33 = sitofp i32 %32 to float
  %34 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 0, i32 1, i32 9
  %35 = load i32, i32* %34, align 4
  %36 = sitofp i32 %35 to float
  %37 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 7
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 10
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 0, i32 1
  %43 = bitcast float* %41 to i8*
  %44 = bitcast float* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 32, i1 false) #8
  %45 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 0, i32 1
  %46 = bitcast %"class.blink::WebPointerProperties"* %45 to i8*
  %47 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 1
  %48 = bitcast %"class.blink::WebInputEvent"* %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %48, i64 60, i1 false) #8
  %49 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 0, i32 2
  %50 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %3, i64 0, i32 0, i32 2
  %51 = bitcast i32* %50 to i64*
  %52 = bitcast i32* %49 to i64*
  %53 = load i64, i64* %51, align 4
  store i64 %53, i64* %52, align 4
  %54 = bitcast float* %4 to i8*
  %55 = bitcast float* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %54, i8* align 4 %55, i64 46, i1 false) #8
  %56 = load float, float* %4, align 4
  %57 = load float, float* %15, align 8
  %58 = load float, float* %27, align 4
  %59 = load float, float* %29, align 8
  %60 = insertelement <4 x float> undef, float %5, i32 0
  %61 = insertelement <4 x float> %60, float %57, i32 1
  %62 = insertelement <4 x float> %61, float %58, i32 2
  %63 = insertelement <4 x float> %62, float %59, i32 3
  %64 = insertelement <4 x float> undef, float %56, i32 0
  %65 = insertelement <4 x float> %64, float %16, i32 1
  %66 = insertelement <4 x float> %65, float %28, i32 2
  %67 = insertelement <4 x float> %66, float %30, i32 3
  %68 = fadd <4 x float> %63, %67
  %69 = bitcast float* %4 to <4 x float>*
  store <4 x float> %68, <4 x float>* %69, align 4
  %70 = load i32, i32* %31, align 8
  %71 = sitofp i32 %70 to float
  %72 = fadd float %33, %71
  %73 = fptosi float %72 to i32
  store i32 %73, i32* %31, align 8
  %74 = load i32, i32* %34, align 4
  %75 = sitofp i32 %74 to float
  %76 = fadd float %36, %75
  %77 = fptosi float %76 to i32
  store i32 %77, i32* %34, align 4
  %78 = fcmp oeq float %14, 0.000000e+00
  %79 = extractelement <4 x float> %68, i32 0
  %80 = fcmp oeq float %79, 0.000000e+00
  %81 = or i1 %78, %80
  %82 = fdiv float %14, %79
  %83 = select i1 %81, float 1.000000e+00, float %82
  store float %83, float* %6, align 4
  %84 = fcmp oeq float %26, 0.000000e+00
  %85 = extractelement <4 x float> %68, i32 1
  %86 = fcmp oeq float %85, 0.000000e+00
  %87 = or i1 %84, %86
  %88 = fdiv float %26, %85
  %89 = select i1 %87, float 1.000000e+00, float %88
  store float %89, float* %17, align 8
  %90 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 3, i32 3
  %91 = bitcast %"class.base::TimeTicks"* %90 to i32*
  %92 = load i32, i32* %91, align 8
  %93 = tail call i32 @_ZN5blink13WebInputEvent18MergeDispatchTypesENS_5mojom12DispatchTypeES2_(i32 %40, i32 %92) #8
  store i32 %93, i32* %39, align 8
  %94 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 3, i32 4
  %95 = bitcast i32* %94 to i8*
  %96 = load i8, i8* %95, align 8, !range !2
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %104, label %98

98:                                               ; preds = %2
  %99 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 3, i32 2
  %100 = bitcast %"class.gfx::Vector2dF"* %99 to i32*
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %101, %38
  br i1 %102, label %104, label %103

103:                                              ; preds = %98
  store i32 1, i32* %37, align 4
  br label %104

104:                                              ; preds = %98, %2, %103
  ret void
}

declare i32 @_ZN5blink13WebInputEvent18MergeDispatchTypesENS_5mojom12DispatchTypeES2_(i32, i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK5blink18WebMouseWheelEvent17DeltaXInRootFrameEv(%"class.blink::WebMouseWheelEvent"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 1
  %3 = load float, float* %2, align 4
  %4 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load float, float* %4, align 8
  %6 = fdiv float %3, %5
  ret float %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK5blink18WebMouseWheelEvent17DeltaYInRootFrameEv(%"class.blink::WebMouseWheelEvent"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 2
  %3 = load float, float* %2, align 8
  %4 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load float, float* %4, align 8
  %6 = fdiv float %3, %5
  ret float %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink18WebMouseWheelEvent16FlattenTransformEv(%"class.blink::WebMouseWheelEvent"* noalias sret, %"class.blink::WebMouseWheelEvent"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::WebMouseWheelEvent"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 bitcast (<{ <{ { i32 (...)**, float, %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", i32, i32 }, { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, [3 x i8], %"class.gfx::PointF", %"class.gfx::PointF" }, i32, i32 }>, float, float, float, float, float, float, i32, i32, i32, i32, i32, i8, i8, [6 x i8] }>* @__const._ZNK5blink18WebMouseWheelEvent16FlattenTransformEv.result to i8*), i64 160, i1 false)
  %4 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %1, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast float* %5 to i8*
  %8 = bitcast float* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 32, i1 false) #8
  %9 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 0, i32 1
  %10 = bitcast %"class.blink::WebPointerProperties"* %9 to i8*
  %11 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %1, i64 0, i32 0, i32 1
  %12 = bitcast %"class.blink::WebPointerProperties"* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %12, i64 60, i1 false) #8
  %13 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %1, i64 0, i32 0, i32 2
  %15 = bitcast i32* %14 to i64*
  %16 = bitcast i32* %13 to i64*
  %17 = load i64, i64* %15, align 4
  store i64 %17, i64* %16, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink18WebMouseWheelEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %18 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %1, i64 0, i32 1
  %20 = bitcast float* %18 to i8*
  %21 = bitcast float* %19 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %20, i8* align 4 %21, i64 46, i1 false) #8
  %22 = load float, float* %5, align 8
  %23 = load float, float* %18, align 4
  %24 = fdiv float %23, %22
  store float %24, float* %18, align 4
  %25 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 2
  %26 = load float, float* %25, align 8
  %27 = fdiv float %26, %22
  store float %27, float* %25, align 8
  %28 = bitcast %"class.blink::WebMouseWheelEvent"* %0 to %"class.blink::WebMouseEvent"*
  tail call void @_ZN5blink13WebMouseEvent20FlattenTransformSelfEv(%"class.blink::WebMouseEvent"* %28) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN5blink13WebMouseEvent20FlattenTransformSelfEv(%"class.blink::WebMouseEvent"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13WebInputEventD2Ev(%"class.blink::WebInputEvent"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink18WebMouseWheelEvent37GetPlatformSpecificDefaultEventActionERKS0_(%"class.blink::WebMouseWheelEvent"* nocapture readonly dereferenceable(160)) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 13
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 0, i32 0, i32 5
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %37

10:                                               ; preds = %5, %1
  %11 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 1
  %12 = load float, float* %11, align 4
  %13 = fcmp oeq float %12, 0.000000e+00
  br i1 %13, label %14, label %19

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 0, i32 0, i32 5
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %37

19:                                               ; preds = %14, %10
  %20 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 9
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %37, label %23

23:                                               ; preds = %19
  %24 = fcmp une float %12, 0.000000e+00
  br i1 %24, label %25, label %29

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 2
  %27 = load float, float* %26, align 8
  %28 = fcmp oeq float %27, 0.000000e+00
  br i1 %28, label %37, label %29

29:                                               ; preds = %25, %23
  %30 = icmp eq i32 %21, 2
  br i1 %30, label %37, label %31

31:                                               ; preds = %29
  br i1 %13, label %32, label %36

32:                                               ; preds = %31
  %33 = getelementptr inbounds %"class.blink::WebMouseWheelEvent", %"class.blink::WebMouseWheelEvent"* %0, i64 0, i32 2
  %34 = load float, float* %33, align 8
  %35 = fcmp une float %34, 0.000000e+00
  br i1 %35, label %37, label %36

36:                                               ; preds = %32, %31
  br label %37

37:                                               ; preds = %29, %32, %19, %25, %14, %5, %36
  %38 = phi i32 [ 1, %36 ], [ 0, %5 ], [ 2, %14 ], [ 2, %25 ], [ 2, %19 ], [ 3, %32 ], [ 3, %29 ]
  ret i32 %38
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18WebMouseWheelEventD0Ev(%"class.blink::WebMouseWheelEvent"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.blink::WebMouseWheelEvent"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

declare void @_ZNK5blink13WebInputEvent18GetScrollInputTypeEv() unnamed_addr

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
