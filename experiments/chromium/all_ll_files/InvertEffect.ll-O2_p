; ModuleID = '../../third_party/skia/modules/skottie/src/effects/InvertEffect.cpp'
source_filename = "../../third_party/skia/modules/skottie/src/effects/InvertEffect.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkColorMatrix = type { %"struct.std::__1::array.52" }
%"struct.std::__1::array.52" = type { [20 x float] }
%"class.skottie::internal::EffectBuilder" = type { %"class.skottie::internal::AnimationBuilder"*, %"class.skottie::internal::CompositionBuilder"*, %struct.SkSize }
%"class.skottie::internal::AnimationBuilder" = type { %class.sk_sp, %"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr", %class.sk_sp.2, %class.sk_sp.3, %class.sk_sp.4, %class.sk_sp.5, %"struct.skottie::Animation::Builder::Stats"*, %struct.SkSize, float, float, i32, %"class.std::__1::vector"*, i8*, i8, %class.SkTHashMap, %class.SkTHashMap.11, %class.SkTHashMap.20 }
%class.sk_sp = type { %"class.skresources::ResourceProvider"* }
%"class.skresources::ResourceProvider" = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr" = type { %class.sk_sp.1 }
%class.sk_sp.1 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.2 = type { %"class.skottie::PropertyObserver"* }
%"class.skottie::PropertyObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.3 = type { %"class.skottie::Logger"* }
%"class.skottie::Logger" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.4 = type { %"class.skottie::MarkerObserver"* }
%"class.skottie::MarkerObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.5 = type { %"class.skottie::PrecompInterceptor"* }
%"class.skottie::PrecompInterceptor" = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.skottie::Animation::Builder::Stats" = type { float, float, float, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.sk_sp.6*, %class.sk_sp.6*, %"class.std::__1::__compressed_pair" }
%class.sk_sp.6 = type { %"class.skottie::internal::Animator"* }
%"class.skottie::internal::Animator" = type { %class.SkRefCnt.base, [4 x i8] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.sk_sp.6* }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.11 = type { %class.SkTHashTable.12 }
%class.SkTHashTable.12 = type { i32, i32, %class.SkAutoTArray.13 }
%class.SkAutoTArray.13 = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.20 = type { %class.SkTHashTable.21 }
%class.SkTHashTable.21 = type { i32, i32, %class.SkAutoTArray.22 }
%class.SkAutoTArray.22 = type { %"class.std::__1::unique_ptr.23" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%"class.skottie::internal::CompositionBuilder" = type { %struct.SkSize, %"class.std::__1::vector.29", %class.SkTHashMap.39, %class.sk_sp.31, i64, float, float }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"class.skottie::internal::LayerBuilder"*, %"class.skottie::internal::LayerBuilder"*, %"class.std::__1::__compressed_pair.34" }
%"class.skottie::internal::LayerBuilder" = type <{ %"class.skjson::ObjectValue"*, i32, i32, i32, i8, [3 x i8], %"struct.skottie::internal::AnimationBuilder::LayerInfo", %class.sk_sp.31, [2 x %class.sk_sp.31], %class.sk_sp.32, %"class.std::__1::vector", i64, i32, [4 x i8] }>
%"class.skjson::ObjectValue" = type { %"class.skjson::VectorValue" }
%"class.skjson::VectorValue" = type { %"class.skjson::Value" }
%"class.skjson::Value" = type { [8 x i8] }
%"struct.skottie::internal::AnimationBuilder::LayerInfo" = type { %struct.SkSize, float, float }
%class.sk_sp.32 = type { %"class.sksg::RenderNode"* }
%"class.sksg::RenderNode" = type { %"class.sksg::Node.base", [6 x i8] }
%"class.sksg::Node.base" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16 }>
%union.anon = type { %"class.sksg::Node"* }
%"class.sksg::Node" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16, [6 x i8] }>
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.skottie::internal::LayerBuilder"* }
%class.SkTHashMap.39 = type { %class.SkTHashTable.40 }
%class.SkTHashTable.40 = type { i32, i32, %class.SkAutoTArray.41 }
%class.SkAutoTArray.41 = type { %"class.std::__1::unique_ptr.42" }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.SkTHashTable<SkTHashMap<int, unsigned long, SkGoodHash>::Pair, int, SkTHashMap<int, unsigned long, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, unsigned long, SkGoodHash>::Pair, int, SkTHashMap<int, unsigned long, SkGoodHash>::Pair>::Slot" = type opaque
%class.sk_sp.31 = type { %"class.sksg::Transform"* }
%"class.sksg::Transform" = type opaque
%struct.SkSize = type { float, float }
%"class.skjson::ArrayValue" = type { %"class.skjson::VectorValue.48" }
%"class.skjson::VectorValue.48" = type { %"class.skjson::Value" }
%"class.skottie::internal::AnimatablePropertyContainer" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.skottie::internal::Animator.base" = type { %class.SkRefCnt.base }
%class.sk_sp.49 = type { %"class.sksg::ExternalColorFilter"* }
%"class.sksg::ExternalColorFilter" = type { %"class.sksg::EffectNode", %class.sk_sp.50 }
%"class.sksg::EffectNode" = type { %"class.sksg::RenderNode.base", %class.sk_sp.32 }
%"class.sksg::RenderNode.base" = type { %"class.sksg::Node.base" }
%class.sk_sp.50 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.skottie::internal::(anonymous namespace)::InvertEffectAdapter" = type <{ %"class.skottie::internal::AnimatablePropertyContainer.base", [7 x i8], %class.sk_sp.49, float, [4 x i8] }>
%"class.skottie::internal::AnimatablePropertyContainer.base" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8 }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

@_ZTVN7skottie8internal12_GLOBAL__N_119InvertEffectAdapterE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::InvertEffectAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_119InvertEffectAdapterD2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::InvertEffectAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_119InvertEffectAdapterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%"class.skottie::internal::AnimatablePropertyContainer"*, float)* @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::InvertEffectAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_119InvertEffectAdapter6onSyncEv to i8*)] }, align 8
@_ZTVN7skottie8internal27AnimatablePropertyContainerE = external unnamed_addr constant { [7 x i8*] }, align 8
@_ZZN7skottie8internal12_GLOBAL__N_119InvertEffectAdapter6onSyncEvE7RGB2YIQ = internal constant %class.SkColorMatrix { %"struct.std::__1::array.52" { [20 x float] [float 0x3FD322D0E0000000, float 0x3FE2C8B440000000, float 0x3FBD2F1AA0000000, float 0.000000e+00, float 0.000000e+00, float 0x3FE3119CE0000000, float 0xBFD1930BE0000000, float 0xBFD4902DE0000000, float 0.000000e+00, float 0.000000e+00, float 0x3FCB126EA0000000, float 0xBFE0B9F560000000, float 0x3FD3EAB360000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00] } }, align 4
@_ZZN7skottie8internal12_GLOBAL__N_119InvertEffectAdapter6onSyncEvE7YIQ2RGB = internal constant %class.SkColorMatrix { %"struct.std::__1::array.52" { [20 x float] [float 1.000000e+00, float 0x3FEE978D40000000, float 0x3FE3CED920000000, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0xBFD16872C0000000, float 0xBFE4B43960000000, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0xBFF1B22D00000000, float 0x3FFB3F7CE0000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00] } }, align 4
@switch.table._ZN7skottie8internal12_GLOBAL__N_119InvertEffectAdapter6onSyncEv = private unnamed_addr constant [16 x float] [float 1.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], align 4
@switch.table._ZN7skottie8internal12_GLOBAL__N_119InvertEffectAdapter6onSyncEv.1 = private unnamed_addr constant [16 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], align 4
@switch.table._ZN7skottie8internal12_GLOBAL__N_119InvertEffectAdapter6onSyncEv.2 = private unnamed_addr constant [16 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00], align 4
@switch.table._ZN7skottie8internal12_GLOBAL__N_119InvertEffectAdapter6onSyncEv.3 = private unnamed_addr constant [16 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 1, i32 1, i32 0, i32 2, i32 2, i32 2, i32 2, i32 0, i32 0], align 4
@switch.table._ZN7skottie8internal12_GLOBAL__N_119InvertEffectAdapter6onSyncEv.4 = private unnamed_addr constant [16 x float] [float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float -1.000000e+00], align 4
@switch.table._ZN7skottie8internal12_GLOBAL__N_119InvertEffectAdapter6onSyncEv.5 = private unnamed_addr constant [16 x float] [float -1.000000e+00, float 1.000000e+00, float 1.000000e+00, float -1.000000e+00, float 1.000000e+00, float -1.000000e+00, float 1.000000e+00, float -1.000000e+00, float 1.000000e+00, float 1.000000e+00, float -1.000000e+00, float 1.000000e+00, float 1.000000e+00, float -1.000000e+00, float 1.000000e+00, float 1.000000e+00], align 4
@switch.table._ZN7skottie8internal12_GLOBAL__N_119InvertEffectAdapter6onSyncEv.6 = private unnamed_addr constant [16 x float] [float -1.000000e+00, float 1.000000e+00, float -1.000000e+00, float 1.000000e+00, float 1.000000e+00, float -1.000000e+00, float 1.000000e+00, float 1.000000e+00, float -1.000000e+00, float 1.000000e+00, float -1.000000e+00, float 1.000000e+00, float -1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00], align 4
@switch.table._ZN7skottie8internal12_GLOBAL__N_119InvertEffectAdapter6onSyncEv.7 = private unnamed_addr constant [16 x float] [float -1.000000e+00, float -1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float -1.000000e+00, float -1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float -1.000000e+00, float -1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00], align 4
@switch.table._ZN7skottie8internal12_GLOBAL__N_119InvertEffectAdapter6onSyncEv.8 = private unnamed_addr constant [16 x float] [float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 5.000000e-01, float 5.000000e-01, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7skottie8internal13EffectBuilder18attachInvertEffectERKN6skjson10ArrayValueE5sk_spIN4sksg10RenderNodeEE(%class.sk_sp.32* noalias nocapture sret, %"class.skottie::internal::EffectBuilder"* nocapture readonly, %"class.skjson::ArrayValue"* dereferenceable(8), %class.sk_sp.32* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.32, align 8
  %6 = alloca %class.sk_sp.6, align 8
  %7 = getelementptr inbounds %"class.skottie::internal::EffectBuilder", %"class.skottie::internal::EffectBuilder"* %1, i64 0, i32 0
  %8 = load %"class.skottie::internal::AnimationBuilder"*, %"class.skottie::internal::AnimationBuilder"** %7, align 8
  %9 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %3, i64 0, i32 0
  %10 = bitcast %class.sk_sp.32* %3 to i64*
  %11 = load i64, i64* %10, align 8, !noalias !2
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %9, align 8, !noalias !2
  %12 = load %"class.skottie::internal::AnimationBuilder"*, %"class.skottie::internal::AnimationBuilder"** %7, align 8, !noalias !2
  %13 = tail call i8* @_Znwm(i64 64) #8, !noalias !5
  %14 = bitcast %class.sk_sp.32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9, !noalias !5
  %15 = bitcast i8* %13 to %"class.skottie::internal::AnimatablePropertyContainer"*
  %16 = getelementptr inbounds i8, i8* %13, i64 8
  %17 = bitcast i8* %16 to i32*
  store i32 1, i32* %17, align 4, !noalias !5
  %18 = bitcast i8* %13 to i32 (...)***
  %19 = getelementptr inbounds i8, i8* %13, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 25, i1 false) #9, !noalias !5
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_119InvertEffectAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8, !noalias !5
  %20 = getelementptr inbounds i8, i8* %13, i64 48
  %21 = bitcast i8* %20 to %class.sk_sp.49*
  %22 = bitcast %class.sk_sp.32* %5 to i64*
  store i64 %11, i64* %22, align 8, !noalias !5
  call void @_ZN4sksg19ExternalColorFilter4MakeE5sk_spINS_10RenderNodeEE(%class.sk_sp.49* sret %21, %class.sk_sp.32* nonnull %5) #9, !noalias !5
  %23 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %5, i64 0, i32 0
  %24 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %23, align 8, !noalias !5
  %25 = icmp eq %"class.sksg::RenderNode"* %24, null
  br i1 %25, label %36, label %26

26:                                               ; preds = %4
  %27 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %24, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw add i32* %27, i32 -1 acq_rel, !noalias !8
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %36

30:                                               ; preds = %26
  %31 = bitcast %"class.sksg::RenderNode"* %24 to %class.SkRefCntBase*
  %32 = bitcast %"class.sksg::RenderNode"* %24 to void (%class.SkRefCntBase*)***
  %33 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %32, align 8, !noalias !8
  %34 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %33, i64 2
  %35 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %34, align 8, !noalias !8
  call void %35(%class.SkRefCntBase* nonnull %31) #9, !noalias !8
  br label %36

36:                                               ; preds = %30, %26, %4
  %37 = getelementptr inbounds i8, i8* %13, i64 56
  %38 = bitcast i8* %37 to float*
  store float 0.000000e+00, float* %38, align 8, !noalias !5
  %39 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 0) #9, !noalias !5
  %40 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %39, i64 0, i32 0, i64 0
  %41 = load i8, i8* %40, align 8, !noalias !5
  %42 = and i8 %41, 7
  %43 = icmp eq i8 %42, 7
  %44 = bitcast %"class.skjson::Value"* %39 to %"class.skjson::ObjectValue"*
  %45 = select i1 %43, %"class.skjson::ObjectValue"* %44, %"class.skjson::ObjectValue"* null
  %46 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %15, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %12, %"class.skjson::ObjectValue"* %45, float* %38) #9, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9, !noalias !5
  %47 = ptrtoint i8* %13 to i64
  %48 = bitcast i8* %20 to %"class.sksg::ExternalColorFilter"**
  %49 = load %"class.sksg::ExternalColorFilter"*, %"class.sksg::ExternalColorFilter"** %48, align 8, !noalias !2
  %50 = icmp eq %"class.sksg::ExternalColorFilter"* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %36
  %52 = getelementptr inbounds %"class.sksg::ExternalColorFilter", %"class.sksg::ExternalColorFilter"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw add i32* %52, i32 1 monotonic
  br label %54

54:                                               ; preds = %36, %51
  %55 = ptrtoint %"class.sksg::ExternalColorFilter"* %49 to i64
  %56 = bitcast i8* %19 to %class.sk_sp.6**
  %57 = load %class.sk_sp.6*, %class.sk_sp.6** %56, align 8, !noalias !2
  %58 = getelementptr inbounds i8, i8* %13, i64 24
  %59 = bitcast i8* %58 to %class.sk_sp.6**
  %60 = load %class.sk_sp.6*, %class.sk_sp.6** %59, align 8, !noalias !2
  %61 = icmp eq %class.sk_sp.6* %57, %60
  br i1 %61, label %94, label %62

62:                                               ; preds = %54
  %63 = getelementptr inbounds %"class.skottie::internal::AnimationBuilder", %"class.skottie::internal::AnimationBuilder"* %8, i64 0, i32 11
  %64 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %63, align 8, !noalias !2
  %65 = bitcast %class.sk_sp.6* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #9, !noalias !2
  %66 = bitcast %class.sk_sp.6* %6 to i64*
  store i64 %47, i64* %66, align 8, !noalias !2
  %67 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %64, i64 0, i32 0, i32 1
  %68 = load %class.sk_sp.6*, %class.sk_sp.6** %67, align 8
  %69 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %64, i64 0, i32 0, i32 2, i32 0, i32 0
  %70 = load %class.sk_sp.6*, %class.sk_sp.6** %69, align 8
  %71 = icmp ult %class.sk_sp.6* %68, %70
  br i1 %71, label %72, label %78

72:                                               ; preds = %62
  %73 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %6, i64 0, i32 0
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %73, align 8, !noalias !2
  %74 = bitcast %class.sk_sp.6* %68 to i64*
  store i64 %47, i64* %74, align 8
  %75 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %68, i64 1
  %76 = ptrtoint %class.sk_sp.6* %75 to i64
  %77 = bitcast %class.sk_sp.6** %67 to i64*
  store i64 %76, i64* %77, align 8
  br label %79

78:                                               ; preds = %62
  call void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"* %64, %class.sk_sp.6* nonnull dereferenceable(8) %6) #9
  br label %79

79:                                               ; preds = %78, %72
  %80 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %6, i64 0, i32 0
  %81 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %80, align 8, !noalias !2
  %82 = icmp eq %"class.skottie::internal::Animator"* %81, null
  br i1 %82, label %93, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %81, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = atomicrmw add i32* %84, i32 -1 acq_rel
  %86 = icmp eq i32 %85, 1
  br i1 %86, label %87, label %93

87:                                               ; preds = %83
  %88 = bitcast %"class.skottie::internal::Animator"* %81 to %class.SkRefCntBase*
  %89 = bitcast %"class.skottie::internal::Animator"* %81 to void (%class.SkRefCntBase*)***
  %90 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %89, align 8
  %91 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %90, i64 2
  %92 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %91, align 8
  call void %92(%class.SkRefCntBase* nonnull %88) #9
  br label %93

93:                                               ; preds = %87, %83, %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #9, !noalias !2
  br label %109

94:                                               ; preds = %54
  %95 = bitcast i8* %13 to %"class.skottie::internal::Animator"*
  %96 = bitcast i8* %13 to i1 (%"class.skottie::internal::Animator"*, float)***
  %97 = load i1 (%"class.skottie::internal::Animator"*, float)**, i1 (%"class.skottie::internal::Animator"*, float)*** %96, align 8, !noalias !2
  %98 = getelementptr inbounds i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %97, i64 3
  %99 = load i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %98, align 8
  %100 = call zeroext i1 %99(%"class.skottie::internal::Animator"* nonnull %95, float 0.000000e+00) #9
  %101 = atomicrmw add i32* %17, i32 -1 acq_rel, !noalias !2
  %102 = icmp eq i32 %101, 1
  br i1 %102, label %103, label %109

103:                                              ; preds = %94
  %104 = bitcast i8* %13 to %class.SkRefCntBase*
  %105 = bitcast i8* %13 to void (%class.SkRefCntBase*)***
  %106 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %105, align 8, !noalias !2
  %107 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %106, i64 2
  %108 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %107, align 8
  call void %108(%class.SkRefCntBase* nonnull %104) #9
  br label %109

109:                                              ; preds = %103, %94, %93
  %110 = bitcast %class.sk_sp.32* %0 to i64*
  store i64 %55, i64* %110, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN4sksg19ExternalColorFilter4MakeE5sk_spINS_10RenderNodeEE(%class.sk_sp.49* sret, %class.sk_sp.32*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_119InvertEffectAdapterD2Ev(%"class.skottie::internal::(anonymous namespace)::InvertEffectAdapter"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::InvertEffectAdapter", %"class.skottie::internal::(anonymous namespace)::InvertEffectAdapter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_119InvertEffectAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::InvertEffectAdapter", %"class.skottie::internal::(anonymous namespace)::InvertEffectAdapter"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.sksg::ExternalColorFilter"*, %"class.sksg::ExternalColorFilter"** %3, align 8
  %5 = icmp eq %"class.sksg::ExternalColorFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.sksg::ExternalColorFilter", %"class.sksg::ExternalColorFilter"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.sksg::ExternalColorFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.sksg::ExternalColorFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #9
  br label %16

16:                                               ; preds = %1, %6, %10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::InvertEffectAdapter", %"class.skottie::internal::(anonymous namespace)::InvertEffectAdapter"* %0, i64 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %19 = load %class.sk_sp.6*, %class.sk_sp.6** %18, align 8
  %20 = icmp eq %class.sk_sp.6* %19, null
  br i1 %20, label %49, label %21

21:                                               ; preds = %16
  %22 = bitcast %class.sk_sp.6* %19 to i8*
  %23 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::InvertEffectAdapter", %"class.skottie::internal::(anonymous namespace)::InvertEffectAdapter"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %24 = load %class.sk_sp.6*, %class.sk_sp.6** %23, align 8
  %25 = icmp eq %class.sk_sp.6* %24, %19
  br i1 %25, label %47, label %26

26:                                               ; preds = %21, %42
  %27 = phi %class.sk_sp.6* [ %28, %42 ], [ %24, %21 ]
  %28 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %27, i64 -1
  %29 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %28, i64 0, i32 0
  %30 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %29, align 8
  %31 = icmp eq %"class.skottie::internal::Animator"* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %"class.skottie::internal::Animator"* %30 to %class.SkRefCntBase*
  %38 = bitcast %"class.skottie::internal::Animator"* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  tail call void %41(%class.SkRefCntBase* nonnull %37) #9
  br label %42

42:                                               ; preds = %36, %32, %26
  %43 = icmp eq %class.sk_sp.6* %28, %19
  br i1 %43, label %44, label %26

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::vector"* %17 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %21
  %48 = phi i8* [ %46, %44 ], [ %22, %21 ]
  store %class.sk_sp.6* %19, %class.sk_sp.6** %23, align 8
  tail call void @_ZdlPv(i8* %48) #8
  br label %49

49:                                               ; preds = %16, %47
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_119InvertEffectAdapterD0Ev(%"class.skottie::internal::(anonymous namespace)::InvertEffectAdapter"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::InvertEffectAdapter", %"class.skottie::internal::(anonymous namespace)::InvertEffectAdapter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_119InvertEffectAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::InvertEffectAdapter", %"class.skottie::internal::(anonymous namespace)::InvertEffectAdapter"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.sksg::ExternalColorFilter"*, %"class.sksg::ExternalColorFilter"** %3, align 8
  %5 = icmp eq %"class.sksg::ExternalColorFilter"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.sksg::ExternalColorFilter", %"class.sksg::ExternalColorFilter"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.sksg::ExternalColorFilter"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.sksg::ExternalColorFilter"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #9
  br label %16

16:                                               ; preds = %10, %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::InvertEffectAdapter", %"class.skottie::internal::(anonymous namespace)::InvertEffectAdapter"* %0, i64 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %19 = load %class.sk_sp.6*, %class.sk_sp.6** %18, align 8
  %20 = icmp eq %class.sk_sp.6* %19, null
  br i1 %20, label %49, label %21

21:                                               ; preds = %16
  %22 = bitcast %class.sk_sp.6* %19 to i8*
  %23 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::InvertEffectAdapter", %"class.skottie::internal::(anonymous namespace)::InvertEffectAdapter"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %24 = load %class.sk_sp.6*, %class.sk_sp.6** %23, align 8
  %25 = icmp eq %class.sk_sp.6* %24, %19
  br i1 %25, label %47, label %26

26:                                               ; preds = %21, %42
  %27 = phi %class.sk_sp.6* [ %28, %42 ], [ %24, %21 ]
  %28 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %27, i64 -1
  %29 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %28, i64 0, i32 0
  %30 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %29, align 8
  %31 = icmp eq %"class.skottie::internal::Animator"* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %"class.skottie::internal::Animator"* %30 to %class.SkRefCntBase*
  %38 = bitcast %"class.skottie::internal::Animator"* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  tail call void %41(%class.SkRefCntBase* nonnull %37) #9
  br label %42

42:                                               ; preds = %36, %32, %26
  %43 = icmp eq %class.sk_sp.6* %28, %19
  br i1 %43, label %44, label %26

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::vector"* %17 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %21
  %48 = phi i8* [ %46, %44 ], [ %22, %21 ]
  store %class.sk_sp.6* %19, %class.sk_sp.6** %23, align 8
  tail call void @_ZdlPv(i8* %48) #8
  br label %49

49:                                               ; preds = %16, %47
  %50 = bitcast %"class.skottie::internal::(anonymous namespace)::InvertEffectAdapter"* %0 to i8*
  tail call void @_ZdlPv(i8* %50) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #9
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf(%"class.skottie::internal::AnimatablePropertyContainer"*, float) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_119InvertEffectAdapter6onSyncEv(%"class.skottie::internal::(anonymous namespace)::InvertEffectAdapter"*) unnamed_addr #0 align 2 {
  %2 = alloca %class.SkColorMatrix, align 4
  %3 = alloca %class.sk_sp.50, align 8
  %4 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::InvertEffectAdapter", %"class.skottie::internal::(anonymous namespace)::InvertEffectAdapter"* %0, i64 0, i32 3
  %5 = load float, float* %4, align 8
  %6 = fptoui float %5 to i8
  %7 = add i8 %6, -1
  %8 = icmp ult i8 %7, 16
  br i1 %8, label %9, label %37

9:                                                ; preds = %1
  %10 = sext i8 %7 to i64
  %11 = getelementptr inbounds [16 x float], [16 x float]* @switch.table._ZN7skottie8internal12_GLOBAL__N_119InvertEffectAdapter6onSyncEv, i64 0, i64 %10
  %12 = load float, float* %11, align 4
  %13 = sext i8 %7 to i64
  %14 = getelementptr inbounds [16 x float], [16 x float]* @switch.table._ZN7skottie8internal12_GLOBAL__N_119InvertEffectAdapter6onSyncEv.1, i64 0, i64 %13
  %15 = load float, float* %14, align 4
  %16 = sext i8 %7 to i64
  %17 = getelementptr inbounds [16 x float], [16 x float]* @switch.table._ZN7skottie8internal12_GLOBAL__N_119InvertEffectAdapter6onSyncEv.2, i64 0, i64 %16
  %18 = load float, float* %17, align 4
  %19 = sext i8 %7 to i64
  %20 = getelementptr inbounds [16 x i32], [16 x i32]* @switch.table._ZN7skottie8internal12_GLOBAL__N_119InvertEffectAdapter6onSyncEv.3, i64 0, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = sext i8 %7 to i64
  %23 = getelementptr inbounds [16 x float], [16 x float]* @switch.table._ZN7skottie8internal12_GLOBAL__N_119InvertEffectAdapter6onSyncEv.4, i64 0, i64 %22
  %24 = load float, float* %23, align 4
  %25 = sext i8 %7 to i64
  %26 = getelementptr inbounds [16 x float], [16 x float]* @switch.table._ZN7skottie8internal12_GLOBAL__N_119InvertEffectAdapter6onSyncEv.5, i64 0, i64 %25
  %27 = load float, float* %26, align 4
  %28 = sext i8 %7 to i64
  %29 = getelementptr inbounds [16 x float], [16 x float]* @switch.table._ZN7skottie8internal12_GLOBAL__N_119InvertEffectAdapter6onSyncEv.6, i64 0, i64 %28
  %30 = load float, float* %29, align 4
  %31 = sext i8 %7 to i64
  %32 = getelementptr inbounds [16 x float], [16 x float]* @switch.table._ZN7skottie8internal12_GLOBAL__N_119InvertEffectAdapter6onSyncEv.7, i64 0, i64 %31
  %33 = load float, float* %32, align 4
  %34 = sext i8 %7 to i64
  %35 = getelementptr inbounds [16 x float], [16 x float]* @switch.table._ZN7skottie8internal12_GLOBAL__N_119InvertEffectAdapter6onSyncEv.8, i64 0, i64 %34
  %36 = load float, float* %35, align 4
  br label %37

37:                                               ; preds = %1, %9
  %38 = phi float [ %12, %9 ], [ 0.000000e+00, %1 ]
  %39 = phi float [ %15, %9 ], [ 0.000000e+00, %1 ]
  %40 = phi float [ %18, %9 ], [ 0.000000e+00, %1 ]
  %41 = phi i32 [ %21, %9 ], [ 0, %1 ]
  %42 = phi float [ %24, %9 ], [ 1.000000e+00, %1 ]
  %43 = phi float [ %27, %9 ], [ 1.000000e+00, %1 ]
  %44 = phi float [ %30, %9 ], [ 1.000000e+00, %1 ]
  %45 = phi float [ %33, %9 ], [ 1.000000e+00, %1 ]
  %46 = phi float [ %36, %9 ], [ 0.000000e+00, %1 ]
  %47 = bitcast %class.SkColorMatrix* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %47) #9
  %48 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %2, i64 0, i32 0, i32 0, i64 0
  store float %45, float* %48, align 4
  %49 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %2, i64 0, i32 0, i32 0, i64 1
  store float 0.000000e+00, float* %49, align 4
  %50 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %2, i64 0, i32 0, i32 0, i64 2
  store float 0.000000e+00, float* %50, align 4
  %51 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %2, i64 0, i32 0, i32 0, i64 3
  store float 0.000000e+00, float* %51, align 4
  %52 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %2, i64 0, i32 0, i32 0, i64 4
  store float %46, float* %52, align 4
  %53 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %2, i64 0, i32 0, i32 0, i64 5
  store float 0.000000e+00, float* %53, align 4
  %54 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %2, i64 0, i32 0, i32 0, i64 6
  store float %44, float* %54, align 4
  %55 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %2, i64 0, i32 0, i32 0, i64 7
  store float 0.000000e+00, float* %55, align 4
  %56 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %2, i64 0, i32 0, i32 0, i64 8
  store float 0.000000e+00, float* %56, align 4
  %57 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %2, i64 0, i32 0, i32 0, i64 9
  store float %38, float* %57, align 4
  %58 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %2, i64 0, i32 0, i32 0, i64 10
  store float 0.000000e+00, float* %58, align 4
  %59 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %2, i64 0, i32 0, i32 0, i64 11
  store float 0.000000e+00, float* %59, align 4
  %60 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %2, i64 0, i32 0, i32 0, i64 12
  store float %43, float* %60, align 4
  %61 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %2, i64 0, i32 0, i32 0, i64 13
  store float 0.000000e+00, float* %61, align 4
  %62 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %2, i64 0, i32 0, i32 0, i64 14
  store float %39, float* %62, align 4
  %63 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %2, i64 0, i32 0, i32 0, i64 15
  store float 0.000000e+00, float* %63, align 4
  %64 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %2, i64 0, i32 0, i32 0, i64 16
  store float 0.000000e+00, float* %64, align 4
  %65 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %2, i64 0, i32 0, i32 0, i64 17
  store float 0.000000e+00, float* %65, align 4
  %66 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %2, i64 0, i32 0, i32 0, i64 18
  store float %42, float* %66, align 4
  %67 = getelementptr inbounds %class.SkColorMatrix, %class.SkColorMatrix* %2, i64 0, i32 0, i32 0, i64 19
  store float %40, float* %67, align 4
  %68 = icmp eq i32 %41, 2
  br i1 %68, label %69, label %73

69:                                               ; preds = %37
  call void @_ZN13SkColorMatrix9setConcatERKS_S1_(%class.SkColorMatrix* nonnull %2, %class.SkColorMatrix* nonnull dereferenceable(80) %2, %class.SkColorMatrix* nonnull dereferenceable(80) @_ZZN7skottie8internal12_GLOBAL__N_119InvertEffectAdapter6onSyncEvE7RGB2YIQ) #9
  call void @_ZN13SkColorMatrix9setConcatERKS_S1_(%class.SkColorMatrix* nonnull %2, %class.SkColorMatrix* nonnull dereferenceable(80) @_ZZN7skottie8internal12_GLOBAL__N_119InvertEffectAdapter6onSyncEvE7YIQ2RGB, %class.SkColorMatrix* nonnull dereferenceable(80) %2) #9
  %70 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::InvertEffectAdapter", %"class.skottie::internal::(anonymous namespace)::InvertEffectAdapter"* %0, i64 0, i32 2, i32 0
  %71 = load %"class.sksg::ExternalColorFilter"*, %"class.sksg::ExternalColorFilter"** %70, align 8
  %72 = bitcast %class.sk_sp.50* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #9
  br label %79

73:                                               ; preds = %37
  %74 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::InvertEffectAdapter", %"class.skottie::internal::(anonymous namespace)::InvertEffectAdapter"* %0, i64 0, i32 2, i32 0
  %75 = load %"class.sksg::ExternalColorFilter"*, %"class.sksg::ExternalColorFilter"** %74, align 8
  %76 = bitcast %class.sk_sp.50* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #9
  %77 = icmp eq i32 %41, 1
  br i1 %77, label %78, label %79

78:                                               ; preds = %73
  call void @_ZN14SkColorFilters10HSLAMatrixERK13SkColorMatrix(%class.sk_sp.50* nonnull sret %3, %class.SkColorMatrix* nonnull dereferenceable(80) %2) #9
  br label %82

79:                                               ; preds = %69, %73
  %80 = phi i8* [ %72, %69 ], [ %76, %73 ]
  %81 = phi %"class.sksg::ExternalColorFilter"* [ %71, %69 ], [ %75, %73 ]
  call void @_ZN14SkColorFilters6MatrixERK13SkColorMatrix(%class.sk_sp.50* nonnull sret %3, %class.SkColorMatrix* nonnull dereferenceable(80) %2) #9
  br label %82

82:                                               ; preds = %79, %78
  %83 = phi i8* [ %80, %79 ], [ %76, %78 ]
  %84 = phi %"class.sksg::ExternalColorFilter"* [ %81, %79 ], [ %75, %78 ]
  %85 = getelementptr inbounds %"class.sksg::ExternalColorFilter", %"class.sksg::ExternalColorFilter"* %84, i64 0, i32 1
  %86 = getelementptr inbounds %class.sk_sp.50, %class.sk_sp.50* %85, i64 0, i32 0
  %87 = load %class.SkColorFilter*, %class.SkColorFilter** %86, align 8
  %88 = getelementptr inbounds %class.sk_sp.50, %class.sk_sp.50* %3, i64 0, i32 0
  %89 = load %class.SkColorFilter*, %class.SkColorFilter** %88, align 8
  %90 = icmp eq %class.SkColorFilter* %87, %89
  br i1 %90, label %108, label %91

91:                                               ; preds = %82
  %92 = ptrtoint %class.SkColorFilter* %89 to i64
  store %class.SkColorFilter* null, %class.SkColorFilter** %88, align 8
  %93 = bitcast %class.sk_sp.50* %85 to i64*
  store i64 %92, i64* %93, align 8
  %94 = icmp eq %class.SkColorFilter* %87, null
  br i1 %94, label %105, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %87, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = atomicrmw add i32* %96, i32 -1 acq_rel
  %98 = icmp eq i32 %97, 1
  br i1 %98, label %99, label %105

99:                                               ; preds = %95
  %100 = bitcast %class.SkColorFilter* %87 to %class.SkRefCntBase*
  %101 = bitcast %class.SkColorFilter* %87 to void (%class.SkRefCntBase*)***
  %102 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %101, align 8
  %103 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %102, i64 2
  %104 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %103, align 8
  call void %104(%class.SkRefCntBase* nonnull %100) #9
  br label %105

105:                                              ; preds = %99, %95, %91
  %106 = bitcast %"class.sksg::ExternalColorFilter"* %84 to %"class.sksg::Node"*
  call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %106, i1 zeroext true) #9
  %107 = load %class.SkColorFilter*, %class.SkColorFilter** %88, align 8
  br label %108

108:                                              ; preds = %82, %105
  %109 = phi %class.SkColorFilter* [ %87, %82 ], [ %107, %105 ]
  %110 = icmp eq %class.SkColorFilter* %109, null
  br i1 %110, label %121, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %109, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = atomicrmw add i32* %112, i32 -1 acq_rel
  %114 = icmp eq i32 %113, 1
  br i1 %114, label %115, label %121

115:                                              ; preds = %111
  %116 = bitcast %class.SkColorFilter* %109 to %class.SkRefCntBase*
  %117 = bitcast %class.SkColorFilter* %109 to void (%class.SkRefCntBase*)***
  %118 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %117, align 8
  %119 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %118, i64 2
  %120 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %119, align 8
  call void %120(%class.SkRefCntBase* nonnull %116) #9
  br label %121

121:                                              ; preds = %108, %111, %115
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #9
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %47) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8), i64) local_unnamed_addr #3

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152), %"class.skjson::ObjectValue"*, float*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN14SkColorFilters10HSLAMatrixERK13SkColorMatrix(%class.sk_sp.50* sret, %class.SkColorMatrix* dereferenceable(80)) local_unnamed_addr #3

declare void @_ZN14SkColorFilters6MatrixERK13SkColorMatrix(%class.sk_sp.50* sret, %class.SkColorMatrix* dereferenceable(80)) local_unnamed_addr #3

declare void @_ZN13SkColorMatrix9setConcatERKS_S1_(%class.SkColorMatrix*, %class.SkColorMatrix* dereferenceable(80), %class.SkColorMatrix* dereferenceable(80)) local_unnamed_addr #3

declare void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"*, %class.sk_sp.6* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.sk_sp.6** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #10
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.sk_sp.6** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #10
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #8
  %33 = bitcast i8* %32 to %class.sk_sp.6*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.sk_sp.6* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 %9
  %38 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 %35
  %39 = ptrtoint %class.sk_sp.6* %38 to i64
  %40 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %1, i64 0, i32 0
  %41 = bitcast %class.sk_sp.6* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %40, align 8
  %43 = bitcast %class.sk_sp.6* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %37, i64 1
  %45 = ptrtoint %class.sk_sp.6* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %class.sk_sp.6*, %class.sk_sp.6** %46, align 8
  %48 = ptrtoint %class.sk_sp.6* %47 to i64
  %49 = load %class.sk_sp.6*, %class.sk_sp.6** %3, align 8
  %50 = icmp eq %class.sk_sp.6* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %class.sk_sp.6, %class.sk_sp.6* %49, i64 -1, i32 0
  %53 = ptrtoint %"class.skottie::internal::Animator"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %class.sk_sp.6* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %class.sk_sp.6* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %60, i64 -1
  %64 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %61, i64 -1
  %65 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %64, i64 0, i32 0
  %66 = bitcast %class.sk_sp.6* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %65, align 8
  %68 = bitcast %class.sk_sp.6* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !9

71:                                               ; preds = %59, %51
  %72 = phi %class.sk_sp.6* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %class.sk_sp.6* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %class.sk_sp.6* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %class.sk_sp.6* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %class.sk_sp.6* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -1
  %80 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -1
  %81 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %80, i64 0, i32 0
  %82 = bitcast %class.sk_sp.6* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %81, align 8
  %84 = bitcast %class.sk_sp.6* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -2
  %86 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -2
  %87 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %86, i64 0, i32 0
  %88 = bitcast %class.sk_sp.6* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %87, align 8
  %90 = bitcast %class.sk_sp.6* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -3
  %92 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -3
  %93 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %92, i64 0, i32 0
  %94 = bitcast %class.sk_sp.6* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %93, align 8
  %96 = bitcast %class.sk_sp.6* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -4
  %98 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -4
  %99 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %98, i64 0, i32 0
  %100 = bitcast %class.sk_sp.6* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %99, align 8
  %102 = bitcast %class.sk_sp.6* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -5
  %104 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -5
  %105 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %104, i64 0, i32 0
  %106 = bitcast %class.sk_sp.6* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %105, align 8
  %108 = bitcast %class.sk_sp.6* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -6
  %110 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -6
  %111 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %110, i64 0, i32 0
  %112 = bitcast %class.sk_sp.6* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %111, align 8
  %114 = bitcast %class.sk_sp.6* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -7
  %116 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -7
  %117 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %116, i64 0, i32 0
  %118 = bitcast %class.sk_sp.6* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %117, align 8
  %120 = bitcast %class.sk_sp.6* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -8
  %122 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -8
  %123 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %122, i64 0, i32 0
  %124 = bitcast %class.sk_sp.6* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %123, align 8
  %126 = bitcast %class.sk_sp.6* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %class.sk_sp.6* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %class.sk_sp.6* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %class.sk_sp.6*, %class.sk_sp.6** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %class.sk_sp.6* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %class.sk_sp.6* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %class.sk_sp.6* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %class.sk_sp.6*
  %138 = icmp eq %class.sk_sp.6* %133, %137
  br i1 %138, label %157, label %139

139:                                              ; preds = %132, %155
  %140 = phi %class.sk_sp.6* [ %141, %155 ], [ %133, %132 ]
  %141 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %140, i64 -1
  %142 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %141, i64 0, i32 0
  %143 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %142, align 8
  %144 = icmp eq %"class.skottie::internal::Animator"* %143, null
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %143, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 -1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %155

149:                                              ; preds = %145
  %150 = bitcast %"class.skottie::internal::Animator"* %143 to %class.SkRefCntBase*
  %151 = bitcast %"class.skottie::internal::Animator"* %143 to void (%class.SkRefCntBase*)***
  %152 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %151, align 8
  %153 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %152, i64 2
  %154 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, align 8
  tail call void %154(%class.SkRefCntBase* nonnull %150) #9
  br label %155

155:                                              ; preds = %149, %145, %139
  %156 = icmp eq %class.sk_sp.6* %141, %137
  br i1 %156, label %157, label %139

157:                                              ; preds = %155, %132
  %158 = icmp eq i64 %135, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %160) #8
  br label %161

161:                                              ; preds = %157, %159
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_119InvertEffectAdapterEJRKN6skjson10ArrayValueE5sk_spIN4sksg10RenderNodeEERKPKS1_EEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSK_: argument 0"}
!4 = distinct !{!4, !"_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_119InvertEffectAdapterEJRKN6skjson10ArrayValueE5sk_spIN4sksg10RenderNodeEERKPKS1_EEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSK_"}
!5 = !{!6, !3}
!6 = distinct !{!6, !7, !"_ZN7skottie8internal12_GLOBAL__N_119InvertEffectAdapter4MakeERKN6skjson10ArrayValueE5sk_spIN4sksg10RenderNodeEEPKNS0_16AnimationBuilderE: argument 0"}
!7 = distinct !{!7, !"_ZN7skottie8internal12_GLOBAL__N_119InvertEffectAdapter4MakeERKN6skjson10ArrayValueE5sk_spIN4sksg10RenderNodeEEPKNS0_16AnimationBuilderE"}
!8 = !{!6}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
