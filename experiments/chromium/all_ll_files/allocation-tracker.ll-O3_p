; ModuleID = '../../v8/src/profiler/allocation-tracker.cc'
source_filename = "../../v8/src/profiler/allocation-tracker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::AllocationTraceNode" = type { %"class.v8::internal::AllocationTraceTree"*, i32, i32, i32, i32, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::internal::AllocationTraceNode"**, %"class.v8::internal::AllocationTraceNode"**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::AllocationTraceNode"** }
%"class.v8::internal::AllocationTraceTree" = type { i32, %"class.v8::internal::AllocationTraceNode" }
%"struct.v8::internal::AllocationTracker::FunctionInfo" = type <{ i8*, i32, [4 x i8], i8*, i32, i32, i32, [4 x i8] }>
%"class.v8::internal::AllocationTracker" = type { %"class.v8::internal::HeapObjectsMap"*, %"class.v8::internal::StringsStorage"*, %"class.v8::internal::AllocationTraceTree", [64 x i32], %"class.std::__1::vector.684", %"class.v8::base::PointerTemplateHashMapImpl", %"class.std::__1::vector.691", i32, %"class.v8::internal::AddressToTraceMap" }
%"class.std::__1::vector.684" = type { %"class.std::__1::__vector_base.685" }
%"class.std::__1::__vector_base.685" = type { %"struct.v8::internal::AllocationTracker::FunctionInfo"**, %"struct.v8::internal::AllocationTracker::FunctionInfo"**, %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.687" }
%"struct.std::__1::__compressed_pair_elem.687" = type { %"struct.v8::internal::AllocationTracker::FunctionInfo"** }
%"class.v8::base::PointerTemplateHashMapImpl" = type { %"class.v8::base::TemplateHashMapImpl" }
%"class.v8::base::TemplateHashMapImpl" = type { %"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::KeyEqualityMatcher<void *>, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::KeyEqualityMatcher<void *>, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry" = type <{ i8*, i8*, i32, [4 x i8] }>
%"class.std::__1::vector.691" = type { %"class.std::__1::__vector_base.692" }
%"class.std::__1::__vector_base.692" = type { %"class.v8::internal::AllocationTracker::UnresolvedLocation"**, %"class.v8::internal::AllocationTracker::UnresolvedLocation"**, %"class.std::__1::__compressed_pair.693" }
%"class.v8::internal::AllocationTracker::UnresolvedLocation" = type { %"class.v8::internal::Handle", i32, %"struct.v8::internal::AllocationTracker::FunctionInfo"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.v8::internal::AllocationTracker::UnresolvedLocation"** }
%"class.v8::internal::AddressToTraceMap" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.698" }
%"class.std::__1::__tree.698" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.699", %"class.std::__1::__compressed_pair.703" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.703" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i64 }
%"class.v8::internal::HeapObjectsMap" = type { i32, %"class.v8::base::PointerTemplateHashMapImpl", %"class.std::__1::vector.1", %"class.std::__1::vector.8", %"class.std::__1::unordered_map", %"class.v8::internal::Heap"* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.v8::internal::HeapObjectsMap::EntryInfo"*, %"struct.v8::internal::HeapObjectsMap::EntryInfo"*, %"class.std::__1::__compressed_pair.3" }
%"struct.v8::internal::HeapObjectsMap::EntryInfo" = type <{ i32, [4 x i8], i64, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.v8::internal::HeapObjectsMap::EntryInfo"* }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"struct.v8::internal::HeapObjectsMap::TimeInterval"*, %"struct.v8::internal::HeapObjectsMap::TimeInterval"*, %"class.std::__1::__compressed_pair.10" }
%"struct.v8::internal::HeapObjectsMap::TimeInterval" = type { i32, i32, i32, %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.v8::internal::HeapObjectsMap::TimeInterval"* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.23", %"class.std::__1::__compressed_pair.28", %"class.std::__1::__compressed_pair.30", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16", %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { float }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map.33", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.65", %"class.std::__1::vector.69", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.184", %"class.std::__1::unique_ptr.184", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.199", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.203", %"class.std::__1::vector.203", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.216", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.352", %"class.std::__1::unique_ptr.358", %"class.std::__1::unique_ptr.397", %"class.std::__1::unique_ptr.436", %"class.std::__1::unique_ptr.466", %"class.std::__1::unique_ptr.472", %"class.std::__1::unique_ptr.482", %"class.std::__1::unique_ptr.488", %"class.std::__1::unique_ptr.488", %"class.std::__1::unique_ptr.494", %"class.std::__1::unique_ptr.500", %"class.std::__1::unique_ptr.500", %"class.std::__1::unique_ptr.506", %"class.std::__1::unique_ptr.512", %"class.std::__1::shared_ptr.518", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.541", %"class.std::__1::unique_ptr.567", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.573", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.586", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.368", i8, [7 x i8], %"class.std::__1::unordered_map.592", %"class.std::__1::unordered_map.618", %"class.std::__1::unordered_map.592", %"class.std::__1::unordered_map.642", %"class.std::__1::vector.670", i8, %"class.std::__1::unique_ptr.677", i32, i32 }
%"class.std::__1::unordered_map.33" = type { %"class.std::__1::__hash_table.34" }
%"class.std::__1::__hash_table.34" = type <{ %"class.std::__1::unique_ptr.35", %"class.std::__1::__compressed_pair.45", %"class.std::__1::__compressed_pair.50", %"class.std::__1::__compressed_pair.53", [4 x i8] }>
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37", %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.std::__1::__hash_node_base.38"** }
%"struct.std::__1::__hash_node_base.38" = type { %"struct.std::__1::__hash_node_base.38"* }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.std::__1::__bucket_list_deallocator.40" }
%"class.std::__1::__bucket_list_deallocator.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.std::__1::__hash_node_base.38" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.60", %"struct.std::__1::atomic.60", %"struct.std::__1::atomic.60" }
%"struct.std::__1::atomic.60" = type { %"struct.std::__1::__atomic_base.61" }
%"struct.std::__1::__atomic_base.61" = type { %"struct.std::__1::__atomic_base.62" }
%"struct.std::__1::__atomic_base.62" = type { %"struct.std::__1::__cxx_atomic_impl.63" }
%"struct.std::__1::__cxx_atomic_impl.63" = type { %"struct.std::__1::__cxx_atomic_base_impl.64" }
%"struct.std::__1::__cxx_atomic_base_impl.64" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.754", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.760", %"class.std::__1::unique_ptr.781", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.791", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.962", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.975", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.985", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.996", %"struct.std::__1::atomic.190", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.1071", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.1117"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1124", i32, i8, i8, i32, i32, %"class.std::__1::vector.1130", %"class.std::__1::vector.1130", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1137", i64, %"class.std::__1::unordered_map.1138", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.579", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.198", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1194", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1208", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1242", %"class.std::__1::vector.1246", %"class.std::__1::vector.1246", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.748", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.748" = type { %"struct.std::__1::__atomic_base.749" }
%"struct.std::__1::__atomic_base.749" = type { %"struct.std::__1::__cxx_atomic_impl.750" }
%"struct.std::__1::__cxx_atomic_impl.750" = type { %"struct.std::__1::__cxx_atomic_base_impl.751" }
%"struct.std::__1::__cxx_atomic_base_impl.751" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.752", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.752" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.579" }
%"class.std::__1::shared_ptr.760" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.177", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.761", %"class.std::__1::unique_ptr.775" }
%"class.std::__1::vector.177" = type { %"class.std::__1::__vector_base.178" }
%"class.std::__1::__vector_base.178" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.179" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.60", %"struct.std::__1::atomic.108", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.108" = type { %"struct.std::__1::__atomic_base.109" }
%"struct.std::__1::__atomic_base.109" = type { %"struct.std::__1::__cxx_atomic_impl.110" }
%"struct.std::__1::__cxx_atomic_impl.110" = type { %"struct.std::__1::__cxx_atomic_base_impl.111" }
%"struct.std::__1::__cxx_atomic_base_impl.111" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic", i64, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.761" = type { %"class.std::__1::__compressed_pair.762" }
%"class.std::__1::__compressed_pair.762" = type { %"struct.std::__1::__compressed_pair_elem.763" }
%"struct.std::__1::__compressed_pair_elem.763" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.764" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.177", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.764" = type { %"class.std::__1::__vector_base.765" }
%"class.std::__1::__vector_base.765" = type { %"class.std::__1::unique_ptr.766"*, %"class.std::__1::unique_ptr.766"*, %"class.std::__1::__compressed_pair.767" }
%"class.std::__1::unique_ptr.766" = type { %"class.std::__1::__compressed_pair.1267" }
%"class.std::__1::__compressed_pair.1267" = type { %"struct.std::__1::__compressed_pair_elem.1268" }
%"struct.std::__1::__compressed_pair_elem.1268" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.768" }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"class.std::__1::unique_ptr.766"* }
%"class.std::__1::unique_ptr.775" = type { %"class.std::__1::__compressed_pair.776" }
%"class.std::__1::__compressed_pair.776" = type { %"struct.std::__1::__compressed_pair_elem.777" }
%"struct.std::__1::__compressed_pair_elem.777" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.781" = type { %"class.std::__1::__compressed_pair.782" }
%"class.std::__1::__compressed_pair.782" = type { %"struct.std::__1::__compressed_pair_elem.783" }
%"struct.std::__1::__compressed_pair_elem.783" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.784", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.784" = type { %"struct.std::__1::__atomic_base.785" }
%"struct.std::__1::__atomic_base.785" = type { %"struct.std::__1::__cxx_atomic_impl.786" }
%"struct.std::__1::__cxx_atomic_impl.786" = type { %"struct.std::__1::__cxx_atomic_base_impl.787" }
%"struct.std::__1::__cxx_atomic_base_impl.787" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.791" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.792", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.792" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.793", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.793" = type { %"class.std::__1::__vector_base.794" }
%"class.std::__1::__vector_base.794" = type { %"class.std::__1::unique_ptr.795"*, %"class.std::__1::unique_ptr.795"*, %"class.std::__1::__compressed_pair.796" }
%"class.std::__1::unique_ptr.795" = type opaque
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"class.std::__1::unique_ptr.795"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.801", %"class.std::__1::unique_ptr.807", %"struct.std::__1::atomic.190", %"class.std::__1::unique_ptr.813", %"class.std::__1::unique_ptr.819", %"class.std::__1::unique_ptr.825", %"class.std::__1::unique_ptr.831", %"class.std::__1::unique_ptr.837", %"class.std::__1::set.843", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.801" = type { %"class.std::__1::__compressed_pair.802" }
%"class.std::__1::__compressed_pair.802" = type { %"struct.std::__1::__compressed_pair_elem.803" }
%"struct.std::__1::__compressed_pair_elem.803" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.807" = type { %"class.std::__1::__compressed_pair.808" }
%"class.std::__1::__compressed_pair.808" = type { %"struct.std::__1::__compressed_pair_elem.809" }
%"struct.std::__1::__compressed_pair_elem.809" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.813" = type { %"class.std::__1::__compressed_pair.814" }
%"class.std::__1::__compressed_pair.814" = type { %"struct.std::__1::__compressed_pair_elem.815" }
%"struct.std::__1::__compressed_pair_elem.815" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.819" = type { %"class.std::__1::__compressed_pair.820" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.825" = type { %"class.std::__1::__compressed_pair.826" }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.831" = type { %"class.std::__1::__compressed_pair.832" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.837" = type { %"class.std::__1::__compressed_pair.838" }
%"class.std::__1::__compressed_pair.838" = type { %"struct.std::__1::__compressed_pair_elem.839" }
%"struct.std::__1::__compressed_pair_elem.839" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.843" = type { %"class.std::__1::__tree.844" }
%"class.std::__1::__tree.844" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.845", %"class.std::__1::__compressed_pair.849" }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"class.std::__1::__compressed_pair.849" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.853" }
%"class.v8::internal::TaggedImpl.853" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.852" }
%"class.v8::internal::TaggedImpl.852" = type { i32 }
%"class.v8::internal::Deoptimizer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::JSFunction", %"class.v8::internal::Code", i32, i8, i64, i32, i8, i32, i32, %"class.v8::internal::FrameDescription"*, i32, %"class.v8::internal::FrameDescription"**, i64, i64, i64, i64, i32, i64, %"class.v8::internal::TranslatedState", %"class.std::__1::vector.891", %"class.std::__1::unique_ptr.898" }
%"class.v8::internal::JSFunction" = type { %"class.v8::internal::JSFunctionOrBoundFunction" }
%"class.v8::internal::JSFunctionOrBoundFunction" = type { %"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" }
%"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::JSObject" = type { %"class.v8::internal::TorqueGeneratedJSObject" }
%"class.v8::internal::TorqueGeneratedJSObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Code" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FrameDescription" = type { i64, i32, %"class.v8::internal::RegisterValues", i64, i64, i64, i64, i64, i64, [1 x i64] }
%"class.v8::internal::RegisterValues" = type { [16 x i64], [16 x %"class.v8::internal::Float64"] }
%"class.v8::internal::Float64" = type { i64 }
%"class.v8::internal::TranslatedState" = type <{ i32, [4 x i8], %"class.std::__1::vector.854", %"class.v8::internal::Isolate"*, i64, i32, i32, %"class.std::__1::deque.878", %"class.v8::internal::Handle.890", %"class.v8::internal::FeedbackVector", %"class.v8::internal::FeedbackSlot", [4 x i8] }>
%"class.std::__1::vector.854" = type { %"class.std::__1::__vector_base.855" }
%"class.std::__1::__vector_base.855" = type { %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"*, %"class.std::__1::__compressed_pair.873" }
%"class.v8::internal::TranslatedFrame" = type <{ i32, %"class.v8::internal::BytecodeOffset", %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::Handle.856", i32, i32, i32, [4 x i8], %"class.std::__1::deque", %"class.v8::base::Optional.868", [6 x i8] }>
%"class.v8::internal::BytecodeOffset" = type { i32 }
%"class.v8::internal::SharedFunctionInfo" = type { %"class.v8::internal::TorqueGeneratedSharedFunctionInfo" }
%"class.v8::internal::TorqueGeneratedSharedFunctionInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Handle.856" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.864" }
%"struct.std::__1::__split_buffer" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.std::__1::__compressed_pair.859" }
%"class.v8::internal::TranslatedValue" = type { i8, i8, %"class.v8::internal::TranslatedState"*, %"class.v8::internal::Handle.857", %union.anon.858 }
%"class.v8::internal::Handle.857" = type { %"class.v8::internal::HandleBase" }
%union.anon.858 = type { %"class.v8::internal::Object" }
%"class.std::__1::__compressed_pair.859" = type { %"struct.std::__1::__compressed_pair_elem.860" }
%"struct.std::__1::__compressed_pair_elem.860" = type { %"class.v8::internal::TranslatedValue"** }
%"class.std::__1::__compressed_pair.864" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::base::Optional.868" = type { %"class.v8::base::internal::OptionalBase.869" }
%"class.v8::base::internal::OptionalBase.869" = type { %"struct.v8::base::internal::OptionalStorage.870" }
%"struct.v8::base::internal::OptionalStorage.870" = type { %"struct.v8::base::internal::OptionalStorageBase.871" }
%"struct.v8::base::internal::OptionalStorageBase.871" = type { i8, %union.anon.872 }
%union.anon.872 = type { i8 }
%"class.std::__1::__compressed_pair.873" = type { %"struct.std::__1::__compressed_pair_elem.874" }
%"struct.std::__1::__compressed_pair_elem.874" = type { %"class.v8::internal::TranslatedFrame"* }
%"class.std::__1::deque.878" = type { %"class.std::__1::__deque_base.879" }
%"class.std::__1::__deque_base.879" = type { %"struct.std::__1::__split_buffer.880", i64, %"class.std::__1::__compressed_pair.886" }
%"struct.std::__1::__split_buffer.880" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"class.std::__1::__compressed_pair.881" }
%"struct.v8::internal::TranslatedState::ObjectPosition" = type { i32, i32 }
%"class.std::__1::__compressed_pair.881" = type { %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"** }
%"class.std::__1::__compressed_pair.886" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::internal::Handle.890" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FeedbackVector" = type { %"class.v8::internal::TorqueGeneratedFeedbackVector" }
%"class.v8::internal::TorqueGeneratedFeedbackVector" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FeedbackSlot" = type { i32 }
%"class.std::__1::vector.891" = type { %"class.std::__1::__vector_base.892" }
%"class.std::__1::__vector_base.892" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"class.std::__1::__compressed_pair.893" }
%"struct.v8::internal::Deoptimizer::ValueToMaterialize" = type { i64, %"class.v8::internal::TranslatedFrame::iterator" }
%"class.v8::internal::TranslatedFrame::iterator" = type <{ %"class.std::__1::__deque_iterator", i32, [4 x i8] }>
%"class.std::__1::__deque_iterator" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"* }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.894" }
%"struct.std::__1::__compressed_pair_elem.894" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"* }
%"class.std::__1::unique_ptr.898" = type { %"class.std::__1::__compressed_pair.899" }
%"class.std::__1::__compressed_pair.899" = type { %"struct.std::__1::__compressed_pair_elem.900" }
%"struct.std::__1::__compressed_pair_elem.900" = type { %"class.v8::internal::CodeTracer::Scope"* }
%"class.v8::internal::CodeTracer::Scope" = type { %"class.v8::internal::CodeTracer"* }
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.718", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.718" = type { %"class.std::__1::__compressed_pair.719" }
%"class.std::__1::__compressed_pair.719" = type { %"struct.std::__1::__compressed_pair_elem.720" }
%"struct.std::__1::__compressed_pair_elem.720" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.904", %"class.v8::internal::DetachableVector.905", %"class.v8::internal::DetachableVector.904", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.905" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.904" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr.712", %"class.std::__1::unique_ptr.519" }
%"class.std::__1::unique_ptr.712" = type { %"class.std::__1::__compressed_pair.713" }
%"class.std::__1::__compressed_pair.713" = type { %"struct.std::__1::__compressed_pair_elem.714" }
%"struct.std::__1::__compressed_pair_elem.714" = type { %"class.v8::internal::VirtualMemory"* }
%"class.std::__1::unique_ptr.519" = type { %"class.std::__1::__compressed_pair.520" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.521" }
%"struct.std::__1::__compressed_pair_elem.521" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.522", %"class.std::__1::set.530" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.522" = type { %"class.std::__1::__tree.523" }
%"class.std::__1::__tree.523" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.528" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::set.530" = type { %"class.std::__1::__tree.531" }
%"class.std::__1::__tree.531" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.532" }
%"class.std::__1::__compressed_pair.532" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::internal::InnerPointerToCodeCache" = type { %"class.v8::internal::Isolate"*, [1024 x %"struct.v8::internal::InnerPointerToCodeCache::InnerPointerToCodeCacheEntry"] }
%"struct.v8::internal::InnerPointerToCodeCache::InnerPointerToCodeCacheEntry" = type { i64, %"class.v8::internal::Code", %"class.v8::internal::SafepointEntry" }
%"class.v8::internal::SafepointEntry" = type <{ i32, [4 x i8], i8*, i8*, i32, [4 x i8] }>
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.906", %"class.std::__1::vector.912", %"class.std::__1::unique_ptr.919", %"class.std::__1::vector.926", %"class.std::__1::unique_ptr.933", i64, %"class.std::__1::vector.939", %"class.std::__1::vector.947", %"class.std::__1::vector.955", i8, i8, i32 }
%"class.std::__1::unique_ptr.906" = type { %"class.std::__1::__compressed_pair.907" }
%"class.std::__1::__compressed_pair.907" = type { %"struct.std::__1::__compressed_pair_elem.908" }
%"struct.std::__1::__compressed_pair_elem.908" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.912" = type { %"class.std::__1::__vector_base.913" }
%"class.std::__1::__vector_base.913" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.914" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.914" = type { %"struct.std::__1::__compressed_pair_elem.915" }
%"struct.std::__1::__compressed_pair_elem.915" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.919" = type { %"class.std::__1::__compressed_pair.920" }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.921" }
%"struct.std::__1::__compressed_pair_elem.921" = type { %"class.v8::internal::GlobalHandles::NodeSpace.922"* }
%"class.v8::internal::GlobalHandles::NodeSpace.922" = type opaque
%"class.std::__1::vector.926" = type { %"class.std::__1::__vector_base.927" }
%"class.std::__1::__vector_base.927" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.928" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.928" = type { %"struct.std::__1::__compressed_pair_elem.929" }
%"struct.std::__1::__compressed_pair_elem.929" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.933" = type { %"class.std::__1::__compressed_pair.934" }
%"class.std::__1::__compressed_pair.934" = type { %"struct.std::__1::__compressed_pair_elem.935" }
%"struct.std::__1::__compressed_pair_elem.935" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.939" = type { %"class.std::__1::__vector_base.940" }
%"class.std::__1::__vector_base.940" = type { %"struct.std::__1::pair.941"*, %"struct.std::__1::pair.941"*, %"class.std::__1::__compressed_pair.942" }
%"struct.std::__1::pair.941" = type opaque
%"class.std::__1::__compressed_pair.942" = type { %"struct.std::__1::__compressed_pair_elem.943" }
%"struct.std::__1::__compressed_pair_elem.943" = type { %"struct.std::__1::pair.941"* }
%"class.std::__1::vector.947" = type { %"class.std::__1::__vector_base.948" }
%"class.std::__1::__vector_base.948" = type { %"struct.std::__1::pair.949"*, %"struct.std::__1::pair.949"*, %"class.std::__1::__compressed_pair.950" }
%"struct.std::__1::pair.949" = type opaque
%"class.std::__1::__compressed_pair.950" = type { %"struct.std::__1::__compressed_pair_elem.951" }
%"struct.std::__1::__compressed_pair_elem.951" = type { %"struct.std::__1::pair.949"* }
%"class.std::__1::vector.955" = type { %"class.std::__1::__vector_base.956" }
%"class.std::__1::__vector_base.956" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.957" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.724", %"class.std::__1::vector.962" }
%"class.std::__1::vector.724" = type { %"class.std::__1::__vector_base.725" }
%"class.std::__1::__vector_base.725" = type { i64**, i64**, %"class.std::__1::__compressed_pair.726" }
%"class.std::__1::__compressed_pair.726" = type { %"struct.std::__1::__compressed_pair_elem.727" }
%"struct.std::__1::__compressed_pair_elem.727" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.969" }
%"class.std::__1::unique_ptr.969" = type { %"class.std::__1::__compressed_pair.970" }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.971" }
%"struct.std::__1::__compressed_pair_elem.971" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.962" = type { %"class.std::__1::__vector_base.963" }
%"class.std::__1::__vector_base.963" = type { i32*, i32*, %"class.std::__1::__compressed_pair.964" }
%"class.std::__1::__compressed_pair.964" = type { %"struct.std::__1::__compressed_pair_elem.965" }
%"struct.std::__1::__compressed_pair_elem.965" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.975" = type { %"struct.std::__1::__atomic_base.976" }
%"struct.std::__1::__atomic_base.976" = type { %"struct.std::__1::__cxx_atomic_impl.977" }
%"struct.std::__1::__cxx_atomic_impl.977" = type { %"struct.std::__1::__cxx_atomic_base_impl.978" }
%"struct.std::__1::__cxx_atomic_base_impl.978" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.985" = type { %"struct.std::__1::__atomic_base.986" }
%"struct.std::__1::__atomic_base.986" = type { %"struct.std::__1::__cxx_atomic_impl.987" }
%"struct.std::__1::__cxx_atomic_impl.987" = type { %"struct.std::__1::__cxx_atomic_base_impl.988" }
%"struct.std::__1::__cxx_atomic_base_impl.988" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.990" }
%"class.std::__1::__compressed_pair.990" = type { %"struct.std::__1::__compressed_pair_elem.991" }
%"struct.std::__1::__compressed_pair_elem.991" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.992 }
%union.anon.992 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.996" = type { %"class.std::__1::__hash_table.997" }
%"class.std::__1::__hash_table.997" = type <{ %"class.std::__1::unique_ptr.998", %"class.std::__1::__compressed_pair.1008", %"class.std::__1::__compressed_pair.1013", %"class.std::__1::__compressed_pair.1016", [4 x i8] }>
%"class.std::__1::unique_ptr.998" = type { %"class.std::__1::__compressed_pair.999" }
%"class.std::__1::__compressed_pair.999" = type { %"struct.std::__1::__compressed_pair_elem.1000", %"struct.std::__1::__compressed_pair_elem.1002" }
%"struct.std::__1::__compressed_pair_elem.1000" = type { %"struct.std::__1::__hash_node_base.1001"** }
%"struct.std::__1::__hash_node_base.1001" = type { %"struct.std::__1::__hash_node_base.1001"* }
%"struct.std::__1::__compressed_pair_elem.1002" = type { %"class.std::__1::__bucket_list_deallocator.1003" }
%"class.std::__1::__bucket_list_deallocator.1003" = type { %"class.std::__1::__compressed_pair.1004" }
%"class.std::__1::__compressed_pair.1004" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.1008" = type { %"struct.std::__1::__compressed_pair_elem.1009" }
%"struct.std::__1::__compressed_pair_elem.1009" = type { %"struct.std::__1::__hash_node_base.1001" }
%"class.std::__1::__compressed_pair.1013" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.1016" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::atomic.190" = type { %"struct.std::__1::__atomic_base.191" }
%"struct.std::__1::__atomic_base.191" = type { %"struct.std::__1::__cxx_atomic_impl.192" }
%"struct.std::__1::__cxx_atomic_impl.192" = type { %"struct.std::__1::__cxx_atomic_base_impl.193" }
%"struct.std::__1::__cxx_atomic_base_impl.193" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.1022", %"class.v8::internal::Handle.1028", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.1029", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.1022" = type { %"class.std::__1::__compressed_pair.1023" }
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.1024" }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.1028" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.1029" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.1030", %"class.std::__1::vector.1036", %"class.std::__1::unique_ptr.1044", %"class.std::__1::unique_ptr.1050", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.1056", %"class.std::__1::vector.1062", %"struct.std::__1::pair.1070" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1030" = type { %"class.std::__1::__compressed_pair.1031" }
%"class.std::__1::__compressed_pair.1031" = type { %"struct.std::__1::__compressed_pair_elem.1032" }
%"struct.std::__1::__compressed_pair_elem.1032" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.std::__1::vector.1036" = type { %"class.std::__1::__vector_base.1037" }
%"class.std::__1::__vector_base.1037" = type { %"class.std::__1::unique_ptr.1038"*, %"class.std::__1::unique_ptr.1038"*, %"class.std::__1::__compressed_pair.1039" }
%"class.std::__1::unique_ptr.1038" = type opaque
%"class.std::__1::__compressed_pair.1039" = type { %"struct.std::__1::__compressed_pair_elem.1040" }
%"struct.std::__1::__compressed_pair_elem.1040" = type { %"class.std::__1::unique_ptr.1038"* }
%"class.std::__1::unique_ptr.1044" = type { %"class.std::__1::__compressed_pair.1045" }
%"class.std::__1::__compressed_pair.1045" = type { %"struct.std::__1::__compressed_pair_elem.1046" }
%"struct.std::__1::__compressed_pair_elem.1046" = type { %"class.v8::internal::StringsStorage"* }
%"class.std::__1::unique_ptr.1050" = type { %"class.std::__1::__compressed_pair.1051" }
%"class.std::__1::__compressed_pair.1051" = type { %"struct.std::__1::__compressed_pair_elem.1052" }
%"struct.std::__1::__compressed_pair_elem.1052" = type { %"class.v8::internal::AllocationTracker"* }
%"class.std::__1::unique_ptr.1056" = type { %"class.std::__1::__compressed_pair.1057" }
%"class.std::__1::__compressed_pair.1057" = type { %"struct.std::__1::__compressed_pair_elem.1058" }
%"struct.std::__1::__compressed_pair_elem.1058" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.1062" = type { %"class.std::__1::__vector_base.1063" }
%"class.std::__1::__vector_base.1063" = type { %"struct.std::__1::pair.1064"*, %"struct.std::__1::pair.1064"*, %"class.std::__1::__compressed_pair.1065" }
%"struct.std::__1::pair.1064" = type opaque
%"class.std::__1::__compressed_pair.1065" = type { %"struct.std::__1::__compressed_pair_elem.1066" }
%"struct.std::__1::__compressed_pair_elem.1066" = type { %"struct.std::__1::pair.1064"* }
%"struct.std::__1::pair.1070" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.753"*, i16, i8*)*, i8* }
%"class.v8::Local.753" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.1071" = type { %"class.std::__1::__compressed_pair.1072" }
%"class.std::__1::__compressed_pair.1072" = type { %"struct.std::__1::__compressed_pair_elem.1073" }
%"struct.std::__1::__compressed_pair_elem.1073" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.1074", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.1074" = type { %"class.std::__1::__hash_table.1075" }
%"class.std::__1::__hash_table.1075" = type <{ %"class.std::__1::unique_ptr.1076", %"class.std::__1::__compressed_pair.1086", %"class.std::__1::__compressed_pair.1091", %"class.std::__1::__compressed_pair.1095", [4 x i8] }>
%"class.std::__1::unique_ptr.1076" = type { %"class.std::__1::__compressed_pair.1077" }
%"class.std::__1::__compressed_pair.1077" = type { %"struct.std::__1::__compressed_pair_elem.1078", %"struct.std::__1::__compressed_pair_elem.1080" }
%"struct.std::__1::__compressed_pair_elem.1078" = type { %"struct.std::__1::__hash_node_base.1079"** }
%"struct.std::__1::__hash_node_base.1079" = type { %"struct.std::__1::__hash_node_base.1079"* }
%"struct.std::__1::__compressed_pair_elem.1080" = type { %"class.std::__1::__bucket_list_deallocator.1081" }
%"class.std::__1::__bucket_list_deallocator.1081" = type { %"class.std::__1::__compressed_pair.1082" }
%"class.std::__1::__compressed_pair.1082" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.1086" = type { %"struct.std::__1::__compressed_pair_elem.1087" }
%"struct.std::__1::__compressed_pair_elem.1087" = type { %"struct.std::__1::__hash_node_base.1079" }
%"class.std::__1::__compressed_pair.1091" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.1095" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque.1103" }
%"class.std::__1::deque.1103" = type { %"class.std::__1::__deque_base.1104" }
%"class.std::__1::__deque_base.1104" = type { %"struct.std::__1::__split_buffer.1105", i64, %"class.std::__1::__compressed_pair.1112" }
%"struct.std::__1::__split_buffer.1105" = type { %"struct.std::__1::pair.1106"**, %"struct.std::__1::pair.1106"**, %"struct.std::__1::pair.1106"**, %"class.std::__1::__compressed_pair.1107" }
%"struct.std::__1::pair.1106" = type opaque
%"class.std::__1::__compressed_pair.1107" = type { %"struct.std::__1::__compressed_pair_elem.1108" }
%"struct.std::__1::__compressed_pair_elem.1108" = type { %"struct.std::__1::pair.1106"** }
%"class.std::__1::__compressed_pair.1112" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.1117" = type { %"class.std::__1::__vector_base.1118" }
%"class.std::__1::__vector_base.1118" = type { %"class.v8::internal::Handle.857"*, %"class.v8::internal::Handle.857"*, %"class.std::__1::__compressed_pair.1119" }
%"class.std::__1::__compressed_pair.1119" = type { %"struct.std::__1::__compressed_pair_elem.1120" }
%"struct.std::__1::__compressed_pair_elem.1120" = type { %"class.v8::internal::Handle.857"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.980", i32, %"class.v8::Local.753" }
%"class.v8::Local.980" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1124" = type { %"class.std::__1::__compressed_pair.1125" }
%"class.std::__1::__compressed_pair.1125" = type { %"struct.std::__1::__compressed_pair_elem.1126" }
%"struct.std::__1::__compressed_pair_elem.1126" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.724", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1130" = type { %"class.std::__1::__vector_base.1131" }
%"class.std::__1::__vector_base.1131" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1132" }
%"class.std::__1::__compressed_pair.1132" = type { %"struct.std::__1::__compressed_pair_elem.1133" }
%"struct.std::__1::__compressed_pair_elem.1133" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1137" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1138" = type { %"class.std::__1::__hash_table.1139" }
%"class.std::__1::__hash_table.1139" = type <{ %"class.std::__1::unique_ptr.1140", %"class.std::__1::__compressed_pair.1150", %"class.std::__1::__compressed_pair.1155", %"class.std::__1::__compressed_pair.1158", [4 x i8] }>
%"class.std::__1::unique_ptr.1140" = type { %"class.std::__1::__compressed_pair.1141" }
%"class.std::__1::__compressed_pair.1141" = type { %"struct.std::__1::__compressed_pair_elem.1142", %"struct.std::__1::__compressed_pair_elem.1144" }
%"struct.std::__1::__compressed_pair_elem.1142" = type { %"struct.std::__1::__hash_node_base.1143"** }
%"struct.std::__1::__hash_node_base.1143" = type { %"struct.std::__1::__hash_node_base.1143"* }
%"struct.std::__1::__compressed_pair_elem.1144" = type { %"class.std::__1::__bucket_list_deallocator.1145" }
%"class.std::__1::__bucket_list_deallocator.1145" = type { %"class.std::__1::__compressed_pair.1146" }
%"class.std::__1::__compressed_pair.1146" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.1150" = type { %"struct.std::__1::__compressed_pair_elem.1151" }
%"struct.std::__1::__compressed_pair_elem.1151" = type { %"struct.std::__1::__hash_node_base.1143" }
%"class.std::__1::__compressed_pair.1155" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.1158" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.579" = type { %"class.std::__1::__vector_base.580" }
%"class.std::__1::__vector_base.580" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.581" }
%"class.std::__1::__compressed_pair.581" = type { %"struct.std::__1::__compressed_pair_elem.582" }
%"struct.std::__1::__compressed_pair_elem.582" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.198" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1162", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1191", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1192", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1162" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1187, %union.anon.1189, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1187 = type { i64 }
%union.anon.1189 = type { i64 }
%"class.std::__1::weak_ptr.1191" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.198" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1192" = type { %"class.v8::PersistentBase.1193" }
%"class.v8::PersistentBase.1193" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1163", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1163" = type { %"class.std::__1::__hash_table.1164" }
%"class.std::__1::__hash_table.1164" = type <{ %"class.std::__1::unique_ptr.1165", %"class.std::__1::__compressed_pair.1175", %"class.std::__1::__compressed_pair.1180", %"class.std::__1::__compressed_pair.1183", [4 x i8] }>
%"class.std::__1::unique_ptr.1165" = type { %"class.std::__1::__compressed_pair.1166" }
%"class.std::__1::__compressed_pair.1166" = type { %"struct.std::__1::__compressed_pair_elem.1167", %"struct.std::__1::__compressed_pair_elem.1169" }
%"struct.std::__1::__compressed_pair_elem.1167" = type { %"struct.std::__1::__hash_node_base.1168"** }
%"struct.std::__1::__hash_node_base.1168" = type { %"struct.std::__1::__hash_node_base.1168"* }
%"struct.std::__1::__compressed_pair_elem.1169" = type { %"class.std::__1::__bucket_list_deallocator.1170" }
%"class.std::__1::__bucket_list_deallocator.1170" = type { %"class.std::__1::__compressed_pair.1171" }
%"class.std::__1::__compressed_pair.1171" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.1175" = type { %"struct.std::__1::__compressed_pair_elem.1176" }
%"struct.std::__1::__compressed_pair_elem.1176" = type { %"struct.std::__1::__hash_node_base.1168" }
%"class.std::__1::__compressed_pair.1180" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.1183" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1194" = type { %"class.std::__1::__compressed_pair.1195" }
%"class.std::__1::__compressed_pair.1195" = type { %"struct.std::__1::__compressed_pair_elem.1196" }
%"struct.std::__1::__compressed_pair_elem.1196" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1199", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.705", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.709", %"class.std::__1::unique_ptr.734", %"class.std::__1::unique_ptr.512", %"class.std::__1::vector.740", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.705" = type { %"struct.std::__1::__atomic_base.706" }
%"struct.std::__1::__atomic_base.706" = type { %"struct.std::__1::__cxx_atomic_impl.707" }
%"struct.std::__1::__cxx_atomic_impl.707" = type { %"struct.std::__1::__cxx_atomic_base_impl.708" }
%"struct.std::__1::__cxx_atomic_base_impl.708" = type { i32 }
%"class.std::__1::unique_ptr.709" = type { %"class.std::__1::__compressed_pair.710" }
%"class.std::__1::__compressed_pair.710" = type { %"struct.std::__1::__compressed_pair_elem.711" }
%"struct.std::__1::__compressed_pair_elem.711" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.724" }
%"class.std::__1::unique_ptr.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.736" }
%"struct.std::__1::__compressed_pair_elem.736" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.740" = type { %"class.std::__1::__vector_base.741" }
%"class.std::__1::__vector_base.741" = type { %"struct.std::__1::pair.742"*, %"struct.std::__1::pair.742"*, %"class.std::__1::__compressed_pair.743" }
%"struct.std::__1::pair.742" = type opaque
%"class.std::__1::__compressed_pair.743" = type { %"struct.std::__1::__compressed_pair_elem.744" }
%"struct.std::__1::__compressed_pair_elem.744" = type { %"struct.std::__1::pair.742"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.137" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.76", %"class.std::__1::vector.76", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.76" = type { %"class.std::__1::__vector_base.77" }
%"class.std::__1::__vector_base.77" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.78" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.83" }
%"class.std::__1::__hash_table.83" = type <{ %"class.std::__1::unique_ptr.84", %"class.std::__1::__compressed_pair.94", %"class.std::__1::__compressed_pair.99", %"class.std::__1::__compressed_pair.103", [4 x i8] }>
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86", %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"struct.std::__1::__hash_node_base.87"** }
%"struct.std::__1::__hash_node_base.87" = type { %"struct.std::__1::__hash_node_base.87"* }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.std::__1::__bucket_list_deallocator.89" }
%"class.std::__1::__bucket_list_deallocator.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.87" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.60", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.126", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.60", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.112" }
%"class.std::__1::vector.112" = type { %"class.std::__1::__vector_base.113" }
%"class.std::__1::__vector_base.113" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.114" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.119", %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::atomic.126" = type { %"struct.std::__1::__atomic_base.127" }
%"struct.std::__1::__atomic_base.127" = type { %"struct.std::__1::__cxx_atomic_impl.128" }
%"struct.std::__1::__cxx_atomic_impl.128" = type { %"struct.std::__1::__cxx_atomic_base_impl.129" }
%"struct.std::__1::__cxx_atomic_base_impl.129" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.130", i8, [7 x i8] }>
%"class.std::__1::vector.130" = type { %"class.std::__1::__vector_base.131" }
%"class.std::__1::__vector_base.131" = type { i64*, i64*, %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1199" = type { %"class.std::__1::__compressed_pair.1200" }
%"class.std::__1::__compressed_pair.1200" = type { %"struct.std::__1::__compressed_pair_elem.1201" }
%"struct.std::__1::__compressed_pair_elem.1201" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1208" = type { %"class.std::__1::__compressed_pair.1209" }
%"class.std::__1::__compressed_pair.1209" = type { %"struct.std::__1::__compressed_pair_elem.1210" }
%"struct.std::__1::__compressed_pair_elem.1210" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.981", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.981" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1216" }
%"class.std::__1::unordered_map.1216" = type { %"class.std::__1::__hash_table.1217" }
%"class.std::__1::__hash_table.1217" = type <{ %"class.std::__1::unique_ptr.1218", %"class.std::__1::__compressed_pair.1228", %"class.std::__1::__compressed_pair.1233", %"class.std::__1::__compressed_pair.1236", [4 x i8] }>
%"class.std::__1::unique_ptr.1218" = type { %"class.std::__1::__compressed_pair.1219" }
%"class.std::__1::__compressed_pair.1219" = type { %"struct.std::__1::__compressed_pair_elem.1220", %"struct.std::__1::__compressed_pair_elem.1222" }
%"struct.std::__1::__compressed_pair_elem.1220" = type { %"struct.std::__1::__hash_node_base.1221"** }
%"struct.std::__1::__hash_node_base.1221" = type { %"struct.std::__1::__hash_node_base.1221"* }
%"struct.std::__1::__compressed_pair_elem.1222" = type { %"class.std::__1::__bucket_list_deallocator.1223" }
%"class.std::__1::__bucket_list_deallocator.1223" = type { %"class.std::__1::__compressed_pair.1224" }
%"class.std::__1::__compressed_pair.1224" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.1228" = type { %"struct.std::__1::__compressed_pair_elem.1229" }
%"struct.std::__1::__compressed_pair_elem.1229" = type { %"struct.std::__1::__hash_node_base.1221" }
%"class.std::__1::__compressed_pair.1233" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.1236" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::atomic.1242" = type { %"struct.std::__1::__atomic_base.1243" }
%"struct.std::__1::__atomic_base.1243" = type { %"struct.std::__1::__cxx_atomic_impl.1244" }
%"struct.std::__1::__cxx_atomic_impl.1244" = type { %"struct.std::__1::__cxx_atomic_base_impl.1245" }
%"struct.std::__1::__cxx_atomic_base_impl.1245" = type { %"class.std::__1::vector.1246"* }
%"class.std::__1::vector.1246" = type { %"class.std::__1::__vector_base.1247" }
%"class.std::__1::__vector_base.1247" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1248" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1248" = type { %"struct.std::__1::__compressed_pair_elem.1249" }
%"struct.std::__1::__compressed_pair_elem.1249" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.65" = type { %"struct.std::__1::__atomic_base.66" }
%"struct.std::__1::__atomic_base.66" = type { %"struct.std::__1::__cxx_atomic_impl.67" }
%"struct.std::__1::__cxx_atomic_impl.67" = type { %"struct.std::__1::__cxx_atomic_base_impl.68" }
%"struct.std::__1::__cxx_atomic_base_impl.68" = type { i32 }
%"class.std::__1::vector.69" = type { %"class.std::__1::__vector_base.70" }
%"class.std::__1::__vector_base.70" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.71" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.141" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.141" = type { %"class.std::__1::__vector_base.142" }
%"class.std::__1::__vector_base.142" = type { %"struct.std::__1::pair.143"*, %"struct.std::__1::pair.143"*, %"class.std::__1::__compressed_pair.144" }
%"struct.std::__1::pair.143" = type { i32, i64 }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"struct.std::__1::pair.143"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic", i32, %"struct.std::__1::atomic", %"class.v8::base::Mutex", %"struct.std::__1::atomic" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.149" }
%"class.std::__1::unordered_map.149" = type { %"class.std::__1::__hash_table.150" }
%"class.std::__1::__hash_table.150" = type <{ %"class.std::__1::unique_ptr.151", %"class.std::__1::__compressed_pair.161", %"class.std::__1::__compressed_pair.166", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153", %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"struct.std::__1::__hash_node_base.154"** }
%"struct.std::__1::__hash_node_base.154" = type { %"struct.std::__1::__hash_node_base.154"* }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.std::__1::__bucket_list_deallocator.156" }
%"class.std::__1::__bucket_list_deallocator.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"struct.std::__1::__hash_node_base.154" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.190", %"struct.std::__1::atomic.194", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.194" = type { %"struct.std::__1::__atomic_base.195" }
%"struct.std::__1::__atomic_base.195" = type { %"struct.std::__1::__cxx_atomic_impl.196" }
%"struct.std::__1::__cxx_atomic_impl.196" = type { %"struct.std::__1::__cxx_atomic_base_impl.197" }
%"struct.std::__1::__cxx_atomic_base_impl.197" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.199" = type { %"struct.std::__1::__atomic_base.200" }
%"struct.std::__1::__atomic_base.200" = type { %"struct.std::__1::__cxx_atomic_impl.201" }
%"struct.std::__1::__cxx_atomic_impl.201" = type { %"struct.std::__1::__cxx_atomic_base_impl.202" }
%"struct.std::__1::__cxx_atomic_base_impl.202" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.203" = type { %"class.std::__1::__vector_base.204" }
%"class.std::__1::__vector_base.204" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.205" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.264", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.318", %"class.std::__1::vector.318", %"class.std::__1::vector.318", %"class.std::__1::vector.325", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.219", %"class.std::__1::vector.220", %"class.std::__1::vector.227", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.219" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.220" = type { %"class.std::__1::__vector_base.221" }
%"class.std::__1::__vector_base.221" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.222" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.227" = type { %"class.std::__1::__vector_base.228" }
%"class.std::__1::__vector_base.228" = type { %"class.std::__1::unique_ptr.229"*, %"class.std::__1::unique_ptr.229"*, %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::unique_ptr.229" = type opaque
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::unique_ptr.229"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.235", %"class.v8::internal::Worklist.237", %"class.v8::internal::Worklist.237", %"class.v8::internal::Worklist.237", %"class.v8::internal::Worklist.239", %"class.v8::internal::Worklist.241", %"class.v8::internal::Worklist.243", %"class.v8::internal::Worklist.245", %"class.v8::internal::Worklist.247", %"class.v8::internal::Worklist.249" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.235" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.237" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.239" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.241" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.243" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.245" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.247" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.249" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.251", i8, i64 }
%"class.std::__1::vector.251" = type { %"class.std::__1::__vector_base.252" }
%"class.std::__1::__vector_base.252" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.267" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.219"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.267" = type { %"class.std::__1::__hash_table.268" }
%"class.std::__1::__hash_table.268" = type <{ %"class.std::__1::unique_ptr.269", %"class.std::__1::__compressed_pair.279", %"class.std::__1::__compressed_pair.284", %"class.std::__1::__compressed_pair.287", [4 x i8] }>
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271", %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"struct.std::__1::__hash_node_base.272"** }
%"struct.std::__1::__hash_node_base.272" = type { %"struct.std::__1::__hash_node_base.272"* }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.std::__1::__bucket_list_deallocator.274" }
%"class.std::__1::__bucket_list_deallocator.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.272" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.294" }
%"class.std::__1::unordered_map.294" = type { %"class.std::__1::__hash_table.295" }
%"class.std::__1::__hash_table.295" = type <{ %"class.std::__1::unique_ptr.296", %"class.std::__1::__compressed_pair.306", %"class.std::__1::__compressed_pair.311", %"class.std::__1::__compressed_pair.314", [4 x i8] }>
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298", %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"struct.std::__1::__hash_node_base.299"** }
%"struct.std::__1::__hash_node_base.299" = type { %"struct.std::__1::__hash_node_base.299"* }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.std::__1::__bucket_list_deallocator.301" }
%"class.std::__1::__bucket_list_deallocator.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"struct.std::__1::__hash_node_base.299" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"class.std::__1::vector.318" = type { %"class.std::__1::__vector_base.319" }
%"class.std::__1::__vector_base.319" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.325" = type { %"class.std::__1::__vector_base.326" }
%"class.std::__1::__vector_base.326" = type { %"struct.std::__1::pair.327"*, %"struct.std::__1::pair.327"*, %"class.std::__1::__compressed_pair.328" }
%"struct.std::__1::pair.327" = type opaque
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"struct.std::__1::pair.327"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.333", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.318"], [3 x %"class.std::__1::vector.318"], i8, %"struct.std::__1::atomic.190", [6 x i8], %"class.std::__1::vector.318", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.343"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.318", %"class.std::__1::vector.318", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.343" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.346" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.352" = type { %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.358" = type { %"class.std::__1::__compressed_pair.359" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.360" }
%"struct.std::__1::__compressed_pair_elem.360" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.368", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.361"], %"class.std::__1::unique_ptr.333" }
%"class.std::__1::vector.361" = type { %"class.std::__1::__vector_base.362" }
%"class.std::__1::__vector_base.362" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.397" = type { %"class.std::__1::__compressed_pair.398" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.399" }
%"struct.std::__1::__compressed_pair_elem.399" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.400", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.404", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.409" }
%"struct.std::__1::atomic.400" = type { %"struct.std::__1::__atomic_base.401" }
%"struct.std::__1::__atomic_base.401" = type { %"struct.std::__1::__cxx_atomic_impl.402" }
%"struct.std::__1::__cxx_atomic_impl.402" = type { %"struct.std::__1::__cxx_atomic_base_impl.403" }
%"struct.std::__1::__cxx_atomic_base_impl.403" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.404" = type { %"struct.std::__1::__atomic_base.405" }
%"struct.std::__1::__atomic_base.405" = type { %"struct.std::__1::__cxx_atomic_impl.406" }
%"struct.std::__1::__cxx_atomic_impl.406" = type { %"struct.std::__1::__cxx_atomic_base_impl.407" }
%"struct.std::__1::__cxx_atomic_base_impl.407" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.409" = type { %"class.std::__1::__hash_table.410" }
%"class.std::__1::__hash_table.410" = type <{ %"class.std::__1::unique_ptr.411", %"class.std::__1::__compressed_pair.421", %"class.std::__1::__compressed_pair.426", %"class.std::__1::__compressed_pair.429", [4 x i8] }>
%"class.std::__1::unique_ptr.411" = type { %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413", %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"struct.std::__1::__hash_node_base.414"** }
%"struct.std::__1::__hash_node_base.414" = type { %"struct.std::__1::__hash_node_base.414"* }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"class.std::__1::__bucket_list_deallocator.416" }
%"class.std::__1::__bucket_list_deallocator.416" = type { %"class.std::__1::__compressed_pair.417" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.422" }
%"struct.std::__1::__compressed_pair_elem.422" = type { %"struct.std::__1::__hash_node_base.414" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"class.std::__1::unique_ptr.436" = type { %"class.std::__1::__compressed_pair.437" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.438" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.333", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic", %"struct.std::__1::atomic.190", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.439", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.439" = type { %"class.std::__1::__hash_table.440" }
%"class.std::__1::__hash_table.440" = type <{ %"class.std::__1::unique_ptr.441", %"class.std::__1::__compressed_pair.451", %"class.std::__1::__compressed_pair.456", %"class.std::__1::__compressed_pair.459", [4 x i8] }>
%"class.std::__1::unique_ptr.441" = type { %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443", %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"struct.std::__1::__hash_node_base.444"** }
%"struct.std::__1::__hash_node_base.444" = type { %"struct.std::__1::__hash_node_base.444"* }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"class.std::__1::__bucket_list_deallocator.446" }
%"class.std::__1::__bucket_list_deallocator.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"struct.std::__1::__hash_node_base.444" }
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"class.std::__1::unique_ptr.466" = type { %"class.std::__1::__compressed_pair.467" }
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.468" }
%"struct.std::__1::__compressed_pair_elem.468" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.472" = type { %"class.std::__1::__compressed_pair.473" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.474" }
%"struct.std::__1::__compressed_pair_elem.474" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.475" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.482" = type { %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.488" = type { %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.490" }
%"struct.std::__1::__compressed_pair_elem.490" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.494" = type { %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.500" = type { %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.502" }
%"struct.std::__1::__compressed_pair_elem.502" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.506" = type { %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.512" = type { %"class.std::__1::__compressed_pair.513" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.514" }
%"struct.std::__1::__compressed_pair_elem.514" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.518" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.537", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.519", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.537" = type { %"struct.std::__1::__atomic_base.538" }
%"struct.std::__1::__atomic_base.538" = type { %"struct.std::__1::__cxx_atomic_impl.539" }
%"struct.std::__1::__cxx_atomic_impl.539" = type { %"struct.std::__1::__cxx_atomic_base_impl.540" }
%"struct.std::__1::__cxx_atomic_base_impl.540" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.541" = type { %"class.std::__1::__hash_table.542" }
%"class.std::__1::__hash_table.542" = type <{ %"class.std::__1::unique_ptr.543", %"class.std::__1::__compressed_pair.553", %"class.std::__1::__compressed_pair.558", %"class.std::__1::__compressed_pair.561", [4 x i8] }>
%"class.std::__1::unique_ptr.543" = type { %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545", %"struct.std::__1::__compressed_pair_elem.547" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"struct.std::__1::__hash_node_base.546"** }
%"struct.std::__1::__hash_node_base.546" = type { %"struct.std::__1::__hash_node_base.546"* }
%"struct.std::__1::__compressed_pair_elem.547" = type { %"class.std::__1::__bucket_list_deallocator.548" }
%"class.std::__1::__bucket_list_deallocator.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.554" }
%"struct.std::__1::__compressed_pair_elem.554" = type { %"struct.std::__1::__hash_node_base.546" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"class.std::__1::unique_ptr.567" = type { %"class.std::__1::__compressed_pair.568" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.569" }
%"struct.std::__1::__compressed_pair_elem.569" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.575" }
%"struct.std::__1::__compressed_pair_elem.575" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.579", %"class.std::__1::vector.579" }
%"class.std::__1::unique_ptr.586" = type { %"class.std::__1::__compressed_pair.587" }
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.588" }
%"struct.std::__1::__compressed_pair_elem.588" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.368" = type { %"class.std::__1::__hash_table.369" }
%"class.std::__1::__hash_table.369" = type <{ %"class.std::__1::unique_ptr.370", %"class.std::__1::__compressed_pair.380", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.389", [4 x i8] }>
%"class.std::__1::unique_ptr.370" = type { %"class.std::__1::__compressed_pair.371" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.372", %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.372" = type { %"struct.std::__1::__hash_node_base.373"** }
%"struct.std::__1::__hash_node_base.373" = type { %"struct.std::__1::__hash_node_base.373"* }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"class.std::__1::__bucket_list_deallocator.375" }
%"class.std::__1::__bucket_list_deallocator.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"struct.std::__1::__hash_node_base.373" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"class.std::__1::unordered_map.618" = type { %"class.std::__1::__hash_table.619" }
%"class.std::__1::__hash_table.619" = type <{ %"class.std::__1::unique_ptr.620", %"class.std::__1::__compressed_pair.630", %"class.std::__1::__compressed_pair.635", %"class.std::__1::__compressed_pair.638", [4 x i8] }>
%"class.std::__1::unique_ptr.620" = type { %"class.std::__1::__compressed_pair.621" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.622", %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.622" = type { %"struct.std::__1::__hash_node_base.623"** }
%"struct.std::__1::__hash_node_base.623" = type { %"struct.std::__1::__hash_node_base.623"* }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"class.std::__1::__bucket_list_deallocator.625" }
%"class.std::__1::__bucket_list_deallocator.625" = type { %"class.std::__1::__compressed_pair.626" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.630" = type { %"struct.std::__1::__compressed_pair_elem.631" }
%"struct.std::__1::__compressed_pair_elem.631" = type { %"struct.std::__1::__hash_node_base.623" }
%"class.std::__1::__compressed_pair.635" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.638" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"class.std::__1::unordered_map.592" = type { %"class.std::__1::__hash_table.593" }
%"class.std::__1::__hash_table.593" = type <{ %"class.std::__1::unique_ptr.594", %"class.std::__1::__compressed_pair.604", %"class.std::__1::__compressed_pair.609", %"class.std::__1::__compressed_pair.612", [4 x i8] }>
%"class.std::__1::unique_ptr.594" = type { %"class.std::__1::__compressed_pair.595" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.596", %"struct.std::__1::__compressed_pair_elem.598" }
%"struct.std::__1::__compressed_pair_elem.596" = type { %"struct.std::__1::__hash_node_base.597"** }
%"struct.std::__1::__hash_node_base.597" = type { %"struct.std::__1::__hash_node_base.597"* }
%"struct.std::__1::__compressed_pair_elem.598" = type { %"class.std::__1::__bucket_list_deallocator.599" }
%"class.std::__1::__bucket_list_deallocator.599" = type { %"class.std::__1::__compressed_pair.600" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.605" }
%"struct.std::__1::__compressed_pair_elem.605" = type { %"struct.std::__1::__hash_node_base.597" }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"class.std::__1::unordered_map.642" = type { %"class.std::__1::__hash_table.643" }
%"class.std::__1::__hash_table.643" = type <{ %"class.std::__1::unique_ptr.644", %"class.std::__1::__compressed_pair.654", %"class.std::__1::__compressed_pair.659", %"class.std::__1::__compressed_pair.664", [4 x i8] }>
%"class.std::__1::unique_ptr.644" = type { %"class.std::__1::__compressed_pair.645" }
%"class.std::__1::__compressed_pair.645" = type { %"struct.std::__1::__compressed_pair_elem.646", %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.646" = type { %"struct.std::__1::__hash_node_base.647"** }
%"struct.std::__1::__hash_node_base.647" = type { %"struct.std::__1::__hash_node_base.647"* }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.std::__1::__bucket_list_deallocator.649" }
%"class.std::__1::__bucket_list_deallocator.649" = type { %"class.std::__1::__compressed_pair.650" }
%"class.std::__1::__compressed_pair.650" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.655" }
%"struct.std::__1::__compressed_pair_elem.655" = type { %"struct.std::__1::__hash_node_base.647" }
%"class.std::__1::__compressed_pair.659" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"class.std::__1::vector.670" = type { %"class.std::__1::__vector_base.671" }
%"class.std::__1::__vector_base.671" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.672" }
%"class.std::__1::__compressed_pair.672" = type { %"struct.std::__1::__compressed_pair_elem.673" }
%"struct.std::__1::__compressed_pair_elem.673" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.677" = type { %"class.std::__1::__compressed_pair.678" }
%"class.std::__1::__compressed_pair.678" = type { %"struct.std::__1::__compressed_pair_elem.679" }
%"struct.std::__1::__compressed_pair_elem.679" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::StringsStorage" = type { %"class.v8::base::CustomMatcherTemplateHashMapImpl", %"class.v8::base::Mutex" }
%"class.v8::base::CustomMatcherTemplateHashMapImpl" = type { %"class.v8::base::TemplateHashMapImpl.683" }
%"class.v8::base::TemplateHashMapImpl.683" = type { %"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::HashEqualityThenKeyMatcher<void *, bool (*)(void *, void *)>, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<void *, void *, v8::base::HashEqualityThenKeyMatcher<void *, bool (*)(void *, void *)>, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::HashEqualityThenKeyMatcher", %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"struct.v8::base::HashEqualityThenKeyMatcher" = type { i1 (i8*, i8*)* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::internal::Vector.1253" = type { i32*, i64 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.1255" }
%"struct.std::__1::pair.1255" = type { i64, %"struct.v8::internal::AddressToTraceMap::RangeStack" }
%"struct.v8::internal::AddressToTraceMap::RangeStack" = type <{ i64, i32, [4 x i8] }>
%"class.v8::internal::JavaScriptFrameIterator" = type { %"class.v8::internal::StackFrameIterator" }
%"class.v8::internal::StackFrameIterator" = type { %"class.v8::internal::StackFrameIteratorBase.base", [7 x i8] }
%"class.v8::internal::StackFrameIteratorBase.base" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::EntryFrame", %"class.v8::internal::ConstructEntryFrame", %"class.v8::internal::ExitFrame", %"class.v8::internal::WasmFrame", %"class.v8::internal::WasmToJsFrame", %"class.v8::internal::JsToWasmFrame", %"class.v8::internal::WasmDebugBreakFrame", %"class.v8::internal::CWasmEntryFrame", %"class.v8::internal::WasmExitFrame", %"class.v8::internal::WasmCompileLazyFrame", %"class.v8::internal::InterpretedFrame", %"class.v8::internal::BaselineFrame", %"class.v8::internal::OptimizedFrame", %"class.v8::internal::StubFrame", %"class.v8::internal::BuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationWithCatchFrame", %"class.v8::internal::InternalFrame", %"class.v8::internal::ConstructFrame", %"class.v8::internal::BuiltinFrame", %"class.v8::internal::BuiltinExitFrame", %"class.v8::internal::NativeFrame", %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackHandler"*, i8 }>
%"class.v8::internal::EntryFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::TypedFrame" = type { %"class.v8::internal::CommonFrame" }
%"class.v8::internal::CommonFrame" = type { %"class.v8::internal::StackFrame" }
%"class.v8::internal::StackFrame" = type { i32 (...)**, %"class.v8::internal::StackFrameIteratorBase"*, %"class.v8::internal::Isolate"*, %"struct.v8::internal::StackFrame::State" }
%"class.v8::internal::StackFrameIteratorBase" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::EntryFrame", %"class.v8::internal::ConstructEntryFrame", %"class.v8::internal::ExitFrame", %"class.v8::internal::WasmFrame", %"class.v8::internal::WasmToJsFrame", %"class.v8::internal::JsToWasmFrame", %"class.v8::internal::WasmDebugBreakFrame", %"class.v8::internal::CWasmEntryFrame", %"class.v8::internal::WasmExitFrame", %"class.v8::internal::WasmCompileLazyFrame", %"class.v8::internal::InterpretedFrame", %"class.v8::internal::BaselineFrame", %"class.v8::internal::OptimizedFrame", %"class.v8::internal::StubFrame", %"class.v8::internal::BuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationWithCatchFrame", %"class.v8::internal::InternalFrame", %"class.v8::internal::ConstructFrame", %"class.v8::internal::BuiltinFrame", %"class.v8::internal::BuiltinExitFrame", %"class.v8::internal::NativeFrame", %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackHandler"*, i8, [7 x i8] }>
%"struct.v8::internal::StackFrame::State" = type { i64, i64, i64*, i64, i64*, i64* }
%"class.v8::internal::ConstructEntryFrame" = type { %"class.v8::internal::EntryFrame" }
%"class.v8::internal::ExitFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::WasmFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::WasmToJsFrame" = type { %"class.v8::internal::StubFrame" }
%"class.v8::internal::JsToWasmFrame" = type { %"class.v8::internal::StubFrame" }
%"class.v8::internal::WasmDebugBreakFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::CWasmEntryFrame" = type { %"class.v8::internal::StubFrame" }
%"class.v8::internal::WasmExitFrame" = type { %"class.v8::internal::WasmFrame" }
%"class.v8::internal::WasmCompileLazyFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::InterpretedFrame" = type { %"class.v8::internal::UnoptimizedFrame" }
%"class.v8::internal::UnoptimizedFrame" = type { %"class.v8::internal::JavaScriptFrame" }
%"class.v8::internal::JavaScriptFrame" = type { %"class.v8::internal::CommonFrameWithJSLinkage" }
%"class.v8::internal::CommonFrameWithJSLinkage" = type { %"class.v8::internal::CommonFrame" }
%"class.v8::internal::BaselineFrame" = type { %"class.v8::internal::UnoptimizedFrame" }
%"class.v8::internal::OptimizedFrame" = type { %"class.v8::internal::JavaScriptFrame" }
%"class.v8::internal::StubFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::BuiltinContinuationFrame" = type { %"class.v8::internal::InternalFrame" }
%"class.v8::internal::JavaScriptBuiltinContinuationFrame" = type { %"class.v8::internal::TypedFrameWithJSLinkage" }
%"class.v8::internal::TypedFrameWithJSLinkage" = type { %"class.v8::internal::CommonFrameWithJSLinkage" }
%"class.v8::internal::JavaScriptBuiltinContinuationWithCatchFrame" = type { %"class.v8::internal::JavaScriptBuiltinContinuationFrame" }
%"class.v8::internal::InternalFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::ConstructFrame" = type { %"class.v8::internal::InternalFrame" }
%"class.v8::internal::BuiltinFrame" = type { %"class.v8::internal::TypedFrameWithJSLinkage" }
%"class.v8::internal::BuiltinExitFrame" = type { %"class.v8::internal::ExitFrame" }
%"class.v8::internal::NativeFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::StackHandler" = type { i8 }

$_ZNSt3__16__treeINS_12__value_typeImN2v88internal17AddressToTraceMap10RangeStackEEENS_19__map_value_compareImS6_NS_4lessImEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN2v84base19TemplateHashMapImplIPvS2_NS0_18KeyEqualityMatcherIS2_EENS0_23DefaultAllocationPolicyEE6ResizeEv = comdat any

@.str = private unnamed_addr constant [14 x i8] c"%10u %10u %*c\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"%s #%u\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"%u #%u\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4 = private unnamed_addr constant [24 x i8] c"[AllocationTraceTree:]\0A\00", align 1
@.str.5 = private unnamed_addr constant [50 x i8] c"Total size | Allocation count | Function id | id\0A\00", align 1
@.str.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7 = private unnamed_addr constant [28 x i8] c"[AddressToTraceMap (%zu): \0A\00", align 1
@.str.8 = private unnamed_addr constant [17 x i8] c"[%p - %p] => %u\0A\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"]\0A\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"(root)\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"(V8 API)\00", align 1
@.str.13 = private unnamed_addr constant [35 x i8] c"Out of memory: HashMap::Initialize\00", align 1

@_ZN2v88internal19AllocationTraceNodeC1EPNS0_19AllocationTraceTreeEj = hidden unnamed_addr alias void (%"class.v8::internal::AllocationTraceNode"*, %"class.v8::internal::AllocationTraceTree"*, i32), void (%"class.v8::internal::AllocationTraceNode"*, %"class.v8::internal::AllocationTraceTree"*, i32)* @_ZN2v88internal19AllocationTraceNodeC2EPNS0_19AllocationTraceTreeEj
@_ZN2v88internal19AllocationTraceNodeD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::AllocationTraceNode"*), void (%"class.v8::internal::AllocationTraceNode"*)* @_ZN2v88internal19AllocationTraceNodeD2Ev
@_ZN2v88internal19AllocationTraceTreeC1Ev = hidden unnamed_addr alias void (%"class.v8::internal::AllocationTraceTree"*), void (%"class.v8::internal::AllocationTraceTree"*)* @_ZN2v88internal19AllocationTraceTreeC2Ev
@_ZN2v88internal17AllocationTracker12FunctionInfoC1Ev = hidden unnamed_addr alias void (%"struct.v8::internal::AllocationTracker::FunctionInfo"*), void (%"struct.v8::internal::AllocationTracker::FunctionInfo"*)* @_ZN2v88internal17AllocationTracker12FunctionInfoC2Ev
@_ZN2v88internal17AllocationTrackerC1EPNS0_14HeapObjectsMapEPNS0_14StringsStorageE = hidden unnamed_addr alias void (%"class.v8::internal::AllocationTracker"*, %"class.v8::internal::HeapObjectsMap"*, %"class.v8::internal::StringsStorage"*), void (%"class.v8::internal::AllocationTracker"*, %"class.v8::internal::HeapObjectsMap"*, %"class.v8::internal::StringsStorage"*)* @_ZN2v88internal17AllocationTrackerC2EPNS0_14HeapObjectsMapEPNS0_14StringsStorageE
@_ZN2v88internal17AllocationTrackerD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::AllocationTracker"*), void (%"class.v8::internal::AllocationTracker"*)* @_ZN2v88internal17AllocationTrackerD2Ev
@_ZN2v88internal17AllocationTracker18UnresolvedLocationC1ENS0_6ScriptEiPNS1_12FunctionInfoE = hidden unnamed_addr alias void (%"class.v8::internal::AllocationTracker::UnresolvedLocation"*, i64, i32, %"struct.v8::internal::AllocationTracker::FunctionInfo"*), void (%"class.v8::internal::AllocationTracker::UnresolvedLocation"*, i64, i32, %"struct.v8::internal::AllocationTracker::FunctionInfo"*)* @_ZN2v88internal17AllocationTracker18UnresolvedLocationC2ENS0_6ScriptEiPNS1_12FunctionInfoE
@_ZN2v88internal17AllocationTracker18UnresolvedLocationD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::AllocationTracker::UnresolvedLocation"*), void (%"class.v8::internal::AllocationTracker::UnresolvedLocation"*)* @_ZN2v88internal17AllocationTracker18UnresolvedLocationD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal19AllocationTraceNodeC2EPNS0_19AllocationTraceTreeEj(%"class.v8::internal::AllocationTraceNode"* nocapture, %"class.v8::internal::AllocationTraceTree"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode", %"class.v8::internal::AllocationTraceNode"* %0, i64 0, i32 0
  store %"class.v8::internal::AllocationTraceTree"* %1, %"class.v8::internal::AllocationTraceTree"** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode", %"class.v8::internal::AllocationTraceNode"* %0, i64 0, i32 1
  store i32 %2, i32* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode", %"class.v8::internal::AllocationTraceNode"* %0, i64 0, i32 2
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode", %"class.v8::internal::AllocationTraceNode"* %0, i64 0, i32 3
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode", %"class.v8::internal::AllocationTraceNode"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.v8::internal::AllocationTraceTree", %"class.v8::internal::AllocationTraceTree"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, 1
  store i32 %11, i32* %9, align 8
  store i32 %10, i32* %8, align 4
  %12 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode", %"class.v8::internal::AllocationTraceNode"* %0, i64 0, i32 5
  %13 = bitcast %"class.std::__1::vector"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal19AllocationTraceNodeD2Ev(%"class.v8::internal::AllocationTraceNode"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode", %"class.v8::internal::AllocationTraceNode"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load %"class.v8::internal::AllocationTraceNode"**, %"class.v8::internal::AllocationTraceNode"*** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode", %"class.v8::internal::AllocationTraceNode"* %0, i64 0, i32 5, i32 0, i32 1
  %5 = load %"class.v8::internal::AllocationTraceNode"**, %"class.v8::internal::AllocationTraceNode"*** %4, align 8
  %6 = icmp eq %"class.v8::internal::AllocationTraceNode"** %3, %5
  br i1 %6, label %9, label %17

7:                                                ; preds = %23
  %8 = load %"class.v8::internal::AllocationTraceNode"**, %"class.v8::internal::AllocationTraceNode"*** %2, align 8
  br label %9

9:                                                ; preds = %7, %1
  %10 = phi %"class.v8::internal::AllocationTraceNode"** [ %8, %7 ], [ %3, %1 ]
  %11 = icmp eq %"class.v8::internal::AllocationTraceNode"** %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %9
  %13 = ptrtoint %"class.v8::internal::AllocationTraceNode"** %10 to i64
  %14 = bitcast %"class.v8::internal::AllocationTraceNode"*** %4 to i64*
  store i64 %13, i64* %14, align 8
  %15 = bitcast %"class.v8::internal::AllocationTraceNode"** %10 to i8*
  tail call void @_ZdlPv(i8* %15) #13
  br label %16

16:                                               ; preds = %9, %12
  ret void

17:                                               ; preds = %1, %23
  %18 = phi %"class.v8::internal::AllocationTraceNode"** [ %24, %23 ], [ %3, %1 ]
  %19 = load %"class.v8::internal::AllocationTraceNode"*, %"class.v8::internal::AllocationTraceNode"** %18, align 8
  %20 = icmp eq %"class.v8::internal::AllocationTraceNode"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  tail call void @_ZN2v88internal19AllocationTraceNodeD2Ev(%"class.v8::internal::AllocationTraceNode"* nonnull %19) #12
  %22 = bitcast %"class.v8::internal::AllocationTraceNode"* %19 to i8*
  tail call void @_ZdlPv(i8* %22) #13
  br label %23

23:                                               ; preds = %21, %17
  %24 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode"*, %"class.v8::internal::AllocationTraceNode"** %18, i64 1
  %25 = icmp eq %"class.v8::internal::AllocationTraceNode"** %24, %5
  br i1 %25, label %7, label %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"class.v8::internal::AllocationTraceNode"* @_ZN2v88internal19AllocationTraceNode9FindChildEj(%"class.v8::internal::AllocationTraceNode"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode", %"class.v8::internal::AllocationTraceNode"* %0, i64 0, i32 5, i32 0, i32 0
  %4 = load %"class.v8::internal::AllocationTraceNode"**, %"class.v8::internal::AllocationTraceNode"*** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode", %"class.v8::internal::AllocationTraceNode"* %0, i64 0, i32 5, i32 0, i32 1
  %6 = load %"class.v8::internal::AllocationTraceNode"**, %"class.v8::internal::AllocationTraceNode"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::AllocationTraceNode"** %4, %6
  br i1 %7, label %17, label %10

8:                                                ; preds = %10
  %9 = icmp eq %"class.v8::internal::AllocationTraceNode"** %16, %6
  br i1 %9, label %17, label %10

10:                                               ; preds = %2, %8
  %11 = phi %"class.v8::internal::AllocationTraceNode"** [ %16, %8 ], [ %4, %2 ]
  %12 = load %"class.v8::internal::AllocationTraceNode"*, %"class.v8::internal::AllocationTraceNode"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode", %"class.v8::internal::AllocationTraceNode"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, %1
  %16 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode"*, %"class.v8::internal::AllocationTraceNode"** %11, i64 1
  br i1 %15, label %17, label %8

17:                                               ; preds = %8, %10, %2
  %18 = phi %"class.v8::internal::AllocationTraceNode"* [ null, %2 ], [ %12, %10 ], [ null, %8 ]
  ret %"class.v8::internal::AllocationTraceNode"* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::AllocationTraceNode"* @_ZN2v88internal19AllocationTraceNode14FindOrAddChildEj(%"class.v8::internal::AllocationTraceNode"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode", %"class.v8::internal::AllocationTraceNode"* %0, i64 0, i32 5, i32 0, i32 0
  %4 = load %"class.v8::internal::AllocationTraceNode"**, %"class.v8::internal::AllocationTraceNode"*** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode", %"class.v8::internal::AllocationTraceNode"* %0, i64 0, i32 5, i32 0, i32 1
  %6 = load %"class.v8::internal::AllocationTraceNode"**, %"class.v8::internal::AllocationTraceNode"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::AllocationTraceNode"** %4, %6
  br i1 %7, label %20, label %10

8:                                                ; preds = %10
  %9 = icmp eq %"class.v8::internal::AllocationTraceNode"** %16, %6
  br i1 %9, label %20, label %10

10:                                               ; preds = %2, %8
  %11 = phi %"class.v8::internal::AllocationTraceNode"** [ %16, %8 ], [ %4, %2 ]
  %12 = load %"class.v8::internal::AllocationTraceNode"*, %"class.v8::internal::AllocationTraceNode"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode", %"class.v8::internal::AllocationTraceNode"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, %1
  %16 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode"*, %"class.v8::internal::AllocationTraceNode"** %11, i64 1
  br i1 %15, label %17, label %8

17:                                               ; preds = %10
  %18 = ptrtoint %"class.v8::internal::AllocationTraceNode"* %12 to i64
  %19 = icmp eq %"class.v8::internal::AllocationTraceNode"* %12, null
  br i1 %19, label %20, label %106

20:                                               ; preds = %8, %2, %17
  %21 = tail call i8* @_Znwm(i64 48) #13
  %22 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode", %"class.v8::internal::AllocationTraceNode"* %0, i64 0, i32 0
  %23 = load %"class.v8::internal::AllocationTraceTree"*, %"class.v8::internal::AllocationTraceTree"** %22, align 8
  %24 = bitcast i8* %21 to %"class.v8::internal::AllocationTraceTree"**
  store %"class.v8::internal::AllocationTraceTree"* %23, %"class.v8::internal::AllocationTraceTree"** %24, align 8
  %25 = getelementptr inbounds i8, i8* %21, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 %1, i32* %26, align 8
  %27 = getelementptr inbounds i8, i8* %21, i64 12
  %28 = bitcast i8* %27 to i32*
  store i32 0, i32* %28, align 4
  %29 = getelementptr inbounds i8, i8* %21, i64 16
  %30 = bitcast i8* %29 to i32*
  store i32 0, i32* %30, align 8
  %31 = getelementptr inbounds i8, i8* %21, i64 20
  %32 = bitcast i8* %31 to i32*
  %33 = getelementptr inbounds %"class.v8::internal::AllocationTraceTree", %"class.v8::internal::AllocationTraceTree"* %23, i64 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = add i32 %34, 1
  store i32 %35, i32* %33, align 8
  store i32 %34, i32* %32, align 4
  %36 = getelementptr inbounds i8, i8* %21, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false) #12
  %37 = ptrtoint i8* %21 to i64
  %38 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode", %"class.v8::internal::AllocationTraceNode"* %0, i64 0, i32 5
  %39 = load %"class.v8::internal::AllocationTraceNode"**, %"class.v8::internal::AllocationTraceNode"*** %5, align 8
  %40 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode", %"class.v8::internal::AllocationTraceNode"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %41 = load %"class.v8::internal::AllocationTraceNode"**, %"class.v8::internal::AllocationTraceNode"*** %40, align 8
  %42 = icmp eq %"class.v8::internal::AllocationTraceNode"** %39, %41
  %43 = ptrtoint %"class.v8::internal::AllocationTraceNode"** %41 to i64
  br i1 %42, label %49, label %44

44:                                               ; preds = %20
  %45 = bitcast %"class.v8::internal::AllocationTraceNode"** %39 to i64*
  store i64 %37, i64* %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode"*, %"class.v8::internal::AllocationTraceNode"** %39, i64 1
  %47 = ptrtoint %"class.v8::internal::AllocationTraceNode"** %46 to i64
  %48 = bitcast %"class.v8::internal::AllocationTraceNode"*** %5 to i64*
  store i64 %47, i64* %48, align 8
  br label %106

49:                                               ; preds = %20
  %50 = ptrtoint %"class.v8::internal::AllocationTraceNode"** %39 to i64
  %51 = bitcast %"class.v8::internal::AllocationTraceNode"*** %5 to i64*
  %52 = bitcast %"class.std::__1::vector"* %38 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = sub i64 %50, %53
  %55 = ashr exact i64 %54, 3
  %56 = add nsw i64 %55, 1
  %57 = icmp ugt i64 %56, 2305843009213693951
  br i1 %57, label %58, label %60

58:                                               ; preds = %49
  %59 = bitcast %"class.std::__1::vector"* %38 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %59) #14
  unreachable

60:                                               ; preds = %49
  %61 = bitcast %"class.v8::internal::AllocationTraceNode"*** %40 to i64*
  %62 = sub i64 %43, %53
  %63 = ashr exact i64 %62, 3
  %64 = icmp ult i64 %63, 1152921504606846975
  br i1 %64, label %65, label %73

65:                                               ; preds = %60
  %66 = ashr exact i64 %62, 2
  %67 = icmp ult i64 %66, %56
  %68 = select i1 %67, i64 %56, i64 %66
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %78, label %70

70:                                               ; preds = %65
  %71 = icmp ugt i64 %68, 2305843009213693951
  br i1 %71, label %72, label %73

72:                                               ; preds = %70
  tail call void @abort() #14
  unreachable

73:                                               ; preds = %70, %60
  %74 = phi i64 [ %68, %70 ], [ 2305843009213693951, %60 ]
  %75 = shl i64 %74, 3
  %76 = tail call i8* @_Znwm(i64 %75) #13
  %77 = bitcast i8* %76 to %"class.v8::internal::AllocationTraceNode"**
  br label %78

78:                                               ; preds = %73, %65
  %79 = phi i64 [ %74, %73 ], [ 0, %65 ]
  %80 = phi %"class.v8::internal::AllocationTraceNode"** [ %77, %73 ], [ null, %65 ]
  %81 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode"*, %"class.v8::internal::AllocationTraceNode"** %80, i64 %55
  %82 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode"*, %"class.v8::internal::AllocationTraceNode"** %80, i64 %79
  %83 = ptrtoint %"class.v8::internal::AllocationTraceNode"** %82 to i64
  %84 = bitcast %"class.v8::internal::AllocationTraceNode"** %81 to i64*
  store i64 %37, i64* %84, align 8
  %85 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode"*, %"class.v8::internal::AllocationTraceNode"** %81, i64 1
  %86 = ptrtoint %"class.v8::internal::AllocationTraceNode"** %85 to i64
  %87 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %38, i64 0, i32 0, i32 0
  %88 = load %"class.v8::internal::AllocationTraceNode"**, %"class.v8::internal::AllocationTraceNode"*** %87, align 8
  %89 = load i64, i64* %51, align 8
  %90 = ptrtoint %"class.v8::internal::AllocationTraceNode"** %88 to i64
  %91 = sub i64 %89, %90
  %92 = ashr exact i64 %91, 3
  %93 = sub nsw i64 0, %92
  %94 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode"*, %"class.v8::internal::AllocationTraceNode"** %81, i64 %93
  %95 = ptrtoint %"class.v8::internal::AllocationTraceNode"** %94 to i64
  %96 = icmp sgt i64 %91, 0
  br i1 %96, label %97, label %101

97:                                               ; preds = %78
  %98 = bitcast %"class.v8::internal::AllocationTraceNode"** %94 to i8*
  %99 = bitcast %"class.v8::internal::AllocationTraceNode"** %88 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %99, i64 %91, i1 false) #12
  %100 = load %"class.v8::internal::AllocationTraceNode"**, %"class.v8::internal::AllocationTraceNode"*** %87, align 8
  br label %101

101:                                              ; preds = %97, %78
  %102 = phi %"class.v8::internal::AllocationTraceNode"** [ %88, %78 ], [ %100, %97 ]
  store i64 %95, i64* %52, align 8
  store i64 %86, i64* %51, align 8
  store i64 %83, i64* %61, align 8
  %103 = icmp eq %"class.v8::internal::AllocationTraceNode"** %102, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %101
  %105 = bitcast %"class.v8::internal::AllocationTraceNode"** %102 to i8*
  tail call void @_ZdlPv(i8* %105) #13
  br label %106

106:                                              ; preds = %104, %101, %44, %17
  %107 = phi i64 [ %18, %17 ], [ %37, %44 ], [ %37, %101 ], [ %37, %104 ]
  %108 = inttoptr i64 %107 to %"class.v8::internal::AllocationTraceNode"*
  ret %"class.v8::internal::AllocationTraceNode"* %108
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal19AllocationTraceNode13AddAllocationEj(%"class.v8::internal::AllocationTraceNode"* nocapture, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode", %"class.v8::internal::AllocationTraceNode"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, %1
  store i32 %5, i32* %3, align 4
  %6 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode", %"class.v8::internal::AllocationTraceNode"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, 1
  store i32 %8, i32* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal19AllocationTraceNode5PrintEiPNS0_17AllocationTrackerE(%"class.v8::internal::AllocationTraceNode"* nocapture readonly, i32, %"class.v8::internal::AllocationTracker"* readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode", %"class.v8::internal::AllocationTraceNode"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode", %"class.v8::internal::AllocationTraceNode"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  tail call void (i8*, ...) @_ZN2v84base2OS5PrintEPKcz(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 %5, i32 %7, i32 %1, i32 32) #12
  %8 = icmp eq %"class.v8::internal::AllocationTracker"* %2, null
  %9 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode", %"class.v8::internal::AllocationTraceNode"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  br i1 %8, label %21, label %11

11:                                               ; preds = %3
  %12 = zext i32 %10 to i64
  %13 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %2, i64 0, i32 4, i32 0, i32 0
  %14 = load %"struct.v8::internal::AllocationTracker::FunctionInfo"**, %"struct.v8::internal::AllocationTracker::FunctionInfo"*** %13, align 8
  %15 = getelementptr inbounds %"struct.v8::internal::AllocationTracker::FunctionInfo"*, %"struct.v8::internal::AllocationTracker::FunctionInfo"** %14, i64 %12
  %16 = load %"struct.v8::internal::AllocationTracker::FunctionInfo"*, %"struct.v8::internal::AllocationTracker::FunctionInfo"** %15, align 8
  %17 = getelementptr inbounds %"struct.v8::internal::AllocationTracker::FunctionInfo", %"struct.v8::internal::AllocationTracker::FunctionInfo"* %16, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode", %"class.v8::internal::AllocationTraceNode"* %0, i64 0, i32 4
  %20 = load i32, i32* %19, align 4
  tail call void (i8*, ...) @_ZN2v84base2OS5PrintEPKcz(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8* %18, i32 %20) #12
  br label %24

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode", %"class.v8::internal::AllocationTraceNode"* %0, i64 0, i32 4
  %23 = load i32, i32* %22, align 4
  tail call void (i8*, ...) @_ZN2v84base2OS5PrintEPKcz(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i32 %10, i32 %23) #12
  br label %24

24:                                               ; preds = %21, %11
  tail call void (i8*, ...) @_ZN2v84base2OS5PrintEPKcz(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #12
  %25 = add nsw i32 %1, 2
  %26 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode", %"class.v8::internal::AllocationTraceNode"* %0, i64 0, i32 5, i32 0, i32 0
  %27 = load %"class.v8::internal::AllocationTraceNode"**, %"class.v8::internal::AllocationTraceNode"*** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode", %"class.v8::internal::AllocationTraceNode"* %0, i64 0, i32 5, i32 0, i32 1
  %29 = load %"class.v8::internal::AllocationTraceNode"**, %"class.v8::internal::AllocationTraceNode"*** %28, align 8
  %30 = icmp eq %"class.v8::internal::AllocationTraceNode"** %27, %29
  br i1 %30, label %31, label %32

31:                                               ; preds = %32, %24
  ret void

32:                                               ; preds = %24, %32
  %33 = phi %"class.v8::internal::AllocationTraceNode"** [ %35, %32 ], [ %27, %24 ]
  %34 = load %"class.v8::internal::AllocationTraceNode"*, %"class.v8::internal::AllocationTraceNode"** %33, align 8
  tail call void @_ZN2v88internal19AllocationTraceNode5PrintEiPNS0_17AllocationTrackerE(%"class.v8::internal::AllocationTraceNode"* %34, i32 %25, %"class.v8::internal::AllocationTracker"* %2)
  %35 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode"*, %"class.v8::internal::AllocationTraceNode"** %33, i64 1
  %36 = icmp eq %"class.v8::internal::AllocationTraceNode"** %35, %29
  br i1 %36, label %31, label %32
}

declare void @_ZN2v84base2OS5PrintEPKcz(i8*, ...) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal19AllocationTraceTreeC2Ev(%"class.v8::internal::AllocationTraceTree"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::AllocationTraceTree", %"class.v8::internal::AllocationTraceTree"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.v8::internal::AllocationTraceTree", %"class.v8::internal::AllocationTraceTree"* %0, i64 0, i32 1, i32 0
  store %"class.v8::internal::AllocationTraceTree"* %0, %"class.v8::internal::AllocationTraceTree"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::AllocationTraceTree", %"class.v8::internal::AllocationTraceTree"* %0, i64 0, i32 1, i32 1
  store i32 2, i32* %2, align 8
  %5 = bitcast i32* %4 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 1>, <4 x i32>* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::AllocationTraceTree", %"class.v8::internal::AllocationTraceTree"* %0, i64 0, i32 1, i32 5
  %7 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::AllocationTraceNode"* @_ZN2v88internal19AllocationTraceTree14AddPathFromEndERKNS0_6VectorIjEE(%"class.v8::internal::AllocationTraceTree"*, %"class.v8::internal::Vector.1253"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::AllocationTraceTree", %"class.v8::internal::AllocationTraceTree"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.v8::internal::Vector.1253", %"class.v8::internal::Vector.1253"* %1, i64 0, i32 0
  %5 = getelementptr inbounds %"class.v8::internal::Vector.1253", %"class.v8::internal::Vector.1253"* %1, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = shl i64 %6, 32
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = load i32*, i32** %4, align 8
  %11 = ashr exact i64 %7, 32
  %12 = getelementptr inbounds i32, i32* %10, i64 %11
  br label %15

13:                                               ; preds = %15, %2
  %14 = phi %"class.v8::internal::AllocationTraceNode"* [ %3, %2 ], [ %20, %15 ]
  ret %"class.v8::internal::AllocationTraceNode"* %14

15:                                               ; preds = %9, %15
  %16 = phi i32* [ %18, %15 ], [ %12, %9 ]
  %17 = phi %"class.v8::internal::AllocationTraceNode"* [ %20, %15 ], [ %3, %9 ]
  %18 = getelementptr inbounds i32, i32* %16, i64 -1
  %19 = load i32, i32* %18, align 4
  %20 = tail call %"class.v8::internal::AllocationTraceNode"* @_ZN2v88internal19AllocationTraceNode14FindOrAddChildEj(%"class.v8::internal::AllocationTraceNode"* %17, i32 %19)
  %21 = load i32*, i32** %4, align 8
  %22 = icmp eq i32* %18, %21
  br i1 %22, label %13, label %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal19AllocationTraceTree5PrintEPNS0_17AllocationTrackerE(%"class.v8::internal::AllocationTraceTree"* nocapture readonly, %"class.v8::internal::AllocationTracker"* readonly) local_unnamed_addr #0 align 2 {
  tail call void (i8*, ...) @_ZN2v84base2OS5PrintEPKcz(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0)) #12
  tail call void (i8*, ...) @_ZN2v84base2OS5PrintEPKcz(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.5, i64 0, i64 0)) #12
  %3 = getelementptr inbounds %"class.v8::internal::AllocationTraceTree", %"class.v8::internal::AllocationTraceTree"* %0, i64 0, i32 1
  tail call void @_ZN2v88internal19AllocationTraceNode5PrintEiPNS0_17AllocationTrackerE(%"class.v8::internal::AllocationTraceNode"* %3, i32 0, %"class.v8::internal::AllocationTracker"* %1)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal17AllocationTracker12FunctionInfoC2Ev(%"struct.v8::internal::AllocationTracker::FunctionInfo"* nocapture) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"struct.v8::internal::AllocationTracker::FunctionInfo", %"struct.v8::internal::AllocationTracker::FunctionInfo"* %0, i64 0, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), i8** %2, align 8
  %3 = getelementptr inbounds %"struct.v8::internal::AllocationTracker::FunctionInfo", %"struct.v8::internal::AllocationTracker::FunctionInfo"* %0, i64 0, i32 1
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"struct.v8::internal::AllocationTracker::FunctionInfo", %"struct.v8::internal::AllocationTracker::FunctionInfo"* %0, i64 0, i32 3
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), i8** %4, align 8
  %5 = getelementptr inbounds %"struct.v8::internal::AllocationTracker::FunctionInfo", %"struct.v8::internal::AllocationTracker::FunctionInfo"* %0, i64 0, i32 4
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.v8::internal::AllocationTracker::FunctionInfo", %"struct.v8::internal::AllocationTracker::FunctionInfo"* %0, i64 0, i32 5
  store i32 -1, i32* %6, align 4
  %7 = getelementptr inbounds %"struct.v8::internal::AllocationTracker::FunctionInfo", %"struct.v8::internal::AllocationTracker::FunctionInfo"* %0, i64 0, i32 6
  store i32 -1, i32* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17AddressToTraceMap8AddRangeEmij(%"class.v8::internal::AddressToTraceMap"*, i64, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = sext i32 %2 to i64
  %6 = add i64 %5, %1
  tail call void @_ZN2v88internal17AddressToTraceMap11RemoveRangeEmm(%"class.v8::internal::AddressToTraceMap"* %0, i64 %1, i64 %6)
  %7 = getelementptr inbounds %"class.v8::internal::AddressToTraceMap", %"class.v8::internal::AddressToTraceMap"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  %10 = icmp eq %"class.std::__1::__tree_node"* %9, null
  br i1 %10, label %39, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.v8::internal::AddressToTraceMap", %"class.v8::internal::AddressToTraceMap"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %13

13:                                               ; preds = %35, %11
  %14 = phi %"class.std::__1::__tree_node"* [ %38, %35 ], [ %9, %11 ]
  %15 = phi %"class.std::__1::__tree_node_base"** [ %37, %35 ], [ %12, %11 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 1, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %6, %17
  br i1 %18, label %19, label %25

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %23, label %35

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0
  br label %41

25:                                               ; preds = %13
  %26 = icmp ult i64 %17, %6
  br i1 %26, label %27, label %33

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 1
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, null
  br i1 %30, label %31, label %35

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0
  br label %41

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0
  br label %41

35:                                               ; preds = %27, %19
  %36 = phi %"class.std::__1::__tree_node_base"* [ %21, %19 ], [ %29, %27 ]
  %37 = phi %"class.std::__1::__tree_node_base"** [ %20, %19 ], [ %28, %27 ]
  %38 = bitcast %"class.std::__1::__tree_node_base"* %36 to %"class.std::__1::__tree_node"*
  br label %13

39:                                               ; preds = %4
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  br label %41

41:                                               ; preds = %39, %33, %31, %23
  %42 = phi %"class.std::__1::__tree_end_node"* [ %7, %39 ], [ %24, %23 ], [ %32, %31 ], [ %34, %33 ]
  %43 = phi %"class.std::__1::__tree_node_base"** [ %40, %39 ], [ %20, %23 ], [ %28, %31 ], [ %15, %33 ]
  %44 = bitcast %"class.std::__1::__tree_node_base"** %43 to %"class.std::__1::__tree_node"**
  %45 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node"* %45, null
  br i1 %46, label %47, label %75

47:                                               ; preds = %41
  %48 = tail call i8* @_Znwm(i64 56) #13, !noalias !2
  %49 = getelementptr inbounds i8, i8* %48, i64 32
  %50 = bitcast i8* %49 to i64*
  store i64 %6, i64* %50, align 8, !noalias !2
  %51 = getelementptr inbounds i8, i8* %48, i64 40
  %52 = bitcast i8* %51 to i64*
  store i64 %1, i64* %52, align 8, !noalias !2
  %53 = getelementptr inbounds i8, i8* %48, i64 48
  %54 = bitcast i8* %53 to i32*
  store i32 %3, i32* %54, align 8, !noalias !2
  %55 = bitcast i8* %48 to %"class.std::__1::__tree_node_base"*
  %56 = getelementptr inbounds i8, i8* %48, i64 16
  %57 = bitcast i8* %56 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %42, %"class.std::__1::__tree_end_node"** %57, align 8
  %58 = bitcast %"class.std::__1::__tree_node_base"** %43 to i8**
  store i8* %48, i8** %58, align 8
  %59 = getelementptr inbounds %"class.v8::internal::AddressToTraceMap", %"class.v8::internal::AddressToTraceMap"* %0, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %59, align 8
  %61 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, null
  br i1 %63, label %68, label %64

64:                                               ; preds = %47
  %65 = ptrtoint %"class.std::__1::__tree_node_base"* %62 to i64
  %66 = bitcast %"class.v8::internal::AddressToTraceMap"* %0 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  br label %68

68:                                               ; preds = %64, %47
  %69 = phi %"class.std::__1::__tree_node_base"* [ %55, %47 ], [ %67, %64 ]
  %70 = getelementptr inbounds %"class.v8::internal::AddressToTraceMap", %"class.v8::internal::AddressToTraceMap"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %71 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %70, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %71, %"class.std::__1::__tree_node_base"* %69) #12
  %72 = getelementptr inbounds %"class.v8::internal::AddressToTraceMap", %"class.v8::internal::AddressToTraceMap"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %73, 1
  store i64 %74, i64* %72, align 8
  br label %75

75:                                               ; preds = %41, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17AddressToTraceMap11RemoveRangeEmm(%"class.v8::internal::AddressToTraceMap"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::AddressToTraceMap", %"class.v8::internal::AddressToTraceMap"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %198, label %8

8:                                                ; preds = %3, %8
  %9 = phi %"class.std::__1::__tree_end_node"* [ %19, %8 ], [ %4, %3 ]
  %10 = phi %"class.std::__1::__tree_node"* [ %20, %8 ], [ %6, %3 ]
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 1, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %12, %1
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 0, i32 0
  %15 = bitcast %"class.std::__1::__tree_node"* %10 to %"class.std::__1::__tree_node"**
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::__tree_node_base"** %16 to %"class.std::__1::__tree_node"**
  %18 = select i1 %13, %"class.std::__1::__tree_node"** %15, %"class.std::__1::__tree_node"** %17
  %19 = select i1 %13, %"class.std::__1::__tree_end_node"* %14, %"class.std::__1::__tree_end_node"* %9
  %20 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %18, align 8
  %21 = icmp eq %"class.std::__1::__tree_node"* %20, null
  br i1 %21, label %22, label %8

22:                                               ; preds = %8
  %23 = icmp eq %"class.std::__1::__tree_end_node"* %19, %4
  br i1 %23, label %198, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 5
  %26 = bitcast %"class.std::__1::__tree_end_node"* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp ult i64 %27, %1
  br i1 %28, label %29, label %33

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 6
  %31 = bitcast %"class.std::__1::__tree_end_node"* %30 to i32*
  %32 = load i32, i32* %31, align 8
  br label %33

33:                                               ; preds = %29, %24
  %34 = phi i64 [ %27, %29 ], [ 0, %24 ]
  %35 = phi i32 [ %32, %29 ], [ 0, %24 ]
  br label %36

36:                                               ; preds = %76, %33
  %37 = phi %"class.std::__1::__tree_end_node"* [ %19, %33 ], [ %77, %76 ]
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %37, i64 4
  %39 = bitcast %"class.std::__1::__tree_end_node"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = icmp ugt i64 %40, %2
  br i1 %41, label %42, label %48

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %37, i64 5
  %44 = bitcast %"class.std::__1::__tree_end_node"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = icmp ult i64 %45, %2
  br i1 %46, label %47, label %79

47:                                               ; preds = %42
  store i64 %2, i64* %44, align 8
  br label %79

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %37, i64 1, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %60

52:                                               ; preds = %48
  %53 = bitcast %"class.std::__1::__tree_end_node"* %37 to %"class.std::__1::__tree_node_base"*
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %37, i64 2
  %55 = bitcast %"class.std::__1::__tree_end_node"* %54 to %"class.std::__1::__tree_end_node"**
  %56 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %55, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %56, i64 0, i32 0
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_node_base"* %58, %53
  br i1 %59, label %76, label %67

60:                                               ; preds = %48, %60
  %61 = phi %"class.std::__1::__tree_node_base"* [ %63, %60 ], [ %50, %48 ]
  %62 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %61, i64 0, i32 0, i32 0
  %63 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %62, align 8
  %64 = icmp eq %"class.std::__1::__tree_node_base"* %63, null
  br i1 %64, label %65, label %60

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %61, i64 0, i32 0
  br label %76

67:                                               ; preds = %52, %67
  %68 = phi %"class.std::__1::__tree_end_node"** [ %71, %67 ], [ %55, %52 ]
  %69 = bitcast %"class.std::__1::__tree_end_node"** %68 to %"class.std::__1::__tree_node_base"**
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  %71 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %70, i64 0, i32 2
  %72 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %71, align 8
  %73 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %72, i64 0, i32 0
  %74 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %73, align 8
  %75 = icmp eq %"class.std::__1::__tree_node_base"* %74, %70
  br i1 %75, label %76, label %67

76:                                               ; preds = %67, %52, %65
  %77 = phi %"class.std::__1::__tree_end_node"* [ %66, %65 ], [ %56, %52 ], [ %72, %67 ]
  %78 = icmp eq %"class.std::__1::__tree_end_node"* %77, %4
  br i1 %78, label %79, label %36

79:                                               ; preds = %76, %42, %47
  %80 = phi %"class.std::__1::__tree_end_node"* [ %37, %47 ], [ %37, %42 ], [ %4, %76 ]
  %81 = icmp eq %"class.std::__1::__tree_end_node"* %19, %80
  br i1 %81, label %129, label %82

82:                                               ; preds = %79
  %83 = getelementptr inbounds %"class.v8::internal::AddressToTraceMap", %"class.v8::internal::AddressToTraceMap"* %0, i64 0, i32 0, i32 0, i32 0
  %84 = bitcast %"class.v8::internal::AddressToTraceMap"* %0 to i64*
  %85 = getelementptr inbounds %"class.v8::internal::AddressToTraceMap", %"class.v8::internal::AddressToTraceMap"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %86 = getelementptr inbounds %"class.v8::internal::AddressToTraceMap", %"class.v8::internal::AddressToTraceMap"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %87

87:                                               ; preds = %122, %82
  %88 = phi %"class.std::__1::__tree_end_node"* [ %19, %82 ], [ %117, %122 ]
  %89 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %88, i64 1, i32 0
  %90 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %89, align 8
  %91 = icmp eq %"class.std::__1::__tree_node_base"* %90, null
  br i1 %91, label %92, label %100

92:                                               ; preds = %87
  %93 = bitcast %"class.std::__1::__tree_end_node"* %88 to %"class.std::__1::__tree_node_base"*
  %94 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %88, i64 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %94 to %"class.std::__1::__tree_end_node"**
  %96 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %95, align 8
  %97 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %96, i64 0, i32 0
  %98 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %97, align 8
  %99 = icmp eq %"class.std::__1::__tree_node_base"* %98, %93
  br i1 %99, label %116, label %107

100:                                              ; preds = %87, %100
  %101 = phi %"class.std::__1::__tree_node_base"* [ %103, %100 ], [ %90, %87 ]
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %101, i64 0, i32 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %105, label %100

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %101, i64 0, i32 0
  br label %116

107:                                              ; preds = %92, %107
  %108 = phi %"class.std::__1::__tree_end_node"** [ %111, %107 ], [ %95, %92 ]
  %109 = bitcast %"class.std::__1::__tree_end_node"** %108 to %"class.std::__1::__tree_node_base"**
  %110 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %109, align 8
  %111 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %110, i64 0, i32 2
  %112 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %111, align 8
  %113 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %112, i64 0, i32 0
  %114 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %113, align 8
  %115 = icmp eq %"class.std::__1::__tree_node_base"* %114, %110
  br i1 %115, label %116, label %107

116:                                              ; preds = %107, %105, %92
  %117 = phi %"class.std::__1::__tree_end_node"* [ %106, %105 ], [ %96, %92 ], [ %112, %107 ]
  %118 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %83, align 8
  %119 = icmp eq %"class.std::__1::__tree_end_node"* %118, %88
  br i1 %119, label %120, label %122

120:                                              ; preds = %116
  %121 = ptrtoint %"class.std::__1::__tree_end_node"* %117 to i64
  store i64 %121, i64* %84, align 8
  br label %122

122:                                              ; preds = %120, %116
  %123 = load i64, i64* %85, align 8
  %124 = add i64 %123, -1
  store i64 %124, i64* %85, align 8
  %125 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %86, align 8
  %126 = bitcast %"class.std::__1::__tree_end_node"* %88 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %125, %"class.std::__1::__tree_node_base"* %126) #12
  %127 = bitcast %"class.std::__1::__tree_end_node"* %88 to i8*
  tail call void @_ZdlPv(i8* %127) #13
  %128 = icmp eq %"class.std::__1::__tree_end_node"* %117, %80
  br i1 %128, label %129, label %87

129:                                              ; preds = %122, %79
  %130 = icmp eq i64 %34, 0
  br i1 %130, label %198, label %131

131:                                              ; preds = %129
  %132 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %133 = icmp eq %"class.std::__1::__tree_node"* %132, null
  br i1 %133, label %162, label %134

134:                                              ; preds = %131
  %135 = getelementptr inbounds %"class.v8::internal::AddressToTraceMap", %"class.v8::internal::AddressToTraceMap"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %136

136:                                              ; preds = %158, %134
  %137 = phi %"class.std::__1::__tree_node"* [ %161, %158 ], [ %132, %134 ]
  %138 = phi %"class.std::__1::__tree_node_base"** [ %160, %158 ], [ %135, %134 ]
  %139 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %137, i64 0, i32 1, i32 0, i32 0
  %140 = load i64, i64* %139, align 8
  %141 = icmp ugt i64 %140, %1
  br i1 %141, label %142, label %148

142:                                              ; preds = %136
  %143 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %137, i64 0, i32 0, i32 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, null
  br i1 %145, label %146, label %158

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %137, i64 0, i32 0, i32 0
  br label %164

148:                                              ; preds = %136
  %149 = icmp ult i64 %140, %1
  br i1 %149, label %150, label %156

150:                                              ; preds = %148
  %151 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %137, i64 0, i32 0, i32 1
  %152 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %151, align 8
  %153 = icmp eq %"class.std::__1::__tree_node_base"* %152, null
  br i1 %153, label %154, label %158

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %137, i64 0, i32 0, i32 0
  br label %164

156:                                              ; preds = %148
  %157 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %137, i64 0, i32 0, i32 0
  br label %164

158:                                              ; preds = %150, %142
  %159 = phi %"class.std::__1::__tree_node_base"* [ %144, %142 ], [ %152, %150 ]
  %160 = phi %"class.std::__1::__tree_node_base"** [ %143, %142 ], [ %151, %150 ]
  %161 = bitcast %"class.std::__1::__tree_node_base"* %159 to %"class.std::__1::__tree_node"*
  br label %136

162:                                              ; preds = %131
  %163 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %164

164:                                              ; preds = %162, %156, %154, %146
  %165 = phi %"class.std::__1::__tree_end_node"* [ %4, %162 ], [ %147, %146 ], [ %155, %154 ], [ %157, %156 ]
  %166 = phi %"class.std::__1::__tree_node_base"** [ %163, %162 ], [ %143, %146 ], [ %151, %154 ], [ %138, %156 ]
  %167 = bitcast %"class.std::__1::__tree_node_base"** %166 to %"class.std::__1::__tree_node"**
  %168 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %167, align 8
  %169 = icmp eq %"class.std::__1::__tree_node"* %168, null
  br i1 %169, label %170, label %198

170:                                              ; preds = %164
  %171 = tail call i8* @_Znwm(i64 56) #13, !noalias !5
  %172 = getelementptr inbounds i8, i8* %171, i64 32
  %173 = bitcast i8* %172 to i64*
  store i64 %1, i64* %173, align 8, !noalias !5
  %174 = getelementptr inbounds i8, i8* %171, i64 40
  %175 = bitcast i8* %174 to i64*
  store i64 %34, i64* %175, align 8, !noalias !5
  %176 = getelementptr inbounds i8, i8* %171, i64 48
  %177 = bitcast i8* %176 to i32*
  store i32 %35, i32* %177, align 8, !noalias !5
  %178 = bitcast i8* %171 to %"class.std::__1::__tree_node_base"*
  %179 = getelementptr inbounds i8, i8* %171, i64 16
  %180 = bitcast i8* %179 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %171, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %165, %"class.std::__1::__tree_end_node"** %180, align 8
  %181 = bitcast %"class.std::__1::__tree_node_base"** %166 to i8**
  store i8* %171, i8** %181, align 8
  %182 = getelementptr inbounds %"class.v8::internal::AddressToTraceMap", %"class.v8::internal::AddressToTraceMap"* %0, i64 0, i32 0, i32 0, i32 0
  %183 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %182, align 8
  %184 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %183, i64 0, i32 0
  %185 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %184, align 8
  %186 = icmp eq %"class.std::__1::__tree_node_base"* %185, null
  br i1 %186, label %191, label %187

187:                                              ; preds = %170
  %188 = ptrtoint %"class.std::__1::__tree_node_base"* %185 to i64
  %189 = bitcast %"class.v8::internal::AddressToTraceMap"* %0 to i64*
  store i64 %188, i64* %189, align 8
  %190 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %166, align 8
  br label %191

191:                                              ; preds = %187, %170
  %192 = phi %"class.std::__1::__tree_node_base"* [ %178, %170 ], [ %190, %187 ]
  %193 = getelementptr inbounds %"class.v8::internal::AddressToTraceMap", %"class.v8::internal::AddressToTraceMap"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %194 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %193, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %194, %"class.std::__1::__tree_node_base"* %192) #12
  %195 = getelementptr inbounds %"class.v8::internal::AddressToTraceMap", %"class.v8::internal::AddressToTraceMap"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %196 = load i64, i64* %195, align 8
  %197 = add i64 %196, 1
  store i64 %197, i64* %195, align 8
  br label %198

198:                                              ; preds = %191, %164, %3, %129, %22
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN2v88internal17AddressToTraceMap14GetTraceNodeIdEm(%"class.v8::internal::AddressToTraceMap"*, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::AddressToTraceMap", %"class.v8::internal::AddressToTraceMap"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %32, label %7

7:                                                ; preds = %2, %7
  %8 = phi %"class.std::__1::__tree_end_node"* [ %18, %7 ], [ %3, %2 ]
  %9 = phi %"class.std::__1::__tree_node"* [ %19, %7 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp ugt i64 %11, %1
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 0
  %14 = bitcast %"class.std::__1::__tree_node"* %9 to %"class.std::__1::__tree_node"**
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::__tree_node_base"** %15 to %"class.std::__1::__tree_node"**
  %17 = select i1 %12, %"class.std::__1::__tree_node"** %14, %"class.std::__1::__tree_node"** %16
  %18 = select i1 %12, %"class.std::__1::__tree_end_node"* %13, %"class.std::__1::__tree_end_node"* %8
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  %20 = icmp eq %"class.std::__1::__tree_node"* %19, null
  br i1 %20, label %21, label %7

21:                                               ; preds = %7
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %18, %3
  br i1 %22, label %32, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 5
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = icmp ugt i64 %26, %1
  br i1 %27, label %32, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 6
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to i32*
  %31 = load i32, i32* %30, align 8
  br label %32

32:                                               ; preds = %2, %23, %21, %28
  %33 = phi i32 [ %31, %28 ], [ 0, %21 ], [ 0, %23 ], [ 0, %2 ]
  ret i32 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17AddressToTraceMap10MoveObjectEmmi(%"class.v8::internal::AddressToTraceMap"*, i64, i64, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::AddressToTraceMap", %"class.v8::internal::AddressToTraceMap"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  %8 = icmp eq %"class.std::__1::__tree_node"* %7, null
  br i1 %8, label %105, label %9

9:                                                ; preds = %4, %9
  %10 = phi %"class.std::__1::__tree_end_node"* [ %20, %9 ], [ %5, %4 ]
  %11 = phi %"class.std::__1::__tree_node"* [ %21, %9 ], [ %7, %4 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 1, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp ugt i64 %13, %1
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node"* %11 to %"class.std::__1::__tree_node"**
  %17 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 1
  %18 = bitcast %"class.std::__1::__tree_node_base"** %17 to %"class.std::__1::__tree_node"**
  %19 = select i1 %14, %"class.std::__1::__tree_node"** %16, %"class.std::__1::__tree_node"** %18
  %20 = select i1 %14, %"class.std::__1::__tree_end_node"* %15, %"class.std::__1::__tree_end_node"* %10
  %21 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %19, align 8
  %22 = icmp eq %"class.std::__1::__tree_node"* %21, null
  br i1 %22, label %23, label %9

23:                                               ; preds = %9
  %24 = icmp eq %"class.std::__1::__tree_end_node"* %20, %5
  br i1 %24, label %105, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %20, i64 5
  %27 = bitcast %"class.std::__1::__tree_end_node"* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = icmp ugt i64 %28, %1
  br i1 %29, label %105, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %20, i64 6
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to i32*
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %105, label %35

35:                                               ; preds = %30
  %36 = sext i32 %3 to i64
  %37 = add i64 %36, %1
  tail call void @_ZN2v88internal17AddressToTraceMap11RemoveRangeEmm(%"class.v8::internal::AddressToTraceMap"* %0, i64 %1, i64 %37)
  %38 = add i64 %36, %2
  tail call void @_ZN2v88internal17AddressToTraceMap11RemoveRangeEmm(%"class.v8::internal::AddressToTraceMap"* %0, i64 %2, i64 %38) #12
  %39 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  %40 = icmp eq %"class.std::__1::__tree_node"* %39, null
  br i1 %40, label %69, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.v8::internal::AddressToTraceMap", %"class.v8::internal::AddressToTraceMap"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %43

43:                                               ; preds = %65, %41
  %44 = phi %"class.std::__1::__tree_node"* [ %68, %65 ], [ %39, %41 ]
  %45 = phi %"class.std::__1::__tree_node_base"** [ %67, %65 ], [ %42, %41 ]
  %46 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %44, i64 0, i32 1, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = icmp ult i64 %38, %47
  br i1 %48, label %49, label %55

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %44, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  %52 = icmp eq %"class.std::__1::__tree_node_base"* %51, null
  br i1 %52, label %53, label %65

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %44, i64 0, i32 0, i32 0
  br label %71

55:                                               ; preds = %43
  %56 = icmp ult i64 %47, %38
  br i1 %56, label %57, label %63

57:                                               ; preds = %55
  %58 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %44, i64 0, i32 0, i32 1
  %59 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %58, align 8
  %60 = icmp eq %"class.std::__1::__tree_node_base"* %59, null
  br i1 %60, label %61, label %65

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %44, i64 0, i32 0, i32 0
  br label %71

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %44, i64 0, i32 0, i32 0
  br label %71

65:                                               ; preds = %57, %49
  %66 = phi %"class.std::__1::__tree_node_base"* [ %51, %49 ], [ %59, %57 ]
  %67 = phi %"class.std::__1::__tree_node_base"** [ %50, %49 ], [ %58, %57 ]
  %68 = bitcast %"class.std::__1::__tree_node_base"* %66 to %"class.std::__1::__tree_node"*
  br label %43

69:                                               ; preds = %35
  %70 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %5, i64 0, i32 0
  br label %71

71:                                               ; preds = %69, %63, %61, %53
  %72 = phi %"class.std::__1::__tree_end_node"* [ %5, %69 ], [ %54, %53 ], [ %62, %61 ], [ %64, %63 ]
  %73 = phi %"class.std::__1::__tree_node_base"** [ %70, %69 ], [ %50, %53 ], [ %58, %61 ], [ %45, %63 ]
  %74 = bitcast %"class.std::__1::__tree_node_base"** %73 to %"class.std::__1::__tree_node"**
  %75 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %74, align 8
  %76 = icmp eq %"class.std::__1::__tree_node"* %75, null
  br i1 %76, label %77, label %105

77:                                               ; preds = %71
  %78 = tail call i8* @_Znwm(i64 56) #13, !noalias !8
  %79 = getelementptr inbounds i8, i8* %78, i64 32
  %80 = bitcast i8* %79 to i64*
  store i64 %38, i64* %80, align 8, !noalias !8
  %81 = getelementptr inbounds i8, i8* %78, i64 40
  %82 = bitcast i8* %81 to i64*
  store i64 %2, i64* %82, align 8, !noalias !8
  %83 = getelementptr inbounds i8, i8* %78, i64 48
  %84 = bitcast i8* %83 to i32*
  store i32 %33, i32* %84, align 8, !noalias !8
  %85 = bitcast i8* %78 to %"class.std::__1::__tree_node_base"*
  %86 = getelementptr inbounds i8, i8* %78, i64 16
  %87 = bitcast i8* %86 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %87, align 8
  %88 = bitcast %"class.std::__1::__tree_node_base"** %73 to i8**
  store i8* %78, i8** %88, align 8
  %89 = getelementptr inbounds %"class.v8::internal::AddressToTraceMap", %"class.v8::internal::AddressToTraceMap"* %0, i64 0, i32 0, i32 0, i32 0
  %90 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %89, align 8
  %91 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %90, i64 0, i32 0
  %92 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %91, align 8
  %93 = icmp eq %"class.std::__1::__tree_node_base"* %92, null
  br i1 %93, label %98, label %94

94:                                               ; preds = %77
  %95 = ptrtoint %"class.std::__1::__tree_node_base"* %92 to i64
  %96 = bitcast %"class.v8::internal::AddressToTraceMap"* %0 to i64*
  store i64 %95, i64* %96, align 8
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %73, align 8
  br label %98

98:                                               ; preds = %94, %77
  %99 = phi %"class.std::__1::__tree_node_base"* [ %85, %77 ], [ %97, %94 ]
  %100 = getelementptr inbounds %"class.v8::internal::AddressToTraceMap", %"class.v8::internal::AddressToTraceMap"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %101 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %100, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %101, %"class.std::__1::__tree_node_base"* %99) #12
  %102 = getelementptr inbounds %"class.v8::internal::AddressToTraceMap", %"class.v8::internal::AddressToTraceMap"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %103 = load i64, i64* %102, align 8
  %104 = add i64 %103, 1
  store i64 %104, i64* %102, align 8
  br label %105

105:                                              ; preds = %4, %25, %23, %98, %71, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17AddressToTraceMap5ClearEv(%"class.v8::internal::AddressToTraceMap"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::AddressToTraceMap", %"class.v8::internal::AddressToTraceMap"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.v8::internal::AddressToTraceMap", %"class.v8::internal::AddressToTraceMap"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImN2v88internal17AddressToTraceMap10RangeStackEEENS_19__map_value_compareImS6_NS_4lessImEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.698"* %2, %"class.std::__1::__tree_node"* %5) #12
  %6 = getelementptr inbounds %"class.v8::internal::AddressToTraceMap", %"class.v8::internal::AddressToTraceMap"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::AddressToTraceMap", %"class.v8::internal::AddressToTraceMap"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %3, %"class.std::__1::__tree_end_node"** %7, align 8
  %8 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %3, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17AddressToTraceMap5PrintEv(%"class.v8::internal::AddressToTraceMap"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::AddressToTraceMap", %"class.v8::internal::AddressToTraceMap"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0), i64 %3) #12
  %4 = getelementptr inbounds %"class.v8::internal::AddressToTraceMap", %"class.v8::internal::AddressToTraceMap"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::AddressToTraceMap", %"class.v8::internal::AddressToTraceMap"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %7 = icmp eq %"class.std::__1::__tree_end_node"* %5, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %47, %1
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #12
  ret void

9:                                                ; preds = %1, %47
  %10 = phi %"class.std::__1::__tree_end_node"* [ %48, %47 ], [ %5, %1 ]
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 4
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 5
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = bitcast %"class.std::__1::__tree_end_node"* %11 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 6
  %18 = bitcast %"class.std::__1::__tree_end_node"* %17 to i32*
  %19 = load i32, i32* %18, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0), i8* %14, i8* %16, i32 %19) #12
  %20 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 1, i32 0
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %23, label %31

23:                                               ; preds = %9
  %24 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.std::__1::__tree_node_base"*
  %25 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 2
  %26 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"class.std::__1::__tree_end_node"**
  %27 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 0, i32 0
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, %24
  br i1 %30, label %47, label %38

31:                                               ; preds = %9, %31
  %32 = phi %"class.std::__1::__tree_node_base"* [ %34, %31 ], [ %21, %9 ]
  %33 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %33, align 8
  %35 = icmp eq %"class.std::__1::__tree_node_base"* %34, null
  br i1 %35, label %36, label %31

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %32, i64 0, i32 0
  br label %47

38:                                               ; preds = %23, %38
  %39 = phi %"class.std::__1::__tree_end_node"** [ %42, %38 ], [ %26, %23 ]
  %40 = bitcast %"class.std::__1::__tree_end_node"** %39 to %"class.std::__1::__tree_node_base"**
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %41, i64 0, i32 2
  %43 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %43, i64 0, i32 0
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node_base"* %45, %41
  br i1 %46, label %47, label %38

47:                                               ; preds = %38, %23, %36
  %48 = phi %"class.std::__1::__tree_end_node"* [ %37, %36 ], [ %27, %23 ], [ %43, %38 ]
  %49 = icmp eq %"class.std::__1::__tree_end_node"* %48, %6
  br i1 %49, label %8, label %9
}

declare void @_ZN2v88internal6PrintFEPKcz(i8*, ...) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17AllocationTrackerC2EPNS0_14HeapObjectsMapEPNS0_14StringsStorageE(%"class.v8::internal::AllocationTracker"*, %"class.v8::internal::HeapObjectsMap"*, %"class.v8::internal::StringsStorage"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 0
  store %"class.v8::internal::HeapObjectsMap"* %1, %"class.v8::internal::HeapObjectsMap"** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 1
  store %"class.v8::internal::StringsStorage"* %2, %"class.v8::internal::StringsStorage"** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.v8::internal::AllocationTraceTree", %"class.v8::internal::AllocationTraceTree"* %6, i64 0, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 2, i32 1, i32 0
  store %"class.v8::internal::AllocationTraceTree"* %6, %"class.v8::internal::AllocationTraceTree"** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 2, i32 1, i32 1
  store i32 2, i32* %7, align 8
  %10 = bitcast i32* %9 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 1>, <4 x i32>* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 2, i32 1, i32 5
  %12 = bitcast %"class.std::__1::vector"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #12
  %13 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 4
  %14 = bitcast %"class.std::__1::vector.684"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #12
  %15 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 5
  %16 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %17 = bitcast i32* %16 to i64*
  store i64 0, i64* %17, align 8
  %18 = tail call noalias i8* @malloc(i64 192) #12
  %19 = getelementptr inbounds %"class.v8::base::PointerTemplateHashMapImpl", %"class.v8::base::PointerTemplateHashMapImpl"* %15, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.v8::base::PointerTemplateHashMapImpl"* %15 to i8**
  store i8* %18, i8** %20, align 8
  %21 = icmp eq i8* %18, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.13, i64 0, i64 0)) #14
  unreachable

23:                                               ; preds = %3
  store i32 8, i32* %16, align 8
  %24 = bitcast i8* %18 to i8**
  store i8* null, i8** %24, align 8
  %25 = getelementptr inbounds i8, i8* %18, i64 24
  %26 = bitcast i8* %25 to i8**
  store i8* null, i8** %26, align 8
  %27 = getelementptr inbounds i8, i8* %18, i64 48
  %28 = bitcast i8* %27 to i8**
  store i8* null, i8** %28, align 8
  %29 = getelementptr inbounds i8, i8* %18, i64 72
  %30 = bitcast i8* %29 to i8**
  store i8* null, i8** %30, align 8
  %31 = load i32, i32* %16, align 8
  %32 = icmp ugt i32 %31, 4
  br i1 %32, label %33, label %41

33:                                               ; preds = %23, %33
  %34 = phi i64 [ %37, %33 ], [ 4, %23 ]
  %35 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %19, align 8
  %36 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %35, i64 %34, i32 0
  store i8* null, i8** %36, align 8
  %37 = add nuw nsw i64 %34, 1
  %38 = load i32, i32* %16, align 8
  %39 = zext i32 %38 to i64
  %40 = icmp ult i64 %37, %39
  br i1 %40, label %33, label %41

41:                                               ; preds = %33, %23
  %42 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %43 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0, i32 0
  %45 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %46 = bitcast %"class.std::__1::__tree_node_base"** %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false) #12
  %47 = bitcast i32* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %47, i8 0, i64 32, i1 false)
  store %"class.std::__1::__tree_end_node"* %44, %"class.std::__1::__tree_end_node"** %45, align 8
  %48 = tail call i8* @_Znwm(i64 40) #13
  %49 = bitcast i8* %48 to i8**
  %50 = getelementptr inbounds i8, i8* %48, i64 8
  %51 = bitcast i8* %50 to i32*
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds i8, i8* %48, i64 16
  %53 = bitcast i8* %52 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), i8** %53, align 8
  %54 = getelementptr inbounds i8, i8* %48, i64 24
  %55 = bitcast i8* %54 to i32*
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds i8, i8* %48, i64 28
  %57 = bitcast i8* %56 to i32*
  store i32 -1, i32* %57, align 4
  %58 = getelementptr inbounds i8, i8* %48, i64 32
  %59 = bitcast i8* %58 to i32*
  store i32 -1, i32* %59, align 8
  %60 = ptrtoint i8* %48 to i64
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i8** %49, align 8
  %61 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 4, i32 0, i32 1
  %62 = load %"struct.v8::internal::AllocationTracker::FunctionInfo"**, %"struct.v8::internal::AllocationTracker::FunctionInfo"*** %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %64 = load %"struct.v8::internal::AllocationTracker::FunctionInfo"**, %"struct.v8::internal::AllocationTracker::FunctionInfo"*** %63, align 8
  %65 = icmp eq %"struct.v8::internal::AllocationTracker::FunctionInfo"** %62, %64
  %66 = ptrtoint %"struct.v8::internal::AllocationTracker::FunctionInfo"** %64 to i64
  br i1 %65, label %72, label %67

67:                                               ; preds = %41
  %68 = bitcast %"struct.v8::internal::AllocationTracker::FunctionInfo"** %62 to i64*
  store i64 %60, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.v8::internal::AllocationTracker::FunctionInfo"*, %"struct.v8::internal::AllocationTracker::FunctionInfo"** %62, i64 1
  %70 = ptrtoint %"struct.v8::internal::AllocationTracker::FunctionInfo"** %69 to i64
  %71 = bitcast %"struct.v8::internal::AllocationTracker::FunctionInfo"*** %61 to i64*
  store i64 %70, i64* %71, align 8
  br label %129

72:                                               ; preds = %41
  %73 = ptrtoint %"struct.v8::internal::AllocationTracker::FunctionInfo"** %62 to i64
  %74 = bitcast %"struct.v8::internal::AllocationTracker::FunctionInfo"*** %61 to i64*
  %75 = bitcast %"class.std::__1::vector.684"* %13 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %73, %76
  %78 = ashr exact i64 %77, 3
  %79 = add nsw i64 %78, 1
  %80 = icmp ugt i64 %79, 2305843009213693951
  br i1 %80, label %81, label %83

81:                                               ; preds = %72
  %82 = bitcast %"class.std::__1::vector.684"* %13 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %82) #14
  unreachable

83:                                               ; preds = %72
  %84 = bitcast %"struct.v8::internal::AllocationTracker::FunctionInfo"*** %63 to i64*
  %85 = sub i64 %66, %76
  %86 = ashr exact i64 %85, 3
  %87 = icmp ult i64 %86, 1152921504606846975
  br i1 %87, label %88, label %96

88:                                               ; preds = %83
  %89 = ashr exact i64 %85, 2
  %90 = icmp ult i64 %89, %79
  %91 = select i1 %90, i64 %79, i64 %89
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %101, label %93

93:                                               ; preds = %88
  %94 = icmp ugt i64 %91, 2305843009213693951
  br i1 %94, label %95, label %96

95:                                               ; preds = %93
  tail call void @abort() #14
  unreachable

96:                                               ; preds = %93, %83
  %97 = phi i64 [ %91, %93 ], [ 2305843009213693951, %83 ]
  %98 = shl i64 %97, 3
  %99 = tail call i8* @_Znwm(i64 %98) #13
  %100 = bitcast i8* %99 to %"struct.v8::internal::AllocationTracker::FunctionInfo"**
  br label %101

101:                                              ; preds = %96, %88
  %102 = phi i64 [ %97, %96 ], [ 0, %88 ]
  %103 = phi %"struct.v8::internal::AllocationTracker::FunctionInfo"** [ %100, %96 ], [ null, %88 ]
  %104 = getelementptr inbounds %"struct.v8::internal::AllocationTracker::FunctionInfo"*, %"struct.v8::internal::AllocationTracker::FunctionInfo"** %103, i64 %78
  %105 = getelementptr inbounds %"struct.v8::internal::AllocationTracker::FunctionInfo"*, %"struct.v8::internal::AllocationTracker::FunctionInfo"** %103, i64 %102
  %106 = ptrtoint %"struct.v8::internal::AllocationTracker::FunctionInfo"** %105 to i64
  %107 = bitcast %"struct.v8::internal::AllocationTracker::FunctionInfo"** %104 to i64*
  store i64 %60, i64* %107, align 8
  %108 = getelementptr inbounds %"struct.v8::internal::AllocationTracker::FunctionInfo"*, %"struct.v8::internal::AllocationTracker::FunctionInfo"** %104, i64 1
  %109 = ptrtoint %"struct.v8::internal::AllocationTracker::FunctionInfo"** %108 to i64
  %110 = getelementptr inbounds %"class.std::__1::vector.684", %"class.std::__1::vector.684"* %13, i64 0, i32 0, i32 0
  %111 = load %"struct.v8::internal::AllocationTracker::FunctionInfo"**, %"struct.v8::internal::AllocationTracker::FunctionInfo"*** %110, align 8
  %112 = load i64, i64* %74, align 8
  %113 = ptrtoint %"struct.v8::internal::AllocationTracker::FunctionInfo"** %111 to i64
  %114 = sub i64 %112, %113
  %115 = ashr exact i64 %114, 3
  %116 = sub nsw i64 0, %115
  %117 = getelementptr inbounds %"struct.v8::internal::AllocationTracker::FunctionInfo"*, %"struct.v8::internal::AllocationTracker::FunctionInfo"** %104, i64 %116
  %118 = ptrtoint %"struct.v8::internal::AllocationTracker::FunctionInfo"** %117 to i64
  %119 = icmp sgt i64 %114, 0
  br i1 %119, label %120, label %124

120:                                              ; preds = %101
  %121 = bitcast %"struct.v8::internal::AllocationTracker::FunctionInfo"** %117 to i8*
  %122 = bitcast %"struct.v8::internal::AllocationTracker::FunctionInfo"** %111 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 8 %122, i64 %114, i1 false) #12
  %123 = load %"struct.v8::internal::AllocationTracker::FunctionInfo"**, %"struct.v8::internal::AllocationTracker::FunctionInfo"*** %110, align 8
  br label %124

124:                                              ; preds = %120, %101
  %125 = phi %"struct.v8::internal::AllocationTracker::FunctionInfo"** [ %111, %101 ], [ %123, %120 ]
  store i64 %118, i64* %75, align 8
  store i64 %109, i64* %74, align 8
  store i64 %106, i64* %84, align 8
  %126 = icmp eq %"struct.v8::internal::AllocationTracker::FunctionInfo"** %125, null
  br i1 %126, label %129, label %127

127:                                              ; preds = %124
  %128 = bitcast %"struct.v8::internal::AllocationTracker::FunctionInfo"** %125 to i8*
  tail call void @_ZdlPv(i8* %128) #13
  br label %129

129:                                              ; preds = %67, %124, %127
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17AllocationTrackerD2Ev(%"class.v8::internal::AllocationTracker"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load %"class.v8::internal::AllocationTracker::UnresolvedLocation"**, %"class.v8::internal::AllocationTracker::UnresolvedLocation"*** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 6, i32 0, i32 1
  %5 = load %"class.v8::internal::AllocationTracker::UnresolvedLocation"**, %"class.v8::internal::AllocationTracker::UnresolvedLocation"*** %4, align 8
  %6 = icmp eq %"class.v8::internal::AllocationTracker::UnresolvedLocation"** %3, %5
  br i1 %6, label %7, label %13

7:                                                ; preds = %24, %1
  %8 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 4, i32 0, i32 0
  %9 = load %"struct.v8::internal::AllocationTracker::FunctionInfo"**, %"struct.v8::internal::AllocationTracker::FunctionInfo"*** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 4, i32 0, i32 1
  %11 = load %"struct.v8::internal::AllocationTracker::FunctionInfo"**, %"struct.v8::internal::AllocationTracker::FunctionInfo"*** %10, align 8
  %12 = icmp eq %"struct.v8::internal::AllocationTracker::FunctionInfo"** %9, %11
  br i1 %12, label %27, label %53

13:                                               ; preds = %1, %24
  %14 = phi %"class.v8::internal::AllocationTracker::UnresolvedLocation"** [ %25, %24 ], [ %3, %1 ]
  %15 = load %"class.v8::internal::AllocationTracker::UnresolvedLocation"*, %"class.v8::internal::AllocationTracker::UnresolvedLocation"** %14, align 8
  %16 = icmp eq %"class.v8::internal::AllocationTracker::UnresolvedLocation"* %15, null
  br i1 %16, label %24, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.v8::internal::AllocationTracker::UnresolvedLocation", %"class.v8::internal::AllocationTracker::UnresolvedLocation"* %15, i64 0, i32 0, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = icmp eq i64* %19, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %17
  tail call void @_ZN2v88internal13GlobalHandles7DestroyEPm(i64* nonnull %19) #12
  br label %22

22:                                               ; preds = %17, %21
  %23 = bitcast %"class.v8::internal::AllocationTracker::UnresolvedLocation"* %15 to i8*
  tail call void @_ZdlPv(i8* %23) #13
  br label %24

24:                                               ; preds = %22, %13
  %25 = getelementptr inbounds %"class.v8::internal::AllocationTracker::UnresolvedLocation"*, %"class.v8::internal::AllocationTracker::UnresolvedLocation"** %14, i64 1
  %26 = icmp eq %"class.v8::internal::AllocationTracker::UnresolvedLocation"** %25, %5
  br i1 %26, label %7, label %13

27:                                               ; preds = %59, %7
  %28 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 8, i32 0, i32 0
  %29 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0, i32 0
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.std::__1::__tree_node"**
  %31 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %30, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImN2v88internal17AddressToTraceMap10RangeStackEEENS_19__map_value_compareImS6_NS_4lessImEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.698"* %28, %"class.std::__1::__tree_node"* %31) #12
  %32 = load %"class.v8::internal::AllocationTracker::UnresolvedLocation"**, %"class.v8::internal::AllocationTracker::UnresolvedLocation"*** %2, align 8
  %33 = icmp eq %"class.v8::internal::AllocationTracker::UnresolvedLocation"** %32, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %27
  %35 = ptrtoint %"class.v8::internal::AllocationTracker::UnresolvedLocation"** %32 to i64
  %36 = bitcast %"class.v8::internal::AllocationTracker::UnresolvedLocation"*** %4 to i64*
  store i64 %35, i64* %36, align 8
  %37 = bitcast %"class.v8::internal::AllocationTracker::UnresolvedLocation"** %32 to i8*
  tail call void @_ZdlPv(i8* %37) #13
  br label %38

38:                                               ; preds = %27, %34
  %39 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %40 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %39, align 8
  %41 = icmp eq %"struct.v8::base::TemplateHashMapEntry"* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  %43 = bitcast %"struct.v8::base::TemplateHashMapEntry"* %40 to i8*
  tail call void @free(i8* %43) #12
  br label %44

44:                                               ; preds = %38, %42
  %45 = load %"struct.v8::internal::AllocationTracker::FunctionInfo"**, %"struct.v8::internal::AllocationTracker::FunctionInfo"*** %8, align 8
  %46 = icmp eq %"struct.v8::internal::AllocationTracker::FunctionInfo"** %45, null
  br i1 %46, label %51, label %47

47:                                               ; preds = %44
  %48 = ptrtoint %"struct.v8::internal::AllocationTracker::FunctionInfo"** %45 to i64
  %49 = bitcast %"struct.v8::internal::AllocationTracker::FunctionInfo"*** %10 to i64*
  store i64 %48, i64* %49, align 8
  %50 = bitcast %"struct.v8::internal::AllocationTracker::FunctionInfo"** %45 to i8*
  tail call void @_ZdlPv(i8* %50) #13
  br label %51

51:                                               ; preds = %44, %47
  %52 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 2, i32 1
  tail call void @_ZN2v88internal19AllocationTraceNodeD2Ev(%"class.v8::internal::AllocationTraceNode"* %52) #12
  ret void

53:                                               ; preds = %7, %59
  %54 = phi %"struct.v8::internal::AllocationTracker::FunctionInfo"** [ %60, %59 ], [ %9, %7 ]
  %55 = load %"struct.v8::internal::AllocationTracker::FunctionInfo"*, %"struct.v8::internal::AllocationTracker::FunctionInfo"** %54, align 8
  %56 = icmp eq %"struct.v8::internal::AllocationTracker::FunctionInfo"* %55, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %53
  %58 = bitcast %"struct.v8::internal::AllocationTracker::FunctionInfo"* %55 to i8*
  tail call void @_ZdlPv(i8* %58) #13
  br label %59

59:                                               ; preds = %57, %53
  %60 = getelementptr inbounds %"struct.v8::internal::AllocationTracker::FunctionInfo"*, %"struct.v8::internal::AllocationTracker::FunctionInfo"** %54, i64 1
  %61 = icmp eq %"struct.v8::internal::AllocationTracker::FunctionInfo"** %60, %11
  br i1 %61, label %27, label %53
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17AllocationTracker23PrepareForSerializationEv(%"class.v8::internal::AllocationTracker"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 6
  %3 = getelementptr inbounds %"class.std::__1::vector.691", %"class.std::__1::vector.691"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.v8::internal::AllocationTracker::UnresolvedLocation"**, %"class.v8::internal::AllocationTracker::UnresolvedLocation"*** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 6, i32 0, i32 1
  %6 = load %"class.v8::internal::AllocationTracker::UnresolvedLocation"**, %"class.v8::internal::AllocationTracker::UnresolvedLocation"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::AllocationTracker::UnresolvedLocation"** %4, %6
  br i1 %7, label %8, label %28

8:                                                ; preds = %1
  %9 = ptrtoint %"class.v8::internal::AllocationTracker::UnresolvedLocation"** %4 to i64
  %10 = bitcast %"class.std::__1::vector.691"* %2 to i64*
  br label %14

11:                                               ; preds = %39
  %12 = bitcast %"class.std::__1::vector.691"* %2 to i64*
  %13 = load i64, i64* %12, align 8
  br label %14

14:                                               ; preds = %8, %11
  %15 = phi i64* [ %10, %8 ], [ %12, %11 ]
  %16 = phi i64 [ %9, %8 ], [ %13, %11 ]
  %17 = bitcast %"class.v8::internal::AllocationTracker::UnresolvedLocation"*** %5 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %19 = bitcast %"class.v8::internal::AllocationTracker::UnresolvedLocation"*** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, %16
  br i1 %21, label %27, label %22

22:                                               ; preds = %14
  store i64 0, i64* %15, align 8
  %23 = icmp eq i64 %16, 0
  %24 = bitcast %"class.v8::internal::AllocationTracker::UnresolvedLocation"*** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false)
  br i1 %23, label %27, label %25

25:                                               ; preds = %22
  %26 = inttoptr i64 %16 to i8*
  tail call void @_ZdlPv(i8* %26) #13
  br label %27

27:                                               ; preds = %14, %22, %25
  ret void

28:                                               ; preds = %1, %39
  %29 = phi %"class.v8::internal::AllocationTracker::UnresolvedLocation"** [ %40, %39 ], [ %4, %1 ]
  %30 = load %"class.v8::internal::AllocationTracker::UnresolvedLocation"*, %"class.v8::internal::AllocationTracker::UnresolvedLocation"** %29, align 8
  tail call void @_ZN2v88internal17AllocationTracker18UnresolvedLocation7ResolveEv(%"class.v8::internal::AllocationTracker::UnresolvedLocation"* %30)
  %31 = icmp eq %"class.v8::internal::AllocationTracker::UnresolvedLocation"* %30, null
  br i1 %31, label %39, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.v8::internal::AllocationTracker::UnresolvedLocation", %"class.v8::internal::AllocationTracker::UnresolvedLocation"* %30, i64 0, i32 0, i32 0, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = icmp eq i64* %34, null
  br i1 %35, label %37, label %36

36:                                               ; preds = %32
  tail call void @_ZN2v88internal13GlobalHandles7DestroyEPm(i64* nonnull %34) #12
  br label %37

37:                                               ; preds = %32, %36
  %38 = bitcast %"class.v8::internal::AllocationTracker::UnresolvedLocation"* %30 to i8*
  tail call void @_ZdlPv(i8* %38) #13
  br label %39

39:                                               ; preds = %37, %28
  %40 = getelementptr inbounds %"class.v8::internal::AllocationTracker::UnresolvedLocation"*, %"class.v8::internal::AllocationTracker::UnresolvedLocation"** %29, i64 1
  %41 = icmp eq %"class.v8::internal::AllocationTracker::UnresolvedLocation"** %40, %6
  br i1 %41, label %11, label %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17AllocationTracker18UnresolvedLocation7ResolveEv(%"class.v8::internal::AllocationTracker::UnresolvedLocation"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::AllocationTracker::UnresolvedLocation", %"class.v8::internal::AllocationTracker::UnresolvedLocation"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = icmp eq i64* %3, null
  br i1 %4, label %47, label %5

5:                                                ; preds = %1
  %6 = load i64, i64* %3, align 8
  %7 = and i64 %6, -262144
  %8 = or i64 %7, 16
  %9 = inttoptr i64 %8 to i64*
  %10 = load i64, i64* %9, align 16
  %11 = add i64 %10, -41416
  %12 = inttoptr i64 %11 to %"class.v8::internal::Isolate"*
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31
  %14 = bitcast %"struct.v8::internal::HandleScopeData"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 1
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = add nsw i32 %19, 1
  store i32 %20, i32* %18, align 8
  %21 = load i64*, i64** %2, align 8
  %22 = getelementptr inbounds %"class.v8::internal::AllocationTracker::UnresolvedLocation", %"class.v8::internal::AllocationTracker::UnresolvedLocation"* %0, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = tail call i32 @_ZN2v88internal6Script13GetLineNumberENS0_6HandleIS1_EEi(i64* %21, i32 %23) #12
  %25 = getelementptr inbounds %"class.v8::internal::AllocationTracker::UnresolvedLocation", %"class.v8::internal::AllocationTracker::UnresolvedLocation"* %0, i64 0, i32 2
  %26 = load %"struct.v8::internal::AllocationTracker::FunctionInfo"*, %"struct.v8::internal::AllocationTracker::FunctionInfo"** %25, align 8
  %27 = getelementptr inbounds %"struct.v8::internal::AllocationTracker::FunctionInfo", %"struct.v8::internal::AllocationTracker::FunctionInfo"* %26, i64 0, i32 5
  store i32 %24, i32* %27, align 4
  %28 = load i64*, i64** %2, align 8
  %29 = load i32, i32* %22, align 8
  %30 = tail call i32 @_ZN2v88internal6Script15GetColumnNumberENS0_6HandleIS1_EEi(i64* %28, i32 %29) #12
  %31 = load %"struct.v8::internal::AllocationTracker::FunctionInfo"*, %"struct.v8::internal::AllocationTracker::FunctionInfo"** %25, align 8
  %32 = getelementptr inbounds %"struct.v8::internal::AllocationTracker::FunctionInfo", %"struct.v8::internal::AllocationTracker::FunctionInfo"* %31, i64 0, i32 6
  store i32 %30, i32* %32, align 8
  %33 = icmp eq i64 %11, 0
  br i1 %33, label %47, label %34

34:                                               ; preds = %5
  %35 = inttoptr i64 %15 to i64*
  %36 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %13, i64 0, i32 0
  %37 = load i64*, i64** %36, align 8
  store i64 %15, i64* %14, align 8
  %38 = load i32, i32* %18, align 8
  %39 = add nsw i32 %38, -1
  store i32 %39, i32* %18, align 8
  %40 = load i64*, i64** %16, align 8
  %41 = icmp eq i64* %40, %17
  br i1 %41, label %44, label %42

42:                                               ; preds = %34
  store i64* %17, i64** %16, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %12) #12
  %43 = load i64*, i64** %36, align 8
  br label %44

44:                                               ; preds = %42, %34
  %45 = phi i64* [ %43, %42 ], [ %35, %34 ]
  %46 = phi i64* [ %17, %42 ], [ %37, %34 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %45, i64* %46) #12
  br label %47

47:                                               ; preds = %44, %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17AllocationTracker15AllocationEventEmi(%"class.v8::internal::AllocationTracker"*, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::JavaScriptFrameIterator", align 8
  %5 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %6 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 0
  %7 = load %"class.v8::internal::HeapObjectsMap"*, %"class.v8::internal::HeapObjectsMap"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::HeapObjectsMap", %"class.v8::internal::HeapObjectsMap"* %7, i64 0, i32 5
  %9 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %8, align 8
  %10 = tail call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %9, i64 %1, i32 %2, i32 1) #12
  %11 = ptrtoint %"class.v8::internal::Heap"* %9 to i64
  %12 = add i64 %11, -41416
  %13 = inttoptr i64 %12 to %"class.v8::internal::Isolate"*
  %14 = bitcast %"class.v8::internal::JavaScriptFrameIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1616, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.v8::internal::JavaScriptFrameIterator", %"class.v8::internal::JavaScriptFrameIterator"* %4, i64 0, i32 0
  call void @_ZN2v88internal18StackFrameIteratorC1EPNS0_7IsolateE(%"class.v8::internal::StackFrameIterator"* nonnull %15, %"class.v8::internal::Isolate"* %13) #12
  %16 = getelementptr inbounds %"class.v8::internal::JavaScriptFrameIterator", %"class.v8::internal::JavaScriptFrameIterator"* %4, i64 0, i32 0, i32 0, i32 23
  %17 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %16, align 8
  %18 = icmp eq %"class.v8::internal::StackFrame"* %17, null
  br i1 %18, label %60, label %19

19:                                               ; preds = %3
  call void @_ZN2v88internal23JavaScriptFrameIterator7AdvanceEv(%"class.v8::internal::JavaScriptFrameIterator"* nonnull %4) #12
  %20 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %16, align 8
  %21 = icmp eq %"class.v8::internal::StackFrame"* %20, null
  br i1 %21, label %60, label %22

22:                                               ; preds = %19
  %23 = bitcast %"class.v8::internal::SharedFunctionInfo"* %5 to i8*
  %24 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %5, i64 0, i32 0, i32 0
  br label %26

26:                                               ; preds = %22, %26
  %27 = phi %"class.v8::internal::StackFrame"* [ %20, %22 ], [ %53, %26 ]
  %28 = phi i64 [ 0, %22 ], [ %51, %26 ]
  %29 = bitcast %"class.v8::internal::StackFrame"* %27 to %"class.v8::internal::JavaScriptFrame"*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #12
  %30 = bitcast %"class.v8::internal::StackFrame"* %27 to i64 (%"class.v8::internal::JavaScriptFrame"*)***
  %31 = load i64 (%"class.v8::internal::JavaScriptFrame"*)**, i64 (%"class.v8::internal::JavaScriptFrame"*)*** %30, align 8
  %32 = getelementptr inbounds i64 (%"class.v8::internal::JavaScriptFrame"*)*, i64 (%"class.v8::internal::JavaScriptFrame"*)** %31, i64 13
  %33 = load i64 (%"class.v8::internal::JavaScriptFrame"*)*, i64 (%"class.v8::internal::JavaScriptFrame"*)** %32, align 8
  %34 = call i64 %33(%"class.v8::internal::JavaScriptFrame"* %29) #12
  %35 = add i64 %34, 11
  %36 = inttoptr i64 %35 to i32*
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i64 %34, -4294967296
  %39 = zext i32 %37 to i64
  %40 = or i64 %38, %39
  store i64 %40, i64* %24, align 8
  %41 = load %"class.v8::internal::HeapObjectsMap"*, %"class.v8::internal::HeapObjectsMap"** %6, align 8
  %42 = add i64 %40, -1
  %43 = inttoptr i64 %42 to i32*
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %38, %45
  %47 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %25, i64 %46) #12
  %48 = call i32 @_ZN2v88internal14HeapObjectsMap14FindOrAddEntryEmjb(%"class.v8::internal::HeapObjectsMap"* %41, i64 %42, i32 %47, i1 zeroext false) #12
  %49 = load i64, i64* %24, align 8
  %50 = call i32 @_ZN2v88internal17AllocationTracker15AddFunctionInfoENS0_18SharedFunctionInfoEj(%"class.v8::internal::AllocationTracker"* %0, i64 %49, i32 %48)
  %51 = add nuw nsw i64 %28, 1
  %52 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 3, i64 %28
  store i32 %50, i32* %52, align 4
  call void @_ZN2v88internal23JavaScriptFrameIterator7AdvanceEv(%"class.v8::internal::JavaScriptFrameIterator"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #12
  %53 = load %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackFrame"** %16, align 8
  %54 = icmp ne %"class.v8::internal::StackFrame"* %53, null
  %55 = icmp ult i64 %51, 64
  %56 = and i1 %55, %54
  br i1 %56, label %26, label %57

57:                                               ; preds = %26
  %58 = trunc i64 %51 to i32
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %69

60:                                               ; preds = %3, %19, %57
  %61 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 9, i32 22
  %62 = load i32, i32* %61, align 8
  %63 = call i32 @_ZN2v88internal17AllocationTracker27functionInfoIndexForVMStateENS_8StateTagE(%"class.v8::internal::AllocationTracker"* %0, i32 %62)
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 2, i32 1
  br label %83

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 3, i64 0
  store i32 %63, i32* %68, align 4
  br label %71

69:                                               ; preds = %57
  %70 = and i64 %51, 4294967295
  br label %71

71:                                               ; preds = %69, %67
  %72 = phi i64 [ 1, %67 ], [ %70, %69 ]
  %73 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 2, i32 1
  %74 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 3, i64 0
  %75 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 3, i64 %72
  br label %76

76:                                               ; preds = %76, %71
  %77 = phi i32* [ %79, %76 ], [ %75, %71 ]
  %78 = phi %"class.v8::internal::AllocationTraceNode"* [ %81, %76 ], [ %73, %71 ]
  %79 = getelementptr inbounds i32, i32* %77, i64 -1
  %80 = load i32, i32* %79, align 4
  %81 = call %"class.v8::internal::AllocationTraceNode"* @_ZN2v88internal19AllocationTraceNode14FindOrAddChildEj(%"class.v8::internal::AllocationTraceNode"* %78, i32 %80) #12
  %82 = icmp eq i32* %79, %74
  br i1 %82, label %83, label %76

83:                                               ; preds = %76, %65
  %84 = phi %"class.v8::internal::AllocationTraceNode"* [ %66, %65 ], [ %81, %76 ]
  %85 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode", %"class.v8::internal::AllocationTraceNode"* %84, i64 0, i32 2
  %86 = load i32, i32* %85, align 4
  %87 = add i32 %86, %2
  store i32 %87, i32* %85, align 4
  %88 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode", %"class.v8::internal::AllocationTraceNode"* %84, i64 0, i32 3
  %89 = load i32, i32* %88, align 8
  %90 = add i32 %89, 1
  store i32 %90, i32* %88, align 8
  %91 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 8
  %92 = getelementptr inbounds %"class.v8::internal::AllocationTraceNode", %"class.v8::internal::AllocationTraceNode"* %84, i64 0, i32 4
  %93 = load i32, i32* %92, align 4
  %94 = sext i32 %2 to i64
  %95 = add i64 %94, %1
  call void @_ZN2v88internal17AddressToTraceMap11RemoveRangeEmm(%"class.v8::internal::AddressToTraceMap"* %91, i64 %1, i64 %95) #12
  %96 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0, i32 0
  %97 = bitcast %"class.std::__1::__tree_end_node"* %96 to %"class.std::__1::__tree_node"**
  %98 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %97, align 8
  %99 = icmp eq %"class.std::__1::__tree_node"* %98, null
  br i1 %99, label %128, label %100

100:                                              ; preds = %83
  %101 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %102

102:                                              ; preds = %124, %100
  %103 = phi %"class.std::__1::__tree_node"* [ %127, %124 ], [ %98, %100 ]
  %104 = phi %"class.std::__1::__tree_node_base"** [ %126, %124 ], [ %101, %100 ]
  %105 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %103, i64 0, i32 1, i32 0, i32 0
  %106 = load i64, i64* %105, align 8
  %107 = icmp ult i64 %95, %106
  br i1 %107, label %108, label %114

108:                                              ; preds = %102
  %109 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %103, i64 0, i32 0, i32 0, i32 0
  %110 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %109, align 8
  %111 = icmp eq %"class.std::__1::__tree_node_base"* %110, null
  br i1 %111, label %112, label %124

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %103, i64 0, i32 0, i32 0
  br label %130

114:                                              ; preds = %102
  %115 = icmp ult i64 %106, %95
  br i1 %115, label %116, label %122

116:                                              ; preds = %114
  %117 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %103, i64 0, i32 0, i32 1
  %118 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %117, align 8
  %119 = icmp eq %"class.std::__1::__tree_node_base"* %118, null
  br i1 %119, label %120, label %124

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %103, i64 0, i32 0, i32 0
  br label %130

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %103, i64 0, i32 0, i32 0
  br label %130

124:                                              ; preds = %116, %108
  %125 = phi %"class.std::__1::__tree_node_base"* [ %110, %108 ], [ %118, %116 ]
  %126 = phi %"class.std::__1::__tree_node_base"** [ %109, %108 ], [ %117, %116 ]
  %127 = bitcast %"class.std::__1::__tree_node_base"* %125 to %"class.std::__1::__tree_node"*
  br label %102

128:                                              ; preds = %83
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %96, i64 0, i32 0
  br label %130

130:                                              ; preds = %128, %122, %120, %112
  %131 = phi %"class.std::__1::__tree_end_node"* [ %96, %128 ], [ %113, %112 ], [ %121, %120 ], [ %123, %122 ]
  %132 = phi %"class.std::__1::__tree_node_base"** [ %129, %128 ], [ %109, %112 ], [ %117, %120 ], [ %104, %122 ]
  %133 = bitcast %"class.std::__1::__tree_node_base"** %132 to %"class.std::__1::__tree_node"**
  %134 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %133, align 8
  %135 = icmp eq %"class.std::__1::__tree_node"* %134, null
  br i1 %135, label %136, label %164

136:                                              ; preds = %130
  %137 = call i8* @_Znwm(i64 56) #13, !noalias !11
  %138 = getelementptr inbounds i8, i8* %137, i64 32
  %139 = bitcast i8* %138 to i64*
  store i64 %95, i64* %139, align 8, !noalias !11
  %140 = getelementptr inbounds i8, i8* %137, i64 40
  %141 = bitcast i8* %140 to i64*
  store i64 %1, i64* %141, align 8, !noalias !11
  %142 = getelementptr inbounds i8, i8* %137, i64 48
  %143 = bitcast i8* %142 to i32*
  store i32 %93, i32* %143, align 8, !noalias !11
  %144 = bitcast i8* %137 to %"class.std::__1::__tree_node_base"*
  %145 = getelementptr inbounds i8, i8* %137, i64 16
  %146 = bitcast i8* %145 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %137, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %131, %"class.std::__1::__tree_end_node"** %146, align 8
  %147 = bitcast %"class.std::__1::__tree_node_base"** %132 to i8**
  store i8* %137, i8** %147, align 8
  %148 = getelementptr inbounds %"class.v8::internal::AddressToTraceMap", %"class.v8::internal::AddressToTraceMap"* %91, i64 0, i32 0, i32 0, i32 0
  %149 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %148, align 8
  %150 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %149, i64 0, i32 0
  %151 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %150, align 8
  %152 = icmp eq %"class.std::__1::__tree_node_base"* %151, null
  br i1 %152, label %157, label %153

153:                                              ; preds = %136
  %154 = ptrtoint %"class.std::__1::__tree_node_base"* %151 to i64
  %155 = bitcast %"class.v8::internal::AddressToTraceMap"* %91 to i64*
  store i64 %154, i64* %155, align 8
  %156 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %132, align 8
  br label %157

157:                                              ; preds = %153, %136
  %158 = phi %"class.std::__1::__tree_node_base"* [ %144, %136 ], [ %156, %153 ]
  %159 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %160 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %159, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %160, %"class.std::__1::__tree_node_base"* %158) #12
  %161 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 8, i32 0, i32 0, i32 2, i32 0, i32 0
  %162 = load i64, i64* %161, align 8
  %163 = add i64 %162, 1
  store i64 %163, i64* %161, align 8
  br label %164

164:                                              ; preds = %130, %157
  call void @llvm.lifetime.end.p0i8(i64 1616, i8* nonnull %14) #12
  ret void
}

declare i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"*, i64, i32, i32) local_unnamed_addr #6

declare i32 @_ZN2v88internal14HeapObjectsMap14FindOrAddEntryEmjb(%"class.v8::internal::HeapObjectsMap"*, i64, i32, i1 zeroext) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal17AllocationTracker15AddFunctionInfoENS0_18SharedFunctionInfoEj(%"class.v8::internal::AllocationTracker"*, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %5 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 5, i32 0
  %7 = zext i32 %2 to i64
  %8 = inttoptr i64 %7 to i8*
  %9 = xor i32 %2, -1
  %10 = shl i32 %2, 15
  %11 = add i32 %10, %9
  %12 = lshr i32 %11, 12
  %13 = xor i32 %12, %11
  %14 = mul i32 %13, 5
  %15 = lshr i32 %14, 4
  %16 = xor i32 %15, %14
  %17 = mul i32 %16, 2057
  %18 = lshr i32 %17, 16
  %19 = and i32 %17, 1073741823
  %20 = xor i32 %19, %18
  %21 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = add i32 %22, -1
  %24 = and i32 %23, %20
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %6, i64 0, i32 0, i32 0
  %27 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %26, align 8
  %28 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %27, i64 %25
  %29 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %28, i64 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = icmp eq i8* %30, null
  %32 = icmp eq i8* %30, %8
  %33 = or i1 %31, %32
  br i1 %33, label %46, label %34

34:                                               ; preds = %3
  %35 = zext i32 %23 to i64
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ %25, %34 ], [ %39, %36 ]
  %38 = add nuw nsw i64 %37, 1
  %39 = and i64 %38, %35
  %40 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %27, i64 %39
  %41 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %40, i64 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = icmp eq i8* %42, null
  %44 = icmp eq i8* %42, %8
  %45 = or i1 %43, %44
  br i1 %45, label %46, label %36

46:                                               ; preds = %36, %3
  %47 = phi i8* [ %30, %3 ], [ %42, %36 ]
  %48 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %28, %3 ], [ %40, %36 ]
  %49 = icmp eq i8* %47, null
  br i1 %49, label %50, label %86

50:                                               ; preds = %46
  %51 = bitcast %"struct.v8::base::TemplateHashMapEntry"* %48 to i64*
  store i64 %7, i64* %51, align 8
  %52 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %48, i64 0, i32 1
  %53 = bitcast i8** %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %48, i64 0, i32 2
  store i32 %20, i32* %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = add i32 %56, 1
  store i32 %57, i32* %55, align 4
  %58 = lshr i32 %57, 2
  %59 = add i32 %58, %57
  %60 = load i32, i32* %21, align 8
  %61 = icmp ult i32 %59, %60
  br i1 %61, label %86, label %62

62:                                               ; preds = %50
  tail call void @_ZN2v84base19TemplateHashMapImplIPvS2_NS0_18KeyEqualityMatcherIS2_EENS0_23DefaultAllocationPolicyEE6ResizeEv(%"class.v8::base::TemplateHashMapImpl"* %6) #12
  %63 = load i32, i32* %21, align 8
  %64 = add i32 %63, -1
  %65 = and i32 %64, %20
  %66 = zext i32 %65 to i64
  %67 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %26, align 8
  %68 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %67, i64 %66
  %69 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %68, i64 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = icmp eq i8* %70, null
  %72 = icmp eq i8* %70, %8
  %73 = or i1 %71, %72
  br i1 %73, label %86, label %74

74:                                               ; preds = %62
  %75 = zext i32 %64 to i64
  br label %76

76:                                               ; preds = %76, %74
  %77 = phi i64 [ %66, %74 ], [ %79, %76 ]
  %78 = add nuw nsw i64 %77, 1
  %79 = and i64 %78, %75
  %80 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %67, i64 %79
  %81 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %80, i64 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = icmp eq i8* %82, null
  %84 = icmp eq i8* %82, %8
  %85 = or i1 %83, %84
  br i1 %85, label %86, label %76

86:                                               ; preds = %76, %46, %50, %62
  %87 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %48, %46 ], [ %48, %50 ], [ %68, %62 ], [ %80, %76 ]
  %88 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %87, i64 0, i32 1
  %89 = load i8*, i8** %88, align 8
  %90 = icmp eq i8* %89, null
  br i1 %90, label %91, label %358

91:                                               ; preds = %86
  %92 = tail call i8* @_Znwm(i64 40) #13
  %93 = bitcast i8* %92 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), i8** %93, align 8
  %94 = getelementptr inbounds i8, i8* %92, i64 8
  %95 = bitcast i8* %94 to i32*
  store i32 0, i32* %95, align 8
  %96 = getelementptr inbounds i8, i8* %92, i64 16
  %97 = bitcast i8* %96 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), i8** %97, align 8
  %98 = getelementptr inbounds i8, i8* %92, i64 24
  %99 = bitcast i8* %98 to i32*
  store i32 0, i32* %99, align 8
  %100 = getelementptr inbounds i8, i8* %92, i64 28
  %101 = bitcast i8* %100 to i32*
  store i32 -1, i32* %101, align 4
  %102 = getelementptr inbounds i8, i8* %92, i64 32
  %103 = bitcast i8* %102 to i32*
  store i32 -1, i32* %103, align 8
  %104 = ptrtoint i8* %92 to i64
  %105 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 1
  %106 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %105, align 8
  %107 = call i8* @_ZN2v88internal18SharedFunctionInfo13DebugNameCStrEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %4) #12
  %108 = call i8* @_ZN2v88internal14StringsStorage7GetCopyEPKc(%"class.v8::internal::StringsStorage"* %106, i8* %107) #12
  store i8* %108, i8** %93, align 8
  %109 = icmp eq i8* %107, null
  br i1 %109, label %111, label %110

110:                                              ; preds = %91
  call void @_ZdaPv(i8* nonnull %107) #13
  br label %111

111:                                              ; preds = %91, %110
  store i32 %2, i32* %95, align 8
  %112 = load i64, i64* %5, align 8
  %113 = and i64 %112, -4294967296
  %114 = add i64 %112, 15
  %115 = inttoptr i64 %114 to i32*
  %116 = load atomic i32, i32* %115 acquire, align 4
  %117 = zext i32 %116 to i64
  %118 = or i64 %113, %117
  %119 = add i64 %118, -1
  %120 = inttoptr i64 %119 to i32*
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = zext i32 %121 to i64
  %123 = or i64 %113, %122
  %124 = add i64 %123, 7
  %125 = inttoptr i64 %124 to i16*
  %126 = load atomic i16, i16* %125 monotonic, align 2
  %127 = icmp eq i16 %126, 100
  br i1 %127, label %128, label %136

128:                                              ; preds = %111
  %129 = add i64 %118, 11
  %130 = inttoptr i64 %129 to i32*
  %131 = load i32, i32* %130, align 4
  %132 = zext i32 %131 to i64
  %133 = or i64 %113, %132
  %134 = add i64 %133, -1
  %135 = inttoptr i64 %134 to i32*
  br label %136

136:                                              ; preds = %111, %128
  %137 = phi i32* [ %120, %111 ], [ %135, %128 ]
  %138 = phi i64 [ %118, %111 ], [ %133, %128 ]
  %139 = and i64 %138, -4294967296
  %140 = load atomic i32, i32* %137 monotonic, align 4
  %141 = zext i32 %140 to i64
  %142 = or i64 %139, %141
  %143 = add i64 %142, 7
  %144 = inttoptr i64 %143 to i16*
  %145 = load atomic i16, i16* %144 monotonic, align 2
  %146 = icmp eq i16 %145, 112
  br i1 %146, label %147, label %284

147:                                              ; preds = %136
  %148 = load i64, i64* %5, align 8
  %149 = and i64 %148, -4294967296
  %150 = add i64 %148, 15
  %151 = inttoptr i64 %150 to i32*
  %152 = load atomic i32, i32* %151 acquire, align 4
  %153 = zext i32 %152 to i64
  %154 = or i64 %149, %153
  %155 = add i64 %154, -1
  %156 = inttoptr i64 %155 to i32*
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = zext i32 %157 to i64
  %159 = or i64 %149, %158
  %160 = add i64 %159, 7
  %161 = inttoptr i64 %160 to i16*
  %162 = load atomic i16, i16* %161 monotonic, align 2
  %163 = icmp eq i16 %162, 100
  br i1 %163, label %164, label %170

164:                                              ; preds = %147
  %165 = add i64 %154, 11
  %166 = inttoptr i64 %165 to i32*
  %167 = load i32, i32* %166, align 4
  %168 = zext i32 %167 to i64
  %169 = or i64 %149, %168
  br label %170

170:                                              ; preds = %147, %164
  %171 = phi i64 [ %169, %164 ], [ %154, %147 ]
  %172 = and i64 %171, -4294967296
  %173 = add i64 %171, 7
  %174 = inttoptr i64 %173 to i32*
  %175 = load i32, i32* %174, align 4
  %176 = zext i32 %175 to i64
  %177 = or i64 %172, %176
  %178 = and i64 %176, 1
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %193, label %180

180:                                              ; preds = %170
  %181 = add i64 %177, -1
  %182 = inttoptr i64 %181 to i32*
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = zext i32 %183 to i64
  %185 = or i64 %172, %184
  %186 = add i64 %185, 7
  %187 = inttoptr i64 %186 to i16*
  %188 = load atomic i16, i16* %187 monotonic, align 2
  %189 = icmp ult i16 %188, 65
  br i1 %189, label %190, label %193

190:                                              ; preds = %180
  %191 = load %"class.v8::internal::StringsStorage"*, %"class.v8::internal::StringsStorage"** %105, align 8
  %192 = call i8* @_ZN2v88internal14StringsStorage7GetNameENS0_4NameE(%"class.v8::internal::StringsStorage"* %191, i64 %177) #12
  store i8* %192, i8** %97, align 8
  br label %193

193:                                              ; preds = %170, %190, %180
  %194 = add i64 %171, 31
  %195 = inttoptr i64 %194 to i32*
  %196 = load i32, i32* %195, align 4
  %197 = ashr i32 %196, 1
  store i32 %197, i32* %99, align 8
  %198 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 6
  %199 = call i8* @_Znwm(i64 24) #13
  %200 = call i32 @_ZNK2v88internal18SharedFunctionInfo13StartPositionEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %4) #12
  %201 = bitcast i8* %199 to i64**
  store i64* null, i64** %201, align 8
  %202 = getelementptr inbounds i8, i8* %199, i64 8
  %203 = bitcast i8* %202 to i32*
  store i32 %200, i32* %203, align 8
  %204 = getelementptr inbounds i8, i8* %199, i64 16
  %205 = bitcast i8* %204 to i8**
  store i8* %92, i8** %205, align 8
  %206 = and i64 %171, -262144
  %207 = or i64 %206, 16
  %208 = inttoptr i64 %207 to i64*
  %209 = load i64, i64* %208, align 16
  %210 = add i64 %209, -41416
  %211 = inttoptr i64 %210 to %"class.v8::internal::Isolate"*
  %212 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %211, i64 0, i32 36
  %213 = load %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles"** %212, align 8
  %214 = call i64* @_ZN2v88internal13GlobalHandles6CreateENS0_6ObjectE(%"class.v8::internal::GlobalHandles"* %213, i64 %171) #12
  store i64* %214, i64** %201, align 8
  call void @_ZN2v88internal13GlobalHandles8MakeWeakEPmPvPFvRKNS_16WeakCallbackInfoIvEEENS_16WeakCallbackTypeE(i64* %214, i8* nonnull %199, void (%"class.v8::WeakCallbackInfo"*)* nonnull @_ZN2v88internal17AllocationTracker18UnresolvedLocation16HandleWeakScriptERKNS_16WeakCallbackInfoIvEE, i32 0) #12
  %215 = ptrtoint i8* %199 to i64
  %216 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 6, i32 0, i32 1
  %217 = load %"class.v8::internal::AllocationTracker::UnresolvedLocation"**, %"class.v8::internal::AllocationTracker::UnresolvedLocation"*** %216, align 8
  %218 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %219 = load %"class.v8::internal::AllocationTracker::UnresolvedLocation"**, %"class.v8::internal::AllocationTracker::UnresolvedLocation"*** %218, align 8
  %220 = icmp ult %"class.v8::internal::AllocationTracker::UnresolvedLocation"** %217, %219
  %221 = ptrtoint %"class.v8::internal::AllocationTracker::UnresolvedLocation"** %219 to i64
  br i1 %220, label %222, label %227

222:                                              ; preds = %193
  %223 = bitcast %"class.v8::internal::AllocationTracker::UnresolvedLocation"** %217 to i64*
  store i64 %215, i64* %223, align 8
  %224 = getelementptr inbounds %"class.v8::internal::AllocationTracker::UnresolvedLocation"*, %"class.v8::internal::AllocationTracker::UnresolvedLocation"** %217, i64 1
  %225 = ptrtoint %"class.v8::internal::AllocationTracker::UnresolvedLocation"** %224 to i64
  %226 = bitcast %"class.v8::internal::AllocationTracker::UnresolvedLocation"*** %216 to i64*
  store i64 %225, i64* %226, align 8
  br label %284

227:                                              ; preds = %193
  %228 = ptrtoint %"class.v8::internal::AllocationTracker::UnresolvedLocation"** %217 to i64
  %229 = bitcast %"class.v8::internal::AllocationTracker::UnresolvedLocation"*** %216 to i64*
  %230 = bitcast %"class.std::__1::vector.691"* %198 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = sub i64 %228, %231
  %233 = ashr exact i64 %232, 3
  %234 = add nsw i64 %233, 1
  %235 = icmp ugt i64 %234, 2305843009213693951
  br i1 %235, label %236, label %238

236:                                              ; preds = %227
  %237 = bitcast %"class.std::__1::vector.691"* %198 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %237) #14
  unreachable

238:                                              ; preds = %227
  %239 = bitcast %"class.v8::internal::AllocationTracker::UnresolvedLocation"*** %218 to i64*
  %240 = sub i64 %221, %231
  %241 = ashr exact i64 %240, 3
  %242 = icmp ult i64 %241, 1152921504606846975
  br i1 %242, label %243, label %251

243:                                              ; preds = %238
  %244 = ashr exact i64 %240, 2
  %245 = icmp ult i64 %244, %234
  %246 = select i1 %245, i64 %234, i64 %244
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %256, label %248

248:                                              ; preds = %243
  %249 = icmp ugt i64 %246, 2305843009213693951
  br i1 %249, label %250, label %251

250:                                              ; preds = %248
  call void @abort() #14
  unreachable

251:                                              ; preds = %248, %238
  %252 = phi i64 [ %246, %248 ], [ 2305843009213693951, %238 ]
  %253 = shl i64 %252, 3
  %254 = call i8* @_Znwm(i64 %253) #13
  %255 = bitcast i8* %254 to %"class.v8::internal::AllocationTracker::UnresolvedLocation"**
  br label %256

256:                                              ; preds = %251, %243
  %257 = phi i64 [ %252, %251 ], [ 0, %243 ]
  %258 = phi %"class.v8::internal::AllocationTracker::UnresolvedLocation"** [ %255, %251 ], [ null, %243 ]
  %259 = getelementptr inbounds %"class.v8::internal::AllocationTracker::UnresolvedLocation"*, %"class.v8::internal::AllocationTracker::UnresolvedLocation"** %258, i64 %233
  %260 = getelementptr inbounds %"class.v8::internal::AllocationTracker::UnresolvedLocation"*, %"class.v8::internal::AllocationTracker::UnresolvedLocation"** %258, i64 %257
  %261 = ptrtoint %"class.v8::internal::AllocationTracker::UnresolvedLocation"** %260 to i64
  %262 = bitcast %"class.v8::internal::AllocationTracker::UnresolvedLocation"** %259 to i64*
  store i64 %215, i64* %262, align 8
  %263 = getelementptr inbounds %"class.v8::internal::AllocationTracker::UnresolvedLocation"*, %"class.v8::internal::AllocationTracker::UnresolvedLocation"** %259, i64 1
  %264 = ptrtoint %"class.v8::internal::AllocationTracker::UnresolvedLocation"** %263 to i64
  %265 = getelementptr inbounds %"class.std::__1::vector.691", %"class.std::__1::vector.691"* %198, i64 0, i32 0, i32 0
  %266 = load %"class.v8::internal::AllocationTracker::UnresolvedLocation"**, %"class.v8::internal::AllocationTracker::UnresolvedLocation"*** %265, align 8
  %267 = load i64, i64* %229, align 8
  %268 = ptrtoint %"class.v8::internal::AllocationTracker::UnresolvedLocation"** %266 to i64
  %269 = sub i64 %267, %268
  %270 = ashr exact i64 %269, 3
  %271 = sub nsw i64 0, %270
  %272 = getelementptr inbounds %"class.v8::internal::AllocationTracker::UnresolvedLocation"*, %"class.v8::internal::AllocationTracker::UnresolvedLocation"** %259, i64 %271
  %273 = ptrtoint %"class.v8::internal::AllocationTracker::UnresolvedLocation"** %272 to i64
  %274 = icmp sgt i64 %269, 0
  br i1 %274, label %275, label %279

275:                                              ; preds = %256
  %276 = bitcast %"class.v8::internal::AllocationTracker::UnresolvedLocation"** %272 to i8*
  %277 = bitcast %"class.v8::internal::AllocationTracker::UnresolvedLocation"** %266 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %276, i8* align 8 %277, i64 %269, i1 false) #12
  %278 = load %"class.v8::internal::AllocationTracker::UnresolvedLocation"**, %"class.v8::internal::AllocationTracker::UnresolvedLocation"*** %265, align 8
  br label %279

279:                                              ; preds = %275, %256
  %280 = phi %"class.v8::internal::AllocationTracker::UnresolvedLocation"** [ %266, %256 ], [ %278, %275 ]
  store i64 %273, i64* %230, align 8
  store i64 %264, i64* %229, align 8
  store i64 %261, i64* %239, align 8
  %281 = icmp eq %"class.v8::internal::AllocationTracker::UnresolvedLocation"** %280, null
  br i1 %281, label %284, label %282

282:                                              ; preds = %279
  %283 = bitcast %"class.v8::internal::AllocationTracker::UnresolvedLocation"** %280 to i8*
  call void @_ZdlPv(i8* %283) #13
  br label %284

284:                                              ; preds = %282, %279, %222, %136
  %285 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 4
  %286 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 4, i32 0, i32 1
  %287 = bitcast %"struct.v8::internal::AllocationTracker::FunctionInfo"*** %286 to i64*
  %288 = load i64, i64* %287, align 8
  %289 = bitcast %"class.std::__1::vector.684"* %285 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = sub i64 %288, %290
  %292 = ashr exact i64 %291, 3
  %293 = inttoptr i64 %292 to i8*
  store i8* %293, i8** %88, align 8
  %294 = load %"struct.v8::internal::AllocationTracker::FunctionInfo"**, %"struct.v8::internal::AllocationTracker::FunctionInfo"*** %286, align 8
  %295 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %296 = load %"struct.v8::internal::AllocationTracker::FunctionInfo"**, %"struct.v8::internal::AllocationTracker::FunctionInfo"*** %295, align 8
  %297 = icmp eq %"struct.v8::internal::AllocationTracker::FunctionInfo"** %294, %296
  %298 = ptrtoint %"struct.v8::internal::AllocationTracker::FunctionInfo"** %296 to i64
  br i1 %297, label %303, label %299

299:                                              ; preds = %284
  %300 = bitcast %"struct.v8::internal::AllocationTracker::FunctionInfo"** %294 to i64*
  store i64 %104, i64* %300, align 8
  %301 = getelementptr inbounds %"struct.v8::internal::AllocationTracker::FunctionInfo"*, %"struct.v8::internal::AllocationTracker::FunctionInfo"** %294, i64 1
  %302 = ptrtoint %"struct.v8::internal::AllocationTracker::FunctionInfo"** %301 to i64
  store i64 %302, i64* %287, align 8
  br label %358

303:                                              ; preds = %284
  %304 = ptrtoint %"struct.v8::internal::AllocationTracker::FunctionInfo"** %294 to i64
  %305 = load i64, i64* %289, align 8
  %306 = sub i64 %304, %305
  %307 = ashr exact i64 %306, 3
  %308 = add nsw i64 %307, 1
  %309 = icmp ugt i64 %308, 2305843009213693951
  br i1 %309, label %310, label %312

310:                                              ; preds = %303
  %311 = bitcast %"class.std::__1::vector.684"* %285 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %311) #14
  unreachable

312:                                              ; preds = %303
  %313 = bitcast %"struct.v8::internal::AllocationTracker::FunctionInfo"*** %295 to i64*
  %314 = sub i64 %298, %305
  %315 = ashr exact i64 %314, 3
  %316 = icmp ult i64 %315, 1152921504606846975
  br i1 %316, label %317, label %325

317:                                              ; preds = %312
  %318 = ashr exact i64 %314, 2
  %319 = icmp ult i64 %318, %308
  %320 = select i1 %319, i64 %308, i64 %318
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %330, label %322

322:                                              ; preds = %317
  %323 = icmp ugt i64 %320, 2305843009213693951
  br i1 %323, label %324, label %325

324:                                              ; preds = %322
  call void @abort() #14
  unreachable

325:                                              ; preds = %322, %312
  %326 = phi i64 [ %320, %322 ], [ 2305843009213693951, %312 ]
  %327 = shl i64 %326, 3
  %328 = call i8* @_Znwm(i64 %327) #13
  %329 = bitcast i8* %328 to %"struct.v8::internal::AllocationTracker::FunctionInfo"**
  br label %330

330:                                              ; preds = %325, %317
  %331 = phi i64 [ %326, %325 ], [ 0, %317 ]
  %332 = phi %"struct.v8::internal::AllocationTracker::FunctionInfo"** [ %329, %325 ], [ null, %317 ]
  %333 = getelementptr inbounds %"struct.v8::internal::AllocationTracker::FunctionInfo"*, %"struct.v8::internal::AllocationTracker::FunctionInfo"** %332, i64 %307
  %334 = getelementptr inbounds %"struct.v8::internal::AllocationTracker::FunctionInfo"*, %"struct.v8::internal::AllocationTracker::FunctionInfo"** %332, i64 %331
  %335 = ptrtoint %"struct.v8::internal::AllocationTracker::FunctionInfo"** %334 to i64
  %336 = bitcast %"struct.v8::internal::AllocationTracker::FunctionInfo"** %333 to i64*
  store i64 %104, i64* %336, align 8
  %337 = getelementptr inbounds %"struct.v8::internal::AllocationTracker::FunctionInfo"*, %"struct.v8::internal::AllocationTracker::FunctionInfo"** %333, i64 1
  %338 = ptrtoint %"struct.v8::internal::AllocationTracker::FunctionInfo"** %337 to i64
  %339 = getelementptr inbounds %"class.std::__1::vector.684", %"class.std::__1::vector.684"* %285, i64 0, i32 0, i32 0
  %340 = load %"struct.v8::internal::AllocationTracker::FunctionInfo"**, %"struct.v8::internal::AllocationTracker::FunctionInfo"*** %339, align 8
  %341 = load i64, i64* %287, align 8
  %342 = ptrtoint %"struct.v8::internal::AllocationTracker::FunctionInfo"** %340 to i64
  %343 = sub i64 %341, %342
  %344 = ashr exact i64 %343, 3
  %345 = sub nsw i64 0, %344
  %346 = getelementptr inbounds %"struct.v8::internal::AllocationTracker::FunctionInfo"*, %"struct.v8::internal::AllocationTracker::FunctionInfo"** %333, i64 %345
  %347 = ptrtoint %"struct.v8::internal::AllocationTracker::FunctionInfo"** %346 to i64
  %348 = icmp sgt i64 %343, 0
  br i1 %348, label %349, label %353

349:                                              ; preds = %330
  %350 = bitcast %"struct.v8::internal::AllocationTracker::FunctionInfo"** %346 to i8*
  %351 = bitcast %"struct.v8::internal::AllocationTracker::FunctionInfo"** %340 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %350, i8* align 8 %351, i64 %343, i1 false) #12
  %352 = load %"struct.v8::internal::AllocationTracker::FunctionInfo"**, %"struct.v8::internal::AllocationTracker::FunctionInfo"*** %339, align 8
  br label %353

353:                                              ; preds = %349, %330
  %354 = phi %"struct.v8::internal::AllocationTracker::FunctionInfo"** [ %340, %330 ], [ %352, %349 ]
  store i64 %347, i64* %289, align 8
  store i64 %338, i64* %287, align 8
  store i64 %335, i64* %313, align 8
  %355 = icmp eq %"struct.v8::internal::AllocationTracker::FunctionInfo"** %354, null
  br i1 %355, label %358, label %356

356:                                              ; preds = %353
  %357 = bitcast %"struct.v8::internal::AllocationTracker::FunctionInfo"** %354 to i8*
  call void @_ZdlPv(i8* %357) #13
  br label %358

358:                                              ; preds = %356, %353, %299, %86
  %359 = bitcast i8** %88 to i64*
  %360 = load i64, i64* %359, align 8
  %361 = trunc i64 %360 to i32
  ret i32 %361
}

declare void @_ZN2v88internal23JavaScriptFrameIterator7AdvanceEv(%"class.v8::internal::JavaScriptFrameIterator"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal17AllocationTracker27functionInfoIndexForVMStateENS_8StateTagE(%"class.v8::internal::AllocationTracker"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 5
  br i1 %3, label %4, label %93

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 7
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %91

8:                                                ; preds = %4
  %9 = tail call i8* @_Znwm(i64 40) #13
  %10 = bitcast i8* %9 to i8**
  %11 = getelementptr inbounds i8, i8* %9, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 16
  %14 = bitcast i8* %13 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), i8** %14, align 8
  %15 = getelementptr inbounds i8, i8* %9, i64 24
  %16 = bitcast i8* %15 to i32*
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds i8, i8* %9, i64 28
  %18 = bitcast i8* %17 to i32*
  store i32 -1, i32* %18, align 4
  %19 = getelementptr inbounds i8, i8* %9, i64 32
  %20 = bitcast i8* %19 to i32*
  store i32 -1, i32* %20, align 8
  %21 = ptrtoint i8* %9 to i64
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0), i8** %10, align 8
  %22 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 4
  %23 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 4, i32 0, i32 1
  %24 = bitcast %"struct.v8::internal::AllocationTracker::FunctionInfo"*** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector.684"* %22 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = lshr exact i64 %28, 3
  %30 = trunc i64 %29 to i32
  store i32 %30, i32* %5, align 8
  %31 = inttoptr i64 %25 to %"struct.v8::internal::AllocationTracker::FunctionInfo"**
  %32 = getelementptr inbounds %"class.v8::internal::AllocationTracker", %"class.v8::internal::AllocationTracker"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %33 = load %"struct.v8::internal::AllocationTracker::FunctionInfo"**, %"struct.v8::internal::AllocationTracker::FunctionInfo"*** %32, align 8
  %34 = icmp eq %"struct.v8::internal::AllocationTracker::FunctionInfo"** %33, %31
  br i1 %34, label %39, label %35

35:                                               ; preds = %8
  %36 = inttoptr i64 %25 to i64*
  store i64 %21, i64* %36, align 8
  %37 = getelementptr inbounds %"struct.v8::internal::AllocationTracker::FunctionInfo"*, %"struct.v8::internal::AllocationTracker::FunctionInfo"** %31, i64 1
  %38 = ptrtoint %"struct.v8::internal::AllocationTracker::FunctionInfo"** %37 to i64
  store i64 %38, i64* %24, align 8
  br label %91

39:                                               ; preds = %8
  %40 = ptrtoint %"struct.v8::internal::AllocationTracker::FunctionInfo"** %33 to i64
  %41 = sub i64 %40, %27
  %42 = ashr exact i64 %41, 3
  %43 = add nsw i64 %42, 1
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %47

45:                                               ; preds = %39
  %46 = bitcast %"class.std::__1::vector.684"* %22 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %46) #14
  unreachable

47:                                               ; preds = %39
  %48 = bitcast %"struct.v8::internal::AllocationTracker::FunctionInfo"*** %32 to i64*
  %49 = icmp ult i64 %42, 1152921504606846975
  br i1 %49, label %50, label %58

50:                                               ; preds = %47
  %51 = ashr exact i64 %41, 2
  %52 = icmp ult i64 %51, %43
  %53 = select i1 %52, i64 %43, i64 %51
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %63, label %55

55:                                               ; preds = %50
  %56 = icmp ugt i64 %53, 2305843009213693951
  br i1 %56, label %57, label %58

57:                                               ; preds = %55
  tail call void @abort() #14
  unreachable

58:                                               ; preds = %55, %47
  %59 = phi i64 [ %53, %55 ], [ 2305843009213693951, %47 ]
  %60 = shl i64 %59, 3
  %61 = tail call i8* @_Znwm(i64 %60) #13
  %62 = bitcast i8* %61 to %"struct.v8::internal::AllocationTracker::FunctionInfo"**
  br label %63

63:                                               ; preds = %58, %50
  %64 = phi i64 [ %59, %58 ], [ 0, %50 ]
  %65 = phi %"struct.v8::internal::AllocationTracker::FunctionInfo"** [ %62, %58 ], [ null, %50 ]
  %66 = getelementptr inbounds %"struct.v8::internal::AllocationTracker::FunctionInfo"*, %"struct.v8::internal::AllocationTracker::FunctionInfo"** %65, i64 %42
  %67 = getelementptr inbounds %"struct.v8::internal::AllocationTracker::FunctionInfo"*, %"struct.v8::internal::AllocationTracker::FunctionInfo"** %65, i64 %64
  %68 = ptrtoint %"struct.v8::internal::AllocationTracker::FunctionInfo"** %67 to i64
  %69 = bitcast %"struct.v8::internal::AllocationTracker::FunctionInfo"** %66 to i64*
  store i64 %21, i64* %69, align 8
  %70 = getelementptr inbounds %"struct.v8::internal::AllocationTracker::FunctionInfo"*, %"struct.v8::internal::AllocationTracker::FunctionInfo"** %66, i64 1
  %71 = ptrtoint %"struct.v8::internal::AllocationTracker::FunctionInfo"** %70 to i64
  %72 = getelementptr inbounds %"class.std::__1::vector.684", %"class.std::__1::vector.684"* %22, i64 0, i32 0, i32 0
  %73 = load %"struct.v8::internal::AllocationTracker::FunctionInfo"**, %"struct.v8::internal::AllocationTracker::FunctionInfo"*** %72, align 8
  %74 = load i64, i64* %24, align 8
  %75 = ptrtoint %"struct.v8::internal::AllocationTracker::FunctionInfo"** %73 to i64
  %76 = sub i64 %74, %75
  %77 = ashr exact i64 %76, 3
  %78 = sub nsw i64 0, %77
  %79 = getelementptr inbounds %"struct.v8::internal::AllocationTracker::FunctionInfo"*, %"struct.v8::internal::AllocationTracker::FunctionInfo"** %66, i64 %78
  %80 = ptrtoint %"struct.v8::internal::AllocationTracker::FunctionInfo"** %79 to i64
  %81 = icmp sgt i64 %76, 0
  br i1 %81, label %82, label %86

82:                                               ; preds = %63
  %83 = bitcast %"struct.v8::internal::AllocationTracker::FunctionInfo"** %79 to i8*
  %84 = bitcast %"struct.v8::internal::AllocationTracker::FunctionInfo"** %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %84, i64 %76, i1 false) #12
  %85 = load %"struct.v8::internal::AllocationTracker::FunctionInfo"**, %"struct.v8::internal::AllocationTracker::FunctionInfo"*** %72, align 8
  br label %86

86:                                               ; preds = %82, %63
  %87 = phi %"struct.v8::internal::AllocationTracker::FunctionInfo"** [ %73, %63 ], [ %85, %82 ]
  store i64 %80, i64* %26, align 8
  store i64 %71, i64* %24, align 8
  store i64 %68, i64* %48, align 8
  %88 = icmp eq %"struct.v8::internal::AllocationTracker::FunctionInfo"** %87, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %86
  %90 = bitcast %"struct.v8::internal::AllocationTracker::FunctionInfo"** %87 to i8*
  tail call void @_ZdlPv(i8* %90) #13
  br label %91

91:                                               ; preds = %89, %86, %35, %4
  %92 = load i32, i32* %5, align 8
  br label %93

93:                                               ; preds = %2, %91
  %94 = phi i32 [ %92, %91 ], [ 0, %2 ]
  ret i32 %94
}

declare i8* @_ZN2v88internal14StringsStorage7GetCopyEPKc(%"class.v8::internal::StringsStorage"*, i8*) local_unnamed_addr #6

declare i8* @_ZN2v88internal18SharedFunctionInfo13DebugNameCStrEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #6

declare i8* @_ZN2v88internal14StringsStorage7GetNameENS0_4NameE(%"class.v8::internal::StringsStorage"*, i64) local_unnamed_addr #6

declare i32 @_ZNK2v88internal18SharedFunctionInfo13StartPositionEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17AllocationTracker18UnresolvedLocationC2ENS0_6ScriptEiPNS1_12FunctionInfoE(%"class.v8::internal::AllocationTracker::UnresolvedLocation"*, i64, i32, %"struct.v8::internal::AllocationTracker::FunctionInfo"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::AllocationTracker::UnresolvedLocation", %"class.v8::internal::AllocationTracker::UnresolvedLocation"* %0, i64 0, i32 0, i32 0, i32 0
  store i64* null, i64** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::AllocationTracker::UnresolvedLocation", %"class.v8::internal::AllocationTracker::UnresolvedLocation"* %0, i64 0, i32 1
  store i32 %2, i32* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::AllocationTracker::UnresolvedLocation", %"class.v8::internal::AllocationTracker::UnresolvedLocation"* %0, i64 0, i32 2
  store %"struct.v8::internal::AllocationTracker::FunctionInfo"* %3, %"struct.v8::internal::AllocationTracker::FunctionInfo"** %7, align 8
  %8 = and i64 %1, -262144
  %9 = or i64 %8, 16
  %10 = inttoptr i64 %9 to i64*
  %11 = load i64, i64* %10, align 16
  %12 = add i64 %11, -41416
  %13 = inttoptr i64 %12 to %"class.v8::internal::Isolate"*
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 36
  %15 = load %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles"** %14, align 8
  %16 = tail call i64* @_ZN2v88internal13GlobalHandles6CreateENS0_6ObjectE(%"class.v8::internal::GlobalHandles"* %15, i64 %1) #12
  store i64* %16, i64** %5, align 8
  %17 = bitcast %"class.v8::internal::AllocationTracker::UnresolvedLocation"* %0 to i8*
  tail call void @_ZN2v88internal13GlobalHandles8MakeWeakEPmPvPFvRKNS_16WeakCallbackInfoIvEEENS_16WeakCallbackTypeE(i64* %16, i8* %17, void (%"class.v8::WeakCallbackInfo"*)* nonnull @_ZN2v88internal17AllocationTracker18UnresolvedLocation16HandleWeakScriptERKNS_16WeakCallbackInfoIvEE, i32 0) #12
  ret void
}

declare void @_ZN2v88internal13GlobalHandles8MakeWeakEPmPvPFvRKNS_16WeakCallbackInfoIvEEENS_16WeakCallbackTypeE(i64*, i8*, void (%"class.v8::WeakCallbackInfo"*)*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17AllocationTracker18UnresolvedLocation16HandleWeakScriptERKNS_16WeakCallbackInfoIvEE(%"class.v8::WeakCallbackInfo"* nocapture readonly dereferenceable(40)) #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::WeakCallbackInfo", %"class.v8::WeakCallbackInfo"* %0, i64 0, i32 1
  %3 = bitcast i8** %2 to i64***
  %4 = load i64**, i64*** %3, align 8
  %5 = load i64*, i64** %4, align 8
  tail call void @_ZN2v88internal13GlobalHandles7DestroyEPm(i64* %5) #12
  store i64* null, i64** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal17AllocationTracker18UnresolvedLocationD2Ev(%"class.v8::internal::AllocationTracker::UnresolvedLocation"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::AllocationTracker::UnresolvedLocation", %"class.v8::internal::AllocationTracker::UnresolvedLocation"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = icmp eq i64* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN2v88internal13GlobalHandles7DestroyEPm(i64* nonnull %3) #12
  br label %6

6:                                                ; preds = %5, %1
  ret void
}

declare void @_ZN2v88internal13GlobalHandles7DestroyEPm(i64*) local_unnamed_addr #6

declare i32 @_ZN2v88internal6Script13GetLineNumberENS0_6HandleIS1_EEi(i64*, i32) local_unnamed_addr #6

declare i32 @_ZN2v88internal6Script15GetColumnNumberENS0_6HandleIS1_EEi(i64*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeImN2v88internal17AddressToTraceMap10RangeStackEEENS_19__map_value_compareImS6_NS_4lessImEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.698"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImN2v88internal17AddressToTraceMap10RangeStackEEENS_19__map_value_compareImS6_NS_4lessImEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.698"* %0, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImN2v88internal17AddressToTraceMap10RangeStackEEENS_19__map_value_compareImS6_NS_4lessImEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.698"* %0, %"class.std::__1::__tree_node"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #8

declare void @_ZN2v88internal18StackFrameIteratorC1EPNS0_7IsolateE(%"class.v8::internal::StackFrameIterator"*, %"class.v8::internal::Isolate"*) unnamed_addr #6

declare i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"*, i64) local_unnamed_addr #6

declare void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #6

declare void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64*, i64*) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !14
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !14
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !14
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !14
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !14
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %57, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %57
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %57, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %56, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %98
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !14
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %99, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %98, %"class.std::__1::__tree_node_base"* %99
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %140, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %138, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !14
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !14
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %143
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !14
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %143, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !14
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %142
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %142, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %142, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !14
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %99, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %98, %"class.std::__1::__tree_node_base"* %99
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %274, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %272, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !14
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !14
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !14
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %277
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !14
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %276
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %276, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %276, %306 ], [ %276, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !14
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %143, %165 ], [ %277, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v84base19TemplateHashMapImplIPvS2_NS0_18KeyEqualityMatcherIS2_EENS0_23DefaultAllocationPolicyEE6ResizeEv(%"class.v8::base::TemplateHashMapImpl"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %0, i64 0, i32 0, i32 0
  %3 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.v8::base::TemplateHashMapImpl", %"class.v8::base::TemplateHashMapImpl"* %0, i64 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = shl i32 %5, 1
  %9 = zext i32 %8 to i64
  %10 = mul nuw nsw i64 %9, 24
  %11 = tail call noalias i8* @malloc(i64 %10) #12
  %12 = bitcast %"class.v8::base::TemplateHashMapImpl"* %0 to i8**
  store i8* %11, i8** %12, align 8
  %13 = icmp eq i8* %11, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.13, i64 0, i64 0)) #14
  unreachable

15:                                               ; preds = %1
  store i32 %8, i32* %4, align 8
  %16 = icmp eq i32 %8, 0
  br i1 %16, label %31, label %17

17:                                               ; preds = %15
  %18 = bitcast i8* %11 to i8**
  store i8* null, i8** %18, align 8
  %19 = getelementptr inbounds i8, i8* %11, i64 24
  %20 = bitcast i8* %19 to i8**
  store i8* null, i8** %20, align 8
  %21 = load i32, i32* %4, align 8
  %22 = icmp ugt i32 %21, 2
  br i1 %22, label %23, label %31

23:                                               ; preds = %17, %23
  %24 = phi i64 [ %27, %23 ], [ 2, %17 ]
  %25 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %2, align 8
  %26 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %25, i64 %24, i32 0
  store i8* null, i8** %26, align 8
  %27 = add nuw nsw i64 %24, 1
  %28 = load i32, i32* %4, align 8
  %29 = zext i32 %28 to i64
  %30 = icmp ult i64 %27, %29
  br i1 %30, label %23, label %31

31:                                               ; preds = %23, %17, %15
  %32 = phi i32 [ 0, %15 ], [ %21, %17 ], [ %28, %23 ]
  store i32 0, i32* %6, align 4
  %33 = icmp eq i32 %7, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %109, %31
  %35 = bitcast %"struct.v8::base::TemplateHashMapEntry"* %3 to i8*
  tail call void @free(i8* %35) #12
  ret void

36:                                               ; preds = %31, %109
  %37 = phi i32 [ %110, %109 ], [ %32, %31 ]
  %38 = phi i32 [ %111, %109 ], [ %7, %31 ]
  %39 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %112, %109 ], [ %3, %31 ]
  %40 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %39, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %109, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %39, i64 0, i32 2
  %45 = load i32, i32* %44, align 8
  %46 = add i32 %37, -1
  %47 = and i32 %46, %45
  %48 = zext i32 %47 to i64
  %49 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %2, align 8
  %50 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %49, i64 %48
  %51 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %50, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, null
  %54 = icmp eq i8* %41, %52
  %55 = or i1 %53, %54
  br i1 %55, label %68, label %56

56:                                               ; preds = %43
  %57 = zext i32 %46 to i64
  br label %58

58:                                               ; preds = %58, %56
  %59 = phi i64 [ %48, %56 ], [ %61, %58 ]
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, %57
  %62 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %49, i64 %61
  %63 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %62, i64 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = icmp eq i8* %64, null
  %66 = icmp eq i8* %41, %64
  %67 = or i1 %65, %66
  br i1 %67, label %68, label %58

68:                                               ; preds = %58, %43
  %69 = phi %"struct.v8::base::TemplateHashMapEntry"* [ %50, %43 ], [ %62, %58 ]
  %70 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %39, i64 0, i32 1
  %71 = bitcast i8** %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %69, i64 0, i32 0
  store i8* %41, i8** %73, align 8
  %74 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %69, i64 0, i32 1
  %75 = bitcast i8** %74 to i64*
  store i64 %72, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %69, i64 0, i32 2
  store i32 %45, i32* %76, align 8
  %77 = load i32, i32* %6, align 4
  %78 = add i32 %77, 1
  store i32 %78, i32* %6, align 4
  %79 = lshr i32 %78, 2
  %80 = add i32 %79, %78
  %81 = load i32, i32* %4, align 8
  %82 = icmp ult i32 %80, %81
  br i1 %82, label %106, label %83

83:                                               ; preds = %68
  tail call void @_ZN2v84base19TemplateHashMapImplIPvS2_NS0_18KeyEqualityMatcherIS2_EENS0_23DefaultAllocationPolicyEE6ResizeEv(%"class.v8::base::TemplateHashMapImpl"* %0) #12
  %84 = load i32, i32* %4, align 8
  %85 = add i32 %84, -1
  %86 = and i32 %85, %45
  %87 = zext i32 %86 to i64
  %88 = load %"struct.v8::base::TemplateHashMapEntry"*, %"struct.v8::base::TemplateHashMapEntry"** %2, align 8
  %89 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %88, i64 %87, i32 0
  %90 = load i8*, i8** %89, align 8
  %91 = icmp eq i8* %90, null
  %92 = load i8*, i8** %40, align 8
  %93 = icmp eq i8* %92, %90
  %94 = or i1 %91, %93
  br i1 %94, label %106, label %95

95:                                               ; preds = %83
  %96 = zext i32 %85 to i64
  br label %97

97:                                               ; preds = %97, %95
  %98 = phi i64 [ %87, %95 ], [ %100, %97 ]
  %99 = add nuw nsw i64 %98, 1
  %100 = and i64 %99, %96
  %101 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %88, i64 %100, i32 0
  %102 = load i8*, i8** %101, align 8
  %103 = icmp eq i8* %102, null
  %104 = icmp eq i8* %92, %102
  %105 = or i1 %103, %104
  br i1 %105, label %106, label %97

106:                                              ; preds = %97, %83, %68
  %107 = phi i32 [ %84, %83 ], [ %81, %68 ], [ %84, %97 ]
  %108 = add i32 %38, -1
  br label %109

109:                                              ; preds = %36, %106
  %110 = phi i32 [ %107, %106 ], [ %37, %36 ]
  %111 = phi i32 [ %108, %106 ], [ %38, %36 ]
  %112 = getelementptr inbounds %"struct.v8::base::TemplateHashMapEntry", %"struct.v8::base::TemplateHashMapEntry"* %39, i64 1
  %113 = icmp eq i32 %111, 0
  br i1 %113, label %34, label %36
}

declare i64* @_ZN2v88internal13GlobalHandles6CreateENS0_6ObjectE(%"class.v8::internal::GlobalHandles"*, i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__16__treeINS_12__value_typeImN2v88internal17AddressToTraceMap10RangeStackEEENS_19__map_value_compareImS6_NS_4lessImEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJNS_4pairIKmS5_EEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISL_EEEEEEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__16__treeINS_12__value_typeImN2v88internal17AddressToTraceMap10RangeStackEEENS_19__map_value_compareImS6_NS_4lessImEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJNS_4pairIKmS5_EEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISL_EEEEEEDpOT_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__16__treeINS_12__value_typeImN2v88internal17AddressToTraceMap10RangeStackEEENS_19__map_value_compareImS6_NS_4lessImEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJNS_4pairIKmS5_EEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISL_EEEEEEDpOT_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__16__treeINS_12__value_typeImN2v88internal17AddressToTraceMap10RangeStackEEENS_19__map_value_compareImS6_NS_4lessImEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJNS_4pairIKmS5_EEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISL_EEEEEEDpOT_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__16__treeINS_12__value_typeImN2v88internal17AddressToTraceMap10RangeStackEEENS_19__map_value_compareImS6_NS_4lessImEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJNS_4pairIKmS5_EEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISL_EEEEEEDpOT_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__16__treeINS_12__value_typeImN2v88internal17AddressToTraceMap10RangeStackEEENS_19__map_value_compareImS6_NS_4lessImEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJNS_4pairIKmS5_EEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISL_EEEEEEDpOT_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNSt3__16__treeINS_12__value_typeImN2v88internal17AddressToTraceMap10RangeStackEEENS_19__map_value_compareImS6_NS_4lessImEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJNS_4pairIKmS5_EEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISL_EEEEEEDpOT_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__16__treeINS_12__value_typeImN2v88internal17AddressToTraceMap10RangeStackEEENS_19__map_value_compareImS6_NS_4lessImEELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJNS_4pairIKmS5_EEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISL_EEEEEEDpOT_"}
!14 = !{i8 0, i8 2}
