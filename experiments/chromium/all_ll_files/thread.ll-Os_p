; ModuleID = '../../third_party/swiftshader/third_party/marl/src/thread.cpp'
source_filename = "../../third_party/swiftshader/third_party/marl/src/thread.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.marl::Allocator" = type { i32 (...)** }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.marl::Thread::Affinity" = type { %"class.marl::containers::vector" }
%"class.marl::containers::vector" = type { %"class.marl::Allocator"*, i64, i64, [32 x %"struct.marl::aligned_storage<2, 2>::type"], %"struct.marl::aligned_storage<2, 2>::type"*, %"struct.marl::Allocation" }
%"struct.marl::aligned_storage<2, 2>::type" = type { [2 x i8] }
%"struct.marl::Allocation" = type { i8*, %"struct.marl::Allocation::Request" }
%"struct.marl::Allocation::Request" = type <{ i64, i64, i8, i8, [6 x i8] }>
%"struct.marl::Thread::Core" = type { %union.anon }
%union.anon = type { %"struct.marl::Thread::Core::Pthread" }
%"struct.marl::Thread::Core::Pthread" = type { i16 }
%"class.marl::Thread" = type { %"class.marl::Thread::Impl"* }
%"class.marl::Thread::Impl" = type { %"struct.marl::Thread::Affinity", %"class.std::__1::function", %"class.std::__1::thread" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%"class.std::__1::thread" = type { i64 }
%struct.cpu_set_t = type { [16 x i64] }
%"class.marl::Thread::Affinity::Policy" = type { i32 (...)** }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%struct.Policy = type { %"class.marl::Thread::Affinity::Policy", %"struct.marl::Thread::Affinity" }
%struct.Policy.2 = type { %"class.marl::Thread::Affinity::Policy", %"struct.marl::Thread::Affinity" }
%"struct.std::__1::__less.55" = type { i8 }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.11", %"class.std::__1::__compressed_pair.13", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5", %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i64 }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.marl::StlAllocator" }
%"struct.marl::StlAllocator" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8", %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::__hash_node_base" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.marl::StlAllocator.10" }
%"struct.marl::StlAllocator.10" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { float }
%"struct.std::__1::__hash_node" = type <{ %"struct.std::__1::__hash_node_base", i64, %"struct.marl::Thread::Core", [6 x i8] }>
%class.anon = type { %"class.marl::Thread::Impl"* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%"class.std::__1::__thread_struct" = type { %"class.std::__1::__thread_struct_imp"* }
%"class.std::__1::__thread_struct_imp" = type opaque
%union.pthread_attr_t = type { i64, [48 x i8] }
%"class.std::__1::__thread_specific_ptr" = type { i32 }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::__thread_struct"* }
%"class.std::__1::__shared_ptr_pointer" = type { %"class.std::__1::__shared_weak_count", %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33", %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %struct.Policy* }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.marl::Allocator::Deleter" }
%"struct.marl::Allocator::Deleter" = type { %"class.marl::Allocator"*, i64 }
%"class.std::__1::__shared_ptr_pointer.39" = type { %"class.std::__1::__shared_weak_count", %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43", %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %struct.Policy.2* }

$_ZN4marl6Thread4ImplC2EONS0_8AffinityEONSt3__18functionIFvvEEE = comdat any

$_ZNSt3__16threadC2IZN4marl6Thread4ImplC1EONS3_8AffinityEONS_8functionIFvvEEEEUlvE_JEvEEOT_DpOT0_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE = comdat any

$_ZNSt3__125__throw_bad_function_callEv = comdat any

$_ZNSt3__114__thread_proxyINS_5tupleIJNS_10unique_ptrINS_15__thread_structENS_14default_deleteIS3_EEEEZN4marl6Thread4ImplC1EONS8_8AffinityEONS_8functionIFvvEEEEUlvE_EEEEEPvSI_ = comdat any

$_ZN4marl6Thread4Impl11setAffinityEv = comdat any

$_ZNSt3__110unique_ptrINS_15__thread_structENS_14default_deleteIS1_EEE5resetEPS1_ = comdat any

$_ZNSt3__110unique_ptrIA_PNS_16__hash_node_baseIPNS_11__hash_nodeIN4marl6Thread4CoreEPvEEEENS_25__bucket_list_deallocatorINS3_12StlAllocatorISA_EEEEE5resetEDn = comdat any

$_ZNSt3__110unique_ptrIA_PNS_16__hash_node_baseIPNS_11__hash_nodeIN4marl6Thread4CoreEPvEEEENS_25__bucket_list_deallocatorINS3_12StlAllocatorISA_EEEEE5resetIPSA_EENS_9enable_ifIXsr28_CheckArrayPointerConversionIT_EE5valueEvE4typeESK_ = comdat any

$_ZNSt3__16__sortIRNS_6__lessIN4marl6Thread4CoreES4_EEPS4_EEvT0_S8_T_ = comdat any

$_ZNSt3__17__sort3IRNS_6__lessIN4marl6Thread4CoreES4_EEPS4_EEjT0_S8_S8_T_ = comdat any

$_ZNSt3__17__sort4IRNS_6__lessIN4marl6Thread4CoreES4_EEPS4_EEjT0_S8_S8_S8_T_ = comdat any

$_ZNSt3__17__sort5IRNS_6__lessIN4marl6Thread4CoreES4_EEPS4_EEjT0_S8_S8_S8_S8_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRNS_6__lessIN4marl6Thread4CoreES4_EEPS4_EEvT0_S8_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN4marl6Thread4CoreES4_EEPS4_EEbT0_S8_T_ = comdat any

$_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = comdat any

@_ZN4marl9Allocator7DefaultE = external local_unnamed_addr global %"class.marl::Allocator"*, align 8
@_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" { i8* (i8*)* null, void (i8*)* null, i8 1, %"class.std::type_info"* null }, comdat, align 8
@.str = private unnamed_addr constant [26 x i8] c"thread constructor failed\00", align 1
@_ZTVZN4marl6Thread8Affinity6Policy5anyOfEOS1_PNS_9AllocatorEE6Policy = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%struct.Policy*)* @_ZZN4marl6Thread8Affinity6Policy5anyOfEOS1_PNS_9AllocatorEEN6PolicyD2Ev to i8*), i8* bitcast (void (%struct.Policy*)* @_ZZN4marl6Thread8Affinity6Policy5anyOfEOS1_PNS_9AllocatorEEN6PolicyD0Ev to i8*), i8* bitcast (void (%"struct.marl::Thread::Affinity"*, %struct.Policy*, i32, %"class.marl::Allocator"*)* @_ZZN4marl6Thread8Affinity6Policy5anyOfEOS1_PNS_9AllocatorEENK6Policy3getEjS5_ to i8*)] }, align 8
@_ZTVNSt3__120__shared_ptr_pointerIPZN4marl6Thread8Affinity6Policy5anyOfEOS3_PNS1_9AllocatorEE6PolicyNS6_7DeleterENS_9allocatorIS8_EEEE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.std::__1::__shared_weak_count"*)* @_ZNSt3__119__shared_weak_countD2Ev to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer"*)* @_ZNSt3__120__shared_ptr_pointerIPZN4marl6Thread8Affinity6Policy5anyOfEOS3_PNS1_9AllocatorEE6PolicyNS6_7DeleterENS_9allocatorIS8_EEED0Ev to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer"*)* @_ZNSt3__120__shared_ptr_pointerIPZN4marl6Thread8Affinity6Policy5anyOfEOS3_PNS1_9AllocatorEE6PolicyNS6_7DeleterENS_9allocatorIS8_EEE16__on_zero_sharedEv to i8*), i8* bitcast (i8* (%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"*)* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer"*)* @_ZNSt3__120__shared_ptr_pointerIPZN4marl6Thread8Affinity6Policy5anyOfEOS3_PNS1_9AllocatorEE6PolicyNS6_7DeleterENS_9allocatorIS8_EEE21__on_zero_shared_weakEv to i8*)] }, align 8
@_ZTVZN4marl6Thread8Affinity6Policy5oneOfEOS1_PNS_9AllocatorEE6Policy = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%struct.Policy.2*)* @_ZZN4marl6Thread8Affinity6Policy5oneOfEOS1_PNS_9AllocatorEEN6PolicyD2Ev to i8*), i8* bitcast (void (%struct.Policy.2*)* @_ZZN4marl6Thread8Affinity6Policy5oneOfEOS1_PNS_9AllocatorEEN6PolicyD0Ev to i8*), i8* bitcast (void (%"struct.marl::Thread::Affinity"*, %struct.Policy.2*, i32, %"class.marl::Allocator"*)* @_ZZN4marl6Thread8Affinity6Policy5oneOfEOS1_PNS_9AllocatorEENK6Policy3getEjS5_ to i8*)] }, align 8
@_ZTVNSt3__120__shared_ptr_pointerIPZN4marl6Thread8Affinity6Policy5oneOfEOS3_PNS1_9AllocatorEE6PolicyNS6_7DeleterENS_9allocatorIS8_EEEE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.std::__1::__shared_weak_count"*)* @_ZNSt3__119__shared_weak_countD2Ev to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer.39"*)* @_ZNSt3__120__shared_ptr_pointerIPZN4marl6Thread8Affinity6Policy5oneOfEOS3_PNS1_9AllocatorEE6PolicyNS6_7DeleterENS_9allocatorIS8_EEED0Ev to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer.39"*)* @_ZNSt3__120__shared_ptr_pointerIPZN4marl6Thread8Affinity6Policy5oneOfEOS3_PNS1_9AllocatorEE6PolicyNS6_7DeleterENS_9allocatorIS8_EEE16__on_zero_sharedEv to i8*), i8* bitcast (i8* (%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"*)* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer.39"*)* @_ZNSt3__120__shared_ptr_pointerIPZN4marl6Thread8Affinity6Policy5oneOfEOS3_PNS1_9AllocatorEE6PolicyNS6_7DeleterENS_9allocatorIS8_EEE21__on_zero_shared_weakEv to i8*)] }, align 8

@_ZN4marl6Thread8AffinityC1EPNS_9AllocatorE = unnamed_addr alias void (%"struct.marl::Thread::Affinity"*, %"class.marl::Allocator"*), void (%"struct.marl::Thread::Affinity"*, %"class.marl::Allocator"*)* @_ZN4marl6Thread8AffinityC2EPNS_9AllocatorE
@_ZN4marl6Thread8AffinityC1EOS1_ = unnamed_addr alias void (%"struct.marl::Thread::Affinity"*, %"struct.marl::Thread::Affinity"*), void (%"struct.marl::Thread::Affinity"*, %"struct.marl::Thread::Affinity"*)* @_ZN4marl6Thread8AffinityC2EOS1_
@_ZN4marl6Thread8AffinityC1ERKS1_PNS_9AllocatorE = unnamed_addr alias void (%"struct.marl::Thread::Affinity"*, %"struct.marl::Thread::Affinity"*, %"class.marl::Allocator"*), void (%"struct.marl::Thread::Affinity"*, %"struct.marl::Thread::Affinity"*, %"class.marl::Allocator"*)* @_ZN4marl6Thread8AffinityC2ERKS1_PNS_9AllocatorE
@_ZN4marl6Thread8AffinityC1ESt16initializer_listINS0_4CoreEEPNS_9AllocatorE = unnamed_addr alias void (%"struct.marl::Thread::Affinity"*, %"struct.marl::Thread::Core"*, i64, %"class.marl::Allocator"*), void (%"struct.marl::Thread::Affinity"*, %"struct.marl::Thread::Core"*, i64, %"class.marl::Allocator"*)* @_ZN4marl6Thread8AffinityC2ESt16initializer_listINS0_4CoreEEPNS_9AllocatorE
@_ZN4marl6ThreadC1EONS0_8AffinityEONSt3__18functionIFvvEEE = unnamed_addr alias void (%"class.marl::Thread"*, %"struct.marl::Thread::Affinity"*, %"class.std::__1::function"*), void (%"class.marl::Thread"*, %"struct.marl::Thread::Affinity"*, %"class.std::__1::function"*)* @_ZN4marl6ThreadC2EONS0_8AffinityEONSt3__18functionIFvvEEE
@_ZN4marl6ThreadD1Ev = unnamed_addr alias void (%"class.marl::Thread"*), void (%"class.marl::Thread"*)* @_ZN4marl6ThreadD2Ev
@_ZN4marl6ThreadC1EOS0_ = unnamed_addr alias void (%"class.marl::Thread"*, %"class.marl::Thread"*), void (%"class.marl::Thread"*, %"class.marl::Thread"*)* @_ZN4marl6ThreadC2EOS0_

; Function Attrs: nounwind optsize ssp uwtable
define void @_ZN4marl6Thread8AffinityC2EPNS_9AllocatorE(%"struct.marl::Thread::Affinity"*, %"class.marl::Allocator"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 0
  store %"class.marl::Allocator"* %1, %"class.marl::Allocator"** %3, align 8
  %4 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 1
  %5 = bitcast i64* %4 to <2 x i64>*
  store <2 x i64> <i64 0, i64 32>, <2 x i64>* %5, align 8
  %6 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 4
  %7 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 3, i64 0
  store %"struct.marl::aligned_storage<2, 2>::type"* %7, %"struct.marl::aligned_storage<2, 2>::type"** %6, align 8
  %8 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 5
  %9 = bitcast %"struct.marl::Allocation"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 26, i1 false) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define void @_ZN4marl6Thread8AffinityC2EOS1_(%"struct.marl::Thread::Affinity"*, %"struct.marl::Thread::Affinity"* nocapture dereferenceable(128)) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.marl::Allocation::Request", align 8
  %4 = alloca %"struct.marl::Allocation", align 8
  %5 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** @_ZN4marl9Allocator7DefaultE, align 8
  %6 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 0
  store %"class.marl::Allocator"* %5, %"class.marl::Allocator"** %6, align 8
  %7 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 1
  %8 = bitcast i64* %7 to <2 x i64>*
  store <2 x i64> <i64 0, i64 32>, <2 x i64>* %8, align 8
  %9 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 4
  %10 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 3, i64 0
  store %"struct.marl::aligned_storage<2, 2>::type"* %10, %"struct.marl::aligned_storage<2, 2>::type"** %9, align 8
  %11 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 5
  %12 = bitcast %"struct.marl::Allocation"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 26, i1 false) #10
  %13 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %11, i64 0, i32 0
  %14 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %1, i64 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ugt i64 %15, 32
  br i1 %16, label %17, label %61

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 2
  %19 = shl i64 %15, 1
  %20 = icmp ugt i64 %19, 8
  %21 = select i1 %20, i64 %19, i64 8
  store i64 %21, i64* %18, align 8
  %22 = bitcast %"struct.marl::Allocation::Request"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #10
  %23 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %3, i64 0, i32 0
  %24 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %3, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false) #10
  %25 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %3, i64 0, i32 2
  %26 = bitcast i8* %25 to i16*
  store i16 768, i16* %26, align 8
  %27 = shl i64 %21, 1
  store i64 %27, i64* %23, align 8
  store i64 2, i64* %24, align 8
  %28 = bitcast %"struct.marl::Allocation"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 32, i1 false) #10
  %29 = bitcast %"class.marl::Allocator"* %5 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %30 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %30, i64 2
  %32 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %31, align 8
  call void %32(%"struct.marl::Allocation"* nonnull sret %4, %"class.marl::Allocator"* %5, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %3) #18
  %33 = bitcast %"struct.marl::Allocation"* %4 to %"struct.marl::aligned_storage<2, 2>::type"**
  %34 = load %"struct.marl::aligned_storage<2, 2>::type"*, %"struct.marl::aligned_storage<2, 2>::type"** %33, align 8
  %35 = load i64, i64* %7, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %17
  %38 = bitcast %"struct.marl::aligned_storage<2, 2>::type"** %9 to %"struct.marl::Thread::Core"**
  br label %51

39:                                               ; preds = %51, %17
  %40 = load i8*, i8** %13, align 8
  %41 = icmp eq i8* %40, null
  br i1 %41, label %49, label %42

42:                                               ; preds = %39
  %43 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %6, align 8
  %44 = bitcast %"class.marl::Allocator"* %43 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %45 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %45, i64 3
  %47 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %46, align 8
  call void %47(%"class.marl::Allocator"* %43, %"struct.marl::Allocation"* dereferenceable(32) %11) #18
  %48 = bitcast %"struct.marl::aligned_storage<2, 2>::type"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 34, i1 false) #10
  br label %49

49:                                               ; preds = %42, %39
  store %"struct.marl::aligned_storage<2, 2>::type"* %34, %"struct.marl::aligned_storage<2, 2>::type"** %9, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* nonnull align 8 %28, i64 32, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #10
  %50 = load i64, i64* %14, align 8
  br label %61

51:                                               ; preds = %51, %37
  %52 = phi i64 [ 0, %37 ], [ %58, %51 ]
  %53 = getelementptr inbounds %"struct.marl::aligned_storage<2, 2>::type", %"struct.marl::aligned_storage<2, 2>::type"* %34, i64 %52, i32 0, i64 0
  %54 = load %"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"** %38, align 8
  %55 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %54, i64 %52, i32 0, i32 0, i32 0
  %56 = bitcast i8* %53 to i16*
  %57 = load i16, i16* %55, align 2
  store i16 %57, i16* %56, align 2
  %58 = add nuw i64 %52, 1
  %59 = load i64, i64* %7, align 8
  %60 = icmp ult i64 %58, %59
  br i1 %60, label %51, label %39

61:                                               ; preds = %49, %2
  %62 = phi %"struct.marl::aligned_storage<2, 2>::type"* [ %10, %2 ], [ %34, %49 ]
  %63 = phi i64 [ %15, %2 ], [ %50, %49 ]
  store i64 %63, i64* %7, align 8
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %85, label %65

65:                                               ; preds = %61
  %66 = bitcast %"struct.marl::aligned_storage<2, 2>::type"** %9 to %"struct.marl::Thread::Core"**
  %67 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %1, i64 0, i32 0, i32 4
  %68 = bitcast %"struct.marl::aligned_storage<2, 2>::type"** %67 to %"struct.marl::Thread::Core"**
  %69 = load %"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"** %68, align 8
  %70 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %69, i64 0, i32 0, i32 0, i32 0
  %71 = bitcast %"struct.marl::aligned_storage<2, 2>::type"* %62 to i16*
  %72 = load i16, i16* %70, align 2
  store i16 %72, i16* %71, align 2
  %73 = load i64, i64* %7, align 8
  %74 = icmp ugt i64 %73, 1
  br i1 %74, label %75, label %85

75:                                               ; preds = %65, %75
  %76 = phi i64 [ %82, %75 ], [ 1, %65 ]
  %77 = load %"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"** %66, align 8
  %78 = load %"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"** %68, align 8
  %79 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %78, i64 %76, i32 0, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %77, i64 %76, i32 0, i32 0, i32 0
  %81 = load i16, i16* %79, align 2
  store i16 %81, i16* %80, align 2
  %82 = add nuw i64 %76, 1
  %83 = load i64, i64* %7, align 8
  %84 = icmp ult i64 %82, %83
  br i1 %84, label %75, label %85

85:                                               ; preds = %75, %65, %61
  %86 = load i64, i64* %14, align 8
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %89, label %88

88:                                               ; preds = %85
  store i64 0, i64* %14, align 8
  br label %89

89:                                               ; preds = %85, %88
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define void @_ZN4marl6Thread8AffinityC2ERKS1_PNS_9AllocatorE(%"struct.marl::Thread::Affinity"*, %"struct.marl::Thread::Affinity"* nocapture readonly dereferenceable(128), %"class.marl::Allocator"*) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.marl::Allocation::Request", align 8
  %5 = alloca %"struct.marl::Allocation", align 8
  %6 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 0
  store %"class.marl::Allocator"* %2, %"class.marl::Allocator"** %6, align 8
  %7 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 1
  %8 = bitcast i64* %7 to <2 x i64>*
  store <2 x i64> <i64 0, i64 32>, <2 x i64>* %8, align 8
  %9 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 4
  %10 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 3, i64 0
  store %"struct.marl::aligned_storage<2, 2>::type"* %10, %"struct.marl::aligned_storage<2, 2>::type"** %9, align 8
  %11 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 5
  %12 = bitcast %"struct.marl::Allocation"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 26, i1 false) #10
  %13 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %11, i64 0, i32 0
  %14 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %1, i64 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ugt i64 %15, 32
  br i1 %16, label %17, label %61

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 2
  %19 = shl i64 %15, 1
  %20 = icmp ugt i64 %19, 8
  %21 = select i1 %20, i64 %19, i64 8
  store i64 %21, i64* %18, align 8
  %22 = bitcast %"struct.marl::Allocation::Request"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #10
  %23 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 0
  %24 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false) #10
  %25 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 2
  %26 = bitcast i8* %25 to i16*
  store i16 768, i16* %26, align 8
  %27 = shl i64 %21, 1
  store i64 %27, i64* %23, align 8
  store i64 2, i64* %24, align 8
  %28 = bitcast %"struct.marl::Allocation"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 32, i1 false) #10
  %29 = bitcast %"class.marl::Allocator"* %2 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %30 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %30, i64 2
  %32 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %31, align 8
  call void %32(%"struct.marl::Allocation"* nonnull sret %5, %"class.marl::Allocator"* %2, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %4) #18
  %33 = bitcast %"struct.marl::Allocation"* %5 to %"struct.marl::aligned_storage<2, 2>::type"**
  %34 = load %"struct.marl::aligned_storage<2, 2>::type"*, %"struct.marl::aligned_storage<2, 2>::type"** %33, align 8
  %35 = load i64, i64* %7, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %17
  %38 = bitcast %"struct.marl::aligned_storage<2, 2>::type"** %9 to %"struct.marl::Thread::Core"**
  br label %51

39:                                               ; preds = %51, %17
  %40 = load i8*, i8** %13, align 8
  %41 = icmp eq i8* %40, null
  br i1 %41, label %49, label %42

42:                                               ; preds = %39
  %43 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %6, align 8
  %44 = bitcast %"class.marl::Allocator"* %43 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %45 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %45, i64 3
  %47 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %46, align 8
  call void %47(%"class.marl::Allocator"* %43, %"struct.marl::Allocation"* dereferenceable(32) %11) #18
  %48 = bitcast %"struct.marl::aligned_storage<2, 2>::type"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 34, i1 false) #10
  br label %49

49:                                               ; preds = %42, %39
  store %"struct.marl::aligned_storage<2, 2>::type"* %34, %"struct.marl::aligned_storage<2, 2>::type"** %9, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* nonnull align 8 %28, i64 32, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #10
  %50 = load i64, i64* %14, align 8
  br label %61

51:                                               ; preds = %51, %37
  %52 = phi i64 [ 0, %37 ], [ %58, %51 ]
  %53 = getelementptr inbounds %"struct.marl::aligned_storage<2, 2>::type", %"struct.marl::aligned_storage<2, 2>::type"* %34, i64 %52, i32 0, i64 0
  %54 = load %"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"** %38, align 8
  %55 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %54, i64 %52, i32 0, i32 0, i32 0
  %56 = bitcast i8* %53 to i16*
  %57 = load i16, i16* %55, align 2
  store i16 %57, i16* %56, align 2
  %58 = add nuw i64 %52, 1
  %59 = load i64, i64* %7, align 8
  %60 = icmp ult i64 %58, %59
  br i1 %60, label %51, label %39

61:                                               ; preds = %49, %3
  %62 = phi %"struct.marl::aligned_storage<2, 2>::type"* [ %10, %3 ], [ %34, %49 ]
  %63 = phi i64 [ %15, %3 ], [ %50, %49 ]
  store i64 %63, i64* %7, align 8
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %85, label %65

65:                                               ; preds = %61
  %66 = bitcast %"struct.marl::aligned_storage<2, 2>::type"** %9 to %"struct.marl::Thread::Core"**
  %67 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %1, i64 0, i32 0, i32 4
  %68 = bitcast %"struct.marl::aligned_storage<2, 2>::type"** %67 to %"struct.marl::Thread::Core"**
  %69 = load %"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"** %68, align 8
  %70 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %69, i64 0, i32 0, i32 0, i32 0
  %71 = bitcast %"struct.marl::aligned_storage<2, 2>::type"* %62 to i16*
  %72 = load i16, i16* %70, align 2
  store i16 %72, i16* %71, align 2
  %73 = load i64, i64* %7, align 8
  %74 = icmp ugt i64 %73, 1
  br i1 %74, label %75, label %85

75:                                               ; preds = %65, %75
  %76 = phi i64 [ %82, %75 ], [ 1, %65 ]
  %77 = load %"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"** %66, align 8
  %78 = load %"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"** %68, align 8
  %79 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %78, i64 %76, i32 0, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %77, i64 %76, i32 0, i32 0, i32 0
  %81 = load i16, i16* %79, align 2
  store i16 %81, i16* %80, align 2
  %82 = add nuw i64 %76, 1
  %83 = load i64, i64* %7, align 8
  %84 = icmp ult i64 %82, %83
  br i1 %84, label %75, label %85

85:                                               ; preds = %75, %65, %61
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define void @_ZN4marl6Thread8AffinityC2ESt16initializer_listINS0_4CoreEEPNS_9AllocatorE(%"struct.marl::Thread::Affinity"*, %"struct.marl::Thread::Core"*, i64, %"class.marl::Allocator"*) unnamed_addr #0 align 2 {
  %5 = alloca %"struct.marl::Allocation::Request", align 8
  %6 = alloca %"struct.marl::Allocation", align 8
  %7 = alloca %"struct.marl::Allocation::Request", align 8
  %8 = alloca %"struct.marl::Allocation", align 8
  %9 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 0
  store %"class.marl::Allocator"* %3, %"class.marl::Allocator"** %9, align 8
  %10 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 2
  %12 = bitcast i64* %10 to <2 x i64>*
  store <2 x i64> <i64 0, i64 32>, <2 x i64>* %12, align 8
  %13 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 4
  %14 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 3, i64 0
  store %"struct.marl::aligned_storage<2, 2>::type"* %14, %"struct.marl::aligned_storage<2, 2>::type"** %13, align 8
  %15 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 5
  %16 = bitcast %"struct.marl::Allocation"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 26, i1 false) #10
  %17 = icmp ugt i64 %2, 32
  br i1 %17, label %18, label %61

18:                                               ; preds = %4
  %19 = shl i64 %2, 1
  %20 = icmp ugt i64 %19, 8
  %21 = select i1 %20, i64 %19, i64 8
  store i64 %21, i64* %11, align 8
  %22 = bitcast %"struct.marl::Allocation::Request"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #10
  %23 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %5, i64 0, i32 0
  %24 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %5, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false) #10
  %25 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %5, i64 0, i32 2
  %26 = bitcast i8* %25 to i16*
  store i16 768, i16* %26, align 8
  %27 = shl i64 %21, 1
  store i64 %27, i64* %23, align 8
  store i64 2, i64* %24, align 8
  %28 = bitcast %"struct.marl::Allocation"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 32, i1 false) #10
  %29 = bitcast %"class.marl::Allocator"* %3 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %30 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %30, i64 2
  %32 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %31, align 8
  call void %32(%"struct.marl::Allocation"* nonnull sret %6, %"class.marl::Allocator"* %3, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %5) #18
  %33 = bitcast %"struct.marl::Allocation"* %6 to %"struct.marl::aligned_storage<2, 2>::type"**
  %34 = load %"struct.marl::aligned_storage<2, 2>::type"*, %"struct.marl::aligned_storage<2, 2>::type"** %33, align 8
  %35 = load i64, i64* %10, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %18
  %38 = bitcast %"struct.marl::aligned_storage<2, 2>::type"** %13 to %"struct.marl::Thread::Core"**
  br label %51

39:                                               ; preds = %51, %18
  %40 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %15, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %50, label %43

43:                                               ; preds = %39
  %44 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %9, align 8
  %45 = bitcast %"class.marl::Allocator"* %44 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %46 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %46, i64 3
  %48 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %47, align 8
  call void %48(%"class.marl::Allocator"* %44, %"struct.marl::Allocation"* dereferenceable(32) %15) #18
  %49 = bitcast %"struct.marl::aligned_storage<2, 2>::type"** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 34, i1 false) #10
  br label %50

50:                                               ; preds = %43, %39
  store %"struct.marl::aligned_storage<2, 2>::type"* %34, %"struct.marl::aligned_storage<2, 2>::type"** %13, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* nonnull align 8 %28, i64 32, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #10
  br label %61

51:                                               ; preds = %51, %37
  %52 = phi i64 [ 0, %37 ], [ %58, %51 ]
  %53 = getelementptr inbounds %"struct.marl::aligned_storage<2, 2>::type", %"struct.marl::aligned_storage<2, 2>::type"* %34, i64 %52, i32 0, i64 0
  %54 = load %"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"** %38, align 8
  %55 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %54, i64 %52, i32 0, i32 0, i32 0
  %56 = bitcast i8* %53 to i16*
  %57 = load i16, i16* %55, align 2
  store i16 %57, i16* %56, align 2
  %58 = add nuw i64 %52, 1
  %59 = load i64, i64* %10, align 8
  %60 = icmp ult i64 %58, %59
  br i1 %60, label %51, label %39

61:                                               ; preds = %4, %50
  %62 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %1, i64 %2
  %63 = icmp eq i64 %2, 0
  br i1 %63, label %76, label %64

64:                                               ; preds = %61
  %65 = bitcast %"struct.marl::aligned_storage<2, 2>::type"** %13 to %"struct.marl::Thread::Core"**
  %66 = bitcast %"struct.marl::Allocation::Request"* %7 to i8*
  %67 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %7, i64 0, i32 0
  %68 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %7, i64 0, i32 1
  %69 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %7, i64 0, i32 2
  %70 = bitcast i8* %69 to i16*
  %71 = bitcast %"struct.marl::Allocation"* %8 to i8*
  %72 = bitcast %"struct.marl::Allocation"* %8 to %"struct.marl::aligned_storage<2, 2>::type"**
  %73 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %15, i64 0, i32 0
  %74 = bitcast %"struct.marl::aligned_storage<2, 2>::type"** %13 to i8*
  %75 = load i64, i64* %10, align 8
  br label %77

76:                                               ; preds = %124, %61
  ret void

77:                                               ; preds = %64, %124
  %78 = phi i64 [ %75, %64 ], [ %129, %124 ]
  %79 = phi %"struct.marl::Thread::Core"* [ %1, %64 ], [ %130, %124 ]
  %80 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %79, i64 0, i32 0, i32 0, i32 0
  %81 = load i16, i16* %80, align 2
  %82 = add i64 %78, 1
  %83 = load i64, i64* %11, align 8
  %84 = icmp ult i64 %83, %82
  br i1 %84, label %87, label %85

85:                                               ; preds = %77
  %86 = load %"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"** %65, align 8
  br label %124

87:                                               ; preds = %77
  %88 = shl i64 %82, 1
  %89 = icmp ugt i64 %88, 8
  %90 = select i1 %89, i64 %88, i64 8
  store i64 %90, i64* %11, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 -86, i64 24, i1 false) #10
  store i16 768, i16* %70, align 8
  %91 = shl i64 %90, 1
  store i64 %91, i64* %67, align 8
  store i64 2, i64* %68, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %71) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 -86, i64 32, i1 false) #10
  %92 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %9, align 8
  %93 = bitcast %"class.marl::Allocator"* %92 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %94 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %93, align 8
  %95 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %94, i64 2
  %96 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %95, align 8
  call void %96(%"struct.marl::Allocation"* nonnull sret %8, %"class.marl::Allocator"* %92, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %7) #18
  %97 = load %"struct.marl::aligned_storage<2, 2>::type"*, %"struct.marl::aligned_storage<2, 2>::type"** %72, align 8
  %98 = load i64, i64* %10, align 8
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %114

100:                                              ; preds = %114, %87
  %101 = phi i64 [ 0, %87 ], [ %122, %114 ]
  %102 = load i8*, i8** %73, align 8
  %103 = icmp eq i8* %102, null
  br i1 %103, label %111, label %104

104:                                              ; preds = %100
  %105 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %9, align 8
  %106 = bitcast %"class.marl::Allocator"* %105 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %107 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %106, align 8
  %108 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %107, i64 3
  %109 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %108, align 8
  call void %109(%"class.marl::Allocator"* %105, %"struct.marl::Allocation"* dereferenceable(32) %15) #18
  call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 34, i1 false) #10
  %110 = load i64, i64* %10, align 8
  br label %111

111:                                              ; preds = %104, %100
  %112 = phi i64 [ %110, %104 ], [ %101, %100 ]
  store %"struct.marl::aligned_storage<2, 2>::type"* %97, %"struct.marl::aligned_storage<2, 2>::type"** %13, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* nonnull align 8 %71, i64 32, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %71) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #10
  %113 = bitcast %"struct.marl::aligned_storage<2, 2>::type"* %97 to %"struct.marl::Thread::Core"*
  br label %124

114:                                              ; preds = %87, %114
  %115 = phi i64 [ %121, %114 ], [ 0, %87 ]
  %116 = getelementptr inbounds %"struct.marl::aligned_storage<2, 2>::type", %"struct.marl::aligned_storage<2, 2>::type"* %97, i64 %115, i32 0, i64 0
  %117 = load %"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"** %65, align 8
  %118 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %117, i64 %115, i32 0, i32 0, i32 0
  %119 = bitcast i8* %116 to i16*
  %120 = load i16, i16* %118, align 2
  store i16 %120, i16* %119, align 2
  %121 = add nuw i64 %115, 1
  %122 = load i64, i64* %10, align 8
  %123 = icmp ult i64 %121, %122
  br i1 %123, label %114, label %100

124:                                              ; preds = %85, %111
  %125 = phi i64 [ %78, %85 ], [ %112, %111 ]
  %126 = phi %"struct.marl::Thread::Core"* [ %86, %85 ], [ %113, %111 ]
  %127 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %126, i64 %125, i32 0, i32 0, i32 0
  store i16 %81, i16* %127, align 2
  %128 = load i64, i64* %10, align 8
  %129 = add i64 %128, 1
  store i64 %129, i64* %10, align 8
  %130 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %79, i64 1
  %131 = icmp eq %"struct.marl::Thread::Core"* %130, %62
  br i1 %131, label %76, label %77
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind optsize ssp uwtable
define void @_ZN4marl6Thread8Affinity3allEPNS_9AllocatorE(%"struct.marl::Thread::Affinity"* noalias sret, %"class.marl::Allocator"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.marl::Allocation::Request", align 8
  %4 = alloca %"struct.marl::Allocation", align 8
  %5 = alloca %struct.cpu_set_t, align 8
  %6 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 3, i64 0, i32 0, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 104, i1 false)
  %7 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 0
  store %"class.marl::Allocator"* %1, %"class.marl::Allocator"** %7, align 8
  %8 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 2
  %10 = bitcast i64* %8 to <2 x i64>*
  store <2 x i64> <i64 0, i64 32>, <2 x i64>* %10, align 8
  %11 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 4
  %12 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 3, i64 0
  store %"struct.marl::aligned_storage<2, 2>::type"* %12, %"struct.marl::aligned_storage<2, 2>::type"** %11, align 8
  %13 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 5
  %14 = bitcast %"struct.marl::Allocation"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 26, i1 false) #10
  %15 = tail call i64 @pthread_self() #19
  %16 = bitcast %struct.cpu_set_t* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %16) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 128, i1 false)
  %17 = call i32 @pthread_getaffinity_np(i64 %15, i64 128, %struct.cpu_set_t* nonnull %5) #18
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %88

19:                                               ; preds = %2
  %20 = call i32 @__sched_cpucount(i64 128, %struct.cpu_set_t* nonnull %5) #18
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %88

22:                                               ; preds = %19
  %23 = bitcast %"struct.marl::aligned_storage<2, 2>::type"** %11 to %"struct.marl::Thread::Core"**
  %24 = bitcast %"struct.marl::Allocation::Request"* %3 to i8*
  %25 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %3, i64 0, i32 0
  %26 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %3, i64 0, i32 1
  %27 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %3, i64 0, i32 2
  %28 = bitcast i8* %27 to i16*
  %29 = bitcast %"struct.marl::Allocation"* %4 to i8*
  %30 = bitcast %"struct.marl::Allocation"* %4 to %"struct.marl::aligned_storage<2, 2>::type"**
  %31 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %13, i64 0, i32 0
  %32 = bitcast %"struct.marl::aligned_storage<2, 2>::type"** %11 to i8*
  %33 = load i64, i64* %8, align 8
  br label %34

34:                                               ; preds = %80, %22
  %35 = phi i64 [ %33, %22 ], [ %85, %80 ]
  %36 = phi i32 [ 0, %22 ], [ %86, %80 ]
  %37 = trunc i32 %36 to i16
  %38 = add i64 %35, 1
  %39 = load i64, i64* %9, align 8
  %40 = icmp ult i64 %39, %38
  br i1 %40, label %43, label %41

41:                                               ; preds = %34
  %42 = load %"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"** %23, align 8
  br label %80

43:                                               ; preds = %34
  %44 = shl i64 %38, 1
  %45 = icmp ugt i64 %44, 8
  %46 = select i1 %45, i64 %44, i64 8
  store i64 %46, i64* %9, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 24, i1 false) #10
  store i16 768, i16* %28, align 8
  %47 = shl i64 %46, 1
  store i64 %47, i64* %25, align 8
  store i64 2, i64* %26, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 32, i1 false) #10
  %48 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %7, align 8
  %49 = bitcast %"class.marl::Allocator"* %48 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %50 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %50, i64 2
  %52 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %51, align 8
  call void %52(%"struct.marl::Allocation"* nonnull sret %4, %"class.marl::Allocator"* %48, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %3) #18
  %53 = load %"struct.marl::aligned_storage<2, 2>::type"*, %"struct.marl::aligned_storage<2, 2>::type"** %30, align 8
  %54 = load i64, i64* %8, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %70

56:                                               ; preds = %70, %43
  %57 = phi i64 [ 0, %43 ], [ %78, %70 ]
  %58 = load i8*, i8** %31, align 8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %67, label %60

60:                                               ; preds = %56
  %61 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %7, align 8
  %62 = bitcast %"class.marl::Allocator"* %61 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %63 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %63, i64 3
  %65 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %64, align 8
  call void %65(%"class.marl::Allocator"* %61, %"struct.marl::Allocation"* dereferenceable(32) %13) #18
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 34, i1 false) #10
  %66 = load i64, i64* %8, align 8
  br label %67

67:                                               ; preds = %60, %56
  %68 = phi i64 [ %66, %60 ], [ %57, %56 ]
  store %"struct.marl::aligned_storage<2, 2>::type"* %53, %"struct.marl::aligned_storage<2, 2>::type"** %11, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* nonnull align 8 %29, i64 32, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #10
  %69 = bitcast %"struct.marl::aligned_storage<2, 2>::type"* %53 to %"struct.marl::Thread::Core"*
  br label %80

70:                                               ; preds = %43, %70
  %71 = phi i64 [ %77, %70 ], [ 0, %43 ]
  %72 = getelementptr inbounds %"struct.marl::aligned_storage<2, 2>::type", %"struct.marl::aligned_storage<2, 2>::type"* %53, i64 %71, i32 0, i64 0
  %73 = load %"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"** %23, align 8
  %74 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %73, i64 %71, i32 0, i32 0, i32 0
  %75 = bitcast i8* %72 to i16*
  %76 = load i16, i16* %74, align 2
  store i16 %76, i16* %75, align 2
  %77 = add nuw i64 %71, 1
  %78 = load i64, i64* %8, align 8
  %79 = icmp ult i64 %77, %78
  br i1 %79, label %70, label %56

80:                                               ; preds = %41, %67
  %81 = phi i64 [ %35, %41 ], [ %68, %67 ]
  %82 = phi %"struct.marl::Thread::Core"* [ %42, %41 ], [ %69, %67 ]
  %83 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %82, i64 %81, i32 0, i32 0, i32 0
  store i16 %37, i16* %83, align 2
  %84 = load i64, i64* %8, align 8
  %85 = add i64 %84, 1
  store i64 %85, i64* %8, align 8
  %86 = add nuw nsw i32 %36, 1
  %87 = icmp eq i32 %86, %20
  br i1 %87, label %88, label %34

88:                                               ; preds = %80, %19, %2
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %16) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind optsize readnone
declare i64 @pthread_self() local_unnamed_addr #2

; Function Attrs: nounwind optsize
declare i32 @pthread_getaffinity_np(i64, i64, %struct.cpu_set_t*) local_unnamed_addr #3

; Function Attrs: nounwind optsize
declare i32 @__sched_cpucount(i64, %struct.cpu_set_t*) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define { %"class.marl::Thread::Affinity::Policy"*, %"class.std::__1::__shared_weak_count"* } @_ZN4marl6Thread8Affinity6Policy5anyOfEOS1_PNS_9AllocatorE(%"struct.marl::Thread::Affinity"* nocapture dereferenceable(128), %"class.marl::Allocator"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.marl::Allocation::Request", align 16
  %4 = alloca %"struct.marl::Allocation", align 8
  %5 = bitcast %"struct.marl::Allocation::Request"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 24, i1 false) #10
  %6 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %3, i64 0, i32 2
  %7 = bitcast i8* %6 to i16*
  store i16 512, i16* %7, align 16
  %8 = bitcast %"struct.marl::Allocation::Request"* %3 to <2 x i64>*
  store <2 x i64> <i64 136, i64 8>, <2 x i64>* %8, align 16
  %9 = bitcast %"struct.marl::Allocation"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #10
  %10 = bitcast %"class.marl::Allocator"* %1 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false) #10
  %11 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %11, i64 2
  %13 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %12, align 8
  call void %13(%"struct.marl::Allocation"* nonnull sret %4, %"class.marl::Allocator"* %1, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %3) #18
  %14 = bitcast %"struct.marl::Allocation"* %4 to %struct.Policy**
  %15 = load %struct.Policy*, %struct.Policy** %14, align 8
  %16 = getelementptr inbounds %struct.Policy, %struct.Policy* %15, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVZN4marl6Thread8Affinity6Policy5anyOfEOS1_PNS_9AllocatorEE6Policy, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds %struct.Policy, %struct.Policy* %15, i64 0, i32 1
  call void @_ZN4marl6Thread8AffinityC2EOS1_(%"struct.marl::Thread::Affinity"* %17, %"struct.marl::Thread::Affinity"* dereferenceable(128) %0) #18
  %18 = bitcast %"struct.marl::Allocation"* %4 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = call i8* @_Znwm(i64 48) #20
  %21 = bitcast i8* %20 to i32 (...)***
  %22 = getelementptr inbounds i8, i8* %20, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_pointerIPZN4marl6Thread8Affinity6Policy5anyOfEOS3_PNS1_9AllocatorEE6PolicyNS6_7DeleterENS_9allocatorIS8_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %23 = getelementptr inbounds i8, i8* %20, i64 24
  %24 = bitcast i8* %23 to i64*
  store i64 %19, i64* %24, align 8
  %25 = getelementptr inbounds i8, i8* %20, i64 32
  %26 = bitcast i8* %25 to %"class.marl::Allocator"**
  store %"class.marl::Allocator"* %1, %"class.marl::Allocator"** %26, align 8
  %27 = getelementptr inbounds i8, i8* %20, i64 40
  %28 = bitcast i8* %27 to i64*
  store i64 1, i64* %28, align 8
  %29 = bitcast i8* %20 to %"class.std::__1::__shared_weak_count"*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #10
  %30 = inttoptr i64 %19 to %"class.marl::Thread::Affinity::Policy"*
  %31 = insertvalue { %"class.marl::Thread::Affinity::Policy"*, %"class.std::__1::__shared_weak_count"* } undef, %"class.marl::Thread::Affinity::Policy"* %30, 0
  %32 = insertvalue { %"class.marl::Thread::Affinity::Policy"*, %"class.std::__1::__shared_weak_count"* } %31, %"class.std::__1::__shared_weak_count"* %29, 1
  ret { %"class.marl::Thread::Affinity::Policy"*, %"class.std::__1::__shared_weak_count"* } %32
}

; Function Attrs: nounwind optsize ssp uwtable
define { %"class.marl::Thread::Affinity::Policy"*, %"class.std::__1::__shared_weak_count"* } @_ZN4marl6Thread8Affinity6Policy5oneOfEOS1_PNS_9AllocatorE(%"struct.marl::Thread::Affinity"* nocapture dereferenceable(128), %"class.marl::Allocator"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.marl::Allocation::Request", align 16
  %4 = alloca %"struct.marl::Allocation", align 8
  %5 = bitcast %"struct.marl::Allocation::Request"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 24, i1 false) #10
  %6 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %3, i64 0, i32 2
  %7 = bitcast i8* %6 to i16*
  store i16 512, i16* %7, align 16
  %8 = bitcast %"struct.marl::Allocation::Request"* %3 to <2 x i64>*
  store <2 x i64> <i64 136, i64 8>, <2 x i64>* %8, align 16
  %9 = bitcast %"struct.marl::Allocation"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #10
  %10 = bitcast %"class.marl::Allocator"* %1 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false) #10
  %11 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %11, i64 2
  %13 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %12, align 8
  call void %13(%"struct.marl::Allocation"* nonnull sret %4, %"class.marl::Allocator"* %1, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %3) #18
  %14 = bitcast %"struct.marl::Allocation"* %4 to %struct.Policy.2**
  %15 = load %struct.Policy.2*, %struct.Policy.2** %14, align 8
  %16 = getelementptr inbounds %struct.Policy.2, %struct.Policy.2* %15, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVZN4marl6Thread8Affinity6Policy5oneOfEOS1_PNS_9AllocatorEE6Policy, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds %struct.Policy.2, %struct.Policy.2* %15, i64 0, i32 1
  call void @_ZN4marl6Thread8AffinityC2EOS1_(%"struct.marl::Thread::Affinity"* %17, %"struct.marl::Thread::Affinity"* dereferenceable(128) %0) #18
  %18 = bitcast %"struct.marl::Allocation"* %4 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = call i8* @_Znwm(i64 48) #20
  %21 = bitcast i8* %20 to i32 (...)***
  %22 = getelementptr inbounds i8, i8* %20, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_pointerIPZN4marl6Thread8Affinity6Policy5oneOfEOS3_PNS1_9AllocatorEE6PolicyNS6_7DeleterENS_9allocatorIS8_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %23 = getelementptr inbounds i8, i8* %20, i64 24
  %24 = bitcast i8* %23 to i64*
  store i64 %19, i64* %24, align 8
  %25 = getelementptr inbounds i8, i8* %20, i64 32
  %26 = bitcast i8* %25 to %"class.marl::Allocator"**
  store %"class.marl::Allocator"* %1, %"class.marl::Allocator"** %26, align 8
  %27 = getelementptr inbounds i8, i8* %20, i64 40
  %28 = bitcast i8* %27 to i64*
  store i64 1, i64* %28, align 8
  %29 = bitcast i8* %20 to %"class.std::__1::__shared_weak_count"*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #10
  %30 = inttoptr i64 %19 to %"class.marl::Thread::Affinity::Policy"*
  %31 = insertvalue { %"class.marl::Thread::Affinity::Policy"*, %"class.std::__1::__shared_weak_count"* } undef, %"class.marl::Thread::Affinity::Policy"* %30, 0
  %32 = insertvalue { %"class.marl::Thread::Affinity::Policy"*, %"class.std::__1::__shared_weak_count"* } %31, %"class.std::__1::__shared_weak_count"* %29, 1
  ret { %"class.marl::Thread::Affinity::Policy"*, %"class.std::__1::__shared_weak_count"* } %32
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define i64 @_ZNK4marl6Thread8Affinity5countEv(%"struct.marl::Thread::Affinity"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define i16 @_ZNK4marl6Thread8AffinityixEm(%"struct.marl::Thread::Affinity"* nocapture readonly, i64) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 4
  %4 = bitcast %"struct.marl::aligned_storage<2, 2>::type"** %3 to %"struct.marl::Thread::Core"**
  %5 = load %"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"** %4, align 8
  %6 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %5, i64 %1, i32 0, i32 0, i32 0
  %7 = load i16, i16* %6, align 2
  ret i16 %7
}

; Function Attrs: nounwind optsize ssp uwtable
define dereferenceable(128) %"struct.marl::Thread::Affinity"* @_ZN4marl6Thread8Affinity3addERKS1_(%"struct.marl::Thread::Affinity"* returned, %"struct.marl::Thread::Affinity"* nocapture readonly dereferenceable(128)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::__less.55", align 1
  %4 = alloca %"struct.marl::Allocation::Request", align 8
  %5 = alloca %"struct.marl::Allocation", align 8
  %6 = alloca %"class.std::__1::unordered_set", align 8
  %7 = alloca %"struct.marl::Thread::Core", align 2
  %8 = alloca %"struct.marl::Thread::Core", align 2
  %9 = bitcast %"class.std::__1::unordered_set"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %6, i64 0, i32 0, i32 4, i64 0
  %13 = bitcast %"struct.marl::Thread::Affinity"* %0 to i64*
  %14 = bitcast i8* %12 to i32*
  store i32 -1431655766, i32* %14, align 4
  %15 = load i64, i64* %13, align 8
  %16 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %17 = bitcast %"struct.std::__1::__compressed_pair_elem.6"* %16 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #10
  store i64 %15, i64* %17, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %10, align 8
  %18 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %6, i64 0, i32 0, i32 1, i32 1
  %19 = bitcast %"struct.std::__1::__compressed_pair_elem.9"* %18 to i64*
  store i64 %15, i64* %19, align 8
  store i64 0, i64* %11, align 8
  %20 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %6, i64 0, i32 0, i32 3
  %21 = bitcast %"class.std::__1::__compressed_pair.13"* %20 to i32*
  store i32 1065353216, i32* %21, align 8
  %22 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 4
  %23 = bitcast %"struct.marl::aligned_storage<2, 2>::type"** %22 to %"struct.marl::Thread::Core"**
  %24 = load %"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"** %23, align 8
  %25 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %24, i64 %26
  %28 = icmp eq i64 %26, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %2
  %30 = bitcast %"struct.marl::Thread::Core"* %7 to i8*
  %31 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %7, i64 0, i32 0, i32 0, i32 0
  br label %56

32:                                               ; preds = %56, %2
  %33 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %1, i64 0, i32 0, i32 4
  %34 = bitcast %"struct.marl::aligned_storage<2, 2>::type"** %33 to %"struct.marl::Thread::Core"**
  %35 = load %"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"** %34, align 8
  %36 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %1, i64 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %35, i64 %37
  %39 = icmp eq i64 %37, 0
  br i1 %39, label %62, label %40

40:                                               ; preds = %32
  %41 = bitcast %"struct.marl::Thread::Core"* %8 to i8*
  %42 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %8, i64 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 2
  %44 = bitcast %"struct.marl::Allocation::Request"* %4 to i8*
  %45 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 0
  %46 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 1
  %47 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 2
  %48 = bitcast i8* %47 to i16*
  %49 = bitcast %"struct.marl::Allocation"* %5 to i8*
  %50 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 0
  %51 = bitcast %"struct.marl::Allocation"* %5 to %"struct.marl::aligned_storage<2, 2>::type"**
  %52 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 5
  %53 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %52, i64 0, i32 0
  %54 = bitcast %"struct.marl::aligned_storage<2, 2>::type"** %22 to i8*
  %55 = bitcast %"struct.marl::Allocation"* %52 to i8*
  br label %67

56:                                               ; preds = %29, %56
  %57 = phi %"struct.marl::Thread::Core"* [ %24, %29 ], [ %60, %56 ]
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %30) #10
  %58 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load i16, i16* %58, align 2
  store i16 %59, i16* %31, align 2
  call fastcc void @_ZNSt3__113unordered_setIN4marl6Thread4CoreEN12_GLOBAL__N_110CoreHasherENS_8equal_toIS3_EENS1_12StlAllocatorIS3_EEE7emplaceIJRS3_EEENS_4pairINS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEEDpOT_(%"class.std::__1::unordered_set"* nonnull %6, %"struct.marl::Thread::Core"* nonnull dereferenceable(2) %7) #21
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %30) #10
  %60 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %57, i64 1
  %61 = icmp eq %"struct.marl::Thread::Core"* %60, %27
  br i1 %61, label %32, label %56

62:                                               ; preds = %123, %32
  %63 = load %"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"** %23, align 8
  %64 = load i64, i64* %25, align 8
  %65 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %63, i64 %64
  %66 = getelementptr inbounds %"struct.std::__1::__less.55", %"struct.std::__1::__less.55"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %66) #10
  call void @_ZNSt3__16__sortIRNS_6__lessIN4marl6Thread4CoreES4_EEPS4_EEvT0_S8_T_(%"struct.marl::Thread::Core"* %63, %"struct.marl::Thread::Core"* %65, %"struct.std::__1::__less.55"* nonnull dereferenceable(1) %3) #18
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %66) #10
  call fastcc void @_ZNSt3__113unordered_setIN4marl6Thread4CoreEN12_GLOBAL__N_110CoreHasherENS_8equal_toIS3_EENS1_12StlAllocatorIS3_EEED2Ev(%"class.std::__1::unordered_set"* nonnull %6) #18
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %9) #10
  ret %"struct.marl::Thread::Affinity"* %0

67:                                               ; preds = %40, %123
  %68 = phi %"struct.marl::Thread::Core"* [ %35, %40 ], [ %124, %123 ]
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %41) #10
  %69 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = load i16, i16* %69, align 2
  store i16 %70, i16* %42, align 2
  %71 = call fastcc i64 @_ZNKSt3__113unordered_setIN4marl6Thread4CoreEN12_GLOBAL__N_110CoreHasherENS_8equal_toIS3_EENS1_12StlAllocatorIS3_EEE5countERKS3_(%"class.std::__1::unordered_set"* nonnull %6, %"struct.marl::Thread::Core"* nonnull dereferenceable(2) %8) #21
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %123

73:                                               ; preds = %67
  %74 = load i64, i64* %25, align 8
  %75 = add i64 %74, 1
  %76 = load i64, i64* %43, align 8
  %77 = icmp ult i64 %76, %75
  br i1 %77, label %80, label %78

78:                                               ; preds = %73
  %79 = load %"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"** %23, align 8
  br label %117

80:                                               ; preds = %73
  %81 = shl i64 %75, 1
  %82 = icmp ugt i64 %81, 8
  %83 = select i1 %82, i64 %81, i64 8
  store i64 %83, i64* %43, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 24, i1 false) #10
  store i16 768, i16* %48, align 8
  %84 = shl i64 %83, 1
  store i64 %84, i64* %45, align 8
  store i64 2, i64* %46, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %49) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 32, i1 false) #10
  %85 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %50, align 8
  %86 = bitcast %"class.marl::Allocator"* %85 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %87 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %86, align 8
  %88 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %87, i64 2
  %89 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %88, align 8
  call void %89(%"struct.marl::Allocation"* nonnull sret %5, %"class.marl::Allocator"* %85, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %4) #18
  %90 = load %"struct.marl::aligned_storage<2, 2>::type"*, %"struct.marl::aligned_storage<2, 2>::type"** %51, align 8
  %91 = load i64, i64* %25, align 8
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %107

93:                                               ; preds = %107, %80
  %94 = phi i64 [ 0, %80 ], [ %115, %107 ]
  %95 = load i8*, i8** %53, align 8
  %96 = icmp eq i8* %95, null
  br i1 %96, label %104, label %97

97:                                               ; preds = %93
  %98 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %50, align 8
  %99 = bitcast %"class.marl::Allocator"* %98 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %100 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %100, i64 3
  %102 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %101, align 8
  call void %102(%"class.marl::Allocator"* %98, %"struct.marl::Allocation"* dereferenceable(32) %52) #18
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 34, i1 false) #10
  %103 = load i64, i64* %25, align 8
  br label %104

104:                                              ; preds = %97, %93
  %105 = phi i64 [ %103, %97 ], [ %94, %93 ]
  store %"struct.marl::aligned_storage<2, 2>::type"* %90, %"struct.marl::aligned_storage<2, 2>::type"** %22, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* nonnull align 8 %49, i64 32, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %49) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #10
  %106 = bitcast %"struct.marl::aligned_storage<2, 2>::type"* %90 to %"struct.marl::Thread::Core"*
  br label %117

107:                                              ; preds = %80, %107
  %108 = phi i64 [ %114, %107 ], [ 0, %80 ]
  %109 = getelementptr inbounds %"struct.marl::aligned_storage<2, 2>::type", %"struct.marl::aligned_storage<2, 2>::type"* %90, i64 %108, i32 0, i64 0
  %110 = load %"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"** %23, align 8
  %111 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %110, i64 %108, i32 0, i32 0, i32 0
  %112 = bitcast i8* %109 to i16*
  %113 = load i16, i16* %111, align 2
  store i16 %113, i16* %112, align 2
  %114 = add nuw i64 %108, 1
  %115 = load i64, i64* %25, align 8
  %116 = icmp ult i64 %114, %115
  br i1 %116, label %107, label %93

117:                                              ; preds = %78, %104
  %118 = phi i64 [ %74, %78 ], [ %105, %104 ]
  %119 = phi %"struct.marl::Thread::Core"* [ %79, %78 ], [ %106, %104 ]
  %120 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %119, i64 %118, i32 0, i32 0, i32 0
  store i16 %70, i16* %120, align 2
  %121 = load i64, i64* %25, align 8
  %122 = add i64 %121, 1
  store i64 %122, i64* %25, align 8
  br label %123

123:                                              ; preds = %117, %67
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %41) #10
  %124 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %68, i64 1
  %125 = icmp eq %"struct.marl::Thread::Core"* %124, %38
  br i1 %125, label %62, label %67
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @_ZNSt3__113unordered_setIN4marl6Thread4CoreEN12_GLOBAL__N_110CoreHasherENS_8equal_toIS3_EENS1_12StlAllocatorIS3_EEE7emplaceIJRS3_EEENS_4pairINS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEEDpOT_(%"class.std::__1::unordered_set"*, %"struct.marl::Thread::Core"* nocapture readonly dereferenceable(2)) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.marl::Allocation", align 8
  %4 = alloca %"struct.marl::Allocation::Request", align 16
  %5 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = load i16, i16* %6, align 2
  %8 = zext i16 %7 to i64
  %9 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %56, label %12

12:                                               ; preds = %2
  %13 = tail call i64 @llvm.ctpop.i64(i64 %10) #10, !range !2
  %14 = icmp ugt i64 %13, 1
  br i1 %14, label %18, label %15

15:                                               ; preds = %12
  %16 = add i64 %10, 65535
  %17 = and i64 %16, %8
  br label %22

18:                                               ; preds = %12
  %19 = icmp ugt i64 %10, %8
  br i1 %19, label %22, label %20

20:                                               ; preds = %18
  %21 = urem i64 %8, %10
  br label %22

22:                                               ; preds = %20, %18, %15
  %23 = phi i64 [ %17, %15 ], [ %21, %20 ], [ %8, %18 ]
  %24 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, i64 %23
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, null
  br i1 %28, label %56, label %29

29:                                               ; preds = %22
  %30 = add i64 %10, -1
  br label %31

31:                                               ; preds = %51, %29
  %32 = phi %"struct.std::__1::__hash_node_base"* [ %34, %51 ], [ %27, %29 ]
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %33, align 8
  %35 = icmp eq %"struct.std::__1::__hash_node_base"* %34, null
  br i1 %35, label %56, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %34, i64 1
  %38 = bitcast %"struct.std::__1::__hash_node_base"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, %8
  br i1 %40, label %51, label %41

41:                                               ; preds = %36
  br i1 %14, label %44, label %42

42:                                               ; preds = %41
  %43 = and i64 %39, %30
  br label %48

44:                                               ; preds = %41
  %45 = icmp ult i64 %39, %10
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = urem i64 %39, %10
  br label %48

48:                                               ; preds = %46, %44, %42
  %49 = phi i64 [ %43, %42 ], [ %47, %46 ], [ %39, %44 ]
  %50 = icmp eq i64 %49, %23
  br i1 %50, label %51, label %56

51:                                               ; preds = %48, %36
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %34, i64 2
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i16*
  %54 = load i16, i16* %53, align 2
  %55 = icmp eq i16 %54, %7
  br i1 %55, label %193, label %31

56:                                               ; preds = %48, %31, %22, %2
  %57 = phi i64 [ %23, %22 ], [ -6148914691236517206, %2 ], [ %23, %31 ], [ %23, %48 ]
  %58 = bitcast %"struct.marl::Allocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %58) #10, !noalias !3
  %59 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %0, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 32, i1 false) #10, !noalias !3
  %60 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %59, align 8, !noalias !3
  %61 = bitcast %"struct.marl::Allocation::Request"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #10, !noalias !3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %61, i8 -86, i64 24, i1 false) #10, !alias.scope !6, !noalias !3
  %62 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 2
  %63 = bitcast i8* %62 to i16*
  store i16 1280, i16* %63, align 16, !alias.scope !6, !noalias !3
  %64 = bitcast %"struct.marl::Allocation::Request"* %4 to <2 x i64>*
  store <2 x i64> <i64 24, i64 8>, <2 x i64>* %64, align 16, !alias.scope !6, !noalias !3
  %65 = bitcast %"class.marl::Allocator"* %60 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %66 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %65, align 8, !noalias !3
  %67 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %66, i64 2
  %68 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %67, align 8, !noalias !3
  call void %68(%"struct.marl::Allocation"* nonnull sret %3, %"class.marl::Allocator"* %60, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %4) #18, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #10, !noalias !3
  %69 = bitcast %"struct.marl::Allocation"* %3 to %"struct.std::__1::__hash_node"**
  %70 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %69, align 8, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %58) #10, !noalias !3
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %70, i64 0, i32 2, i32 0, i32 0, i32 0
  %72 = load i16, i16* %6, align 2, !noalias !3
  store i16 %72, i16* %71, align 2, !noalias !3
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %70, i64 0, i32 1
  store i64 %8, i64* %73, align 8, !noalias !3
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %70, i64 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %74, align 8, !noalias !3
  %75 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = add i64 %76, 1
  %78 = uitofp i64 %77 to float
  %79 = uitofp i64 %10 to float
  %80 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %81 = load float, float* %80, align 4
  %82 = fmul float %81, %79
  %83 = fcmp olt float %82, %78
  %84 = or i1 %11, %83
  br i1 %84, label %85, label %148

85:                                               ; preds = %56
  %86 = shl i64 %10, 1
  %87 = icmp ult i64 %10, 3
  %88 = call i64 @llvm.ctpop.i64(i64 %10) #10, !range !2
  %89 = icmp ugt i64 %88, 1
  %90 = or i1 %87, %89
  %91 = zext i1 %90 to i64
  %92 = or i64 %86, %91
  %93 = fdiv float %78, %81
  %94 = call float @llvm.ceil.f32(float %93) #10
  %95 = fptoui float %94 to i64
  %96 = icmp ult i64 %92, %95
  %97 = select i1 %96, i64 %95, i64 %92
  %98 = icmp eq i64 %97, 1
  br i1 %98, label %104, label %99

99:                                               ; preds = %85
  %100 = call i64 @llvm.ctpop.i64(i64 %97) #10, !range !2
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %102, label %104

102:                                              ; preds = %99
  %103 = call i64 @_ZNSt3__112__next_primeEm(i64 %97) #18
  br label %104

104:                                              ; preds = %102, %99, %85
  %105 = phi i64 [ %103, %102 ], [ %97, %99 ], [ 2, %85 ]
  %106 = load i64, i64* %9, align 8
  %107 = icmp ugt i64 %105, %106
  br i1 %107, label %108, label %109

108:                                              ; preds = %104
  call fastcc void @_ZNSt3__112__hash_tableIN4marl6Thread4CoreEN12_GLOBAL__N_110CoreHasherENS_8equal_toIS3_EENS1_12StlAllocatorIS3_EEE8__rehashEm(%"class.std::__1::__hash_table"* %5, i64 %105) #18
  br label %137

109:                                              ; preds = %104
  %110 = icmp ult i64 %105, %106
  br i1 %110, label %111, label %137

111:                                              ; preds = %109
  %112 = icmp ugt i64 %106, 2
  %113 = call i64 @llvm.ctpop.i64(i64 %106) #10, !range !2
  %114 = icmp ult i64 %113, 2
  %115 = and i1 %112, %114
  %116 = load i64, i64* %75, align 8
  %117 = uitofp i64 %116 to float
  %118 = load float, float* %80, align 4
  %119 = fdiv float %117, %118
  %120 = call float @llvm.ceil.f32(float %119) #10
  %121 = fptoui float %120 to i64
  br i1 %115, label %122, label %129

122:                                              ; preds = %111
  %123 = icmp ult i64 %121, 2
  br i1 %123, label %131, label %124

124:                                              ; preds = %122
  %125 = add i64 %121, -1
  %126 = call i64 @llvm.ctlz.i64(i64 %125, i1 true) #10, !range !2
  %127 = sub nuw nsw i64 64, %126
  %128 = shl i64 1, %127
  br label %131

129:                                              ; preds = %111
  %130 = call i64 @_ZNSt3__112__next_primeEm(i64 %121) #18
  br label %131

131:                                              ; preds = %129, %124, %122
  %132 = phi i64 [ %130, %129 ], [ %128, %124 ], [ %121, %122 ]
  %133 = icmp ult i64 %105, %132
  %134 = select i1 %133, i64 %132, i64 %105
  %135 = icmp ult i64 %134, %106
  br i1 %135, label %136, label %137

136:                                              ; preds = %131
  call fastcc void @_ZNSt3__112__hash_tableIN4marl6Thread4CoreEN12_GLOBAL__N_110CoreHasherENS_8equal_toIS3_EENS1_12StlAllocatorIS3_EEE8__rehashEm(%"class.std::__1::__hash_table"* %5, i64 %134) #18
  br label %137

137:                                              ; preds = %136, %131, %109, %108
  %138 = load i64, i64* %9, align 8
  %139 = call i64 @llvm.ctpop.i64(i64 %138) #10, !range !2
  %140 = icmp ugt i64 %139, 1
  br i1 %140, label %144, label %141

141:                                              ; preds = %137
  %142 = add i64 %138, 65535
  %143 = and i64 %142, %8
  br label %148

144:                                              ; preds = %137
  %145 = icmp ugt i64 %138, %8
  br i1 %145, label %148, label %146

146:                                              ; preds = %144
  %147 = urem i64 %8, %138
  br label %148

148:                                              ; preds = %146, %144, %141, %56
  %149 = phi i64 [ %10, %56 ], [ %138, %141 ], [ %138, %144 ], [ %138, %146 ]
  %150 = phi i64 [ %57, %56 ], [ %143, %141 ], [ %8, %144 ], [ %147, %146 ]
  %151 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %151, align 8
  %153 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %152, i64 %150
  %154 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %153, align 8
  %155 = icmp eq %"struct.std::__1::__hash_node_base"* %154, null
  br i1 %155, label %156, label %184

156:                                              ; preds = %148
  %157 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %158 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %157, i64 0, i32 0
  %159 = bitcast %"struct.std::__1::__hash_node_base"* %157 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"struct.std::__1::__hash_node"* %70 to i64*
  store i64 %160, i64* %161, align 8
  %162 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %70, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %162, %"struct.std::__1::__hash_node_base"** %158, align 8
  %163 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %151, align 8
  %164 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %163, i64 %150
  store %"struct.std::__1::__hash_node_base"* %157, %"struct.std::__1::__hash_node_base"** %164, align 8
  %165 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %166 = icmp eq %"struct.std::__1::__hash_node_base"* %165, null
  br i1 %166, label %190, label %167

167:                                              ; preds = %156
  %168 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %165, i64 1
  %169 = bitcast %"struct.std::__1::__hash_node_base"* %168 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = call i64 @llvm.ctpop.i64(i64 %149) #10, !range !2
  %172 = icmp ugt i64 %171, 1
  br i1 %172, label %176, label %173

173:                                              ; preds = %167
  %174 = add i64 %149, -1
  %175 = and i64 %170, %174
  br label %180

176:                                              ; preds = %167
  %177 = icmp ult i64 %170, %149
  br i1 %177, label %180, label %178

178:                                              ; preds = %176
  %179 = urem i64 %170, %149
  br label %180

180:                                              ; preds = %178, %176, %173
  %181 = phi i64 [ %175, %173 ], [ %179, %178 ], [ %170, %176 ]
  %182 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %151, align 8
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %182, i64 %181
  store %"struct.std::__1::__hash_node_base"* %162, %"struct.std::__1::__hash_node_base"** %183, align 8
  br label %190

184:                                              ; preds = %148
  %185 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %154, i64 0, i32 0
  %186 = bitcast %"struct.std::__1::__hash_node_base"* %154 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %"struct.std::__1::__hash_node"* %70 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %70, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %189, %"struct.std::__1::__hash_node_base"** %185, align 8
  br label %190

190:                                              ; preds = %184, %180, %156
  %191 = load i64, i64* %75, align 8
  %192 = add i64 %191, 1
  store i64 %192, i64* %75, align 8
  br label %193

193:                                              ; preds = %51, %190
  ret void
}

; Function Attrs: nounwind optsize readonly ssp uwtable
define internal fastcc i64 @_ZNKSt3__113unordered_setIN4marl6Thread4CoreEN12_GLOBAL__N_110CoreHasherENS_8equal_toIS3_EENS1_12StlAllocatorIS3_EEE5countERKS3_(%"class.std::__1::unordered_set"* nocapture readonly, %"struct.marl::Thread::Core"* nocapture readonly dereferenceable(2)) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load i16, i16* %3, align 2
  %5 = zext i16 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %57, label %9

9:                                                ; preds = %2
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #10, !range !2
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 65535
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %17, %15, %12
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base"* %24, null
  br i1 %25, label %57, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %24, i64 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base"* %28, null
  br i1 %29, label %57, label %30

30:                                               ; preds = %26
  %31 = add i64 %7, -1
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi %"struct.std::__1::__hash_node_base"* [ %28, %30 ], [ %55, %53 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %32
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %31
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %43, %41, %39
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %53, label %57

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base"* %49 to i16*
  %51 = load i16, i16* %50, align 2
  %52 = icmp eq i16 %51, %4
  br i1 %52, label %57, label %53

53:                                               ; preds = %48, %45
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base"* %55, null
  br i1 %56, label %57, label %32

57:                                               ; preds = %45, %48, %53, %2, %19, %26
  %58 = phi %"struct.std::__1::__hash_node_base"* [ null, %19 ], [ null, %2 ], [ null, %26 ], [ %33, %48 ], [ null, %53 ], [ null, %45 ]
  %59 = icmp ne %"struct.std::__1::__hash_node_base"* %58, null
  %60 = zext i1 %59 to i64
  ret i64 %60
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @_ZNSt3__113unordered_setIN4marl6Thread4CoreEN12_GLOBAL__N_110CoreHasherENS_8equal_toIS3_EENS1_12StlAllocatorIS3_EEED2Ev(%"class.std::__1::unordered_set"*) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.marl::Allocation", align 8
  %3 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base"* %4, null
  br i1 %5, label %24, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.marl::Allocation"* %2 to i8*
  %8 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 0
  %9 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 2
  %10 = bitcast %"struct.marl::Allocation"* %2 to %"struct.std::__1::__hash_node_base"**
  %11 = bitcast i8* %9 to i16*
  %12 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %0, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %13 = bitcast i64* %8 to <2 x i64>*
  br label %14

14:                                               ; preds = %14, %6
  %15 = phi %"struct.std::__1::__hash_node_base"* [ %4, %6 ], [ %17, %14 ]
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %15, i64 0, i32 0
  %17 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false) #10
  store %"struct.std::__1::__hash_node_base"* %15, %"struct.std::__1::__hash_node_base"** %10, align 8
  store <2 x i64> <i64 24, i64 8>, <2 x i64>* %13, align 8
  store i16 1280, i16* %11, align 8
  %18 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %12, align 8
  %19 = bitcast %"class.marl::Allocator"* %18 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %20 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %20, i64 3
  %22 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %21, align 8
  call void %22(%"class.marl::Allocator"* %18, %"struct.marl::Allocation"* nonnull dereferenceable(32) %2) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #10
  %23 = icmp eq %"struct.std::__1::__hash_node_base"* %17, null
  br i1 %23, label %24, label %14

24:                                               ; preds = %14, %1
  %25 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %0, i64 0, i32 0, i32 0
  call void @_ZNSt3__110unique_ptrIA_PNS_16__hash_node_baseIPNS_11__hash_nodeIN4marl6Thread4CoreEPvEEEENS_25__bucket_list_deallocatorINS3_12StlAllocatorISA_EEEEE5resetEDn(%"class.std::__1::unique_ptr"* %25, i8* null) #18
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define dereferenceable(128) %"struct.marl::Thread::Affinity"* @_ZN4marl6Thread8Affinity6removeERKS1_(%"struct.marl::Thread::Affinity"* returned, %"struct.marl::Thread::Affinity"* nocapture readonly dereferenceable(128)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::__less.55", align 1
  %4 = alloca %"struct.marl::Allocation::Request", align 8
  %5 = alloca %"struct.marl::Allocation", align 8
  %6 = alloca %"class.std::__1::unordered_set", align 8
  %7 = alloca %"struct.marl::Thread::Core", align 2
  %8 = bitcast %"class.std::__1::unordered_set"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %6, i64 0, i32 0, i32 4, i64 0
  %12 = bitcast %"struct.marl::Thread::Affinity"* %0 to i64*
  %13 = bitcast i8* %11 to i32*
  store i32 -1431655766, i32* %13, align 4
  %14 = load i64, i64* %12, align 8
  %15 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %16 = bitcast %"struct.std::__1::__compressed_pair_elem.6"* %15 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #10
  store i64 %14, i64* %16, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %9, align 8
  %17 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %6, i64 0, i32 0, i32 1, i32 1
  %18 = bitcast %"struct.std::__1::__compressed_pair_elem.9"* %17 to i64*
  store i64 %14, i64* %18, align 8
  store i64 0, i64* %10, align 8
  %19 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %6, i64 0, i32 0, i32 3
  %20 = bitcast %"class.std::__1::__compressed_pair.13"* %19 to i32*
  store i32 1065353216, i32* %20, align 8
  %21 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %1, i64 0, i32 0, i32 4
  %22 = bitcast %"struct.marl::aligned_storage<2, 2>::type"** %21 to %"struct.marl::Thread::Core"**
  %23 = load %"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"** %22, align 8
  %24 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %1, i64 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %23, i64 %25
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %2
  %29 = bitcast %"struct.marl::Thread::Core"* %7 to i8*
  %30 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %7, i64 0, i32 0, i32 0, i32 0
  br label %52

31:                                               ; preds = %52, %2
  %32 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, 0
  %35 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 4
  %36 = bitcast %"struct.marl::aligned_storage<2, 2>::type"** %35 to %"struct.marl::Thread::Core"**
  %37 = load %"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"** %36, align 8
  br i1 %34, label %58, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 2
  %40 = bitcast %"struct.marl::Allocation::Request"* %4 to i8*
  %41 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 0
  %42 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 1
  %43 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 2
  %44 = bitcast i8* %43 to i16*
  %45 = bitcast %"struct.marl::Allocation"* %5 to i8*
  %46 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 0
  %47 = bitcast %"struct.marl::Allocation"* %5 to %"struct.marl::aligned_storage<2, 2>::type"**
  %48 = getelementptr inbounds %"struct.marl::Thread::Affinity", %"struct.marl::Thread::Affinity"* %0, i64 0, i32 0, i32 5
  %49 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %48, i64 0, i32 0
  %50 = bitcast %"struct.marl::aligned_storage<2, 2>::type"** %35 to i8*
  %51 = bitcast %"struct.marl::Allocation"* %48 to i8*
  br label %63

52:                                               ; preds = %28, %52
  %53 = phi %"struct.marl::Thread::Core"* [ %23, %28 ], [ %56, %52 ]
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %29) #10
  %54 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %53, i64 0, i32 0, i32 0, i32 0
  %55 = load i16, i16* %54, align 2
  store i16 %55, i16* %30, align 2
  call fastcc void @_ZNSt3__113unordered_setIN4marl6Thread4CoreEN12_GLOBAL__N_110CoreHasherENS_8equal_toIS3_EENS1_12StlAllocatorIS3_EEE7emplaceIJRS3_EEENS_4pairINS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEEDpOT_(%"class.std::__1::unordered_set"* nonnull %6, %"struct.marl::Thread::Core"* nonnull dereferenceable(2) %7) #21
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %29) #10
  %56 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %53, i64 1
  %57 = icmp eq %"struct.marl::Thread::Core"* %56, %26
  br i1 %57, label %31, label %52

58:                                               ; preds = %129, %31
  %59 = phi i64 [ 0, %31 ], [ %130, %129 ]
  %60 = phi %"struct.marl::Thread::Core"* [ %37, %31 ], [ %133, %129 ]
  %61 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %60, i64 %59
  %62 = getelementptr inbounds %"struct.std::__1::__less.55", %"struct.std::__1::__less.55"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %62) #10
  call void @_ZNSt3__16__sortIRNS_6__lessIN4marl6Thread4CoreES4_EEPS4_EEvT0_S8_T_(%"struct.marl::Thread::Core"* %60, %"struct.marl::Thread::Core"* %61, %"struct.std::__1::__less.55"* nonnull dereferenceable(1) %3) #18
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %62) #10
  call fastcc void @_ZNSt3__113unordered_setIN4marl6Thread4CoreEN12_GLOBAL__N_110CoreHasherENS_8equal_toIS3_EENS1_12StlAllocatorIS3_EEED2Ev(%"class.std::__1::unordered_set"* nonnull %6) #18
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %8) #10
  ret %"struct.marl::Thread::Affinity"* %0

63:                                               ; preds = %38, %129
  %64 = phi i64 [ %33, %38 ], [ %130, %129 ]
  %65 = phi %"struct.marl::Thread::Core"* [ %37, %38 ], [ %133, %129 ]
  %66 = phi i64 [ 0, %38 ], [ %131, %129 ]
  %67 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %65, i64 %66
  %68 = call fastcc i64 @_ZNKSt3__113unordered_setIN4marl6Thread4CoreEN12_GLOBAL__N_110CoreHasherENS_8equal_toIS3_EENS1_12StlAllocatorIS3_EEE5countERKS3_(%"class.std::__1::unordered_set"* nonnull %6, %"struct.marl::Thread::Core"* dereferenceable(2) %67) #21
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %129, label %70

70:                                               ; preds = %63
  %71 = add i64 %64, -1
  %72 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %65, i64 %71, i32 0, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %67, i64 0, i32 0, i32 0, i32 0
  %74 = load i16, i16* %72, align 2
  store i16 %74, i16* %73, align 2
  %75 = load i64, i64* %32, align 8
  %76 = add i64 %75, -1
  %77 = load i64, i64* %39, align 8
  %78 = icmp ult i64 %77, %76
  br i1 %78, label %79, label %115

79:                                               ; preds = %70
  %80 = shl i64 %76, 1
  %81 = icmp ugt i64 %80, 8
  %82 = select i1 %81, i64 %80, i64 8
  store i64 %82, i64* %39, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 24, i1 false) #10
  store i16 768, i16* %44, align 8
  %83 = shl i64 %82, 1
  store i64 %83, i64* %41, align 8
  store i64 2, i64* %42, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %45) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 32, i1 false) #10
  %84 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %46, align 8
  %85 = bitcast %"class.marl::Allocator"* %84 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %86 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %85, align 8
  %87 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %86, i64 2
  %88 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %87, align 8
  call void %88(%"struct.marl::Allocation"* nonnull sret %5, %"class.marl::Allocator"* %84, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %4) #18
  %89 = load %"struct.marl::aligned_storage<2, 2>::type"*, %"struct.marl::aligned_storage<2, 2>::type"** %47, align 8
  %90 = load i64, i64* %32, align 8
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %105

92:                                               ; preds = %105, %79
  %93 = phi i64 [ 0, %79 ], [ %113, %105 ]
  %94 = load i8*, i8** %49, align 8
  %95 = icmp eq i8* %94, null
  br i1 %95, label %103, label %96

96:                                               ; preds = %92
  %97 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %46, align 8
  %98 = bitcast %"class.marl::Allocator"* %97 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %99 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %98, align 8
  %100 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %99, i64 3
  %101 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %100, align 8
  call void %101(%"class.marl::Allocator"* %97, %"struct.marl::Allocation"* dereferenceable(32) %48) #18
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 34, i1 false) #10
  %102 = load i64, i64* %32, align 8
  br label %103

103:                                              ; preds = %96, %92
  %104 = phi i64 [ %102, %96 ], [ %93, %92 ]
  store %"struct.marl::aligned_storage<2, 2>::type"* %89, %"struct.marl::aligned_storage<2, 2>::type"** %35, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* nonnull align 8 %45, i64 32, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %45) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #10
  br label %115

105:                                              ; preds = %79, %105
  %106 = phi i64 [ %112, %105 ], [ 0, %79 ]
  %107 = getelementptr inbounds %"struct.marl::aligned_storage<2, 2>::type", %"struct.marl::aligned_storage<2, 2>::type"* %89, i64 %106, i32 0, i64 0
  %108 = load %"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"** %36, align 8
  %109 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %108, i64 %106, i32 0, i32 0, i32 0
  %110 = bitcast i8* %107 to i16*
  %111 = load i16, i16* %109, align 2
  store i16 %111, i16* %110, align 2
  %112 = add nuw i64 %106, 1
  %113 = load i64, i64* %32, align 8
  %114 = icmp ult i64 %112, %113
  br i1 %114, label %105, label %92

115:                                              ; preds = %103, %70
  %116 = phi i64 [ %104, %103 ], [ %75, %70 ]
  %117 = icmp ult i64 %116, %76
  br i1 %117, label %122, label %118

118:                                              ; preds = %122, %115
  %119 = phi i64 [ %116, %115 ], [ %127, %122 ]
  %120 = icmp ugt i64 %119, %76
  br i1 %120, label %121, label %129

121:                                              ; preds = %118
  store i64 %76, i64* %32, align 8
  br label %129

122:                                              ; preds = %115, %122
  %123 = phi i64 [ %127, %122 ], [ %116, %115 ]
  %124 = load %"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"** %36, align 8
  %125 = add nuw i64 %123, 1
  store i64 %125, i64* %32, align 8
  %126 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %124, i64 %123, i32 0, i32 0, i32 0
  store i16 0, i16* %126, align 2
  %127 = load i64, i64* %32, align 8
  %128 = icmp ult i64 %127, %76
  br i1 %128, label %122, label %118

129:                                              ; preds = %121, %118, %63
  %130 = phi i64 [ %76, %121 ], [ %119, %118 ], [ %64, %63 ]
  %131 = add nuw i64 %66, 1
  %132 = icmp ult i64 %131, %130
  %133 = load %"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"** %36, align 8
  br i1 %132, label %63, label %58
}

; Function Attrs: nounwind optsize ssp uwtable
define void @_ZN4marl6ThreadC2EONS0_8AffinityEONSt3__18functionIFvvEEE(%"class.marl::Thread"* nocapture, %"struct.marl::Thread::Affinity"* dereferenceable(128), %"class.std::__1::function"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 168) #20
  %5 = bitcast i8* %4 to %"class.marl::Thread::Impl"*
  tail call void @_ZN4marl6Thread4ImplC2EONS0_8AffinityEONSt3__18functionIFvvEEE(%"class.marl::Thread::Impl"* nonnull %5, %"struct.marl::Thread::Affinity"* dereferenceable(128) %1, %"class.std::__1::function"* dereferenceable(32) %2) #21
  %6 = bitcast %"class.marl::Thread"* %0 to i8**
  store i8* %4, i8** %6, align 8
  ret void
}

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4marl6Thread4ImplC2EONS0_8AffinityEONSt3__18functionIFvvEEE(%"class.marl::Thread::Impl"*, %"struct.marl::Thread::Affinity"* dereferenceable(128), %"class.std::__1::function"* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %class.anon, align 8
  %5 = getelementptr inbounds %"class.marl::Thread::Impl", %"class.marl::Thread::Impl"* %0, i64 0, i32 0
  tail call void @_ZN4marl6Thread8AffinityC2EOS1_(%"struct.marl::Thread::Affinity"* %5, %"struct.marl::Thread::Affinity"* dereferenceable(128) %1) #21
  %6 = getelementptr inbounds %"class.marl::Thread::Impl", %"class.marl::Thread::Impl"* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::function"* %6 to i8*
  %8 = bitcast %"class.std::__1::function"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 16, i1 false) #10
  %9 = getelementptr inbounds %"class.marl::Thread::Impl", %"class.marl::Thread::Impl"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 1
  %11 = bitcast %"struct.std::__1::__function::__policy_invoker"* %10 to i64*
  %12 = bitcast %"struct.std::__1::__function::__policy_invoker"* %9 to i64*
  %13 = load i64, i64* %11, align 8
  store i64 %13, i64* %12, align 8
  %14 = getelementptr inbounds %"class.marl::Thread::Impl", %"class.marl::Thread::Impl"* %0, i64 0, i32 1, i32 0, i32 2
  %15 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 2
  %16 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %15, align 8
  store %"struct.std::__1::__function::__policy"* %16, %"struct.std::__1::__function::__policy"** %14, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %16, i64 0, i32 1
  %18 = load void (i8*)*, void (i8*)** %17, align 8
  %19 = icmp eq void (i8*)* %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %3
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %15, align 8
  store i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE to i64), i64* %11, align 8
  br label %21

21:                                               ; preds = %3, %20
  %22 = getelementptr inbounds %"class.marl::Thread::Impl", %"class.marl::Thread::Impl"* %0, i64 0, i32 2
  %23 = bitcast %class.anon* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  %24 = getelementptr inbounds %class.anon, %class.anon* %4, i64 0, i32 0
  store %"class.marl::Thread::Impl"* %0, %"class.marl::Thread::Impl"** %24, align 8
  call void @_ZNSt3__16threadC2IZN4marl6Thread4ImplC1EONS3_8AffinityEONS_8functionIFvvEEEEUlvE_JEvEEOT_DpOT0_(%"class.std::__1::thread"* %22, %class.anon* nonnull dereferenceable(8) %4) #21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define void @_ZN4marl6ThreadD2Ev(%"class.marl::Thread"* nocapture) unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define void @_ZN4marl6Thread4joinEv(%"class.marl::Thread"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.marl::Thread", %"class.marl::Thread"* %0, i64 0, i32 0
  %3 = load %"class.marl::Thread::Impl"*, %"class.marl::Thread::Impl"** %2, align 8
  %4 = getelementptr inbounds %"class.marl::Thread::Impl", %"class.marl::Thread::Impl"* %3, i64 0, i32 2
  tail call void @_ZNSt3__16thread4joinEv(%"class.std::__1::thread"* %4) #18
  %5 = load %"class.marl::Thread::Impl"*, %"class.marl::Thread::Impl"** %2, align 8
  %6 = icmp eq %"class.marl::Thread::Impl"* %5, null
  br i1 %6, label %31, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.marl::Thread::Impl", %"class.marl::Thread::Impl"* %5, i64 0, i32 2
  tail call void @_ZNSt3__16threadD1Ev(%"class.std::__1::thread"* %8) #18
  %9 = getelementptr inbounds %"class.marl::Thread::Impl", %"class.marl::Thread::Impl"* %5, i64 0, i32 1, i32 0, i32 2
  %10 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %9, align 8
  %11 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %10, i64 0, i32 1
  %12 = load void (i8*)*, void (i8*)** %11, align 8
  %13 = icmp eq void (i8*)* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.marl::Thread::Impl", %"class.marl::Thread::Impl"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  tail call void %12(i8* %16) #18
  br label %17

17:                                               ; preds = %14, %7
  %18 = getelementptr inbounds %"class.marl::Thread::Impl", %"class.marl::Thread::Impl"* %5, i64 0, i32 0, i32 0, i32 5
  %19 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %18, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.marl::Thread::Impl", %"class.marl::Thread::Impl"* %5, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %23, align 8
  %25 = bitcast %"class.marl::Allocator"* %24 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %26 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %26, i64 3
  %28 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %27, align 8
  tail call void %28(%"class.marl::Allocator"* %24, %"struct.marl::Allocation"* dereferenceable(32) %18) #18
  br label %29

29:                                               ; preds = %17, %22
  %30 = bitcast %"class.marl::Thread::Impl"* %5 to i8*
  tail call void @_ZdlPv(i8* %30) #20
  br label %31

31:                                               ; preds = %29, %1
  store %"class.marl::Thread::Impl"* null, %"class.marl::Thread::Impl"** %2, align 8
  ret void
}

; Function Attrs: optsize
declare void @_ZNSt3__16thread4joinEv(%"class.std::__1::thread"*) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind optsize ssp uwtable
define void @_ZN4marl6Thread7setNameEPKcz(i8* nocapture readonly, ...) local_unnamed_addr #0 align 2 {
  %2 = alloca [1024 x i8], align 16
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = getelementptr inbounds [1024 x i8], [1024 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %4) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 1024, i1 false)
  %5 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #10
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %7 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %5)
  %8 = call i32 @vsnprintf(i8* nonnull %4, i64 1024, i8* %0, %struct.__va_list_tag* nonnull %6) #18
  call void @llvm.va_end(i8* nonnull %5)
  %9 = tail call i64 @pthread_self() #19
  %10 = call i32 @pthread_setname_np(i64 %9, i8* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %4) #10
  ret void
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #10

; Function Attrs: nofree nounwind optsize
declare i32 @vsnprintf(i8* nocapture, i64, i8* nocapture readonly, %struct.__va_list_tag*) local_unnamed_addr #11

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #10

; Function Attrs: nounwind optsize
declare i32 @pthread_setname_np(i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define i32 @_ZN4marl6Thread14numLogicalCPUsEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i64 @sysconf(i32 84) #18
  %2 = trunc i64 %1 to i32
  ret i32 %2
}

; Function Attrs: nounwind optsize
declare i64 @sysconf(i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define void @_ZN4marl6ThreadC2EOS0_(%"class.marl::Thread"* nocapture, %"class.marl::Thread"* nocapture dereferenceable(8)) unnamed_addr #12 align 2 {
  %3 = getelementptr inbounds %"class.marl::Thread", %"class.marl::Thread"* %1, i64 0, i32 0
  %4 = bitcast %"class.marl::Thread"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.marl::Thread"* %0 to i64*
  store i64 %5, i64* %6, align 8
  store %"class.marl::Thread::Impl"* null, %"class.marl::Thread::Impl"** %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define dereferenceable(8) %"class.marl::Thread"* @_ZN4marl6ThreadaSEOS0_(%"class.marl::Thread"* returned, %"class.marl::Thread"* nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.marl::Thread", %"class.marl::Thread"* %0, i64 0, i32 0
  %4 = load %"class.marl::Thread::Impl"*, %"class.marl::Thread::Impl"** %3, align 8
  %5 = icmp eq %"class.marl::Thread::Impl"* %4, null
  br i1 %5, label %30, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.marl::Thread::Impl", %"class.marl::Thread::Impl"* %4, i64 0, i32 2
  tail call void @_ZNSt3__16threadD1Ev(%"class.std::__1::thread"* %7) #18
  %8 = getelementptr inbounds %"class.marl::Thread::Impl", %"class.marl::Thread::Impl"* %4, i64 0, i32 1, i32 0, i32 2
  %9 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %8, align 8
  %10 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %9, i64 0, i32 1
  %11 = load void (i8*)*, void (i8*)** %10, align 8
  %12 = icmp eq void (i8*)* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.marl::Thread::Impl", %"class.marl::Thread::Impl"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void %11(i8* %15) #18
  br label %16

16:                                               ; preds = %13, %6
  %17 = getelementptr inbounds %"class.marl::Thread::Impl", %"class.marl::Thread::Impl"* %4, i64 0, i32 0, i32 0, i32 5
  %18 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %17, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.marl::Thread::Impl", %"class.marl::Thread::Impl"* %4, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %22, align 8
  %24 = bitcast %"class.marl::Allocator"* %23 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %25 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %25, i64 3
  %27 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %26, align 8
  tail call void %27(%"class.marl::Allocator"* %23, %"struct.marl::Allocation"* dereferenceable(32) %17) #18
  br label %28

28:                                               ; preds = %16, %21
  %29 = bitcast %"class.marl::Thread::Impl"* %4 to i8*
  tail call void @_ZdlPv(i8* %29) #20
  store %"class.marl::Thread::Impl"* null, %"class.marl::Thread::Impl"** %3, align 8
  br label %30

30:                                               ; preds = %2, %28
  %31 = getelementptr inbounds %"class.marl::Thread", %"class.marl::Thread"* %1, i64 0, i32 0
  %32 = bitcast %"class.marl::Thread"* %1 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.marl::Thread"* %0 to i64*
  store i64 %33, i64* %34, align 8
  store %"class.marl::Thread::Impl"* null, %"class.marl::Thread::Impl"** %31, align 8
  ret %"class.marl::Thread"* %0
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16threadC2IZN4marl6Thread4ImplC1EONS3_8AffinityEONS_8functionIFvvEEEEUlvE_JEvEEOT_DpOT0_(%"class.std::__1::thread"*, %class.anon* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = tail call i8* @_Znwm(i64 8) #20
  %4 = bitcast i8* %3 to %"class.std::__1::__thread_struct"*
  tail call void @_ZNSt3__115__thread_structC1Ev(%"class.std::__1::__thread_struct"* nonnull %4) #18
  %5 = ptrtoint i8* %3 to i64
  %6 = tail call i8* @_Znwm(i64 16) #20
  %7 = bitcast %class.anon* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast i8* %6 to i64*
  store i64 %5, i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 8
  %11 = bitcast i8* %10 to i64*
  store i64 %8, i64* %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::thread", %"class.std::__1::thread"* %0, i64 0, i32 0
  %13 = tail call i32 @pthread_create(i64* %12, %union.pthread_attr_t* null, i8* (i8*)* nonnull @_ZNSt3__114__thread_proxyINS_5tupleIJNS_10unique_ptrINS_15__thread_structENS_14default_deleteIS3_EEEEZN4marl6Thread4ImplC1EONS8_8AffinityEONS_8functionIFvvEEEEUlvE_EEEEEPvSI_, i8* nonnull %6) #18
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %2
  ret void

16:                                               ; preds = %2
  tail call void @_ZNSt3__120__throw_system_errorEiPKc(i32 %13, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0)) #22
  unreachable
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE(%"union.std::__1::__function::__policy_storage"*) #0 comdat align 2 {
  tail call void @_ZNSt3__125__throw_bad_function_callEv() #23
  unreachable
}

; Function Attrs: inlinehint noreturn nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__125__throw_bad_function_callEv() local_unnamed_addr #13 comdat {
  tail call void @abort() #22
  unreachable
}

; Function Attrs: noreturn nounwind optsize
declare void @abort() local_unnamed_addr #14

; Function Attrs: optsize
declare void @_ZNSt3__115__thread_structC1Ev(%"class.std::__1::__thread_struct"*) unnamed_addr #8

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__114__thread_proxyINS_5tupleIJNS_10unique_ptrINS_15__thread_structENS_14default_deleteIS3_EEEEZN4marl6Thread4ImplC1EONS8_8AffinityEONS_8functionIFvvEEEEUlvE_EEEEEPvSI_(i8*) #0 comdat {
  %2 = tail call dereferenceable(4) %"class.std::__1::__thread_specific_ptr"* @_ZNSt3__119__thread_local_dataEv() #18
  %3 = bitcast i8* %0 to %"class.std::__1::__thread_struct"**
  %4 = bitcast i8* %0 to i8**
  %5 = load i8*, i8** %4, align 8
  store %"class.std::__1::__thread_struct"* null, %"class.std::__1::__thread_struct"** %3, align 8
  %6 = getelementptr inbounds %"class.std::__1::__thread_specific_ptr", %"class.std::__1::__thread_specific_ptr"* %2, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = tail call i32 @pthread_setspecific(i32 %7, i8* %5) #18
  %9 = getelementptr inbounds i8, i8* %0, i64 8
  %10 = bitcast i8* %9 to %"class.marl::Thread::Impl"**
  %11 = load %"class.marl::Thread::Impl"*, %"class.marl::Thread::Impl"** %10, align 8
  tail call void @_ZN4marl6Thread4Impl11setAffinityEv(%"class.marl::Thread::Impl"* %11) #18
  %12 = getelementptr inbounds %"class.marl::Thread::Impl", %"class.marl::Thread::Impl"* %11, i64 0, i32 1, i32 0, i32 1, i32 0
  %13 = load void (%"union.std::__1::__function::__policy_storage"*)*, void (%"union.std::__1::__function::__policy_storage"*)** %12, align 8
  %14 = getelementptr inbounds %"class.marl::Thread::Impl", %"class.marl::Thread::Impl"* %11, i64 0, i32 1, i32 0, i32 0
  tail call void %13(%"union.std::__1::__function::__policy_storage"* %14) #18
  %15 = icmp eq i8* %0, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %1
  %17 = bitcast i8* %0 to %"class.std::__1::unique_ptr.17"*
  tail call void @_ZNSt3__110unique_ptrINS_15__thread_structENS_14default_deleteIS1_EEE5resetEPS1_(%"class.std::__1::unique_ptr.17"* nonnull %17, %"class.std::__1::__thread_struct"* null) #18
  tail call void @_ZdlPv(i8* nonnull %0) #20
  br label %18

18:                                               ; preds = %1, %16
  ret i8* null
}

; Function Attrs: noreturn optsize
declare void @_ZNSt3__120__throw_system_errorEiPKc(i32, i8*) local_unnamed_addr #15

; Function Attrs: nounwind optsize
declare i32 @pthread_create(i64*, %union.pthread_attr_t*, i8* (i8*)*, i8*) local_unnamed_addr #3

; Function Attrs: optsize
declare dereferenceable(4) %"class.std::__1::__thread_specific_ptr"* @_ZNSt3__119__thread_local_dataEv() local_unnamed_addr #8

; Function Attrs: nounwind optsize
declare i32 @pthread_setspecific(i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4marl6Thread4Impl11setAffinityEv(%"class.marl::Thread::Impl"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %struct.cpu_set_t, align 8
  %3 = getelementptr inbounds %"class.marl::Thread::Impl", %"class.marl::Thread::Impl"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %30, label %6

6:                                                ; preds = %1
  %7 = bitcast %struct.cpu_set_t* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %7) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 128, i1 false)
  %8 = getelementptr inbounds %"class.marl::Thread::Impl", %"class.marl::Thread::Impl"* %0, i64 0, i32 0, i32 0, i32 4
  %9 = bitcast %"struct.marl::aligned_storage<2, 2>::type"** %8 to %"struct.marl::Thread::Core"**
  %10 = load %"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"** %9, align 8
  br label %14

11:                                               ; preds = %27
  %12 = tail call i64 @pthread_self() #19
  %13 = call i32 @pthread_setaffinity_np(i64 %12, i64 128, %struct.cpu_set_t* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %7) #10
  br label %30

14:                                               ; preds = %27, %6
  %15 = phi i64 [ 0, %6 ], [ %28, %27 ]
  %16 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %10, i64 %15, i32 0, i32 0, i32 0
  %17 = load i16, i16* %16, align 2
  %18 = zext i16 %17 to i64
  %19 = icmp ult i16 %17, 1024
  br i1 %19, label %20, label %27

20:                                               ; preds = %14
  %21 = and i64 %18, 63
  %22 = shl i64 1, %21
  %23 = lshr i64 %18, 6
  %24 = getelementptr inbounds %struct.cpu_set_t, %struct.cpu_set_t* %2, i64 0, i32 0, i64 %23
  %25 = load i64, i64* %24, align 8
  %26 = or i64 %25, %22
  store i64 %26, i64* %24, align 8
  br label %27

27:                                               ; preds = %14, %20
  %28 = add nuw i64 %15, 1
  %29 = icmp eq i64 %28, %4
  br i1 %29, label %11, label %14

30:                                               ; preds = %1, %11
  ret void
}

; Function Attrs: nounwind optsize
declare i32 @pthread_setaffinity_np(i64, i64, %struct.cpu_set_t*) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrINS_15__thread_structENS_14default_deleteIS1_EEE5resetEPS1_(%"class.std::__1::unique_ptr.17"*, %"class.std::__1::__thread_struct"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.17"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::__thread_struct"*, %"class.std::__1::__thread_struct"** %3, align 8
  store %"class.std::__1::__thread_struct"* %1, %"class.std::__1::__thread_struct"** %3, align 8
  %5 = icmp eq %"class.std::__1::__thread_struct"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  tail call void @_ZNSt3__115__thread_structD1Ev(%"class.std::__1::__thread_struct"* nonnull %4) #18
  %7 = bitcast %"class.std::__1::__thread_struct"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #20
  br label %8

8:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind optsize
declare void @_ZNSt3__115__thread_structD1Ev(%"class.std::__1::__thread_struct"*) unnamed_addr #3

; Function Attrs: nounwind optsize
declare void @_ZNSt3__16threadD1Ev(%"class.std::__1::thread"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZZN4marl6Thread8Affinity6Policy5anyOfEOS1_PNS_9AllocatorEEN6PolicyD2Ev(%struct.Policy*) unnamed_addr #16 align 2 {
  %2 = getelementptr inbounds %struct.Policy, %struct.Policy* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVZN4marl6Thread8Affinity6Policy5anyOfEOS1_PNS_9AllocatorEE6Policy, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %struct.Policy, %struct.Policy* %0, i64 0, i32 1, i32 0, i32 5
  %4 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.Policy, %struct.Policy* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %8, align 8
  %10 = bitcast %"class.marl::Allocator"* %9 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %11 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %11, i64 3
  %13 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %12, align 8
  tail call void %13(%"class.marl::Allocator"* %9, %"struct.marl::Allocation"* dereferenceable(32) %3) #18
  %14 = getelementptr inbounds %struct.Policy, %struct.Policy* %0, i64 0, i32 1, i32 0, i32 4
  %15 = bitcast %"struct.marl::aligned_storage<2, 2>::type"** %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 34, i1 false) #10
  br label %16

16:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZZN4marl6Thread8Affinity6Policy5anyOfEOS1_PNS_9AllocatorEEN6PolicyD0Ev(%struct.Policy*) unnamed_addr #16 align 2 {
  %2 = getelementptr inbounds %struct.Policy, %struct.Policy* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVZN4marl6Thread8Affinity6Policy5anyOfEOS1_PNS_9AllocatorEE6Policy, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %struct.Policy, %struct.Policy* %0, i64 0, i32 1, i32 0, i32 5
  %4 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.Policy, %struct.Policy* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %8, align 8
  %10 = bitcast %"class.marl::Allocator"* %9 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %11 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %11, i64 3
  %13 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %12, align 8
  tail call void %13(%"class.marl::Allocator"* %9, %"struct.marl::Allocation"* dereferenceable(32) %3) #18
  br label %14

14:                                               ; preds = %1, %7
  %15 = bitcast %struct.Policy* %0 to i8*
  tail call void @_ZdlPv(i8* %15) #20
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZZN4marl6Thread8Affinity6Policy5anyOfEOS1_PNS_9AllocatorEENK6Policy3getEjS5_(%"struct.marl::Thread::Affinity"* noalias sret, %struct.Policy* nocapture readonly, i32, %"class.marl::Allocator"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %struct.Policy, %struct.Policy* %1, i64 0, i32 1
  tail call void @_ZN4marl6Thread8AffinityC2ERKS1_PNS_9AllocatorE(%"struct.marl::Thread::Affinity"* %0, %"struct.marl::Thread::Affinity"* dereferenceable(128) %5, %"class.marl::Allocator"* %3) #21
  ret void
}

; Function Attrs: nounwind optsize
declare void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZNSt3__120__shared_ptr_pointerIPZN4marl6Thread8Affinity6Policy5anyOfEOS3_PNS1_9AllocatorEE6PolicyNS6_7DeleterENS_9allocatorIS8_EEED0Ev(%"class.std::__1::__shared_ptr_pointer"*) unnamed_addr #16 align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__shared_ptr_pointer", %"class.std::__1::__shared_ptr_pointer"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %2) #18
  %3 = bitcast %"class.std::__1::__shared_ptr_pointer"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #20
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZNSt3__120__shared_ptr_pointerIPZN4marl6Thread8Affinity6Policy5anyOfEOS3_PNS1_9AllocatorEE6PolicyNS6_7DeleterENS_9allocatorIS8_EEE16__on_zero_sharedEv(%"class.std::__1::__shared_ptr_pointer"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.marl::Allocation", align 8
  %3 = getelementptr inbounds %"class.std::__1::__shared_ptr_pointer", %"class.std::__1::__shared_ptr_pointer"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %struct.Policy*, %struct.Policy** %3, align 8
  %5 = bitcast %struct.Policy* %4 to void (%struct.Policy*)***
  %6 = load void (%struct.Policy*)**, void (%struct.Policy*)*** %5, align 8
  %7 = load void (%struct.Policy*)*, void (%struct.Policy*)** %6, align 8
  tail call void %7(%struct.Policy* %4) #18
  %8 = bitcast %"struct.marl::Allocation"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 0
  %10 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false) #10
  %11 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 2
  %12 = bitcast i8* %11 to i16*
  store i16 512, i16* %12, align 8
  %13 = bitcast %"struct.marl::Allocation"* %2 to %struct.Policy**
  store %struct.Policy* %4, %struct.Policy** %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::__shared_ptr_pointer", %"class.std::__1::__shared_ptr_pointer"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = mul i64 %15, 136
  store i64 %16, i64* %9, align 8
  store i64 8, i64* %10, align 8
  %17 = getelementptr inbounds %"class.std::__1::__shared_ptr_pointer", %"class.std::__1::__shared_ptr_pointer"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %18 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %17, align 8
  %19 = bitcast %"class.marl::Allocator"* %18 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %20 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %20, i64 3
  %22 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %21, align 8
  call void %22(%"class.marl::Allocator"* %18, %"struct.marl::Allocation"* nonnull dereferenceable(32) %2) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #10
  ret void
}

; Function Attrs: nounwind optsize
declare i8* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info(%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"* dereferenceable(16)) unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZNSt3__120__shared_ptr_pointerIPZN4marl6Thread8Affinity6Policy5anyOfEOS3_PNS1_9AllocatorEE6PolicyNS6_7DeleterENS_9allocatorIS8_EEE21__on_zero_shared_weakEv(%"class.std::__1::__shared_ptr_pointer"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.std::__1::__shared_ptr_pointer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #20
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZZN4marl6Thread8Affinity6Policy5oneOfEOS1_PNS_9AllocatorEEN6PolicyD2Ev(%struct.Policy.2*) unnamed_addr #16 align 2 {
  %2 = getelementptr inbounds %struct.Policy.2, %struct.Policy.2* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVZN4marl6Thread8Affinity6Policy5oneOfEOS1_PNS_9AllocatorEE6Policy, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %struct.Policy.2, %struct.Policy.2* %0, i64 0, i32 1, i32 0, i32 5
  %4 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.Policy.2, %struct.Policy.2* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %8, align 8
  %10 = bitcast %"class.marl::Allocator"* %9 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %11 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %11, i64 3
  %13 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %12, align 8
  tail call void %13(%"class.marl::Allocator"* %9, %"struct.marl::Allocation"* dereferenceable(32) %3) #18
  %14 = getelementptr inbounds %struct.Policy.2, %struct.Policy.2* %0, i64 0, i32 1, i32 0, i32 4
  %15 = bitcast %"struct.marl::aligned_storage<2, 2>::type"** %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 34, i1 false) #10
  br label %16

16:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZZN4marl6Thread8Affinity6Policy5oneOfEOS1_PNS_9AllocatorEEN6PolicyD0Ev(%struct.Policy.2*) unnamed_addr #16 align 2 {
  %2 = getelementptr inbounds %struct.Policy.2, %struct.Policy.2* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVZN4marl6Thread8Affinity6Policy5oneOfEOS1_PNS_9AllocatorEE6Policy, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %struct.Policy.2, %struct.Policy.2* %0, i64 0, i32 1, i32 0, i32 5
  %4 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.Policy.2, %struct.Policy.2* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %8, align 8
  %10 = bitcast %"class.marl::Allocator"* %9 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %11 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %11, i64 3
  %13 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %12, align 8
  tail call void %13(%"class.marl::Allocator"* %9, %"struct.marl::Allocation"* dereferenceable(32) %3) #18
  br label %14

14:                                               ; preds = %1, %7
  %15 = bitcast %struct.Policy.2* %0 to i8*
  tail call void @_ZdlPv(i8* %15) #20
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZZN4marl6Thread8Affinity6Policy5oneOfEOS1_PNS_9AllocatorEENK6Policy3getEjS5_(%"struct.marl::Thread::Affinity"* noalias sret, %struct.Policy.2* nocapture readonly, i32, %"class.marl::Allocator"*) unnamed_addr #0 align 2 {
  %5 = alloca [1 x %"struct.marl::Thread::Core"], align 2
  %6 = getelementptr inbounds %struct.Policy.2, %struct.Policy.2* %1, i64 0, i32 1, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.Policy.2, %struct.Policy.2* %1, i64 0, i32 1
  tail call void @_ZN4marl6Thread8AffinityC2ERKS1_PNS_9AllocatorE(%"struct.marl::Thread::Affinity"* %0, %"struct.marl::Thread::Affinity"* dereferenceable(128) %10, %"class.marl::Allocator"* %3) #21
  br label %22

11:                                               ; preds = %4
  %12 = bitcast [1 x %"struct.marl::Thread::Core"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %12) #10
  %13 = getelementptr inbounds [1 x %"struct.marl::Thread::Core"], [1 x %"struct.marl::Thread::Core"]* %5, i64 0, i64 0
  %14 = zext i32 %2 to i64
  %15 = urem i64 %14, %7
  %16 = getelementptr inbounds %struct.Policy.2, %struct.Policy.2* %1, i64 0, i32 1, i32 0, i32 4
  %17 = bitcast %"struct.marl::aligned_storage<2, 2>::type"** %16 to %"struct.marl::Thread::Core"**
  %18 = load %"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"** %17, align 8
  %19 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %18, i64 %15, i32 0, i32 0, i32 0
  %20 = load i16, i16* %19, align 2
  %21 = getelementptr inbounds [1 x %"struct.marl::Thread::Core"], [1 x %"struct.marl::Thread::Core"]* %5, i64 0, i64 0, i32 0, i32 0, i32 0
  store i16 %20, i16* %21, align 2
  call void @_ZN4marl6Thread8AffinityC2ESt16initializer_listINS0_4CoreEEPNS_9AllocatorE(%"struct.marl::Thread::Affinity"* %0, %"struct.marl::Thread::Core"* nonnull %13, i64 1, %"class.marl::Allocator"* %3) #21
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %12) #10
  br label %22

22:                                               ; preds = %11, %9
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZNSt3__120__shared_ptr_pointerIPZN4marl6Thread8Affinity6Policy5oneOfEOS3_PNS1_9AllocatorEE6PolicyNS6_7DeleterENS_9allocatorIS8_EEED0Ev(%"class.std::__1::__shared_ptr_pointer.39"*) unnamed_addr #16 align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__shared_ptr_pointer.39", %"class.std::__1::__shared_ptr_pointer.39"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %2) #18
  %3 = bitcast %"class.std::__1::__shared_ptr_pointer.39"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #20
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZNSt3__120__shared_ptr_pointerIPZN4marl6Thread8Affinity6Policy5oneOfEOS3_PNS1_9AllocatorEE6PolicyNS6_7DeleterENS_9allocatorIS8_EEE16__on_zero_sharedEv(%"class.std::__1::__shared_ptr_pointer.39"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.marl::Allocation", align 8
  %3 = getelementptr inbounds %"class.std::__1::__shared_ptr_pointer.39", %"class.std::__1::__shared_ptr_pointer.39"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %struct.Policy.2*, %struct.Policy.2** %3, align 8
  %5 = bitcast %struct.Policy.2* %4 to void (%struct.Policy.2*)***
  %6 = load void (%struct.Policy.2*)**, void (%struct.Policy.2*)*** %5, align 8
  %7 = load void (%struct.Policy.2*)*, void (%struct.Policy.2*)** %6, align 8
  tail call void %7(%struct.Policy.2* %4) #18
  %8 = bitcast %"struct.marl::Allocation"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 0
  %10 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false) #10
  %11 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 2
  %12 = bitcast i8* %11 to i16*
  store i16 512, i16* %12, align 8
  %13 = bitcast %"struct.marl::Allocation"* %2 to %struct.Policy.2**
  store %struct.Policy.2* %4, %struct.Policy.2** %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::__shared_ptr_pointer.39", %"class.std::__1::__shared_ptr_pointer.39"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = mul i64 %15, 136
  store i64 %16, i64* %9, align 8
  store i64 8, i64* %10, align 8
  %17 = getelementptr inbounds %"class.std::__1::__shared_ptr_pointer.39", %"class.std::__1::__shared_ptr_pointer.39"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %18 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %17, align 8
  %19 = bitcast %"class.marl::Allocator"* %18 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %20 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %20, i64 3
  %22 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %21, align 8
  call void %22(%"class.marl::Allocator"* %18, %"struct.marl::Allocation"* nonnull dereferenceable(32) %2) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZNSt3__120__shared_ptr_pointerIPZN4marl6Thread8Affinity6Policy5oneOfEOS3_PNS1_9AllocatorEE6PolicyNS6_7DeleterENS_9allocatorIS8_EEE21__on_zero_shared_weakEv(%"class.std::__1::__shared_ptr_pointer.39"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.std::__1::__shared_ptr_pointer.39"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #20
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIA_PNS_16__hash_node_baseIPNS_11__hash_nodeIN4marl6Thread4CoreEPvEEEENS_25__bucket_list_deallocatorINS3_12StlAllocatorISA_EEEEE5resetEDn(%"class.std::__1::unique_ptr"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.marl::Allocation", align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %4, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %4, align 8
  %6 = icmp eq %"struct.std::__1::__hash_node_base"** %5, null
  br i1 %6, label %23, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"struct.marl::Allocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 1
  %13 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false) #10
  %14 = bitcast %"struct.marl::Allocation"* %3 to %"struct.std::__1::__hash_node_base"***
  store %"struct.std::__1::__hash_node_base"** %5, %"struct.std::__1::__hash_node_base"*** %14, align 8
  %15 = shl i64 %9, 3
  store i64 %15, i64* %11, align 8
  store i64 8, i64* %12, align 8
  %16 = bitcast i8* %13 to i16*
  store i16 1280, i16* %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %18 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %17, align 8
  %19 = bitcast %"class.marl::Allocator"* %18 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %20 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %20, i64 3
  %22 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %21, align 8
  call void %22(%"class.marl::Allocator"* %18, %"struct.marl::Allocation"* nonnull dereferenceable(32) %3) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #10
  br label %23

23:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: optsize
declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #8

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @_ZNSt3__112__hash_tableIN4marl6Thread4CoreEN12_GLOBAL__N_110CoreHasherENS_8equal_toIS3_EENS1_12StlAllocatorIS3_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.marl::Allocation", align 8
  %4 = alloca %"struct.marl::Allocation::Request", align 8
  %5 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %7 = icmp eq i64 %1, 0
  br i1 %7, label %115, label %8

8:                                                ; preds = %2
  %9 = bitcast %"struct.marl::Allocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false) #10
  %11 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %10, align 8
  %12 = bitcast %"struct.marl::Allocation::Request"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #10
  %13 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 0
  %14 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false) #10, !alias.scope !9
  %15 = shl i64 %1, 3
  %16 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %4, i64 0, i32 2
  %17 = bitcast i8* %16 to i16*
  store i16 1280, i16* %17, align 8, !alias.scope !9
  store i64 %15, i64* %13, align 8, !alias.scope !9
  store i64 8, i64* %14, align 8, !alias.scope !9
  %18 = bitcast %"class.marl::Allocator"* %11 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  %19 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %19, i64 2
  %21 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %20, align 8
  call void %21(%"struct.marl::Allocation"* nonnull sret %3, %"class.marl::Allocator"* %11, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %4) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #10
  %22 = bitcast %"struct.marl::Allocation"* %3 to %"struct.std::__1::__hash_node_base"***
  %23 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %22, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #10
  call void @_ZNSt3__110unique_ptrIA_PNS_16__hash_node_baseIPNS_11__hash_nodeIN4marl6Thread4CoreEPvEEEENS_25__bucket_list_deallocatorINS3_12StlAllocatorISA_EEEEE5resetIPSA_EENS_9enable_ifIXsr28_CheckArrayPointerConversionIT_EE5valueEvE4typeESK_(%"class.std::__1::unique_ptr"* %5, %"struct.std::__1::__hash_node_base"** %23) #18
  %24 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %6, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %31

26:                                               ; preds = %31
  %27 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %27, i64 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base"* %29, null
  br i1 %30, label %117, label %37

31:                                               ; preds = %31, %8
  %32 = phi i64 [ 0, %8 ], [ %35, %31 ]
  %33 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %25, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %33, i64 %32
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %34, align 8
  %35 = add nuw i64 %32, 1
  %36 = icmp eq i64 %35, %1
  br i1 %36, label %26, label %31

37:                                               ; preds = %26
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %29, i64 1
  %39 = bitcast %"struct.std::__1::__hash_node_base"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = call i64 @llvm.ctpop.i64(i64 %1) #10, !range !2
  %42 = icmp ugt i64 %41, 1
  br i1 %42, label %46, label %43

43:                                               ; preds = %37
  %44 = add i64 %1, -1
  %45 = and i64 %40, %44
  br label %50

46:                                               ; preds = %37
  %47 = icmp ult i64 %40, %1
  br i1 %47, label %50, label %48

48:                                               ; preds = %46
  %49 = urem i64 %40, %1
  br label %50

50:                                               ; preds = %43, %46, %48
  %51 = phi i64 [ %45, %43 ], [ %49, %48 ], [ %40, %46 ]
  %52 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %52, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %53, i64 %51
  store %"struct.std::__1::__hash_node_base"* %27, %"struct.std::__1::__hash_node_base"** %54, align 8
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %29, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base"* %56, null
  br i1 %57, label %117, label %58

58:                                               ; preds = %50
  %59 = add i64 %1, -1
  br label %60

60:                                               ; preds = %58, %109
  %61 = phi %"struct.std::__1::__hash_node_base"* [ %56, %58 ], [ %113, %109 ]
  %62 = phi i64 [ %51, %58 ], [ %111, %109 ]
  %63 = phi %"struct.std::__1::__hash_node_base"* [ %29, %58 ], [ %110, %109 ]
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %61, i64 1
  %65 = bitcast %"struct.std::__1::__hash_node_base"* %64 to i64*
  %66 = load i64, i64* %65, align 8
  br i1 %42, label %69, label %67

67:                                               ; preds = %60
  %68 = and i64 %66, %59
  br label %73

69:                                               ; preds = %60
  %70 = icmp ult i64 %66, %1
  br i1 %70, label %73, label %71

71:                                               ; preds = %69
  %72 = urem i64 %66, %1
  br label %73

73:                                               ; preds = %67, %69, %71
  %74 = phi i64 [ %68, %67 ], [ %72, %71 ], [ %66, %69 ]
  %75 = icmp eq i64 %74, %62
  br i1 %75, label %109, label %76

76:                                               ; preds = %73
  %77 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %52, align 8
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %77, i64 %74
  %79 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %78, align 8
  %80 = icmp eq %"struct.std::__1::__hash_node_base"* %79, null
  br i1 %80, label %84, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %61, i64 2
  %83 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i16*
  br label %85

84:                                               ; preds = %76
  store %"struct.std::__1::__hash_node_base"* %63, %"struct.std::__1::__hash_node_base"** %78, align 8
  br label %109

85:                                               ; preds = %81, %90
  %86 = phi %"struct.std::__1::__hash_node_base"* [ %88, %90 ], [ %61, %81 ]
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %86, i64 0, i32 0
  %88 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %87, align 8
  %89 = icmp eq %"struct.std::__1::__hash_node_base"* %88, null
  br i1 %89, label %96, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %88, i64 2
  %92 = load i16, i16* %83, align 2
  %93 = bitcast %"struct.std::__1::__hash_node_base"* %91 to i16*
  %94 = load i16, i16* %93, align 2
  %95 = icmp eq i16 %92, %94
  br i1 %95, label %85, label %96

96:                                               ; preds = %85, %90
  %97 = ptrtoint %"struct.std::__1::__hash_node_base"* %88 to i64
  %98 = bitcast %"struct.std::__1::__hash_node_base"* %86 to i64*
  %99 = bitcast %"struct.std::__1::__hash_node_base"* %63 to i64*
  store i64 %97, i64* %99, align 8
  %100 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %52, align 8
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %100, i64 %74
  %102 = bitcast %"struct.std::__1::__hash_node_base"** %101 to i64**
  %103 = load i64*, i64** %102, align 8
  %104 = load i64, i64* %103, align 8
  store i64 %104, i64* %98, align 8
  %105 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %52, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %105, i64 %74
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %61, %"struct.std::__1::__hash_node_base"** %108, align 8
  br label %109

109:                                              ; preds = %73, %96, %84
  %110 = phi %"struct.std::__1::__hash_node_base"* [ %61, %84 ], [ %63, %96 ], [ %61, %73 ]
  %111 = phi i64 [ %74, %84 ], [ %62, %96 ], [ %62, %73 ]
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %110, i64 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %112, align 8
  %114 = icmp eq %"struct.std::__1::__hash_node_base"* %113, null
  br i1 %114, label %117, label %60

115:                                              ; preds = %2
  tail call void @_ZNSt3__110unique_ptrIA_PNS_16__hash_node_baseIPNS_11__hash_nodeIN4marl6Thread4CoreEPvEEEENS_25__bucket_list_deallocatorINS3_12StlAllocatorISA_EEEEE5resetIPSA_EENS_9enable_ifIXsr28_CheckArrayPointerConversionIT_EE5valueEvE4typeESK_(%"class.std::__1::unique_ptr"* %5, %"struct.std::__1::__hash_node_base"** null) #18
  %116 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %6, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %116, align 8
  br label %117

117:                                              ; preds = %109, %50, %26, %115
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIA_PNS_16__hash_node_baseIPNS_11__hash_nodeIN4marl6Thread4CoreEPvEEEENS_25__bucket_list_deallocatorINS3_12StlAllocatorISA_EEEEE5resetIPSA_EENS_9enable_ifIXsr28_CheckArrayPointerConversionIT_EE5valueEvE4typeESK_(%"class.std::__1::unique_ptr"*, %"struct.std::__1::__hash_node_base"**) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.marl::Allocation", align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %4, align 8
  store %"struct.std::__1::__hash_node_base"** %1, %"struct.std::__1::__hash_node_base"*** %4, align 8
  %6 = icmp eq %"struct.std::__1::__hash_node_base"** %5, null
  br i1 %6, label %23, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"struct.marl::Allocation"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 1
  %13 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %3, i64 0, i32 1, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false) #10
  %14 = bitcast %"struct.marl::Allocation"* %3 to %"struct.std::__1::__hash_node_base"***
  store %"struct.std::__1::__hash_node_base"** %5, %"struct.std::__1::__hash_node_base"*** %14, align 8
  %15 = shl i64 %9, 3
  store i64 %15, i64* %11, align 8
  store i64 8, i64* %12, align 8
  %16 = bitcast i8* %13 to i16*
  store i16 1280, i16* %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %18 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %17, align 8
  %19 = bitcast %"class.marl::Allocator"* %18 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %20 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %20, i64 3
  %22 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %21, align 8
  call void %22(%"class.marl::Allocator"* %18, %"struct.marl::Allocation"* nonnull dereferenceable(32) %3) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #10
  br label %23

23:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #17

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #17

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRNS_6__lessIN4marl6Thread4CoreES4_EEPS4_EEvT0_S8_T_(%"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"*, %"struct.std::__1::__less.55"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  br label %4

4:                                                ; preds = %169, %3
  %5 = phi %"struct.marl::Thread::Core"* [ %1, %3 ], [ %151, %169 ]
  %6 = phi %"struct.marl::Thread::Core"* [ %0, %3 ], [ %14, %169 ]
  %7 = ptrtoint %"struct.marl::Thread::Core"* %5 to i64
  %8 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %5, i64 -1
  %9 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = ptrtoint %"struct.marl::Thread::Core"* %5 to i64
  br label %11

11:                                               ; preds = %178, %4
  %12 = phi %"struct.marl::Thread::Core"* [ %6, %4 ], [ %179, %178 ]
  br label %13

13:                                               ; preds = %103, %11
  %14 = phi %"struct.marl::Thread::Core"* [ %12, %11 ], [ %90, %103 ]
  %15 = ptrtoint %"struct.marl::Thread::Core"* %14 to i64
  %16 = sub i64 %7, %15
  %17 = ashr exact i64 %16, 1
  switch i64 %17, label %40 [
    i64 0, label %182
    i64 1, label %182
    i64 2, label %18
    i64 3, label %25
    i64 4, label %29
    i64 5, label %34
  ]

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %5, i64 -1, i32 0, i32 0, i32 0
  %20 = load i16, i16* %19, align 2
  %21 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %14, i64 0, i32 0, i32 0, i32 0
  %22 = load i16, i16* %21, align 2
  %23 = icmp ult i16 %20, %22
  br i1 %23, label %24, label %182

24:                                               ; preds = %18
  store i16 %20, i16* %21, align 2
  store i16 %22, i16* %19, align 2
  br label %182

25:                                               ; preds = %13
  %26 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %14, i64 1
  %27 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %5, i64 -1
  %28 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessIN4marl6Thread4CoreES4_EEPS4_EEjT0_S8_S8_T_(%"struct.marl::Thread::Core"* %14, %"struct.marl::Thread::Core"* %26, %"struct.marl::Thread::Core"* %27, %"struct.std::__1::__less.55"* dereferenceable(1) %2) #21
  br label %182

29:                                               ; preds = %13
  %30 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %14, i64 1
  %31 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %14, i64 2
  %32 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %5, i64 -1
  %33 = tail call i32 @_ZNSt3__17__sort4IRNS_6__lessIN4marl6Thread4CoreES4_EEPS4_EEjT0_S8_S8_S8_T_(%"struct.marl::Thread::Core"* %14, %"struct.marl::Thread::Core"* %30, %"struct.marl::Thread::Core"* %31, %"struct.marl::Thread::Core"* %32, %"struct.std::__1::__less.55"* dereferenceable(1) %2) #21
  br label %182

34:                                               ; preds = %13
  %35 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %14, i64 1
  %36 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %14, i64 2
  %37 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %14, i64 3
  %38 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %5, i64 -1
  %39 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessIN4marl6Thread4CoreES4_EEPS4_EEjT0_S8_S8_S8_S8_T_(%"struct.marl::Thread::Core"* %14, %"struct.marl::Thread::Core"* %35, %"struct.marl::Thread::Core"* %36, %"struct.marl::Thread::Core"* %37, %"struct.marl::Thread::Core"* %38, %"struct.std::__1::__less.55"* dereferenceable(1) %2) #21
  br label %182

40:                                               ; preds = %13
  %41 = icmp slt i64 %16, 62
  br i1 %41, label %42, label %43

42:                                               ; preds = %40
  tail call void @_ZNSt3__118__insertion_sort_3IRNS_6__lessIN4marl6Thread4CoreES4_EEPS4_EEvT0_S8_T_(%"struct.marl::Thread::Core"* %14, %"struct.marl::Thread::Core"* %5, %"struct.std::__1::__less.55"* dereferenceable(1) %2) #21
  br label %182

43:                                               ; preds = %40
  %44 = icmp sgt i64 %16, 1998
  %45 = sdiv i64 %17, 2
  %46 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %14, i64 %45
  br i1 %44, label %47, label %52

47:                                               ; preds = %43
  %48 = sdiv i64 %17, 4
  %49 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %14, i64 %48
  %50 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %46, i64 %48
  %51 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessIN4marl6Thread4CoreES4_EEPS4_EEjT0_S8_S8_S8_S8_T_(%"struct.marl::Thread::Core"* %14, %"struct.marl::Thread::Core"* %49, %"struct.marl::Thread::Core"* %46, %"struct.marl::Thread::Core"* %50, %"struct.marl::Thread::Core"* %8, %"struct.std::__1::__less.55"* dereferenceable(1) %2) #21
  br label %54

52:                                               ; preds = %43
  %53 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessIN4marl6Thread4CoreES4_EEPS4_EEjT0_S8_S8_T_(%"struct.marl::Thread::Core"* %14, %"struct.marl::Thread::Core"* %46, %"struct.marl::Thread::Core"* %8, %"struct.std::__1::__less.55"* dereferenceable(1) %2) #21
  br label %54

54:                                               ; preds = %52, %47
  %55 = phi i32 [ %51, %47 ], [ %53, %52 ]
  %56 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %14, i64 0, i32 0, i32 0, i32 0
  %57 = load i16, i16* %56, align 2
  %58 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %46, i64 0, i32 0, i32 0, i32 0
  %59 = load i16, i16* %58, align 2
  %60 = icmp ult i16 %57, %59
  br i1 %60, label %114, label %61

61:                                               ; preds = %54, %107
  %62 = phi %"struct.marl::Thread::Core"* [ %63, %107 ], [ %8, %54 ]
  %63 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %62, i64 -1
  %64 = icmp eq %"struct.marl::Thread::Core"* %14, %63
  br i1 %64, label %65, label %107

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %14, i64 1
  %67 = load i16, i16* %9, align 2
  %68 = icmp ult i16 %57, %67
  br i1 %68, label %82, label %69

69:                                               ; preds = %65
  %70 = icmp eq %"struct.marl::Thread::Core"* %66, %8
  br i1 %70, label %182, label %71

71:                                               ; preds = %69, %79
  %72 = phi %"struct.marl::Thread::Core"* [ %80, %79 ], [ %66, %69 ]
  %73 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load i16, i16* %73, align 2
  %75 = icmp ult i16 %57, %74
  br i1 %75, label %76, label %79

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %72, i64 0, i32 0, i32 0, i32 0
  store i16 %67, i16* %77, align 2
  store i16 %74, i16* %9, align 2
  %78 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %72, i64 1
  br label %82

79:                                               ; preds = %71
  %80 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %72, i64 1
  %81 = icmp eq %"struct.marl::Thread::Core"* %80, %8
  br i1 %81, label %182, label %71

82:                                               ; preds = %76, %65
  %83 = phi %"struct.marl::Thread::Core"* [ %66, %65 ], [ %78, %76 ]
  %84 = icmp eq %"struct.marl::Thread::Core"* %83, %8
  br i1 %84, label %182, label %85

85:                                               ; preds = %82, %105
  %86 = phi %"struct.marl::Thread::Core"* [ %94, %105 ], [ %83, %82 ]
  %87 = phi %"struct.marl::Thread::Core"* [ %99, %105 ], [ %8, %82 ]
  %88 = load i16, i16* %56, align 2
  br label %89

89:                                               ; preds = %89, %85
  %90 = phi %"struct.marl::Thread::Core"* [ %86, %85 ], [ %94, %89 ]
  %91 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %90, i64 0, i32 0, i32 0, i32 0
  %92 = load i16, i16* %91, align 2
  %93 = icmp ult i16 %88, %92
  %94 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %90, i64 1
  br i1 %93, label %95, label %89

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %90, i64 0, i32 0, i32 0, i32 0
  br label %97

97:                                               ; preds = %95, %97
  %98 = phi %"struct.marl::Thread::Core"* [ %99, %97 ], [ %87, %95 ]
  %99 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %98, i64 -1
  %100 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %99, i64 0, i32 0, i32 0, i32 0
  %101 = load i16, i16* %100, align 2
  %102 = icmp ult i16 %88, %101
  br i1 %102, label %97, label %103

103:                                              ; preds = %97
  %104 = icmp ult %"struct.marl::Thread::Core"* %90, %99
  br i1 %104, label %105, label %13

105:                                              ; preds = %103
  %106 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %99, i64 0, i32 0, i32 0, i32 0
  store i16 %101, i16* %96, align 2
  store i16 %92, i16* %106, align 2
  br label %85

107:                                              ; preds = %61
  %108 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %63, i64 0, i32 0, i32 0, i32 0
  %109 = load i16, i16* %108, align 2
  %110 = icmp ult i16 %109, %59
  br i1 %110, label %111, label %61

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %63, i64 0, i32 0, i32 0, i32 0
  store i16 %109, i16* %56, align 2
  store i16 %57, i16* %112, align 2
  %113 = add i32 %55, 1
  br label %114

114:                                              ; preds = %54, %111
  %115 = phi i32 [ %113, %111 ], [ %55, %54 ]
  %116 = phi %"struct.marl::Thread::Core"* [ %63, %111 ], [ %8, %54 ]
  %117 = ptrtoint %"struct.marl::Thread::Core"* %14 to i64
  %118 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %14, i64 1
  %119 = icmp ult %"struct.marl::Thread::Core"* %118, %116
  br i1 %119, label %120, label %148

120:                                              ; preds = %114, %143
  %121 = phi %"struct.marl::Thread::Core"* [ %147, %143 ], [ %46, %114 ]
  %122 = phi i32 [ %145, %143 ], [ %115, %114 ]
  %123 = phi %"struct.marl::Thread::Core"* [ %132, %143 ], [ %118, %114 ]
  %124 = phi %"struct.marl::Thread::Core"* [ %137, %143 ], [ %116, %114 ]
  %125 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %121, i64 0, i32 0, i32 0, i32 0
  %126 = load i16, i16* %125, align 2
  br label %127

127:                                              ; preds = %127, %120
  %128 = phi %"struct.marl::Thread::Core"* [ %123, %120 ], [ %132, %127 ]
  %129 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %128, i64 0, i32 0, i32 0, i32 0
  %130 = load i16, i16* %129, align 2
  %131 = icmp ult i16 %130, %126
  %132 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %128, i64 1
  br i1 %131, label %127, label %133

133:                                              ; preds = %127
  %134 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %128, i64 0, i32 0, i32 0, i32 0
  br label %135

135:                                              ; preds = %133, %135
  %136 = phi %"struct.marl::Thread::Core"* [ %137, %135 ], [ %124, %133 ]
  %137 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %136, i64 -1
  %138 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %137, i64 0, i32 0, i32 0, i32 0
  %139 = load i16, i16* %138, align 2
  %140 = icmp ult i16 %139, %126
  br i1 %140, label %141, label %135

141:                                              ; preds = %135
  %142 = icmp ugt %"struct.marl::Thread::Core"* %128, %137
  br i1 %142, label %148, label %143

143:                                              ; preds = %141
  %144 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %137, i64 0, i32 0, i32 0, i32 0
  store i16 %139, i16* %134, align 2
  store i16 %130, i16* %144, align 2
  %145 = add i32 %122, 1
  %146 = icmp eq %"struct.marl::Thread::Core"* %121, %128
  %147 = select i1 %146, %"struct.marl::Thread::Core"* %137, %"struct.marl::Thread::Core"* %121
  br label %120

148:                                              ; preds = %141, %114
  %149 = phi %"struct.marl::Thread::Core"* [ %46, %114 ], [ %121, %141 ]
  %150 = phi i32 [ %115, %114 ], [ %122, %141 ]
  %151 = phi %"struct.marl::Thread::Core"* [ %118, %114 ], [ %128, %141 ]
  %152 = icmp eq %"struct.marl::Thread::Core"* %151, %149
  br i1 %152, label %161, label %153

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %149, i64 0, i32 0, i32 0, i32 0
  %155 = load i16, i16* %154, align 2
  %156 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %151, i64 0, i32 0, i32 0, i32 0
  %157 = load i16, i16* %156, align 2
  %158 = icmp ult i16 %155, %157
  br i1 %158, label %159, label %161

159:                                              ; preds = %153
  store i16 %155, i16* %156, align 2
  store i16 %157, i16* %154, align 2
  %160 = add i32 %150, 1
  br label %161

161:                                              ; preds = %148, %159, %153
  %162 = phi i32 [ %160, %159 ], [ %150, %153 ], [ %150, %148 ]
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %171

164:                                              ; preds = %161
  %165 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN4marl6Thread4CoreES4_EEPS4_EEbT0_S8_T_(%"struct.marl::Thread::Core"* %14, %"struct.marl::Thread::Core"* %151, %"struct.std::__1::__less.55"* dereferenceable(1) %2) #21
  %166 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %151, i64 1
  %167 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN4marl6Thread4CoreES4_EEPS4_EEbT0_S8_T_(%"struct.marl::Thread::Core"* %166, %"struct.marl::Thread::Core"* %5, %"struct.std::__1::__less.55"* dereferenceable(1) %2) #21
  br i1 %167, label %168, label %170

168:                                              ; preds = %164
  br i1 %165, label %182, label %169

169:                                              ; preds = %168, %180
  br label %4

170:                                              ; preds = %164
  br i1 %165, label %178, label %171

171:                                              ; preds = %170, %161
  %172 = ptrtoint %"struct.marl::Thread::Core"* %151 to i64
  %173 = sub i64 %172, %117
  %174 = sub i64 %10, %172
  %175 = icmp slt i64 %173, %174
  br i1 %175, label %176, label %180

176:                                              ; preds = %171
  tail call void @_ZNSt3__16__sortIRNS_6__lessIN4marl6Thread4CoreES4_EEPS4_EEvT0_S8_T_(%"struct.marl::Thread::Core"* %14, %"struct.marl::Thread::Core"* %151, %"struct.std::__1::__less.55"* dereferenceable(1) %2) #21
  %177 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %151, i64 1
  br label %178

178:                                              ; preds = %176, %170
  %179 = phi %"struct.marl::Thread::Core"* [ %166, %170 ], [ %177, %176 ]
  br label %11

180:                                              ; preds = %171
  %181 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %151, i64 1
  tail call void @_ZNSt3__16__sortIRNS_6__lessIN4marl6Thread4CoreES4_EEPS4_EEvT0_S8_T_(%"struct.marl::Thread::Core"* %181, %"struct.marl::Thread::Core"* %5, %"struct.std::__1::__less.55"* dereferenceable(1) %2) #21
  br label %169

182:                                              ; preds = %168, %82, %13, %13, %69, %79, %18, %24, %25, %29, %34, %42
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort3IRNS_6__lessIN4marl6Thread4CoreES4_EEPS4_EEjT0_S8_S8_T_(%"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"*, %"struct.std::__1::__less.55"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %5 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load i16, i16* %5, align 2
  %7 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load i16, i16* %7, align 2
  %9 = icmp ult i16 %6, %8
  %10 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = load i16, i16* %10, align 2
  %12 = icmp ult i16 %11, %6
  br i1 %9, label %19, label %13

13:                                               ; preds = %4
  br i1 %12, label %14, label %25

14:                                               ; preds = %13
  store i16 %11, i16* %5, align 2
  store i16 %6, i16* %10, align 2
  %15 = load i16, i16* %5, align 2
  %16 = load i16, i16* %7, align 2
  %17 = icmp ult i16 %15, %16
  br i1 %17, label %18, label %25

18:                                               ; preds = %14
  store i16 %15, i16* %7, align 2
  store i16 %16, i16* %5, align 2
  br label %25

19:                                               ; preds = %4
  br i1 %12, label %20, label %21

20:                                               ; preds = %19
  store i16 %11, i16* %7, align 2
  store i16 %8, i16* %10, align 2
  br label %25

21:                                               ; preds = %19
  store i16 %6, i16* %7, align 2
  store i16 %8, i16* %5, align 2
  %22 = load i16, i16* %10, align 2
  %23 = icmp ult i16 %22, %8
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  store i16 %22, i16* %5, align 2
  store i16 %8, i16* %10, align 2
  br label %25

25:                                               ; preds = %21, %24, %14, %18, %13, %20
  %26 = phi i32 [ 1, %20 ], [ 0, %13 ], [ 2, %18 ], [ 1, %14 ], [ 2, %24 ], [ 1, %21 ]
  ret i32 %26
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRNS_6__lessIN4marl6Thread4CoreES4_EEPS4_EEjT0_S8_S8_S8_T_(%"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"*, %"struct.std::__1::__less.55"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %6 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessIN4marl6Thread4CoreES4_EEPS4_EEjT0_S8_S8_T_(%"struct.marl::Thread::Core"* %0, %"struct.marl::Thread::Core"* %1, %"struct.marl::Thread::Core"* %2, %"struct.std::__1::__less.55"* dereferenceable(1) %4) #21
  %7 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %3, i64 0, i32 0, i32 0, i32 0
  %8 = load i16, i16* %7, align 2
  %9 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %2, i64 0, i32 0, i32 0, i32 0
  %10 = load i16, i16* %9, align 2
  %11 = icmp ult i16 %8, %10
  br i1 %11, label %12, label %26

12:                                               ; preds = %5
  store i16 %8, i16* %9, align 2
  store i16 %10, i16* %7, align 2
  %13 = add i32 %6, 1
  %14 = load i16, i16* %9, align 2
  %15 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %1, i64 0, i32 0, i32 0, i32 0
  %16 = load i16, i16* %15, align 2
  %17 = icmp ult i16 %14, %16
  br i1 %17, label %18, label %26

18:                                               ; preds = %12
  store i16 %14, i16* %15, align 2
  store i16 %16, i16* %9, align 2
  %19 = add i32 %6, 2
  %20 = load i16, i16* %15, align 2
  %21 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = load i16, i16* %21, align 2
  %23 = icmp ult i16 %20, %22
  br i1 %23, label %24, label %26

24:                                               ; preds = %18
  store i16 %20, i16* %21, align 2
  store i16 %22, i16* %15, align 2
  %25 = add i32 %6, 3
  br label %26

26:                                               ; preds = %12, %24, %18, %5
  %27 = phi i32 [ %25, %24 ], [ %19, %18 ], [ %13, %12 ], [ %6, %5 ]
  ret i32 %27
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRNS_6__lessIN4marl6Thread4CoreES4_EEPS4_EEjT0_S8_S8_S8_S8_T_(%"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"*, %"struct.std::__1::__less.55"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %7 = tail call i32 @_ZNSt3__17__sort4IRNS_6__lessIN4marl6Thread4CoreES4_EEPS4_EEjT0_S8_S8_S8_T_(%"struct.marl::Thread::Core"* %0, %"struct.marl::Thread::Core"* %1, %"struct.marl::Thread::Core"* %2, %"struct.marl::Thread::Core"* %3, %"struct.std::__1::__less.55"* dereferenceable(1) %5) #21
  %8 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %4, i64 0, i32 0, i32 0, i32 0
  %9 = load i16, i16* %8, align 2
  %10 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %3, i64 0, i32 0, i32 0, i32 0
  %11 = load i16, i16* %10, align 2
  %12 = icmp ult i16 %9, %11
  br i1 %12, label %13, label %33

13:                                               ; preds = %6
  store i16 %9, i16* %10, align 2
  store i16 %11, i16* %8, align 2
  %14 = add i32 %7, 1
  %15 = load i16, i16* %10, align 2
  %16 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %2, i64 0, i32 0, i32 0, i32 0
  %17 = load i16, i16* %16, align 2
  %18 = icmp ult i16 %15, %17
  br i1 %18, label %19, label %33

19:                                               ; preds = %13
  store i16 %15, i16* %16, align 2
  store i16 %17, i16* %10, align 2
  %20 = add i32 %7, 2
  %21 = load i16, i16* %16, align 2
  %22 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %1, i64 0, i32 0, i32 0, i32 0
  %23 = load i16, i16* %22, align 2
  %24 = icmp ult i16 %21, %23
  br i1 %24, label %25, label %33

25:                                               ; preds = %19
  store i16 %21, i16* %22, align 2
  store i16 %23, i16* %16, align 2
  %26 = add i32 %7, 3
  %27 = load i16, i16* %22, align 2
  %28 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %0, i64 0, i32 0, i32 0, i32 0
  %29 = load i16, i16* %28, align 2
  %30 = icmp ult i16 %27, %29
  br i1 %30, label %31, label %33

31:                                               ; preds = %25
  store i16 %27, i16* %28, align 2
  store i16 %29, i16* %22, align 2
  %32 = add i32 %7, 4
  br label %33

33:                                               ; preds = %13, %25, %31, %19, %6
  %34 = phi i32 [ %32, %31 ], [ %26, %25 ], [ %20, %19 ], [ %14, %13 ], [ %7, %6 ]
  ret i32 %34
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRNS_6__lessIN4marl6Thread4CoreES4_EEPS4_EEvT0_S8_T_(%"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"*, %"struct.std::__1::__less.55"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %0, i64 2
  %5 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %0, i64 1
  %6 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessIN4marl6Thread4CoreES4_EEPS4_EEjT0_S8_S8_T_(%"struct.marl::Thread::Core"* %0, %"struct.marl::Thread::Core"* %5, %"struct.marl::Thread::Core"* %4, %"struct.std::__1::__less.55"* dereferenceable(1) %2) #21
  %7 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %0, i64 3
  %8 = icmp eq %"struct.marl::Thread::Core"* %7, %1
  br i1 %8, label %9, label %10

9:                                                ; preds = %32, %3
  ret void

10:                                               ; preds = %3, %32
  %11 = phi %"struct.marl::Thread::Core"* [ %33, %32 ], [ %7, %3 ]
  %12 = phi %"struct.marl::Thread::Core"* [ %11, %32 ], [ %4, %3 ]
  %13 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %11, i64 0, i32 0, i32 0, i32 0
  %14 = load i16, i16* %13, align 2
  %15 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %12, i64 0, i32 0, i32 0, i32 0
  %16 = load i16, i16* %15, align 2
  %17 = icmp ult i16 %14, %16
  br i1 %17, label %18, label %32

18:                                               ; preds = %10, %24
  %19 = phi i16 [ %27, %24 ], [ %16, %10 ]
  %20 = phi %"struct.marl::Thread::Core"* [ %21, %24 ], [ %11, %10 ]
  %21 = phi %"struct.marl::Thread::Core"* [ %25, %24 ], [ %12, %10 ]
  %22 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %20, i64 0, i32 0, i32 0, i32 0
  store i16 %19, i16* %22, align 2
  %23 = icmp eq %"struct.marl::Thread::Core"* %21, %0
  br i1 %23, label %29, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %21, i64 -1
  %26 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load i16, i16* %26, align 2
  %28 = icmp ult i16 %14, %27
  br i1 %28, label %18, label %29

29:                                               ; preds = %18, %24
  %30 = phi %"struct.marl::Thread::Core"* [ %0, %18 ], [ %21, %24 ]
  %31 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %30, i64 0, i32 0, i32 0, i32 0
  store i16 %14, i16* %31, align 2
  br label %32

32:                                               ; preds = %29, %10
  %33 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %11, i64 1
  %34 = icmp eq %"struct.marl::Thread::Core"* %33, %1
  br i1 %34, label %9, label %10
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN4marl6Thread4CoreES4_EEPS4_EEbT0_S8_T_(%"struct.marl::Thread::Core"*, %"struct.marl::Thread::Core"*, %"struct.std::__1::__less.55"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %4 = ptrtoint %"struct.marl::Thread::Core"* %1 to i64
  %5 = ptrtoint %"struct.marl::Thread::Core"* %0 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 1
  switch i64 %7, label %30 [
    i64 0, label %68
    i64 1, label %68
    i64 2, label %8
    i64 3, label %15
    i64 4, label %19
    i64 5, label %24
  ]

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %1, i64 -1, i32 0, i32 0, i32 0
  %10 = load i16, i16* %9, align 2
  %11 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load i16, i16* %11, align 2
  %13 = icmp ult i16 %10, %12
  br i1 %13, label %14, label %68

14:                                               ; preds = %8
  store i16 %10, i16* %11, align 2
  store i16 %12, i16* %9, align 2
  br label %68

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %0, i64 1
  %17 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %1, i64 -1
  %18 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessIN4marl6Thread4CoreES4_EEPS4_EEjT0_S8_S8_T_(%"struct.marl::Thread::Core"* %0, %"struct.marl::Thread::Core"* %16, %"struct.marl::Thread::Core"* %17, %"struct.std::__1::__less.55"* dereferenceable(1) %2) #21
  br label %68

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %0, i64 1
  %21 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %0, i64 2
  %22 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %1, i64 -1
  %23 = tail call i32 @_ZNSt3__17__sort4IRNS_6__lessIN4marl6Thread4CoreES4_EEPS4_EEjT0_S8_S8_S8_T_(%"struct.marl::Thread::Core"* %0, %"struct.marl::Thread::Core"* %20, %"struct.marl::Thread::Core"* %21, %"struct.marl::Thread::Core"* %22, %"struct.std::__1::__less.55"* dereferenceable(1) %2) #21
  br label %68

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %0, i64 1
  %26 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %0, i64 2
  %27 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %0, i64 3
  %28 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %1, i64 -1
  %29 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessIN4marl6Thread4CoreES4_EEPS4_EEjT0_S8_S8_S8_S8_T_(%"struct.marl::Thread::Core"* %0, %"struct.marl::Thread::Core"* %25, %"struct.marl::Thread::Core"* %26, %"struct.marl::Thread::Core"* %27, %"struct.marl::Thread::Core"* %28, %"struct.std::__1::__less.55"* dereferenceable(1) %2) #21
  br label %68

30:                                               ; preds = %3
  %31 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %0, i64 2
  %32 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %0, i64 1
  %33 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessIN4marl6Thread4CoreES4_EEPS4_EEjT0_S8_S8_T_(%"struct.marl::Thread::Core"* %0, %"struct.marl::Thread::Core"* %32, %"struct.marl::Thread::Core"* %31, %"struct.std::__1::__less.55"* dereferenceable(1) %2) #21
  %34 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %0, i64 3
  %35 = icmp eq %"struct.marl::Thread::Core"* %34, %1
  br i1 %35, label %68, label %36

36:                                               ; preds = %30, %61
  %37 = phi %"struct.marl::Thread::Core"* [ %63, %61 ], [ %34, %30 ]
  %38 = phi i32 [ %62, %61 ], [ 0, %30 ]
  %39 = phi %"struct.marl::Thread::Core"* [ %37, %61 ], [ %31, %30 ]
  %40 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %37, i64 0, i32 0, i32 0, i32 0
  %41 = load i16, i16* %40, align 2
  %42 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %39, i64 0, i32 0, i32 0, i32 0
  %43 = load i16, i16* %42, align 2
  %44 = icmp ult i16 %41, %43
  br i1 %44, label %45, label %61

45:                                               ; preds = %36, %51
  %46 = phi i16 [ %54, %51 ], [ %43, %36 ]
  %47 = phi %"struct.marl::Thread::Core"* [ %48, %51 ], [ %37, %36 ]
  %48 = phi %"struct.marl::Thread::Core"* [ %52, %51 ], [ %39, %36 ]
  %49 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %47, i64 0, i32 0, i32 0, i32 0
  store i16 %46, i16* %49, align 2
  %50 = icmp eq %"struct.marl::Thread::Core"* %48, %0
  br i1 %50, label %56, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %48, i64 -1
  %53 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %52, i64 0, i32 0, i32 0, i32 0
  %54 = load i16, i16* %53, align 2
  %55 = icmp ult i16 %41, %54
  br i1 %55, label %45, label %56

56:                                               ; preds = %45, %51
  %57 = phi %"struct.marl::Thread::Core"* [ %0, %45 ], [ %48, %51 ]
  %58 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %57, i64 0, i32 0, i32 0, i32 0
  store i16 %41, i16* %58, align 2
  %59 = add i32 %38, 1
  %60 = icmp eq i32 %59, 8
  br i1 %60, label %65, label %61

61:                                               ; preds = %56, %36
  %62 = phi i32 [ %59, %56 ], [ %38, %36 ]
  %63 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %37, i64 1
  %64 = icmp eq %"struct.marl::Thread::Core"* %63, %1
  br i1 %64, label %68, label %36

65:                                               ; preds = %56
  %66 = getelementptr inbounds %"struct.marl::Thread::Core", %"struct.marl::Thread::Core"* %37, i64 1
  %67 = icmp eq %"struct.marl::Thread::Core"* %66, %1
  br label %68

68:                                               ; preds = %61, %65, %30, %8, %14, %3, %3, %24, %19, %15
  %69 = phi i1 [ true, %24 ], [ true, %19 ], [ true, %15 ], [ true, %3 ], [ true, %3 ], [ true, %14 ], [ true, %8 ], [ true, %30 ], [ %67, %65 ], [ true, %61 ]
  ret i1 %69
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #17

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind optsize readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind optsize readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { nofree nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree norecurse nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { inlinehint noreturn nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noreturn optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { inlinehint nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nounwind readnone speculatable }
attributes #18 = { nounwind optsize }
attributes #19 = { nounwind optsize readnone }
attributes #20 = { builtin nounwind optsize }
attributes #21 = { optsize }
attributes #22 = { noreturn nounwind optsize }
attributes #23 = { noreturn optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i64 0, i64 65}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__112__hash_tableIN4marl6Thread4CoreEN12_GLOBAL__N_110CoreHasherENS_8equal_toIS3_EENS1_12StlAllocatorIS3_EEE21__construct_node_hashIRS3_JEEENS_10unique_ptrINS_11__hash_nodeIS3_PvEENS_22__hash_node_destructorINS8_ISG_EEEEEEmOT_DpOT0_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__112__hash_tableIN4marl6Thread4CoreEN12_GLOBAL__N_110CoreHasherENS_8equal_toIS3_EENS1_12StlAllocatorIS3_EEE21__construct_node_hashIRS3_JEEENS_10unique_ptrINS_11__hash_nodeIS3_PvEENS_22__hash_node_destructorINS8_ISG_EEEEEEmOT_DpOT0_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK4marl12StlAllocatorINSt3__111__hash_nodeINS_6Thread4CoreEPvEEE7requestEm: argument 0"}
!8 = distinct !{!8, !"_ZNK4marl12StlAllocatorINSt3__111__hash_nodeINS_6Thread4CoreEPvEEE7requestEm"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK4marl12StlAllocatorIPNSt3__116__hash_node_baseIPNS1_11__hash_nodeINS_6Thread4CoreEPvEEEEE7requestEm: argument 0"}
!11 = distinct !{!11, !"_ZNK4marl12StlAllocatorIPNSt3__116__hash_node_baseIPNS1_11__hash_nodeINS_6Thread4CoreEPvEEEEE7requestEm"}
