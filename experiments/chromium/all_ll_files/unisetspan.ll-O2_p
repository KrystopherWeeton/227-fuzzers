; ModuleID = '../../third_party/icu/source/common/unisetspan.cpp'
source_filename = "../../third_party/icu/source/common/unisetspan.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.icu_69::UnicodeSetStringSpan" = type { [8 x i8], %"class.icu_69::UnicodeSet", %"class.icu_69::UnicodeSet"*, %"class.icu_69::UVector"*, i32*, i8*, i8*, i32, i32, i32, i8, [32 x i32] }
%"class.icu_69::UnicodeSet" = type <{ %"class.icu_69::UnicodeFilter", i32*, i32, i32, i8, [7 x i8], %"class.icu_69::BMPSet"*, i32*, i32, [4 x i8], i16*, i32, [4 x i8], %"class.icu_69::UVector"*, %"class.icu_69::UnicodeSetStringSpan"*, [25 x i32], [4 x i8] }>
%"class.icu_69::UnicodeFilter" = type { %"class.icu_69::UnicodeFunctor", %"class.icu_69::UnicodeMatcher" }
%"class.icu_69::UnicodeFunctor" = type { %"class.icu_69::UObject" }
%"class.icu_69::UObject" = type { i32 (...)** }
%"class.icu_69::UnicodeMatcher" = type { i32 (...)** }
%"class.icu_69::BMPSet" = type opaque
%"class.icu_69::UVector" = type { %"class.icu_69::UObject", i32, i32, %union.UElement*, void (i8*)*, i8 (i8*, i8*)* }
%union.UElement = type { i8* }
%"class.icu_69::OffsetList" = type <{ i8*, i32, i32, i32, [16 x i8], [4 x i8] }>

@.str = private unnamed_addr constant [17 x i8] c" 000000000000\1000\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"\00\00\00\00\00\00\00\00\1E\0F\0F\0F\00\00\00\00\00", align 1

@_ZN6icu_6920UnicodeSetStringSpanC1ERKNS_10UnicodeSetERKNS_7UVectorEj = hidden unnamed_addr alias void (%"class.icu_69::UnicodeSetStringSpan"*, %"class.icu_69::UnicodeSet"*, %"class.icu_69::UVector"*, i32), void (%"class.icu_69::UnicodeSetStringSpan"*, %"class.icu_69::UnicodeSet"*, %"class.icu_69::UVector"*, i32)* @_ZN6icu_6920UnicodeSetStringSpanC2ERKNS_10UnicodeSetERKNS_7UVectorEj
@_ZN6icu_6920UnicodeSetStringSpanC1ERKS0_RKNS_7UVectorE = hidden unnamed_addr alias void (%"class.icu_69::UnicodeSetStringSpan"*, %"class.icu_69::UnicodeSetStringSpan"*, %"class.icu_69::UVector"*), void (%"class.icu_69::UnicodeSetStringSpan"*, %"class.icu_69::UnicodeSetStringSpan"*, %"class.icu_69::UVector"*)* @_ZN6icu_6920UnicodeSetStringSpanC2ERKS0_RKNS_7UVectorE
@_ZN6icu_6920UnicodeSetStringSpanD1Ev = hidden unnamed_addr alias void (%"class.icu_69::UnicodeSetStringSpan"*), void (%"class.icu_69::UnicodeSetStringSpan"*)* @_ZN6icu_6920UnicodeSetStringSpanD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6920UnicodeSetStringSpanC2ERKNS_10UnicodeSetERKNS_7UVectorEj(%"class.icu_69::UnicodeSetStringSpan"*, %"class.icu_69::UnicodeSet"* dereferenceable(200), %"class.icu_69::UVector"* dereferenceable(40), i32) unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 1
  tail call void @_ZN6icu_6910UnicodeSetC1Eii(%"class.icu_69::UnicodeSet"* %11, i32 0, i32 1114111) #6
  %12 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 2
  store %"class.icu_69::UnicodeSet"* null, %"class.icu_69::UnicodeSet"** %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 3
  store %"class.icu_69::UVector"* %2, %"class.icu_69::UVector"** %13, align 8
  %14 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 4
  %15 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 5
  %16 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 6
  %17 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 7
  %18 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 8
  %19 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 9
  %20 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 10
  %21 = icmp eq i32 %3, 63
  %22 = zext i1 %21 to i8
  %23 = bitcast i32** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 36, i1 false)
  store i8 %22, i8* %20, align 4
  %24 = tail call dereferenceable(200) %"class.icu_69::UnicodeSet"* @_ZN6icu_6910UnicodeSet9retainAllERKS0_(%"class.icu_69::UnicodeSet"* %11, %"class.icu_69::UnicodeSet"* dereferenceable(200) %1) #6
  %25 = and i32 %3, 1
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %4
  store %"class.icu_69::UnicodeSet"* %11, %"class.icu_69::UnicodeSet"** %12, align 8
  br label %28

28:                                               ; preds = %27, %4
  %29 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %13, align 8
  %30 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %29, i64 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %33, label %109

33:                                               ; preds = %28
  %34 = and i32 %3, 8
  %35 = icmp eq i32 %34, 0
  %36 = and i32 %3, 4
  %37 = icmp eq i32 %36, 0
  %38 = and i32 %3, 2
  %39 = icmp eq i32 %38, 0
  %40 = bitcast i32* %7 to i8*
  %41 = bitcast i32* %8 to i8*
  br label %42

42:                                               ; preds = %105, %33
  %43 = phi %"class.icu_69::UVector"* [ %29, %33 ], [ %106, %105 ]
  %44 = phi i32 [ 0, %33 ], [ %103, %105 ]
  %45 = phi i8 [ 0, %33 ], [ %102, %105 ]
  %46 = call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %43, i32 %44) #6
  %47 = getelementptr inbounds i8, i8* %46, i64 8
  %48 = bitcast i8* %47 to i16*
  %49 = load i16, i16* %48, align 8
  %50 = sext i16 %49 to i32
  %51 = and i32 %50, 17
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %63

53:                                               ; preds = %42
  %54 = and i32 %50, 2
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds i8, i8* %46, i64 10
  %58 = bitcast i8* %57 to i16*
  br label %63

59:                                               ; preds = %53
  %60 = getelementptr inbounds i8, i8* %46, i64 24
  %61 = bitcast i8* %60 to i16**
  %62 = load i16*, i16** %61, align 8
  br label %63

63:                                               ; preds = %42, %56, %59
  %64 = phi i16* [ %58, %56 ], [ %62, %59 ], [ null, %42 ]
  %65 = icmp slt i16 %49, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %63
  %67 = lshr i16 %49, 5
  %68 = zext i16 %67 to i32
  br label %73

69:                                               ; preds = %63
  %70 = getelementptr inbounds i8, i8* %46, i64 12
  %71 = bitcast i8* %70 to i32*
  %72 = load i32, i32* %71, align 4
  br label %73

73:                                               ; preds = %66, %69
  %74 = phi i32 [ %68, %66 ], [ %72, %69 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %101, label %76

76:                                               ; preds = %73
  %77 = call i32 @_ZNK6icu_6910UnicodeSet4spanEPKDsi17USetSpanCondition(%"class.icu_69::UnicodeSet"* %11, i16* %64, i32 %74, i32 1) #6
  %78 = icmp slt i32 %77, %74
  %79 = select i1 %78, i8 1, i8 %45
  br i1 %35, label %84, label %80

80:                                               ; preds = %76
  %81 = load i32, i32* %18, align 4
  %82 = icmp sgt i32 %74, %81
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  store i32 %74, i32* %18, align 4
  br label %84

84:                                               ; preds = %76, %83, %80
  %85 = xor i1 %78, true
  %86 = and i1 %39, %85
  %87 = or i1 %37, %86
  br i1 %87, label %101, label %88

88:                                               ; preds = %84
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #6
  store i32 0, i32* %7, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %41) #6
  store i32 0, i32* %8, align 4
  %89 = call i8* @u_strToUTF8_69(i8* null, i32 0, i32* nonnull %8, i16* %64, i32 %74, i32* nonnull %7) #6
  %90 = load i32, i32* %7, align 4
  %91 = icmp slt i32 %90, 1
  %92 = icmp eq i32 %90, 15
  %93 = or i1 %91, %92
  %94 = load i32, i32* %8, align 4
  %95 = select i1 %93, i32 %94, i32 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #6
  %96 = load i32, i32* %17, align 8
  %97 = add nsw i32 %96, %95
  store i32 %97, i32* %17, align 8
  %98 = load i32, i32* %19, align 8
  %99 = icmp sgt i32 %95, %98
  br i1 %99, label %100, label %101

100:                                              ; preds = %88
  store i32 %95, i32* %19, align 8
  br label %101

101:                                              ; preds = %84, %100, %88, %73
  %102 = phi i8 [ %45, %73 ], [ %79, %88 ], [ %79, %100 ], [ %79, %84 ]
  %103 = add nuw nsw i32 %44, 1
  %104 = icmp eq i32 %103, %31
  br i1 %104, label %107, label %105

105:                                              ; preds = %101
  %106 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %13, align 8
  br label %42

107:                                              ; preds = %101
  %108 = icmp eq i8 %102, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %28, %107
  store i32 0, i32* %19, align 8
  store i32 0, i32* %18, align 4
  br label %404

110:                                              ; preds = %107
  %111 = load i8, i8* %20, align 4
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %121, label %113

113:                                              ; preds = %110
  %114 = call %"class.icu_69::UnicodeSet"* @_ZN6icu_6910UnicodeSet6freezeEv(%"class.icu_69::UnicodeSet"* %11) #6
  %115 = load i8, i8* %20, align 4
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %121, label %117

117:                                              ; preds = %113
  %118 = shl i32 %31, 3
  %119 = load i32, i32* %17, align 8
  %120 = add nsw i32 %119, %118
  br label %128

121:                                              ; preds = %110, %113
  %122 = and i32 %3, 4
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %128, label %124

124:                                              ; preds = %121
  %125 = load i32, i32* %17, align 8
  %126 = mul i32 %31, 5
  %127 = add i32 %126, %125
  br label %128

128:                                              ; preds = %121, %124, %117
  %129 = phi i8 [ %115, %117 ], [ 0, %124 ], [ 0, %121 ]
  %130 = phi i32 [ %120, %117 ], [ %127, %124 ], [ %31, %121 ]
  %131 = icmp slt i32 %130, 129
  br i1 %131, label %132, label %134

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 11, i64 0
  store i32* %133, i32** %14, align 8
  br label %143

134:                                              ; preds = %128
  %135 = sext i32 %130 to i64
  %136 = call noalias i8* @uprv_malloc_69(i64 %135) #7
  %137 = bitcast i32** %14 to i8**
  store i8* %136, i8** %137, align 8
  %138 = icmp eq i8* %136, null
  br i1 %138, label %142, label %139

139:                                              ; preds = %134
  %140 = bitcast i8* %136 to i32*
  %141 = load i8, i8* %20, align 4
  br label %143

142:                                              ; preds = %134
  store i32 0, i32* %19, align 8
  store i32 0, i32* %18, align 4
  br label %404

143:                                              ; preds = %139, %132
  %144 = phi i32* [ %140, %139 ], [ %133, %132 ]
  %145 = phi i8 [ %141, %139 ], [ %129, %132 ]
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %156, label %147

147:                                              ; preds = %143
  %148 = sext i32 %31 to i64
  %149 = getelementptr inbounds i32, i32* %144, i64 %148
  %150 = bitcast i32* %149 to i8*
  %151 = bitcast i8** %15 to i32**
  store i32* %149, i32** %151, align 8
  %152 = getelementptr inbounds i8, i8* %150, i64 %148
  %153 = getelementptr inbounds i8, i8* %152, i64 %148
  %154 = getelementptr inbounds i8, i8* %153, i64 %148
  %155 = getelementptr inbounds i8, i8* %154, i64 %148
  store i8* %155, i8** %16, align 8
  br label %168

156:                                              ; preds = %143
  %157 = and i32 %3, 4
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %165, label %159

159:                                              ; preds = %156
  %160 = sext i32 %31 to i64
  %161 = getelementptr inbounds i32, i32* %144, i64 %160
  %162 = bitcast i32* %161 to i8*
  %163 = bitcast i8** %15 to i32**
  store i32* %161, i32** %163, align 8
  %164 = getelementptr inbounds i8, i8* %162, i64 %160
  store i8* %164, i8** %16, align 8
  br label %168

165:                                              ; preds = %156
  %166 = bitcast i8** %15 to i32**
  store i32* %144, i32** %166, align 8
  %167 = bitcast i32* %144 to i8*
  br label %168

168:                                              ; preds = %159, %165, %147
  %169 = phi i8* [ %152, %147 ], [ %167, %165 ], [ %162, %159 ]
  %170 = phi i8* [ %153, %147 ], [ %167, %165 ], [ %162, %159 ]
  %171 = phi i8* [ %154, %147 ], [ %167, %165 ], [ %162, %159 ]
  br i1 %32, label %172, label %398

172:                                              ; preds = %168
  %173 = and i32 %3, 4
  %174 = icmp eq i32 %173, 0
  %175 = and i32 %3, 2
  %176 = icmp eq i32 %175, 0
  %177 = bitcast i32* %9 to i8*
  %178 = bitcast i32* %10 to i8*
  %179 = and i32 %3, 8
  %180 = icmp eq i32 %179, 0
  %181 = and i32 %3, 32
  %182 = icmp eq i32 %181, 0
  %183 = and i32 %3, 16
  %184 = icmp eq i32 %183, 0
  %185 = bitcast i32* %5 to i8*
  %186 = bitcast i32* %6 to i8*
  %187 = zext i32 %31 to i64
  br label %188

188:                                              ; preds = %392, %172
  %189 = phi i64 [ 0, %172 ], [ %394, %392 ]
  %190 = phi i32 [ 0, %172 ], [ %393, %392 ]
  %191 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %13, align 8
  %192 = trunc i64 %189 to i32
  %193 = call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %191, i32 %192) #6
  %194 = getelementptr inbounds i8, i8* %193, i64 8
  %195 = bitcast i8* %194 to i16*
  %196 = load i16, i16* %195, align 8
  %197 = sext i16 %196 to i32
  %198 = and i32 %197, 17
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %210

200:                                              ; preds = %188
  %201 = and i32 %197, 2
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %206, label %203

203:                                              ; preds = %200
  %204 = getelementptr inbounds i8, i8* %193, i64 10
  %205 = bitcast i8* %204 to i16*
  br label %210

206:                                              ; preds = %200
  %207 = getelementptr inbounds i8, i8* %193, i64 24
  %208 = bitcast i8* %207 to i16**
  %209 = load i16*, i16** %208, align 8
  br label %210

210:                                              ; preds = %188, %203, %206
  %211 = phi i16* [ %205, %203 ], [ %209, %206 ], [ null, %188 ]
  %212 = icmp slt i16 %196, 0
  br i1 %212, label %216, label %213

213:                                              ; preds = %210
  %214 = lshr i16 %196, 5
  %215 = zext i16 %214 to i32
  br label %220

216:                                              ; preds = %210
  %217 = getelementptr inbounds i8, i8* %193, i64 12
  %218 = bitcast i8* %217 to i32*
  %219 = load i32, i32* %218, align 4
  br label %220

220:                                              ; preds = %213, %216
  %221 = phi i32 [ %215, %213 ], [ %219, %216 ]
  %222 = call i32 @_ZNK6icu_6910UnicodeSet4spanEPKDsi17USetSpanCondition(%"class.icu_69::UnicodeSet"* %11, i16* %211, i32 %221, i32 1) #6
  %223 = icmp slt i32 %222, %221
  %224 = icmp sgt i32 %221, 0
  %225 = and i1 %224, %223
  br i1 %225, label %226, label %360

226:                                              ; preds = %220
  br i1 %180, label %247, label %227

227:                                              ; preds = %226
  br i1 %176, label %243, label %228

228:                                              ; preds = %227
  br i1 %182, label %235, label %229

229:                                              ; preds = %228
  %230 = icmp slt i32 %222, 254
  %231 = select i1 %230, i32 %222, i32 254
  %232 = trunc i32 %231 to i8
  %233 = load i8*, i8** %15, align 8
  %234 = getelementptr inbounds i8, i8* %233, i64 %189
  store i8 %232, i8* %234, align 1
  br label %235

235:                                              ; preds = %228, %229
  br i1 %184, label %247, label %236

236:                                              ; preds = %235
  %237 = call i32 @_ZNK6icu_6910UnicodeSet8spanBackEPKDsi17USetSpanCondition(%"class.icu_69::UnicodeSet"* %11, i16* %211, i32 %221, i32 1) #6
  %238 = sub nsw i32 %221, %237
  %239 = icmp slt i32 %238, 254
  %240 = select i1 %239, i32 %238, i32 254
  %241 = trunc i32 %240 to i8
  %242 = getelementptr inbounds i8, i8* %169, i64 %189
  store i8 %241, i8* %242, align 1
  br label %247

243:                                              ; preds = %227
  %244 = getelementptr inbounds i8, i8* %169, i64 %189
  store i8 0, i8* %244, align 1
  %245 = load i8*, i8** %15, align 8
  %246 = getelementptr inbounds i8, i8* %245, i64 %189
  store i8 0, i8* %246, align 1
  br label %247

247:                                              ; preds = %235, %226, %243, %236
  br i1 %174, label %285, label %248

248:                                              ; preds = %247
  %249 = load i8*, i8** %16, align 8
  %250 = sext i32 %190 to i64
  %251 = getelementptr inbounds i8, i8* %249, i64 %250
  %252 = load i32, i32* %17, align 8
  %253 = sub nsw i32 %252, %190
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %185) #6
  store i32 0, i32* %5, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %186) #6
  store i32 0, i32* %6, align 4
  %254 = call i8* @u_strToUTF8_69(i8* %251, i32 %253, i32* nonnull %6, i16* %211, i32 %221, i32* nonnull %5) #6
  %255 = load i32, i32* %5, align 4
  %256 = icmp sgt i32 %255, 0
  %257 = load i32, i32* %6, align 4
  %258 = select i1 %256, i32 0, i32 %257
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %186) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %185) #6
  %259 = load i32*, i32** %14, align 8
  %260 = getelementptr inbounds i32, i32* %259, i64 %189
  store i32 %258, i32* %260, align 4
  %261 = add nsw i32 %258, %190
  %262 = icmp eq i32 %258, 0
  br i1 %262, label %263, label %266

263:                                              ; preds = %248
  %264 = getelementptr inbounds i8, i8* %171, i64 %189
  store i8 -1, i8* %264, align 1
  %265 = getelementptr inbounds i8, i8* %170, i64 %189
  store i8 -1, i8* %265, align 1
  br label %285

266:                                              ; preds = %248
  br i1 %176, label %282, label %267

267:                                              ; preds = %266
  br i1 %182, label %274, label %268

268:                                              ; preds = %267
  %269 = call i32 @_ZNK6icu_6910UnicodeSet8spanUTF8EPKci17USetSpanCondition(%"class.icu_69::UnicodeSet"* %11, i8* %251, i32 %258, i32 1) #6
  %270 = icmp slt i32 %269, 254
  %271 = select i1 %270, i32 %269, i32 254
  %272 = trunc i32 %271 to i8
  %273 = getelementptr inbounds i8, i8* %170, i64 %189
  store i8 %272, i8* %273, align 1
  br label %274

274:                                              ; preds = %267, %268
  br i1 %184, label %285, label %275

275:                                              ; preds = %274
  %276 = call i32 @_ZNK6icu_6910UnicodeSet12spanBackUTF8EPKci17USetSpanCondition(%"class.icu_69::UnicodeSet"* %11, i8* %251, i32 %258, i32 1) #6
  %277 = sub nsw i32 %258, %276
  %278 = icmp slt i32 %277, 254
  %279 = select i1 %278, i32 %277, i32 254
  %280 = trunc i32 %279 to i8
  %281 = getelementptr inbounds i8, i8* %171, i64 %189
  store i8 %280, i8* %281, align 1
  br label %285

282:                                              ; preds = %266
  %283 = getelementptr inbounds i8, i8* %171, i64 %189
  store i8 0, i8* %283, align 1
  %284 = getelementptr inbounds i8, i8* %170, i64 %189
  store i8 0, i8* %284, align 1
  br label %285

285:                                              ; preds = %263, %275, %282, %274, %247
  %286 = phi i32 [ %190, %247 ], [ %261, %274 ], [ %261, %282 ], [ %261, %275 ], [ %261, %263 ]
  br i1 %26, label %287, label %392

287:                                              ; preds = %285
  br i1 %182, label %321, label %288

288:                                              ; preds = %287
  %289 = load i16, i16* %211, align 2
  %290 = zext i16 %289 to i32
  %291 = and i32 %290, 64512
  %292 = icmp ne i32 %291, 55296
  %293 = icmp eq i32 %221, 1
  %294 = or i1 %293, %292
  br i1 %294, label %305, label %295

295:                                              ; preds = %288
  %296 = getelementptr inbounds i16, i16* %211, i64 1
  %297 = load i16, i16* %296, align 2
  %298 = zext i16 %297 to i32
  %299 = and i32 %298, 64512
  %300 = icmp eq i32 %299, 56320
  br i1 %300, label %301, label %305

301:                                              ; preds = %295
  %302 = shl nuw nsw i32 %290, 10
  %303 = add nsw i32 %302, -56613888
  %304 = add nsw i32 %303, %298
  br label %305

305:                                              ; preds = %288, %295, %301
  %306 = phi i32 [ %290, %288 ], [ %304, %301 ], [ %290, %295 ]
  %307 = load %"class.icu_69::UnicodeSet"*, %"class.icu_69::UnicodeSet"** %12, align 8
  %308 = icmp eq %"class.icu_69::UnicodeSet"* %307, null
  %309 = icmp eq %"class.icu_69::UnicodeSet"* %307, %11
  %310 = or i1 %308, %309
  br i1 %310, label %311, label %318

311:                                              ; preds = %305
  %312 = call signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"* %11, i32 %306) #6
  %313 = icmp eq i8 %312, 0
  br i1 %313, label %314, label %321

314:                                              ; preds = %311
  %315 = call %"class.icu_69::UnicodeSet"* @_ZNK6icu_6910UnicodeSet13cloneAsThawedEv(%"class.icu_69::UnicodeSet"* %11) #6
  %316 = icmp eq %"class.icu_69::UnicodeSet"* %315, null
  br i1 %316, label %321, label %317

317:                                              ; preds = %314
  store %"class.icu_69::UnicodeSet"* %315, %"class.icu_69::UnicodeSet"** %12, align 8
  br label %318

318:                                              ; preds = %317, %305
  %319 = phi %"class.icu_69::UnicodeSet"* [ %315, %317 ], [ %307, %305 ]
  %320 = call dereferenceable(200) %"class.icu_69::UnicodeSet"* @_ZN6icu_6910UnicodeSet3addEi(%"class.icu_69::UnicodeSet"* nonnull %319, i32 %306) #6
  br label %321

321:                                              ; preds = %318, %314, %311, %287
  br i1 %184, label %392, label %322

322:                                              ; preds = %321
  %323 = add nsw i32 %221, -1
  %324 = sext i32 %323 to i64
  %325 = getelementptr inbounds i16, i16* %211, i64 %324
  %326 = load i16, i16* %325, align 2
  %327 = zext i16 %326 to i32
  %328 = and i32 %327, 64512
  %329 = icmp eq i32 %328, 56320
  %330 = icmp sgt i32 %323, 0
  %331 = and i1 %330, %329
  br i1 %331, label %332, label %344

332:                                              ; preds = %322
  %333 = add nsw i32 %221, -2
  %334 = sext i32 %333 to i64
  %335 = getelementptr inbounds i16, i16* %211, i64 %334
  %336 = load i16, i16* %335, align 2
  %337 = zext i16 %336 to i32
  %338 = and i32 %337, 64512
  %339 = icmp eq i32 %338, 55296
  br i1 %339, label %340, label %344

340:                                              ; preds = %332
  %341 = shl nuw nsw i32 %337, 10
  %342 = add nuw nsw i32 %327, -56613888
  %343 = add nsw i32 %342, %341
  br label %344

344:                                              ; preds = %332, %340, %322
  %345 = phi i32 [ %327, %322 ], [ %343, %340 ], [ %327, %332 ]
  %346 = load %"class.icu_69::UnicodeSet"*, %"class.icu_69::UnicodeSet"** %12, align 8
  %347 = icmp eq %"class.icu_69::UnicodeSet"* %346, null
  %348 = icmp eq %"class.icu_69::UnicodeSet"* %346, %11
  %349 = or i1 %347, %348
  br i1 %349, label %350, label %357

350:                                              ; preds = %344
  %351 = call signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"* %11, i32 %345) #6
  %352 = icmp eq i8 %351, 0
  br i1 %352, label %353, label %392

353:                                              ; preds = %350
  %354 = call %"class.icu_69::UnicodeSet"* @_ZNK6icu_6910UnicodeSet13cloneAsThawedEv(%"class.icu_69::UnicodeSet"* %11) #6
  %355 = icmp eq %"class.icu_69::UnicodeSet"* %354, null
  br i1 %355, label %392, label %356

356:                                              ; preds = %353
  store %"class.icu_69::UnicodeSet"* %354, %"class.icu_69::UnicodeSet"** %12, align 8
  br label %357

357:                                              ; preds = %356, %344
  %358 = phi %"class.icu_69::UnicodeSet"* [ %354, %356 ], [ %346, %344 ]
  %359 = call dereferenceable(200) %"class.icu_69::UnicodeSet"* @_ZN6icu_6910UnicodeSet3addEi(%"class.icu_69::UnicodeSet"* nonnull %358, i32 %345) #6
  br label %392

360:                                              ; preds = %220
  br i1 %174, label %379, label %361

361:                                              ; preds = %360
  br i1 %176, label %376, label %362

362:                                              ; preds = %361
  %363 = load i8*, i8** %16, align 8
  %364 = sext i32 %190 to i64
  %365 = getelementptr inbounds i8, i8* %363, i64 %364
  %366 = load i32, i32* %17, align 8
  %367 = sub nsw i32 %366, %190
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %177) #6
  store i32 0, i32* %9, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %178) #6
  store i32 0, i32* %10, align 4
  %368 = call i8* @u_strToUTF8_69(i8* %365, i32 %367, i32* nonnull %10, i16* %211, i32 %221, i32* nonnull %9) #6
  %369 = load i32, i32* %9, align 4
  %370 = icmp sgt i32 %369, 0
  %371 = load i32, i32* %10, align 4
  %372 = select i1 %370, i32 0, i32 %371
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %178) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %177) #6
  %373 = load i32*, i32** %14, align 8
  %374 = getelementptr inbounds i32, i32* %373, i64 %189
  store i32 %372, i32* %374, align 4
  %375 = add nsw i32 %372, %190
  br label %379

376:                                              ; preds = %361
  %377 = load i32*, i32** %14, align 8
  %378 = getelementptr inbounds i32, i32* %377, i64 %189
  store i32 0, i32* %378, align 4
  br label %379

379:                                              ; preds = %360, %362, %376
  %380 = phi i32 [ %375, %362 ], [ %190, %376 ], [ %190, %360 ]
  %381 = load i8, i8* %20, align 4
  %382 = icmp eq i8 %381, 0
  br i1 %382, label %389, label %383

383:                                              ; preds = %379
  %384 = getelementptr inbounds i8, i8* %171, i64 %189
  store i8 -1, i8* %384, align 1
  %385 = getelementptr inbounds i8, i8* %170, i64 %189
  store i8 -1, i8* %385, align 1
  %386 = getelementptr inbounds i8, i8* %169, i64 %189
  store i8 -1, i8* %386, align 1
  %387 = load i8*, i8** %15, align 8
  %388 = getelementptr inbounds i8, i8* %387, i64 %189
  store i8 -1, i8* %388, align 1
  br label %392

389:                                              ; preds = %379
  %390 = load i8*, i8** %15, align 8
  %391 = getelementptr inbounds i8, i8* %390, i64 %189
  store i8 -1, i8* %391, align 1
  br label %392

392:                                              ; preds = %357, %353, %350, %321, %383, %389, %285
  %393 = phi i32 [ %286, %285 ], [ %380, %383 ], [ %380, %389 ], [ %286, %321 ], [ %286, %350 ], [ %286, %353 ], [ %286, %357 ]
  %394 = add nuw nsw i64 %189, 1
  %395 = icmp eq i64 %394, %187
  br i1 %395, label %396, label %188

396:                                              ; preds = %392
  %397 = load i8, i8* %20, align 4
  br label %398

398:                                              ; preds = %396, %168
  %399 = phi i8 [ %397, %396 ], [ %145, %168 ]
  %400 = icmp eq i8 %399, 0
  br i1 %400, label %404, label %401

401:                                              ; preds = %398
  %402 = load %"class.icu_69::UnicodeSet"*, %"class.icu_69::UnicodeSet"** %12, align 8
  %403 = call %"class.icu_69::UnicodeSet"* @_ZN6icu_6910UnicodeSet6freezeEv(%"class.icu_69::UnicodeSet"* %402) #6
  br label %404

404:                                              ; preds = %142, %398, %401, %109
  ret void
}

declare void @_ZN6icu_6910UnicodeSetC1Eii(%"class.icu_69::UnicodeSet"*, i32, i32) unnamed_addr #1

declare dereferenceable(200) %"class.icu_69::UnicodeSet"* @_ZN6icu_6910UnicodeSet9retainAllERKS0_(%"class.icu_69::UnicodeSet"*, %"class.icu_69::UnicodeSet"* dereferenceable(200)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"*, i32) local_unnamed_addr #1

declare i32 @_ZNK6icu_6910UnicodeSet4spanEPKDsi17USetSpanCondition(%"class.icu_69::UnicodeSet"*, i16*, i32, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.icu_69::UnicodeSet"* @_ZN6icu_6910UnicodeSet6freezeEv(%"class.icu_69::UnicodeSet"*) local_unnamed_addr #1

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #3

declare i32 @_ZNK6icu_6910UnicodeSet8spanBackEPKDsi17USetSpanCondition(%"class.icu_69::UnicodeSet"*, i16*, i32, i32) local_unnamed_addr #1

declare i32 @_ZNK6icu_6910UnicodeSet8spanUTF8EPKci17USetSpanCondition(%"class.icu_69::UnicodeSet"*, i8*, i32, i32) local_unnamed_addr #1

declare i32 @_ZNK6icu_6910UnicodeSet12spanBackUTF8EPKci17USetSpanCondition(%"class.icu_69::UnicodeSet"*, i8*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6920UnicodeSetStringSpan15addToSpanNotSetEi(%"class.icu_69::UnicodeSetStringSpan"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 2
  %4 = load %"class.icu_69::UnicodeSet"*, %"class.icu_69::UnicodeSet"** %3, align 8
  %5 = icmp eq %"class.icu_69::UnicodeSet"* %4, null
  %6 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 1
  %7 = icmp eq %"class.icu_69::UnicodeSet"* %4, %6
  %8 = or i1 %5, %7
  br i1 %8, label %9, label %16

9:                                                ; preds = %2
  %10 = tail call signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"* %6, i32 %1) #6
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %9
  %13 = tail call %"class.icu_69::UnicodeSet"* @_ZNK6icu_6910UnicodeSet13cloneAsThawedEv(%"class.icu_69::UnicodeSet"* %6) #6
  %14 = icmp eq %"class.icu_69::UnicodeSet"* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %12
  store %"class.icu_69::UnicodeSet"* %13, %"class.icu_69::UnicodeSet"** %3, align 8
  br label %16

16:                                               ; preds = %15, %2
  %17 = phi %"class.icu_69::UnicodeSet"* [ %13, %15 ], [ %4, %2 ]
  %18 = tail call dereferenceable(200) %"class.icu_69::UnicodeSet"* @_ZN6icu_6910UnicodeSet3addEi(%"class.icu_69::UnicodeSet"* nonnull %17, i32 %1) #6
  br label %19

19:                                               ; preds = %12, %9, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6920UnicodeSetStringSpanC2ERKS0_RKNS_7UVectorE(%"class.icu_69::UnicodeSetStringSpan"*, %"class.icu_69::UnicodeSetStringSpan"* dereferenceable(392), %"class.icu_69::UVector"* dereferenceable(40)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %1, i64 0, i32 1
  tail call void @_ZN6icu_6910UnicodeSetC1ERKS0_(%"class.icu_69::UnicodeSet"* %4, %"class.icu_69::UnicodeSet"* dereferenceable(200) %5) #6
  %6 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 2
  store %"class.icu_69::UnicodeSet"* null, %"class.icu_69::UnicodeSet"** %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 3
  store %"class.icu_69::UVector"* %2, %"class.icu_69::UVector"** %7, align 8
  %8 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 5
  %10 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 6
  %11 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 7
  %12 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %1, i64 0, i32 7
  %13 = bitcast i32** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false)
  %14 = load i32, i32* %12, align 8
  store i32 %14, i32* %11, align 8
  %15 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 8
  %16 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %1, i64 0, i32 8
  %17 = load i32, i32* %16, align 4
  store i32 %17, i32* %15, align 4
  %18 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 9
  %19 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %1, i64 0, i32 9
  %20 = load i32, i32* %19, align 8
  store i32 %20, i32* %18, align 8
  %21 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 10
  store i8 1, i8* %21, align 4
  %22 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %1, i64 0, i32 2
  %23 = load %"class.icu_69::UnicodeSet"*, %"class.icu_69::UnicodeSet"** %22, align 8
  %24 = icmp eq %"class.icu_69::UnicodeSet"* %23, %5
  br i1 %24, label %29, label %25

25:                                               ; preds = %3
  %26 = tail call %"class.icu_69::UnicodeSet"* @_ZNK6icu_6910UnicodeSet5cloneEv(%"class.icu_69::UnicodeSet"* %23) #6
  %27 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %7, align 8
  %28 = load i32, i32* %11, align 8
  br label %29

29:                                               ; preds = %3, %25
  %30 = phi i32 [ %28, %25 ], [ %14, %3 ]
  %31 = phi %"class.icu_69::UVector"* [ %27, %25 ], [ %2, %3 ]
  %32 = phi %"class.icu_69::UnicodeSet"* [ %26, %25 ], [ %4, %3 ]
  store %"class.icu_69::UnicodeSet"* %32, %"class.icu_69::UnicodeSet"** %6, align 8
  %33 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %31, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = shl nsw i32 %34, 3
  %36 = add nsw i32 %35, %30
  %37 = icmp slt i32 %36, 129
  br i1 %37, label %38, label %42

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 11, i64 0
  store i32* %39, i32** %8, align 8
  %40 = bitcast i32* %39 to i8*
  %41 = sext i32 %36 to i64
  br label %49

42:                                               ; preds = %29
  %43 = sext i32 %36 to i64
  %44 = tail call noalias i8* @uprv_malloc_69(i64 %43) #7
  %45 = bitcast i32** %8 to i8**
  store i8* %44, i8** %45, align 8
  %46 = icmp eq i8* %44, null
  %47 = bitcast i8* %44 to i32*
  br i1 %46, label %48, label %49

48:                                               ; preds = %42
  store i32 0, i32* %18, align 8
  store i32 0, i32* %15, align 4
  br label %61

49:                                               ; preds = %42, %38
  %50 = phi i64 [ %43, %42 ], [ %41, %38 ]
  %51 = phi i8* [ %44, %42 ], [ %40, %38 ]
  %52 = phi i32* [ %47, %42 ], [ %39, %38 ]
  %53 = sext i32 %34 to i64
  %54 = getelementptr inbounds i32, i32* %52, i64 %53
  %55 = bitcast i8** %9 to i32**
  store i32* %54, i32** %55, align 8
  %56 = getelementptr inbounds i32, i32* %54, i64 %53
  %57 = bitcast i8** %10 to i32**
  store i32* %56, i32** %57, align 8
  %58 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %1, i64 0, i32 4
  %59 = bitcast i32** %58 to i8**
  %60 = load i8*, i8** %59, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %51, i8* align 4 %60, i64 %50, i1 false)
  br label %61

61:                                               ; preds = %49, %48
  ret void
}

declare void @_ZN6icu_6910UnicodeSetC1ERKS0_(%"class.icu_69::UnicodeSet"*, %"class.icu_69::UnicodeSet"* dereferenceable(200)) unnamed_addr #1

declare %"class.icu_69::UnicodeSet"* @_ZNK6icu_6910UnicodeSet5cloneEv(%"class.icu_69::UnicodeSet"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6920UnicodeSetStringSpanD2Ev(%"class.icu_69::UnicodeSetStringSpan"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 2
  %3 = load %"class.icu_69::UnicodeSet"*, %"class.icu_69::UnicodeSet"** %2, align 8
  %4 = icmp eq %"class.icu_69::UnicodeSet"* %3, null
  %5 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 1
  %6 = icmp eq %"class.icu_69::UnicodeSet"* %3, %5
  %7 = or i1 %4, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.icu_69::UnicodeSet"* %3 to void (%"class.icu_69::UnicodeSet"*)***
  %10 = load void (%"class.icu_69::UnicodeSet"*)**, void (%"class.icu_69::UnicodeSet"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.icu_69::UnicodeSet"*)*, void (%"class.icu_69::UnicodeSet"*)** %10, i64 1
  %12 = load void (%"class.icu_69::UnicodeSet"*)*, void (%"class.icu_69::UnicodeSet"*)** %11, align 8
  tail call void %12(%"class.icu_69::UnicodeSet"* nonnull %3) #6
  br label %13

13:                                               ; preds = %1, %8
  %14 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 4
  %15 = load i32*, i32** %14, align 8
  %16 = icmp eq i32* %15, null
  %17 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 11, i64 0
  %18 = icmp eq i32* %15, %17
  %19 = or i1 %16, %18
  br i1 %19, label %22, label %20

20:                                               ; preds = %13
  %21 = bitcast i32* %15 to i8*
  tail call void @uprv_free_69(i8* nonnull %21) #6
  br label %22

22:                                               ; preds = %13, %20
  tail call void @_ZN6icu_6910UnicodeSetD1Ev(%"class.icu_69::UnicodeSet"* %5) #6
  ret void
}

declare void @uprv_free_69(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6icu_6910UnicodeSetD1Ev(%"class.icu_69::UnicodeSet"*) unnamed_addr #4

declare signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"*, i32) unnamed_addr #1

declare %"class.icu_69::UnicodeSet"* @_ZNK6icu_6910UnicodeSet13cloneAsThawedEv(%"class.icu_69::UnicodeSet"*) local_unnamed_addr #1

declare dereferenceable(200) %"class.icu_69::UnicodeSet"* @_ZN6icu_6910UnicodeSet3addEi(%"class.icu_69::UnicodeSet"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK6icu_6920UnicodeSetStringSpan4spanEPKDsi17USetSpanCondition(%"class.icu_69::UnicodeSetStringSpan"*, i16*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.icu_69::OffsetList", align 8
  %6 = icmp eq i32 %3, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i32 @_ZNK6icu_6920UnicodeSetStringSpan7spanNotEPKDsi(%"class.icu_69::UnicodeSetStringSpan"* %0, i16* %1, i32 %2)
  br label %434

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 1
  %11 = tail call i32 @_ZNK6icu_6910UnicodeSet4spanEPKDsi17USetSpanCondition(%"class.icu_69::UnicodeSet"* %10, i16* %1, i32 %2, i32 1) #6
  %12 = icmp eq i32 %11, %2
  br i1 %12, label %434, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.icu_69::OffsetList"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 40, i1 false)
  %15 = getelementptr inbounds %"class.icu_69::OffsetList", %"class.icu_69::OffsetList"* %5, i64 0, i32 0
  %16 = getelementptr inbounds %"class.icu_69::OffsetList", %"class.icu_69::OffsetList"* %5, i64 0, i32 4, i64 0
  store i8* %16, i8** %15, align 8
  %17 = getelementptr inbounds %"class.icu_69::OffsetList", %"class.icu_69::OffsetList"* %5, i64 0, i32 1
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.icu_69::OffsetList", %"class.icu_69::OffsetList"* %5, i64 0, i32 2
  store i32 0, i32* %18, align 4
  %19 = getelementptr inbounds %"class.icu_69::OffsetList", %"class.icu_69::OffsetList"* %5, i64 0, i32 3
  store i32 0, i32* %19, align 8
  %20 = icmp eq i32 %3, 1
  br i1 %20, label %21, label %38

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 8
  %23 = load i32, i32* %22, align 4
  %24 = icmp slt i32 %23, 17
  br i1 %24, label %25, label %26

25:                                               ; preds = %21
  store i32 16, i32* %17, align 8
  br label %34

26:                                               ; preds = %21
  %27 = sext i32 %23 to i64
  %28 = call noalias i8* @uprv_malloc_69(i64 %27) #7
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %33

30:                                               ; preds = %26
  %31 = load i32, i32* %17, align 8
  %32 = load i8*, i8** %15, align 8
  br label %34

33:                                               ; preds = %26
  store i8* %28, i8** %15, align 8
  store i32 %23, i32* %17, align 8
  br label %34

34:                                               ; preds = %25, %30, %33
  %35 = phi i8* [ %32, %30 ], [ %28, %33 ], [ %16, %25 ]
  %36 = phi i32 [ %31, %30 ], [ %23, %33 ], [ 16, %25 ]
  %37 = sext i32 %36 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %37, i1 false) #6
  br label %38

38:                                               ; preds = %34, %13
  %39 = sub nsw i32 %2, %11
  %40 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 3
  %41 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %40, align 8
  %42 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %41, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = icmp sgt i32 %43, 0
  %45 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 5
  %46 = sext i32 %2 to i64
  %47 = zext i32 %43 to i64
  %48 = zext i32 %43 to i64
  br label %49

49:                                               ; preds = %338, %38
  %50 = phi i32 [ %11, %38 ], [ %339, %338 ]
  %51 = phi i32 [ %39, %38 ], [ %340, %338 ]
  %52 = phi i32 [ %11, %38 ], [ %341, %338 ]
  br i1 %20, label %56, label %53

53:                                               ; preds = %49
  br i1 %44, label %54, label %311

54:                                               ; preds = %53
  %55 = sext i32 %50 to i64
  br label %194

56:                                               ; preds = %49
  br i1 %44, label %57, label %320

57:                                               ; preds = %56
  %58 = sext i32 %50 to i64
  br label %59

59:                                               ; preds = %191, %57
  %60 = phi i64 [ 0, %57 ], [ %192, %191 ]
  %61 = load i8*, i8** %45, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, -1
  br i1 %64, label %191, label %65

65:                                               ; preds = %59
  %66 = zext i8 %63 to i32
  %67 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %40, align 8
  %68 = trunc i64 %60 to i32
  %69 = call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %67, i32 %68) #6
  %70 = getelementptr inbounds i8, i8* %69, i64 8
  %71 = bitcast i8* %70 to i16*
  %72 = load i16, i16* %71, align 8
  %73 = sext i16 %72 to i32
  %74 = and i32 %73, 17
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %86

76:                                               ; preds = %65
  %77 = and i32 %73, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds i8, i8* %69, i64 10
  %81 = bitcast i8* %80 to i16*
  br label %86

82:                                               ; preds = %76
  %83 = getelementptr inbounds i8, i8* %69, i64 24
  %84 = bitcast i8* %83 to i16**
  %85 = load i16*, i16** %84, align 8
  br label %86

86:                                               ; preds = %65, %79, %82
  %87 = phi i16* [ %81, %79 ], [ %85, %82 ], [ null, %65 ]
  %88 = icmp slt i16 %72, 0
  br i1 %88, label %92, label %89

89:                                               ; preds = %86
  %90 = lshr i16 %72, 5
  %91 = zext i16 %90 to i32
  br label %96

92:                                               ; preds = %86
  %93 = getelementptr inbounds i8, i8* %69, i64 12
  %94 = bitcast i8* %93 to i32*
  %95 = load i32, i32* %94, align 4
  br label %96

96:                                               ; preds = %89, %92
  %97 = phi i32 [ %91, %89 ], [ %95, %92 ]
  %98 = icmp eq i8 %63, -2
  br i1 %98, label %99, label %116

99:                                               ; preds = %96
  %100 = add nsw i32 %97, -1
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i16, i16* %87, i64 %101
  %103 = load i16, i16* %102, align 2
  %104 = and i16 %103, -1024
  %105 = icmp eq i16 %104, -9216
  %106 = icmp sgt i32 %100, 0
  %107 = and i1 %106, %105
  br i1 %107, label %108, label %116

108:                                              ; preds = %99
  %109 = add nsw i32 %97, -2
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds i16, i16* %87, i64 %110
  %112 = load i16, i16* %111, align 2
  %113 = and i16 %112, -1024
  %114 = icmp eq i16 %113, -10240
  %115 = select i1 %114, i32 %109, i32 %100
  br label %116

116:                                              ; preds = %108, %99, %96
  %117 = phi i32 [ %100, %99 ], [ %66, %96 ], [ %115, %108 ]
  %118 = icmp sgt i32 %117, %52
  %119 = select i1 %118, i32 %52, i32 %117
  %120 = sub nsw i32 %97, %119
  %121 = icmp sgt i32 %120, %51
  br i1 %121, label %191, label %122

122:                                              ; preds = %116
  %123 = add nsw i32 %97, -1
  %124 = sext i32 %123 to i64
  %125 = sext i32 %97 to i64
  %126 = sext i32 %119 to i64
  br label %127

127:                                              ; preds = %187, %122
  %128 = phi i64 [ %188, %187 ], [ %126, %122 ]
  %129 = phi i32 [ %189, %187 ], [ %120, %122 ]
  %130 = load i32, i32* %19, align 8
  %131 = add nsw i32 %130, %129
  %132 = load i32, i32* %17, align 8
  %133 = icmp slt i32 %131, %132
  %134 = select i1 %133, i32 0, i32 %132
  %135 = sub nsw i32 %131, %134
  %136 = load i8*, i8** %15, align 8
  %137 = sext i32 %135 to i64
  %138 = getelementptr inbounds i8, i8* %136, i64 %137
  %139 = load i8, i8* %138, align 1
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %141, label %185

141:                                              ; preds = %127
  %142 = sub nsw i64 %58, %128
  %143 = getelementptr inbounds i16, i16* %1, i64 %142
  %144 = sub nsw i64 %46, %142
  br label %145

145:                                              ; preds = %152, %141
  %146 = phi i16* [ %143, %141 ], [ %154, %152 ]
  %147 = phi i16* [ %87, %141 ], [ %153, %152 ]
  %148 = phi i32 [ %97, %141 ], [ %155, %152 ]
  %149 = load i16, i16* %146, align 2
  %150 = load i16, i16* %147, align 2
  %151 = icmp eq i16 %149, %150
  br i1 %151, label %152, label %185

152:                                              ; preds = %145
  %153 = getelementptr inbounds i16, i16* %147, i64 1
  %154 = getelementptr inbounds i16, i16* %146, i64 1
  %155 = add nsw i32 %148, -1
  %156 = icmp sgt i32 %155, 0
  br i1 %156, label %145, label %157

157:                                              ; preds = %152
  %158 = icmp sgt i64 %142, 0
  br i1 %158, label %159, label %168

159:                                              ; preds = %157
  %160 = getelementptr inbounds i16, i16* %143, i64 -1
  %161 = load i16, i16* %160, align 2
  %162 = and i16 %161, -1024
  %163 = icmp eq i16 %162, -10240
  br i1 %163, label %164, label %168

164:                                              ; preds = %159
  %165 = load i16, i16* %143, align 2
  %166 = and i16 %165, -1024
  %167 = icmp eq i16 %166, -9216
  br i1 %167, label %185, label %168

168:                                              ; preds = %164, %159, %157
  %169 = icmp sgt i64 %144, %125
  br i1 %169, label %170, label %180

170:                                              ; preds = %168
  %171 = getelementptr inbounds i16, i16* %143, i64 %124
  %172 = load i16, i16* %171, align 2
  %173 = and i16 %172, -1024
  %174 = icmp eq i16 %173, -10240
  br i1 %174, label %175, label %180

175:                                              ; preds = %170
  %176 = getelementptr inbounds i16, i16* %143, i64 %125
  %177 = load i16, i16* %176, align 2
  %178 = and i16 %177, -1024
  %179 = icmp eq i16 %178, -9216
  br i1 %179, label %185, label %180

180:                                              ; preds = %168, %170, %175
  %181 = icmp eq i32 %129, %51
  br i1 %181, label %428, label %182

182:                                              ; preds = %180
  store i8 1, i8* %138, align 1
  %183 = load i32, i32* %18, align 4
  %184 = add nsw i32 %183, 1
  store i32 %184, i32* %18, align 4
  br label %185

185:                                              ; preds = %145, %164, %175, %127, %182
  %186 = icmp eq i64 %128, 0
  br i1 %186, label %191, label %187

187:                                              ; preds = %185
  %188 = add nsw i64 %128, -1
  %189 = add nsw i32 %129, 1
  %190 = icmp slt i32 %129, %51
  br i1 %190, label %127, label %191

191:                                              ; preds = %187, %185, %116, %59
  %192 = add nuw nsw i64 %60, 1
  %193 = icmp eq i64 %192, %48
  br i1 %193, label %320, label %59

194:                                              ; preds = %306, %54
  %195 = phi i64 [ 0, %54 ], [ %309, %306 ]
  %196 = phi i32 [ 0, %54 ], [ %308, %306 ]
  %197 = phi i32 [ 0, %54 ], [ %307, %306 ]
  %198 = load i8*, i8** %45, align 8
  %199 = getelementptr inbounds i8, i8* %198, i64 %195
  %200 = load i8, i8* %199, align 1
  %201 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %40, align 8
  %202 = trunc i64 %195 to i32
  %203 = call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %201, i32 %202) #6
  %204 = getelementptr inbounds i8, i8* %203, i64 8
  %205 = bitcast i8* %204 to i16*
  %206 = load i16, i16* %205, align 8
  %207 = sext i16 %206 to i32
  %208 = and i32 %207, 17
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %220

210:                                              ; preds = %194
  %211 = and i32 %207, 2
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %216, label %213

213:                                              ; preds = %210
  %214 = getelementptr inbounds i8, i8* %203, i64 10
  %215 = bitcast i8* %214 to i16*
  br label %220

216:                                              ; preds = %210
  %217 = getelementptr inbounds i8, i8* %203, i64 24
  %218 = bitcast i8* %217 to i16**
  %219 = load i16*, i16** %218, align 8
  br label %220

220:                                              ; preds = %194, %213, %216
  %221 = phi i16* [ %215, %213 ], [ %219, %216 ], [ null, %194 ]
  %222 = icmp slt i16 %206, 0
  br i1 %222, label %226, label %223

223:                                              ; preds = %220
  %224 = lshr i16 %206, 5
  %225 = zext i16 %224 to i32
  br label %230

226:                                              ; preds = %220
  %227 = getelementptr inbounds i8, i8* %203, i64 12
  %228 = bitcast i8* %227 to i32*
  %229 = load i32, i32* %228, align 4
  br label %230

230:                                              ; preds = %223, %226
  %231 = phi i32 [ %225, %223 ], [ %229, %226 ]
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %306, label %233

233:                                              ; preds = %230
  %234 = zext i8 %200 to i32
  %235 = icmp ugt i8 %200, -3
  %236 = select i1 %235, i32 %231, i32 %234
  %237 = icmp sgt i32 %236, %52
  %238 = select i1 %237, i32 %52, i32 %236
  %239 = sub nsw i32 %231, %238
  %240 = add nsw i32 %231, -1
  %241 = sext i32 %240 to i64
  %242 = sext i32 %231 to i64
  %243 = icmp sgt i32 %239, %51
  %244 = icmp slt i32 %238, %196
  %245 = or i1 %244, %243
  br i1 %245, label %306, label %246

246:                                              ; preds = %233
  %247 = sext i32 %238 to i64
  %248 = sext i32 %196 to i64
  br label %249

249:                                              ; preds = %246, %294
  %250 = phi i64 [ %247, %246 ], [ %295, %294 ]
  %251 = phi i32 [ %239, %246 ], [ %296, %294 ]
  %252 = icmp sgt i64 %250, %248
  %253 = icmp sgt i32 %251, %197
  %254 = or i1 %252, %253
  br i1 %254, label %255, label %294

255:                                              ; preds = %249
  %256 = sub nsw i64 %55, %250
  %257 = getelementptr inbounds i16, i16* %1, i64 %256
  %258 = sub nsw i64 %46, %256
  br label %259

259:                                              ; preds = %266, %255
  %260 = phi i16* [ %257, %255 ], [ %268, %266 ]
  %261 = phi i16* [ %221, %255 ], [ %267, %266 ]
  %262 = phi i32 [ %231, %255 ], [ %269, %266 ]
  %263 = load i16, i16* %260, align 2
  %264 = load i16, i16* %261, align 2
  %265 = icmp eq i16 %263, %264
  br i1 %265, label %266, label %294

266:                                              ; preds = %259
  %267 = getelementptr inbounds i16, i16* %261, i64 1
  %268 = getelementptr inbounds i16, i16* %260, i64 1
  %269 = add nsw i32 %262, -1
  %270 = icmp sgt i32 %269, 0
  br i1 %270, label %259, label %271

271:                                              ; preds = %266
  %272 = icmp sgt i64 %256, 0
  br i1 %272, label %273, label %282

273:                                              ; preds = %271
  %274 = getelementptr inbounds i16, i16* %257, i64 -1
  %275 = load i16, i16* %274, align 2
  %276 = and i16 %275, -1024
  %277 = icmp eq i16 %276, -10240
  br i1 %277, label %278, label %282

278:                                              ; preds = %273
  %279 = load i16, i16* %257, align 2
  %280 = and i16 %279, -1024
  %281 = icmp eq i16 %280, -9216
  br i1 %281, label %294, label %282

282:                                              ; preds = %278, %273, %271
  %283 = icmp sgt i64 %258, %242
  br i1 %283, label %284, label %300

284:                                              ; preds = %282
  %285 = getelementptr inbounds i16, i16* %257, i64 %241
  %286 = load i16, i16* %285, align 2
  %287 = and i16 %286, -1024
  %288 = icmp eq i16 %287, -10240
  br i1 %288, label %289, label %302

289:                                              ; preds = %284
  %290 = getelementptr inbounds i16, i16* %257, i64 %242
  %291 = load i16, i16* %290, align 2
  %292 = and i16 %291, -1024
  %293 = icmp eq i16 %292, -9216
  br i1 %293, label %294, label %304

294:                                              ; preds = %259, %278, %249, %289
  %295 = add nsw i64 %250, -1
  %296 = add nsw i32 %251, 1
  %297 = icmp sge i32 %251, %51
  %298 = icmp sle i64 %250, %248
  %299 = or i1 %298, %297
  br i1 %299, label %306, label %249

300:                                              ; preds = %282
  %301 = trunc i64 %250 to i32
  br label %306

302:                                              ; preds = %284
  %303 = trunc i64 %250 to i32
  br label %306

304:                                              ; preds = %289
  %305 = trunc i64 %250 to i32
  br label %306

306:                                              ; preds = %294, %300, %302, %304, %233, %230
  %307 = phi i32 [ %197, %230 ], [ %197, %233 ], [ %251, %300 ], [ %251, %302 ], [ %251, %304 ], [ %197, %294 ]
  %308 = phi i32 [ %196, %230 ], [ %196, %233 ], [ %301, %300 ], [ %303, %302 ], [ %305, %304 ], [ %196, %294 ]
  %309 = add nuw nsw i64 %195, 1
  %310 = icmp eq i64 %309, %47
  br i1 %310, label %311, label %194

311:                                              ; preds = %306, %53
  %312 = phi i32 [ 0, %53 ], [ %307, %306 ]
  %313 = phi i32 [ 0, %53 ], [ %308, %306 ]
  %314 = or i32 %313, %312
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %320, label %316

316:                                              ; preds = %311
  %317 = add nsw i32 %312, %50
  %318 = sub nsw i32 %51, %312
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %425, label %338

320:                                              ; preds = %191, %56, %311
  %321 = icmp ne i32 %52, 0
  %322 = icmp eq i32 %50, 0
  %323 = or i1 %322, %321
  %324 = load i32, i32* %18, align 4
  %325 = icmp eq i32 %324, 0
  br i1 %323, label %326, label %327

326:                                              ; preds = %320
  br i1 %325, label %425, label %386

327:                                              ; preds = %320
  %328 = sext i32 %50 to i64
  %329 = getelementptr inbounds i16, i16* %1, i64 %328
  br i1 %325, label %330, label %342

330:                                              ; preds = %327
  %331 = call i32 @_ZNK6icu_6910UnicodeSet4spanEPKDsi17USetSpanCondition(%"class.icu_69::UnicodeSet"* %10, i16* %329, i32 %51, i32 1) #6
  %332 = icmp eq i32 %51, %331
  %333 = icmp eq i32 %331, 0
  %334 = or i1 %332, %333
  %335 = add nsw i32 %331, %50
  br i1 %334, label %425, label %336

336:                                              ; preds = %330
  %337 = sub nsw i32 %51, %331
  br label %338

338:                                              ; preds = %336, %385, %421, %316
  %339 = phi i32 [ %423, %421 ], [ %335, %336 ], [ %369, %385 ], [ %317, %316 ]
  %340 = phi i32 [ %424, %421 ], [ %337, %336 ], [ %370, %385 ], [ %318, %316 ]
  %341 = phi i32 [ 0, %421 ], [ %331, %336 ], [ 0, %385 ], [ 0, %316 ]
  br label %49

342:                                              ; preds = %327
  %343 = load i16, i16* %329, align 2
  %344 = zext i16 %343 to i32
  %345 = icmp ugt i16 %343, -10241
  br i1 %345, label %346, label %362

346:                                              ; preds = %342
  %347 = icmp ult i16 %343, -9216
  %348 = icmp sgt i32 %51, 1
  %349 = and i1 %348, %347
  br i1 %349, label %350, label %362

350:                                              ; preds = %346
  %351 = getelementptr inbounds i16, i16* %329, i64 1
  %352 = load i16, i16* %351, align 2
  %353 = zext i16 %352 to i32
  %354 = and i32 %353, 64512
  %355 = icmp eq i32 %354, 56320
  br i1 %355, label %356, label %362

356:                                              ; preds = %350
  %357 = shl nuw nsw i32 %344, 10
  %358 = add nsw i32 %357, -56613888
  %359 = add nsw i32 %358, %353
  %360 = call signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"* %10, i32 %359) #6
  %361 = icmp eq i8 %360, 0
  br i1 %361, label %386, label %365

362:                                              ; preds = %350, %346, %342
  %363 = call signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"* %10, i32 %344) #6
  %364 = icmp eq i8 %363, 0
  br i1 %364, label %386, label %365

365:                                              ; preds = %356, %362
  %366 = phi i32 [ 1, %362 ], [ 2, %356 ]
  %367 = icmp eq i32 %51, %366
  br i1 %367, label %425, label %368

368:                                              ; preds = %365
  %369 = add nsw i32 %366, %50
  %370 = sub nsw i32 %51, %366
  %371 = load i32, i32* %19, align 8
  %372 = add nsw i32 %371, %366
  %373 = load i32, i32* %17, align 8
  %374 = icmp slt i32 %372, %373
  %375 = select i1 %374, i32 0, i32 %373
  %376 = sub nsw i32 %372, %375
  %377 = load i8*, i8** %15, align 8
  %378 = sext i32 %376 to i64
  %379 = getelementptr inbounds i8, i8* %377, i64 %378
  %380 = load i8, i8* %379, align 1
  %381 = icmp eq i8 %380, 0
  br i1 %381, label %385, label %382

382:                                              ; preds = %368
  store i8 0, i8* %379, align 1
  %383 = load i32, i32* %18, align 4
  %384 = add nsw i32 %383, -1
  store i32 %384, i32* %18, align 4
  br label %385

385:                                              ; preds = %368, %382
  store i32 %376, i32* %19, align 8
  br label %338

386:                                              ; preds = %362, %356, %326
  %387 = load i32, i32* %19, align 8
  %388 = load i32, i32* %17, align 8
  %389 = sext i32 %387 to i64
  %390 = sext i32 %388 to i64
  %391 = load i8*, i8** %15, align 8
  br label %392

392:                                              ; preds = %396, %386
  %393 = phi i64 [ %394, %396 ], [ %389, %386 ]
  %394 = add nsw i64 %393, 1
  %395 = icmp slt i64 %394, %390
  br i1 %395, label %396, label %407

396:                                              ; preds = %392
  %397 = getelementptr inbounds i8, i8* %391, i64 %394
  %398 = load i8, i8* %397, align 1
  %399 = icmp eq i8 %398, 0
  br i1 %399, label %392, label %400

400:                                              ; preds = %396
  %401 = getelementptr inbounds i8, i8* %391, i64 %394
  %402 = trunc i64 %394 to i32
  store i8 0, i8* %401, align 1
  %403 = load i32, i32* %18, align 4
  %404 = add nsw i32 %403, -1
  store i32 %404, i32* %18, align 4
  %405 = load i32, i32* %19, align 8
  %406 = sub nsw i32 %402, %405
  store i32 %402, i32* %19, align 8
  br label %421

407:                                              ; preds = %392, %407
  %408 = phi i64 [ %412, %407 ], [ 0, %392 ]
  %409 = getelementptr inbounds i8, i8* %391, i64 %408
  %410 = load i8, i8* %409, align 1
  %411 = icmp eq i8 %410, 0
  %412 = add nuw i64 %408, 1
  br i1 %411, label %407, label %413

413:                                              ; preds = %407
  %414 = sub i32 %388, %387
  %415 = trunc i64 %408 to i32
  %416 = and i64 %408, 4294967295
  %417 = getelementptr inbounds i8, i8* %391, i64 %416
  store i8 0, i8* %417, align 1
  %418 = load i32, i32* %18, align 4
  %419 = add nsw i32 %418, -1
  store i32 %419, i32* %18, align 4
  store i32 %415, i32* %19, align 8
  %420 = add nsw i32 %414, %415
  br label %421

421:                                              ; preds = %400, %413
  %422 = phi i32 [ %406, %400 ], [ %420, %413 ]
  %423 = add nsw i32 %422, %50
  %424 = sub nsw i32 %51, %422
  br label %338

425:                                              ; preds = %326, %330, %365, %316
  %426 = phi i32 [ %50, %326 ], [ %335, %330 ], [ %2, %365 ], [ %2, %316 ]
  %427 = load i8*, i8** %15, align 8
  br label %428

428:                                              ; preds = %180, %425
  %429 = phi i8* [ %427, %425 ], [ %136, %180 ]
  %430 = phi i32 [ %426, %425 ], [ %2, %180 ]
  %431 = icmp eq i8* %429, %16
  br i1 %431, label %433, label %432

432:                                              ; preds = %428
  call void @uprv_free_69(i8* %429) #6
  br label %433

433:                                              ; preds = %428, %432
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #6
  br label %434

434:                                              ; preds = %433, %9, %7
  %435 = phi i32 [ %8, %7 ], [ %430, %433 ], [ %2, %9 ]
  ret i32 %435
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK6icu_6920UnicodeSetStringSpan7spanNotEPKDsi(%"class.icu_69::UnicodeSetStringSpan"*, i16*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 3
  %5 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %4, align 8
  %6 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %5, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 1
  %10 = icmp sgt i32 %7, 0
  %11 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 5
  %12 = zext i32 %7 to i64
  br label %13

13:                                               ; preds = %132, %3
  %14 = phi i32 [ 0, %3 ], [ %133, %132 ]
  %15 = phi i32 [ %2, %3 ], [ %134, %132 ]
  %16 = load %"class.icu_69::UnicodeSet"*, %"class.icu_69::UnicodeSet"** %8, align 8
  %17 = sext i32 %14 to i64
  %18 = getelementptr inbounds i16, i16* %1, i64 %17
  %19 = tail call i32 @_ZNK6icu_6910UnicodeSet4spanEPKDsi17USetSpanCondition(%"class.icu_69::UnicodeSet"* %16, i16* %18, i32 %15, i32 0) #6
  %20 = icmp eq i32 %15, %19
  br i1 %20, label %136, label %21

21:                                               ; preds = %13
  %22 = add nsw i32 %19, %14
  %23 = sub nsw i32 %15, %19
  %24 = sext i32 %22 to i64
  %25 = getelementptr inbounds i16, i16* %1, i64 %24
  %26 = load i16, i16* %25, align 2
  %27 = zext i16 %26 to i32
  %28 = icmp ugt i16 %26, -10241
  br i1 %28, label %29, label %45

29:                                               ; preds = %21
  %30 = icmp ult i16 %26, -9216
  %31 = icmp sgt i32 %23, 1
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %45

33:                                               ; preds = %29
  %34 = getelementptr inbounds i16, i16* %25, i64 1
  %35 = load i16, i16* %34, align 2
  %36 = zext i16 %35 to i32
  %37 = and i32 %36, 64512
  %38 = icmp eq i32 %37, 56320
  br i1 %38, label %39, label %45

39:                                               ; preds = %33
  %40 = shl nuw nsw i32 %27, 10
  %41 = add nsw i32 %40, -56613888
  %42 = add nsw i32 %41, %36
  %43 = tail call signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"* %9, i32 %42) #6
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %48, label %136

45:                                               ; preds = %33, %29, %21
  %46 = tail call signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"* %9, i32 %27) #6
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %136

48:                                               ; preds = %45, %39
  %49 = phi i32 [ -2, %39 ], [ -1, %45 ]
  br i1 %10, label %50, label %132

50:                                               ; preds = %48
  %51 = sub nsw i32 %2, %22
  %52 = icmp sgt i32 %22, 0
  %53 = getelementptr inbounds i16, i16* %25, i64 -1
  br label %54

54:                                               ; preds = %129, %50
  %55 = phi i64 [ 0, %50 ], [ %130, %129 ]
  %56 = load i8*, i8** %11, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %55
  %58 = load i8, i8* %57, align 1
  %59 = icmp eq i8 %58, -1
  br i1 %59, label %129, label %60

60:                                               ; preds = %54
  %61 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %4, align 8
  %62 = trunc i64 %55 to i32
  %63 = tail call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %61, i32 %62) #6
  %64 = getelementptr inbounds i8, i8* %63, i64 8
  %65 = bitcast i8* %64 to i16*
  %66 = load i16, i16* %65, align 8
  %67 = sext i16 %66 to i32
  %68 = and i32 %67, 17
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %80

70:                                               ; preds = %60
  %71 = and i32 %67, 2
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds i8, i8* %63, i64 10
  %75 = bitcast i8* %74 to i16*
  br label %80

76:                                               ; preds = %70
  %77 = getelementptr inbounds i8, i8* %63, i64 24
  %78 = bitcast i8* %77 to i16**
  %79 = load i16*, i16** %78, align 8
  br label %80

80:                                               ; preds = %60, %73, %76
  %81 = phi i16* [ %75, %73 ], [ %79, %76 ], [ null, %60 ]
  %82 = icmp slt i16 %66, 0
  br i1 %82, label %86, label %83

83:                                               ; preds = %80
  %84 = lshr i16 %66, 5
  %85 = zext i16 %84 to i32
  br label %90

86:                                               ; preds = %80
  %87 = getelementptr inbounds i8, i8* %63, i64 12
  %88 = bitcast i8* %87 to i32*
  %89 = load i32, i32* %88, align 4
  br label %90

90:                                               ; preds = %83, %86
  %91 = phi i32 [ %85, %83 ], [ %89, %86 ]
  %92 = icmp sgt i32 %91, %23
  br i1 %92, label %129, label %93

93:                                               ; preds = %90, %100
  %94 = phi i16* [ %102, %100 ], [ %25, %90 ]
  %95 = phi i16* [ %101, %100 ], [ %81, %90 ]
  %96 = phi i32 [ %103, %100 ], [ %91, %90 ]
  %97 = load i16, i16* %94, align 2
  %98 = load i16, i16* %95, align 2
  %99 = icmp eq i16 %97, %98
  br i1 %99, label %100, label %129

100:                                              ; preds = %93
  %101 = getelementptr inbounds i16, i16* %95, i64 1
  %102 = getelementptr inbounds i16, i16* %94, i64 1
  %103 = add nsw i32 %96, -1
  %104 = icmp sgt i32 %103, 0
  br i1 %104, label %93, label %105

105:                                              ; preds = %100
  br i1 %52, label %106, label %114

106:                                              ; preds = %105
  %107 = load i16, i16* %53, align 2
  %108 = and i16 %107, -1024
  %109 = icmp eq i16 %108, -10240
  br i1 %109, label %110, label %114

110:                                              ; preds = %106
  %111 = load i16, i16* %25, align 2
  %112 = and i16 %111, -1024
  %113 = icmp eq i16 %112, -9216
  br i1 %113, label %129, label %114

114:                                              ; preds = %110, %106, %105
  %115 = icmp sgt i32 %51, %91
  br i1 %115, label %116, label %136

116:                                              ; preds = %114
  %117 = add nsw i32 %91, -1
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds i16, i16* %25, i64 %118
  %120 = load i16, i16* %119, align 2
  %121 = and i16 %120, -1024
  %122 = icmp eq i16 %121, -10240
  br i1 %122, label %123, label %136

123:                                              ; preds = %116
  %124 = sext i32 %91 to i64
  %125 = getelementptr inbounds i16, i16* %25, i64 %124
  %126 = load i16, i16* %125, align 2
  %127 = and i16 %126, -1024
  %128 = icmp eq i16 %127, -9216
  br i1 %128, label %129, label %136

129:                                              ; preds = %93, %110, %123, %90, %54
  %130 = add nuw nsw i64 %55, 1
  %131 = icmp eq i64 %130, %12
  br i1 %131, label %132, label %54

132:                                              ; preds = %129, %48
  %133 = sub nsw i32 %22, %49
  %134 = add nsw i32 %49, %23
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %13

136:                                              ; preds = %45, %39, %132, %13, %114, %116, %123
  %137 = phi i32 [ %22, %123 ], [ %22, %116 ], [ %22, %114 ], [ %22, %45 ], [ %22, %39 ], [ %2, %132 ], [ %2, %13 ]
  ret i32 %137
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK6icu_6920UnicodeSetStringSpan8spanBackEPKDsi17USetSpanCondition(%"class.icu_69::UnicodeSetStringSpan"*, i16*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.icu_69::OffsetList", align 8
  %6 = icmp eq i32 %3, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i32 @_ZNK6icu_6920UnicodeSetStringSpan11spanNotBackEPKDsi(%"class.icu_69::UnicodeSetStringSpan"* %0, i16* %1, i32 %2)
  br label %431

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 1
  %11 = tail call i32 @_ZNK6icu_6910UnicodeSet8spanBackEPKDsi17USetSpanCondition(%"class.icu_69::UnicodeSet"* %10, i16* %1, i32 %2, i32 1) #6
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %431, label %13

13:                                               ; preds = %9
  %14 = sub nsw i32 %2, %11
  %15 = bitcast %"class.icu_69::OffsetList"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 40, i1 false)
  %16 = getelementptr inbounds %"class.icu_69::OffsetList", %"class.icu_69::OffsetList"* %5, i64 0, i32 0
  %17 = getelementptr inbounds %"class.icu_69::OffsetList", %"class.icu_69::OffsetList"* %5, i64 0, i32 4, i64 0
  store i8* %17, i8** %16, align 8
  %18 = getelementptr inbounds %"class.icu_69::OffsetList", %"class.icu_69::OffsetList"* %5, i64 0, i32 1
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.icu_69::OffsetList", %"class.icu_69::OffsetList"* %5, i64 0, i32 2
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %"class.icu_69::OffsetList", %"class.icu_69::OffsetList"* %5, i64 0, i32 3
  store i32 0, i32* %20, align 8
  %21 = icmp eq i32 %3, 1
  br i1 %21, label %22, label %39

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 8
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %24, 17
  br i1 %25, label %26, label %27

26:                                               ; preds = %22
  store i32 16, i32* %18, align 8
  br label %35

27:                                               ; preds = %22
  %28 = sext i32 %24 to i64
  %29 = call noalias i8* @uprv_malloc_69(i64 %28) #7
  %30 = icmp eq i8* %29, null
  br i1 %30, label %31, label %34

31:                                               ; preds = %27
  %32 = load i32, i32* %18, align 8
  %33 = load i8*, i8** %16, align 8
  br label %35

34:                                               ; preds = %27
  store i8* %29, i8** %16, align 8
  store i32 %24, i32* %18, align 8
  br label %35

35:                                               ; preds = %26, %31, %34
  %36 = phi i8* [ %33, %31 ], [ %29, %34 ], [ %17, %26 ]
  %37 = phi i32 [ %32, %31 ], [ %24, %34 ], [ 16, %26 ]
  %38 = sext i32 %37 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %36, i8 0, i64 %38, i1 false) #6
  br label %39

39:                                               ; preds = %35, %13
  %40 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 3
  %41 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %40, align 8
  %42 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %41, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 5
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 10
  %47 = load i8, i8* %46, align 4
  %48 = icmp eq i8 %47, 0
  %49 = sext i32 %43 to i64
  %50 = getelementptr inbounds i8, i8* %45, i64 %49
  %51 = select i1 %48, i8* %45, i8* %50
  %52 = icmp sgt i32 %43, 0
  %53 = sext i32 %2 to i64
  %54 = zext i32 %43 to i64
  %55 = zext i32 %43 to i64
  br label %56

56:                                               ; preds = %336, %39
  %57 = phi i32 [ %14, %39 ], [ %337, %336 ]
  %58 = phi i32 [ %11, %39 ], [ %338, %336 ]
  br i1 %21, label %62, label %59

59:                                               ; preds = %56
  br i1 %52, label %60, label %314

60:                                               ; preds = %59
  %61 = sext i32 %58 to i64
  br label %198

62:                                               ; preds = %56
  br i1 %52, label %63, label %322

63:                                               ; preds = %62
  %64 = sext i32 %58 to i64
  br label %65

65:                                               ; preds = %195, %63
  %66 = phi i64 [ 0, %63 ], [ %196, %195 ]
  %67 = getelementptr inbounds i8, i8* %51, i64 %66
  %68 = load i8, i8* %67, align 1
  %69 = icmp eq i8 %68, -1
  br i1 %69, label %195, label %70

70:                                               ; preds = %65
  %71 = zext i8 %68 to i32
  %72 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %40, align 8
  %73 = trunc i64 %66 to i32
  %74 = call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %72, i32 %73) #6
  %75 = getelementptr inbounds i8, i8* %74, i64 8
  %76 = bitcast i8* %75 to i16*
  %77 = load i16, i16* %76, align 8
  %78 = sext i16 %77 to i32
  %79 = and i32 %78, 17
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %91

81:                                               ; preds = %70
  %82 = and i32 %78, 2
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %87, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds i8, i8* %74, i64 10
  %86 = bitcast i8* %85 to i16*
  br label %91

87:                                               ; preds = %81
  %88 = getelementptr inbounds i8, i8* %74, i64 24
  %89 = bitcast i8* %88 to i16**
  %90 = load i16*, i16** %89, align 8
  br label %91

91:                                               ; preds = %70, %84, %87
  %92 = phi i16* [ %86, %84 ], [ %90, %87 ], [ null, %70 ]
  %93 = icmp slt i16 %77, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %91
  %95 = lshr i16 %77, 5
  %96 = zext i16 %95 to i32
  br label %101

97:                                               ; preds = %91
  %98 = getelementptr inbounds i8, i8* %74, i64 12
  %99 = bitcast i8* %98 to i32*
  %100 = load i32, i32* %99, align 4
  br label %101

101:                                              ; preds = %94, %97
  %102 = phi i32 [ %96, %94 ], [ %100, %97 ]
  %103 = icmp eq i8 %68, -2
  br i1 %103, label %104, label %119

104:                                              ; preds = %101
  %105 = load i16, i16* %92, align 2
  %106 = and i16 %105, -1024
  %107 = icmp ne i16 %106, -10240
  %108 = icmp eq i32 %102, 1
  %109 = or i1 %108, %107
  br i1 %109, label %116, label %110

110:                                              ; preds = %104
  %111 = getelementptr inbounds i16, i16* %92, i64 1
  %112 = load i16, i16* %111, align 2
  %113 = and i16 %112, -1024
  %114 = icmp eq i16 %113, -9216
  %115 = select i1 %114, i32 2, i32 1
  br label %116

116:                                              ; preds = %110, %104
  %117 = phi i32 [ 1, %104 ], [ %115, %110 ]
  %118 = sub nsw i32 %102, %117
  br label %119

119:                                              ; preds = %116, %101
  %120 = phi i32 [ %118, %116 ], [ %71, %101 ]
  %121 = icmp sgt i32 %120, %57
  %122 = select i1 %121, i32 %57, i32 %120
  %123 = sub i32 %102, %122
  %124 = icmp slt i32 %58, %123
  br i1 %124, label %195, label %125

125:                                              ; preds = %119
  %126 = add nsw i32 %102, -1
  %127 = sext i32 %126 to i64
  %128 = sext i32 %102 to i64
  %129 = sext i32 %123 to i64
  br label %130

130:                                              ; preds = %191, %125
  %131 = phi i64 [ %193, %191 ], [ %129, %125 ]
  %132 = phi i32 [ %192, %191 ], [ %122, %125 ]
  %133 = load i32, i32* %20, align 8
  %134 = trunc i64 %131 to i32
  %135 = add nsw i32 %133, %134
  %136 = load i32, i32* %18, align 8
  %137 = icmp slt i32 %135, %136
  %138 = select i1 %137, i32 0, i32 %136
  %139 = sub nsw i32 %135, %138
  %140 = load i8*, i8** %16, align 8
  %141 = sext i32 %139 to i64
  %142 = getelementptr inbounds i8, i8* %140, i64 %141
  %143 = load i8, i8* %142, align 1
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %145, label %189

145:                                              ; preds = %130
  %146 = sub nsw i64 %64, %131
  %147 = getelementptr inbounds i16, i16* %1, i64 %146
  %148 = sub nsw i64 %53, %146
  br label %149

149:                                              ; preds = %156, %145
  %150 = phi i16* [ %147, %145 ], [ %158, %156 ]
  %151 = phi i16* [ %92, %145 ], [ %157, %156 ]
  %152 = phi i32 [ %102, %145 ], [ %159, %156 ]
  %153 = load i16, i16* %150, align 2
  %154 = load i16, i16* %151, align 2
  %155 = icmp eq i16 %153, %154
  br i1 %155, label %156, label %189

156:                                              ; preds = %149
  %157 = getelementptr inbounds i16, i16* %151, i64 1
  %158 = getelementptr inbounds i16, i16* %150, i64 1
  %159 = add nsw i32 %152, -1
  %160 = icmp sgt i32 %159, 0
  br i1 %160, label %149, label %161

161:                                              ; preds = %156
  %162 = icmp sgt i64 %146, 0
  br i1 %162, label %163, label %172

163:                                              ; preds = %161
  %164 = getelementptr inbounds i16, i16* %147, i64 -1
  %165 = load i16, i16* %164, align 2
  %166 = and i16 %165, -1024
  %167 = icmp eq i16 %166, -10240
  br i1 %167, label %168, label %172

168:                                              ; preds = %163
  %169 = load i16, i16* %147, align 2
  %170 = and i16 %169, -1024
  %171 = icmp eq i16 %170, -9216
  br i1 %171, label %189, label %172

172:                                              ; preds = %168, %163, %161
  %173 = icmp sgt i64 %148, %128
  br i1 %173, label %174, label %184

174:                                              ; preds = %172
  %175 = getelementptr inbounds i16, i16* %147, i64 %127
  %176 = load i16, i16* %175, align 2
  %177 = and i16 %176, -1024
  %178 = icmp eq i16 %177, -10240
  br i1 %178, label %179, label %184

179:                                              ; preds = %174
  %180 = getelementptr inbounds i16, i16* %147, i64 %128
  %181 = load i16, i16* %180, align 2
  %182 = and i16 %181, -1024
  %183 = icmp eq i16 %182, -9216
  br i1 %183, label %189, label %184

184:                                              ; preds = %172, %174, %179
  %185 = icmp eq i64 %131, %64
  br i1 %185, label %425, label %186

186:                                              ; preds = %184
  store i8 1, i8* %142, align 1
  %187 = load i32, i32* %19, align 4
  %188 = add nsw i32 %187, 1
  store i32 %188, i32* %19, align 4
  br label %189

189:                                              ; preds = %149, %168, %179, %130, %186
  %190 = icmp eq i32 %132, 0
  br i1 %190, label %195, label %191

191:                                              ; preds = %189
  %192 = add nsw i32 %132, -1
  %193 = add nsw i64 %131, 1
  %194 = icmp slt i64 %131, %64
  br i1 %194, label %130, label %195

195:                                              ; preds = %191, %189, %119, %65
  %196 = add nuw nsw i64 %66, 1
  %197 = icmp eq i64 %196, %55
  br i1 %197, label %322, label %65

198:                                              ; preds = %309, %60
  %199 = phi i64 [ 0, %60 ], [ %312, %309 ]
  %200 = phi i32 [ 0, %60 ], [ %311, %309 ]
  %201 = phi i32 [ 0, %60 ], [ %310, %309 ]
  %202 = getelementptr inbounds i8, i8* %51, i64 %199
  %203 = load i8, i8* %202, align 1
  %204 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %40, align 8
  %205 = trunc i64 %199 to i32
  %206 = call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %204, i32 %205) #6
  %207 = getelementptr inbounds i8, i8* %206, i64 8
  %208 = bitcast i8* %207 to i16*
  %209 = load i16, i16* %208, align 8
  %210 = sext i16 %209 to i32
  %211 = and i32 %210, 17
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %223

213:                                              ; preds = %198
  %214 = and i32 %210, 2
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %219, label %216

216:                                              ; preds = %213
  %217 = getelementptr inbounds i8, i8* %206, i64 10
  %218 = bitcast i8* %217 to i16*
  br label %223

219:                                              ; preds = %213
  %220 = getelementptr inbounds i8, i8* %206, i64 24
  %221 = bitcast i8* %220 to i16**
  %222 = load i16*, i16** %221, align 8
  br label %223

223:                                              ; preds = %198, %216, %219
  %224 = phi i16* [ %218, %216 ], [ %222, %219 ], [ null, %198 ]
  %225 = icmp slt i16 %209, 0
  br i1 %225, label %229, label %226

226:                                              ; preds = %223
  %227 = lshr i16 %209, 5
  %228 = zext i16 %227 to i32
  br label %233

229:                                              ; preds = %223
  %230 = getelementptr inbounds i8, i8* %206, i64 12
  %231 = bitcast i8* %230 to i32*
  %232 = load i32, i32* %231, align 4
  br label %233

233:                                              ; preds = %226, %229
  %234 = phi i32 [ %228, %226 ], [ %232, %229 ]
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %309, label %236

236:                                              ; preds = %233
  %237 = zext i8 %203 to i32
  %238 = icmp ugt i8 %203, -3
  %239 = select i1 %238, i32 %234, i32 %237
  %240 = icmp sgt i32 %239, %57
  %241 = select i1 %240, i32 %57, i32 %239
  %242 = sub i32 %234, %241
  %243 = add nsw i32 %234, -1
  %244 = sext i32 %243 to i64
  %245 = sext i32 %234 to i64
  %246 = icmp slt i32 %58, %242
  %247 = icmp slt i32 %241, %200
  %248 = or i1 %247, %246
  br i1 %248, label %309, label %249

249:                                              ; preds = %236
  %250 = sext i32 %242 to i64
  %251 = sext i32 %201 to i64
  br label %252

252:                                              ; preds = %249, %297
  %253 = phi i64 [ %250, %249 ], [ %299, %297 ]
  %254 = phi i32 [ %241, %249 ], [ %298, %297 ]
  %255 = icmp sgt i32 %254, %200
  %256 = icmp sgt i64 %253, %251
  %257 = or i1 %255, %256
  br i1 %257, label %258, label %297

258:                                              ; preds = %252
  %259 = sub nsw i64 %61, %253
  %260 = getelementptr inbounds i16, i16* %1, i64 %259
  %261 = sub nsw i64 %53, %259
  br label %262

262:                                              ; preds = %269, %258
  %263 = phi i16* [ %260, %258 ], [ %271, %269 ]
  %264 = phi i16* [ %224, %258 ], [ %270, %269 ]
  %265 = phi i32 [ %234, %258 ], [ %272, %269 ]
  %266 = load i16, i16* %263, align 2
  %267 = load i16, i16* %264, align 2
  %268 = icmp eq i16 %266, %267
  br i1 %268, label %269, label %297

269:                                              ; preds = %262
  %270 = getelementptr inbounds i16, i16* %264, i64 1
  %271 = getelementptr inbounds i16, i16* %263, i64 1
  %272 = add nsw i32 %265, -1
  %273 = icmp sgt i32 %272, 0
  br i1 %273, label %262, label %274

274:                                              ; preds = %269
  %275 = icmp sgt i64 %259, 0
  br i1 %275, label %276, label %285

276:                                              ; preds = %274
  %277 = getelementptr inbounds i16, i16* %260, i64 -1
  %278 = load i16, i16* %277, align 2
  %279 = and i16 %278, -1024
  %280 = icmp eq i16 %279, -10240
  br i1 %280, label %281, label %285

281:                                              ; preds = %276
  %282 = load i16, i16* %260, align 2
  %283 = and i16 %282, -1024
  %284 = icmp eq i16 %283, -9216
  br i1 %284, label %297, label %285

285:                                              ; preds = %281, %276, %274
  %286 = icmp sgt i64 %261, %245
  br i1 %286, label %287, label %303

287:                                              ; preds = %285
  %288 = getelementptr inbounds i16, i16* %260, i64 %244
  %289 = load i16, i16* %288, align 2
  %290 = and i16 %289, -1024
  %291 = icmp eq i16 %290, -10240
  br i1 %291, label %292, label %305

292:                                              ; preds = %287
  %293 = getelementptr inbounds i16, i16* %260, i64 %245
  %294 = load i16, i16* %293, align 2
  %295 = and i16 %294, -1024
  %296 = icmp eq i16 %295, -9216
  br i1 %296, label %297, label %307

297:                                              ; preds = %262, %281, %252, %292
  %298 = add nsw i32 %254, -1
  %299 = add nsw i64 %253, 1
  %300 = icmp sge i64 %253, %61
  %301 = icmp sle i32 %254, %200
  %302 = or i1 %301, %300
  br i1 %302, label %309, label %252

303:                                              ; preds = %285
  %304 = trunc i64 %253 to i32
  br label %309

305:                                              ; preds = %287
  %306 = trunc i64 %253 to i32
  br label %309

307:                                              ; preds = %292
  %308 = trunc i64 %253 to i32
  br label %309

309:                                              ; preds = %297, %303, %305, %307, %236, %233
  %310 = phi i32 [ %201, %233 ], [ %201, %236 ], [ %304, %303 ], [ %306, %305 ], [ %308, %307 ], [ %201, %297 ]
  %311 = phi i32 [ %200, %233 ], [ %200, %236 ], [ %254, %303 ], [ %254, %305 ], [ %254, %307 ], [ %200, %297 ]
  %312 = add nuw nsw i64 %199, 1
  %313 = icmp eq i64 %312, %54
  br i1 %313, label %314, label %198

314:                                              ; preds = %309, %59
  %315 = phi i32 [ 0, %59 ], [ %310, %309 ]
  %316 = phi i32 [ 0, %59 ], [ %311, %309 ]
  %317 = or i32 %316, %315
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %322, label %319

319:                                              ; preds = %314
  %320 = sub nsw i32 %58, %315
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %425, label %336

322:                                              ; preds = %195, %62, %314
  %323 = icmp ne i32 %57, 0
  %324 = icmp eq i32 %58, %2
  %325 = or i1 %323, %324
  %326 = load i32, i32* %19, align 4
  %327 = icmp ne i32 %326, 0
  br i1 %325, label %328, label %329

328:                                              ; preds = %322
  br i1 %327, label %387, label %425

329:                                              ; preds = %322
  br i1 %327, label %339, label %330

330:                                              ; preds = %329
  %331 = call i32 @_ZNK6icu_6910UnicodeSet8spanBackEPKDsi17USetSpanCondition(%"class.icu_69::UnicodeSet"* %10, i16* %1, i32 %58, i32 1) #6
  %332 = sub nsw i32 %58, %331
  %333 = icmp eq i32 %331, 0
  %334 = icmp eq i32 %332, 0
  %335 = or i1 %333, %334
  br i1 %335, label %425, label %336

336:                                              ; preds = %330, %386, %422, %319
  %337 = phi i32 [ %332, %330 ], [ 0, %386 ], [ 0, %422 ], [ 0, %319 ]
  %338 = phi i32 [ %331, %330 ], [ %371, %386 ], [ %424, %422 ], [ %320, %319 ]
  br label %56

339:                                              ; preds = %329
  %340 = add nsw i32 %58, -1
  %341 = sext i32 %340 to i64
  %342 = getelementptr inbounds i16, i16* %1, i64 %341
  %343 = load i16, i16* %342, align 2
  %344 = zext i16 %343 to i32
  %345 = icmp ugt i16 %343, -9217
  br i1 %345, label %346, label %364

346:                                              ; preds = %339
  %347 = icmp ult i16 %343, -8192
  %348 = icmp sgt i32 %58, 1
  %349 = and i1 %348, %347
  br i1 %349, label %350, label %364

350:                                              ; preds = %346
  %351 = add nsw i32 %58, -2
  %352 = sext i32 %351 to i64
  %353 = getelementptr inbounds i16, i16* %1, i64 %352
  %354 = load i16, i16* %353, align 2
  %355 = zext i16 %354 to i32
  %356 = and i32 %355, 64512
  %357 = icmp eq i32 %356, 55296
  br i1 %357, label %358, label %364

358:                                              ; preds = %350
  %359 = shl nuw nsw i32 %355, 10
  %360 = add nuw nsw i32 %344, -56613888
  %361 = add nsw i32 %360, %359
  %362 = call signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"* %10, i32 %361) #6
  %363 = icmp eq i8 %362, 0
  br i1 %363, label %387, label %367

364:                                              ; preds = %350, %346, %339
  %365 = call signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"* %10, i32 %344) #6
  %366 = icmp eq i8 %365, 0
  br i1 %366, label %387, label %367

367:                                              ; preds = %358, %364
  %368 = phi i32 [ 1, %364 ], [ 2, %358 ]
  %369 = icmp eq i32 %58, %368
  br i1 %369, label %425, label %370

370:                                              ; preds = %367
  %371 = sub nsw i32 %58, %368
  %372 = load i32, i32* %20, align 8
  %373 = add nsw i32 %372, %368
  %374 = load i32, i32* %18, align 8
  %375 = icmp slt i32 %373, %374
  %376 = select i1 %375, i32 0, i32 %374
  %377 = sub nsw i32 %373, %376
  %378 = load i8*, i8** %16, align 8
  %379 = sext i32 %377 to i64
  %380 = getelementptr inbounds i8, i8* %378, i64 %379
  %381 = load i8, i8* %380, align 1
  %382 = icmp eq i8 %381, 0
  br i1 %382, label %386, label %383

383:                                              ; preds = %370
  store i8 0, i8* %380, align 1
  %384 = load i32, i32* %19, align 4
  %385 = add nsw i32 %384, -1
  store i32 %385, i32* %19, align 4
  br label %386

386:                                              ; preds = %370, %383
  store i32 %377, i32* %20, align 8
  br label %336

387:                                              ; preds = %364, %358, %328
  %388 = load i32, i32* %20, align 8
  %389 = load i32, i32* %18, align 8
  %390 = sext i32 %388 to i64
  %391 = sext i32 %389 to i64
  %392 = load i8*, i8** %16, align 8
  br label %393

393:                                              ; preds = %397, %387
  %394 = phi i64 [ %395, %397 ], [ %390, %387 ]
  %395 = add nsw i64 %394, 1
  %396 = icmp slt i64 %395, %391
  br i1 %396, label %397, label %408

397:                                              ; preds = %393
  %398 = getelementptr inbounds i8, i8* %392, i64 %395
  %399 = load i8, i8* %398, align 1
  %400 = icmp eq i8 %399, 0
  br i1 %400, label %393, label %401

401:                                              ; preds = %397
  %402 = getelementptr inbounds i8, i8* %392, i64 %395
  %403 = trunc i64 %395 to i32
  store i8 0, i8* %402, align 1
  %404 = load i32, i32* %19, align 4
  %405 = add nsw i32 %404, -1
  store i32 %405, i32* %19, align 4
  %406 = load i32, i32* %20, align 8
  %407 = sub nsw i32 %403, %406
  store i32 %403, i32* %20, align 8
  br label %422

408:                                              ; preds = %393, %408
  %409 = phi i64 [ %413, %408 ], [ 0, %393 ]
  %410 = getelementptr inbounds i8, i8* %392, i64 %409
  %411 = load i8, i8* %410, align 1
  %412 = icmp eq i8 %411, 0
  %413 = add nuw i64 %409, 1
  br i1 %412, label %408, label %414

414:                                              ; preds = %408
  %415 = sub i32 %389, %388
  %416 = trunc i64 %409 to i32
  %417 = and i64 %409, 4294967295
  %418 = getelementptr inbounds i8, i8* %392, i64 %417
  store i8 0, i8* %418, align 1
  %419 = load i32, i32* %19, align 4
  %420 = add nsw i32 %419, -1
  store i32 %420, i32* %19, align 4
  store i32 %416, i32* %20, align 8
  %421 = add nsw i32 %415, %416
  br label %422

422:                                              ; preds = %401, %414
  %423 = phi i32 [ %407, %401 ], [ %421, %414 ]
  %424 = sub nsw i32 %58, %423
  br label %336

425:                                              ; preds = %330, %319, %367, %328, %184
  %426 = phi i32 [ 0, %184 ], [ %331, %330 ], [ %58, %328 ], [ 0, %367 ], [ 0, %319 ]
  %427 = load i8*, i8** %16, align 8
  %428 = icmp eq i8* %427, %17
  br i1 %428, label %430, label %429

429:                                              ; preds = %425
  call void @uprv_free_69(i8* %427) #6
  br label %430

430:                                              ; preds = %425, %429
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #6
  br label %431

431:                                              ; preds = %430, %9, %7
  %432 = phi i32 [ %8, %7 ], [ %426, %430 ], [ 0, %9 ]
  ret i32 %432
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK6icu_6920UnicodeSetStringSpan11spanNotBackEPKDsi(%"class.icu_69::UnicodeSetStringSpan"*, i16*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 3
  %5 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %4, align 8
  %6 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %5, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 1
  %10 = icmp sgt i32 %7, 0
  %11 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 5
  %12 = zext i32 %7 to i64
  br label %13

13:                                               ; preds = %133, %3
  %14 = phi i32 [ %2, %3 ], [ %134, %133 ]
  %15 = load %"class.icu_69::UnicodeSet"*, %"class.icu_69::UnicodeSet"** %8, align 8
  %16 = tail call i32 @_ZNK6icu_6910UnicodeSet8spanBackEPKDsi17USetSpanCondition(%"class.icu_69::UnicodeSet"* %15, i16* %1, i32 %14, i32 0) #6
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %136, label %18

18:                                               ; preds = %13
  %19 = add nsw i32 %16, -1
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i16, i16* %1, i64 %20
  %22 = load i16, i16* %21, align 2
  %23 = zext i16 %22 to i32
  %24 = icmp ugt i16 %22, -9217
  br i1 %24, label %25, label %43

25:                                               ; preds = %18
  %26 = icmp ult i16 %22, -8192
  %27 = icmp sgt i32 %16, 1
  %28 = and i1 %27, %26
  br i1 %28, label %29, label %43

29:                                               ; preds = %25
  %30 = add nsw i32 %16, -2
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i16, i16* %1, i64 %31
  %33 = load i16, i16* %32, align 2
  %34 = zext i16 %33 to i32
  %35 = and i32 %34, 64512
  %36 = icmp eq i32 %35, 55296
  br i1 %36, label %37, label %43

37:                                               ; preds = %29
  %38 = shl nuw nsw i32 %34, 10
  %39 = add nuw nsw i32 %23, -56613888
  %40 = add nsw i32 %39, %38
  %41 = tail call signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"* %9, i32 %40) #6
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %46, label %136

43:                                               ; preds = %29, %25, %18
  %44 = tail call signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"* %9, i32 %23) #6
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %136

46:                                               ; preds = %43, %37
  %47 = phi i32 [ -2, %37 ], [ -1, %43 ]
  br i1 %10, label %48, label %133

48:                                               ; preds = %46, %130
  %49 = phi i64 [ %131, %130 ], [ 0, %46 ]
  %50 = load i8*, i8** %11, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %49
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %52, -1
  br i1 %53, label %130, label %54

54:                                               ; preds = %48
  %55 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %4, align 8
  %56 = trunc i64 %49 to i32
  %57 = tail call i8* @_ZNK6icu_697UVector9elementAtEi(%"class.icu_69::UVector"* %55, i32 %56) #6
  %58 = getelementptr inbounds i8, i8* %57, i64 8
  %59 = bitcast i8* %58 to i16*
  %60 = load i16, i16* %59, align 8
  %61 = sext i16 %60 to i32
  %62 = and i32 %61, 17
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %74

64:                                               ; preds = %54
  %65 = and i32 %61, 2
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %70, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds i8, i8* %57, i64 10
  %69 = bitcast i8* %68 to i16*
  br label %74

70:                                               ; preds = %64
  %71 = getelementptr inbounds i8, i8* %57, i64 24
  %72 = bitcast i8* %71 to i16**
  %73 = load i16*, i16** %72, align 8
  br label %74

74:                                               ; preds = %54, %67, %70
  %75 = phi i16* [ %69, %67 ], [ %73, %70 ], [ null, %54 ]
  %76 = icmp slt i16 %60, 0
  br i1 %76, label %80, label %77

77:                                               ; preds = %74
  %78 = lshr i16 %60, 5
  %79 = zext i16 %78 to i32
  br label %84

80:                                               ; preds = %74
  %81 = getelementptr inbounds i8, i8* %57, i64 12
  %82 = bitcast i8* %81 to i32*
  %83 = load i32, i32* %82, align 4
  br label %84

84:                                               ; preds = %77, %80
  %85 = phi i32 [ %79, %77 ], [ %83, %80 ]
  %86 = icmp slt i32 %16, %85
  br i1 %86, label %130, label %87

87:                                               ; preds = %84
  %88 = sub nsw i32 %16, %85
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds i16, i16* %1, i64 %89
  %91 = sub nsw i32 %2, %88
  br label %92

92:                                               ; preds = %99, %87
  %93 = phi i16* [ %90, %87 ], [ %101, %99 ]
  %94 = phi i16* [ %75, %87 ], [ %100, %99 ]
  %95 = phi i32 [ %85, %87 ], [ %102, %99 ]
  %96 = load i16, i16* %93, align 2
  %97 = load i16, i16* %94, align 2
  %98 = icmp eq i16 %96, %97
  br i1 %98, label %99, label %130

99:                                               ; preds = %92
  %100 = getelementptr inbounds i16, i16* %94, i64 1
  %101 = getelementptr inbounds i16, i16* %93, i64 1
  %102 = add nsw i32 %95, -1
  %103 = icmp sgt i32 %102, 0
  br i1 %103, label %92, label %104

104:                                              ; preds = %99
  %105 = icmp sgt i32 %88, 0
  br i1 %105, label %106, label %115

106:                                              ; preds = %104
  %107 = getelementptr inbounds i16, i16* %90, i64 -1
  %108 = load i16, i16* %107, align 2
  %109 = and i16 %108, -1024
  %110 = icmp eq i16 %109, -10240
  br i1 %110, label %111, label %115

111:                                              ; preds = %106
  %112 = load i16, i16* %90, align 2
  %113 = and i16 %112, -1024
  %114 = icmp eq i16 %113, -9216
  br i1 %114, label %130, label %115

115:                                              ; preds = %111, %106, %104
  %116 = icmp sgt i32 %91, %85
  br i1 %116, label %117, label %136

117:                                              ; preds = %115
  %118 = add nsw i32 %85, -1
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds i16, i16* %90, i64 %119
  %121 = load i16, i16* %120, align 2
  %122 = and i16 %121, -1024
  %123 = icmp eq i16 %122, -10240
  br i1 %123, label %124, label %136

124:                                              ; preds = %117
  %125 = sext i32 %85 to i64
  %126 = getelementptr inbounds i16, i16* %90, i64 %125
  %127 = load i16, i16* %126, align 2
  %128 = and i16 %127, -1024
  %129 = icmp eq i16 %128, -9216
  br i1 %129, label %130, label %136

130:                                              ; preds = %92, %111, %124, %84, %48
  %131 = add nuw nsw i64 %49, 1
  %132 = icmp eq i64 %131, %12
  br i1 %132, label %133, label %48

133:                                              ; preds = %130, %46
  %134 = add nsw i32 %47, %16
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %13

136:                                              ; preds = %43, %37, %133, %13, %115, %117, %124
  %137 = phi i32 [ %16, %124 ], [ %16, %117 ], [ %16, %115 ], [ %16, %43 ], [ %16, %37 ], [ 0, %133 ], [ 0, %13 ]
  ret i32 %137
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK6icu_6920UnicodeSetStringSpan8spanUTF8EPKhi17USetSpanCondition(%"class.icu_69::UnicodeSetStringSpan"*, i8*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.icu_69::OffsetList", align 8
  %6 = icmp eq i32 %3, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i32 @_ZNK6icu_6920UnicodeSetStringSpan11spanNotUTF8EPKhi(%"class.icu_69::UnicodeSetStringSpan"* %0, i8* %1, i32 %2)
  br label %326

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 1
  %11 = tail call i32 @_ZNK6icu_6910UnicodeSet8spanUTF8EPKci17USetSpanCondition(%"class.icu_69::UnicodeSet"* %10, i8* %1, i32 %2, i32 1) #6
  %12 = icmp eq i32 %11, %2
  br i1 %12, label %326, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.icu_69::OffsetList"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 40, i1 false)
  %15 = getelementptr inbounds %"class.icu_69::OffsetList", %"class.icu_69::OffsetList"* %5, i64 0, i32 0
  %16 = getelementptr inbounds %"class.icu_69::OffsetList", %"class.icu_69::OffsetList"* %5, i64 0, i32 4, i64 0
  store i8* %16, i8** %15, align 8
  %17 = getelementptr inbounds %"class.icu_69::OffsetList", %"class.icu_69::OffsetList"* %5, i64 0, i32 1
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.icu_69::OffsetList", %"class.icu_69::OffsetList"* %5, i64 0, i32 2
  store i32 0, i32* %18, align 4
  %19 = getelementptr inbounds %"class.icu_69::OffsetList", %"class.icu_69::OffsetList"* %5, i64 0, i32 3
  store i32 0, i32* %19, align 8
  %20 = icmp eq i32 %3, 1
  br i1 %20, label %21, label %38

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 9
  %23 = load i32, i32* %22, align 8
  %24 = icmp slt i32 %23, 17
  br i1 %24, label %25, label %26

25:                                               ; preds = %21
  store i32 16, i32* %17, align 8
  br label %34

26:                                               ; preds = %21
  %27 = sext i32 %23 to i64
  %28 = call noalias i8* @uprv_malloc_69(i64 %27) #7
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %33

30:                                               ; preds = %26
  %31 = load i32, i32* %17, align 8
  %32 = load i8*, i8** %15, align 8
  br label %34

33:                                               ; preds = %26
  store i8* %28, i8** %15, align 8
  store i32 %23, i32* %17, align 8
  br label %34

34:                                               ; preds = %25, %30, %33
  %35 = phi i8* [ %32, %30 ], [ %28, %33 ], [ %16, %25 ]
  %36 = phi i32 [ %31, %30 ], [ %23, %33 ], [ 16, %25 ]
  %37 = sext i32 %36 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %37, i1 false) #6
  br label %38

38:                                               ; preds = %34, %13
  %39 = sub nsw i32 %2, %11
  %40 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 3
  %41 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %40, align 8
  %42 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %41, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 5
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 10
  %47 = load i8, i8* %46, align 4
  %48 = icmp eq i8 %47, 0
  %49 = shl nsw i32 %43, 1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i8, i8* %45, i64 %50
  %52 = select i1 %48, i8* %45, i8* %51
  %53 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 6
  %54 = icmp sgt i32 %43, 0
  %55 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 4
  %56 = zext i32 %43 to i64
  %57 = zext i32 %43 to i64
  br label %58

58:                                               ; preds = %313, %38
  %59 = phi i32 [ %11, %38 ], [ %314, %313 ]
  %60 = phi i32 [ %11, %38 ], [ %315, %313 ]
  %61 = phi i32 [ %39, %38 ], [ %316, %313 ]
  %62 = load i8*, i8** %53, align 8
  br i1 %20, label %68, label %63

63:                                               ; preds = %58
  br i1 %54, label %64, label %225

64:                                               ; preds = %63
  %65 = load i32*, i32** %55, align 8
  %66 = sext i32 %60 to i64
  %67 = getelementptr inbounds i8, i8* %1, i64 %66
  br label %157

68:                                               ; preds = %58
  br i1 %54, label %69, label %234

69:                                               ; preds = %68
  %70 = sext i32 %60 to i64
  %71 = getelementptr inbounds i8, i8* %1, i64 %70
  br label %72

72:                                               ; preds = %153, %69
  %73 = phi i64 [ 0, %69 ], [ %155, %153 ]
  %74 = phi i8* [ %62, %69 ], [ %154, %153 ]
  %75 = load i32*, i32** %55, align 8
  %76 = getelementptr inbounds i32, i32* %75, i64 %73
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %153, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds i8, i8* %52, i64 %73
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, -1
  br i1 %82, label %83, label %86

83:                                               ; preds = %79
  %84 = sext i32 %77 to i64
  %85 = getelementptr inbounds i8, i8* %74, i64 %84
  br label %153

86:                                               ; preds = %79
  %87 = zext i8 %81 to i32
  %88 = icmp eq i8 %81, -2
  br i1 %88, label %89, label %97

89:                                               ; preds = %86
  %90 = add nsw i32 %77, -1
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds i8, i8* %74, i64 %91
  %93 = load i8, i8* %92, align 1
  %94 = icmp slt i8 %93, -64
  br i1 %94, label %95, label %97

95:                                               ; preds = %89
  %96 = call i32 @utf8_back1SafeBody_69(i8* %74, i32 0, i32 %90) #6
  br label %97

97:                                               ; preds = %89, %95, %86
  %98 = phi i32 [ %96, %95 ], [ %90, %89 ], [ %87, %86 ]
  %99 = icmp sgt i32 %98, %59
  %100 = select i1 %99, i32 %59, i32 %98
  %101 = sub nsw i32 %77, %100
  %102 = icmp sgt i32 %101, %61
  br i1 %102, label %150, label %103

103:                                              ; preds = %97
  %104 = sext i32 %100 to i64
  br label %105

105:                                              ; preds = %103, %146
  %106 = phi i64 [ %104, %103 ], [ %147, %146 ]
  %107 = phi i32 [ %101, %103 ], [ %148, %146 ]
  %108 = sub nsw i64 %70, %106
  %109 = getelementptr inbounds i8, i8* %1, i64 %108
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, -64
  br i1 %111, label %144, label %112

112:                                              ; preds = %105
  %113 = load i32, i32* %19, align 8
  %114 = add nsw i32 %113, %107
  %115 = load i32, i32* %17, align 8
  %116 = icmp slt i32 %114, %115
  %117 = select i1 %116, i32 0, i32 %115
  %118 = sub nsw i32 %114, %117
  %119 = load i8*, i8** %15, align 8
  %120 = sext i32 %118 to i64
  %121 = getelementptr inbounds i8, i8* %119, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %124, label %144

124:                                              ; preds = %112
  %125 = sub nsw i64 0, %106
  %126 = getelementptr inbounds i8, i8* %71, i64 %125
  br label %127

127:                                              ; preds = %134, %124
  %128 = phi i8* [ %126, %124 ], [ %136, %134 ]
  %129 = phi i8* [ %74, %124 ], [ %135, %134 ]
  %130 = phi i32 [ %77, %124 ], [ %137, %134 ]
  %131 = load i8, i8* %128, align 1
  %132 = load i8, i8* %129, align 1
  %133 = icmp eq i8 %131, %132
  br i1 %133, label %134, label %144

134:                                              ; preds = %127
  %135 = getelementptr inbounds i8, i8* %129, i64 1
  %136 = getelementptr inbounds i8, i8* %128, i64 1
  %137 = add nsw i32 %130, -1
  %138 = icmp sgt i32 %137, 0
  br i1 %138, label %127, label %139

139:                                              ; preds = %134
  %140 = icmp eq i32 %107, %61
  br i1 %140, label %320, label %141

141:                                              ; preds = %139
  store i8 1, i8* %121, align 1
  %142 = load i32, i32* %18, align 4
  %143 = add nsw i32 %142, 1
  store i32 %143, i32* %18, align 4
  br label %144

144:                                              ; preds = %127, %112, %141, %105
  %145 = icmp eq i64 %106, 0
  br i1 %145, label %150, label %146

146:                                              ; preds = %144
  %147 = add nsw i64 %106, -1
  %148 = add nsw i32 %107, 1
  %149 = icmp slt i32 %107, %61
  br i1 %149, label %105, label %150

150:                                              ; preds = %146, %144, %97
  %151 = sext i32 %77 to i64
  %152 = getelementptr inbounds i8, i8* %74, i64 %151
  br label %153

153:                                              ; preds = %150, %83, %72
  %154 = phi i8* [ %74, %72 ], [ %152, %150 ], [ %85, %83 ]
  %155 = add nuw nsw i64 %73, 1
  %156 = icmp eq i64 %155, %57
  br i1 %156, label %234, label %72

157:                                              ; preds = %219, %64
  %158 = phi i64 [ 0, %64 ], [ %223, %219 ]
  %159 = phi i32 [ 0, %64 ], [ %222, %219 ]
  %160 = phi i32 [ 0, %64 ], [ %221, %219 ]
  %161 = phi i8* [ %62, %64 ], [ %220, %219 ]
  %162 = getelementptr inbounds i32, i32* %65, i64 %158
  %163 = load i32, i32* %162, align 4
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %219, label %165

165:                                              ; preds = %157
  %166 = getelementptr inbounds i8, i8* %52, i64 %158
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i32
  %169 = icmp ugt i8 %167, -3
  %170 = select i1 %169, i32 %163, i32 %168
  %171 = icmp sgt i32 %170, %59
  %172 = select i1 %171, i32 %59, i32 %170
  %173 = sub nsw i32 %163, %172
  %174 = icmp sgt i32 %173, %61
  %175 = icmp slt i32 %172, %159
  %176 = or i1 %175, %174
  br i1 %176, label %214, label %177

177:                                              ; preds = %165
  %178 = sext i32 %172 to i64
  %179 = sext i32 %159 to i64
  br label %180

180:                                              ; preds = %177, %206
  %181 = phi i64 [ %178, %177 ], [ %207, %206 ]
  %182 = phi i32 [ %173, %177 ], [ %208, %206 ]
  %183 = sub nsw i64 %66, %181
  %184 = getelementptr inbounds i8, i8* %1, i64 %183
  %185 = load i8, i8* %184, align 1
  %186 = icmp slt i8 %185, -64
  br i1 %186, label %206, label %187

187:                                              ; preds = %180
  %188 = icmp sgt i64 %181, %179
  %189 = icmp sgt i32 %182, %160
  %190 = or i1 %188, %189
  br i1 %190, label %191, label %206

191:                                              ; preds = %187
  %192 = sub nsw i64 0, %181
  %193 = getelementptr inbounds i8, i8* %67, i64 %192
  br label %194

194:                                              ; preds = %201, %191
  %195 = phi i8* [ %193, %191 ], [ %203, %201 ]
  %196 = phi i8* [ %161, %191 ], [ %202, %201 ]
  %197 = phi i32 [ %163, %191 ], [ %204, %201 ]
  %198 = load i8, i8* %195, align 1
  %199 = load i8, i8* %196, align 1
  %200 = icmp eq i8 %198, %199
  br i1 %200, label %201, label %206

201:                                              ; preds = %194
  %202 = getelementptr inbounds i8, i8* %196, i64 1
  %203 = getelementptr inbounds i8, i8* %195, i64 1
  %204 = add nsw i32 %197, -1
  %205 = icmp sgt i32 %204, 0
  br i1 %205, label %194, label %212

206:                                              ; preds = %194, %187, %180
  %207 = add nsw i64 %181, -1
  %208 = add nsw i32 %182, 1
  %209 = icmp sge i32 %182, %61
  %210 = icmp sle i64 %181, %179
  %211 = or i1 %210, %209
  br i1 %211, label %214, label %180

212:                                              ; preds = %201
  %213 = trunc i64 %181 to i32
  br label %214

214:                                              ; preds = %206, %212, %165
  %215 = phi i32 [ %160, %165 ], [ %182, %212 ], [ %160, %206 ]
  %216 = phi i32 [ %159, %165 ], [ %213, %212 ], [ %159, %206 ]
  %217 = sext i32 %163 to i64
  %218 = getelementptr inbounds i8, i8* %161, i64 %217
  br label %219

219:                                              ; preds = %157, %214
  %220 = phi i8* [ %161, %157 ], [ %218, %214 ]
  %221 = phi i32 [ %160, %157 ], [ %215, %214 ]
  %222 = phi i32 [ %159, %157 ], [ %216, %214 ]
  %223 = add nuw nsw i64 %158, 1
  %224 = icmp eq i64 %223, %56
  br i1 %224, label %225, label %157

225:                                              ; preds = %219, %63
  %226 = phi i32 [ 0, %63 ], [ %221, %219 ]
  %227 = phi i32 [ 0, %63 ], [ %222, %219 ]
  %228 = or i32 %227, %226
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %234, label %230

230:                                              ; preds = %225
  %231 = add nsw i32 %226, %60
  %232 = sub nsw i32 %61, %226
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %317, label %313

234:                                              ; preds = %153, %68, %225
  %235 = icmp ne i32 %59, 0
  %236 = icmp eq i32 %60, 0
  %237 = or i1 %235, %236
  %238 = load i32, i32* %18, align 4
  %239 = icmp eq i32 %238, 0
  br i1 %237, label %240, label %241

240:                                              ; preds = %234
  br i1 %239, label %317, label %274

241:                                              ; preds = %234
  %242 = sext i32 %60 to i64
  %243 = getelementptr inbounds i8, i8* %1, i64 %242
  br i1 %239, label %244, label %251

244:                                              ; preds = %241
  %245 = call i32 @_ZNK6icu_6910UnicodeSet8spanUTF8EPKci17USetSpanCondition(%"class.icu_69::UnicodeSet"* %10, i8* %243, i32 %61, i32 1) #6
  %246 = icmp eq i32 %61, %245
  %247 = icmp eq i32 %245, 0
  %248 = or i1 %246, %247
  %249 = add nsw i32 %245, %60
  %250 = sub nsw i32 %61, %245
  br i1 %248, label %317, label %313

251:                                              ; preds = %241
  %252 = call fastcc i32 @_ZN6icu_69L11spanOneUTF8ERKNS_10UnicodeSetEPKhi(%"class.icu_69::UnicodeSet"* dereferenceable(200) %10, i8* %243, i32 %61)
  %253 = icmp sgt i32 %252, 0
  br i1 %253, label %254, label %274

254:                                              ; preds = %251
  %255 = icmp eq i32 %61, %252
  br i1 %255, label %317, label %256

256:                                              ; preds = %254
  %257 = add nsw i32 %252, %60
  %258 = sub nsw i32 %61, %252
  %259 = load i32, i32* %19, align 8
  %260 = add nsw i32 %259, %252
  %261 = load i32, i32* %17, align 8
  %262 = icmp slt i32 %260, %261
  %263 = select i1 %262, i32 0, i32 %261
  %264 = sub nsw i32 %260, %263
  %265 = load i8*, i8** %15, align 8
  %266 = sext i32 %264 to i64
  %267 = getelementptr inbounds i8, i8* %265, i64 %266
  %268 = load i8, i8* %267, align 1
  %269 = icmp eq i8 %268, 0
  br i1 %269, label %273, label %270

270:                                              ; preds = %256
  store i8 0, i8* %267, align 1
  %271 = load i32, i32* %18, align 4
  %272 = add nsw i32 %271, -1
  store i32 %272, i32* %18, align 4
  br label %273

273:                                              ; preds = %256, %270
  store i32 %264, i32* %19, align 8
  br label %313

274:                                              ; preds = %251, %240
  %275 = load i32, i32* %19, align 8
  %276 = load i32, i32* %17, align 8
  %277 = sext i32 %275 to i64
  %278 = sext i32 %276 to i64
  %279 = load i8*, i8** %15, align 8
  br label %280

280:                                              ; preds = %284, %274
  %281 = phi i64 [ %282, %284 ], [ %277, %274 ]
  %282 = add nsw i64 %281, 1
  %283 = icmp slt i64 %282, %278
  br i1 %283, label %284, label %295

284:                                              ; preds = %280
  %285 = getelementptr inbounds i8, i8* %279, i64 %282
  %286 = load i8, i8* %285, align 1
  %287 = icmp eq i8 %286, 0
  br i1 %287, label %280, label %288

288:                                              ; preds = %284
  %289 = getelementptr inbounds i8, i8* %279, i64 %282
  %290 = trunc i64 %282 to i32
  store i8 0, i8* %289, align 1
  %291 = load i32, i32* %18, align 4
  %292 = add nsw i32 %291, -1
  store i32 %292, i32* %18, align 4
  %293 = load i32, i32* %19, align 8
  %294 = sub nsw i32 %290, %293
  store i32 %290, i32* %19, align 8
  br label %309

295:                                              ; preds = %280, %295
  %296 = phi i64 [ %300, %295 ], [ 0, %280 ]
  %297 = getelementptr inbounds i8, i8* %279, i64 %296
  %298 = load i8, i8* %297, align 1
  %299 = icmp eq i8 %298, 0
  %300 = add nuw i64 %296, 1
  br i1 %299, label %295, label %301

301:                                              ; preds = %295
  %302 = sub i32 %276, %275
  %303 = trunc i64 %296 to i32
  %304 = and i64 %296, 4294967295
  %305 = getelementptr inbounds i8, i8* %279, i64 %304
  store i8 0, i8* %305, align 1
  %306 = load i32, i32* %18, align 4
  %307 = add nsw i32 %306, -1
  store i32 %307, i32* %18, align 4
  store i32 %303, i32* %19, align 8
  %308 = add nsw i32 %302, %303
  br label %309

309:                                              ; preds = %288, %301
  %310 = phi i32 [ %294, %288 ], [ %308, %301 ]
  %311 = add nsw i32 %310, %60
  %312 = sub nsw i32 %61, %310
  br label %313

313:                                              ; preds = %309, %273, %230, %244
  %314 = phi i32 [ %245, %244 ], [ 0, %230 ], [ 0, %273 ], [ 0, %309 ]
  %315 = phi i32 [ %249, %244 ], [ %231, %230 ], [ %257, %273 ], [ %311, %309 ]
  %316 = phi i32 [ %250, %244 ], [ %232, %230 ], [ %258, %273 ], [ %312, %309 ]
  br label %58

317:                                              ; preds = %230, %240, %254, %244
  %318 = phi i32 [ %2, %254 ], [ %60, %240 ], [ %249, %244 ], [ %2, %230 ]
  %319 = load i8*, i8** %15, align 8
  br label %320

320:                                              ; preds = %139, %317
  %321 = phi i8* [ %319, %317 ], [ %119, %139 ]
  %322 = phi i32 [ %318, %317 ], [ %2, %139 ]
  %323 = icmp eq i8* %321, %16
  br i1 %323, label %325, label %324

324:                                              ; preds = %320
  call void @uprv_free_69(i8* %321) #6
  br label %325

325:                                              ; preds = %320, %324
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #6
  br label %326

326:                                              ; preds = %325, %9, %7
  %327 = phi i32 [ %8, %7 ], [ %322, %325 ], [ %2, %9 ]
  ret i32 %327
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK6icu_6920UnicodeSetStringSpan11spanNotUTF8EPKhi(%"class.icu_69::UnicodeSetStringSpan"*, i8*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 3
  %5 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %4, align 8
  %6 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %5, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 5
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 10
  %11 = load i8, i8* %10, align 4
  %12 = icmp eq i8 %11, 0
  %13 = shl nsw i32 %7, 1
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i8, i8* %9, i64 %14
  %16 = select i1 %12, i8* %9, i8* %15
  %17 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 2
  %18 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 6
  %20 = icmp sgt i32 %7, 0
  %21 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 4
  %22 = zext i32 %7 to i64
  br label %23

23:                                               ; preds = %71, %3
  %24 = phi i32 [ 0, %3 ], [ %72, %71 ]
  %25 = phi i32 [ %2, %3 ], [ %73, %71 ]
  %26 = load %"class.icu_69::UnicodeSet"*, %"class.icu_69::UnicodeSet"** %17, align 8
  %27 = sext i32 %24 to i64
  %28 = getelementptr inbounds i8, i8* %1, i64 %27
  %29 = tail call i32 @_ZNK6icu_6910UnicodeSet8spanUTF8EPKci17USetSpanCondition(%"class.icu_69::UnicodeSet"* %26, i8* %28, i32 %25, i32 0) #6
  %30 = icmp eq i32 %25, %29
  br i1 %30, label %75, label %31

31:                                               ; preds = %23
  %32 = add nsw i32 %29, %24
  %33 = sub nsw i32 %25, %29
  %34 = sext i32 %32 to i64
  %35 = getelementptr inbounds i8, i8* %1, i64 %34
  %36 = tail call fastcc i32 @_ZN6icu_69L11spanOneUTF8ERKNS_10UnicodeSetEPKhi(%"class.icu_69::UnicodeSet"* dereferenceable(200) %18, i8* %35, i32 %33)
  %37 = icmp sgt i32 %36, 0
  br i1 %37, label %75, label %38

38:                                               ; preds = %31
  br i1 %20, label %39, label %71

39:                                               ; preds = %38
  %40 = load i8*, i8** %19, align 8
  %41 = load i32*, i32** %21, align 8
  br label %42

42:                                               ; preds = %66, %39
  %43 = phi i64 [ 0, %39 ], [ %69, %66 ]
  %44 = phi i8* [ %40, %39 ], [ %68, %66 ]
  %45 = getelementptr inbounds i32, i32* %41, i64 %43
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %66, label %48

48:                                               ; preds = %42
  %49 = getelementptr inbounds i8, i8* %16, i64 %43
  %50 = load i8, i8* %49, align 1
  %51 = icmp eq i8 %50, -1
  %52 = icmp sgt i32 %46, %33
  %53 = or i1 %52, %51
  br i1 %53, label %66, label %54

54:                                               ; preds = %48, %61
  %55 = phi i8* [ %63, %61 ], [ %35, %48 ]
  %56 = phi i8* [ %62, %61 ], [ %44, %48 ]
  %57 = phi i32 [ %64, %61 ], [ %46, %48 ]
  %58 = load i8, i8* %55, align 1
  %59 = load i8, i8* %56, align 1
  %60 = icmp eq i8 %58, %59
  br i1 %60, label %61, label %66

61:                                               ; preds = %54
  %62 = getelementptr inbounds i8, i8* %56, i64 1
  %63 = getelementptr inbounds i8, i8* %55, i64 1
  %64 = add nsw i32 %57, -1
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %54, label %75

66:                                               ; preds = %54, %48, %42
  %67 = sext i32 %46 to i64
  %68 = getelementptr inbounds i8, i8* %44, i64 %67
  %69 = add nuw nsw i64 %43, 1
  %70 = icmp eq i64 %69, %22
  br i1 %70, label %71, label %42

71:                                               ; preds = %66, %38
  %72 = sub nsw i32 %32, %36
  %73 = add nsw i32 %36, %33
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %23

75:                                               ; preds = %31, %71, %23, %61
  %76 = phi i32 [ %32, %61 ], [ %32, %31 ], [ %2, %71 ], [ %2, %23 ]
  ret i32 %76
}

declare i32 @utf8_back1SafeBody_69(i8*, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc i32 @_ZN6icu_69L11spanOneUTF8ERKNS_10UnicodeSetEPKhi(%"class.icu_69::UnicodeSet"* dereferenceable(200), i8* nocapture readonly, i32) unnamed_addr #5 {
  %4 = load i8, i8* %1, align 1
  %5 = zext i8 %4 to i32
  %6 = icmp sgt i8 %4, -1
  br i1 %6, label %7, label %11

7:                                                ; preds = %3
  %8 = tail call signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"* %0, i32 %5) #6
  %9 = icmp eq i8 %8, 0
  %10 = select i1 %9, i32 -1, i32 1
  br label %89

11:                                               ; preds = %3
  %12 = icmp eq i32 %2, 1
  br i1 %12, label %82, label %13

13:                                               ; preds = %11
  %14 = icmp ugt i8 %4, -33
  br i1 %14, label %15, label %65

15:                                               ; preds = %13
  %16 = icmp ult i8 %4, -16
  br i1 %16, label %17, label %32

17:                                               ; preds = %15
  %18 = and i32 %5, 15
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = sext i8 %21 to i32
  %23 = getelementptr inbounds i8, i8* %1, i64 1
  %24 = load i8, i8* %23, align 1
  %25 = lshr i8 %24, 5
  %26 = zext i8 %25 to i32
  %27 = shl i32 1, %26
  %28 = and i32 %27, %22
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %82, label %30

30:                                               ; preds = %17
  %31 = and i8 %24, 63
  br label %57

32:                                               ; preds = %15
  %33 = add nsw i32 %5, -240
  %34 = icmp slt i32 %33, 5
  br i1 %34, label %35, label %82

35:                                               ; preds = %32
  %36 = getelementptr inbounds i8, i8* %1, i64 1
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = lshr i32 %38, 4
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.1, i64 0, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = sext i8 %42 to i32
  %44 = shl i32 1, %33
  %45 = and i32 %44, %43
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %82, label %47

47:                                               ; preds = %35
  %48 = icmp eq i32 %2, 2
  br i1 %48, label %82, label %49

49:                                               ; preds = %47
  %50 = shl nsw i32 %33, 6
  %51 = and i32 %38, 63
  %52 = or i32 %51, %50
  %53 = getelementptr inbounds i8, i8* %1, i64 2
  %54 = load i8, i8* %53, align 1
  %55 = xor i8 %54, -128
  %56 = icmp ult i8 %55, 64
  br i1 %56, label %57, label %82

57:                                               ; preds = %30, %49
  %58 = phi i32 [ %18, %30 ], [ %52, %49 ]
  %59 = phi i32 [ 2, %30 ], [ 3, %49 ]
  %60 = phi i8 [ %31, %30 ], [ %55, %49 ]
  %61 = shl nsw i32 %58, 6
  %62 = zext i8 %60 to i32
  %63 = or i32 %61, %62
  %64 = icmp eq i32 %59, %2
  br i1 %64, label %82, label %69

65:                                               ; preds = %13
  %66 = icmp ugt i8 %4, -63
  br i1 %66, label %67, label %82

67:                                               ; preds = %65
  %68 = and i32 %5, 31
  br label %69

69:                                               ; preds = %57, %67
  %70 = phi i32 [ %63, %57 ], [ %68, %67 ]
  %71 = phi i32 [ %59, %57 ], [ 1, %67 ]
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i8, i8* %1, i64 %72
  %74 = load i8, i8* %73, align 1
  %75 = xor i8 %74, -128
  %76 = icmp ult i8 %75, 64
  br i1 %76, label %77, label %82

77:                                               ; preds = %69
  %78 = zext i8 %75 to i32
  %79 = shl i32 %70, 6
  %80 = or i32 %79, %78
  %81 = add nuw nsw i32 %71, 1
  br label %82

82:                                               ; preds = %77, %17, %57, %47, %35, %11, %69, %65, %49, %32
  %83 = phi i32 [ %80, %77 ], [ 65533, %17 ], [ 65533, %57 ], [ 65533, %47 ], [ 65533, %35 ], [ 65533, %11 ], [ 65533, %69 ], [ 65533, %65 ], [ 65533, %49 ], [ 65533, %32 ]
  %84 = phi i32 [ %81, %77 ], [ 1, %17 ], [ %2, %57 ], [ 2, %47 ], [ 1, %35 ], [ 1, %11 ], [ %71, %69 ], [ 1, %65 ], [ 2, %49 ], [ 1, %32 ]
  %85 = tail call signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"* %0, i32 %83) #6
  %86 = icmp eq i8 %85, 0
  %87 = sub nsw i32 0, %84
  %88 = select i1 %86, i32 %87, i32 %84
  br label %89

89:                                               ; preds = %82, %7
  %90 = phi i32 [ %10, %7 ], [ %88, %82 ]
  ret i32 %90
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK6icu_6920UnicodeSetStringSpan12spanBackUTF8EPKhi17USetSpanCondition(%"class.icu_69::UnicodeSetStringSpan"*, i8*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca %"class.icu_69::OffsetList", align 8
  %7 = icmp eq i32 %3, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  %9 = tail call i32 @_ZNK6icu_6920UnicodeSetStringSpan15spanNotBackUTF8EPKhi(%"class.icu_69::UnicodeSetStringSpan"* %0, i8* %1, i32 %2)
  br label %391

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 1
  %12 = tail call i32 @_ZNK6icu_6910UnicodeSet12spanBackUTF8EPKci17USetSpanCondition(%"class.icu_69::UnicodeSet"* %11, i8* %1, i32 %2, i32 1) #6
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %391, label %14

14:                                               ; preds = %10
  %15 = sub nsw i32 %2, %12
  %16 = bitcast %"class.icu_69::OffsetList"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false)
  %17 = getelementptr inbounds %"class.icu_69::OffsetList", %"class.icu_69::OffsetList"* %6, i64 0, i32 0
  %18 = getelementptr inbounds %"class.icu_69::OffsetList", %"class.icu_69::OffsetList"* %6, i64 0, i32 4, i64 0
  store i8* %18, i8** %17, align 8
  %19 = getelementptr inbounds %"class.icu_69::OffsetList", %"class.icu_69::OffsetList"* %6, i64 0, i32 1
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.icu_69::OffsetList", %"class.icu_69::OffsetList"* %6, i64 0, i32 2
  store i32 0, i32* %20, align 4
  %21 = getelementptr inbounds %"class.icu_69::OffsetList", %"class.icu_69::OffsetList"* %6, i64 0, i32 3
  store i32 0, i32* %21, align 8
  %22 = icmp eq i32 %3, 1
  br i1 %22, label %23, label %40

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 9
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 %25, 17
  br i1 %26, label %27, label %28

27:                                               ; preds = %23
  store i32 16, i32* %19, align 8
  br label %36

28:                                               ; preds = %23
  %29 = sext i32 %25 to i64
  %30 = call noalias i8* @uprv_malloc_69(i64 %29) #7
  %31 = icmp eq i8* %30, null
  br i1 %31, label %32, label %35

32:                                               ; preds = %28
  %33 = load i32, i32* %19, align 8
  %34 = load i8*, i8** %17, align 8
  br label %36

35:                                               ; preds = %28
  store i8* %30, i8** %17, align 8
  store i32 %25, i32* %19, align 8
  br label %36

36:                                               ; preds = %27, %32, %35
  %37 = phi i8* [ %34, %32 ], [ %30, %35 ], [ %18, %27 ]
  %38 = phi i32 [ %33, %32 ], [ %25, %35 ], [ 16, %27 ]
  %39 = sext i32 %38 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %37, i8 0, i64 %39, i1 false) #6
  br label %40

40:                                               ; preds = %36, %14
  %41 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 3
  %42 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %41, align 8
  %43 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %42, i64 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 5
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 10
  %48 = load i8, i8* %47, align 4
  %49 = icmp eq i8 %48, 0
  %50 = mul nsw i32 %44, 3
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %46, i64 %51
  %53 = select i1 %49, i8* %46, i8* %52
  %54 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 6
  %55 = icmp sgt i32 %44, 0
  %56 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 4
  %57 = bitcast i32* %5 to i8*
  %58 = zext i32 %44 to i64
  %59 = zext i32 %44 to i64
  br label %60

60:                                               ; preds = %379, %40
  %61 = phi i32 [ %12, %40 ], [ %380, %379 ]
  %62 = phi i32 [ %15, %40 ], [ %381, %379 ]
  %63 = load i8*, i8** %54, align 8
  br i1 %22, label %69, label %64

64:                                               ; preds = %60
  br i1 %55, label %65, label %280

65:                                               ; preds = %64
  %66 = load i32*, i32** %56, align 8
  %67 = sext i32 %61 to i64
  %68 = getelementptr inbounds i8, i8* %1, i64 %67
  br label %212

69:                                               ; preds = %60
  br i1 %55, label %70, label %288

70:                                               ; preds = %69
  %71 = sext i32 %61 to i64
  %72 = getelementptr inbounds i8, i8* %1, i64 %71
  br label %73

73:                                               ; preds = %208, %70
  %74 = phi i64 [ 0, %70 ], [ %210, %208 ]
  %75 = phi i8* [ %63, %70 ], [ %209, %208 ]
  %76 = load i32*, i32** %56, align 8
  %77 = getelementptr inbounds i32, i32* %76, i64 %74
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %208, label %80

80:                                               ; preds = %73
  %81 = getelementptr inbounds i8, i8* %53, i64 %74
  %82 = load i8, i8* %81, align 1
  %83 = icmp eq i8 %82, -1
  br i1 %83, label %84, label %87

84:                                               ; preds = %80
  %85 = sext i32 %78 to i64
  %86 = getelementptr inbounds i8, i8* %75, i64 %85
  br label %208

87:                                               ; preds = %80
  %88 = zext i8 %82 to i32
  %89 = icmp eq i8 %82, -2
  br i1 %89, label %90, label %151

90:                                               ; preds = %87
  %91 = load i8, i8* %75, align 1
  %92 = zext i8 %91 to i32
  %93 = add i8 %91, 62
  %94 = icmp ugt i8 %93, 50
  %95 = icmp eq i32 %78, 1
  %96 = or i1 %95, %94
  br i1 %96, label %148, label %97

97:                                               ; preds = %90
  %98 = getelementptr inbounds i8, i8* %75, i64 1
  %99 = load i8, i8* %98, align 1
  %100 = and i8 %91, -16
  %101 = icmp eq i8 %100, -32
  br i1 %101, label %102, label %120

102:                                              ; preds = %97
  %103 = and i32 %92, 15
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = lshr i8 %99, 5
  %109 = zext i8 %108 to i32
  %110 = shl i32 1, %109
  %111 = and i32 %110, %107
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %148, label %113

113:                                              ; preds = %102
  %114 = icmp eq i32 %78, 2
  br i1 %114, label %148, label %115

115:                                              ; preds = %113
  %116 = getelementptr inbounds i8, i8* %75, i64 2
  %117 = load i8, i8* %116, align 1
  %118 = icmp slt i8 %117, -64
  %119 = select i1 %118, i32 3, i32 2
  br label %148

120:                                              ; preds = %97
  %121 = icmp ult i8 %91, -32
  br i1 %121, label %122, label %125

122:                                              ; preds = %120
  %123 = icmp slt i8 %99, -64
  %124 = select i1 %123, i32 2, i32 1
  br label %148

125:                                              ; preds = %120
  %126 = lshr i8 %99, 4
  %127 = zext i8 %126 to i64
  %128 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.1, i64 0, i64 %127
  %129 = load i8, i8* %128, align 1
  %130 = sext i8 %129 to i32
  %131 = and i32 %92, 7
  %132 = shl i32 1, %131
  %133 = and i32 %132, %130
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %148, label %135

135:                                              ; preds = %125
  %136 = icmp eq i32 %78, 2
  br i1 %136, label %148, label %137

137:                                              ; preds = %135
  %138 = getelementptr inbounds i8, i8* %75, i64 2
  %139 = load i8, i8* %138, align 1
  %140 = icmp slt i8 %139, -64
  br i1 %140, label %141, label %148

141:                                              ; preds = %137
  %142 = icmp eq i32 %78, 3
  br i1 %142, label %148, label %143

143:                                              ; preds = %141
  %144 = getelementptr inbounds i8, i8* %75, i64 3
  %145 = load i8, i8* %144, align 1
  %146 = icmp slt i8 %145, -64
  %147 = select i1 %146, i32 4, i32 3
  br label %148

148:                                              ; preds = %143, %122, %115, %137, %125, %135, %141, %102, %113, %90
  %149 = phi i32 [ 1, %90 ], [ 2, %113 ], [ 1, %102 ], [ 3, %141 ], [ 2, %137 ], [ 2, %135 ], [ 1, %125 ], [ %119, %115 ], [ %124, %122 ], [ %147, %143 ]
  %150 = sub nsw i32 %78, %149
  br label %151

151:                                              ; preds = %148, %87
  %152 = phi i32 [ %150, %148 ], [ %88, %87 ]
  %153 = icmp sgt i32 %152, %62
  %154 = select i1 %153, i32 %62, i32 %152
  %155 = sub i32 %78, %154
  %156 = icmp slt i32 %61, %155
  br i1 %156, label %205, label %157

157:                                              ; preds = %151
  %158 = sext i32 %155 to i64
  br label %159

159:                                              ; preds = %157, %201
  %160 = phi i64 [ %158, %157 ], [ %203, %201 ]
  %161 = phi i32 [ %154, %157 ], [ %202, %201 ]
  %162 = sub nsw i64 %71, %160
  %163 = getelementptr inbounds i8, i8* %1, i64 %162
  %164 = load i8, i8* %163, align 1
  %165 = icmp slt i8 %164, -64
  br i1 %165, label %199, label %166

166:                                              ; preds = %159
  %167 = load i32, i32* %21, align 8
  %168 = trunc i64 %160 to i32
  %169 = add nsw i32 %167, %168
  %170 = load i32, i32* %19, align 8
  %171 = icmp slt i32 %169, %170
  %172 = select i1 %171, i32 0, i32 %170
  %173 = sub nsw i32 %169, %172
  %174 = load i8*, i8** %17, align 8
  %175 = sext i32 %173 to i64
  %176 = getelementptr inbounds i8, i8* %174, i64 %175
  %177 = load i8, i8* %176, align 1
  %178 = icmp eq i8 %177, 0
  br i1 %178, label %179, label %199

179:                                              ; preds = %166
  %180 = sub nsw i64 0, %160
  %181 = getelementptr inbounds i8, i8* %72, i64 %180
  br label %182

182:                                              ; preds = %189, %179
  %183 = phi i8* [ %181, %179 ], [ %191, %189 ]
  %184 = phi i8* [ %75, %179 ], [ %190, %189 ]
  %185 = phi i32 [ %78, %179 ], [ %192, %189 ]
  %186 = load i8, i8* %183, align 1
  %187 = load i8, i8* %184, align 1
  %188 = icmp eq i8 %186, %187
  br i1 %188, label %189, label %199

189:                                              ; preds = %182
  %190 = getelementptr inbounds i8, i8* %184, i64 1
  %191 = getelementptr inbounds i8, i8* %183, i64 1
  %192 = add nsw i32 %185, -1
  %193 = icmp sgt i32 %192, 0
  br i1 %193, label %182, label %194

194:                                              ; preds = %189
  %195 = icmp eq i64 %160, %71
  br i1 %195, label %385, label %196

196:                                              ; preds = %194
  store i8 1, i8* %176, align 1
  %197 = load i32, i32* %20, align 4
  %198 = add nsw i32 %197, 1
  store i32 %198, i32* %20, align 4
  br label %199

199:                                              ; preds = %182, %166, %196, %159
  %200 = icmp eq i32 %161, 0
  br i1 %200, label %205, label %201

201:                                              ; preds = %199
  %202 = add nsw i32 %161, -1
  %203 = add nsw i64 %160, 1
  %204 = icmp slt i64 %160, %71
  br i1 %204, label %159, label %205

205:                                              ; preds = %201, %199, %151
  %206 = sext i32 %78 to i64
  %207 = getelementptr inbounds i8, i8* %75, i64 %206
  br label %208

208:                                              ; preds = %205, %84, %73
  %209 = phi i8* [ %75, %73 ], [ %207, %205 ], [ %86, %84 ]
  %210 = add nuw nsw i64 %74, 1
  %211 = icmp eq i64 %210, %59
  br i1 %211, label %288, label %73

212:                                              ; preds = %274, %65
  %213 = phi i64 [ 0, %65 ], [ %278, %274 ]
  %214 = phi i32 [ 0, %65 ], [ %277, %274 ]
  %215 = phi i32 [ 0, %65 ], [ %276, %274 ]
  %216 = phi i8* [ %63, %65 ], [ %275, %274 ]
  %217 = getelementptr inbounds i32, i32* %66, i64 %213
  %218 = load i32, i32* %217, align 4
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %274, label %220

220:                                              ; preds = %212
  %221 = getelementptr inbounds i8, i8* %53, i64 %213
  %222 = load i8, i8* %221, align 1
  %223 = zext i8 %222 to i32
  %224 = icmp ugt i8 %222, -3
  %225 = select i1 %224, i32 %218, i32 %223
  %226 = icmp sgt i32 %225, %62
  %227 = select i1 %226, i32 %62, i32 %225
  %228 = sub i32 %218, %227
  %229 = icmp slt i32 %61, %228
  %230 = icmp slt i32 %227, %214
  %231 = or i1 %230, %229
  br i1 %231, label %269, label %232

232:                                              ; preds = %220
  %233 = sext i32 %228 to i64
  %234 = sext i32 %215 to i64
  br label %235

235:                                              ; preds = %232, %261
  %236 = phi i64 [ %233, %232 ], [ %263, %261 ]
  %237 = phi i32 [ %227, %232 ], [ %262, %261 ]
  %238 = sub nsw i64 %67, %236
  %239 = getelementptr inbounds i8, i8* %1, i64 %238
  %240 = load i8, i8* %239, align 1
  %241 = icmp slt i8 %240, -64
  br i1 %241, label %261, label %242

242:                                              ; preds = %235
  %243 = icmp sgt i32 %237, %214
  %244 = icmp sgt i64 %236, %234
  %245 = or i1 %243, %244
  br i1 %245, label %246, label %261

246:                                              ; preds = %242
  %247 = sub nsw i64 0, %236
  %248 = getelementptr inbounds i8, i8* %68, i64 %247
  br label %249

249:                                              ; preds = %256, %246
  %250 = phi i8* [ %248, %246 ], [ %258, %256 ]
  %251 = phi i8* [ %216, %246 ], [ %257, %256 ]
  %252 = phi i32 [ %218, %246 ], [ %259, %256 ]
  %253 = load i8, i8* %250, align 1
  %254 = load i8, i8* %251, align 1
  %255 = icmp eq i8 %253, %254
  br i1 %255, label %256, label %261

256:                                              ; preds = %249
  %257 = getelementptr inbounds i8, i8* %251, i64 1
  %258 = getelementptr inbounds i8, i8* %250, i64 1
  %259 = add nsw i32 %252, -1
  %260 = icmp sgt i32 %259, 0
  br i1 %260, label %249, label %267

261:                                              ; preds = %249, %242, %235
  %262 = add nsw i32 %237, -1
  %263 = add nsw i64 %236, 1
  %264 = icmp sge i64 %236, %67
  %265 = icmp sle i32 %237, %214
  %266 = or i1 %265, %264
  br i1 %266, label %269, label %235

267:                                              ; preds = %256
  %268 = trunc i64 %236 to i32
  br label %269

269:                                              ; preds = %261, %267, %220
  %270 = phi i32 [ %215, %220 ], [ %268, %267 ], [ %215, %261 ]
  %271 = phi i32 [ %214, %220 ], [ %237, %267 ], [ %214, %261 ]
  %272 = sext i32 %218 to i64
  %273 = getelementptr inbounds i8, i8* %216, i64 %272
  br label %274

274:                                              ; preds = %212, %269
  %275 = phi i8* [ %216, %212 ], [ %273, %269 ]
  %276 = phi i32 [ %215, %212 ], [ %270, %269 ]
  %277 = phi i32 [ %214, %212 ], [ %271, %269 ]
  %278 = add nuw nsw i64 %213, 1
  %279 = icmp eq i64 %278, %58
  br i1 %279, label %280, label %212

280:                                              ; preds = %274, %64
  %281 = phi i32 [ 0, %64 ], [ %276, %274 ]
  %282 = phi i32 [ 0, %64 ], [ %277, %274 ]
  %283 = or i32 %282, %281
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %288, label %285

285:                                              ; preds = %280
  %286 = sub nsw i32 %61, %281
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %382, label %379

288:                                              ; preds = %208, %69, %280
  %289 = icmp ne i32 %62, 0
  %290 = icmp eq i32 %61, %2
  %291 = or i1 %290, %289
  %292 = load i32, i32* %20, align 4
  %293 = icmp ne i32 %292, 0
  br i1 %291, label %294, label %295

294:                                              ; preds = %288
  br i1 %293, label %341, label %382

295:                                              ; preds = %288
  br i1 %293, label %302, label %296

296:                                              ; preds = %295
  %297 = call i32 @_ZNK6icu_6910UnicodeSet12spanBackUTF8EPKci17USetSpanCondition(%"class.icu_69::UnicodeSet"* %11, i8* %1, i32 %61, i32 1) #6
  %298 = sub nsw i32 %61, %297
  %299 = icmp eq i32 %297, 0
  %300 = icmp eq i32 %298, 0
  %301 = or i1 %299, %300
  br i1 %301, label %382, label %379

302:                                              ; preds = %295
  %303 = add nsw i32 %61, -1
  %304 = sext i32 %303 to i64
  %305 = getelementptr inbounds i8, i8* %1, i64 %304
  %306 = load i8, i8* %305, align 1
  %307 = zext i8 %306 to i32
  %308 = icmp sgt i8 %306, -1
  br i1 %308, label %309, label %312

309:                                              ; preds = %302
  %310 = call signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"* %11, i32 %307) #6
  %311 = icmp eq i8 %310, 0
  br i1 %311, label %341, label %321

312:                                              ; preds = %302
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %57) #6
  store i32 %303, i32* %5, align 4
  %313 = call i32 @utf8_prevCharSafeBody_69(i8* %1, i32 0, i32* nonnull %5, i32 %307, i8 signext -3) #6
  %314 = load i32, i32* %5, align 4
  %315 = sub nsw i32 %61, %314
  %316 = call signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"* %11, i32 %313) #6
  %317 = icmp eq i8 %316, 0
  %318 = sub nsw i32 0, %315
  %319 = select i1 %317, i32 %318, i32 %315
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57) #6
  %320 = icmp sgt i32 %319, 0
  br i1 %320, label %321, label %341

321:                                              ; preds = %309, %312
  %322 = phi i32 [ %319, %312 ], [ 1, %309 ]
  %323 = icmp eq i32 %61, %322
  br i1 %323, label %382, label %324

324:                                              ; preds = %321
  %325 = sub nsw i32 %61, %322
  %326 = load i32, i32* %21, align 8
  %327 = add nsw i32 %326, %322
  %328 = load i32, i32* %19, align 8
  %329 = icmp slt i32 %327, %328
  %330 = select i1 %329, i32 0, i32 %328
  %331 = sub nsw i32 %327, %330
  %332 = load i8*, i8** %17, align 8
  %333 = sext i32 %331 to i64
  %334 = getelementptr inbounds i8, i8* %332, i64 %333
  %335 = load i8, i8* %334, align 1
  %336 = icmp eq i8 %335, 0
  br i1 %336, label %340, label %337

337:                                              ; preds = %324
  store i8 0, i8* %334, align 1
  %338 = load i32, i32* %20, align 4
  %339 = add nsw i32 %338, -1
  store i32 %339, i32* %20, align 4
  br label %340

340:                                              ; preds = %324, %337
  store i32 %331, i32* %21, align 8
  br label %379

341:                                              ; preds = %309, %294, %312
  %342 = load i32, i32* %21, align 8
  %343 = load i32, i32* %19, align 8
  %344 = sext i32 %342 to i64
  %345 = sext i32 %343 to i64
  %346 = load i8*, i8** %17, align 8
  br label %347

347:                                              ; preds = %351, %341
  %348 = phi i64 [ %349, %351 ], [ %344, %341 ]
  %349 = add nsw i64 %348, 1
  %350 = icmp slt i64 %349, %345
  br i1 %350, label %351, label %362

351:                                              ; preds = %347
  %352 = getelementptr inbounds i8, i8* %346, i64 %349
  %353 = load i8, i8* %352, align 1
  %354 = icmp eq i8 %353, 0
  br i1 %354, label %347, label %355

355:                                              ; preds = %351
  %356 = getelementptr inbounds i8, i8* %346, i64 %349
  %357 = trunc i64 %349 to i32
  store i8 0, i8* %356, align 1
  %358 = load i32, i32* %20, align 4
  %359 = add nsw i32 %358, -1
  store i32 %359, i32* %20, align 4
  %360 = load i32, i32* %21, align 8
  %361 = sub nsw i32 %357, %360
  store i32 %357, i32* %21, align 8
  br label %376

362:                                              ; preds = %347, %362
  %363 = phi i64 [ %367, %362 ], [ 0, %347 ]
  %364 = getelementptr inbounds i8, i8* %346, i64 %363
  %365 = load i8, i8* %364, align 1
  %366 = icmp eq i8 %365, 0
  %367 = add nuw i64 %363, 1
  br i1 %366, label %362, label %368

368:                                              ; preds = %362
  %369 = sub i32 %343, %342
  %370 = trunc i64 %363 to i32
  %371 = and i64 %363, 4294967295
  %372 = getelementptr inbounds i8, i8* %346, i64 %371
  store i8 0, i8* %372, align 1
  %373 = load i32, i32* %20, align 4
  %374 = add nsw i32 %373, -1
  store i32 %374, i32* %20, align 4
  store i32 %370, i32* %21, align 8
  %375 = add nsw i32 %369, %370
  br label %376

376:                                              ; preds = %355, %368
  %377 = phi i32 [ %361, %355 ], [ %375, %368 ]
  %378 = sub nsw i32 %61, %377
  br label %379

379:                                              ; preds = %376, %296, %340, %285
  %380 = phi i32 [ %286, %285 ], [ %325, %340 ], [ %297, %296 ], [ %378, %376 ]
  %381 = phi i32 [ 0, %285 ], [ 0, %340 ], [ %298, %296 ], [ 0, %376 ]
  br label %60

382:                                              ; preds = %285, %294, %321, %296
  %383 = phi i32 [ 0, %321 ], [ %61, %294 ], [ %297, %296 ], [ 0, %285 ]
  %384 = load i8*, i8** %17, align 8
  br label %385

385:                                              ; preds = %194, %382
  %386 = phi i8* [ %384, %382 ], [ %174, %194 ]
  %387 = phi i32 [ %383, %382 ], [ 0, %194 ]
  %388 = icmp eq i8* %386, %18
  br i1 %388, label %390, label %389

389:                                              ; preds = %385
  call void @uprv_free_69(i8* %386) #6
  br label %390

390:                                              ; preds = %385, %389
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #6
  br label %391

391:                                              ; preds = %390, %10, %8
  %392 = phi i32 [ %9, %8 ], [ %387, %390 ], [ 0, %10 ]
  ret i32 %392
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK6icu_6920UnicodeSetStringSpan15spanNotBackUTF8EPKhi(%"class.icu_69::UnicodeSetStringSpan"*, i8*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 3
  %6 = load %"class.icu_69::UVector"*, %"class.icu_69::UVector"** %5, align 8
  %7 = getelementptr inbounds %"class.icu_69::UVector", %"class.icu_69::UVector"* %6, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 5
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 10
  %12 = load i8, i8* %11, align 4
  %13 = icmp eq i8 %12, 0
  %14 = mul nsw i32 %8, 3
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds i8, i8* %10, i64 %15
  %17 = select i1 %13, i8* %10, i8* %16
  %18 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 2
  %19 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 1
  %20 = bitcast i32* %4 to i8*
  %21 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 6
  %22 = icmp sgt i32 %8, 0
  %23 = getelementptr inbounds %"class.icu_69::UnicodeSetStringSpan", %"class.icu_69::UnicodeSetStringSpan"* %0, i64 0, i32 4
  %24 = zext i32 %8 to i64
  br label %25

25:                                               ; preds = %89, %3
  %26 = phi i32 [ %2, %3 ], [ %90, %89 ]
  %27 = load %"class.icu_69::UnicodeSet"*, %"class.icu_69::UnicodeSet"** %18, align 8
  %28 = call i32 @_ZNK6icu_6910UnicodeSet12spanBackUTF8EPKci17USetSpanCondition(%"class.icu_69::UnicodeSet"* %27, i8* %1, i32 %26, i32 0) #6
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %92, label %30

30:                                               ; preds = %25
  %31 = add nsw i32 %28, -1
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %1, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = icmp sgt i8 %34, -1
  br i1 %36, label %37, label %40

37:                                               ; preds = %30
  %38 = call signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"* %19, i32 %35) #6
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %49, label %92

40:                                               ; preds = %30
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #6
  store i32 %31, i32* %4, align 4
  %41 = call i32 @utf8_prevCharSafeBody_69(i8* %1, i32 0, i32* nonnull %4, i32 %35, i8 signext -3) #6
  %42 = load i32, i32* %4, align 4
  %43 = sub nsw i32 %28, %42
  %44 = call signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"* %19, i32 %41) #6
  %45 = icmp eq i8 %44, 0
  %46 = sub nsw i32 0, %43
  %47 = select i1 %45, i32 %46, i32 %43
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #6
  %48 = icmp sgt i32 %47, 0
  br i1 %48, label %92, label %49

49:                                               ; preds = %37, %40
  %50 = phi i32 [ %47, %40 ], [ -1, %37 ]
  br i1 %22, label %51, label %89

51:                                               ; preds = %49
  %52 = load i8*, i8** %21, align 8
  %53 = load i32*, i32** %23, align 8
  %54 = sext i32 %28 to i64
  %55 = getelementptr inbounds i8, i8* %1, i64 %54
  br label %56

56:                                               ; preds = %84, %51
  %57 = phi i64 [ 0, %51 ], [ %87, %84 ]
  %58 = phi i8* [ %52, %51 ], [ %86, %84 ]
  %59 = getelementptr inbounds i32, i32* %53, i64 %57
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %84, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %17, i64 %57
  %64 = load i8, i8* %63, align 1
  %65 = icmp eq i8 %64, -1
  %66 = icmp sgt i32 %60, %28
  %67 = or i1 %66, %65
  br i1 %67, label %84, label %68

68:                                               ; preds = %62
  %69 = sext i32 %60 to i64
  %70 = sub nsw i64 0, %69
  %71 = getelementptr inbounds i8, i8* %55, i64 %70
  br label %72

72:                                               ; preds = %79, %68
  %73 = phi i8* [ %71, %68 ], [ %81, %79 ]
  %74 = phi i8* [ %58, %68 ], [ %80, %79 ]
  %75 = phi i32 [ %60, %68 ], [ %82, %79 ]
  %76 = load i8, i8* %73, align 1
  %77 = load i8, i8* %74, align 1
  %78 = icmp eq i8 %76, %77
  br i1 %78, label %79, label %84

79:                                               ; preds = %72
  %80 = getelementptr inbounds i8, i8* %74, i64 1
  %81 = getelementptr inbounds i8, i8* %73, i64 1
  %82 = add nsw i32 %75, -1
  %83 = icmp sgt i32 %82, 0
  br i1 %83, label %72, label %92

84:                                               ; preds = %72, %62, %56
  %85 = sext i32 %60 to i64
  %86 = getelementptr inbounds i8, i8* %58, i64 %85
  %87 = add nuw nsw i64 %57, 1
  %88 = icmp eq i64 %87, %24
  br i1 %88, label %89, label %56

89:                                               ; preds = %84, %49
  %90 = add nsw i32 %50, %28
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %25

92:                                               ; preds = %37, %40, %89, %25, %79
  %93 = phi i32 [ %28, %79 ], [ %28, %37 ], [ %28, %40 ], [ 0, %89 ], [ 0, %25 ]
  ret i32 %93
}

declare i8* @u_strToUTF8_69(i8*, i32, i32*, i16*, i32, i32*) local_unnamed_addr #1

declare i32 @utf8_prevCharSafeBody_69(i8*, i32, i32*, i32, i8 signext) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nounwind allocsize(0) }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
