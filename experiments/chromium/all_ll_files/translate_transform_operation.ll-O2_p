; ModuleID = '../../third_party/blink/renderer/platform/transforms/translate_transform_operation.cc'
source_filename = "../../third_party/blink/renderer/platform/transforms/translate_transform_operation.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted" }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Length" = type <{ %union.anon, i8, i8, i8, i8 }>
%union.anon = type { i32 }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted", [4 x i8] }>
%"class.blink::CalculationValue" = type <{ %"class.WTF::RefCounted.2", [4 x i8], %"union.blink::CalculationValue::DataUnion", i8, [7 x i8] }>
%"class.WTF::RefCounted.2" = type { %"class.base::RefCounted.3" }
%"class.base::RefCounted.3" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::CalculationValue::DataUnion" = type { %class.scoped_refptr.4 }
%class.scoped_refptr.4 = type { %"class.blink::CalculationExpressionNode"* }
%"class.blink::CalculationExpressionNode" = type opaque
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatSize" = type { float, float }

$_ZNK5blink6Length5BlendERKS0_dNS_10ValueRangeE = comdat any

$_ZN5blink27TranslateTransformOperationD2Ev = comdat any

$_ZN5blink27TranslateTransformOperationD0Ev = comdat any

$_ZNK5blink27TranslateTransformOperationeqERKNS_18TransformOperationE = comdat any

$_ZNK5blink27TranslateTransformOperation5ApplyERNS_20TransformationMatrixERKNS_9FloatSizeE = comdat any

$_ZN5blink27TranslateTransformOperation4ZoomEd = comdat any

$_ZNK5blink27TranslateTransformOperation7GetTypeEv = comdat any

$_ZNK5blink27TranslateTransformOperation13PrimitiveTypeEv = comdat any

$_ZNK5blink27TranslateTransformOperation22PreservesAxisAlignmentEv = comdat any

$_ZNK5blink27TranslateTransformOperation23IsIdentityOrTranslationEv = comdat any

$_ZNK5blink27TranslateTransformOperation24HasNonTrivial3DComponentEv = comdat any

$_ZNK5blink27TranslateTransformOperation19BoxSizeDependenciesEv = comdat any

@_ZTVN5blink27TranslateTransformOperationE = hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::TranslateTransformOperation"*)* @_ZN5blink27TranslateTransformOperationD2Ev to i8*), i8* bitcast (void (%"class.blink::TranslateTransformOperation"*)* @_ZN5blink27TranslateTransformOperationD0Ev to i8*), i8* bitcast (i1 (%"class.blink::TranslateTransformOperation"*, %"class.blink::TransformOperation"*)* @_ZNK5blink27TranslateTransformOperationeqERKNS_18TransformOperationE to i8*), i8* bitcast (void (%"class.blink::TranslateTransformOperation"*, %"class.blink::TransformationMatrix"*, %"class.blink::FloatSize"*)* @_ZNK5blink27TranslateTransformOperation5ApplyERNS_20TransformationMatrixERKNS_9FloatSizeE to i8*), i8* bitcast (%"class.blink::TransformOperation"* (%"class.blink::TranslateTransformOperation"*, %"class.blink::TransformOperation"*)* @_ZN5blink27TranslateTransformOperation10AccumulateERKNS_18TransformOperationE to i8*), i8* bitcast (%"class.blink::TransformOperation"* (%"class.blink::TranslateTransformOperation"*, %"class.blink::TransformOperation"*, double, i1)* @_ZN5blink27TranslateTransformOperation5BlendEPKNS_18TransformOperationEdb to i8*), i8* bitcast (%"class.blink::TransformOperation"* (%"class.blink::TranslateTransformOperation"*, double)* @_ZN5blink27TranslateTransformOperation4ZoomEd to i8*), i8* bitcast (i32 (%"class.blink::TranslateTransformOperation"*)* @_ZNK5blink27TranslateTransformOperation7GetTypeEv to i8*), i8* bitcast (i32 (%"class.blink::TranslateTransformOperation"*)* @_ZNK5blink27TranslateTransformOperation13PrimitiveTypeEv to i8*), i8* bitcast (i1 (%"class.blink::TranslateTransformOperation"*)* @_ZNK5blink27TranslateTransformOperation22PreservesAxisAlignmentEv to i8*), i8* bitcast (i1 (%"class.blink::TranslateTransformOperation"*)* @_ZNK5blink27TranslateTransformOperation23IsIdentityOrTranslationEv to i8*), i8* bitcast (i1 (%"class.blink::TranslateTransformOperation"*)* @_ZNK5blink27TranslateTransformOperation24HasNonTrivial3DComponentEv to i8*), i8* bitcast (i32 (%"class.blink::TranslateTransformOperation"*)* @_ZNK5blink27TranslateTransformOperation19BoxSizeDependenciesEv to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::TransformOperation"* @_ZN5blink27TranslateTransformOperation10AccumulateERKNS_18TransformOperationE(%"class.blink::TranslateTransformOperation"*, %"class.blink::TransformOperation"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.blink::Length"*
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.blink::Length"*
  %7 = bitcast %"class.blink::TransformOperation"* %1 to %"class.blink::TranslateTransformOperation"*
  %8 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #7
  %9 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 1
  %10 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 2
  %11 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 3
  %12 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %1, i64 0, i32 2
  %14 = bitcast [4 x i8]* %13 to %"class.blink::Length"*
  store i64 -6148914691236517206, i64* %3, align 8
  %15 = tail call <2 x float> @_ZNK5blink6Length19GetPixelsAndPercentEv(%"class.blink::Length"* %12) #7, !noalias !2
  %16 = tail call <2 x float> @_ZNK5blink6Length19GetPixelsAndPercentEv(%"class.blink::Length"* %14) #7, !noalias !2
  %17 = fadd <2 x float> %15, %16
  %18 = extractelement <2 x float> %17, i32 0
  %19 = extractelement <2 x float> %17, i32 1
  %20 = fcmp oeq float %19, 0.000000e+00
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = bitcast i64* %3 to float*
  store float %18, float* %22, align 8, !alias.scope !2
  store i8 0, i8* %9, align 4, !alias.scope !2
  store i8 2, i8* %10, align 1, !alias.scope !2
  store i8 1, i8* %11, align 2, !alias.scope !2
  br label %34

23:                                               ; preds = %2
  %24 = fcmp oeq float %18, 0.000000e+00
  br i1 %24, label %25, label %27

25:                                               ; preds = %23
  %26 = bitcast i64* %3 to float*
  store float %19, float* %26, align 8, !alias.scope !2
  store i8 0, i8* %9, align 4, !alias.scope !2
  store i8 1, i8* %10, align 1, !alias.scope !2
  store i8 1, i8* %11, align 2, !alias.scope !2
  br label %34

27:                                               ; preds = %23
  %28 = tail call noalias i8* @malloc(i64 24) #7, !noalias !2
  %29 = bitcast i8* %28 to %"class.blink::CalculationValue"*
  %30 = bitcast i8* %28 to i32*
  store i32 1, i32* %30, align 4, !noalias !2
  %31 = getelementptr inbounds i8, i8* %28, i64 8
  %32 = bitcast i8* %31 to <2 x float>*
  store <2 x float> %17, <2 x float>* %32, align 8, !noalias !2
  %33 = getelementptr inbounds i8, i8* %28, i64 16
  store i8 0, i8* %33, align 8, !noalias !2
  call void @_ZN5blink6LengthC1E13scoped_refptrIKNS_16CalculationValueEE(%"class.blink::Length"* nonnull %4, %"class.blink::CalculationValue"* %29) #7
  br label %34

34:                                               ; preds = %21, %25, %27
  %35 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7
  %36 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 1
  %37 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 2
  %38 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 3
  %39 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 2
  %40 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %7, i64 0, i32 2
  store i64 -6148914691236517206, i64* %5, align 8
  %41 = call <2 x float> @_ZNK5blink6Length19GetPixelsAndPercentEv(%"class.blink::Length"* %39) #7, !noalias !5
  %42 = call <2 x float> @_ZNK5blink6Length19GetPixelsAndPercentEv(%"class.blink::Length"* %40) #7, !noalias !5
  %43 = fadd <2 x float> %41, %42
  %44 = extractelement <2 x float> %43, i32 0
  %45 = extractelement <2 x float> %43, i32 1
  %46 = fcmp oeq float %45, 0.000000e+00
  br i1 %46, label %47, label %49

47:                                               ; preds = %34
  %48 = bitcast i64* %5 to float*
  store float %44, float* %48, align 8, !alias.scope !5
  store i8 0, i8* %36, align 4, !alias.scope !5
  store i8 2, i8* %37, align 1, !alias.scope !5
  store i8 1, i8* %38, align 2, !alias.scope !5
  br label %60

49:                                               ; preds = %34
  %50 = fcmp oeq float %44, 0.000000e+00
  br i1 %50, label %51, label %53

51:                                               ; preds = %49
  %52 = bitcast i64* %5 to float*
  store float %45, float* %52, align 8, !alias.scope !5
  store i8 0, i8* %36, align 4, !alias.scope !5
  store i8 1, i8* %37, align 1, !alias.scope !5
  store i8 1, i8* %38, align 2, !alias.scope !5
  br label %60

53:                                               ; preds = %49
  %54 = call noalias i8* @malloc(i64 24) #7, !noalias !5
  %55 = bitcast i8* %54 to %"class.blink::CalculationValue"*
  %56 = bitcast i8* %54 to i32*
  store i32 1, i32* %56, align 4, !noalias !5
  %57 = getelementptr inbounds i8, i8* %54, i64 8
  %58 = bitcast i8* %57 to <2 x float>*
  store <2 x float> %43, <2 x float>* %58, align 8, !noalias !5
  %59 = getelementptr inbounds i8, i8* %54, i64 16
  store i8 0, i8* %59, align 8, !noalias !5
  call void @_ZN5blink6LengthC1E13scoped_refptrIKNS_16CalculationValueEE(%"class.blink::Length"* nonnull %6, %"class.blink::CalculationValue"* %55) #7
  br label %60

60:                                               ; preds = %47, %51, %53
  %61 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 4
  %62 = load double, double* %61, align 8
  %63 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %1, i64 2
  %64 = bitcast %"class.blink::TransformOperation"* %63 to double*
  %65 = load double, double* %64, align 8
  %66 = fadd double %62, %65
  %67 = load i8, i8* %10, align 1
  %68 = icmp eq i8 %67, 8
  br i1 %68, label %69, label %71

69:                                               ; preds = %60
  %70 = fcmp oeq double %66, 0.000000e+00
  br label %84

71:                                               ; preds = %60
  %72 = load i8, i8* %11, align 2, !range !8
  %73 = icmp eq i8 %72, 0
  %74 = bitcast i64* %3 to float*
  %75 = load float, float* %74, align 8
  %76 = fcmp oeq float %75, 0.000000e+00
  %77 = bitcast float %75 to i32
  %78 = icmp eq i32 %77, 0
  %79 = select i1 %73, i1 %78, i1 %76
  %80 = fcmp oeq double %66, 0.000000e+00
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = or i1 %82, %81
  br i1 %83, label %84, label %89

84:                                               ; preds = %71, %69
  %85 = phi i1 [ true, %69 ], [ %81, %71 ]
  %86 = phi i1 [ %70, %69 ], [ %80, %71 ]
  %87 = select i1 %86, i32 5, i32 14
  %88 = select i1 %85, i32 %87, i32 13
  br label %89

89:                                               ; preds = %71, %84
  %90 = phi i32 [ %88, %84 ], [ 3, %71 ]
  %91 = call noalias i8* @malloc(i64 48) #7
  %92 = getelementptr inbounds i8, i8* %91, i64 8
  %93 = bitcast i8* %92 to i32*
  store i32 1, i32* %93, align 4
  %94 = bitcast i8* %91 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink27TranslateTransformOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %94, align 8
  %95 = getelementptr inbounds i8, i8* %91, i64 12
  %96 = bitcast i8* %95 to i64*
  %97 = load i64, i64* %3, align 8
  store i64 %97, i64* %96, align 4
  %98 = and i64 %97, 280375465082880
  %99 = icmp eq i64 %98, 8796093022208
  br i1 %99, label %100, label %102

100:                                              ; preds = %89
  %101 = bitcast i8* %95 to %"class.blink::Length"*
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %101) #7
  br label %102

102:                                              ; preds = %100, %89
  %103 = getelementptr inbounds i8, i8* %91, i64 20
  %104 = bitcast i8* %103 to i64*
  %105 = load i64, i64* %5, align 8
  store i64 %105, i64* %104, align 4
  %106 = and i64 %105, 280375465082880
  %107 = icmp eq i64 %106, 8796093022208
  br i1 %107, label %108, label %110

108:                                              ; preds = %102
  %109 = bitcast i8* %103 to %"class.blink::Length"*
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %109) #7
  br label %110

110:                                              ; preds = %108, %102
  %111 = getelementptr inbounds i8, i8* %91, i64 32
  %112 = bitcast i8* %111 to double*
  store double %66, double* %112, align 8
  %113 = getelementptr inbounds i8, i8* %91, i64 40
  %114 = bitcast i8* %113 to i32*
  store i32 %90, i32* %114, align 8
  %115 = load i8, i8* %37, align 1
  %116 = icmp eq i8 %115, 8
  br i1 %116, label %117, label %118

117:                                              ; preds = %110
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %6) #7
  br label %118

118:                                              ; preds = %110, %117
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  %119 = load i8, i8* %10, align 1
  %120 = icmp eq i8 %119, 8
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %4) #7
  br label %122

122:                                              ; preds = %118, %121
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #7
  %123 = bitcast i8* %91 to %"class.blink::TransformOperation"*
  ret %"class.blink::TransformOperation"* %123
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::TransformOperation"* @_ZN5blink27TranslateTransformOperation5BlendEPKNS_18TransformOperationEdb(%"class.blink::TranslateTransformOperation"*, %"class.blink::TransformOperation"*, double, i1 zeroext) unnamed_addr #2 align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.blink::Length"*
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"class.blink::Length"*
  %9 = alloca i64, align 8
  %10 = bitcast i64* %9 to %"class.blink::Length"*
  %11 = alloca i64, align 8
  %12 = bitcast i64* %11 to %"class.blink::Length"*
  %13 = alloca i64, align 8
  %14 = bitcast i64* %13 to %"class.blink::Length"*
  %15 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #7
  %16 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 2
  store i64 -6196950888238546944, i64* %5, align 8
  br i1 %3, label %17, label %62

17:                                               ; preds = %4
  %18 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #7
  %19 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 1
  call void @_ZNK5blink6Length5BlendERKS0_dNS_10ValueRangeE(%"class.blink::Length"* nonnull sret %8, %"class.blink::Length"* nonnull %6, %"class.blink::Length"* dereferenceable(8) %19, double %2, i32 0)
  %20 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  %21 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 2
  call void @_ZNK5blink6Length5BlendERKS0_dNS_10ValueRangeE(%"class.blink::Length"* nonnull sret %10, %"class.blink::Length"* nonnull %6, %"class.blink::Length"* dereferenceable(8) %21, double %2, i32 0)
  %22 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 4
  %23 = load double, double* %22, align 8
  %24 = fsub double 0.000000e+00, %23
  %25 = fmul double %24, %2
  %26 = fadd double %23, %25
  %27 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 5
  %28 = load i32, i32* %27, align 8
  %29 = call noalias i8* @malloc(i64 48) #7
  %30 = getelementptr inbounds i8, i8* %29, i64 8
  %31 = bitcast i8* %30 to i32*
  store i32 1, i32* %31, align 4
  %32 = bitcast i8* %29 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink27TranslateTransformOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = getelementptr inbounds i8, i8* %29, i64 12
  %34 = bitcast i8* %33 to i64*
  %35 = load i64, i64* %7, align 8
  store i64 %35, i64* %34, align 4
  %36 = and i64 %35, 280375465082880
  %37 = icmp eq i64 %36, 8796093022208
  br i1 %37, label %38, label %40

38:                                               ; preds = %17
  %39 = bitcast i8* %33 to %"class.blink::Length"*
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %39) #7
  br label %40

40:                                               ; preds = %38, %17
  %41 = getelementptr inbounds i8, i8* %29, i64 20
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %9, align 8
  store i64 %43, i64* %42, align 4
  %44 = and i64 %43, 280375465082880
  %45 = icmp eq i64 %44, 8796093022208
  br i1 %45, label %46, label %48

46:                                               ; preds = %40
  %47 = bitcast i8* %41 to %"class.blink::Length"*
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %47) #7
  br label %48

48:                                               ; preds = %46, %40
  %49 = getelementptr inbounds i8, i8* %29, i64 32
  %50 = bitcast i8* %49 to double*
  store double %26, double* %50, align 8
  %51 = getelementptr inbounds i8, i8* %29, i64 40
  %52 = bitcast i8* %51 to i32*
  store i32 %28, i32* %52, align 8
  %53 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %10, i64 0, i32 2
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %54, 8
  br i1 %55, label %56, label %57

56:                                               ; preds = %48
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %10) #7
  br label %57

57:                                               ; preds = %48, %56
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  %58 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %8, i64 0, i32 2
  %59 = load i8, i8* %58, align 1
  %60 = icmp eq i8 %59, 8
  br i1 %60, label %61, label %139

61:                                               ; preds = %57
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %8) #7
  br label %139

62:                                               ; preds = %4
  %63 = bitcast %"class.blink::TransformOperation"* %1 to %"class.blink::TranslateTransformOperation"*
  %64 = icmp ne %"class.blink::TransformOperation"* %1, null
  %65 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %1, i64 0, i32 2
  %66 = bitcast [4 x i8]* %65 to %"class.blink::Length"*
  %67 = select i1 %64, %"class.blink::Length"* %66, %"class.blink::Length"* %6
  %68 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %63, i64 0, i32 2
  %69 = select i1 %64, %"class.blink::Length"* %68, %"class.blink::Length"* %6
  br i1 %64, label %70, label %74

70:                                               ; preds = %62
  %71 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %1, i64 2
  %72 = bitcast %"class.blink::TransformOperation"* %71 to double*
  %73 = load double, double* %72, align 8
  br label %74

74:                                               ; preds = %62, %70
  %75 = phi double [ %73, %70 ], [ 0.000000e+00, %62 ]
  %76 = bitcast %"class.blink::TranslateTransformOperation"* %0 to %"class.blink::TransformOperation"*
  %77 = bitcast %"class.blink::TranslateTransformOperation"* %0 to i32 (%"class.blink::TransformOperation"*)***
  %78 = load i32 (%"class.blink::TransformOperation"*)**, i32 (%"class.blink::TransformOperation"*)*** %77, align 8
  %79 = getelementptr inbounds i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %78, i64 7
  %80 = load i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %79, align 8
  %81 = tail call i32 %80(%"class.blink::TransformOperation"* %76) #7
  %82 = add i32 %81, -11
  %83 = icmp ult i32 %82, 10
  br i1 %83, label %95, label %84

84:                                               ; preds = %74
  %85 = icmp eq %"class.blink::TransformOperation"* %1, null
  br i1 %85, label %95, label %86

86:                                               ; preds = %84
  %87 = bitcast %"class.blink::TransformOperation"* %1 to i32 (%"class.blink::TransformOperation"*)***
  %88 = load i32 (%"class.blink::TransformOperation"*)**, i32 (%"class.blink::TransformOperation"*)*** %87, align 8
  %89 = getelementptr inbounds i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %88, i64 7
  %90 = load i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %89, align 8
  %91 = tail call i32 %90(%"class.blink::TransformOperation"* nonnull %1) #7
  %92 = add i32 %91, -11
  %93 = icmp ult i32 %92, 10
  %94 = select i1 %93, i32 14, i32 5
  br label %95

95:                                               ; preds = %84, %86, %74
  %96 = phi i32 [ 14, %74 ], [ 5, %84 ], [ %94, %86 ]
  %97 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #7
  %98 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 1
  call void @_ZNK5blink6Length5BlendERKS0_dNS_10ValueRangeE(%"class.blink::Length"* nonnull sret %12, %"class.blink::Length"* %98, %"class.blink::Length"* dereferenceable(8) %67, double %2, i32 0)
  %99 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #7
  %100 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 2
  call void @_ZNK5blink6Length5BlendERKS0_dNS_10ValueRangeE(%"class.blink::Length"* nonnull sret %14, %"class.blink::Length"* %100, %"class.blink::Length"* dereferenceable(8) %69, double %2, i32 0)
  %101 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 4
  %102 = load double, double* %101, align 8
  %103 = fsub double %102, %75
  %104 = fmul double %103, %2
  %105 = fadd double %75, %104
  %106 = call noalias i8* @malloc(i64 48) #7
  %107 = getelementptr inbounds i8, i8* %106, i64 8
  %108 = bitcast i8* %107 to i32*
  store i32 1, i32* %108, align 4
  %109 = bitcast i8* %106 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink27TranslateTransformOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %109, align 8
  %110 = getelementptr inbounds i8, i8* %106, i64 12
  %111 = bitcast i8* %110 to i64*
  %112 = load i64, i64* %11, align 8
  store i64 %112, i64* %111, align 4
  %113 = and i64 %112, 280375465082880
  %114 = icmp eq i64 %113, 8796093022208
  br i1 %114, label %115, label %117

115:                                              ; preds = %95
  %116 = bitcast i8* %110 to %"class.blink::Length"*
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %116) #7
  br label %117

117:                                              ; preds = %115, %95
  %118 = getelementptr inbounds i8, i8* %106, i64 20
  %119 = bitcast i8* %118 to i64*
  %120 = load i64, i64* %13, align 8
  store i64 %120, i64* %119, align 4
  %121 = and i64 %120, 280375465082880
  %122 = icmp eq i64 %121, 8796093022208
  br i1 %122, label %123, label %125

123:                                              ; preds = %117
  %124 = bitcast i8* %118 to %"class.blink::Length"*
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %124) #7
  br label %125

125:                                              ; preds = %123, %117
  %126 = getelementptr inbounds i8, i8* %106, i64 32
  %127 = bitcast i8* %126 to double*
  store double %105, double* %127, align 8
  %128 = getelementptr inbounds i8, i8* %106, i64 40
  %129 = bitcast i8* %128 to i32*
  store i32 %96, i32* %129, align 8
  %130 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %14, i64 0, i32 2
  %131 = load i8, i8* %130, align 1
  %132 = icmp eq i8 %131, 8
  br i1 %132, label %133, label %134

133:                                              ; preds = %125
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %14) #7
  br label %134

134:                                              ; preds = %125, %133
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #7
  %135 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %12, i64 0, i32 2
  %136 = load i8, i8* %135, align 1
  %137 = icmp eq i8 %136, 8
  br i1 %137, label %138, label %139

138:                                              ; preds = %134
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %12) #7
  br label %139

139:                                              ; preds = %138, %134, %61, %57
  %140 = phi i8* [ %18, %57 ], [ %18, %61 ], [ %97, %134 ], [ %97, %138 ]
  %141 = phi i8* [ %29, %57 ], [ %29, %61 ], [ %106, %134 ], [ %106, %138 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140) #7
  %142 = load i8, i8* %16, align 1
  %143 = icmp eq i8 %142, 8
  br i1 %143, label %144, label %145

144:                                              ; preds = %139
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %6) #7
  br label %145

145:                                              ; preds = %139, %144
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #7
  %146 = bitcast i8* %141 to %"class.blink::TransformOperation"*
  ret %"class.blink::TransformOperation"* %146
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink6Length5BlendERKS0_dNS_10ValueRangeE(%"class.blink::Length"* noalias sret, %"class.blink::Length"*, %"class.blink::Length"* dereferenceable(8), double, i32) local_unnamed_addr #2 comdat align 2 {
  %6 = fcmp oeq double %3, 0.000000e+00
  br i1 %6, label %7, label %14

7:                                                ; preds = %5
  %8 = bitcast %"class.blink::Length"* %2 to i64*
  %9 = bitcast %"class.blink::Length"* %0 to i64*
  %10 = load i64, i64* %8, align 4
  store i64 %10, i64* %9, align 4
  %11 = and i64 %10, 280375465082880
  %12 = icmp eq i64 %11, 8796093022208
  br i1 %12, label %13, label %91

13:                                               ; preds = %7
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %0) #7
  br label %91

14:                                               ; preds = %5
  %15 = fcmp oeq double %3, 1.000000e+00
  br i1 %15, label %16, label %23

16:                                               ; preds = %14
  %17 = bitcast %"class.blink::Length"* %1 to i64*
  %18 = bitcast %"class.blink::Length"* %0 to i64*
  %19 = load i64, i64* %17, align 4
  store i64 %19, i64* %18, align 4
  %20 = and i64 %19, 280375465082880
  %21 = icmp eq i64 %20, 8796093022208
  br i1 %21, label %22, label %91

22:                                               ; preds = %16
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %0) #7
  br label %91

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 2
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, 8
  br i1 %26, label %31, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 2
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 8
  br i1 %30, label %31, label %32

31:                                               ; preds = %27, %23
  tail call void @_ZNK5blink6Length15BlendMixedTypesERKS0_dNS_10ValueRangeE(%"class.blink::Length"* sret %0, %"class.blink::Length"* %1, %"class.blink::Length"* dereferenceable(8) %2, double %3, i32 %4) #7
  br label %91

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 3
  %34 = load i8, i8* %33, align 2, !range !8
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %32
  %37 = bitcast %"class.blink::Length"* %2 to float*
  %38 = load float, float* %37, align 4
  %39 = fcmp oeq float %38, 0.000000e+00
  %40 = bitcast float %38 to i32
  br i1 %39, label %66, label %46

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  %45 = bitcast i32 %43 to float
  br i1 %44, label %71, label %46

46:                                               ; preds = %41, %36
  %47 = phi i32 [ %43, %41 ], [ %40, %36 ]
  %48 = phi float [ %45, %41 ], [ %38, %36 ]
  %49 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 3
  %50 = load i8, i8* %49, align 2, !range !8
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %58, label %52

52:                                               ; preds = %46
  %53 = bitcast %"class.blink::Length"* %1 to float*
  %54 = load float, float* %53, align 4
  %55 = fcmp oeq float %54, 0.000000e+00
  %56 = icmp eq i8 %25, %29
  %57 = or i1 %56, %55
  br i1 %57, label %65, label %64

58:                                               ; preds = %46
  %59 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  %62 = icmp eq i8 %25, %29
  %63 = or i1 %62, %61
  br i1 %63, label %65, label %64

64:                                               ; preds = %58, %52
  tail call void @_ZNK5blink6Length15BlendMixedTypesERKS0_dNS_10ValueRangeE(%"class.blink::Length"* sret %0, %"class.blink::Length"* %1, %"class.blink::Length"* dereferenceable(8) %2, double %3, i32 %4) #7
  br label %91

65:                                               ; preds = %58, %52
  br i1 %35, label %69, label %66

66:                                               ; preds = %36, %65
  %67 = phi float [ %48, %65 ], [ %38, %36 ]
  %68 = fcmp oeq float %67, 0.000000e+00
  br i1 %68, label %71, label %90

69:                                               ; preds = %65
  %70 = icmp eq i32 %47, 0
  br i1 %70, label %71, label %90

71:                                               ; preds = %41, %69, %66
  %72 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 3
  %73 = load i8, i8* %72, align 2, !range !8
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %79, label %75

75:                                               ; preds = %71
  %76 = bitcast %"class.blink::Length"* %1 to float*
  %77 = load float, float* %76, align 4
  %78 = fcmp oeq float %77, 0.000000e+00
  br i1 %78, label %83, label %90

79:                                               ; preds = %71
  %80 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %90

83:                                               ; preds = %75, %79
  %84 = bitcast %"class.blink::Length"* %1 to i64*
  %85 = bitcast %"class.blink::Length"* %0 to i64*
  %86 = load i64, i64* %84, align 4
  store i64 %86, i64* %85, align 4
  %87 = and i64 %86, 280375465082880
  %88 = icmp eq i64 %87, 8796093022208
  br i1 %88, label %89, label %91

89:                                               ; preds = %83
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %0) #7
  br label %91

90:                                               ; preds = %75, %66, %79, %69
  tail call void @_ZNK5blink6Length14BlendSameTypesERKS0_dNS_10ValueRangeE(%"class.blink::Length"* sret %0, %"class.blink::Length"* %1, %"class.blink::Length"* dereferenceable(8) %2, double %3, i32 %4) #7
  br label %91

91:                                               ; preds = %89, %83, %22, %16, %13, %7, %90, %64, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::TranslateTransformOperation"* @_ZN5blink27TranslateTransformOperation13ZoomTranslateEd(%"class.blink::TranslateTransformOperation"*, double) local_unnamed_addr #2 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.blink::Length"*
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.blink::Length"*
  %7 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #7
  %8 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 1
  call void @_ZNK5blink6Length4ZoomEd(%"class.blink::Length"* nonnull sret %4, %"class.blink::Length"* %8, double %1) #7
  %9 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #7
  %10 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 2
  call void @_ZNK5blink6Length4ZoomEd(%"class.blink::Length"* nonnull sret %6, %"class.blink::Length"* %10, double %1) #7
  %11 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 4
  %12 = load double, double* %11, align 8
  %13 = fmul double %12, %1
  %14 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 5
  %15 = load i32, i32* %14, align 8
  %16 = call noalias i8* @malloc(i64 48) #7
  %17 = bitcast i8* %16 to %"class.blink::TranslateTransformOperation"*
  %18 = getelementptr inbounds i8, i8* %16, i64 8
  %19 = bitcast i8* %18 to i32*
  store i32 1, i32* %19, align 4
  %20 = bitcast i8* %16 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink27TranslateTransformOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds i8, i8* %16, i64 12
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %3, align 8
  store i64 %23, i64* %22, align 4
  %24 = and i64 %23, 280375465082880
  %25 = icmp eq i64 %24, 8796093022208
  br i1 %25, label %26, label %28

26:                                               ; preds = %2
  %27 = bitcast i8* %21 to %"class.blink::Length"*
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %27) #7
  br label %28

28:                                               ; preds = %26, %2
  %29 = getelementptr inbounds i8, i8* %16, i64 20
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %5, align 8
  store i64 %31, i64* %30, align 4
  %32 = and i64 %31, 280375465082880
  %33 = icmp eq i64 %32, 8796093022208
  br i1 %33, label %34, label %36

34:                                               ; preds = %28
  %35 = bitcast i8* %29 to %"class.blink::Length"*
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %35) #7
  br label %36

36:                                               ; preds = %28, %34
  %37 = getelementptr inbounds i8, i8* %16, i64 32
  %38 = bitcast i8* %37 to double*
  store double %13, double* %38, align 8
  %39 = getelementptr inbounds i8, i8* %16, i64 40
  %40 = bitcast i8* %39 to i32*
  store i32 %15, i32* %40, align 8
  %41 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 2
  %42 = load i8, i8* %41, align 1
  %43 = icmp eq i8 %42, 8
  br i1 %43, label %44, label %45

44:                                               ; preds = %36
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %6) #7
  br label %45

45:                                               ; preds = %36, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #7
  %46 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 2
  %47 = load i8, i8* %46, align 1
  %48 = icmp eq i8 %47, 8
  br i1 %48, label %49, label %50

49:                                               ; preds = %45
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %4) #7
  br label %50

50:                                               ; preds = %45, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #7
  ret %"class.blink::TranslateTransformOperation"* %17
}

declare void @_ZNK5blink6Length4ZoomEd(%"class.blink::Length"* sret, %"class.blink::Length"*, double) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink27TranslateTransformOperationD2Ev(%"class.blink::TranslateTransformOperation"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink27TranslateTransformOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 2, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 8
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 1, i32 2
  %10 = load i8, i8* %9, align 1
  %11 = icmp eq i8 %10, 8
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %13) #7
  br label %14

14:                                               ; preds = %8, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink27TranslateTransformOperationD0Ev(%"class.blink::TranslateTransformOperation"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink27TranslateTransformOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 2, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 8
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %7) #7
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 1, i32 2
  %10 = load i8, i8* %9, align 1
  %11 = icmp eq i8 %10, 8
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %13) #7
  br label %14

14:                                               ; preds = %8, %12
  %15 = bitcast %"class.blink::TranslateTransformOperation"* %0 to i8*
  tail call void @free(i8* %15) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink27TranslateTransformOperationeqERKNS_18TransformOperationE(%"class.blink::TranslateTransformOperation"*, %"class.blink::TransformOperation"* dereferenceable(16)) unnamed_addr #2 comdat align 2 {
  %3 = bitcast %"class.blink::TranslateTransformOperation"* %0 to %"class.blink::TransformOperation"*
  %4 = bitcast %"class.blink::TransformOperation"* %1 to i32 (%"class.blink::TransformOperation"*)***
  %5 = load i32 (%"class.blink::TransformOperation"*)**, i32 (%"class.blink::TransformOperation"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %5, i64 7
  %7 = load i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %6, align 8
  %8 = tail call i32 %7(%"class.blink::TransformOperation"* %1) #7
  %9 = bitcast %"class.blink::TranslateTransformOperation"* %0 to i32 (%"class.blink::TransformOperation"*)***
  %10 = load i32 (%"class.blink::TransformOperation"*)**, i32 (%"class.blink::TransformOperation"*)*** %9, align 8
  %11 = getelementptr inbounds i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %10, i64 7
  %12 = load i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %11, align 8
  %13 = tail call i32 %12(%"class.blink::TransformOperation"* %3) #7
  %14 = icmp eq i32 %8, %13
  br i1 %14, label %15, label %113

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %1, i64 0, i32 2
  %18 = bitcast [4 x i8]* %17 to %"class.blink::Length"*
  %19 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 1, i32 2
  %20 = load i8, i8* %19, align 1
  %21 = getelementptr inbounds [4 x i8], [4 x i8]* %17, i64 1, i64 1
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %20, %22
  br i1 %23, label %24, label %113

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 1, i32 1
  %26 = load i8, i8* %25, align 4, !range !8
  %27 = getelementptr inbounds [4 x i8], [4 x i8]* %17, i64 1, i64 0
  %28 = load i8, i8* %27, align 4, !range !8
  %29 = icmp eq i8 %26, %28
  br i1 %29, label %30, label %113

30:                                               ; preds = %24
  %31 = icmp eq i8 %20, 12
  br i1 %31, label %60, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 1, i32 3
  %34 = load i8, i8* %33, align 2, !range !8
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %32
  %37 = bitcast %"class.blink::Length"* %16 to float*
  %38 = load float, float* %37, align 4
  br label %43

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %16, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = sitofp i32 %41 to float
  br label %43

43:                                               ; preds = %39, %36
  %44 = phi float [ %38, %36 ], [ %42, %39 ]
  %45 = getelementptr inbounds [4 x i8], [4 x i8]* %17, i64 1, i64 2
  %46 = load i8, i8* %45, align 2, !range !8
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %43
  %49 = bitcast [4 x i8]* %17 to float*
  %50 = load float, float* %49, align 4
  br label %55

51:                                               ; preds = %43
  %52 = bitcast [4 x i8]* %17 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = sitofp i32 %53 to float
  br label %55

55:                                               ; preds = %51, %48
  %56 = phi float [ %50, %48 ], [ %54, %51 ]
  %57 = fcmp oeq float %44, %56
  br i1 %57, label %60, label %58

58:                                               ; preds = %55
  %59 = tail call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %16, %"class.blink::Length"* dereferenceable(8) %18) #7
  br i1 %59, label %60, label %113

60:                                               ; preds = %30, %55, %58
  %61 = bitcast %"class.blink::TransformOperation"* %1 to %"class.blink::TranslateTransformOperation"*
  %62 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 2
  %63 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %61, i64 0, i32 2
  %64 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 2, i32 2
  %65 = load i8, i8* %64, align 1
  %66 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %61, i64 0, i32 2, i32 2
  %67 = load i8, i8* %66, align 1
  %68 = icmp eq i8 %65, %67
  br i1 %68, label %69, label %113

69:                                               ; preds = %60
  %70 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 2, i32 1
  %71 = load i8, i8* %70, align 4, !range !8
  %72 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %1, i64 1, i32 1
  %73 = bitcast %"class.WTF::RefCounted"* %72 to i8*
  %74 = load i8, i8* %73, align 4, !range !8
  %75 = icmp eq i8 %71, %74
  br i1 %75, label %76, label %113

76:                                               ; preds = %69
  %77 = icmp eq i8 %65, 12
  br i1 %77, label %106, label %78

78:                                               ; preds = %76
  %79 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 2, i32 3
  %80 = load i8, i8* %79, align 2, !range !8
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %78
  %83 = bitcast %"class.blink::Length"* %62 to float*
  %84 = load float, float* %83, align 4
  br label %89

85:                                               ; preds = %78
  %86 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %62, i64 0, i32 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = sitofp i32 %87 to float
  br label %89

89:                                               ; preds = %85, %82
  %90 = phi float [ %84, %82 ], [ %88, %85 ]
  %91 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %61, i64 0, i32 2, i32 3
  %92 = load i8, i8* %91, align 2, !range !8
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %89
  %95 = bitcast %"class.blink::Length"* %63 to float*
  %96 = load float, float* %95, align 4
  br label %101

97:                                               ; preds = %89
  %98 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %63, i64 0, i32 0, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = sitofp i32 %99 to float
  br label %101

101:                                              ; preds = %97, %94
  %102 = phi float [ %96, %94 ], [ %100, %97 ]
  %103 = fcmp oeq float %90, %102
  br i1 %103, label %106, label %104

104:                                              ; preds = %101
  %105 = tail call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %62, %"class.blink::Length"* dereferenceable(8) %63) #7
  br i1 %105, label %106, label %113

106:                                              ; preds = %76, %101, %104
  %107 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 4
  %108 = load double, double* %107, align 8
  %109 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %1, i64 2
  %110 = bitcast %"class.blink::TransformOperation"* %109 to double*
  %111 = load double, double* %110, align 8
  %112 = fcmp oeq double %108, %111
  br label %113

113:                                              ; preds = %60, %69, %15, %24, %58, %104, %106, %2
  %114 = phi i1 [ false, %2 ], [ false, %104 ], [ false, %58 ], [ %112, %106 ], [ false, %24 ], [ false, %15 ], [ false, %69 ], [ false, %60 ]
  ret i1 %114
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink27TranslateTransformOperation5ApplyERNS_20TransformationMatrixERKNS_9FloatSizeE(%"class.blink::TranslateTransformOperation"*, %"class.blink::TransformationMatrix"* dereferenceable(128), %"class.blink::FloatSize"* dereferenceable(8)) unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %2, i64 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = tail call float @_ZN5blink19FloatValueForLengthERKNS_6LengthEf(%"class.blink::Length"* dereferenceable(8) %4, float %6) #7
  %8 = fpext float %7 to double
  %9 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %2, i64 0, i32 1
  %11 = load float, float* %10, align 4
  %12 = tail call float @_ZN5blink19FloatValueForLengthERKNS_6LengthEf(%"class.blink::Length"* dereferenceable(8) %9, float %11) #7
  %13 = fpext float %12 to double
  %14 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 4
  %15 = load double, double* %14, align 8
  %16 = tail call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix11Translate3dEddd(%"class.blink::TransformationMatrix"* %1, double %8, double %13, double %15) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::TransformOperation"* @_ZN5blink27TranslateTransformOperation4ZoomEd(%"class.blink::TranslateTransformOperation"*, double) unnamed_addr #2 comdat align 2 {
  %3 = tail call %"class.blink::TranslateTransformOperation"* @_ZN5blink27TranslateTransformOperation13ZoomTranslateEd(%"class.blink::TranslateTransformOperation"* %0, double %1)
  %4 = bitcast %"class.blink::TranslateTransformOperation"* %3 to %"class.blink::TransformOperation"*
  ret %"class.blink::TransformOperation"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink27TranslateTransformOperation7GetTypeEv(%"class.blink::TranslateTransformOperation"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink27TranslateTransformOperation13PrimitiveTypeEv(%"class.blink::TranslateTransformOperation"*) unnamed_addr #2 comdat align 2 {
  ret i32 14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink27TranslateTransformOperation22PreservesAxisAlignmentEv(%"class.blink::TranslateTransformOperation"*) unnamed_addr #2 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink27TranslateTransformOperation23IsIdentityOrTranslationEv(%"class.blink::TranslateTransformOperation"*) unnamed_addr #2 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink27TranslateTransformOperation24HasNonTrivial3DComponentEv(%"class.blink::TranslateTransformOperation"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 4
  %3 = load double, double* %2, align 8
  %4 = fcmp une double %3, 0.000000e+00
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink27TranslateTransformOperation19BoxSizeDependenciesEv(%"class.blink::TranslateTransformOperation"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 1, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 1
  %5 = icmp eq i8 %3, 8
  %6 = or i1 %4, %5
  %7 = zext i1 %6 to i32
  %8 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %0, i64 0, i32 2, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 1
  %11 = icmp eq i8 %9, 8
  %12 = or i1 %10, %11
  %13 = select i1 %12, i32 2, i32 0
  %14 = or i32 %13, %7
  ret i32 %14
}

declare <2 x float> @_ZNK5blink6Length19GetPixelsAndPercentEv(%"class.blink::Length"*) local_unnamed_addr #3

declare void @_ZN5blink6LengthC1E13scoped_refptrIKNS_16CalculationValueEE(%"class.blink::Length"*, %"class.blink::CalculationValue"*) unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

declare void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #3

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #3

declare void @_ZNK5blink6Length15BlendMixedTypesERKS0_dNS_10ValueRangeE(%"class.blink::Length"* sret, %"class.blink::Length"*, %"class.blink::Length"* dereferenceable(8), double, i32) local_unnamed_addr #3

declare void @_ZNK5blink6Length14BlendSameTypesERKS0_dNS_10ValueRangeE(%"class.blink::Length"* sret, %"class.blink::Length"*, %"class.blink::Length"* dereferenceable(8), double, i32) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #3

declare dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix11Translate3dEddd(%"class.blink::TransformationMatrix"*, double, double, double) local_unnamed_addr #3

declare float @_ZN5blink19FloatValueForLengthERKNS_6LengthEf(%"class.blink::Length"* dereferenceable(8), float) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5blink12_GLOBAL__N_110AddLengthsERKNS_6LengthES3_: argument 0"}
!4 = distinct !{!4, !"_ZN5blink12_GLOBAL__N_110AddLengthsERKNS_6LengthES3_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink12_GLOBAL__N_110AddLengthsERKNS_6LengthES3_: argument 0"}
!7 = distinct !{!7, !"_ZN5blink12_GLOBAL__N_110AddLengthsERKNS_6LengthES3_"}
!8 = !{i8 0, i8 2}
