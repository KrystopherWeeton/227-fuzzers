; ModuleID = '../../third_party/skia/modules/sksg/src/SkSGText.cpp'
source_filename = "../../third_party/skia/modules/sksg/src/SkSGText.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.sksg::Text" = type { %"class.sksg::GeometryNode.base", %class.sk_sp.2, %class.SkString, %struct.SkPoint, float, float, float, i32, i32, i32, %class.sk_sp.8 }
%"class.sksg::GeometryNode.base" = type { %"class.sksg::Node.base" }
%"class.sksg::Node.base" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16 }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%union.anon = type { %"class.sksg::Node"* }
%"class.sksg::Node" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16, [6 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.sk_sp.2 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%struct.SkPoint = type { float, float }
%class.sk_sp.8 = type { %class.SkTextBlob* }
%class.SkTextBlob = type { %class.SkNVRefCnt, %struct.SkRect, i32, %"struct.std::__1::atomic.9" }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { i32 }
%"class.sksg::TextBlob" = type { %"class.sksg::GeometryNode.base", %class.sk_sp.8, %struct.SkPoint }
%class.sk_sp.1 = type { %"class.sksg::Text"* }
%"class.sksg::GeometryNode" = type { %"class.sksg::Node.base", [6 x i8] }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.sksg::InvalidationController" = type opaque
%class.SkMatrix = type { [9 x float], i32 }
%class.SkFont = type <{ %class.sk_sp.2, float, float, float, i8, i8, i8, i8 }>
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.14, [384 x i64], %class.sk_sp.15, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.17" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.14 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.15 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkPaint = type <{ %class.sk_sp.23, %class.sk_sp.24, %class.sk_sp.25, %class.sk_sp.26, %class.sk_sp.27, %struct.SkRGBA4f, float, float, %union.anon.28, [4 x i8] }>
%class.sk_sp.23 = type { %class.SkPathEffect* }
%class.SkPathEffect = type opaque
%class.sk_sp.24 = type { %class.SkShader* }
%class.SkShader = type opaque
%class.sk_sp.25 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type opaque
%class.sk_sp.26 = type { %class.SkColorFilter* }
%class.SkColorFilter = type opaque
%class.sk_sp.27 = type { %class.SkImageFilter* }
%class.SkImageFilter = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon.28 = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkPath = type <{ %class.sk_sp.29, i32, %"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3", i8, i8 }>
%class.sk_sp.29 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.30, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.31, %class.SkTDArray.32, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.30 = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.31 = type { i8*, i32, i32 }
%class.SkTDArray.32 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.33 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.33 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.34", [3 x i8] }
%"struct.std::__1::atomic.34" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl.36" }
%"struct.std::__1::__cxx_atomic_impl.36" = type { %"struct.std::__1::__cxx_atomic_base_impl.37" }
%"struct.std::__1::__cxx_atomic_base_impl.37" = type { i8 }
%class.sk_sp.38 = type { %"class.sksg::TextBlob"* }

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

@_ZTVN4sksg4TextE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sksg::Text"*)* @_ZN4sksg4TextD2Ev to i8*), i8* bitcast (void (%"class.sksg::Text"*)* @_ZN4sksg4TextD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.sksg::Text"*, %"class.sksg::InvalidationController"*, %class.SkMatrix*)* @_ZN4sksg4Text12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix to i8*), i8* bitcast (void (%"class.sksg::Text"*, %class.SkCanvas*, i1)* @_ZNK4sksg4Text6onClipEP8SkCanvasb to i8*), i8* bitcast (void (%"class.sksg::Text"*, %class.SkCanvas*, %class.SkPaint*)* @_ZNK4sksg4Text6onDrawEP8SkCanvasRK7SkPaint to i8*), i8* bitcast (i1 (%"class.sksg::Text"*, %struct.SkPoint*)* @_ZNK4sksg4Text10onContainsERK7SkPoint to i8*), i8* bitcast (void (%class.SkPath*, %"class.sksg::Text"*)* @_ZNK4sksg4Text8onAsPathEv to i8*)] }, align 8
@_ZTVN4sksg8TextBlobE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sksg::TextBlob"*)* @_ZN4sksg8TextBlobD2Ev to i8*), i8* bitcast (void (%"class.sksg::TextBlob"*)* @_ZN4sksg8TextBlobD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.sksg::TextBlob"*, %"class.sksg::InvalidationController"*, %class.SkMatrix*)* @_ZN4sksg8TextBlob12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix to i8*), i8* bitcast (void (%"class.sksg::TextBlob"*, %class.SkCanvas*, i1)* @_ZNK4sksg8TextBlob6onClipEP8SkCanvasb to i8*), i8* bitcast (void (%"class.sksg::TextBlob"*, %class.SkCanvas*, %class.SkPaint*)* @_ZNK4sksg8TextBlob6onDrawEP8SkCanvasRK7SkPaint to i8*), i8* bitcast (i1 (%"class.sksg::TextBlob"*, %struct.SkPoint*)* @_ZNK4sksg8TextBlob10onContainsERK7SkPoint to i8*), i8* bitcast (void (%class.SkPath*, %"class.sksg::TextBlob"*)* @_ZNK4sksg8TextBlob8onAsPathEv to i8*)] }, align 8

@_ZN4sksg4TextC1E5sk_spI10SkTypefaceERK8SkString = hidden unnamed_addr alias void (%"class.sksg::Text"*, %class.sk_sp.2*, %class.SkString*), void (%"class.sksg::Text"*, %class.sk_sp.2*, %class.SkString*)* @_ZN4sksg4TextC2E5sk_spI10SkTypefaceERK8SkString
@_ZN4sksg4TextD1Ev = hidden unnamed_addr alias void (%"class.sksg::Text"*), void (%"class.sksg::Text"*)* @_ZN4sksg4TextD2Ev
@_ZN4sksg8TextBlobC1E5sk_spI10SkTextBlobE = hidden unnamed_addr alias void (%"class.sksg::TextBlob"*, %class.sk_sp.8*), void (%"class.sksg::TextBlob"*, %class.sk_sp.8*)* @_ZN4sksg8TextBlobC2E5sk_spI10SkTextBlobE
@_ZN4sksg8TextBlobD1Ev = hidden unnamed_addr alias void (%"class.sksg::TextBlob"*), void (%"class.sksg::TextBlob"*)* @_ZN4sksg8TextBlobD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg4Text4MakeE5sk_spI10SkTypefaceERK8SkString(%class.sk_sp.1* noalias nocapture sret, %class.sk_sp.2* nocapture, %class.SkString* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 104) #9
  %5 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %1, i64 0, i32 0
  %6 = bitcast %class.sk_sp.2* %1 to i64*
  %7 = load i64, i64* %6, align 8
  store %class.SkTypeface* null, %class.SkTypeface** %5, align 8
  %8 = bitcast i8* %4 to %"class.sksg::GeometryNode"*
  tail call void @_ZN4sksg12GeometryNodeC2Ev(%"class.sksg::GeometryNode"* nonnull %8) #10
  %9 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN4sksg4TextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %4, i64 48
  %11 = bitcast i8* %10 to i64*
  store i64 %7, i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %4, i64 56
  %13 = bitcast i8* %12 to %class.SkString*
  tail call void @_ZN8SkStringC1ERKS_(%class.SkString* %13, %class.SkString* dereferenceable(8) %2) #10
  %14 = getelementptr inbounds i8, i8* %4, i64 64
  %15 = bitcast i8* %14 to <2 x float>*
  store <2 x float> zeroinitializer, <2 x float>* %15, align 8
  %16 = getelementptr inbounds i8, i8* %4, i64 72
  %17 = bitcast i8* %16 to float*
  store float 1.200000e+01, float* %17, align 8
  %18 = getelementptr inbounds i8, i8* %4, i64 76
  %19 = bitcast i8* %18 to float*
  store float 1.000000e+00, float* %19, align 4
  %20 = getelementptr inbounds i8, i8* %4, i64 80
  %21 = bitcast i8* %20 to float*
  store float 0.000000e+00, float* %21, align 8
  %22 = getelementptr inbounds i8, i8* %4, i64 84
  %23 = bitcast i8* %22 to i32*
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %4, i64 88
  %25 = bitcast i8* %24 to i32*
  store i32 1, i32* %25, align 8
  %26 = getelementptr inbounds i8, i8* %4, i64 92
  %27 = bitcast i8* %26 to i32*
  store i32 2, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %4, i64 96
  %29 = bitcast i8* %28 to %class.SkTextBlob**
  store %class.SkTextBlob* null, %class.SkTextBlob** %29, align 8
  %30 = bitcast %class.sk_sp.1* %0 to i8**
  store i8* %4, i8** %30, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg4TextC2E5sk_spI10SkTypefaceERK8SkString(%"class.sksg::Text"*, %class.sk_sp.2* nocapture, %class.SkString* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.sksg::Text"* %0 to %"class.sksg::GeometryNode"*
  tail call void @_ZN4sksg12GeometryNodeC2Ev(%"class.sksg::GeometryNode"* %4) #10
  %5 = getelementptr inbounds %"class.sksg::Text", %"class.sksg::Text"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN4sksg4TextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.sksg::Text", %"class.sksg::Text"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %1, i64 0, i32 0
  %8 = bitcast %class.sk_sp.2* %1 to i64*
  %9 = load i64, i64* %8, align 8
  store %class.SkTypeface* null, %class.SkTypeface** %7, align 8
  %10 = bitcast %class.sk_sp.2* %6 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.sksg::Text", %"class.sksg::Text"* %0, i64 0, i32 2
  tail call void @_ZN8SkStringC1ERKS_(%class.SkString* %11, %class.SkString* dereferenceable(8) %2) #10
  %12 = getelementptr inbounds %"class.sksg::Text", %"class.sksg::Text"* %0, i64 0, i32 3
  %13 = bitcast %struct.SkPoint* %12 to <2 x float>*
  store <2 x float> zeroinitializer, <2 x float>* %13, align 8
  %14 = getelementptr inbounds %"class.sksg::Text", %"class.sksg::Text"* %0, i64 0, i32 4
  store float 1.200000e+01, float* %14, align 8
  %15 = getelementptr inbounds %"class.sksg::Text", %"class.sksg::Text"* %0, i64 0, i32 5
  store float 1.000000e+00, float* %15, align 4
  %16 = getelementptr inbounds %"class.sksg::Text", %"class.sksg::Text"* %0, i64 0, i32 6
  store float 0.000000e+00, float* %16, align 8
  %17 = getelementptr inbounds %"class.sksg::Text", %"class.sksg::Text"* %0, i64 0, i32 7
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %"class.sksg::Text", %"class.sksg::Text"* %0, i64 0, i32 8
  store i32 1, i32* %18, align 8
  %19 = getelementptr inbounds %"class.sksg::Text", %"class.sksg::Text"* %0, i64 0, i32 9
  store i32 2, i32* %19, align 4
  %20 = getelementptr inbounds %"class.sksg::Text", %"class.sksg::Text"* %0, i64 0, i32 10, i32 0
  store %class.SkTextBlob* null, %class.SkTextBlob** %20, align 8
  ret void
}

declare void @_ZN4sksg12GeometryNodeC2Ev(%"class.sksg::GeometryNode"*) unnamed_addr #2

declare void @_ZN8SkStringC1ERKS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg4TextD2Ev(%"class.sksg::Text"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.sksg::Text", %"class.sksg::Text"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN4sksg4TextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.sksg::Text", %"class.sksg::Text"* %0, i64 0, i32 10, i32 0
  %4 = load %class.SkTextBlob*, %class.SkTextBlob** %3, align 8
  %5 = icmp eq %class.SkTextBlob* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob* nonnull %4) #10
  %11 = bitcast %class.SkTextBlob* %4 to i8*
  tail call void @_ZN10SkTextBlobdlEPv(i8* nonnull %11) #10
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = getelementptr inbounds %"class.sksg::Text", %"class.sksg::Text"* %0, i64 0, i32 2
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %13) #10
  %14 = getelementptr inbounds %"class.sksg::Text", %"class.sksg::Text"* %0, i64 0, i32 1, i32 0
  %15 = load %class.SkTypeface*, %class.SkTypeface** %14, align 8
  %16 = icmp eq %class.SkTypeface* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = bitcast %class.SkTypeface* %15 to %class.SkRefCntBase*
  %23 = bitcast %class.SkTypeface* %15 to void (%class.SkRefCntBase*)***
  %24 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, i64 2
  %26 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, align 8
  tail call void %26(%class.SkRefCntBase* nonnull %22) #10
  br label %27

27:                                               ; preds = %12, %17, %21
  %28 = bitcast %"class.sksg::Text"* %0 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4NodeD2Ev(%"class.sksg::Node"* %28) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4sksg4NodeD2Ev(%"class.sksg::Node"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg4TextD0Ev(%"class.sksg::Text"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.sksg::Text", %"class.sksg::Text"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN4sksg4TextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.sksg::Text", %"class.sksg::Text"* %0, i64 0, i32 10, i32 0
  %4 = load %class.SkTextBlob*, %class.SkTextBlob** %3, align 8
  %5 = icmp eq %class.SkTextBlob* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob* nonnull %4) #10
  %11 = bitcast %class.SkTextBlob* %4 to i8*
  tail call void @_ZN10SkTextBlobdlEPv(i8* nonnull %11) #10
  br label %12

12:                                               ; preds = %10, %6, %1
  %13 = getelementptr inbounds %"class.sksg::Text", %"class.sksg::Text"* %0, i64 0, i32 2
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %13) #10
  %14 = getelementptr inbounds %"class.sksg::Text", %"class.sksg::Text"* %0, i64 0, i32 1, i32 0
  %15 = load %class.SkTypeface*, %class.SkTypeface** %14, align 8
  %16 = icmp eq %class.SkTypeface* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = bitcast %class.SkTypeface* %15 to %class.SkRefCntBase*
  %23 = bitcast %class.SkTypeface* %15 to void (%class.SkRefCntBase*)***
  %24 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, i64 2
  %26 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, align 8
  tail call void %26(%class.SkRefCntBase* nonnull %22) #10
  br label %27

27:                                               ; preds = %12, %17, %21
  %28 = bitcast %"class.sksg::Text"* %0 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4NodeD2Ev(%"class.sksg::Node"* %28) #10
  %29 = bitcast %"class.sksg::Text"* %0 to i8*
  tail call void @_ZdlPv(i8* %29) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden <2 x float> @_ZNK4sksg4Text15alignedPositionEf(%"class.sksg::Text"* nocapture readonly, float) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.sksg::Text", %"class.sksg::Text"* %0, i64 0, i32 3
  %4 = bitcast %struct.SkPoint* %3 to <2 x float>*
  %5 = load <2 x float>, <2 x float>* %4, align 8
  %6 = getelementptr inbounds %"class.sksg::Text", %"class.sksg::Text"* %0, i64 0, i32 7
  %7 = load i32, i32* %6, align 4
  switch i32 %7, label %23 [
    i32 2, label %16
    i32 1, label %8
  ]

8:                                                ; preds = %2
  %9 = fmul float %1, 5.000000e-01
  %10 = extractelement <2 x float> %5, i32 0
  %11 = fsub float %10, %9
  %12 = insertelement <2 x float> undef, float %11, i32 0
  %13 = extractelement <2 x float> %5, i32 1
  %14 = fadd float %13, 0.000000e+00
  %15 = insertelement <2 x float> %12, float %14, i32 1
  br label %23

16:                                               ; preds = %2
  %17 = extractelement <2 x float> %5, i32 0
  %18 = fsub float %17, %1
  %19 = insertelement <2 x float> undef, float %18, i32 0
  %20 = extractelement <2 x float> %5, i32 1
  %21 = fadd float %20, 0.000000e+00
  %22 = insertelement <2 x float> %19, float %21, i32 1
  br label %23

23:                                               ; preds = %2, %16, %8
  %24 = phi <2 x float> [ %5, %2 ], [ %15, %8 ], [ %22, %16 ]
  ret <2 x float> %24
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN4sksg4Text12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Text"* nocapture, %"class.sksg::InvalidationController"* nocapture readnone, %class.SkMatrix* nocapture readnone dereferenceable(40)) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkFont, align 8
  %5 = alloca %class.sk_sp.8, align 8
  %6 = bitcast %class.SkFont* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %class.SkFont, %class.SkFont* %4, i64 0, i32 0, i32 0
  store %class.SkTypeface* inttoptr (i64 -6148914691236517206 to %class.SkTypeface*), %class.SkTypeface** %7, align 8
  %8 = getelementptr inbounds %class.SkFont, %class.SkFont* %4, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %8, align 8
  %9 = getelementptr inbounds %class.SkFont, %class.SkFont* %4, i64 0, i32 2
  store float 0xFFFFFFFFE0000000, float* %9, align 4
  %10 = getelementptr inbounds %class.SkFont, %class.SkFont* %4, i64 0, i32 3
  store float 0xFFFFFFFFE0000000, float* %10, align 8
  %11 = getelementptr inbounds %class.SkFont, %class.SkFont* %4, i64 0, i32 4
  %12 = bitcast i8* %11 to i32*
  store i32 -1431655766, i32* %12, align 4
  call void @_ZN6SkFontC1Ev(%class.SkFont* nonnull %4) #10
  %13 = getelementptr inbounds %"class.sksg::Text", %"class.sksg::Text"* %0, i64 0, i32 1, i32 0
  %14 = load %class.SkTypeface*, %class.SkTypeface** %13, align 8
  %15 = icmp eq %class.SkTypeface* %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 1 monotonic
  %19 = atomicrmw add i32* %17, i32 1 monotonic
  br label %20

20:                                               ; preds = %3, %16
  %21 = load %class.SkTypeface*, %class.SkTypeface** %7, align 8
  store %class.SkTypeface* %14, %class.SkTypeface** %7, align 8
  %22 = icmp eq %class.SkTypeface* %21, null
  br i1 %22, label %33, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %21, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 -1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %33

27:                                               ; preds = %23
  %28 = bitcast %class.SkTypeface* %21 to %class.SkRefCntBase*
  %29 = bitcast %class.SkTypeface* %21 to void (%class.SkRefCntBase*)***
  %30 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %29, align 8
  %31 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %30, i64 2
  %32 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %31, align 8
  call void %32(%class.SkRefCntBase* nonnull %28) #10
  br label %33

33:                                               ; preds = %20, %23, %27
  br i1 %15, label %44, label %34

34:                                               ; preds = %33
  %35 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = bitcast %class.SkTypeface* %14 to %class.SkRefCntBase*
  %40 = bitcast %class.SkTypeface* %14 to void (%class.SkRefCntBase*)***
  %41 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, i64 2
  %43 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, align 8
  call void %43(%class.SkRefCntBase* nonnull %39) #10
  br label %44

44:                                               ; preds = %33, %34, %38
  %45 = getelementptr inbounds %"class.sksg::Text", %"class.sksg::Text"* %0, i64 0, i32 4
  %46 = load float, float* %45, align 8
  call void @_ZN6SkFont7setSizeEf(%class.SkFont* nonnull %4, float %46) #10
  %47 = getelementptr inbounds %"class.sksg::Text", %"class.sksg::Text"* %0, i64 0, i32 5
  %48 = load float, float* %47, align 4
  call void @_ZN6SkFont9setScaleXEf(%class.SkFont* nonnull %4, float %48) #10
  %49 = getelementptr inbounds %"class.sksg::Text", %"class.sksg::Text"* %0, i64 0, i32 6
  %50 = load float, float* %49, align 8
  call void @_ZN6SkFont8setSkewXEf(%class.SkFont* nonnull %4, float %50) #10
  %51 = getelementptr inbounds %"class.sksg::Text", %"class.sksg::Text"* %0, i64 0, i32 8
  %52 = load i32, i32* %51, align 8
  call void @_ZN6SkFont9setEdgingENS_6EdgingE(%class.SkFont* nonnull %4, i32 %52) #10
  %53 = getelementptr inbounds %"class.sksg::Text", %"class.sksg::Text"* %0, i64 0, i32 9
  %54 = load i32, i32* %53, align 4
  call void @_ZN6SkFont10setHintingE13SkFontHinting(%class.SkFont* nonnull %4, i32 %54) #10
  %55 = bitcast %class.sk_sp.8* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #10
  %56 = getelementptr inbounds %"class.sksg::Text", %"class.sksg::Text"* %0, i64 0, i32 2, i32 0, i32 0
  %57 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %56, align 8
  %58 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %57, i64 0, i32 2
  %59 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %57, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i64
  call void @_ZN10SkTextBlob12MakeFromTextEPKvmRK6SkFont14SkTextEncoding(%class.sk_sp.8* nonnull sret %5, i8* %58, i64 %61, %class.SkFont* nonnull dereferenceable(24) %4, i32 0) #10
  %62 = getelementptr inbounds %"class.sksg::Text", %"class.sksg::Text"* %0, i64 0, i32 10
  %63 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %5, i64 0, i32 0
  %64 = bitcast %class.sk_sp.8* %5 to i64*
  %65 = load i64, i64* %64, align 8
  store %class.SkTextBlob* null, %class.SkTextBlob** %63, align 8
  %66 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %62, i64 0, i32 0
  %67 = load %class.SkTextBlob*, %class.SkTextBlob** %66, align 8
  %68 = bitcast %class.sk_sp.8* %62 to i64*
  store i64 %65, i64* %68, align 8
  %69 = icmp eq %class.SkTextBlob* %67, null
  br i1 %69, label %76, label %70

70:                                               ; preds = %44
  %71 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = atomicrmw add i32* %71, i32 -1 acq_rel
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %74, label %76

74:                                               ; preds = %70
  call void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob* nonnull %67) #10
  %75 = bitcast %class.SkTextBlob* %67 to i8*
  call void @_ZN10SkTextBlobdlEPv(i8* nonnull %75) #10
  br label %76

76:                                               ; preds = %44, %70, %74
  %77 = load %class.SkTextBlob*, %class.SkTextBlob** %63, align 8
  %78 = icmp eq %class.SkTextBlob* %77, null
  br i1 %78, label %85, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = atomicrmw add i32* %80, i32 -1 acq_rel
  %82 = icmp eq i32 %81, 1
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  call void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob* nonnull %77) #10
  %84 = bitcast %class.SkTextBlob* %77 to i8*
  call void @_ZN10SkTextBlobdlEPv(i8* nonnull %84) #10
  br label %85

85:                                               ; preds = %76, %79, %83
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #10
  %86 = load %class.SkTextBlob*, %class.SkTextBlob** %66, align 8
  %87 = icmp eq %class.SkTextBlob* %86, null
  br i1 %87, label %130, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %86, i64 0, i32 1, i32 2
  %90 = load float, float* %89, align 4
  %91 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %86, i64 0, i32 1, i32 0
  %92 = load float, float* %91, align 4
  %93 = fsub float %90, %92
  %94 = getelementptr inbounds %"class.sksg::Text", %"class.sksg::Text"* %0, i64 0, i32 3
  %95 = bitcast %struct.SkPoint* %94 to <2 x float>*
  %96 = load <2 x float>, <2 x float>* %95, align 8
  %97 = getelementptr inbounds %"class.sksg::Text", %"class.sksg::Text"* %0, i64 0, i32 7
  %98 = load i32, i32* %97, align 4
  switch i32 %98, label %114 [
    i32 2, label %107
    i32 1, label %99
  ]

99:                                               ; preds = %88
  %100 = fmul float %93, 5.000000e-01
  %101 = extractelement <2 x float> %96, i32 0
  %102 = fsub float %101, %100
  %103 = insertelement <2 x float> undef, float %102, i32 0
  %104 = extractelement <2 x float> %96, i32 1
  %105 = fadd float %104, 0.000000e+00
  %106 = insertelement <2 x float> %103, float %105, i32 1
  br label %114

107:                                              ; preds = %88
  %108 = extractelement <2 x float> %96, i32 0
  %109 = fsub float %108, %93
  %110 = insertelement <2 x float> undef, float %109, i32 0
  %111 = extractelement <2 x float> %96, i32 1
  %112 = fadd float %111, 0.000000e+00
  %113 = insertelement <2 x float> %110, float %112, i32 1
  br label %114

114:                                              ; preds = %88, %99, %107
  %115 = phi <2 x float> [ %96, %88 ], [ %106, %99 ], [ %113, %107 ]
  %116 = extractelement <2 x float> %115, i32 0
  %117 = extractelement <2 x float> %115, i32 1
  %118 = fadd float %92, %116
  %119 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %86, i64 0, i32 1, i32 1
  %120 = load float, float* %119, align 4
  %121 = fadd float %120, %117
  %122 = fadd float %90, %116
  %123 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %86, i64 0, i32 1, i32 3
  %124 = load float, float* %123, align 4
  %125 = fadd float %117, %124
  %126 = insertelement <2 x float> undef, float %118, i32 0
  %127 = insertelement <2 x float> %126, float %121, i32 1
  %128 = insertelement <2 x float> undef, float %122, i32 0
  %129 = insertelement <2 x float> %128, float %125, i32 1
  br label %130

130:                                              ; preds = %85, %114
  %131 = phi <2 x float> [ %127, %114 ], [ zeroinitializer, %85 ]
  %132 = phi <2 x float> [ %129, %114 ], [ zeroinitializer, %85 ]
  %133 = load %class.SkTypeface*, %class.SkTypeface** %7, align 8
  %134 = icmp eq %class.SkTypeface* %133, null
  br i1 %134, label %145, label %135

135:                                              ; preds = %130
  %136 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %133, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = atomicrmw add i32* %136, i32 -1 acq_rel
  %138 = icmp eq i32 %137, 1
  br i1 %138, label %139, label %145

139:                                              ; preds = %135
  %140 = bitcast %class.SkTypeface* %133 to %class.SkRefCntBase*
  %141 = bitcast %class.SkTypeface* %133 to void (%class.SkRefCntBase*)***
  %142 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %141, align 8
  %143 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %142, i64 2
  %144 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %143, align 8
  call void %144(%class.SkRefCntBase* nonnull %140) #10
  br label %145

145:                                              ; preds = %130, %135, %139
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  %146 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %131, 0
  %147 = insertvalue { <2 x float>, <2 x float> } %146, <2 x float> %132, 1
  ret { <2 x float>, <2 x float> } %147
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #7

declare void @_ZN6SkFontC1Ev(%class.SkFont*) unnamed_addr #2

declare void @_ZN6SkFont7setSizeEf(%class.SkFont*, float) local_unnamed_addr #2

declare void @_ZN6SkFont9setScaleXEf(%class.SkFont*, float) local_unnamed_addr #2

declare void @_ZN6SkFont8setSkewXEf(%class.SkFont*, float) local_unnamed_addr #2

declare void @_ZN6SkFont9setEdgingENS_6EdgingE(%class.SkFont*, i32) local_unnamed_addr #2

declare void @_ZN6SkFont10setHintingE13SkFontHinting(%class.SkFont*, i32) local_unnamed_addr #2

declare void @_ZN10SkTextBlob12MakeFromTextEPKvmRK6SkFont14SkTextEncoding(%class.sk_sp.8* sret, i8*, i64, %class.SkFont* dereferenceable(24), i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4sksg4Text6onDrawEP8SkCanvasRK7SkPaint(%"class.sksg::Text"* nocapture readonly, %class.SkCanvas*, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sksg::Text", %"class.sksg::Text"* %0, i64 0, i32 0, i32 0, i32 3, i32 2
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %"class.sksg::Text", %"class.sksg::Text"* %0, i64 0, i32 0, i32 0, i32 3, i32 0
  %7 = load float, float* %6, align 4
  %8 = fsub float %5, %7
  %9 = getelementptr inbounds %"class.sksg::Text", %"class.sksg::Text"* %0, i64 0, i32 3
  %10 = bitcast %struct.SkPoint* %9 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 8
  %12 = getelementptr inbounds %"class.sksg::Text", %"class.sksg::Text"* %0, i64 0, i32 7
  %13 = load i32, i32* %12, align 4
  switch i32 %13, label %29 [
    i32 2, label %22
    i32 1, label %14
  ]

14:                                               ; preds = %3
  %15 = fmul float %8, 5.000000e-01
  %16 = extractelement <2 x float> %11, i32 0
  %17 = fsub float %16, %15
  %18 = insertelement <2 x float> undef, float %17, i32 0
  %19 = extractelement <2 x float> %11, i32 1
  %20 = fadd float %19, 0.000000e+00
  %21 = insertelement <2 x float> %18, float %20, i32 1
  br label %29

22:                                               ; preds = %3
  %23 = extractelement <2 x float> %11, i32 0
  %24 = fsub float %23, %8
  %25 = insertelement <2 x float> undef, float %24, i32 0
  %26 = extractelement <2 x float> %11, i32 1
  %27 = fadd float %26, 0.000000e+00
  %28 = insertelement <2 x float> %25, float %27, i32 1
  br label %29

29:                                               ; preds = %3, %14, %22
  %30 = phi <2 x float> [ %11, %3 ], [ %21, %14 ], [ %28, %22 ]
  %31 = extractelement <2 x float> %30, i32 0
  %32 = extractelement <2 x float> %30, i32 1
  %33 = getelementptr inbounds %"class.sksg::Text", %"class.sksg::Text"* %0, i64 0, i32 10, i32 0
  %34 = load %class.SkTextBlob*, %class.SkTextBlob** %33, align 8
  tail call void @_ZN8SkCanvas12drawTextBlobEPK10SkTextBlobffRK7SkPaint(%class.SkCanvas* %1, %class.SkTextBlob* %34, float %31, float %32, %class.SkPaint* dereferenceable(72) %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4sksg4Text10onContainsERK7SkPoint(%"class.sksg::Text"*, %struct.SkPoint* nocapture readonly dereferenceable(8)) unnamed_addr #3 align 2 {
  %3 = alloca %class.SkPath, align 8
  %4 = bitcast %class.SkPath* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #10
  %5 = bitcast %"class.sksg::Text"* %0 to %"class.sksg::GeometryNode"*
  call void @_ZNK4sksg12GeometryNode6asPathEv(%class.SkPath* nonnull sret %3, %"class.sksg::GeometryNode"* %5) #10
  %6 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 0
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %9 = load float, float* %8, align 4
  %10 = call zeroext i1 @_ZNK6SkPath8containsEff(%class.SkPath* nonnull %3, float %7, float %9) #10
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #10
  ret i1 %10
}

declare void @_ZNK4sksg12GeometryNode6asPathEv(%class.SkPath* sret, %"class.sksg::GeometryNode"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK6SkPath8containsEff(%class.SkPath*, float, float) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4sksg4Text8onAsPathEv(%class.SkPath* noalias sret, %"class.sksg::Text"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @_ZN6SkPathC1Ev(%class.SkPath* %0) #10
  ret void
}

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4sksg4Text6onClipEP8SkCanvasb(%"class.sksg::Text"*, %class.SkCanvas*, i1 zeroext) unnamed_addr #3 align 2 {
  %4 = alloca %class.SkPath, align 8
  %5 = bitcast %class.SkPath* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #10
  %6 = bitcast %"class.sksg::Text"* %0 to %"class.sksg::GeometryNode"*
  call void @_ZNK4sksg12GeometryNode6asPathEv(%class.SkPath* nonnull sret %4, %"class.sksg::GeometryNode"* %6) #10
  call void @_ZN8SkCanvas8clipPathERK6SkPath8SkClipOpb(%class.SkCanvas* %1, %class.SkPath* nonnull dereferenceable(16) %4, i32 1, i1 zeroext %2) #10
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg8TextBlob4MakeE5sk_spI10SkTextBlobE(%class.sk_sp.38* noalias nocapture sret, %class.sk_sp.8* nocapture) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 64) #9
  %4 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %1, i64 0, i32 0
  %5 = bitcast %class.sk_sp.8* %1 to i64*
  %6 = load i64, i64* %5, align 8
  store %class.SkTextBlob* null, %class.SkTextBlob** %4, align 8
  %7 = bitcast i8* %3 to %"class.sksg::GeometryNode"*
  tail call void @_ZN4sksg12GeometryNodeC2Ev(%"class.sksg::GeometryNode"* nonnull %7) #10
  %8 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN4sksg8TextBlobE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %3, i64 48
  %10 = bitcast i8* %9 to i64*
  store i64 %6, i64* %10, align 8
  %11 = getelementptr inbounds i8, i8* %3, i64 56
  %12 = bitcast i8* %11 to <2 x float>*
  store <2 x float> zeroinitializer, <2 x float>* %12, align 8
  %13 = bitcast %class.sk_sp.38* %0 to i8**
  store i8* %3, i8** %13, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg8TextBlobC2E5sk_spI10SkTextBlobE(%"class.sksg::TextBlob"*, %class.sk_sp.8* nocapture) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.sksg::TextBlob"* %0 to %"class.sksg::GeometryNode"*
  tail call void @_ZN4sksg12GeometryNodeC2Ev(%"class.sksg::GeometryNode"* %3) #10
  %4 = getelementptr inbounds %"class.sksg::TextBlob", %"class.sksg::TextBlob"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN4sksg8TextBlobE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.sksg::TextBlob", %"class.sksg::TextBlob"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %1, i64 0, i32 0
  %7 = bitcast %class.sk_sp.8* %1 to i64*
  %8 = load i64, i64* %7, align 8
  store %class.SkTextBlob* null, %class.SkTextBlob** %6, align 8
  %9 = bitcast %class.sk_sp.8* %5 to i64*
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"class.sksg::TextBlob", %"class.sksg::TextBlob"* %0, i64 0, i32 2
  %11 = bitcast %struct.SkPoint* %10 to <2 x float>*
  store <2 x float> zeroinitializer, <2 x float>* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg8TextBlobD2Ev(%"class.sksg::TextBlob"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.sksg::TextBlob", %"class.sksg::TextBlob"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN4sksg8TextBlobE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.sksg::TextBlob", %"class.sksg::TextBlob"* %0, i64 0, i32 1, i32 0
  %4 = load %class.SkTextBlob*, %class.SkTextBlob** %3, align 8
  %5 = icmp eq %class.SkTextBlob* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob* nonnull %4) #10
  %11 = bitcast %class.SkTextBlob* %4 to i8*
  tail call void @_ZN10SkTextBlobdlEPv(i8* nonnull %11) #10
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = bitcast %"class.sksg::TextBlob"* %0 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4NodeD2Ev(%"class.sksg::Node"* %13) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg8TextBlobD0Ev(%"class.sksg::TextBlob"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.sksg::TextBlob", %"class.sksg::TextBlob"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN4sksg8TextBlobE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.sksg::TextBlob", %"class.sksg::TextBlob"* %0, i64 0, i32 1, i32 0
  %4 = load %class.SkTextBlob*, %class.SkTextBlob** %3, align 8
  %5 = icmp eq %class.SkTextBlob* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob* nonnull %4) #10
  %11 = bitcast %class.SkTextBlob* %4 to i8*
  tail call void @_ZN10SkTextBlobdlEPv(i8* nonnull %11) #10
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = bitcast %"class.sksg::TextBlob"* %0 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4NodeD2Ev(%"class.sksg::Node"* %13) #10
  %14 = bitcast %"class.sksg::TextBlob"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #9
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN4sksg8TextBlob12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::TextBlob"* nocapture readonly, %"class.sksg::InvalidationController"* nocapture readnone, %class.SkMatrix* nocapture readnone dereferenceable(40)) unnamed_addr #8 align 2 {
  %4 = getelementptr inbounds %"class.sksg::TextBlob", %"class.sksg::TextBlob"* %0, i64 0, i32 1, i32 0
  %5 = load %class.SkTextBlob*, %class.SkTextBlob** %4, align 8
  %6 = icmp eq %class.SkTextBlob* %5, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.sksg::TextBlob", %"class.sksg::TextBlob"* %0, i64 0, i32 2, i32 0
  %9 = bitcast float* %8 to <2 x float>*
  %10 = load <2 x float>, <2 x float>* %9, align 4
  %11 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %5, i64 0, i32 1, i32 0
  %12 = bitcast float* %11 to <2 x float>*
  %13 = load <2 x float>, <2 x float>* %12, align 4
  %14 = fadd <2 x float> %10, %13
  %15 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %5, i64 0, i32 1, i32 2
  %16 = bitcast float* %15 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 4
  %18 = fadd <2 x float> %10, %17
  br label %19

19:                                               ; preds = %3, %7
  %20 = phi <2 x float> [ %14, %7 ], [ zeroinitializer, %3 ]
  %21 = phi <2 x float> [ %18, %7 ], [ zeroinitializer, %3 ]
  %22 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %20, 0
  %23 = insertvalue { <2 x float>, <2 x float> } %22, <2 x float> %21, 1
  ret { <2 x float>, <2 x float> } %23
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4sksg8TextBlob6onDrawEP8SkCanvasRK7SkPaint(%"class.sksg::TextBlob"* nocapture readonly, %class.SkCanvas*, %class.SkPaint* dereferenceable(72)) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.sksg::TextBlob", %"class.sksg::TextBlob"* %0, i64 0, i32 2, i32 0
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %"class.sksg::TextBlob", %"class.sksg::TextBlob"* %0, i64 0, i32 2, i32 1
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %"class.sksg::TextBlob", %"class.sksg::TextBlob"* %0, i64 0, i32 1, i32 0
  %9 = load %class.SkTextBlob*, %class.SkTextBlob** %8, align 8
  tail call void @_ZN8SkCanvas12drawTextBlobEPK10SkTextBlobffRK7SkPaint(%class.SkCanvas* %1, %class.SkTextBlob* %9, float %5, float %7, %class.SkPaint* dereferenceable(72) %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4sksg8TextBlob10onContainsERK7SkPoint(%"class.sksg::TextBlob"*, %struct.SkPoint* nocapture readonly dereferenceable(8)) unnamed_addr #3 align 2 {
  %3 = alloca %class.SkPath, align 8
  %4 = bitcast %class.SkPath* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #10
  %5 = bitcast %"class.sksg::TextBlob"* %0 to %"class.sksg::GeometryNode"*
  call void @_ZNK4sksg12GeometryNode6asPathEv(%class.SkPath* nonnull sret %3, %"class.sksg::GeometryNode"* %5) #10
  %6 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 0
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %9 = load float, float* %8, align 4
  %10 = call zeroext i1 @_ZNK6SkPath8containsEff(%class.SkPath* nonnull %3, float %7, float %9) #10
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #10
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4sksg8TextBlob8onAsPathEv(%class.SkPath* noalias sret, %"class.sksg::TextBlob"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @_ZN6SkPathC1Ev(%class.SkPath* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4sksg8TextBlob6onClipEP8SkCanvasb(%"class.sksg::TextBlob"*, %class.SkCanvas*, i1 zeroext) unnamed_addr #3 align 2 {
  %4 = alloca %class.SkPath, align 8
  %5 = bitcast %class.SkPath* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #10
  %6 = bitcast %"class.sksg::TextBlob"* %0 to %"class.sksg::GeometryNode"*
  call void @_ZNK4sksg12GeometryNode6asPathEv(%class.SkPath* nonnull sret %4, %"class.sksg::GeometryNode"* %6) #10
  call void @_ZN8SkCanvas8clipPathERK6SkPath8SkClipOpb(%class.SkCanvas* %1, %class.SkPath* nonnull dereferenceable(16) %4, i32 1, i1 zeroext %2) #10
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #3 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #10
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN8SkCanvas12drawTextBlobEPK10SkTextBlobffRK7SkPaint(%class.SkCanvas*, %class.SkTextBlob*, float, float, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN8SkCanvas8clipPathERK6SkPath8SkClipOpb(%class.SkCanvas*, %class.SkPath* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN10SkTextBlobD1Ev(%class.SkTextBlob*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN10SkTextBlobdlEPv(i8*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
