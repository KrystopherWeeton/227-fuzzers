; ModuleID = '../../ppapi/shared_impl/resource_var.cc'
source_filename = "../../ppapi/shared_impl/resource_var.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ppapi::ResourceVar" = type { %"class.ppapi::Var" }
%"class.ppapi::Var" = type { i32 (...)**, %"class.base::RefCounted", i32 }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.IPC::Message" = type opaque
%struct.PP_Var = type { i32, i32, %union.PP_VarValue }
%union.PP_VarValue = type { double }
%"class.ppapi::PpapiGlobals" = type { i32 (...)**, %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type opaque
%"class.ppapi::VarTracker" = type { i32 (...)**, %"class.std::__1::unordered_map", i32, %"class.std::__1::unique_ptr.15" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.10", %"class.std::__1::__compressed_pair.12", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i64 }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { float }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.base::ThreadChecker"* }
%"class.base::ThreadChecker" = type { i8 }
%"class.ppapi::StringVar" = type { %"class.ppapi::Var", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.ppapi::ArrayBufferVar" = type { %"class.ppapi::Var" }
%"class.ppapi::V8ObjectVar" = type opaque
%"class.ppapi::ProxyObjectVar" = type opaque
%"class.ppapi::ArrayVar" = type opaque
%"class.ppapi::DictionaryVar" = type opaque

@_ZTVN5ppapi11ResourceVarE = hidden unnamed_addr constant { [17 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (%"class.ppapi::StringVar"* (%"class.ppapi::Var"*)* @_ZN5ppapi3Var11AsStringVarEv to i8*), i8* bitcast (%"class.ppapi::ArrayBufferVar"* (%"class.ppapi::Var"*)* @_ZN5ppapi3Var16AsArrayBufferVarEv to i8*), i8* bitcast (%"class.ppapi::V8ObjectVar"* (%"class.ppapi::Var"*)* @_ZN5ppapi3Var13AsV8ObjectVarEv to i8*), i8* bitcast (%"class.ppapi::ProxyObjectVar"* (%"class.ppapi::Var"*)* @_ZN5ppapi3Var16AsProxyObjectVarEv to i8*), i8* bitcast (%"class.ppapi::ArrayVar"* (%"class.ppapi::Var"*)* @_ZN5ppapi3Var10AsArrayVarEv to i8*), i8* bitcast (%"class.ppapi::DictionaryVar"* (%"class.ppapi::Var"*)* @_ZN5ppapi3Var15AsDictionaryVarEv to i8*), i8* bitcast (%"class.ppapi::ResourceVar"* (%"class.ppapi::ResourceVar"*)* @_ZN5ppapi11ResourceVar13AsResourceVarEv to i8*), i8* bitcast (i32 (%"class.ppapi::ResourceVar"*)* @_ZNK5ppapi11ResourceVar7GetTypeEv to i8*), i8* bitcast (void (%"class.ppapi::ResourceVar"*)* @_ZN5ppapi11ResourceVarD2Ev to i8*), i8* bitcast (void (%"class.ppapi::ResourceVar"*)* @_ZN5ppapi11ResourceVarD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.ppapi::ResourceVar"*)* @_ZNK5ppapi11ResourceVar24GetPendingRendererHostIdEv to i8*), i8* bitcast (i32 (%"class.ppapi::ResourceVar"*)* @_ZNK5ppapi11ResourceVar23GetPendingBrowserHostIdEv to i8*), i8* bitcast (%"class.IPC::Message"* (%"class.ppapi::ResourceVar"*)* @_ZNK5ppapi11ResourceVar18GetCreationMessageEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5ppapi11ResourceVarD1Ev = hidden unnamed_addr alias void (%"class.ppapi::ResourceVar"*), void (%"class.ppapi::ResourceVar"*)* @_ZN5ppapi11ResourceVarD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5ppapi11ResourceVar24GetPendingRendererHostIdEv(%"class.ppapi::ResourceVar"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5ppapi11ResourceVar23GetPendingBrowserHostIdEv(%"class.ppapi::ResourceVar"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.IPC::Message"* @_ZNK5ppapi11ResourceVar18GetCreationMessageEv(%"class.ppapi::ResourceVar"* nocapture readnone) unnamed_addr #0 align 2 {
  ret %"class.IPC::Message"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.ppapi::ResourceVar"* @_ZN5ppapi11ResourceVar13AsResourceVarEv(%"class.ppapi::ResourceVar"* readnone returned) unnamed_addr #0 align 2 {
  ret %"class.ppapi::ResourceVar"* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5ppapi11ResourceVar7GetTypeEv(%"class.ppapi::ResourceVar"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i32 10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ppapi::ResourceVar"* @_ZN5ppapi11ResourceVar9FromPPVarE6PP_Var(i64, i64) local_unnamed_addr #1 align 2 {
  %3 = alloca %struct.PP_Var, align 8
  %4 = bitcast %struct.PP_Var* %3 to i64*
  store i64 %0, i64* %4, align 8
  %5 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %3, i64 0, i32 2
  %6 = bitcast %union.PP_VarValue* %5 to i64*
  store i64 %1, i64* %6, align 8
  %7 = trunc i64 %0 to i32
  %8 = icmp eq i32 %7, 10
  br i1 %8, label %9, label %37

9:                                                ; preds = %2
  %10 = tail call %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() #6
  %11 = bitcast %"class.ppapi::PpapiGlobals"* %10 to %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)***
  %12 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)**, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %12, i64 3
  %14 = load %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)*, %"class.ppapi::VarTracker"* (%"class.ppapi::PpapiGlobals"*)** %13, align 8
  %15 = tail call %"class.ppapi::VarTracker"* %14(%"class.ppapi::PpapiGlobals"* %10) #6
  %16 = call %"class.ppapi::Var"* @_ZNK5ppapi10VarTracker6GetVarERK6PP_Var(%"class.ppapi::VarTracker"* %15, %struct.PP_Var* nonnull dereferenceable(16) %3) #6
  %17 = icmp eq %"class.ppapi::Var"* %16, null
  br i1 %17, label %37, label %18

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.ppapi::Var", %"class.ppapi::Var"* %16, i64 0, i32 1, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %19) #6
  %20 = bitcast %"class.ppapi::Var"* %16 to %"class.ppapi::ResourceVar"* (%"class.ppapi::Var"*)***
  %21 = load %"class.ppapi::ResourceVar"* (%"class.ppapi::Var"*)**, %"class.ppapi::ResourceVar"* (%"class.ppapi::Var"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.ppapi::ResourceVar"* (%"class.ppapi::Var"*)*, %"class.ppapi::ResourceVar"* (%"class.ppapi::Var"*)** %21, i64 6
  %23 = load %"class.ppapi::ResourceVar"* (%"class.ppapi::Var"*)*, %"class.ppapi::ResourceVar"* (%"class.ppapi::Var"*)** %22, align 8
  %24 = call %"class.ppapi::ResourceVar"* %23(%"class.ppapi::Var"* nonnull %16) #6
  %25 = getelementptr inbounds %"class.ppapi::Var", %"class.ppapi::Var"* %16, i64 0, i32 1
  %26 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %25, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %26) #6
  %27 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %25, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %37

30:                                               ; preds = %18
  %31 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %25, i64 -2
  %32 = bitcast %"class.base::RefCounted"* %31 to %"class.ppapi::Var"*
  %33 = bitcast %"class.base::RefCounted"* %31 to void (%"class.ppapi::Var"*)***
  %34 = load void (%"class.ppapi::Var"*)**, void (%"class.ppapi::Var"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.ppapi::Var"*)*, void (%"class.ppapi::Var"*)** %34, i64 9
  %36 = load void (%"class.ppapi::Var"*)*, void (%"class.ppapi::Var"*)** %35, align 8
  call void %36(%"class.ppapi::Var"* nonnull %32) #6
  br label %37

37:                                               ; preds = %9, %30, %18, %2
  %38 = phi %"class.ppapi::ResourceVar"* [ null, %2 ], [ %24, %18 ], [ %24, %30 ], [ null, %9 ]
  ret %"class.ppapi::ResourceVar"* %38
}

declare %"class.ppapi::PpapiGlobals"* @_ZN5ppapi12PpapiGlobals3GetEv() local_unnamed_addr #2

declare %"class.ppapi::Var"* @_ZNK5ppapi10VarTracker6GetVarERK6PP_Var(%"class.ppapi::VarTracker"*, %struct.PP_Var* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi11ResourceVarC2Ev(%"class.ppapi::ResourceVar"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.ppapi::ResourceVar", %"class.ppapi::ResourceVar"* %0, i64 0, i32 0
  tail call void @_ZN5ppapi3VarC2Ev(%"class.ppapi::Var"* %2) #6
  %3 = getelementptr inbounds %"class.ppapi::ResourceVar", %"class.ppapi::ResourceVar"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTVN5ppapi11ResourceVarE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

declare void @_ZN5ppapi3VarC2Ev(%"class.ppapi::Var"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5ppapi3VarD2Ev(%"class.ppapi::Var"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi11ResourceVarD2Ev(%"class.ppapi::ResourceVar"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.ppapi::ResourceVar", %"class.ppapi::ResourceVar"* %0, i64 0, i32 0
  tail call void @_ZN5ppapi3VarD2Ev(%"class.ppapi::Var"* %2) #6
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5ppapi11ResourceVarD0Ev(%"class.ppapi::ResourceVar"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #7
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare %"class.ppapi::StringVar"* @_ZN5ppapi3Var11AsStringVarEv(%"class.ppapi::Var"*) unnamed_addr #2

declare %"class.ppapi::ArrayBufferVar"* @_ZN5ppapi3Var16AsArrayBufferVarEv(%"class.ppapi::Var"*) unnamed_addr #2

declare %"class.ppapi::V8ObjectVar"* @_ZN5ppapi3Var13AsV8ObjectVarEv(%"class.ppapi::Var"*) unnamed_addr #2

declare %"class.ppapi::ProxyObjectVar"* @_ZN5ppapi3Var16AsProxyObjectVarEv(%"class.ppapi::Var"*) unnamed_addr #2

declare %"class.ppapi::ArrayVar"* @_ZN5ppapi3Var10AsArrayVarEv(%"class.ppapi::Var"*) unnamed_addr #2

declare %"class.ppapi::DictionaryVar"* @_ZN5ppapi3Var15AsDictionaryVarEv(%"class.ppapi::Var"*) unnamed_addr #2

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
