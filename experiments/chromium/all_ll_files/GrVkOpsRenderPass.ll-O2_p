; ModuleID = '../../third_party/skia/src/gpu/vk/GrVkOpsRenderPass.cpp'
source_filename = "../../third_party/skia/src/gpu/vk/GrVkOpsRenderPass.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrVkOpsRenderPass = type { %class.GrOpsRenderPass, %class.sk_sp.195, %"class.std::__1::unique_ptr.436", %class.GrVkRenderPass*, %struct.SkIRect, %class.GrVkPipelineState*, i8, %struct.SkIRect, i32, i32, i8, %class.GrVkGpu* }
%class.GrOpsRenderPass = type { i32 (...)**, i32, %class.GrRenderTarget*, %class.sk_sp.194, %class.sk_sp.194, %class.sk_sp.194, i32, i32 }
%class.GrRenderTarget = type <{ i32 (...)**, %class.sk_sp, %class.sk_sp, i32, [4 x i8], %class.GrSurface }>
%class.sk_sp = type { %class.GrAttachment* }
%class.GrAttachment = type <{ %class.GrSurface, i8, [3 x i8], i32, i8, i8, [6 x i8] }>
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.192 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.1, i8* }
%class.sk_sp.1 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.GrGpu = type { %class.SkRefCnt.base, %"class.GrGpu::Stats", %class.sk_sp.2, %"class.std::__1::unique_ptr", i32, %class.GrDirectContext*, %class.SkSTArray, i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.GrGpu::Stats" = type { i8 }
%class.sk_sp.2 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.3, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.3 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::Compiler"* }
%"class.SkSL::Compiler" = type { %"class.SkSL::ErrorReporter", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr.44", %"class.std::__1::shared_ptr.44", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"class.SkSL::ModifiersPool", %"class.SkSL::Inliner", %"class.std::__1::unique_ptr.46", %"class.SkSL::String"*, i32, %"class.SkSL::String", %"class.std::__1::vector.52" }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%"class.std::__1::shared_ptr" = type { %"class.SkSL::Context"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4" }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.SkSL::Type"* }
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector", i32, i32, %"class.std::__1::vector.16", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.18" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.SkSL::Type::Field"* }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.43"* }
%"class.std::__1::vector.43" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::shared_ptr.44" = type { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::SymbolTable" = type { %"class.std::__1::shared_ptr.44", %"class.std::__1::vector.525", i8, %"class.std::__1::vector.533", %"class.std::__1::forward_list", %class.SkTHashMap.546, %"class.SkSL::ErrorReporter"* }
%"class.std::__1::vector.525" = type { %"class.std::__1::__vector_base.526" }
%"class.std::__1::__vector_base.526" = type { %"class.std::__1::unique_ptr.527"*, %"class.std::__1::unique_ptr.527"*, %"class.std::__1::__compressed_pair.528" }
%"class.std::__1::unique_ptr.527" = type { %"class.std::__1::__compressed_pair.629" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"struct.std::__1::__compressed_pair_elem.630" = type { %"class.SkSL::Symbol"* }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.529" }
%"struct.std::__1::__compressed_pair_elem.529" = type { %"class.std::__1::unique_ptr.527"* }
%"class.std::__1::vector.533" = type { %"class.std::__1::__vector_base.534" }
%"class.std::__1::__vector_base.534" = type { %"class.std::__1::unique_ptr.535"*, %"class.std::__1::unique_ptr.535"*, %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.634" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.SkSL::IRNode"* }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.std::__1::unique_ptr.535"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.541" }
%"class.std::__1::__compressed_pair.541" = type { %"struct.std::__1::__compressed_pair_elem.542" }
%"struct.std::__1::__compressed_pair_elem.542" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.SkSL::String" }
%class.SkTHashMap.546 = type { %class.SkTHashTable.547 }
%class.SkTHashTable.547 = type { i32, i32, %class.SkAutoTArray.548 }
%class.SkAutoTArray.548 = type { %"class.std::__1::unique_ptr.549" }
%"class.std::__1::unique_ptr.549" = type { %"class.std::__1::__compressed_pair.550" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.551" }
%"struct.std::__1::__compressed_pair_elem.551" = type { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair" = type { %"struct.std::__1::pair.639" }
%"struct.std::__1::pair.639" = type { %"struct.SkSL::SymbolTable::SymbolKey", %"class.SkSL::Symbol"* }
%"struct.SkSL::SymbolTable::SymbolKey" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"struct.SkSL::ParsedModule" = type { %"class.std::__1::shared_ptr.44", %"class.std::__1::shared_ptr.45" }
%"class.std::__1::shared_ptr.45" = type { %"class.SkSL::IRIntrinsicMap"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::IRIntrinsicMap" = type opaque
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.24", %"class.std::__1::__compressed_pair.33", %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.40", [4 x i8] }>
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26", %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { i64 }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { float }
%"class.SkSL::Inliner" = type { %"class.SkSL::Context"*, %"class.SkSL::Mangler", i32 }
%"class.SkSL::Mangler" = type { i32 }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.SkSL::IRGenerator"* }
%"class.SkSL::IRGenerator" = type opaque
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.9 }
%union.anon.9 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.52" = type { %"class.std::__1::__vector_base.53" }
%"class.std::__1::__vector_base.53" = type { i64*, i64*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { i64* }
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.120", %class.sk_sp.126, %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.166", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.185" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.63", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.102", %"class.std::__1::unique_ptr.108" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.62 }
%class.sk_sp.62 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.73, %class.SkTArray.82, %class.SkTArray.84, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.66"*, i64 }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.617" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618" }
%"struct.std::__1::__compressed_pair_elem.618" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.84, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.85 }
%class.sk_sp.85 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.67" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.73 = type { %class.SkTHashTable.74 }
%class.SkTHashTable.74 = type { i32, i32, %class.SkAutoTArray.75 }
%class.SkAutoTArray.75 = type { %"class.std::__1::unique_ptr.76" }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.622" }
%"struct.std::__1::pair.622" = type { i32, %class.SkTArray.623* }
%class.SkTArray.623 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.82 = type { %"class.std::__1::unique_ptr.83"*, i64 }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.623, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.84 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.95" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.98 }
%class.SkFibBlockSizes.98 = type { i32 }
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.126 = type { %class.GrGpu* }
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %class.GrResourceCache* }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.138, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.154, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.130 }
%class.SkTHashTable.130 = type { i32, i32, %class.SkAutoTArray.131 }
%class.SkAutoTArray.131 = type { %"class.std::__1::unique_ptr.132" }
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.138 = type { %class.SkTHashTable.139 }
%class.SkTHashTable.139 = type { i32, i32, %class.SkAutoTArray.140 }
%class.SkAutoTArray.140 = type { %"class.std::__1::unique_ptr.141" }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.147, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.147 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.148" }
%"struct.std::__1::atomic.148" = type { %"struct.std::__1::__atomic_base.149" }
%"struct.std::__1::__atomic_base.149" = type { %"struct.std::__1::__atomic_base.150" }
%"struct.std::__1::__atomic_base.150" = type { %"struct.std::__1::__cxx_atomic_impl.151" }
%"struct.std::__1::__cxx_atomic_impl.151" = type { %"struct.std::__1::__cxx_atomic_base_impl.152" }
%"struct.std::__1::__cxx_atomic_base_impl.152" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.153, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.153 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.154 = type { %class.SkTHashTable.155 }
%class.SkTHashTable.155 = type { i32, i32, %class.SkAutoTArray.156 }
%class.SkAutoTArray.156 = type { %"class.std::__1::unique_ptr.157" }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.2, %class.sk_sp.169, %class.sk_sp.169 }
%class.sk_sp.169 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.191 }
%class.SkAlignedSTStorage = type { [64 x i8] }
%class.SkTArray.191 = type { %"struct.GrGpu::SubmittedProc"*, i64 }
%"struct.GrGpu::SubmittedProc" = type { void (i8*, i1)*, i8* }
%"class.GrGpuResource::UniqueID" = type { i32 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.192 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.193, void (i8*)*, i8* }
%class.SkNVRefCnt.193 = type { %"struct.std::__1::atomic" }
%class.sk_sp.194 = type { %class.GrBuffer* }
%class.sk_sp.195 = type { %class.GrVkFramebuffer* }
%class.GrVkFramebuffer = type { %class.GrVkManagedResource, %struct.VkFramebuffer_T*, %class.sk_sp.459, %class.sk_sp.459, %class.sk_sp.459, %class.sk_sp.473, %class.GrResourceHandle.474, %class.sk_sp.473, %"class.std::__1::unique_ptr.436" }
%class.GrVkManagedResource = type { %class.GrManagedResource.base, %class.GrVkGpu* }
%class.GrManagedResource.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%struct.VkFramebuffer_T = type opaque
%class.sk_sp.459 = type { %class.GrVkAttachment* }
%class.GrVkAttachment = type { %class.GrAttachment.base, %class.GrVkImage, %class.sk_sp.471, %class.sk_sp.471, %class.gr_sp.472, %class.gr_sp.472 }
%class.GrAttachment.base = type <{ %class.GrSurface, i8, [3 x i8], i32, i8, i8 }>
%class.GrVkImage = type { i32 (...)**, %struct.GrVkImageInfo, i32, %class.sk_sp.460, i8, %"class.GrVkImage::Resource"* }
%struct.GrVkImageInfo = type <{ %struct.VkImage_T*, %struct.GrVkAlloc, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], %struct.GrVkYcbcrConversionInfo, i32, [4 x i8] }>
%struct.VkImage_T = type opaque
%struct.GrVkAlloc = type <{ %struct.VkDeviceMemory_T*, i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%struct.VkDeviceMemory_T = type opaque
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.sk_sp.460 = type { %class.GrBackendSurfaceMutableStateImpl* }
%class.GrBackendSurfaceMutableStateImpl = type { %class.SkRefCnt.base, %class.GrBackendSurfaceMutableState, [4 x i8] }
%class.GrBackendSurfaceMutableState = type <{ %union.anon.461, i32, i8, [3 x i8] }>
%union.anon.461 = type { %class.GrVkSharedImageInfo }
%class.GrVkSharedImageInfo = type { %"struct.std::__1::atomic.462", %"struct.std::__1::atomic.466" }
%"struct.std::__1::atomic.462" = type { %"struct.std::__1::__atomic_base.463" }
%"struct.std::__1::__atomic_base.463" = type { %"struct.std::__1::__cxx_atomic_impl.464" }
%"struct.std::__1::__cxx_atomic_impl.464" = type { %"struct.std::__1::__cxx_atomic_base_impl.465" }
%"struct.std::__1::__cxx_atomic_base_impl.465" = type { i32 }
%"struct.std::__1::atomic.466" = type { %"struct.std::__1::__atomic_base.467" }
%"struct.std::__1::__atomic_base.467" = type { %"struct.std::__1::__atomic_base.468" }
%"struct.std::__1::__atomic_base.468" = type { %"struct.std::__1::__cxx_atomic_impl.469" }
%"struct.std::__1::__cxx_atomic_impl.469" = type { %"struct.std::__1::__cxx_atomic_base_impl.470" }
%"struct.std::__1::__cxx_atomic_base_impl.470" = type { i32 }
%"class.GrVkImage::Resource" = type <{ %class.GrTextureResource, %class.GrVkGpu*, %struct.VkImage_T*, %struct.GrVkAlloc, i32, [4 x i8] }>
%class.GrTextureResource = type { %class.GrManagedResource.base, %class.sk_sp.192 }
%class.sk_sp.471 = type { %class.GrVkImageView* }
%class.GrVkImageView = type opaque
%class.gr_sp.472 = type { %class.GrVkDescriptorSet* }
%class.GrVkDescriptorSet = type <{ %class.GrVkRecycledResource, %struct.VkDescriptorSet_T*, %class.GrVkDescriptorPool*, %class.GrResourceHandle, [4 x i8] }>
%class.GrVkRecycledResource = type { %class.GrRecycledResource.base, %class.GrVkGpu* }
%class.GrRecycledResource.base = type { %class.GrManagedResource.base }
%struct.VkDescriptorSet_T = type opaque
%class.GrVkDescriptorPool = type { %class.GrVkManagedResource, i32, i32, %struct.VkDescriptorPool_T* }
%struct.VkDescriptorPool_T = type opaque
%class.GrResourceHandle = type { i32 }
%class.GrResourceHandle.474 = type { i32 }
%class.sk_sp.473 = type { %class.GrVkRenderPass* }
%"class.std::__1::unique_ptr.436" = type { %"class.std::__1::__compressed_pair.437" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.438" = type { %class.GrVkSecondaryCommandBuffer* }
%class.GrVkSecondaryCommandBuffer = type { %class.GrVkCommandBuffer.base, [3 x i8] }
%class.GrVkCommandBuffer.base = type <{ i32 (...)**, %class.SkSTArray.415, %class.SkSTArray.419, %class.SkSTArray.422, %class.SkSTArray.425, i8, i8, [6 x i8], %class.GrVkRenderPass*, %struct.VkCommandBuffer_T*, [2 x %struct.VkBuffer_T*], %struct.VkBuffer_T*, %struct.VkViewport, %struct.VkRect2D, [4 x float], %class.SkSTArray.429, %class.SkSTArray.432, i8, [3 x i8], i32, i32, i8 }>
%class.SkSTArray.415 = type { %class.SkAlignedSTStorage.416, %class.SkTArray.417 }
%class.SkAlignedSTStorage.416 = type { [256 x i8] }
%class.SkTArray.417 = type { %class.sk_sp.418*, i64 }
%class.sk_sp.418 = type { %class.GrManagedResource* }
%class.GrManagedResource = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkSTArray.419 = type { %class.SkAlignedSTStorage.420, %class.SkTArray.421 }
%class.SkAlignedSTStorage.420 = type { [256 x i8] }
%class.SkTArray.421 = type { %class.gr_sp*, i64 }
%class.gr_sp = type { %class.GrRecycledResource* }
%class.GrRecycledResource = type { %class.GrManagedResource.base, [4 x i8] }
%class.SkSTArray.422 = type { %class.SkAlignedSTStorage.423, %class.SkTArray.424 }
%class.SkAlignedSTStorage.423 = type { [128 x i8] }
%class.SkTArray.424 = type { %class.sk_sp.194*, i64 }
%class.SkSTArray.425 = type { %class.SkAlignedSTStorage.426, %class.SkTArray.427 }
%class.SkAlignedSTStorage.426 = type { [128 x i8] }
%class.SkTArray.427 = type { %class.gr_sp.428*, i64 }
%class.gr_sp.428 = type { %class.GrSurface* }
%struct.VkCommandBuffer_T = type opaque
%struct.VkBuffer_T = type opaque
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%class.SkSTArray.429 = type { %class.SkAlignedSTStorage.430, %class.SkTArray.431 }
%class.SkAlignedSTStorage.430 = type { [56 x i8] }
%class.SkTArray.431 = type { %struct.VkBufferMemoryBarrier*, i64 }
%struct.VkBufferMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, %struct.VkBuffer_T*, i64, i64 }
%class.SkSTArray.432 = type { %class.SkAlignedSTStorage.433, %class.SkTArray.434 }
%class.SkAlignedSTStorage.433 = type { [144 x i8] }
%class.SkTArray.434 = type { %struct.VkImageMemoryBarrier*, i64 }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%class.GrVkRenderPass = type <{ %class.GrVkManagedResource, %struct.VkRenderPass_T*, i32, %"struct.GrVkRenderPass::AttachmentsDescriptor", i32, i32, %struct.VkExtent2D, i32, i32, i32, [4 x i8] }>
%struct.VkRenderPass_T = type opaque
%"struct.GrVkRenderPass::AttachmentsDescriptor" = type { %"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc", %"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc", %"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc", i32 }
%"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc" = type { i32, i32, %"struct.GrVkRenderPass::LoadStoreOps" }
%"struct.GrVkRenderPass::LoadStoreOps" = type { i32, i32 }
%class.GrVkPipelineState = type <{ %class.sk_sp.353, %class.GrResourceHandle, [4 x i8], %class.SkSTArray.401, %"struct.GrVkPipelineState::RenderTargetState", %struct.GrGLSLBuiltinUniformHandles, [4 x i8], %"class.std::__1::unique_ptr.476", %"class.std::__1::unique_ptr.492", %"class.std::__1::vector.498", %class.GrVkPipelineStateDataManager, i32, [4 x i8] }>
%class.sk_sp.353 = type { %class.GrVkPipeline* }
%class.GrVkPipeline = type { %class.GrVkManagedResource, %struct.VkPipeline_T*, %struct.VkPipelineLayout_T* }
%struct.VkPipeline_T = type opaque
%struct.VkPipelineLayout_T = type opaque
%class.SkSTArray.401 = type { %class.SkAlignedSTStorage.402, %class.SkTArray.403 }
%class.SkAlignedSTStorage.402 = type { [32 x i8] }
%class.SkTArray.403 = type { %class.GrVkSampler**, i64 }
%class.GrVkSampler = type <{ %class.GrVkManagedResource, %struct.VkSampler_T*, %class.GrVkSamplerYcbcrConversion*, %"struct.GrVkSampler::Key", i32, [4 x i8] }>
%struct.VkSampler_T = type opaque
%class.GrVkSamplerYcbcrConversion = type { %class.GrVkManagedResource, %struct.VkSamplerYcbcrConversion_T*, %"struct.GrVkSamplerYcbcrConversion::Key" }
%struct.VkSamplerYcbcrConversion_T = type opaque
%"struct.GrVkSamplerYcbcrConversion::Key" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"struct.GrVkSampler::Key" = type { i8, [7 x i8], %"struct.GrVkSamplerYcbcrConversion::Key" }
%"struct.GrVkPipelineState::RenderTargetState" = type { %struct.SkISize, i32 }
%struct.GrGLSLBuiltinUniformHandles = type { %class.GrResourceHandle.475, %class.GrResourceHandle.475 }
%class.GrResourceHandle.475 = type { i32 }
%"class.std::__1::unique_ptr.476" = type { %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %class.GrGLSLGeometryProcessor* }
%class.GrGLSLGeometryProcessor = type { i32 (...)**, %class.SkTArray.479 }
%class.SkTArray.479 = type { %"struct.GrGLSLGeometryProcessor::TransformInfo"*, i64 }
%"struct.GrGLSLGeometryProcessor::TransformInfo" = type { %class.GrShaderVar, %class.GrShaderVar, %class.GrFragmentProcessor* }
%class.GrShaderVar = type { i32, i32, i32, %class.SkString, %class.SkString, %class.SkString }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.480, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray.480 = type { %class.SkAlignedSTStorage.481, %class.SkTArray.482 }
%class.SkAlignedSTStorage.481 = type { [8 x i8] }
%class.SkTArray.482 = type { %"class.std::__1::unique_ptr.483"*, i64 }
%"class.std::__1::unique_ptr.483" = type { %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.492" = type { %"class.std::__1::__compressed_pair.493" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.494" }
%"struct.std::__1::__compressed_pair_elem.494" = type { %class.GrGLSLXferProcessor* }
%class.GrGLSLXferProcessor = type { i32 (...)**, %class.GrResourceHandle.475, %class.GrResourceHandle.475 }
%"class.std::__1::vector.498" = type { %"class.std::__1::__vector_base.499" }
%"class.std::__1::__vector_base.499" = type { %"class.std::__1::unique_ptr.500"*, %"class.std::__1::unique_ptr.500"*, %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::unique_ptr.500" = type { %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.502" }
%"struct.std::__1::__compressed_pair_elem.502" = type { %class.GrGLSLFragmentProcessor* }
%class.GrGLSLFragmentProcessor = type { i32 (...)**, %class.SkTArray.84, %class.SkTArray.503 }
%class.SkTArray.503 = type { %"class.std::__1::unique_ptr.500"*, i64 }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"class.std::__1::unique_ptr.500"* }
%class.GrVkPipelineStateDataManager = type <{ %class.GrUniformDataManager.base, [7 x i8], %class.sk_sp.409, i8, [7 x i8] }>
%class.GrUniformDataManager.base = type <{ %class.GrGLSLProgramDataManager, i32, [4 x i8], %class.SkTArray.512, %class.SkAutoMalloc, i8 }>
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%class.SkTArray.512 = type { %"struct.GrUniformDataManager::Uniform"*, i64 }
%"struct.GrUniformDataManager::Uniform" = type { i32 }
%class.SkAutoMalloc = type { %"class.std::__1::unique_ptr.513", i64 }
%"class.std::__1::unique_ptr.513" = type { %"class.std::__1::__compressed_pair.514" }
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.515" }
%"struct.std::__1::__compressed_pair_elem.515" = type { i8* }
%class.sk_sp.409 = type { %class.GrGpuBuffer* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.GrVkGpu = type { %class.GrGpu, %class.sk_sp.196, %class.sk_sp.340, %class.sk_sp.341, i8, %struct.VkPhysicalDevice_T*, %struct.VkDevice_T*, %struct.VkQueue_T*, i32, %class.GrVkResourceProvider, %class.GrStagingBufferManager, %class.GrVkMSAALoadManager, %class.GrVkCommandPool*, %class.GrVkPrimaryCommandBuffer*, %class.SkSTArray.443, %class.SkSTArray.443, %class.SkTArray.446, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceMemoryProperties, i8, i8, %"class.std::__1::unique_ptr.453" }
%class.sk_sp.196 = type { %struct.GrVkInterface* }
%struct.GrVkInterface = type { %class.SkRefCnt.base, %"struct.GrVkInterface::Functions" }
%"struct.GrVkInterface::Functions" = type { %"class.GrVkInterface::VkPtr", %"class.GrVkInterface::VkPtr.197", %"class.GrVkInterface::VkPtr.198", %"class.GrVkInterface::VkPtr.199", %"class.GrVkInterface::VkPtr.200", %"class.GrVkInterface::VkPtr.201", %"class.GrVkInterface::VkPtr.202", %"class.GrVkInterface::VkPtr.203", %"class.GrVkInterface::VkPtr.204", %"class.GrVkInterface::VkPtr.205", %"class.GrVkInterface::VkPtr.206", %"class.GrVkInterface::VkPtr.207", %"class.GrVkInterface::VkPtr.208", %"class.GrVkInterface::VkPtr.209", %"class.GrVkInterface::VkPtr.210", %"class.GrVkInterface::VkPtr.211", %"class.GrVkInterface::VkPtr.212", %"class.GrVkInterface::VkPtr.213", %"class.GrVkInterface::VkPtr.214", %"class.GrVkInterface::VkPtr.215", %"class.GrVkInterface::VkPtr.216", %"class.GrVkInterface::VkPtr.217", %"class.GrVkInterface::VkPtr.218", %"class.GrVkInterface::VkPtr.219", %"class.GrVkInterface::VkPtr.219", %"class.GrVkInterface::VkPtr.220", %"class.GrVkInterface::VkPtr.221", %"class.GrVkInterface::VkPtr.222", %"class.GrVkInterface::VkPtr.223", %"class.GrVkInterface::VkPtr.224", %"class.GrVkInterface::VkPtr.225", %"class.GrVkInterface::VkPtr.226", %"class.GrVkInterface::VkPtr.227", %"class.GrVkInterface::VkPtr.228", %"class.GrVkInterface::VkPtr.229", %"class.GrVkInterface::VkPtr.230", %"class.GrVkInterface::VkPtr.231", %"class.GrVkInterface::VkPtr.232", %"class.GrVkInterface::VkPtr.233", %"class.GrVkInterface::VkPtr.234", %"class.GrVkInterface::VkPtr.235", %"class.GrVkInterface::VkPtr.236", %"class.GrVkInterface::VkPtr.237", %"class.GrVkInterface::VkPtr.237", %"class.GrVkInterface::VkPtr.237", %"class.GrVkInterface::VkPtr.238", %"class.GrVkInterface::VkPtr.239", %"class.GrVkInterface::VkPtr.240", %"class.GrVkInterface::VkPtr.241", %"class.GrVkInterface::VkPtr.242", %"class.GrVkInterface::VkPtr.243", %"class.GrVkInterface::VkPtr.244", %"class.GrVkInterface::VkPtr.245", %"class.GrVkInterface::VkPtr.246", %"class.GrVkInterface::VkPtr.247", %"class.GrVkInterface::VkPtr.248", %"class.GrVkInterface::VkPtr.249", %"class.GrVkInterface::VkPtr.250", %"class.GrVkInterface::VkPtr.251", %"class.GrVkInterface::VkPtr.252", %"class.GrVkInterface::VkPtr.253", %"class.GrVkInterface::VkPtr.254", %"class.GrVkInterface::VkPtr.255", %"class.GrVkInterface::VkPtr.256", %"class.GrVkInterface::VkPtr.257", %"class.GrVkInterface::VkPtr.258", %"class.GrVkInterface::VkPtr.259", %"class.GrVkInterface::VkPtr.260", %"class.GrVkInterface::VkPtr.261", %"class.GrVkInterface::VkPtr.262", %"class.GrVkInterface::VkPtr.263", %"class.GrVkInterface::VkPtr.264", %"class.GrVkInterface::VkPtr.265", %"class.GrVkInterface::VkPtr.266", %"class.GrVkInterface::VkPtr.267", %"class.GrVkInterface::VkPtr.268", %"class.GrVkInterface::VkPtr.269", %"class.GrVkInterface::VkPtr.270", %"class.GrVkInterface::VkPtr.271", %"class.GrVkInterface::VkPtr.272", %"class.GrVkInterface::VkPtr.273", %"class.GrVkInterface::VkPtr.274", %"class.GrVkInterface::VkPtr.275", %"class.GrVkInterface::VkPtr.276", %"class.GrVkInterface::VkPtr.277", %"class.GrVkInterface::VkPtr.278", %"class.GrVkInterface::VkPtr.279", %"class.GrVkInterface::VkPtr.280", %"class.GrVkInterface::VkPtr.281", %"class.GrVkInterface::VkPtr.282", %"class.GrVkInterface::VkPtr.283", %"class.GrVkInterface::VkPtr.284", %"class.GrVkInterface::VkPtr.285", %"class.GrVkInterface::VkPtr.286", %"class.GrVkInterface::VkPtr.287", %"class.GrVkInterface::VkPtr.288", %"class.GrVkInterface::VkPtr.289", %"class.GrVkInterface::VkPtr.290", %"class.GrVkInterface::VkPtr.291", %"class.GrVkInterface::VkPtr.291", %"class.GrVkInterface::VkPtr.291", %"class.GrVkInterface::VkPtr.292", %"class.GrVkInterface::VkPtr.293", %"class.GrVkInterface::VkPtr.294", %"class.GrVkInterface::VkPtr.295", %"class.GrVkInterface::VkPtr.296", %"class.GrVkInterface::VkPtr.297", %"class.GrVkInterface::VkPtr.297", %"class.GrVkInterface::VkPtr.298", %"class.GrVkInterface::VkPtr.299", %"class.GrVkInterface::VkPtr.300", %"class.GrVkInterface::VkPtr.301", %"class.GrVkInterface::VkPtr.302", %"class.GrVkInterface::VkPtr.303", %"class.GrVkInterface::VkPtr.304", %"class.GrVkInterface::VkPtr.305", %"class.GrVkInterface::VkPtr.306", %"class.GrVkInterface::VkPtr.307", %"class.GrVkInterface::VkPtr.308", %"class.GrVkInterface::VkPtr.309", %"class.GrVkInterface::VkPtr.310", %"class.GrVkInterface::VkPtr.311", %"class.GrVkInterface::VkPtr.311", %"class.GrVkInterface::VkPtr.312", %"class.GrVkInterface::VkPtr.313", %"class.GrVkInterface::VkPtr.314", %"class.GrVkInterface::VkPtr.315", %"class.GrVkInterface::VkPtr.314", %"class.GrVkInterface::VkPtr.316", %"class.GrVkInterface::VkPtr.317", %"class.GrVkInterface::VkPtr.318", %"class.GrVkInterface::VkPtr.319", %"class.GrVkInterface::VkPtr.320", %"class.GrVkInterface::VkPtr.321", %"class.GrVkInterface::VkPtr.322", %"class.GrVkInterface::VkPtr.323", %"class.GrVkInterface::VkPtr.324", %"class.GrVkInterface::VkPtr.325", %"class.GrVkInterface::VkPtr.326", %"class.GrVkInterface::VkPtr.327", %"class.GrVkInterface::VkPtr.328", %"class.GrVkInterface::VkPtr.329", %"class.GrVkInterface::VkPtr.330", %"class.GrVkInterface::VkPtr.331", %"class.GrVkInterface::VkPtr.332", %"class.GrVkInterface::VkPtr.333", %"class.GrVkInterface::VkPtr.334", %"class.GrVkInterface::VkPtr.335", %"class.GrVkInterface::VkPtr.336", %"class.GrVkInterface::VkPtr.337", %"class.GrVkInterface::VkPtr.338", %"class.GrVkInterface::VkPtr.339" }
%"class.GrVkInterface::VkPtr" = type { i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)* }
%struct.VkInstanceCreateInfo = type { i32, i8*, i32, %struct.VkApplicationInfo*, i32, i8**, i32, i8** }
%struct.VkApplicationInfo = type { i32, i8*, i8*, i32, i8*, i32, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%struct.VkInstance_T = type opaque
%"class.GrVkInterface::VkPtr.197" = type { void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.198" = type { i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)* }
%"class.GrVkInterface::VkPtr.199" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)* }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.200" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)* }
%struct.VkFormatProperties = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.201" = type { i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)* }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.202" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)* }
%"class.GrVkInterface::VkPtr.203" = type { void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)* }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%"class.GrVkInterface::VkPtr.204" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)* }
%"class.GrVkInterface::VkPtr.205" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)* }
%struct.VkDeviceCreateInfo = type { i32, i8*, i32, i32, %struct.VkDeviceQueueCreateInfo*, i32, i8**, i32, i8**, %struct.VkPhysicalDeviceFeatures* }
%struct.VkDeviceQueueCreateInfo = type { i32, i8*, i32, i32, i32, float* }
%"class.GrVkInterface::VkPtr.206" = type { void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.207" = type { i32 (i8*, i32*, %struct.VkExtensionProperties*)* }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%"class.GrVkInterface::VkPtr.208" = type { i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)* }
%"class.GrVkInterface::VkPtr.209" = type { i32 (i32*, %struct.VkLayerProperties*)* }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%"class.GrVkInterface::VkPtr.210" = type { i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)* }
%"class.GrVkInterface::VkPtr.211" = type { void (%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**)* }
%"class.GrVkInterface::VkPtr.212" = type { i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)* }
%struct.VkSubmitInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32*, i32, %struct.VkCommandBuffer_T**, i32, %struct.VkSemaphore_T** }
%struct.VkSemaphore_T = type opaque
%struct.VkFence_T = type opaque
%"class.GrVkInterface::VkPtr.213" = type { i32 (%struct.VkQueue_T*)* }
%"class.GrVkInterface::VkPtr.214" = type { i32 (%struct.VkDevice_T*)* }
%"class.GrVkInterface::VkPtr.215" = type { i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)* }
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%"class.GrVkInterface::VkPtr.216" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.217" = type { i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)* }
%"class.GrVkInterface::VkPtr.218" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)* }
%"class.GrVkInterface::VkPtr.219" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)* }
%struct.VkMappedMemoryRange = type { i32, i8*, %struct.VkDeviceMemory_T*, i64, i64 }
%"class.GrVkInterface::VkPtr.220" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64*)* }
%"class.GrVkInterface::VkPtr.221" = type { i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)* }
%"class.GrVkInterface::VkPtr.222" = type { i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)* }
%"class.GrVkInterface::VkPtr.223" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)* }
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%"class.GrVkInterface::VkPtr.224" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)* }
%"class.GrVkInterface::VkPtr.225" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, i32*, %struct.VkSparseImageMemoryRequirements*)* }
%struct.VkSparseImageMemoryRequirements = type { %struct.VkSparseImageFormatProperties, i32, i64, i64, i64 }
%struct.VkSparseImageFormatProperties = type { i32, %struct.VkExtent3D, i32 }
%"class.GrVkInterface::VkPtr.226" = type { void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)* }
%"class.GrVkInterface::VkPtr.227" = type { i32 (%struct.VkQueue_T*, i32, %struct.VkBindSparseInfo*, %struct.VkFence_T*)* }
%struct.VkBindSparseInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSparseBufferMemoryBindInfo*, i32, %struct.VkSparseImageOpaqueMemoryBindInfo*, i32, %struct.VkSparseImageMemoryBindInfo*, i32, %struct.VkSemaphore_T** }
%struct.VkSparseBufferMemoryBindInfo = type { %struct.VkBuffer_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseMemoryBind = type { i64, i64, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkSparseImageOpaqueMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseImageMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseImageMemoryBind* }
%struct.VkSparseImageMemoryBind = type { %struct.VkImageSubresource, %struct.VkOffset3D, %struct.VkExtent3D, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkImageSubresource = type { i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.228" = type { i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)* }
%struct.VkFenceCreateInfo = type { i32, i8*, i32 }
%"class.GrVkInterface::VkPtr.229" = type { void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.230" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**)* }
%"class.GrVkInterface::VkPtr.231" = type { i32 (%struct.VkDevice_T*, %struct.VkFence_T*)* }
%"class.GrVkInterface::VkPtr.232" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)* }
%"class.GrVkInterface::VkPtr.233" = type { i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)* }
%struct.VkSemaphoreCreateInfo = type { i32, i8*, i32 }
%"class.GrVkInterface::VkPtr.234" = type { void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.235" = type { i32 (%struct.VkDevice_T*, %struct.VkEventCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkEvent_T**)* }
%struct.VkEventCreateInfo = type { i32, i8*, i32 }
%struct.VkEvent_T = type opaque
%"class.GrVkInterface::VkPtr.236" = type { void (%struct.VkDevice_T*, %struct.VkEvent_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.237" = type { i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)* }
%"class.GrVkInterface::VkPtr.238" = type { i32 (%struct.VkDevice_T*, %struct.VkQueryPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkQueryPool_T**)* }
%struct.VkQueryPoolCreateInfo = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkQueryPool_T = type opaque
%"class.GrVkInterface::VkPtr.239" = type { void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.240" = type { i32 (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32, i64, i8*, i64, i32)* }
%"class.GrVkInterface::VkPtr.241" = type { i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)* }
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%"class.GrVkInterface::VkPtr.242" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.243" = type { i32 (%struct.VkDevice_T*, %struct.VkBufferViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBufferView_T**)* }
%struct.VkBufferViewCreateInfo = type { i32, i8*, i32, %struct.VkBuffer_T*, i32, i64, i64 }
%struct.VkBufferView_T = type opaque
%"class.GrVkInterface::VkPtr.244" = type { void (%struct.VkDevice_T*, %struct.VkBufferView_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.245" = type { i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)* }
%struct.VkImageCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkExtent3D, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%"class.GrVkInterface::VkPtr.246" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.247" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)* }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%"class.GrVkInterface::VkPtr.248" = type { i32 (%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImageView_T**)* }
%struct.VkImageViewCreateInfo = type { i32, i8*, i32, %struct.VkImage_T*, i32, i32, %struct.VkComponentMapping, %struct.VkImageSubresourceRange }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%struct.VkImageView_T = type opaque
%"class.GrVkInterface::VkPtr.249" = type { void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.250" = type { i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)* }
%struct.VkShaderModuleCreateInfo = type { i32, i8*, i32, i64, i32* }
%struct.VkShaderModule_T = type opaque
%"class.GrVkInterface::VkPtr.251" = type { void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.252" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCacheCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineCache_T**)* }
%struct.VkPipelineCacheCreateInfo = type { i32, i8*, i32, i64, i8* }
%struct.VkPipelineCache_T = type opaque
%"class.GrVkInterface::VkPtr.253" = type { void (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.254" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i64*, i8*)* }
%"class.GrVkInterface::VkPtr.255" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkPipelineCache_T**)* }
%"class.GrVkInterface::VkPtr.256" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* }
%struct.VkGraphicsPipelineCreateInfo = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineVertexInputStateCreateInfo*, %struct.VkPipelineInputAssemblyStateCreateInfo*, %struct.VkPipelineTessellationStateCreateInfo*, %struct.VkPipelineViewportStateCreateInfo*, %struct.VkPipelineRasterizationStateCreateInfo*, %struct.VkPipelineMultisampleStateCreateInfo*, %struct.VkPipelineDepthStencilStateCreateInfo*, %struct.VkPipelineColorBlendStateCreateInfo*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkRenderPass_T*, i32, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineShaderStageCreateInfo = type { i32, i8*, i32, i32, %struct.VkShaderModule_T*, i8*, %struct.VkSpecializationInfo* }
%struct.VkSpecializationInfo = type { i32, %struct.VkSpecializationMapEntry*, i64, i8* }
%struct.VkSpecializationMapEntry = type { i32, i32, i64 }
%struct.VkPipelineVertexInputStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkVertexInputBindingDescription*, i32, %struct.VkVertexInputAttributeDescription* }
%struct.VkVertexInputBindingDescription = type { i32, i32, i32 }
%struct.VkVertexInputAttributeDescription = type { i32, i32, i32, i32 }
%struct.VkPipelineInputAssemblyStateCreateInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPipelineTessellationStateCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineViewportStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkViewport*, i32, %struct.VkRect2D* }
%struct.VkPipelineRasterizationStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.VkPipelineMultisampleStateCreateInfo = type { i32, i8*, i32, i32, i32, float, i32*, i32, i32 }
%struct.VkPipelineDepthStencilStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineColorBlendStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }
%struct.VkPipelineColorBlendAttachmentState = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineDynamicStateCreateInfo = type { i32, i8*, i32, i32, i32* }
%"class.GrVkInterface::VkPtr.257" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkComputePipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* }
%struct.VkComputePipelineCreateInfo = type { i32, i8*, i32, %struct.VkPipelineShaderStageCreateInfo, %struct.VkPipelineLayout_T*, %struct.VkPipeline_T*, i32 }
%"class.GrVkInterface::VkPtr.258" = type { void (%struct.VkDevice_T*, %struct.VkPipeline_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.259" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineLayout_T**)* }
%struct.VkPipelineLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayout_T**, i32, %struct.VkPushConstantRange* }
%struct.VkDescriptorSetLayout_T = type opaque
%struct.VkPushConstantRange = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.260" = type { void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.261" = type { i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)* }
%struct.VkSamplerCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32 }
%"class.GrVkInterface::VkPtr.262" = type { void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.263" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)* }
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %struct.VkSampler_T** }
%"class.GrVkInterface::VkPtr.264" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.265" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorPool_T**)* }
%struct.VkDescriptorPoolCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%"class.GrVkInterface::VkPtr.266" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.267" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.268" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %struct.VkDescriptorSet_T**)* }
%struct.VkDescriptorSetAllocateInfo = type { i32, i8*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSetLayout_T** }
%"class.GrVkInterface::VkPtr.269" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSet_T**)* }
%"class.GrVkInterface::VkPtr.270" = type { void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)* }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%struct.VkCopyDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, %struct.VkDescriptorSet_T*, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.271" = type { i32 (%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFramebuffer_T**)* }
%struct.VkFramebufferCreateInfo = type { i32, i8*, i32, %struct.VkRenderPass_T*, i32, %struct.VkImageView_T**, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.272" = type { void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.273" = type { i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)* }
%struct.VkRenderPassCreateInfo = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, i32, %struct.VkSubpassDependency* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.274" = type { void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.275" = type { void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkExtent2D*)* }
%"class.GrVkInterface::VkPtr.276" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkCommandPool_T**)* }
%struct.VkCommandPoolCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkCommandPool_T = type opaque
%"class.GrVkInterface::VkPtr.277" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.278" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.279" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**)* }
%struct.VkCommandBufferAllocateInfo = type { i32, i8*, %struct.VkCommandPool_T*, i32, i32 }
%"class.GrVkInterface::VkPtr.280" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.GrVkInterface::VkPtr.281" = type { i32 (%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*)* }
%struct.VkCommandBufferBeginInfo = type { i32, i8*, i32, %struct.VkCommandBufferInheritanceInfo* }
%struct.VkCommandBufferInheritanceInfo = type { i32, i8*, %struct.VkRenderPass_T*, i32, %struct.VkFramebuffer_T*, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.282" = type { i32 (%struct.VkCommandBuffer_T*)* }
%"class.GrVkInterface::VkPtr.283" = type { i32 (%struct.VkCommandBuffer_T*, i32)* }
%"class.GrVkInterface::VkPtr.284" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipeline_T*)* }
%"class.GrVkInterface::VkPtr.285" = type { void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkViewport*)* }
%"class.GrVkInterface::VkPtr.286" = type { void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)* }
%"class.GrVkInterface::VkPtr.287" = type { void (%struct.VkCommandBuffer_T*, float)* }
%"class.GrVkInterface::VkPtr.288" = type { void (%struct.VkCommandBuffer_T*, float, float, float)* }
%"class.GrVkInterface::VkPtr.289" = type { void (%struct.VkCommandBuffer_T*, float*)* }
%"class.GrVkInterface::VkPtr.290" = type { void (%struct.VkCommandBuffer_T*, float, float)* }
%"class.GrVkInterface::VkPtr.291" = type { void (%struct.VkCommandBuffer_T*, i32, i32)* }
%"class.GrVkInterface::VkPtr.292" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipelineLayout_T*, i32, i32, %struct.VkDescriptorSet_T**, i32, i32*)* }
%"class.GrVkInterface::VkPtr.293" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32)* }
%"class.GrVkInterface::VkPtr.294" = type { void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)* }
%"class.GrVkInterface::VkPtr.295" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32)* }
%"class.GrVkInterface::VkPtr.296" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32)* }
%"class.GrVkInterface::VkPtr.297" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)* }
%"class.GrVkInterface::VkPtr.298" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32)* }
%"class.GrVkInterface::VkPtr.299" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64)* }
%"class.GrVkInterface::VkPtr.300" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)* }
%struct.VkBufferCopy = type { i64, i64, i64 }
%"class.GrVkInterface::VkPtr.301" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageCopy*)* }
%struct.VkImageCopy = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.302" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageBlit*, i32)* }
%struct.VkImageBlit = type { %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D], %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D] }
%"class.GrVkInterface::VkPtr.303" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy*)* }
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%"class.GrVkInterface::VkPtr.304" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkBuffer_T*, i32, %struct.VkBufferImageCopy*)* }
%"class.GrVkInterface::VkPtr.305" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i8*)* }
%"class.GrVkInterface::VkPtr.306" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i32)* }
%"class.GrVkInterface::VkPtr.307" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %union.VkClearColorValue*, i32, %struct.VkImageSubresourceRange*)* }
%union.VkClearColorValue = type { [4 x float] }
%"class.GrVkInterface::VkPtr.308" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkClearDepthStencilValue*, i32, %struct.VkImageSubresourceRange*)* }
%struct.VkClearDepthStencilValue = type { float, i32 }
%"class.GrVkInterface::VkPtr.309" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkClearAttachment*, i32, %struct.VkClearRect*)* }
%struct.VkClearAttachment = type { i32, i32, %union.VkClearValue }
%union.VkClearValue = type { %union.VkClearColorValue }
%struct.VkClearRect = type { %struct.VkRect2D, i32, i32 }
%"class.GrVkInterface::VkPtr.310" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageResolve*)* }
%struct.VkImageResolve = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%"class.GrVkInterface::VkPtr.311" = type { void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)* }
%"class.GrVkInterface::VkPtr.312" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkEvent_T**, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)* }
%struct.VkMemoryBarrier = type { i32, i8*, i32, i32 }
%"class.GrVkInterface::VkPtr.313" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)* }
%"class.GrVkInterface::VkPtr.315" = type { void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.314" = type { void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)* }
%"class.GrVkInterface::VkPtr.316" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkQueryPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.317" = type { void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32, %struct.VkBuffer_T*, i64, i64, i32)* }
%"class.GrVkInterface::VkPtr.318" = type { void (%struct.VkCommandBuffer_T*, %struct.VkPipelineLayout_T*, i32, i32, i32, i8*)* }
%"class.GrVkInterface::VkPtr.319" = type { void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32)* }
%struct.VkRenderPassBeginInfo = type { i32, i8*, %struct.VkRenderPass_T*, %struct.VkFramebuffer_T*, %struct.VkRect2D, i32, %union.VkClearValue* }
%"class.GrVkInterface::VkPtr.320" = type { void (%struct.VkCommandBuffer_T*, i32)* }
%"class.GrVkInterface::VkPtr.321" = type { void (%struct.VkCommandBuffer_T*)* }
%"class.GrVkInterface::VkPtr.322" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.GrVkInterface::VkPtr.323" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)* }
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%"class.GrVkInterface::VkPtr.324" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)* }
%struct.VkPhysicalDeviceProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceProperties }
%"class.GrVkInterface::VkPtr.325" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)* }
%struct.VkFormatProperties2 = type { i32, i8*, %struct.VkFormatProperties }
%"class.GrVkInterface::VkPtr.326" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)* }
%struct.VkPhysicalDeviceImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkImageFormatProperties2 = type { i32, i8*, %struct.VkImageFormatProperties }
%"class.GrVkInterface::VkPtr.327" = type { void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)* }
%struct.VkQueueFamilyProperties2 = type { i32, i8*, %struct.VkQueueFamilyProperties }
%"class.GrVkInterface::VkPtr.328" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)* }
%struct.VkPhysicalDeviceMemoryProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceMemoryProperties }
%"class.GrVkInterface::VkPtr.329" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)* }
%struct.VkPhysicalDeviceSparseImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkSparseImageFormatProperties2 = type { i32, i8*, %struct.VkSparseImageFormatProperties }
%"class.GrVkInterface::VkPtr.330" = type { void (%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkImageMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%struct.VkMemoryRequirements2 = type { i32, i8*, %struct.VkMemoryRequirements }
%"class.GrVkInterface::VkPtr.331" = type { void (%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkBufferMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkBuffer_T* }
%"class.GrVkInterface::VkPtr.332" = type { void (%struct.VkDevice_T*, %struct.VkImageSparseMemoryRequirementsInfo2*, i32*, %struct.VkSparseImageMemoryRequirements2*)* }
%struct.VkImageSparseMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%struct.VkSparseImageMemoryRequirements2 = type { i32, i8*, %struct.VkSparseImageMemoryRequirements }
%"class.GrVkInterface::VkPtr.333" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*)* }
%struct.VkBindBufferMemoryInfo = type { i32, i8*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.GrVkInterface::VkPtr.334" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*)* }
%struct.VkBindImageMemoryInfo = type { i32, i8*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.GrVkInterface::VkPtr.335" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.336" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkDescriptorSetLayoutSupport*)* }
%struct.VkDescriptorSetLayoutSupport = type { i32, i8*, i32 }
%"class.GrVkInterface::VkPtr.337" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)* }
%struct.VkPhysicalDeviceExternalBufferInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalBufferProperties = type { i32, i8*, %struct.VkExternalMemoryProperties }
%struct.VkExternalMemoryProperties = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.338" = type { i32 (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversionCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSamplerYcbcrConversion_T**)* }
%struct.VkSamplerYcbcrConversionCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkComponentMapping, i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.339" = type { void (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversion_T*, %struct.VkAllocationCallbacks*)* }
%class.sk_sp.340 = type { %class.GrVkMemoryAllocator* }
%class.GrVkMemoryAllocator = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.341 = type { %class.GrVkCaps* }
%class.GrVkCaps = type <{ %class.GrCaps.base, i8, [22 x %"struct.GrVkCaps::FormatInfo"], [31 x i32], i32, %class.SkSTArray.349, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, [2 x i8], i32, [4 x i8] }>
%class.GrCaps.base = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.3, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8 }>
%"struct.GrVkCaps::FormatInfo" = type <{ i16, i16, [4 x i8], %class.SkTDArray.342, %"class.std::__1::unique_ptr.343", i32, [4 x i8] }>
%class.SkTDArray.342 = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.343" = type { %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"struct.GrVkCaps::ColorTypeInfo"* }
%"struct.GrVkCaps::ColorTypeInfo" = type { i32, i32, i32, %class.GrSwizzle, %class.GrSwizzle }
%class.GrSwizzle = type { i16 }
%class.SkSTArray.349 = type { %class.SkAlignedSTStorage.350, %class.SkTArray.351 }
%class.SkAlignedSTStorage.350 = type { [48 x i8] }
%class.SkTArray.351 = type { %struct.GrVkYcbcrConversionInfo*, i64 }
%struct.VkPhysicalDevice_T = type opaque
%struct.VkDevice_T = type opaque
%struct.VkQueue_T = type opaque
%class.GrVkResourceProvider = type { %class.GrVkGpu*, %struct.VkPipelineCache_T*, %class.SkTArray.352, %class.SkSTArray.354, %class.SkTArray.360, %class.SkSTArray.361, %class.SkMutex, %class.SkSTArray.361, %class.SkTDynamicHash.364, %class.SkTDynamicHash.373, %class.sk_sp.382, %class.SkSTArray.391, %class.GrResourceHandle, %class.GrResourceHandle }
%class.SkTArray.352 = type { %"struct.GrVkResourceProvider::MSAALoadPipeline"*, i64 }
%"struct.GrVkResourceProvider::MSAALoadPipeline" = type { %class.sk_sp.353, %class.GrVkRenderPass* }
%class.SkSTArray.354 = type { %class.SkAlignedSTStorage.355, %class.SkTArray.356 }
%class.SkAlignedSTStorage.355 = type { [224 x i8] }
%class.SkTArray.356 = type { %"class.GrVkResourceProvider::CompatibleRenderPassSet"*, i64 }
%"class.GrVkResourceProvider::CompatibleRenderPassSet" = type <{ %class.SkSTArray.357, i32, [4 x i8] }>
%class.SkSTArray.357 = type { %class.SkAlignedSTStorage.358, %class.SkTArray.359 }
%class.SkAlignedSTStorage.358 = type { [32 x i8] }
%class.SkTArray.359 = type { %class.GrVkRenderPass**, i64 }
%class.SkTArray.360 = type { %class.GrVkRenderPass**, i64 }
%class.SkSTArray.361 = type { %class.SkAlignedSTStorage.362, %class.SkTArray.363 }
%class.SkAlignedSTStorage.362 = type { [32 x i8] }
%class.SkTArray.363 = type { %class.GrVkCommandPool**, i64 }
%class.SkTDynamicHash.364 = type { %class.SkTHashTable.365 }
%class.SkTHashTable.365 = type { i32, i32, %class.SkAutoTArray.366 }
%class.SkAutoTArray.366 = type { %"class.std::__1::unique_ptr.367" }
%"class.std::__1::unique_ptr.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.373 = type { %class.SkTHashTable.374 }
%class.SkTHashTable.374 = type { i32, i32, %class.SkAutoTArray.375 }
%class.SkAutoTArray.375 = type { %"class.std::__1::unique_ptr.376" }
%"class.std::__1::unique_ptr.376" = type { %"class.std::__1::__compressed_pair.377" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot" = type opaque
%class.sk_sp.382 = type { %"class.GrVkResourceProvider::PipelineStateCache"* }
%"class.GrVkResourceProvider::PipelineStateCache" = type { %class.GrThreadSafePipelineBuilder.base, %class.SkLRUCache, %class.GrVkGpu* }
%class.GrThreadSafePipelineBuilder.base = type { %class.SkRefCnt.base, %"class.GrThreadSafePipelineBuilder::Stats" }
%"class.GrThreadSafePipelineBuilder::Stats" = type { i8 }
%class.SkLRUCache = type { i32, %class.SkTHashTable.383, %class.SkTInternalLList }
%class.SkTHashTable.383 = type { i32, i32, %class.SkAutoTArray.384 }
%class.SkAutoTArray.384 = type { %"class.std::__1::unique_ptr.385" }
%"class.std::__1::unique_ptr.385" = type { %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"struct.SkTHashTable<SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry *, const GrProgramDesc, SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Traits>::Slot"* }
%"struct.SkTHashTable<SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry *, const GrProgramDesc, SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Traits>::Slot" = type opaque
%class.SkTInternalLList = type { %"struct.SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry"*, %"struct.SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry"* }
%"struct.SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry" = type opaque
%class.SkSTArray.391 = type { %class.SkAlignedSTStorage.392, %class.SkTArray.393 }
%class.SkAlignedSTStorage.392 = type { [32 x i8] }
%class.SkTArray.393 = type { %"class.std::__1::unique_ptr.394"*, i64 }
%"class.std::__1::unique_ptr.394" = type { %"class.std::__1::__compressed_pair.395" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %class.GrVkDescriptorSetManager* }
%class.GrVkDescriptorSetManager = type { %"struct.GrVkDescriptorSetManager::DescriptorPoolManager", %class.SkTArray.397, %class.SkSTArray.398, %class.SkSTArray.401 }
%"struct.GrVkDescriptorSetManager::DescriptorPoolManager" = type { %struct.VkDescriptorSetLayout_T*, i32, i32, i32, i32, %class.GrVkDescriptorPool* }
%class.SkTArray.397 = type { %class.GrVkDescriptorSet**, i64 }
%class.SkSTArray.398 = type { %class.SkAlignedSTStorage.399, %class.SkTArray.400 }
%class.SkAlignedSTStorage.399 = type { [16 x i8] }
%class.SkTArray.400 = type { i32*, i64 }
%class.GrStagingBufferManager = type { %"class.std::__1::vector.407", %class.GrGpu* }
%"class.std::__1::vector.407" = type { %"class.std::__1::__vector_base.408" }
%"class.std::__1::__vector_base.408" = type { %"struct.GrStagingBufferManager::StagingBuffer"*, %"struct.GrStagingBufferManager::StagingBuffer"*, %"class.std::__1::__compressed_pair.410" }
%"struct.GrStagingBufferManager::StagingBuffer" = type { %class.sk_sp.409, i8*, i64 }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"struct.GrStagingBufferManager::StagingBuffer"* }
%class.GrVkMSAALoadManager = type { %struct.VkShaderModule_T*, %struct.VkShaderModule_T*, [2 x %struct.VkPipelineShaderStageCreateInfo], %struct.VkPipelineLayout_T* }
%class.GrVkCommandPool = type <{ %class.GrVkManagedResource, i8, [7 x i8], %struct.VkCommandPool_T*, %"class.std::__1::unique_ptr.517", %class.SkSTArray.523, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.517" = type { %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.519" }
%"struct.std::__1::__compressed_pair_elem.519" = type { %class.GrVkPrimaryCommandBuffer* }
%class.SkSTArray.523 = type { %class.SkAlignedSTStorage.524, %class.SkTArray.435 }
%class.SkAlignedSTStorage.524 = type { [32 x i8] }
%class.SkTArray.435 = type { %"class.std::__1::unique_ptr.436"*, i64 }
%class.GrVkPrimaryCommandBuffer = type { %class.GrVkCommandBuffer.base, %class.SkTArray.435, %struct.VkFence_T*, %class.SkTArray.442 }
%class.SkTArray.442 = type { %class.sk_sp.192*, i64 }
%class.SkSTArray.443 = type { %class.SkAlignedSTStorage.444, %class.SkTArray.445 }
%class.SkAlignedSTStorage.444 = type { [8 x i8] }
%class.SkTArray.445 = type { %"class.GrVkSemaphore::Resource"**, i64 }
%"class.GrVkSemaphore::Resource" = type <{ %class.GrVkManagedResource, %struct.VkSemaphore_T*, i8, i8, i8, [5 x i8] }>
%class.SkTArray.446 = type { %"class.std::__1::unique_ptr.447"*, i64 }
%"class.std::__1::unique_ptr.447" = type { %"class.std::__1::__compressed_pair.448" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"class.SkDrawable::GpuDrawHandler"* }
%"class.SkDrawable::GpuDrawHandler" = type { i32 (...)** }
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%"class.std::__1::unique_ptr.453" = type { %"class.std::__1::__compressed_pair.454" }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.455" }
%"struct.std::__1::__compressed_pair_elem.455" = type { %class.GrVkOpsRenderPass* }
%class.sk_sp.555 = type { %class.GrVkFramebuffer* }
%class.GrVkCommandBuffer = type <{ i32 (...)**, %class.SkSTArray.415, %class.SkSTArray.419, %class.SkSTArray.422, %class.SkSTArray.425, i8, i8, [6 x i8], %class.GrVkRenderPass*, %struct.VkCommandBuffer_T*, [2 x %struct.VkBuffer_T*], %struct.VkBuffer_T*, %struct.VkViewport, %struct.VkRect2D, [4 x float], %class.SkSTArray.429, %class.SkSTArray.432, i8, [3 x i8], i32, i32, i8, [3 x i8] }>
%"struct.GrOpsRenderPass::LoadAndStoreInfo" = type { i32, i32, %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [4 x float] }
%"struct.GrOpsRenderPass::StencilLoadAndStoreInfo" = type { i32, i32 }
%class.SkTArray.556 = type { %class.GrSurfaceProxy**, i64 }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.557, %class.sk_sp.558, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.563" }
%class.SkNVRefCnt.557 = type { %"struct.std::__1::atomic" }
%class.sk_sp.558 = type { %class.GrSurface* }
%class.GrBackendFormat = type { i32, i8, %union.anon.559, i32, [4 x i8] }
%union.anon.559 = type { %struct.anon.560 }
%struct.anon.560 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.558, i32, i8, [3 x i8] }>
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.563" = type { %"struct.std::__1::__atomic_base.564" }
%"struct.std::__1::__atomic_base.564" = type { %"struct.std::__1::__atomic_base.565" }
%"struct.std::__1::__atomic_base.565" = type { %"struct.std::__1::__cxx_atomic_impl.566" }
%"struct.std::__1::__cxx_atomic_impl.566" = type { %"struct.std::__1::__cxx_atomic_base_impl.567" }
%"struct.std::__1::__cxx_atomic_base_impl.567" = type { i64 }
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%class.GrVkRenderTarget = type { %class.GrRenderTarget.base, %class.sk_sp.459, %class.sk_sp.459, %class.sk_sp.459, [32 x %class.sk_sp.555], %class.GrVkDescriptorSet*, %class.sk_sp.195, %class.GrSurface }
%class.GrRenderTarget.base = type <{ i32 (...)**, %class.sk_sp, %class.sk_sp, i32 }>
%class.GrOpFlushState = type { %class.GrDeferredUploadTarget, %"class.GrMeshDrawOp::Target", %class.SkArenaAllocWithReset, %class.GrVertexBufferAllocPool, %class.GrIndexBufferAllocPool, %class.GrDrawIndirectBufferAllocPool, %class.SkArenaAllocList, %class.SkArenaAllocList.589, %class.SkArenaAllocList.590, %class.GrDeferredUploadToken, %"struct.GrOpFlushState::OpArgs"*, %class.SkTArray.556*, %class.GrGpu*, %class.GrResourceProvider*, %class.GrTokenTracker*, %class.GrOpsRenderPass*, %"class.SkArenaAllocList<GrOpFlushState::Draw>::Iter", %"class.SkArenaAllocList<GrOpFlushState::InlineUpload>::Iter" }
%class.GrDeferredUploadTarget = type { i32 (...)** }
%"class.GrMeshDrawOp::Target" = type { i32 (...)** }
%class.SkArenaAllocWithReset = type { %class.SkArenaAlloc.base, i8*, i32, i32 }
%class.SkArenaAlloc.base = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes }>
%class.GrVertexBufferAllocPool = type { %class.GrBufferAllocPool }
%class.GrBufferAllocPool = type { i32 (...)**, i64, %class.SkTArray.578, %class.sk_sp.580, %class.sk_sp.584, %class.GrGpu*, i32, i8* }
%class.SkTArray.578 = type { %"struct.GrBufferAllocPool::BufferBlock"*, i64 }
%"struct.GrBufferAllocPool::BufferBlock" = type { i64, %class.sk_sp.579 }
%class.sk_sp.579 = type { %class.GrBuffer* }
%class.sk_sp.580 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef, [4 x i8], %"class.std::__1::unique_ptr.581", i32, [4 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%"class.std::__1::unique_ptr.581" = type { %"class.std::__1::__compressed_pair.582" }
%"class.std::__1::__compressed_pair.582" = type { %"struct.std::__1::__compressed_pair_elem.583" }
%"struct.std::__1::__compressed_pair_elem.583" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.584, i8, [7 x i8] }>
%class.sk_sp.584 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.585, i8*, i64 }
%class.GrNonAtomicRef.585 = type { i32 }
%class.GrIndexBufferAllocPool = type { %class.GrBufferAllocPool }
%class.GrDrawIndirectBufferAllocPool = type { %class.GrBufferAllocPool }
%class.SkArenaAllocList = type { %"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node"*, %"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node"* }
%"struct.SkArenaAllocList<std::__1::function<void (std::__1::function<bool (GrTextureProxy *, SkIRect, GrColorType, const void *, unsigned long)> &)> >::Node" = type opaque
%class.SkArenaAllocList.589 = type { %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"*, %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"* }
%"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node" = type opaque
%class.SkArenaAllocList.590 = type { %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"*, %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"* }
%"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node" = type opaque
%class.GrDeferredUploadToken = type { i64 }
%"struct.GrOpFlushState::OpArgs" = type { %class.GrOp*, %class.GrSurfaceProxyView*, %class.GrRenderTargetProxy*, i8, %class.GrAppliedClip*, %"class.GrXferProcessor::DstProxyView", i32, i32 }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr.591", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.std::__1::unique_ptr.591" = type { %"class.std::__1::__compressed_pair.592" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %class.GrOp* }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.597, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.597 = type { %class.GrSurfaceProxy* }
%class.GrRenderTargetProxy = type <{ i32 (...)**, i8, i8, i8, i8, %struct.SkIRect, [4 x i8], %class.sk_sp.598, [4 x i8], [4 x i8], %class.GrSurfaceProxy }>
%class.sk_sp.598 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.599, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.599 = type { %"struct.std::__1::atomic" }
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr.483" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.600 }
%union.anon.600 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.601, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.601 = type { i32 }
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%struct.SkIPoint = type { i32, i32 }
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%"class.SkArenaAllocList<GrOpFlushState::Draw>::Iter" = type { %"struct.SkArenaAllocList<GrOpFlushState::Draw>::Node"* }
%"class.SkArenaAllocList<GrOpFlushState::InlineUpload>::Iter" = type { %"struct.SkArenaAllocList<GrOpFlushState::InlineUpload>::Node"* }
%"class.std::__1::function.602" = type { %"class.std::__1::__function::__policy_func.605" }
%"class.std::__1::__function::__policy_func.605" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.606", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.606" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.std::__1::function.607"*)* }
%"class.std::__1::function.607" = type opaque
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.608, %class.SkAutoSTArray, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.608 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.609, i8, i8, [2 x i8] }>
%class.GrNonAtomicRef.609 = type { i32 }
%class.SkAutoSTArray = type { i32, %"class.std::__1::unique_ptr.610"*, [24 x i8] }
%"class.std::__1::unique_ptr.610" = type { %"class.std::__1::__compressed_pair.611" }
%"class.std::__1::__compressed_pair.611" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"struct.std::__1::__compressed_pair_elem.612" = type { %class.GrFragmentProcessor* }
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.616, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.616 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%struct.GrVkDrawableInfo = type { %struct.VkCommandBuffer_T*, i32, %struct.VkRenderPass_T*, i32, %struct.VkRect2D*, %struct.VkImage_T* }
%class.GrBackendDrawableInfo = type { i8, i32, %struct.GrVkDrawableInfo }

$_ZN15GrOpsRenderPass7onBeginEv = comdat any

$_ZN17GrVkOpsRenderPass6onDrawEii = comdat any

$_ZN17GrVkOpsRenderPass13onDrawIndexedEiitti = comdat any

$_ZN15GrOpsRenderPassD2Ev = comdat any

$_ZN15GrOpsRenderPassD0Ev = comdat any

$_ZN15GrOpsRenderPass5onEndEv = comdat any

$_ZN15GrOpsRenderPass14onDrawIndirectEPK8GrBuffermi = comdat any

$_ZN15GrOpsRenderPass21onDrawIndexedIndirectEPK8GrBuffermi = comdat any

$_ZN15GrOpsRenderPass17onExecuteDrawableENSt3__110unique_ptrIN10SkDrawable14GpuDrawHandlerENS0_14default_deleteIS3_EEEE = comdat any

$_ZTV15GrOpsRenderPass = comdat any

@.str = private unnamed_addr constant [56 x i8] c"../../third_party/skia/src/gpu/vk/GrVkOpsRenderPass.cpp\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"Invalid LoadOp\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"Invalid StoreOp\00", align 1
@_ZTV17GrVkOpsRenderPass = hidden unnamed_addr constant { [21 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrVkOpsRenderPass*)* @_ZN17GrVkOpsRenderPassD2Ev to i8*), i8* bitcast (void (%class.GrVkOpsRenderPass*)* @_ZN17GrVkOpsRenderPassD0Ev to i8*), i8* bitcast (void (%class.GrVkOpsRenderPass*, %class.GrOpFlushState*, %"class.std::__1::function.602"*)* @_ZN17GrVkOpsRenderPass12inlineUploadEP14GrOpFlushStateRNSt3__18functionIFvRNS3_IFbP14GrTextureProxy7SkIRect11GrColorTypePKvmEEEEEE to i8*), i8* bitcast (%class.GrGpu* (%class.GrVkOpsRenderPass*)* @_ZN17GrVkOpsRenderPass3gpuEv to i8*), i8* bitcast (void (%class.GrOpsRenderPass*)* @_ZN15GrOpsRenderPass7onBeginEv to i8*), i8* bitcast (void (%class.GrVkOpsRenderPass*)* @_ZN17GrVkOpsRenderPass5onEndEv to i8*), i8* bitcast (i1 (%class.GrVkOpsRenderPass*, %class.GrProgramInfo*, %struct.SkRect*)* @_ZN17GrVkOpsRenderPass14onBindPipelineERK13GrProgramInfoRK6SkRect to i8*), i8* bitcast (void (%class.GrVkOpsRenderPass*, %struct.SkIRect*)* @_ZN17GrVkOpsRenderPass16onSetScissorRectERK7SkIRect to i8*), i8* bitcast (i1 (%class.GrVkOpsRenderPass*, %class.GrGeometryProcessor*, %class.GrSurfaceProxy**, %class.GrPipeline*)* @_ZN17GrVkOpsRenderPass14onBindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipeline to i8*), i8* bitcast (void (%class.GrVkOpsRenderPass*, %class.sk_sp.194*, %class.sk_sp.194*, %class.sk_sp.194*, i1)* @_ZN17GrVkOpsRenderPass13onBindBuffersE5sk_spIK8GrBufferES3_S3_18GrPrimitiveRestart to i8*), i8* bitcast (void (%class.GrVkOpsRenderPass*, i32, i32)* @_ZN17GrVkOpsRenderPass6onDrawEii to i8*), i8* bitcast (void (%class.GrVkOpsRenderPass*, i32, i32, i16, i16, i32)* @_ZN17GrVkOpsRenderPass13onDrawIndexedEiitti to i8*), i8* bitcast (void (%class.GrVkOpsRenderPass*, i32, i32, i32, i32)* @_ZN17GrVkOpsRenderPass15onDrawInstancedEiiii to i8*), i8* bitcast (void (%class.GrVkOpsRenderPass*, i32, i32, i32, i32, i32)* @_ZN17GrVkOpsRenderPass22onDrawIndexedInstancedEiiiii to i8*), i8* bitcast (void (%class.GrVkOpsRenderPass*, %class.GrBuffer*, i64, i32)* @_ZN17GrVkOpsRenderPass14onDrawIndirectEPK8GrBuffermi to i8*), i8* bitcast (void (%class.GrVkOpsRenderPass*, %class.GrBuffer*, i64, i32)* @_ZN17GrVkOpsRenderPass21onDrawIndexedIndirectEPK8GrBuffermi to i8*), i8* bitcast (void (%class.GrVkOpsRenderPass*, %class.GrScissorState*, <2 x float>, <2 x float>)* @_ZN17GrVkOpsRenderPass7onClearERK14GrScissorStateNSt3__15arrayIfLm4EEE to i8*), i8* bitcast (void (%class.GrVkOpsRenderPass*, %class.GrScissorState*, i1)* @_ZN17GrVkOpsRenderPass18onClearStencilClipERK14GrScissorStateb to i8*), i8* bitcast (void (%class.GrVkOpsRenderPass*, %"class.SkDrawable::GpuDrawHandler"*)* @_ZN17GrVkOpsRenderPass17onExecuteDrawableENSt3__110unique_ptrIN10SkDrawable14GpuDrawHandlerENS0_14default_deleteIS3_EEEE to i8*)] }, align 8
@_ZTV15GrOpsRenderPass = linkonce_odr hidden unnamed_addr constant { [21 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrOpsRenderPass*)* @_ZN15GrOpsRenderPassD2Ev to i8*), i8* bitcast (void (%class.GrOpsRenderPass*)* @_ZN15GrOpsRenderPassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrOpsRenderPass*)* @_ZN15GrOpsRenderPass7onBeginEv to i8*), i8* bitcast (void (%class.GrOpsRenderPass*)* @_ZN15GrOpsRenderPass5onEndEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrOpsRenderPass*, %class.GrBuffer*, i64, i32)* @_ZN15GrOpsRenderPass14onDrawIndirectEPK8GrBuffermi to i8*), i8* bitcast (void (%class.GrOpsRenderPass*, %class.GrBuffer*, i64, i32)* @_ZN15GrOpsRenderPass21onDrawIndexedIndirectEPK8GrBuffermi to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrOpsRenderPass*, %"class.SkDrawable::GpuDrawHandler"*)* @_ZN15GrOpsRenderPass17onExecuteDrawableENSt3__110unique_ptrIN10SkDrawable14GpuDrawHandlerENS0_14default_deleteIS3_EEEE to i8*)] }, comdat, align 8
@.str.3 = private unnamed_addr constant [49 x i8] c"../../third_party/skia/src/gpu/GrOpsRenderPass.h\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"Not implemented.\00", align 1

@_ZN17GrVkOpsRenderPassC1EP7GrVkGpu = hidden unnamed_addr alias void (%class.GrVkOpsRenderPass*, %class.GrVkGpu*), void (%class.GrVkOpsRenderPass*, %class.GrVkGpu*)* @_ZN17GrVkOpsRenderPassC2EP7GrVkGpu
@_ZN17GrVkOpsRenderPassD1Ev = hidden unnamed_addr alias void (%class.GrVkOpsRenderPass*), void (%class.GrVkOpsRenderPass*)* @_ZN17GrVkOpsRenderPassD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z21get_vk_load_store_ops8GrLoadOp9GrStoreOpP18VkAttachmentLoadOpP19VkAttachmentStoreOp(i32, i32, i32* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %5 = icmp ult i32 %0, 3
  br i1 %5, label %7, label %6

6:                                                ; preds = %4
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 47, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #10
  unreachable

7:                                                ; preds = %4
  store i32 %0, i32* %2, align 4
  switch i32 %1, label %9 [
    i32 0, label %10
    i32 1, label %8
  ]

8:                                                ; preds = %7
  br label %10

9:                                                ; preds = %7
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 59, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0)) #10
  unreachable

10:                                               ; preds = %7, %8
  %11 = phi i32 [ 1, %8 ], [ %1, %7 ]
  store i32 %11, i32* %3, align 4
  ret void
}

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrVkOpsRenderPassC2EP7GrVkGpu(%class.GrVkOpsRenderPass* nocapture, %class.GrVkGpu*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 0, i32 1
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 0, i32 2
  %6 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 0, i32 6
  %7 = bitcast %class.GrRenderTarget** %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false) #11
  store i32 1, i32* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV17GrVkOpsRenderPass, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %8 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 1, i32 0
  %9 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 5
  store %class.GrVkPipelineState* null, %class.GrVkPipelineState** %9, align 8
  %10 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 6
  %11 = bitcast %class.GrVkFramebuffer** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false)
  store i8 1, i8* %10, align 8
  %12 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 8
  %13 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %14 = bitcast i32* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %14, i8 0, i64 9, i1 false)
  store %class.GrVkGpu* %1, %class.GrVkGpu** %13, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrVkOpsRenderPass20setAttachmentLayoutsEN14GrVkRenderPass15LoadFromResolveE(%class.GrVkOpsRenderPass* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 3
  %4 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %3, align 8
  %5 = getelementptr inbounds %class.GrVkRenderPass, %class.GrVkRenderPass* %4, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = and i32 %6, 4
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 8
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 1
  %14 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 1, i32 0
  %15 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %14, align 8
  %16 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %15, i64 0, i32 2, i32 0
  %17 = load %class.GrVkAttachment*, %class.GrVkAttachment** %16, align 8
  %18 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %17, i64 0, i32 1
  %19 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %20 = load %class.GrVkGpu*, %class.GrVkGpu** %19, align 8
  br i1 %13, label %21, label %22

21:                                               ; preds = %2
  tail call void @_ZN9GrVkImage27setImageLayoutAndQueueIndexEPK7GrVkGpu13VkImageLayoutjjbj(%class.GrVkImage* %18, %class.GrVkGpu* %20, i32 1, i32 400, i32 1152, i1 zeroext false, i32 -1) #11
  br label %23

22:                                               ; preds = %2
  tail call void @_ZN9GrVkImage27setImageLayoutAndQueueIndexEPK7GrVkGpu13VkImageLayoutjjbj(%class.GrVkImage* %18, %class.GrVkGpu* %20, i32 2, i32 384, i32 1024, i1 zeroext false, i32 -1) #11
  br label %23

23:                                               ; preds = %22, %21
  br i1 %10, label %33, label %24

24:                                               ; preds = %23
  %25 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %14, align 8
  %26 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %25, i64 0, i32 3, i32 0
  %27 = load %class.GrVkAttachment*, %class.GrVkAttachment** %26, align 8
  %28 = icmp eq i32 %1, 1
  %29 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %27, i64 0, i32 1
  %30 = load %class.GrVkGpu*, %class.GrVkGpu** %19, align 8
  br i1 %28, label %31, label %32

31:                                               ; preds = %24
  tail call void @_ZN9GrVkImage27setImageLayoutAndQueueIndexEPK7GrVkGpu13VkImageLayoutjjbj(%class.GrVkImage* %29, %class.GrVkGpu* %30, i32 5, i32 16, i32 128, i1 zeroext false, i32 -1) #11
  br label %33

32:                                               ; preds = %24
  tail call void @_ZN9GrVkImage27setImageLayoutAndQueueIndexEPK7GrVkGpu13VkImageLayoutjjbj(%class.GrVkImage* %29, %class.GrVkGpu* %30, i32 2, i32 384, i32 1024, i1 zeroext false, i32 -1) #11
  br label %33

33:                                               ; preds = %23, %31, %32
  br i1 %8, label %40, label %34

34:                                               ; preds = %33
  %35 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %14, align 8
  %36 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %35, i64 0, i32 4, i32 0
  %37 = load %class.GrVkAttachment*, %class.GrVkAttachment** %36, align 8
  %38 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %37, i64 0, i32 1
  %39 = load %class.GrVkGpu*, %class.GrVkGpu** %19, align 8
  tail call void @_ZN9GrVkImage27setImageLayoutAndQueueIndexEPK7GrVkGpu13VkImageLayoutjjbj(%class.GrVkImage* %38, %class.GrVkGpu* %39, i32 3, i32 1536, i32 256, i1 zeroext false, i32 -1) #11
  br label %40

40:                                               ; preds = %33, %34
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_Z28adjust_bounds_to_granularityP7SkIRectRKS_RK10VkExtent2Dii(%struct.SkIRect* nocapture, %struct.SkIRect* nocapture readonly dereferenceable(16), %struct.VkExtent2D* nocapture readonly dereferenceable(8), i32, i32) local_unnamed_addr #3 {
  %6 = getelementptr inbounds %struct.VkExtent2D, %struct.VkExtent2D* %2, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp ult i32 %7, 2
  br i1 %8, label %28, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = urem i32 %11, %7
  %13 = icmp eq i32 %12, 0
  %14 = sub i32 %7, %12
  %15 = select i1 %13, i32 0, i32 %14
  %16 = add nsw i32 %15, %11
  %17 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 2
  store i32 %16, i32* %17, align 4
  %18 = icmp sgt i32 %16, %3
  br i1 %18, label %19, label %21

19:                                               ; preds = %9
  store i32 %3, i32* %17, align 4
  %20 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 0
  store i32 0, i32* %20, align 4
  br label %35

21:                                               ; preds = %9
  %22 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = load i32, i32* %6, align 4
  %25 = urem i32 %23, %24
  %26 = sub i32 %23, %25
  %27 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 0
  store i32 %26, i32* %27, align 4
  br label %35

28:                                               ; preds = %5
  %29 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 0
  store i32 %30, i32* %31, align 4
  %32 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 2
  store i32 %33, i32* %34, align 4
  br label %35

35:                                               ; preds = %19, %21, %28
  %36 = getelementptr inbounds %struct.VkExtent2D, %struct.VkExtent2D* %2, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = icmp ult i32 %37, 2
  br i1 %38, label %58, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %41 = load i32, i32* %40, align 4
  %42 = urem i32 %41, %37
  %43 = icmp eq i32 %42, 0
  %44 = sub i32 %37, %42
  %45 = select i1 %43, i32 0, i32 %44
  %46 = add nsw i32 %45, %41
  %47 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 3
  store i32 %46, i32* %47, align 4
  %48 = icmp sgt i32 %46, %4
  br i1 %48, label %49, label %51

49:                                               ; preds = %39
  store i32 %4, i32* %47, align 4
  %50 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 1
  store i32 0, i32* %50, align 4
  br label %65

51:                                               ; preds = %39
  %52 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = load i32, i32* %36, align 4
  %55 = urem i32 %53, %54
  %56 = sub i32 %53, %55
  %57 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 1
  store i32 %56, i32* %57, align 4
  br label %65

58:                                               ; preds = %35
  %59 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 1
  store i32 %60, i32* %61, align 4
  %62 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %0, i64 0, i32 3
  store i32 %63, i32* %64, align 4
  br label %65

65:                                               ; preds = %49, %51, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17GrVkOpsRenderPass15beginRenderPassERK12VkClearValueN14GrVkRenderPass15LoadFromResolveE(%class.GrVkOpsRenderPass* nocapture, %union.VkClearValue* dereferenceable(16), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.SkIRect, align 8
  %5 = alloca %class.sk_sp.555, align 8
  tail call void @_ZN17GrVkOpsRenderPass20setAttachmentLayoutsEN14GrVkRenderPass15LoadFromResolveE(%class.GrVkOpsRenderPass* %0, i32 %2)
  %6 = icmp eq i32 %2, 1
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %class.GrVkSecondaryCommandBuffer*, %class.GrVkSecondaryCommandBuffer** %8, align 8
  %10 = icmp ne %class.GrVkSecondaryCommandBuffer* %9, null
  br label %11

11:                                               ; preds = %3, %7
  %12 = phi i1 [ false, %3 ], [ %10, %7 ]
  %13 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 3
  %14 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %13, align 8
  %15 = getelementptr inbounds %class.GrVkRenderPass, %class.GrVkRenderPass* %14, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %27, label %19

19:                                               ; preds = %11
  %20 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %21 = load %class.GrVkGpu*, %class.GrVkGpu** %20, align 8
  %22 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %21, i64 0, i32 3, i32 0
  %23 = load %class.GrVkCaps*, %class.GrVkCaps** %22, align 8
  %24 = getelementptr inbounds %class.GrVkCaps, %class.GrVkCaps* %23, i64 0, i32 29
  %25 = load i8, i8* %24, align 1, !range !2
  %26 = icmp ne i8 %25, 0
  br label %27

27:                                               ; preds = %11, %19
  %28 = phi i1 [ false, %11 ], [ %26, %19 ]
  %29 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 1, i32 0
  %30 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %29, align 8
  %31 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %30, i64 0, i32 2, i32 0
  %32 = load %class.GrVkAttachment*, %class.GrVkAttachment** %31, align 8
  %33 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %32, i64 0, i32 0, i32 0, i32 1
  %34 = bitcast %struct.SkISize* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = trunc i64 %35 to i32
  %37 = lshr i64 %35, 32
  %38 = trunc i64 %37 to i32
  %39 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  br i1 %28, label %50, label %41

41:                                               ; preds = %27
  %42 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 7
  %43 = bitcast %struct.SkIRect* %42 to i64*
  %44 = load i64, i64* %43, align 4
  %45 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 7, i32 2
  %46 = bitcast i32* %45 to i64*
  %47 = load i64, i64* %46, align 4
  %48 = lshr i64 %47, 32
  %49 = trunc i64 %48 to i32
  br label %50

50:                                               ; preds = %27, %41
  %51 = phi i32 [ %38, %27 ], [ %49, %41 ]
  %52 = phi i64 [ %35, %27 ], [ %47, %41 ]
  %53 = phi i64 [ 0, %27 ], [ %44, %41 ]
  %54 = lshr i64 %53, 32
  %55 = trunc i64 %54 to i32
  %56 = sub i64 %52, %53
  %57 = sub i32 %51, %55
  %58 = icmp eq i32 %40, 1
  %59 = sub i32 %38, %55
  %60 = sub i32 %59, %57
  %61 = select i1 %58, i32 %60, i32 %55
  %62 = zext i32 %61 to i64
  %63 = shl nuw i64 %62, 32
  %64 = shl i64 %53, 32
  %65 = ashr exact i64 %64, 32
  %66 = shl i64 %56, 32
  %67 = ashr exact i64 %66, 32
  %68 = add nsw i64 %67, %65
  %69 = icmp slt i64 %68, 2147483647
  %70 = select i1 %69, i64 %68, i64 2147483647
  %71 = icmp sgt i64 %70, -2147483647
  %72 = select i1 %71, i64 %70, i64 -2147483647
  %73 = sext i32 %61 to i64
  %74 = sext i32 %57 to i64
  %75 = add nsw i64 %73, %74
  %76 = icmp slt i64 %75, 2147483647
  %77 = select i1 %76, i64 %75, i64 2147483647
  %78 = icmp sgt i64 %77, -2147483647
  %79 = select i1 %78, i64 %77, i64 -2147483647
  %80 = shl nsw i64 %79, 32
  %81 = and i64 %72, 4294967295
  %82 = or i64 %80, %81
  %83 = trunc i64 %53 to i32
  %84 = bitcast %struct.SkIRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84) #11
  %85 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 0
  %86 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 1
  %87 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 2
  %88 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 3
  %89 = getelementptr inbounds %class.GrVkRenderPass, %class.GrVkRenderPass* %14, i64 0, i32 6, i32 0
  %90 = bitcast %struct.SkIRect* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 16, i1 false)
  %91 = load i32, i32* %89, align 4
  %92 = icmp ult i32 %91, 2
  br i1 %92, label %93, label %97

93:                                               ; preds = %50
  %94 = getelementptr inbounds %class.GrVkRenderPass, %class.GrVkRenderPass* %14, i64 0, i32 6, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = icmp ult i32 %95, 2
  br i1 %96, label %129, label %109

97:                                               ; preds = %50
  %98 = trunc i64 %72 to i32
  %99 = urem i32 %98, %91
  %100 = icmp eq i32 %99, 0
  %101 = sub i32 %91, %99
  %102 = select i1 %100, i32 0, i32 %101
  %103 = add nsw i32 %102, %98
  store i32 %103, i32* %87, align 8
  %104 = icmp sgt i32 %103, %36
  br i1 %104, label %105, label %106

105:                                              ; preds = %97
  store i32 %36, i32* %87, align 8
  store i32 0, i32* %85, align 8
  br label %111

106:                                              ; preds = %97
  %107 = urem i32 %83, %91
  %108 = sub i32 %83, %107
  store i32 %108, i32* %85, align 8
  br label %111

109:                                              ; preds = %93
  store i32 %83, i32* %85, align 8
  %110 = trunc i64 %72 to i32
  store i32 %110, i32* %87, align 8
  br label %111

111:                                              ; preds = %109, %106, %105
  %112 = getelementptr inbounds %class.GrVkRenderPass, %class.GrVkRenderPass* %14, i64 0, i32 6, i32 1
  %113 = load i32, i32* %112, align 4
  %114 = icmp ult i32 %113, 2
  br i1 %114, label %127, label %115

115:                                              ; preds = %111
  %116 = trunc i64 %79 to i32
  %117 = urem i32 %116, %113
  %118 = icmp eq i32 %117, 0
  %119 = sub i32 %113, %117
  %120 = select i1 %118, i32 0, i32 %119
  %121 = add nsw i32 %120, %116
  store i32 %121, i32* %88, align 4
  %122 = icmp sgt i32 %121, %38
  br i1 %122, label %123, label %124

123:                                              ; preds = %115
  store i32 %38, i32* %88, align 4
  store i32 0, i32* %86, align 4
  br label %134

124:                                              ; preds = %115
  %125 = urem i32 %61, %113
  %126 = sub i32 %61, %125
  store i32 %126, i32* %86, align 4
  br label %134

127:                                              ; preds = %111
  store i32 %61, i32* %86, align 4
  %128 = trunc i64 %79 to i32
  store i32 %128, i32* %88, align 4
  br label %134

129:                                              ; preds = %93
  %130 = bitcast %struct.SkIRect* %4 to i64*
  %131 = and i64 %53, 4294967295
  %132 = or i64 %63, %131
  store i64 %132, i64* %130, align 8
  %133 = bitcast i32* %87 to i64*
  store i64 %82, i64* %133, align 8
  br label %134

134:                                              ; preds = %127, %124, %123, %129
  %135 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %136 = load %class.GrVkGpu*, %class.GrVkGpu** %135, align 8
  %137 = getelementptr inbounds %class.sk_sp.555, %class.sk_sp.555* %5, i64 0, i32 0
  %138 = icmp eq %class.GrVkFramebuffer* %30, null
  br i1 %138, label %142, label %139

139:                                              ; preds = %134
  %140 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = atomicrmw add i32* %140, i32 1 monotonic
  br label %142

142:                                              ; preds = %134, %139
  store %class.GrVkFramebuffer* %30, %class.GrVkFramebuffer** %137, align 8
  %143 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 0, i32 2
  %144 = load %class.GrRenderTarget*, %class.GrRenderTarget** %143, align 8
  %145 = icmp eq %class.GrRenderTarget* %144, null
  br i1 %145, label %155, label %146

146:                                              ; preds = %142
  %147 = bitcast %class.GrRenderTarget* %144 to i8**
  %148 = load i8*, i8** %147, align 8
  %149 = getelementptr i8, i8* %148, i64 -24
  %150 = bitcast i8* %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %class.GrRenderTarget* %144 to i8*
  %153 = getelementptr inbounds i8, i8* %152, i64 %151
  %154 = bitcast i8* %153 to %class.GrSurface*
  br label %155

155:                                              ; preds = %146, %142
  %156 = phi %class.GrSurface* [ %154, %146 ], [ null, %142 ]
  %157 = call zeroext i1 @_ZN7GrVkGpu15beginRenderPassEPK14GrVkRenderPass5sk_spIK15GrVkFramebufferEPK12VkClearValuePK9GrSurfaceRK7SkIRectb(%class.GrVkGpu* %136, %class.GrVkRenderPass* %14, %class.sk_sp.555* nonnull %5, %union.VkClearValue* %1, %class.GrSurface* %156, %struct.SkIRect* nonnull dereferenceable(16) %4, i1 zeroext %12) #11
  %158 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %137, align 8
  %159 = icmp eq %class.GrVkFramebuffer* %158, null
  br i1 %159, label %173, label %160

160:                                              ; preds = %155
  %161 = bitcast %class.GrVkFramebuffer* %158 to %class.GrManagedResource*
  %162 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %158, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = atomicrmw add i32* %162, i32 -1 acq_rel
  %164 = icmp eq i32 %163, 1
  br i1 %164, label %165, label %173

165:                                              ; preds = %160
  %166 = bitcast %class.GrVkFramebuffer* %158 to void (%class.GrManagedResource*)***
  %167 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %166, align 8
  %168 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %167, i64 4
  %169 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %168, align 8
  call void %169(%class.GrManagedResource* nonnull %161) #11
  %170 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %166, align 8
  %171 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %170, i64 1
  %172 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %171, align 8
  call void %172(%class.GrManagedResource* nonnull %161) #11
  br label %173

173:                                              ; preds = %155, %160, %165
  br i1 %157, label %181, label %174

174:                                              ; preds = %173
  %175 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %176 = load %class.GrVkSecondaryCommandBuffer*, %class.GrVkSecondaryCommandBuffer** %175, align 8
  %177 = icmp eq %class.GrVkSecondaryCommandBuffer* %176, null
  br i1 %177, label %180, label %178

178:                                              ; preds = %174
  %179 = load %class.GrVkGpu*, %class.GrVkGpu** %135, align 8
  call void @_ZN26GrVkSecondaryCommandBuffer3endEP7GrVkGpu(%class.GrVkSecondaryCommandBuffer* nonnull %176, %class.GrVkGpu* %179) #11
  br label %180

180:                                              ; preds = %174, %178
  store %class.GrVkRenderPass* null, %class.GrVkRenderPass** %13, align 8
  br label %214

181:                                              ; preds = %173
  br i1 %6, label %182, label %214

182:                                              ; preds = %181
  %183 = load %class.GrVkGpu*, %class.GrVkGpu** %135, align 8
  %184 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %185 = load %class.GrVkSecondaryCommandBuffer*, %class.GrVkSecondaryCommandBuffer** %184, align 8
  %186 = icmp eq %class.GrVkSecondaryCommandBuffer* %185, null
  br i1 %186, label %189, label %187

187:                                              ; preds = %182
  %188 = bitcast %class.GrVkSecondaryCommandBuffer* %185 to %class.GrVkCommandBuffer*
  br label %193

189:                                              ; preds = %182
  %190 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %183, i64 0, i32 13
  %191 = bitcast %class.GrVkPrimaryCommandBuffer** %190 to %class.GrVkCommandBuffer**
  %192 = load %class.GrVkCommandBuffer*, %class.GrVkCommandBuffer** %191, align 8
  br label %193

193:                                              ; preds = %187, %189
  %194 = phi %class.GrVkCommandBuffer* [ %188, %187 ], [ %192, %189 ]
  %195 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %13, align 8
  %196 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %29, align 8
  %197 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %196, i64 0, i32 2, i32 0
  %198 = bitcast %class.GrVkAttachment** %197 to %class.GrAttachment**
  %199 = load %class.GrAttachment*, %class.GrAttachment** %198, align 8
  %200 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %196, i64 0, i32 3, i32 0
  %201 = load %class.GrVkAttachment*, %class.GrVkAttachment** %200, align 8
  %202 = call zeroext i1 @_ZN7GrVkGpu19loadMSAAFromResolveEP17GrVkCommandBufferRK14GrVkRenderPassP12GrAttachmentP14GrVkAttachmentRK7SkIRect(%class.GrVkGpu* %183, %class.GrVkCommandBuffer* %194, %class.GrVkRenderPass* dereferenceable(120) %195, %class.GrAttachment* %199, %class.GrVkAttachment* %201, %struct.SkIRect* nonnull dereferenceable(16) %4) #11
  %203 = load %class.GrVkGpu*, %class.GrVkGpu** %135, align 8
  %204 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %203, i64 0, i32 13
  %205 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %204, align 8
  %206 = load %class.GrVkSecondaryCommandBuffer*, %class.GrVkSecondaryCommandBuffer** %184, align 8
  %207 = icmp ne %class.GrVkSecondaryCommandBuffer* %206, null
  call void @_ZN24GrVkPrimaryCommandBuffer10nexSubpassEP7GrVkGpub(%class.GrVkPrimaryCommandBuffer* %205, %class.GrVkGpu* %203, i1 zeroext %207) #11
  %208 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %29, align 8
  %209 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %208, i64 0, i32 3, i32 0
  %210 = load %class.GrVkAttachment*, %class.GrVkAttachment** %209, align 8
  %211 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %210, i64 0, i32 1, i32 3, i32 0
  %212 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %211, align 8
  %213 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %212, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 2, i32* %213 seq_cst, align 4
  br label %214

214:                                              ; preds = %181, %193, %180
  %215 = phi i1 [ false, %180 ], [ true, %193 ], [ true, %181 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %84) #11
  ret i1 %215
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare zeroext i1 @_ZN7GrVkGpu15beginRenderPassEPK14GrVkRenderPass5sk_spIK15GrVkFramebufferEPK12VkClearValuePK9GrSurfaceRK7SkIRectb(%class.GrVkGpu*, %class.GrVkRenderPass*, %class.sk_sp.555*, %union.VkClearValue*, %class.GrSurface*, %struct.SkIRect* dereferenceable(16), i1 zeroext) local_unnamed_addr #4

declare void @_ZN26GrVkSecondaryCommandBuffer3endEP7GrVkGpu(%class.GrVkSecondaryCommandBuffer*, %class.GrVkGpu*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrVkOpsRenderPass19loadResolveIntoMSAAERK7SkIRect(%class.GrVkOpsRenderPass* nocapture readonly, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %4 = load %class.GrVkGpu*, %class.GrVkGpu** %3, align 8
  %5 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %class.GrVkSecondaryCommandBuffer*, %class.GrVkSecondaryCommandBuffer** %5, align 8
  %7 = icmp eq %class.GrVkSecondaryCommandBuffer* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = bitcast %class.GrVkSecondaryCommandBuffer* %6 to %class.GrVkCommandBuffer*
  br label %14

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %4, i64 0, i32 13
  %12 = bitcast %class.GrVkPrimaryCommandBuffer** %11 to %class.GrVkCommandBuffer**
  %13 = load %class.GrVkCommandBuffer*, %class.GrVkCommandBuffer** %12, align 8
  br label %14

14:                                               ; preds = %8, %10
  %15 = phi %class.GrVkCommandBuffer* [ %9, %8 ], [ %13, %10 ]
  %16 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 3
  %17 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %16, align 8
  %18 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 1, i32 0
  %19 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %18, align 8
  %20 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %19, i64 0, i32 2, i32 0
  %21 = bitcast %class.GrVkAttachment** %20 to %class.GrAttachment**
  %22 = load %class.GrAttachment*, %class.GrAttachment** %21, align 8
  %23 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %19, i64 0, i32 3, i32 0
  %24 = load %class.GrVkAttachment*, %class.GrVkAttachment** %23, align 8
  %25 = tail call zeroext i1 @_ZN7GrVkGpu19loadMSAAFromResolveEP17GrVkCommandBufferRK14GrVkRenderPassP12GrAttachmentP14GrVkAttachmentRK7SkIRect(%class.GrVkGpu* %4, %class.GrVkCommandBuffer* %15, %class.GrVkRenderPass* dereferenceable(120) %17, %class.GrAttachment* %22, %class.GrVkAttachment* %24, %struct.SkIRect* dereferenceable(16) %1) #11
  %26 = load %class.GrVkGpu*, %class.GrVkGpu** %3, align 8
  %27 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %26, i64 0, i32 13
  %28 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %27, align 8
  %29 = load %class.GrVkSecondaryCommandBuffer*, %class.GrVkSecondaryCommandBuffer** %5, align 8
  %30 = icmp ne %class.GrVkSecondaryCommandBuffer* %29, null
  tail call void @_ZN24GrVkPrimaryCommandBuffer10nexSubpassEP7GrVkGpub(%class.GrVkPrimaryCommandBuffer* %28, %class.GrVkGpu* %26, i1 zeroext %30) #11
  %31 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %18, align 8
  %32 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %31, i64 0, i32 3, i32 0
  %33 = load %class.GrVkAttachment*, %class.GrVkAttachment** %32, align 8
  %34 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %33, i64 0, i32 1, i32 3, i32 0
  %35 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %34, align 8
  %36 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %35, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 2, i32* %36 seq_cst, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17GrVkOpsRenderPass4initERKN15GrOpsRenderPass16LoadAndStoreInfoES3_RKNS0_23StencilLoadAndStoreInfoE(%class.GrVkOpsRenderPass* nocapture, %"struct.GrOpsRenderPass::LoadAndStoreInfo"* nocapture readonly dereferenceable(24), %"struct.GrOpsRenderPass::LoadAndStoreInfo"* nocapture readonly dereferenceable(24), %"struct.GrOpsRenderPass::StencilLoadAndStoreInfo"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.GrVkRenderPass::LoadStoreOps", align 4
  %6 = alloca %"struct.GrVkRenderPass::LoadStoreOps", align 4
  %7 = alloca %"struct.GrVkRenderPass::LoadStoreOps", align 4
  %8 = alloca %class.GrResourceHandle.474, align 4
  %9 = alloca <4 x i32>, align 16
  %10 = bitcast <4 x i32>* %9 to %union.VkClearValue*
  %11 = getelementptr inbounds %"struct.GrOpsRenderPass::LoadAndStoreInfo", %"struct.GrOpsRenderPass::LoadAndStoreInfo"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.GrOpsRenderPass::LoadAndStoreInfo", %"struct.GrOpsRenderPass::LoadAndStoreInfo"* %1, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp ult i32 %12, 3
  br i1 %15, label %17, label %16

16:                                               ; preds = %4
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 47, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #10
  unreachable

17:                                               ; preds = %4
  switch i32 %14, label %19 [
    i32 0, label %20
    i32 1, label %18
  ]

18:                                               ; preds = %17
  br label %20

19:                                               ; preds = %17
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 59, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0)) #10
  unreachable

20:                                               ; preds = %17, %18
  %21 = phi i32 [ 1, %18 ], [ %14, %17 ]
  %22 = bitcast %"struct.GrVkRenderPass::LoadStoreOps"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  %23 = getelementptr inbounds %"struct.GrVkRenderPass::LoadStoreOps", %"struct.GrVkRenderPass::LoadStoreOps"* %5, i64 0, i32 0
  %24 = getelementptr inbounds %"struct.GrVkRenderPass::LoadStoreOps", %"struct.GrVkRenderPass::LoadStoreOps"* %5, i64 0, i32 1
  store i32 %12, i32* %23, align 4
  store i32 %21, i32* %24, align 4
  %25 = getelementptr inbounds %"struct.GrOpsRenderPass::LoadAndStoreInfo", %"struct.GrOpsRenderPass::LoadAndStoreInfo"* %2, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"struct.GrOpsRenderPass::LoadAndStoreInfo", %"struct.GrOpsRenderPass::LoadAndStoreInfo"* %2, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp ult i32 %26, 3
  br i1 %29, label %31, label %30

30:                                               ; preds = %20
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 47, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #10
  unreachable

31:                                               ; preds = %20
  switch i32 %28, label %33 [
    i32 0, label %34
    i32 1, label %32
  ]

32:                                               ; preds = %31
  br label %34

33:                                               ; preds = %31
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 59, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0)) #10
  unreachable

34:                                               ; preds = %31, %32
  %35 = phi i32 [ 1, %32 ], [ %28, %31 ]
  %36 = bitcast %"struct.GrVkRenderPass::LoadStoreOps"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #11
  %37 = getelementptr inbounds %"struct.GrVkRenderPass::LoadStoreOps", %"struct.GrVkRenderPass::LoadStoreOps"* %6, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.GrVkRenderPass::LoadStoreOps", %"struct.GrVkRenderPass::LoadStoreOps"* %6, i64 0, i32 1
  store i32 %26, i32* %37, align 4
  store i32 %35, i32* %38, align 4
  %39 = getelementptr inbounds %"struct.GrOpsRenderPass::StencilLoadAndStoreInfo", %"struct.GrOpsRenderPass::StencilLoadAndStoreInfo"* %3, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"struct.GrOpsRenderPass::StencilLoadAndStoreInfo", %"struct.GrOpsRenderPass::StencilLoadAndStoreInfo"* %3, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = icmp ult i32 %40, 3
  br i1 %43, label %45, label %44

44:                                               ; preds = %34
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 47, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #10
  unreachable

45:                                               ; preds = %34
  switch i32 %42, label %47 [
    i32 0, label %48
    i32 1, label %46
  ]

46:                                               ; preds = %45
  br label %48

47:                                               ; preds = %45
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 59, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0)) #10
  unreachable

48:                                               ; preds = %45, %46
  %49 = phi i32 [ 1, %46 ], [ %42, %45 ]
  %50 = bitcast %"struct.GrVkRenderPass::LoadStoreOps"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #11
  %51 = getelementptr inbounds %"struct.GrVkRenderPass::LoadStoreOps", %"struct.GrVkRenderPass::LoadStoreOps"* %7, i64 0, i32 0
  %52 = getelementptr inbounds %"struct.GrVkRenderPass::LoadStoreOps", %"struct.GrVkRenderPass::LoadStoreOps"* %7, i64 0, i32 1
  store i32 %40, i32* %51, align 4
  store i32 %49, i32* %52, align 4
  %53 = bitcast %class.GrResourceHandle.474* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %53) #11
  %54 = getelementptr inbounds %class.GrResourceHandle.474, %class.GrResourceHandle.474* %8, i64 0, i32 0
  %55 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 1, i32 0
  %56 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %55, align 8
  %57 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %56, i64 0, i32 6, i32 0
  %58 = load i32, i32* %57, align 8
  store i32 %58, i32* %54, align 4
  %59 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %60 = load %class.GrVkGpu*, %class.GrVkGpu** %59, align 8
  %61 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %60, i64 0, i32 9
  %62 = call %class.GrVkRenderPass* @_ZN20GrVkResourceProvider14findRenderPassERK16GrResourceHandleINS_22CompatibleRPHandleKindEERKN14GrVkRenderPass12LoadStoreOpsES8_S8_(%class.GrVkResourceProvider* %61, %class.GrResourceHandle.474* nonnull dereferenceable(4) %8, %"struct.GrVkRenderPass::LoadStoreOps"* nonnull dereferenceable(8) %5, %"struct.GrVkRenderPass::LoadStoreOps"* nonnull dereferenceable(8) %6, %"struct.GrVkRenderPass::LoadStoreOps"* nonnull dereferenceable(8) %7) #11
  %63 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 3
  store %class.GrVkRenderPass* %62, %class.GrVkRenderPass** %63, align 8
  %64 = icmp eq %class.GrVkRenderPass* %62, null
  br i1 %64, label %104, label %65

65:                                               ; preds = %48
  %66 = load %class.GrVkGpu*, %class.GrVkGpu** %59, align 8
  %67 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %66, i64 0, i32 3, i32 0
  %68 = load %class.GrVkCaps*, %class.GrVkCaps** %67, align 8
  %69 = getelementptr inbounds %class.GrVkCaps, %class.GrVkCaps* %68, i64 0, i32 21
  %70 = load i8, i8* %69, align 1, !range !2
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %96

72:                                               ; preds = %65
  %73 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %66, i64 0, i32 12
  %74 = load %class.GrVkCommandPool*, %class.GrVkCommandPool** %73, align 8
  %75 = call %class.GrVkSecondaryCommandBuffer* @_ZN15GrVkCommandPool34findOrCreateSecondaryCommandBufferEP7GrVkGpu(%class.GrVkCommandPool* %74, %class.GrVkGpu* %66) #11
  %76 = ptrtoint %class.GrVkSecondaryCommandBuffer* %75 to i64
  %77 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 2
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr.436", %"class.std::__1::unique_ptr.436"* %77, i64 0, i32 0, i32 0, i32 0
  %79 = load %class.GrVkSecondaryCommandBuffer*, %class.GrVkSecondaryCommandBuffer** %78, align 8
  %80 = bitcast %"class.std::__1::unique_ptr.436"* %77 to i64*
  store i64 %76, i64* %80, align 8
  %81 = icmp eq %class.GrVkSecondaryCommandBuffer* %79, null
  br i1 %81, label %88, label %82

82:                                               ; preds = %72
  %83 = bitcast %class.GrVkSecondaryCommandBuffer* %79 to void (%class.GrVkSecondaryCommandBuffer*)***
  %84 = load void (%class.GrVkSecondaryCommandBuffer*)**, void (%class.GrVkSecondaryCommandBuffer*)*** %83, align 8
  %85 = getelementptr inbounds void (%class.GrVkSecondaryCommandBuffer*)*, void (%class.GrVkSecondaryCommandBuffer*)** %84, i64 1
  %86 = load void (%class.GrVkSecondaryCommandBuffer*)*, void (%class.GrVkSecondaryCommandBuffer*)** %85, align 8
  call void %86(%class.GrVkSecondaryCommandBuffer* nonnull %79) #11
  %87 = load %class.GrVkSecondaryCommandBuffer*, %class.GrVkSecondaryCommandBuffer** %78, align 8
  br label %88

88:                                               ; preds = %82, %72
  %89 = phi %class.GrVkSecondaryCommandBuffer* [ %87, %82 ], [ %75, %72 ]
  %90 = icmp eq %class.GrVkSecondaryCommandBuffer* %89, null
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  store %class.GrVkRenderPass* null, %class.GrVkRenderPass** %63, align 8
  br label %104

92:                                               ; preds = %88
  %93 = load %class.GrVkGpu*, %class.GrVkGpu** %59, align 8
  %94 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %55, align 8
  %95 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %63, align 8
  call void @_ZN26GrVkSecondaryCommandBuffer5beginEP7GrVkGpuPK15GrVkFramebufferPK14GrVkRenderPass(%class.GrVkSecondaryCommandBuffer* nonnull %89, %class.GrVkGpu* %93, %class.GrVkFramebuffer* %94, %class.GrVkRenderPass* %95) #11
  br label %96

96:                                               ; preds = %65, %92
  %97 = bitcast <4 x i32>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97) #11
  %98 = getelementptr inbounds %"struct.GrOpsRenderPass::LoadAndStoreInfo", %"struct.GrOpsRenderPass::LoadAndStoreInfo"* %1, i64 0, i32 2
  %99 = bitcast %"struct.std::__1::array"* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4
  store <4 x i32> %100, <4 x i32>* %9, align 16
  %101 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 9
  %102 = load i32, i32* %101, align 8
  %103 = call zeroext i1 @_ZN17GrVkOpsRenderPass15beginRenderPassERK12VkClearValueN14GrVkRenderPass15LoadFromResolveE(%class.GrVkOpsRenderPass* %0, %union.VkClearValue* nonnull dereferenceable(16) %10, i32 %102)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #11
  br label %104

104:                                              ; preds = %48, %96, %91
  %105 = phi i1 [ %103, %96 ], [ false, %91 ], [ false, %48 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %53) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #11
  ret i1 %105
}

declare %class.GrVkRenderPass* @_ZN20GrVkResourceProvider14findRenderPassERK16GrResourceHandleINS_22CompatibleRPHandleKindEERKN14GrVkRenderPass12LoadStoreOpsES8_S8_(%class.GrVkResourceProvider*, %class.GrResourceHandle.474* dereferenceable(4), %"struct.GrVkRenderPass::LoadStoreOps"* dereferenceable(8), %"struct.GrVkRenderPass::LoadStoreOps"* dereferenceable(8), %"struct.GrVkRenderPass::LoadStoreOps"* dereferenceable(8)) local_unnamed_addr #4

declare %class.GrVkSecondaryCommandBuffer* @_ZN15GrVkCommandPool34findOrCreateSecondaryCommandBufferEP7GrVkGpu(%class.GrVkCommandPool*, %class.GrVkGpu*) local_unnamed_addr #4

declare void @_ZN26GrVkSecondaryCommandBuffer5beginEP7GrVkGpuPK15GrVkFramebufferPK14GrVkRenderPass(%class.GrVkSecondaryCommandBuffer*, %class.GrVkGpu*, %class.GrVkFramebuffer*, %class.GrVkRenderPass*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17GrVkOpsRenderPass11initWrappedEv(%class.GrVkOpsRenderPass* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 1, i32 0
  %3 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %2, align 8
  %4 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %3, i64 0, i32 7, i32 0
  %5 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %4, align 8
  %6 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 3
  store %class.GrVkRenderPass* %5, %class.GrVkRenderPass** %6, align 8
  %7 = getelementptr inbounds %class.GrVkRenderPass, %class.GrVkRenderPass* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  %9 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %2, align 8
  %10 = tail call %class.GrVkSecondaryCommandBuffer* @_ZN15GrVkFramebuffer21externalCommandBufferEv(%class.GrVkFramebuffer* %9) #11
  %11 = ptrtoint %class.GrVkSecondaryCommandBuffer* %10 to i64
  %12 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.436", %"class.std::__1::unique_ptr.436"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %class.GrVkSecondaryCommandBuffer*, %class.GrVkSecondaryCommandBuffer** %13, align 8
  %15 = bitcast %"class.std::__1::unique_ptr.436"* %12 to i64*
  store i64 %11, i64* %15, align 8
  %16 = icmp eq %class.GrVkSecondaryCommandBuffer* %14, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %1
  %18 = bitcast %class.GrVkSecondaryCommandBuffer* %14 to void (%class.GrVkSecondaryCommandBuffer*)***
  %19 = load void (%class.GrVkSecondaryCommandBuffer*)**, void (%class.GrVkSecondaryCommandBuffer*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.GrVkSecondaryCommandBuffer*)*, void (%class.GrVkSecondaryCommandBuffer*)** %19, i64 1
  %21 = load void (%class.GrVkSecondaryCommandBuffer*)*, void (%class.GrVkSecondaryCommandBuffer*)** %20, align 8
  tail call void %21(%class.GrVkSecondaryCommandBuffer* nonnull %14) #11
  %22 = load %class.GrVkSecondaryCommandBuffer*, %class.GrVkSecondaryCommandBuffer** %13, align 8
  br label %23

23:                                               ; preds = %17, %1
  %24 = phi %class.GrVkSecondaryCommandBuffer* [ %22, %17 ], [ %10, %1 ]
  %25 = icmp ne %class.GrVkSecondaryCommandBuffer* %24, null
  ret i1 %25
}

declare %class.GrVkSecondaryCommandBuffer* @_ZN15GrVkFramebuffer21externalCommandBufferEv(%class.GrVkFramebuffer*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrVkOpsRenderPassD2Ev(%class.GrVkOpsRenderPass* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV17GrVkOpsRenderPass, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %class.GrVkSecondaryCommandBuffer*, %class.GrVkSecondaryCommandBuffer** %3, align 8
  %5 = icmp eq %class.GrVkSecondaryCommandBuffer* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  store %class.GrVkSecondaryCommandBuffer* null, %class.GrVkSecondaryCommandBuffer** %3, align 8
  %7 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %8 = load %class.GrVkGpu*, %class.GrVkGpu** %7, align 8
  %9 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %8, i64 0, i32 12
  %10 = load %class.GrVkCommandPool*, %class.GrVkCommandPool** %9, align 8
  tail call void @_ZN26GrVkSecondaryCommandBuffer7recycleEP15GrVkCommandPool(%class.GrVkSecondaryCommandBuffer* nonnull %4, %class.GrVkCommandPool* %10) #11
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 3
  %13 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %12, align 8
  %14 = icmp eq %class.GrVkRenderPass* %13, null
  br i1 %14, label %29, label %15

15:                                               ; preds = %11
  %16 = bitcast %class.GrVkRenderPass* %13 to %class.GrManagedResource*
  %17 = getelementptr inbounds %class.GrVkRenderPass, %class.GrVkRenderPass* %13, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %28

20:                                               ; preds = %15
  %21 = bitcast %class.GrVkRenderPass* %13 to void (%class.GrManagedResource*)***
  %22 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %22, i64 4
  %24 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %23, align 8
  tail call void %24(%class.GrManagedResource* nonnull %16) #11
  %25 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %21, align 8
  %26 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %25, i64 1
  %27 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %26, align 8
  tail call void %27(%class.GrManagedResource* nonnull %16) #11
  br label %28

28:                                               ; preds = %20, %15
  store %class.GrVkRenderPass* null, %class.GrVkRenderPass** %12, align 8
  br label %29

29:                                               ; preds = %28, %11
  %30 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 6
  store i8 1, i8* %30, align 8
  %31 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 0, i32 2
  store %class.GrRenderTarget* null, %class.GrRenderTarget** %31, align 8
  %32 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 1, i32 0
  %33 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %32, align 8
  store %class.GrVkFramebuffer* null, %class.GrVkFramebuffer** %32, align 8
  %34 = icmp eq %class.GrVkFramebuffer* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %29
  %36 = bitcast %class.GrVkFramebuffer* %33 to %class.GrManagedResource*
  %37 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %33, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 -1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %48

40:                                               ; preds = %35
  %41 = bitcast %class.GrVkFramebuffer* %33 to void (%class.GrManagedResource*)***
  %42 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %41, align 8
  %43 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %42, i64 4
  %44 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %43, align 8
  tail call void %44(%class.GrManagedResource* nonnull %36) #11
  %45 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %41, align 8
  %46 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %45, i64 1
  %47 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %46, align 8
  tail call void %47(%class.GrManagedResource* nonnull %36) #11
  br label %48

48:                                               ; preds = %29, %35, %40
  %49 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 8
  %50 = bitcast i32* %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %50, i8 0, i64 9, i1 false) #11
  %51 = load %class.GrVkSecondaryCommandBuffer*, %class.GrVkSecondaryCommandBuffer** %3, align 8
  store %class.GrVkSecondaryCommandBuffer* null, %class.GrVkSecondaryCommandBuffer** %3, align 8
  %52 = icmp eq %class.GrVkSecondaryCommandBuffer* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %48
  %54 = bitcast %class.GrVkSecondaryCommandBuffer* %51 to void (%class.GrVkSecondaryCommandBuffer*)***
  %55 = load void (%class.GrVkSecondaryCommandBuffer*)**, void (%class.GrVkSecondaryCommandBuffer*)*** %54, align 8
  %56 = getelementptr inbounds void (%class.GrVkSecondaryCommandBuffer*)*, void (%class.GrVkSecondaryCommandBuffer*)** %55, i64 1
  %57 = load void (%class.GrVkSecondaryCommandBuffer*)*, void (%class.GrVkSecondaryCommandBuffer*)** %56, align 8
  tail call void %57(%class.GrVkSecondaryCommandBuffer* nonnull %51) #11
  br label %58

58:                                               ; preds = %48, %53
  %59 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %32, align 8
  %60 = icmp eq %class.GrVkFramebuffer* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %58
  %62 = bitcast %class.GrVkFramebuffer* %59 to %class.GrManagedResource*
  %63 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %59, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 -1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %74

66:                                               ; preds = %61
  %67 = bitcast %class.GrVkFramebuffer* %59 to void (%class.GrManagedResource*)***
  %68 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %67, align 8
  %69 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %68, i64 4
  %70 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %69, align 8
  tail call void %70(%class.GrManagedResource* nonnull %62) #11
  %71 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %67, align 8
  %72 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %71, i64 1
  %73 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %72, align 8
  tail call void %73(%class.GrManagedResource* nonnull %62) #11
  br label %74

74:                                               ; preds = %58, %61, %66
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV15GrOpsRenderPass, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %75 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 0, i32 5, i32 0
  %76 = load %class.GrBuffer*, %class.GrBuffer** %75, align 8
  %77 = icmp eq %class.GrBuffer* %76, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %74
  %79 = bitcast %class.GrBuffer* %76 to void (%class.GrBuffer*)***
  %80 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %79, align 8
  %81 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %80, i64 3
  %82 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %81, align 8
  tail call void %82(%class.GrBuffer* nonnull %76) #11
  br label %83

83:                                               ; preds = %78, %74
  %84 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 0, i32 4, i32 0
  %85 = load %class.GrBuffer*, %class.GrBuffer** %84, align 8
  %86 = icmp eq %class.GrBuffer* %85, null
  br i1 %86, label %92, label %87

87:                                               ; preds = %83
  %88 = bitcast %class.GrBuffer* %85 to void (%class.GrBuffer*)***
  %89 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %88, align 8
  %90 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %89, i64 3
  %91 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %90, align 8
  tail call void %91(%class.GrBuffer* nonnull %85) #11
  br label %92

92:                                               ; preds = %87, %83
  %93 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 0, i32 3, i32 0
  %94 = load %class.GrBuffer*, %class.GrBuffer** %93, align 8
  %95 = icmp eq %class.GrBuffer* %94, null
  br i1 %95, label %101, label %96

96:                                               ; preds = %92
  %97 = bitcast %class.GrBuffer* %94 to void (%class.GrBuffer*)***
  %98 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %97, align 8
  %99 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %98, i64 3
  %100 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %99, align 8
  tail call void %100(%class.GrBuffer* nonnull %94) #11
  br label %101

101:                                              ; preds = %92, %96
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrVkOpsRenderPass5resetEv(%class.GrVkOpsRenderPass* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %class.GrVkSecondaryCommandBuffer*, %class.GrVkSecondaryCommandBuffer** %2, align 8
  %4 = icmp eq %class.GrVkSecondaryCommandBuffer* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  store %class.GrVkSecondaryCommandBuffer* null, %class.GrVkSecondaryCommandBuffer** %2, align 8
  %6 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %7 = load %class.GrVkGpu*, %class.GrVkGpu** %6, align 8
  %8 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %7, i64 0, i32 12
  %9 = load %class.GrVkCommandPool*, %class.GrVkCommandPool** %8, align 8
  tail call void @_ZN26GrVkSecondaryCommandBuffer7recycleEP15GrVkCommandPool(%class.GrVkSecondaryCommandBuffer* nonnull %3, %class.GrVkCommandPool* %9) #11
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 3
  %12 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %11, align 8
  %13 = icmp eq %class.GrVkRenderPass* %12, null
  br i1 %13, label %28, label %14

14:                                               ; preds = %10
  %15 = bitcast %class.GrVkRenderPass* %12 to %class.GrManagedResource*
  %16 = getelementptr inbounds %class.GrVkRenderPass, %class.GrVkRenderPass* %12, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %27

19:                                               ; preds = %14
  %20 = bitcast %class.GrVkRenderPass* %12 to void (%class.GrManagedResource*)***
  %21 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %20, align 8
  %22 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %21, i64 4
  %23 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %22, align 8
  tail call void %23(%class.GrManagedResource* nonnull %15) #11
  %24 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %20, align 8
  %25 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %24, i64 1
  %26 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %25, align 8
  tail call void %26(%class.GrManagedResource* nonnull %15) #11
  br label %27

27:                                               ; preds = %14, %19
  store %class.GrVkRenderPass* null, %class.GrVkRenderPass** %11, align 8
  br label %28

28:                                               ; preds = %10, %27
  %29 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 6
  store i8 1, i8* %29, align 8
  %30 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 0, i32 2
  store %class.GrRenderTarget* null, %class.GrRenderTarget** %30, align 8
  %31 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 1, i32 0
  %32 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %31, align 8
  store %class.GrVkFramebuffer* null, %class.GrVkFramebuffer** %31, align 8
  %33 = icmp eq %class.GrVkFramebuffer* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %28
  %35 = bitcast %class.GrVkFramebuffer* %32 to %class.GrManagedResource*
  %36 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %32, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 -1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %47

39:                                               ; preds = %34
  %40 = bitcast %class.GrVkFramebuffer* %32 to void (%class.GrManagedResource*)***
  %41 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %41, i64 4
  %43 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %42, align 8
  tail call void %43(%class.GrManagedResource* nonnull %35) #11
  %44 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %40, align 8
  %45 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %44, i64 1
  %46 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %45, align 8
  tail call void %46(%class.GrManagedResource* nonnull %35) #11
  br label %47

47:                                               ; preds = %28, %34, %39
  %48 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 8
  %49 = bitcast i32* %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %49, i8 0, i64 9, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrVkOpsRenderPassD0Ev(%class.GrVkOpsRenderPass*) unnamed_addr #0 align 2 {
  tail call void @_ZN17GrVkOpsRenderPassD2Ev(%class.GrVkOpsRenderPass* %0) #11
  %2 = bitcast %class.GrVkOpsRenderPass* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.GrGpu* @_ZN17GrVkOpsRenderPass3gpuEv(%class.GrVkOpsRenderPass* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %3 = bitcast %class.GrVkGpu** %2 to %class.GrGpu**
  %4 = load %class.GrGpu*, %class.GrGpu** %3, align 8
  ret %class.GrGpu* %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.GrVkCommandBuffer* @_ZN17GrVkOpsRenderPass20currentCommandBufferEv(%class.GrVkOpsRenderPass* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %class.GrVkSecondaryCommandBuffer*, %class.GrVkSecondaryCommandBuffer** %2, align 8
  %4 = icmp eq %class.GrVkSecondaryCommandBuffer* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast %class.GrVkSecondaryCommandBuffer* %3 to %class.GrVkCommandBuffer*
  br label %13

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %9 = load %class.GrVkGpu*, %class.GrVkGpu** %8, align 8
  %10 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %9, i64 0, i32 13
  %11 = bitcast %class.GrVkPrimaryCommandBuffer** %10 to %class.GrVkCommandBuffer**
  %12 = load %class.GrVkCommandBuffer*, %class.GrVkCommandBuffer** %11, align 8
  br label %13

13:                                               ; preds = %7, %5
  %14 = phi %class.GrVkCommandBuffer* [ %6, %5 ], [ %12, %7 ]
  ret %class.GrVkCommandBuffer* %14
}

declare zeroext i1 @_ZN7GrVkGpu19loadMSAAFromResolveEP17GrVkCommandBufferRK14GrVkRenderPassP12GrAttachmentP14GrVkAttachmentRK7SkIRect(%class.GrVkGpu*, %class.GrVkCommandBuffer*, %class.GrVkRenderPass* dereferenceable(120), %class.GrAttachment*, %class.GrVkAttachment*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZN24GrVkPrimaryCommandBuffer10nexSubpassEP7GrVkGpub(%class.GrVkPrimaryCommandBuffer*, %class.GrVkGpu*, i1 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrVkOpsRenderPass6submitEv(%class.GrVkOpsRenderPass*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 0, i32 2
  %3 = load %class.GrRenderTarget*, %class.GrRenderTarget** %2, align 8
  %4 = icmp eq %class.GrRenderTarget* %3, null
  br i1 %4, label %31, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 3
  %7 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %6, align 8
  %8 = icmp eq %class.GrVkRenderPass* %7, null
  br i1 %8, label %31, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 1, i32 0
  %11 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %10, align 8
  %12 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %11, i64 0, i32 7, i32 0
  %13 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %12, align 8
  %14 = icmp eq %class.GrVkRenderPass* %13, null
  %15 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %16 = load %class.GrVkSecondaryCommandBuffer*, %class.GrVkSecondaryCommandBuffer** %15, align 8
  br i1 %14, label %18, label %17

17:                                               ; preds = %9
  store %class.GrVkSecondaryCommandBuffer* null, %class.GrVkSecondaryCommandBuffer** %15, align 8
  tail call void @_ZN15GrVkFramebuffer38returnExternalGrSecondaryCommandBufferENSt3__110unique_ptrI26GrVkSecondaryCommandBufferNS0_14default_deleteIS2_EEEE(%class.GrVkFramebuffer* %11, %class.GrVkSecondaryCommandBuffer* %16) #11
  br label %31

18:                                               ; preds = %9
  %19 = icmp eq %class.GrVkSecondaryCommandBuffer* %16, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %22 = load %class.GrVkGpu*, %class.GrVkGpu** %21, align 8
  store %class.GrVkSecondaryCommandBuffer* null, %class.GrVkSecondaryCommandBuffer** %15, align 8
  tail call void @_ZN7GrVkGpu28submitSecondaryCommandBufferENSt3__110unique_ptrI26GrVkSecondaryCommandBufferNS0_14default_deleteIS2_EEEE(%class.GrVkGpu* %22, %class.GrVkSecondaryCommandBuffer* nonnull %16) #11
  %23 = load %class.GrRenderTarget*, %class.GrRenderTarget** %2, align 8
  br label %24

24:                                               ; preds = %18, %20
  %25 = phi %class.GrRenderTarget* [ %3, %18 ], [ %23, %20 ]
  %26 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %27 = load %class.GrVkGpu*, %class.GrVkGpu** %26, align 8
  %28 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 7
  tail call void @_ZN7GrVkGpu13endRenderPassEP14GrRenderTarget15GrSurfaceOriginRK7SkIRect(%class.GrVkGpu* %27, %class.GrRenderTarget* %25, i32 %29, %struct.SkIRect* dereferenceable(16) %30) #11
  br label %31

31:                                               ; preds = %5, %1, %24, %17
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK17GrVkOpsRenderPass27wrapsSecondaryCommandBufferEv(%class.GrVkOpsRenderPass* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 1, i32 0
  %3 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %2, align 8
  %4 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %3, i64 0, i32 7, i32 0
  %5 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %4, align 8
  %6 = icmp ne %class.GrVkRenderPass* %5, null
  ret i1 %6
}

declare void @_ZN15GrVkFramebuffer38returnExternalGrSecondaryCommandBufferENSt3__110unique_ptrI26GrVkSecondaryCommandBufferNS0_14default_deleteIS2_EEEE(%class.GrVkFramebuffer*, %class.GrVkSecondaryCommandBuffer*) local_unnamed_addr #4

declare void @_ZN7GrVkGpu28submitSecondaryCommandBufferENSt3__110unique_ptrI26GrVkSecondaryCommandBufferNS0_14default_deleteIS2_EEEE(%class.GrVkGpu*, %class.GrVkSecondaryCommandBuffer*) local_unnamed_addr #4

declare void @_ZN7GrVkGpu13endRenderPassEP14GrRenderTarget15GrSurfaceOriginRK7SkIRect(%class.GrVkGpu*, %class.GrRenderTarget*, i32, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17GrVkOpsRenderPass3setEP14GrRenderTarget5sk_spI15GrVkFramebufferE15GrSurfaceOriginRK7SkIRectRKN15GrOpsRenderPass16LoadAndStoreInfoERKNS9_23StencilLoadAndStoreInfoESC_N14GrVkRenderPass19SelfDependencyFlagsENSG_15LoadFromResolveERK8SkTArrayIP14GrSurfaceProxyLb1EE(%class.GrVkOpsRenderPass* nocapture, %class.GrRenderTarget*, %class.sk_sp.195* nocapture, i32, %struct.SkIRect* nocapture readonly dereferenceable(16), %"struct.GrOpsRenderPass::LoadAndStoreInfo"* nocapture readonly dereferenceable(24), %"struct.GrOpsRenderPass::StencilLoadAndStoreInfo"* nocapture readonly dereferenceable(8), %"struct.GrOpsRenderPass::LoadAndStoreInfo"* nocapture readonly dereferenceable(24), i32, i32, %class.SkTArray.556* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %12 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %13 = load %class.GrVkGpu*, %class.GrVkGpu** %12, align 8
  %14 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %13, i64 0, i32 13
  %15 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %14, align 8
  %16 = icmp eq %class.GrVkPrimaryCommandBuffer* %15, null
  br i1 %16, label %109, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 0, i32 2
  store %class.GrRenderTarget* %1, %class.GrRenderTarget** %18, align 8
  %19 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 0, i32 1
  store i32 %3, i32* %19, align 8
  %20 = getelementptr inbounds %class.SkTArray.556, %class.SkTArray.556* %10, i64 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, 4294967294
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %class.SkTArray.556, %class.SkTArray.556* %10, i64 0, i32 0
  br label %59

26:                                               ; preds = %80, %17
  %27 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 1
  %28 = getelementptr inbounds %class.sk_sp.195, %class.sk_sp.195* %2, i64 0, i32 0
  %29 = bitcast %class.sk_sp.195* %2 to i64*
  %30 = load i64, i64* %29, align 8
  store %class.GrVkFramebuffer* null, %class.GrVkFramebuffer** %28, align 8
  %31 = getelementptr inbounds %class.sk_sp.195, %class.sk_sp.195* %27, i64 0, i32 0
  %32 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %31, align 8
  %33 = bitcast %class.sk_sp.195* %27 to i64*
  store i64 %30, i64* %33, align 8
  %34 = icmp eq %class.GrVkFramebuffer* %32, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %26
  %36 = bitcast %class.GrVkFramebuffer* %32 to %class.GrManagedResource*
  %37 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %32, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 -1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %48

40:                                               ; preds = %35
  %41 = bitcast %class.GrVkFramebuffer* %32 to void (%class.GrManagedResource*)***
  %42 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %41, align 8
  %43 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %42, i64 4
  %44 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %43, align 8
  tail call void %44(%class.GrManagedResource* nonnull %36) #11
  %45 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %41, align 8
  %46 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %45, i64 1
  %47 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %46, align 8
  tail call void %47(%class.GrManagedResource* nonnull %36) #11
  br label %48

48:                                               ; preds = %26, %35, %40
  %49 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 7
  %50 = bitcast %struct.SkIRect* %49 to i8*
  %51 = bitcast %struct.SkIRect* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %50, i8* align 4 %51, i64 16, i1 false)
  %52 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 8
  store i32 %8, i32* %52, align 4
  %53 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 9
  store i32 %9, i32* %53, align 8
  %54 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 1, i32 0
  %55 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %54, align 8
  %56 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %55, i64 0, i32 7, i32 0
  %57 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %56, align 8
  %58 = icmp eq %class.GrVkRenderPass* %57, null
  br i1 %58, label %107, label %86

59:                                               ; preds = %24, %80
  %60 = phi i64 [ %21, %24 ], [ %81, %80 ]
  %61 = phi i64 [ 0, %24 ], [ %82, %80 ]
  %62 = load %class.GrSurfaceProxy**, %class.GrSurfaceProxy*** %25, align 8
  %63 = getelementptr inbounds %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %62, i64 %61
  %64 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %63, align 8
  %65 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %64, i64 0, i32 2, i32 0
  %66 = load %class.GrSurface*, %class.GrSurface** %65, align 8
  %67 = icmp eq %class.GrSurface* %66, null
  br i1 %67, label %80, label %68

68:                                               ; preds = %59
  %69 = bitcast %class.GrSurface* %66 to %class.GrTexture* (%class.GrSurface*)***
  %70 = load %class.GrTexture* (%class.GrSurface*)**, %class.GrTexture* (%class.GrSurface*)*** %69, align 8
  %71 = getelementptr inbounds %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %70, i64 10
  %72 = load %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %71, align 8
  %73 = tail call %class.GrTexture* %72(%class.GrSurface* nonnull %66) #11
  %74 = getelementptr inbounds %class.GrTexture, %class.GrTexture* %73, i64 0, i32 5
  %75 = bitcast %class.GrSurface* %74 to %class.GrVkAttachment**
  %76 = load %class.GrVkAttachment*, %class.GrVkAttachment** %75, align 8
  %77 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %76, i64 0, i32 1
  %78 = load %class.GrVkGpu*, %class.GrVkGpu** %12, align 8
  tail call void @_ZN9GrVkImage27setImageLayoutAndQueueIndexEPK7GrVkGpu13VkImageLayoutjjbj(%class.GrVkImage* %77, %class.GrVkGpu* %78, i32 5, i32 32, i32 128, i1 zeroext false, i32 -1) #11
  %79 = load i64, i64* %20, align 8
  br label %80

80:                                               ; preds = %59, %68
  %81 = phi i64 [ %60, %59 ], [ %79, %68 ]
  %82 = add nuw nsw i64 %61, 1
  %83 = lshr i64 %81, 1
  %84 = and i64 %83, 2147483647
  %85 = icmp ult i64 %82, %84
  br i1 %85, label %59, label %26

86:                                               ; preds = %48
  %87 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 3
  store %class.GrVkRenderPass* %57, %class.GrVkRenderPass** %87, align 8
  %88 = getelementptr inbounds %class.GrVkRenderPass, %class.GrVkRenderPass* %57, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = atomicrmw add i32* %88, i32 1 monotonic
  %90 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %54, align 8
  %91 = tail call %class.GrVkSecondaryCommandBuffer* @_ZN15GrVkFramebuffer21externalCommandBufferEv(%class.GrVkFramebuffer* %90) #11
  %92 = ptrtoint %class.GrVkSecondaryCommandBuffer* %91 to i64
  %93 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 2
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.436", %"class.std::__1::unique_ptr.436"* %93, i64 0, i32 0, i32 0, i32 0
  %95 = load %class.GrVkSecondaryCommandBuffer*, %class.GrVkSecondaryCommandBuffer** %94, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.436"* %93 to i64*
  store i64 %92, i64* %96, align 8
  %97 = icmp eq %class.GrVkSecondaryCommandBuffer* %95, null
  br i1 %97, label %104, label %98

98:                                               ; preds = %86
  %99 = bitcast %class.GrVkSecondaryCommandBuffer* %95 to void (%class.GrVkSecondaryCommandBuffer*)***
  %100 = load void (%class.GrVkSecondaryCommandBuffer*)**, void (%class.GrVkSecondaryCommandBuffer*)*** %99, align 8
  %101 = getelementptr inbounds void (%class.GrVkSecondaryCommandBuffer*)*, void (%class.GrVkSecondaryCommandBuffer*)** %100, i64 1
  %102 = load void (%class.GrVkSecondaryCommandBuffer*)*, void (%class.GrVkSecondaryCommandBuffer*)** %101, align 8
  tail call void %102(%class.GrVkSecondaryCommandBuffer* nonnull %95) #11
  %103 = load %class.GrVkSecondaryCommandBuffer*, %class.GrVkSecondaryCommandBuffer** %94, align 8
  br label %104

104:                                              ; preds = %86, %98
  %105 = phi %class.GrVkSecondaryCommandBuffer* [ %103, %98 ], [ %91, %86 ]
  %106 = icmp ne %class.GrVkSecondaryCommandBuffer* %105, null
  br label %109

107:                                              ; preds = %48
  %108 = tail call zeroext i1 @_ZN17GrVkOpsRenderPass4initERKN15GrOpsRenderPass16LoadAndStoreInfoES3_RKNS0_23StencilLoadAndStoreInfoE(%class.GrVkOpsRenderPass* %0, %"struct.GrOpsRenderPass::LoadAndStoreInfo"* dereferenceable(24) %5, %"struct.GrOpsRenderPass::LoadAndStoreInfo"* dereferenceable(24) %7, %"struct.GrOpsRenderPass::StencilLoadAndStoreInfo"* dereferenceable(8) %6)
  br label %109

109:                                              ; preds = %11, %107, %104
  %110 = phi i1 [ %106, %104 ], [ %108, %107 ], [ false, %11 ]
  ret i1 %110
}

declare void @_ZN26GrVkSecondaryCommandBuffer7recycleEP15GrVkCommandPool(%class.GrVkSecondaryCommandBuffer*, %class.GrVkCommandPool*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrVkOpsRenderPass18onClearStencilClipERK14GrScissorStateb(%class.GrVkOpsRenderPass* nocapture, %class.GrScissorState* nocapture readonly dereferenceable(24), i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca %class.GrBackendFormat, align 8
  %5 = alloca %struct.VkClearRect, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.VkClearAttachment, align 4
  %8 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 3
  %9 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %8, align 8
  %10 = icmp eq %class.GrVkRenderPass* %9, null
  br i1 %10, label %127, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 1, i32 0
  %13 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %12, align 8
  %14 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %13, i64 0, i32 4, i32 0
  %15 = load %class.GrVkAttachment*, %class.GrVkAttachment** %14, align 8
  %16 = bitcast %class.GrBackendFormat* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %16) #11
  %17 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %15, i64 0, i32 0, i32 0
  %18 = bitcast %class.GrVkAttachment* %15 to void (%class.GrBackendFormat*, %class.GrSurface*)***
  %19 = load void (%class.GrBackendFormat*, %class.GrSurface*)**, void (%class.GrBackendFormat*, %class.GrSurface*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.GrBackendFormat*, %class.GrSurface*)*, void (%class.GrBackendFormat*, %class.GrSurface*)** %19, i64 9
  %21 = load void (%class.GrBackendFormat*, %class.GrSurface*)*, void (%class.GrBackendFormat*, %class.GrSurface*)** %20, align 8
  call void %21(%class.GrBackendFormat* nonnull sret %4, %class.GrSurface* %17) #11
  %22 = call i32 @_Z26GrBackendFormatStencilBitsRK15GrBackendFormat(%class.GrBackendFormat* nonnull dereferenceable(72) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %16) #11
  %23 = add nsw i32 %22, -1
  %24 = shl i32 1, %23
  %25 = select i1 %2, i32 %24, i32 0
  %26 = bitcast %struct.VkClearRect* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #11
  %27 = getelementptr inbounds %struct.VkClearRect, %struct.VkClearRect* %5, i64 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %struct.VkClearRect, %struct.VkClearRect* %5, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %struct.VkClearRect, %struct.VkClearRect* %5, i64 0, i32 0, i32 1, i32 0
  %30 = getelementptr inbounds %struct.VkClearRect, %struct.VkClearRect* %5, i64 0, i32 0, i32 1, i32 1
  %31 = getelementptr inbounds %struct.VkClearRect, %struct.VkClearRect* %5, i64 0, i32 1
  %32 = getelementptr inbounds %struct.VkClearRect, %struct.VkClearRect* %5, i64 0, i32 2
  %33 = getelementptr inbounds %class.GrScissorState, %class.GrScissorState* %1, i64 0, i32 1, i32 0
  %34 = bitcast %struct.VkClearRect* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %34, i8 -86, i64 24, i1 false)
  %35 = load i32, i32* %33, align 4
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %70, label %37

37:                                               ; preds = %11
  %38 = getelementptr inbounds %class.GrScissorState, %class.GrScissorState* %1, i64 0, i32 1, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %70, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %class.GrScissorState, %class.GrScissorState* %1, i64 0, i32 1, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %class.GrScissorState, %class.GrScissorState* %1, i64 0, i32 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = icmp slt i32 %43, %45
  br i1 %46, label %70, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %class.GrScissorState, %class.GrScissorState* %1, i64 0, i32 1, i32 3
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %class.GrScissorState, %class.GrScissorState* %1, i64 0, i32 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = icmp slt i32 %49, %51
  br i1 %52, label %70, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %15, i64 0, i32 0, i32 0, i32 1, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %15, i64 0, i32 0, i32 0, i32 1, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = sext i32 %55 to i64
  %59 = icmp slt i64 %58, 2147483647
  %60 = select i1 %59, i64 %58, i64 2147483647
  %61 = icmp sgt i64 %60, -2147483647
  %62 = select i1 %61, i64 %60, i64 -2147483647
  %63 = trunc i64 %62 to i32
  %64 = sext i32 %57 to i64
  %65 = icmp slt i64 %64, 2147483647
  %66 = select i1 %65, i64 %64, i64 2147483647
  %67 = icmp sgt i64 %66, -2147483647
  %68 = select i1 %67, i64 %66, i64 -2147483647
  %69 = trunc i64 %68 to i32
  br label %92

70:                                               ; preds = %11, %37, %41, %47
  %71 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 0, i32 1
  %72 = load i32, i32* %71, align 8
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %81, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %class.GrScissorState, %class.GrScissorState* %1, i64 0, i32 1, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %class.GrScissorState, %class.GrScissorState* %1, i64 0, i32 1, i32 2
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %class.GrScissorState, %class.GrScissorState* %1, i64 0, i32 1, i32 3
  %80 = load i32, i32* %79, align 4
  br label %92

81:                                               ; preds = %70
  %82 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %15, i64 0, i32 0, i32 0, i32 1, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %class.GrScissorState, %class.GrScissorState* %1, i64 0, i32 1, i32 3
  %85 = load i32, i32* %84, align 4
  %86 = sub nsw i32 %83, %85
  %87 = getelementptr inbounds %class.GrScissorState, %class.GrScissorState* %1, i64 0, i32 1, i32 2
  %88 = load i32, i32* %87, align 4
  %89 = getelementptr inbounds %class.GrScissorState, %class.GrScissorState* %1, i64 0, i32 1, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = sub nsw i32 %83, %90
  br label %92

92:                                               ; preds = %74, %81, %53
  %93 = phi i32 [ %91, %81 ], [ %80, %74 ], [ %69, %53 ]
  %94 = phi i32 [ %88, %81 ], [ %78, %74 ], [ %63, %53 ]
  %95 = phi i32 [ %86, %81 ], [ %76, %74 ], [ 0, %53 ]
  %96 = phi i32 [ %35, %81 ], [ %35, %74 ], [ 0, %53 ]
  store i32 %96, i32* %27, align 4
  store i32 %95, i32* %28, align 4
  %97 = sub i32 %94, %96
  %98 = sub i32 %93, %95
  store i32 %97, i32* %29, align 4
  store i32 %98, i32* %30, align 4
  store i32 0, i32* %31, align 4
  store i32 1, i32* %32, align 4
  %99 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %99) #11
  store i32 -1431655766, i32* %6, align 4
  %100 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %8, align 8
  %101 = call zeroext i1 @_ZNK14GrVkRenderPass22stencilAttachmentIndexEPj(%class.GrVkRenderPass* %100, i32* nonnull %6) #11
  %102 = bitcast %struct.VkClearAttachment* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %102) #11
  %103 = getelementptr inbounds %struct.VkClearAttachment, %struct.VkClearAttachment* %7, i64 0, i32 0
  %104 = getelementptr inbounds %struct.VkClearAttachment, %struct.VkClearAttachment* %7, i64 0, i32 1
  %105 = getelementptr inbounds %struct.VkClearAttachment, %struct.VkClearAttachment* %7, i64 0, i32 2, i32 0, i32 0, i64 0
  %106 = getelementptr inbounds %struct.VkClearAttachment, %struct.VkClearAttachment* %7, i64 0, i32 2, i32 0, i32 0, i64 1
  %107 = getelementptr inbounds %struct.VkClearAttachment, %struct.VkClearAttachment* %7, i64 0, i32 2, i32 0, i32 0, i64 2
  %108 = bitcast float* %107 to i64*
  store i64 -1, i64* %108, align 4
  store i32 4, i32* %103, align 4
  store i32 0, i32* %104, align 4
  store float 0.000000e+00, float* %105, align 4
  %109 = bitcast float* %106 to i32*
  store i32 %25, i32* %109, align 4
  %110 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %111 = load %class.GrVkSecondaryCommandBuffer*, %class.GrVkSecondaryCommandBuffer** %110, align 8
  %112 = icmp eq %class.GrVkSecondaryCommandBuffer* %111, null
  br i1 %112, label %117, label %113

113:                                              ; preds = %92
  %114 = bitcast %class.GrVkSecondaryCommandBuffer* %111 to %class.GrVkCommandBuffer*
  %115 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %116 = load %class.GrVkGpu*, %class.GrVkGpu** %115, align 8
  br label %123

117:                                              ; preds = %92
  %118 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %119 = load %class.GrVkGpu*, %class.GrVkGpu** %118, align 8
  %120 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %119, i64 0, i32 13
  %121 = bitcast %class.GrVkPrimaryCommandBuffer** %120 to %class.GrVkCommandBuffer**
  %122 = load %class.GrVkCommandBuffer*, %class.GrVkCommandBuffer** %121, align 8
  br label %123

123:                                              ; preds = %113, %117
  %124 = phi %class.GrVkGpu* [ %116, %113 ], [ %119, %117 ]
  %125 = phi %class.GrVkCommandBuffer* [ %114, %113 ], [ %122, %117 ]
  call void @_ZN17GrVkCommandBuffer16clearAttachmentsEPK7GrVkGpuiPK17VkClearAttachmentiPK11VkClearRect(%class.GrVkCommandBuffer* %125, %class.GrVkGpu* %124, i32 1, %struct.VkClearAttachment* nonnull %7, i32 1, %struct.VkClearRect* nonnull %5) #11
  %126 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 6
  store i8 0, i8* %126, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %102) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %99) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #11
  br label %127

127:                                              ; preds = %3, %123
  ret void
}

declare i32 @_Z26GrBackendFormatStencilBitsRK15GrBackendFormat(%class.GrBackendFormat* dereferenceable(72)) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare zeroext i1 @_ZNK14GrVkRenderPass22stencilAttachmentIndexEPj(%class.GrVkRenderPass*, i32*) local_unnamed_addr #4

declare void @_ZN17GrVkCommandBuffer16clearAttachmentsEPK7GrVkGpuiPK17VkClearAttachmentiPK11VkClearRect(%class.GrVkCommandBuffer*, %class.GrVkGpu*, i32, %struct.VkClearAttachment*, i32, %struct.VkClearRect*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrVkOpsRenderPass7onClearERK14GrScissorStateNSt3__15arrayIfLm4EEE(%class.GrVkOpsRenderPass* nocapture, %class.GrScissorState* nocapture readonly dereferenceable(24), <2 x float>, <2 x float>) unnamed_addr #7 align 2 {
  %5 = alloca %struct.VkClearRect, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.VkClearAttachment, align 4
  %8 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 3
  %9 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %8, align 8
  %10 = icmp eq %class.GrVkRenderPass* %9, null
  br i1 %10, label %114, label %11

11:                                               ; preds = %4
  %12 = bitcast <2 x float> %2 to <2 x i32>
  %13 = extractelement <2 x i32> %12, i32 0
  %14 = extractelement <2 x i32> %12, i32 1
  %15 = bitcast <2 x float> %3 to <2 x i32>
  %16 = extractelement <2 x i32> %15, i32 0
  %17 = extractelement <2 x i32> %15, i32 1
  %18 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 1, i32 0
  %19 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %18, align 8
  %20 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %19, i64 0, i32 2, i32 0
  %21 = load %class.GrVkAttachment*, %class.GrVkAttachment** %20, align 8
  %22 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %21, i64 0, i32 0, i32 0, i32 1
  %23 = bitcast %struct.SkISize* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = lshr i64 %24, 32
  %26 = trunc i64 %25 to i32
  %27 = bitcast %struct.VkClearRect* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #11
  %28 = getelementptr inbounds %struct.VkClearRect, %struct.VkClearRect* %5, i64 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %struct.VkClearRect, %struct.VkClearRect* %5, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %struct.VkClearRect, %struct.VkClearRect* %5, i64 0, i32 0, i32 1, i32 0
  %31 = getelementptr inbounds %struct.VkClearRect, %struct.VkClearRect* %5, i64 0, i32 0, i32 1, i32 1
  %32 = getelementptr inbounds %struct.VkClearRect, %struct.VkClearRect* %5, i64 0, i32 1
  %33 = getelementptr inbounds %struct.VkClearRect, %struct.VkClearRect* %5, i64 0, i32 2
  %34 = getelementptr inbounds %class.GrScissorState, %class.GrScissorState* %1, i64 0, i32 1, i32 0
  %35 = bitcast %struct.VkClearRect* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %35, i8 -86, i64 24, i1 false)
  %36 = load i32, i32* %34, align 4
  %37 = icmp sgt i32 %36, 0
  br i1 %37, label %56, label %38

38:                                               ; preds = %11
  %39 = getelementptr inbounds %class.GrScissorState, %class.GrScissorState* %1, i64 0, i32 1, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = icmp sgt i32 %40, 0
  br i1 %41, label %56, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %class.GrScissorState, %class.GrScissorState* %1, i64 0, i32 1, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %class.GrScissorState, %class.GrScissorState* %1, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp slt i32 %44, %46
  br i1 %47, label %56, label %48

48:                                               ; preds = %42
  %49 = getelementptr inbounds %class.GrScissorState, %class.GrScissorState* %1, i64 0, i32 1, i32 3
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %class.GrScissorState, %class.GrScissorState* %1, i64 0, i32 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = icmp slt i32 %50, %52
  br i1 %53, label %56, label %54

54:                                               ; preds = %48
  %55 = trunc i64 %24 to i32
  br label %76

56:                                               ; preds = %11, %38, %42, %48
  %57 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %67, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %class.GrScissorState, %class.GrScissorState* %1, i64 0, i32 1, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %class.GrScissorState, %class.GrScissorState* %1, i64 0, i32 1, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %class.GrScissorState, %class.GrScissorState* %1, i64 0, i32 1, i32 3
  %66 = load i32, i32* %65, align 4
  br label %76

67:                                               ; preds = %56
  %68 = getelementptr inbounds %class.GrScissorState, %class.GrScissorState* %1, i64 0, i32 1, i32 3
  %69 = load i32, i32* %68, align 4
  %70 = sub nsw i32 %26, %69
  %71 = getelementptr inbounds %class.GrScissorState, %class.GrScissorState* %1, i64 0, i32 1, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %class.GrScissorState, %class.GrScissorState* %1, i64 0, i32 1, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = sub nsw i32 %26, %74
  br label %76

76:                                               ; preds = %60, %67, %54
  %77 = phi i32 [ %75, %67 ], [ %66, %60 ], [ %26, %54 ]
  %78 = phi i32 [ %72, %67 ], [ %64, %60 ], [ %55, %54 ]
  %79 = phi i32 [ %70, %67 ], [ %62, %60 ], [ 0, %54 ]
  %80 = phi i32 [ %36, %67 ], [ %36, %60 ], [ 0, %54 ]
  store i32 %80, i32* %28, align 4
  store i32 %79, i32* %29, align 4
  %81 = sub i32 %78, %80
  %82 = sub i32 %77, %79
  store i32 %81, i32* %30, align 4
  store i32 %82, i32* %31, align 4
  store i32 0, i32* %32, align 4
  store i32 1, i32* %33, align 4
  %83 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %83) #11
  store i32 -1431655766, i32* %6, align 4
  %84 = call zeroext i1 @_ZNK14GrVkRenderPass20colorAttachmentIndexEPj(%class.GrVkRenderPass* nonnull %9, i32* nonnull %6) #11
  %85 = bitcast %struct.VkClearAttachment* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85) #11
  %86 = getelementptr inbounds %struct.VkClearAttachment, %struct.VkClearAttachment* %7, i64 0, i32 0
  %87 = getelementptr inbounds %struct.VkClearAttachment, %struct.VkClearAttachment* %7, i64 0, i32 1
  %88 = getelementptr inbounds %struct.VkClearAttachment, %struct.VkClearAttachment* %7, i64 0, i32 2
  %89 = getelementptr inbounds %struct.VkClearAttachment, %struct.VkClearAttachment* %7, i64 0, i32 2, i32 0, i32 0, i64 1
  %90 = getelementptr inbounds %struct.VkClearAttachment, %struct.VkClearAttachment* %7, i64 0, i32 2, i32 0, i32 0, i64 2
  %91 = getelementptr inbounds %struct.VkClearAttachment, %struct.VkClearAttachment* %7, i64 0, i32 2, i32 0, i32 0, i64 3
  store i32 1, i32* %86, align 4
  %92 = load i32, i32* %6, align 4
  store i32 %92, i32* %87, align 4
  %93 = bitcast %union.VkClearValue* %88 to i32*
  store i32 %13, i32* %93, align 4
  %94 = bitcast float* %89 to i32*
  store i32 %14, i32* %94, align 4
  %95 = bitcast float* %90 to i32*
  store i32 %16, i32* %95, align 4
  %96 = bitcast float* %91 to i32*
  store i32 %17, i32* %96, align 4
  %97 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %98 = load %class.GrVkSecondaryCommandBuffer*, %class.GrVkSecondaryCommandBuffer** %97, align 8
  %99 = icmp eq %class.GrVkSecondaryCommandBuffer* %98, null
  br i1 %99, label %104, label %100

100:                                              ; preds = %76
  %101 = bitcast %class.GrVkSecondaryCommandBuffer* %98 to %class.GrVkCommandBuffer*
  %102 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %103 = load %class.GrVkGpu*, %class.GrVkGpu** %102, align 8
  br label %110

104:                                              ; preds = %76
  %105 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %106 = load %class.GrVkGpu*, %class.GrVkGpu** %105, align 8
  %107 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %106, i64 0, i32 13
  %108 = bitcast %class.GrVkPrimaryCommandBuffer** %107 to %class.GrVkCommandBuffer**
  %109 = load %class.GrVkCommandBuffer*, %class.GrVkCommandBuffer** %108, align 8
  br label %110

110:                                              ; preds = %100, %104
  %111 = phi %class.GrVkGpu* [ %103, %100 ], [ %106, %104 ]
  %112 = phi %class.GrVkCommandBuffer* [ %101, %100 ], [ %109, %104 ]
  call void @_ZN17GrVkCommandBuffer16clearAttachmentsEPK7GrVkGpuiPK17VkClearAttachmentiPK11VkClearRect(%class.GrVkCommandBuffer* %112, %class.GrVkGpu* %111, i32 1, %struct.VkClearAttachment* nonnull %7, i32 1, %struct.VkClearRect* nonnull %5) #11
  %113 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 6
  store i8 0, i8* %113, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %83) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #11
  br label %114

114:                                              ; preds = %4, %110
  ret void
}

declare zeroext i1 @_ZNK14GrVkRenderPass20colorAttachmentIndexEPj(%class.GrVkRenderPass*, i32*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrVkOpsRenderPass23addAdditionalRenderPassEb(%class.GrVkOpsRenderPass* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"struct.GrVkRenderPass::LoadStoreOps"*
  %5 = alloca %"struct.GrVkRenderPass::LoadStoreOps", align 4
  %6 = alloca %"struct.GrVkRenderPass::LoadStoreOps", align 4
  %7 = alloca %class.GrResourceHandle.474, align 4
  %8 = alloca %union.VkClearValue, align 4
  %9 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 1
  %10 = getelementptr inbounds %class.sk_sp.195, %class.sk_sp.195* %9, i64 0, i32 0
  %11 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %10, align 8
  %12 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %11, i64 0, i32 3, i32 0
  %13 = load %class.GrVkAttachment*, %class.GrVkAttachment** %12, align 8
  %14 = icmp ne %class.GrVkAttachment* %13, null
  %15 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %11, i64 0, i32 4, i32 0
  %16 = load %class.GrVkAttachment*, %class.GrVkAttachment** %15, align 8
  %17 = icmp ne %class.GrVkAttachment* %16, null
  br i1 %14, label %18, label %25

18:                                               ; preds = %2
  %19 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 3
  %20 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %19, align 8
  %21 = getelementptr inbounds %class.GrVkRenderPass, %class.GrVkRenderPass* %20, i64 0, i32 5
  %22 = load i32, i32* %21, align 4
  %23 = icmp ne i32 %22, 1
  %24 = zext i1 %23 to i8
  br label %25

25:                                               ; preds = %18, %2
  %26 = phi i8 [ 0, %2 ], [ %24, %18 ]
  %27 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 10
  %28 = load i8, i8* %27, align 4, !range !2
  %29 = or i8 %28, %26
  store i8 %29, i8* %27, align 4
  %30 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #11
  %31 = bitcast i64* %3 to i32*
  %32 = getelementptr inbounds %"struct.GrVkRenderPass::LoadStoreOps", %"struct.GrVkRenderPass::LoadStoreOps"* %4, i64 0, i32 1
  store i32 0, i32* %31, align 8
  store i32 0, i32* %32, align 4
  %33 = bitcast %"struct.GrVkRenderPass::LoadStoreOps"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  %34 = getelementptr inbounds %"struct.GrVkRenderPass::LoadStoreOps", %"struct.GrVkRenderPass::LoadStoreOps"* %5, i64 0, i32 0
  %35 = getelementptr inbounds %"struct.GrVkRenderPass::LoadStoreOps", %"struct.GrVkRenderPass::LoadStoreOps"* %5, i64 0, i32 1
  store i32 0, i32* %34, align 4
  store i32 0, i32* %35, align 4
  br i1 %14, label %36, label %37

36:                                               ; preds = %25
  store i64 4294967298, i64* %3, align 8
  br label %37

37:                                               ; preds = %36, %25
  %38 = phi i32 [ 1, %36 ], [ 0, %25 ]
  %39 = bitcast %"struct.GrVkRenderPass::LoadStoreOps"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #11
  %40 = getelementptr inbounds %"struct.GrVkRenderPass::LoadStoreOps", %"struct.GrVkRenderPass::LoadStoreOps"* %6, i64 0, i32 0
  %41 = getelementptr inbounds %"struct.GrVkRenderPass::LoadStoreOps", %"struct.GrVkRenderPass::LoadStoreOps"* %6, i64 0, i32 1
  store i32 0, i32* %40, align 4
  store i32 0, i32* %41, align 4
  %42 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 3
  %43 = bitcast %class.GrVkRenderPass** %42 to %class.GrManagedResource**
  %44 = load %class.GrManagedResource*, %class.GrManagedResource** %43, align 8
  %45 = getelementptr inbounds %class.GrManagedResource, %class.GrManagedResource* %44, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 -1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %58

48:                                               ; preds = %37
  %49 = bitcast %class.GrManagedResource* %44 to void (%class.GrManagedResource*)***
  %50 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %49, align 8
  %51 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %50, i64 4
  %52 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %51, align 8
  tail call void %52(%class.GrManagedResource* %44) #11
  %53 = icmp eq %class.GrManagedResource* %44, null
  br i1 %53, label %58, label %54

54:                                               ; preds = %48
  %55 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %49, align 8
  %56 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %55, i64 1
  %57 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %56, align 8
  tail call void %57(%class.GrManagedResource* nonnull %44) #11
  br label %58

58:                                               ; preds = %37, %48, %54
  store %class.GrVkRenderPass* null, %class.GrVkRenderPass** %42, align 8
  %59 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 0, i32 2
  %60 = bitcast %class.GrRenderTarget** %59 to %class.GrVkRenderTarget**
  %61 = load %class.GrVkRenderTarget*, %class.GrVkRenderTarget** %60, align 8
  %62 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 8
  %63 = load i32, i32* %62, align 4
  %64 = tail call %class.GrVkFramebuffer* @_ZN16GrVkRenderTarget14getFramebufferEbbN14GrVkRenderPass19SelfDependencyFlagsENS0_15LoadFromResolveE(%class.GrVkRenderTarget* %61, i1 zeroext %14, i1 zeroext %17, i32 %63, i32 %38) #11
  %65 = icmp eq %class.GrVkFramebuffer* %64, null
  br i1 %65, label %133, label %66

66:                                               ; preds = %58
  %67 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %64, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = atomicrmw add i32* %67, i32 1 monotonic, !noalias !3
  %69 = ptrtoint %class.GrVkFramebuffer* %64 to i64
  %70 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %10, align 8
  %71 = bitcast %class.sk_sp.195* %9 to i64*
  store i64 %69, i64* %71, align 8
  %72 = icmp eq %class.GrVkFramebuffer* %70, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %66
  %74 = bitcast %class.GrVkFramebuffer* %70 to %class.GrManagedResource*
  %75 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %70, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw add i32* %75, i32 -1 acq_rel
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %86

78:                                               ; preds = %73
  %79 = bitcast %class.GrVkFramebuffer* %70 to void (%class.GrManagedResource*)***
  %80 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %79, align 8
  %81 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %80, i64 4
  %82 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %81, align 8
  tail call void %82(%class.GrManagedResource* nonnull %74) #11
  %83 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %79, align 8
  %84 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %83, i64 1
  %85 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %84, align 8
  tail call void %85(%class.GrManagedResource* nonnull %74) #11
  br label %86

86:                                               ; preds = %78, %73, %66
  %87 = bitcast %class.GrResourceHandle.474* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %87) #11
  %88 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %10, align 8
  %89 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %88, i64 0, i32 6, i32 0
  %90 = load i32, i32* %89, align 8
  %91 = getelementptr inbounds %class.GrResourceHandle.474, %class.GrResourceHandle.474* %7, i64 0, i32 0
  store i32 %90, i32* %91, align 4
  %92 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %93 = load %class.GrVkGpu*, %class.GrVkGpu** %92, align 8
  %94 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %93, i64 0, i32 9
  %95 = call %class.GrVkRenderPass* @_ZN20GrVkResourceProvider14findRenderPassERK16GrResourceHandleINS_22CompatibleRPHandleKindEERKN14GrVkRenderPass12LoadStoreOpsES8_S8_(%class.GrVkResourceProvider* %94, %class.GrResourceHandle.474* nonnull dereferenceable(4) %7, %"struct.GrVkRenderPass::LoadStoreOps"* nonnull dereferenceable(8) %4, %"struct.GrVkRenderPass::LoadStoreOps"* nonnull dereferenceable(8) %5, %"struct.GrVkRenderPass::LoadStoreOps"* nonnull dereferenceable(8) %6) #11
  store %class.GrVkRenderPass* %95, %class.GrVkRenderPass** %42, align 8
  %96 = icmp eq %class.GrVkRenderPass* %95, null
  br i1 %96, label %132, label %97

97:                                               ; preds = %86
  %98 = load %class.GrVkGpu*, %class.GrVkGpu** %92, align 8
  %99 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %98, i64 0, i32 3, i32 0
  %100 = load %class.GrVkCaps*, %class.GrVkCaps** %99, align 8
  %101 = getelementptr inbounds %class.GrVkCaps, %class.GrVkCaps* %100, i64 0, i32 21
  %102 = load i8, i8* %101, align 1, !range !2
  %103 = icmp eq i8 %102, 0
  %104 = or i1 %103, %1
  br i1 %104, label %105, label %129

105:                                              ; preds = %97
  %106 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %98, i64 0, i32 12
  %107 = load %class.GrVkCommandPool*, %class.GrVkCommandPool** %106, align 8
  %108 = call %class.GrVkSecondaryCommandBuffer* @_ZN15GrVkCommandPool34findOrCreateSecondaryCommandBufferEP7GrVkGpu(%class.GrVkCommandPool* %107, %class.GrVkGpu* %98) #11
  %109 = ptrtoint %class.GrVkSecondaryCommandBuffer* %108 to i64
  %110 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 2
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.436", %"class.std::__1::unique_ptr.436"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = load %class.GrVkSecondaryCommandBuffer*, %class.GrVkSecondaryCommandBuffer** %111, align 8
  %113 = bitcast %"class.std::__1::unique_ptr.436"* %110 to i64*
  store i64 %109, i64* %113, align 8
  %114 = icmp eq %class.GrVkSecondaryCommandBuffer* %112, null
  br i1 %114, label %121, label %115

115:                                              ; preds = %105
  %116 = bitcast %class.GrVkSecondaryCommandBuffer* %112 to void (%class.GrVkSecondaryCommandBuffer*)***
  %117 = load void (%class.GrVkSecondaryCommandBuffer*)**, void (%class.GrVkSecondaryCommandBuffer*)*** %116, align 8
  %118 = getelementptr inbounds void (%class.GrVkSecondaryCommandBuffer*)*, void (%class.GrVkSecondaryCommandBuffer*)** %117, i64 1
  %119 = load void (%class.GrVkSecondaryCommandBuffer*)*, void (%class.GrVkSecondaryCommandBuffer*)** %118, align 8
  call void %119(%class.GrVkSecondaryCommandBuffer* nonnull %112) #11
  %120 = load %class.GrVkSecondaryCommandBuffer*, %class.GrVkSecondaryCommandBuffer** %111, align 8
  br label %121

121:                                              ; preds = %115, %105
  %122 = phi %class.GrVkSecondaryCommandBuffer* [ %120, %115 ], [ %108, %105 ]
  %123 = icmp eq %class.GrVkSecondaryCommandBuffer* %122, null
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  store %class.GrVkRenderPass* null, %class.GrVkRenderPass** %42, align 8
  br label %132

125:                                              ; preds = %121
  %126 = load %class.GrVkGpu*, %class.GrVkGpu** %92, align 8
  %127 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %10, align 8
  %128 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %42, align 8
  call void @_ZN26GrVkSecondaryCommandBuffer5beginEP7GrVkGpuPK15GrVkFramebufferPK14GrVkRenderPass(%class.GrVkSecondaryCommandBuffer* nonnull %122, %class.GrVkGpu* %126, %class.GrVkFramebuffer* %127, %class.GrVkRenderPass* %128) #11
  br label %129

129:                                              ; preds = %97, %125
  %130 = bitcast %union.VkClearValue* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %130) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %130, i8 0, i64 16, i1 false)
  %131 = call zeroext i1 @_ZN17GrVkOpsRenderPass15beginRenderPassERK12VkClearValueN14GrVkRenderPass15LoadFromResolveE(%class.GrVkOpsRenderPass* %0, %union.VkClearValue* nonnull dereferenceable(16) %8, i32 %38)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %130) #11
  br label %132

132:                                              ; preds = %86, %129, %124
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %87) #11
  br label %133

133:                                              ; preds = %58, %132
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #11
  ret void
}

declare %class.GrVkFramebuffer* @_ZN16GrVkRenderTarget14getFramebufferEbbN14GrVkRenderPass19SelfDependencyFlagsENS0_15LoadFromResolveE(%class.GrVkRenderTarget*, i1 zeroext, i1 zeroext, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrVkOpsRenderPass12inlineUploadEP14GrOpFlushStateRNSt3__18functionIFvRNS3_IFbP14GrTextureProxy7SkIRect11GrColorTypePKvmEEEEEE(%class.GrVkOpsRenderPass*, %class.GrOpFlushState*, %"class.std::__1::function.602"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 3
  %5 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %4, align 8
  %6 = icmp eq %class.GrVkRenderPass* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %class.GrVkSecondaryCommandBuffer*, %class.GrVkSecondaryCommandBuffer** %8, align 8
  %10 = icmp eq %class.GrVkSecondaryCommandBuffer* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %13 = load %class.GrVkGpu*, %class.GrVkGpu** %12, align 8
  tail call void @_ZN26GrVkSecondaryCommandBuffer3endEP7GrVkGpu(%class.GrVkSecondaryCommandBuffer* nonnull %9, %class.GrVkGpu* %13) #11
  %14 = load %class.GrVkGpu*, %class.GrVkGpu** %12, align 8
  %15 = load %class.GrVkSecondaryCommandBuffer*, %class.GrVkSecondaryCommandBuffer** %8, align 8
  store %class.GrVkSecondaryCommandBuffer* null, %class.GrVkSecondaryCommandBuffer** %8, align 8
  tail call void @_ZN7GrVkGpu28submitSecondaryCommandBufferENSt3__110unique_ptrI26GrVkSecondaryCommandBufferNS0_14default_deleteIS2_EEEE(%class.GrVkGpu* %14, %class.GrVkSecondaryCommandBuffer* %15) #11
  br label %16

16:                                               ; preds = %7, %11
  %17 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %18 = load %class.GrVkGpu*, %class.GrVkGpu** %17, align 8
  %19 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 0, i32 2
  %20 = load %class.GrRenderTarget*, %class.GrRenderTarget** %19, align 8
  %21 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 7
  tail call void @_ZN7GrVkGpu13endRenderPassEP14GrRenderTarget15GrSurfaceOriginRK7SkIRect(%class.GrVkGpu* %18, %class.GrRenderTarget* %20, i32 %22, %struct.SkIRect* dereferenceable(16) %23) #11
  tail call void @_ZN14GrOpFlushState8doUploadERNSt3__18functionIFvRNS1_IFbP14GrTextureProxy7SkIRect11GrColorTypePKvmEEEEEEb(%class.GrOpFlushState* %1, %"class.std::__1::function.602"* dereferenceable(32) %2, i1 zeroext true) #11
  tail call void @_ZN17GrVkOpsRenderPass23addAdditionalRenderPassEb(%class.GrVkOpsRenderPass* %0, i1 zeroext false)
  br label %24

24:                                               ; preds = %3, %16
  ret void
}

declare void @_ZN14GrOpFlushState8doUploadERNSt3__18functionIFvRNS1_IFbP14GrTextureProxy7SkIRect11GrColorTypePKvmEEEEEEb(%class.GrOpFlushState*, %"class.std::__1::function.602"* dereferenceable(32), i1 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrVkOpsRenderPass5onEndEv(%class.GrVkOpsRenderPass* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %class.GrVkSecondaryCommandBuffer*, %class.GrVkSecondaryCommandBuffer** %2, align 8
  %4 = icmp eq %class.GrVkSecondaryCommandBuffer* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 1, i32 0
  %7 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %6, align 8
  %8 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %7, i64 0, i32 7, i32 0
  %9 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %8, align 8
  %10 = icmp eq %class.GrVkRenderPass* %9, null
  br i1 %10, label %11, label %14

11:                                               ; preds = %5
  %12 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %13 = load %class.GrVkGpu*, %class.GrVkGpu** %12, align 8
  tail call void @_ZN26GrVkSecondaryCommandBuffer3endEP7GrVkGpu(%class.GrVkSecondaryCommandBuffer* nonnull %3, %class.GrVkGpu* %13) #11
  br label %14

14:                                               ; preds = %5, %1, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17GrVkOpsRenderPass14onBindPipelineERK13GrProgramInfoRK6SkRect(%class.GrVkOpsRenderPass*, %class.GrProgramInfo* dereferenceable(128), %struct.SkRect* dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  %6 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 3
  %7 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %6, align 8
  %8 = icmp eq %class.GrVkRenderPass* %7, null
  br i1 %8, label %125, label %9

9:                                                ; preds = %3
  %10 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #11
  %11 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 7, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = sitofp i32 %12 to float
  %14 = insertelement <2 x float> undef, float %13, i32 0
  %15 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 7, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = sitofp i32 %16 to float
  %18 = insertelement <2 x float> %14, float %17, i32 1
  %19 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 7, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = sitofp i32 %20 to float
  %22 = insertelement <2 x float> undef, float %21, i32 0
  %23 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 7, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = sitofp i32 %24 to float
  %26 = insertelement <2 x float> %22, float %25, i32 1
  %27 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  store <2 x float> %18, <2 x float>* %27, align 8
  %28 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  store <2 x float> %26, <2 x float>* %28, align 8
  %29 = call zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect* nonnull %5, %struct.SkRect* dereferenceable(16) %2) #11
  %30 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 4
  br i1 %29, label %31, label %54

31:                                               ; preds = %9
  %32 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0, i64 0
  %33 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %5, i64 0, i32 3
  %34 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1, i64 0
  %35 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %5, i64 0, i32 1
  %36 = load float, float* %32, align 8
  %37 = call float @llvm.floor.f32(float %36) #11
  %38 = load float, float* %35, align 4
  %39 = call float @llvm.floor.f32(float %38) #11
  %40 = load float, float* %34, align 8
  %41 = call float @llvm.ceil.f32(float %40) #11
  %42 = load float, float* %33, align 4
  %43 = call float @llvm.ceil.f32(float %42) #11
  %44 = insertelement <4 x float> undef, float %37, i32 0
  %45 = insertelement <4 x float> %44, float %39, i32 1
  %46 = insertelement <4 x float> %45, float %41, i32 2
  %47 = insertelement <4 x float> %46, float %43, i32 3
  %48 = fcmp olt <4 x float> %47, <float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000>
  %49 = select <4 x i1> %48, <4 x float> %47, <4 x float> <float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000>
  %50 = fcmp ogt <4 x float> %49, <float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000>
  %51 = select <4 x i1> %50, <4 x float> %49, <4 x float> <float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000>
  %52 = fptosi <4 x float> %51 to <4 x i32>
  %53 = bitcast %struct.SkIRect* %30 to <4 x i32>*
  store <4 x i32> %52, <4 x i32>* %53, align 4
  br label %56

54:                                               ; preds = %9
  %55 = bitcast %struct.SkIRect* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %55, i8 0, i64 16, i1 false) #11
  br label %56

56:                                               ; preds = %54, %31
  %57 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %58 = load %class.GrVkSecondaryCommandBuffer*, %class.GrVkSecondaryCommandBuffer** %57, align 8
  %59 = icmp eq %class.GrVkSecondaryCommandBuffer* %58, null
  br i1 %59, label %64, label %60

60:                                               ; preds = %56
  %61 = bitcast %class.GrVkSecondaryCommandBuffer* %58 to %class.GrVkCommandBuffer*
  %62 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %63 = load %class.GrVkGpu*, %class.GrVkGpu** %62, align 8
  br label %70

64:                                               ; preds = %56
  %65 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %66 = load %class.GrVkGpu*, %class.GrVkGpu** %65, align 8
  %67 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %66, i64 0, i32 13
  %68 = bitcast %class.GrVkPrimaryCommandBuffer** %67 to %class.GrVkCommandBuffer**
  %69 = load %class.GrVkCommandBuffer*, %class.GrVkCommandBuffer** %68, align 8
  br label %70

70:                                               ; preds = %60, %64
  %71 = phi %class.GrVkGpu* [ %63, %60 ], [ %66, %64 ]
  %72 = phi %class.GrVkCommandBuffer* [ %61, %60 ], [ %69, %64 ]
  %73 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %6, align 8
  %74 = getelementptr inbounds %class.GrVkRenderPass, %class.GrVkRenderPass* %73, i64 0, i32 1
  %75 = load %struct.VkRenderPass_T*, %struct.VkRenderPass_T** %74, align 8
  %76 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %77 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %71, i64 0, i32 9
  %78 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 0, i32 2
  %79 = load %class.GrRenderTarget*, %class.GrRenderTarget** %78, align 8
  %80 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 10
  %81 = load i8, i8* %80, align 4, !range !2
  %82 = icmp ne i8 %81, 0
  %83 = call %class.GrVkPipelineState* @_ZN20GrVkResourceProvider35findOrCreateCompatiblePipelineStateEP14GrRenderTargetRK13GrProgramInfoP14VkRenderPass_Tb(%class.GrVkResourceProvider* %77, %class.GrRenderTarget* %79, %class.GrProgramInfo* dereferenceable(128) %1, %struct.VkRenderPass_T* %75, i1 zeroext %82) #11
  %84 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 5
  store %class.GrVkPipelineState* %83, %class.GrVkPipelineState** %84, align 8
  %85 = icmp eq %class.GrVkPipelineState* %83, null
  br i1 %85, label %123, label %86

86:                                               ; preds = %70
  %87 = load %class.GrVkGpu*, %class.GrVkGpu** %76, align 8
  call void @_ZN17GrVkPipelineState12bindPipelineEPK7GrVkGpuP17GrVkCommandBuffer(%class.GrVkPipelineState* nonnull %83, %class.GrVkGpu* %87, %class.GrVkCommandBuffer* %72) #11
  %88 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 1, i32 0
  %89 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %88, align 8
  %90 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %89, i64 0, i32 2, i32 0
  %91 = load %class.GrVkAttachment*, %class.GrVkAttachment** %90, align 8
  %92 = load %class.GrVkPipelineState*, %class.GrVkPipelineState** %84, align 8
  %93 = load %class.GrVkGpu*, %class.GrVkGpu** %76, align 8
  %94 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %91, i64 0, i32 0, i32 0, i32 1
  %95 = bitcast %struct.SkISize* %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = call zeroext i1 @_ZN17GrVkPipelineState18setAndBindUniformsEP7GrVkGpu7SkISizeRK13GrProgramInfoP17GrVkCommandBuffer(%class.GrVkPipelineState* %92, %class.GrVkGpu* %93, i64 %96, %class.GrProgramInfo* dereferenceable(128) %1, %class.GrVkCommandBuffer* %72) #11
  br i1 %97, label %98, label %123

98:                                               ; preds = %86
  %99 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %1, i64 0, i32 5
  %100 = load %class.GrPipeline*, %class.GrPipeline** %99, align 8
  %101 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %100, i64 0, i32 5
  %102 = load i8, i8* %101, align 8
  %103 = and i8 %102, 32
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %105, label %110

105:                                              ; preds = %98
  %106 = load %class.GrVkGpu*, %class.GrVkGpu** %76, align 8
  %107 = load i64, i64* %95, align 8
  %108 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 0, i32 1
  %109 = load i32, i32* %108, align 8
  call void @_ZN12GrVkPipeline26SetDynamicScissorRectStateEP7GrVkGpuP17GrVkCommandBuffer7SkISize15GrSurfaceOriginRK7SkIRect(%class.GrVkGpu* %106, %class.GrVkCommandBuffer* %72, i64 %107, i32 %109, %struct.SkIRect* dereferenceable(16) %30) #11
  br label %110

110:                                              ; preds = %98, %105
  %111 = load %class.GrVkGpu*, %class.GrVkGpu** %76, align 8
  %112 = load i64, i64* %95, align 8
  call void @_ZN12GrVkPipeline23SetDynamicViewportStateEP7GrVkGpuP17GrVkCommandBuffer7SkISize(%class.GrVkGpu* %111, %class.GrVkCommandBuffer* %72, i64 %112) #11
  %113 = load %class.GrVkGpu*, %class.GrVkGpu** %76, align 8
  %114 = load %class.GrPipeline*, %class.GrPipeline** %99, align 8
  %115 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %114, i64 0, i32 10
  %116 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %114, i64 0, i32 7, i32 0
  %117 = load %class.GrXferProcessor*, %class.GrXferProcessor** %116, align 8
  %118 = icmp eq %class.GrXferProcessor* %117, null
  br i1 %118, label %119, label %121

119:                                              ; preds = %110
  %120 = call dereferenceable(24) %class.GrXferProcessor* @_ZN21GrPorterDuffXPFactory15SimpleSrcOverXPEv() #11
  br label %121

121:                                              ; preds = %110, %119
  %122 = phi %class.GrXferProcessor* [ %120, %119 ], [ %117, %110 ]
  call void @_ZN12GrVkPipeline28SetDynamicBlendConstantStateEP7GrVkGpuP17GrVkCommandBufferRK9GrSwizzleRK15GrXferProcessor(%class.GrVkGpu* %113, %class.GrVkCommandBuffer* %72, %class.GrSwizzle* dereferenceable(2) %115, %class.GrXferProcessor* dereferenceable(24) %122) #11
  br label %123

123:                                              ; preds = %121, %86, %70
  %124 = phi i1 [ false, %70 ], [ true, %121 ], [ false, %86 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #11
  br label %125

125:                                              ; preds = %3, %123
  %126 = phi i1 [ %124, %123 ], [ false, %3 ]
  ret i1 %126
}

declare zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #4

declare %class.GrVkPipelineState* @_ZN20GrVkResourceProvider35findOrCreateCompatiblePipelineStateEP14GrRenderTargetRK13GrProgramInfoP14VkRenderPass_Tb(%class.GrVkResourceProvider*, %class.GrRenderTarget*, %class.GrProgramInfo* dereferenceable(128), %struct.VkRenderPass_T*, i1 zeroext) local_unnamed_addr #4

declare void @_ZN17GrVkPipelineState12bindPipelineEPK7GrVkGpuP17GrVkCommandBuffer(%class.GrVkPipelineState*, %class.GrVkGpu*, %class.GrVkCommandBuffer*) local_unnamed_addr #4

declare zeroext i1 @_ZN17GrVkPipelineState18setAndBindUniformsEP7GrVkGpu7SkISizeRK13GrProgramInfoP17GrVkCommandBuffer(%class.GrVkPipelineState*, %class.GrVkGpu*, i64, %class.GrProgramInfo* dereferenceable(128), %class.GrVkCommandBuffer*) local_unnamed_addr #4

declare void @_ZN12GrVkPipeline26SetDynamicScissorRectStateEP7GrVkGpuP17GrVkCommandBuffer7SkISize15GrSurfaceOriginRK7SkIRect(%class.GrVkGpu*, %class.GrVkCommandBuffer*, i64, i32, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZN12GrVkPipeline23SetDynamicViewportStateEP7GrVkGpuP17GrVkCommandBuffer7SkISize(%class.GrVkGpu*, %class.GrVkCommandBuffer*, i64) local_unnamed_addr #4

declare void @_ZN12GrVkPipeline28SetDynamicBlendConstantStateEP7GrVkGpuP17GrVkCommandBufferRK9GrSwizzleRK15GrXferProcessor(%class.GrVkGpu*, %class.GrVkCommandBuffer*, %class.GrSwizzle* dereferenceable(2), %class.GrXferProcessor* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrVkOpsRenderPass16onSetScissorRectERK7SkIRect(%class.GrVkOpsRenderPass*, %struct.SkIRect* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca %struct.SkIRect, align 8
  %4 = bitcast %struct.SkIRect* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #11
  %5 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 4
  %6 = bitcast %struct.SkIRect* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  %7 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %3, %struct.SkIRect* dereferenceable(16) %5, %struct.SkIRect* dereferenceable(16) %1) #11
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = bitcast %struct.SkIRect* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false)
  br label %10

10:                                               ; preds = %8, %2
  %11 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %12 = load %class.GrVkGpu*, %class.GrVkGpu** %11, align 8
  %13 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %14 = load %class.GrVkSecondaryCommandBuffer*, %class.GrVkSecondaryCommandBuffer** %13, align 8
  %15 = icmp eq %class.GrVkSecondaryCommandBuffer* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %10
  %17 = bitcast %class.GrVkSecondaryCommandBuffer* %14 to %class.GrVkCommandBuffer*
  br label %22

18:                                               ; preds = %10
  %19 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %12, i64 0, i32 13
  %20 = bitcast %class.GrVkPrimaryCommandBuffer** %19 to %class.GrVkCommandBuffer**
  %21 = load %class.GrVkCommandBuffer*, %class.GrVkCommandBuffer** %20, align 8
  br label %22

22:                                               ; preds = %16, %18
  %23 = phi %class.GrVkCommandBuffer* [ %17, %16 ], [ %21, %18 ]
  %24 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 1, i32 0
  %25 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %24, align 8
  %26 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %25, i64 0, i32 2, i32 0
  %27 = load %class.GrVkAttachment*, %class.GrVkAttachment** %26, align 8
  %28 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %27, i64 0, i32 0, i32 0, i32 1
  %29 = bitcast %struct.SkISize* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  call void @_ZN12GrVkPipeline26SetDynamicScissorRectStateEP7GrVkGpuP17GrVkCommandBuffer7SkISize15GrSurfaceOriginRK7SkIRect(%class.GrVkGpu* %12, %class.GrVkCommandBuffer* %23, i64 %30, i32 %32, %struct.SkIRect* nonnull dereferenceable(16) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #11
  ret void
}

declare zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17GrVkOpsRenderPass14onBindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipeline(%class.GrVkOpsRenderPass* nocapture readonly, %class.GrGeometryProcessor* dereferenceable(80), %class.GrSurfaceProxy**, %class.GrPipeline* dereferenceable(128)) unnamed_addr #0 align 2 {
  %5 = alloca %class.gr_sp.472, align 8
  %6 = alloca %class.gr_sp.472, align 8
  %7 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 5
  %8 = load %class.GrVkPipelineState*, %class.GrVkPipelineState** %7, align 8
  %9 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %10 = load %class.GrVkGpu*, %class.GrVkGpu** %9, align 8
  %11 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load %class.GrVkSecondaryCommandBuffer*, %class.GrVkSecondaryCommandBuffer** %11, align 8
  %13 = icmp eq %class.GrVkSecondaryCommandBuffer* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %4
  %15 = bitcast %class.GrVkSecondaryCommandBuffer* %12 to %class.GrVkCommandBuffer*
  br label %20

16:                                               ; preds = %4
  %17 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %10, i64 0, i32 13
  %18 = bitcast %class.GrVkPrimaryCommandBuffer** %17 to %class.GrVkCommandBuffer**
  %19 = load %class.GrVkCommandBuffer*, %class.GrVkCommandBuffer** %18, align 8
  br label %20

20:                                               ; preds = %14, %16
  %21 = phi %class.GrVkCommandBuffer* [ %15, %14 ], [ %19, %16 ]
  %22 = tail call zeroext i1 @_ZN17GrVkPipelineState18setAndBindTexturesEP7GrVkGpuRK19GrGeometryProcessorRK10GrPipelinePKPK14GrSurfaceProxyP17GrVkCommandBuffer(%class.GrVkPipelineState* %8, %class.GrVkGpu* %10, %class.GrGeometryProcessor* dereferenceable(80) %1, %class.GrPipeline* dereferenceable(128) %3, %class.GrSurfaceProxy** %2, %class.GrVkCommandBuffer* %21) #11
  br i1 %22, label %23, label %105

23:                                               ; preds = %20
  %24 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 8
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %105

27:                                               ; preds = %23
  %28 = bitcast %class.gr_sp.472* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  %29 = getelementptr inbounds %class.gr_sp.472, %class.gr_sp.472* %5, i64 0, i32 0
  store %class.GrVkDescriptorSet* inttoptr (i64 -6148914691236517206 to %class.GrVkDescriptorSet*), %class.GrVkDescriptorSet** %29, align 8
  %30 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 1, i32 0
  %31 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %30, align 8
  %32 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %31, i64 0, i32 2, i32 0
  %33 = load %class.GrVkAttachment*, %class.GrVkAttachment** %32, align 8
  %34 = load %class.GrVkGpu*, %class.GrVkGpu** %9, align 8
  call void @_ZN14GrVkAttachment23inputDescSetForBlendingEP7GrVkGpu(%class.gr_sp.472* nonnull sret %5, %class.GrVkAttachment* %33, %class.GrVkGpu* %34) #11
  %35 = load %class.GrVkDescriptorSet*, %class.GrVkDescriptorSet** %29, align 8
  %36 = icmp eq %class.GrVkDescriptorSet* %35, null
  br i1 %36, label %103, label %37

37:                                               ; preds = %27
  %38 = ptrtoint %class.GrVkDescriptorSet* %35 to i64
  %39 = load %class.GrVkPipelineState*, %class.GrVkPipelineState** %7, align 8
  %40 = load %class.GrVkGpu*, %class.GrVkGpu** %9, align 8
  store %class.GrVkDescriptorSet* null, %class.GrVkDescriptorSet** %29, align 8
  %41 = bitcast %class.gr_sp.472* %6 to i64*
  store i64 %38, i64* %41, align 8
  %42 = load %class.GrVkSecondaryCommandBuffer*, %class.GrVkSecondaryCommandBuffer** %11, align 8
  %43 = icmp eq %class.GrVkSecondaryCommandBuffer* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %37
  %45 = bitcast %class.GrVkSecondaryCommandBuffer* %42 to %class.GrVkCommandBuffer*
  br label %50

46:                                               ; preds = %37
  %47 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %40, i64 0, i32 13
  %48 = bitcast %class.GrVkPrimaryCommandBuffer** %47 to %class.GrVkCommandBuffer**
  %49 = load %class.GrVkCommandBuffer*, %class.GrVkCommandBuffer** %48, align 8
  br label %50

50:                                               ; preds = %44, %46
  %51 = phi %class.GrVkCommandBuffer* [ %45, %44 ], [ %49, %46 ]
  %52 = call zeroext i1 @_ZN17GrVkPipelineState25setAndBindInputAttachmentEP7GrVkGpu5gr_spIK17GrVkDescriptorSetXadL_ZNK17GrManagedResource3refEvEEXadL_ZNK18GrRecycledResource7recycleEvEEEP17GrVkCommandBuffer(%class.GrVkPipelineState* %39, %class.GrVkGpu* %40, %class.gr_sp.472* nonnull %6, %class.GrVkCommandBuffer* %51) #11
  %53 = getelementptr inbounds %class.gr_sp.472, %class.gr_sp.472* %6, i64 0, i32 0
  %54 = load %class.GrVkDescriptorSet*, %class.GrVkDescriptorSet** %53, align 8
  %55 = icmp eq %class.GrVkDescriptorSet* %54, null
  br i1 %55, label %78, label %56

56:                                               ; preds = %50
  %57 = bitcast %class.GrVkDescriptorSet* %54 to %class.GrManagedResource*
  %58 = getelementptr inbounds %class.GrVkDescriptorSet, %class.GrVkDescriptorSet* %54, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 acquire, align 4
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %61, label %67

61:                                               ; preds = %56
  %62 = bitcast %class.GrVkDescriptorSet* %54 to %class.GrRecycledResource*
  %63 = bitcast %class.GrVkDescriptorSet* %54 to void (%class.GrRecycledResource*)***
  %64 = load void (%class.GrRecycledResource*)**, void (%class.GrRecycledResource*)*** %63, align 8
  %65 = getelementptr inbounds void (%class.GrRecycledResource*)*, void (%class.GrRecycledResource*)** %64, i64 5
  %66 = load void (%class.GrRecycledResource*)*, void (%class.GrRecycledResource*)** %65, align 8
  call void %66(%class.GrRecycledResource* nonnull %62) #11
  br label %78

67:                                               ; preds = %56
  %68 = atomicrmw add i32* %58, i32 -1 acq_rel
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %70, label %78

70:                                               ; preds = %67
  %71 = bitcast %class.GrVkDescriptorSet* %54 to void (%class.GrManagedResource*)***
  %72 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %71, align 8
  %73 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %72, i64 4
  %74 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %73, align 8
  call void %74(%class.GrManagedResource* nonnull %57) #11
  %75 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %71, align 8
  %76 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %75, i64 1
  %77 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %76, align 8
  call void %77(%class.GrManagedResource* nonnull %57) #11
  br label %78

78:                                               ; preds = %70, %67, %61, %50
  %79 = load %class.GrVkDescriptorSet*, %class.GrVkDescriptorSet** %29, align 8
  %80 = icmp eq %class.GrVkDescriptorSet* %79, null
  br i1 %80, label %103, label %81

81:                                               ; preds = %78
  %82 = bitcast %class.GrVkDescriptorSet* %79 to %class.GrManagedResource*
  %83 = getelementptr inbounds %class.GrVkDescriptorSet, %class.GrVkDescriptorSet* %79, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 acquire, align 4
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %86, label %92

86:                                               ; preds = %81
  %87 = bitcast %class.GrVkDescriptorSet* %79 to %class.GrRecycledResource*
  %88 = bitcast %class.GrVkDescriptorSet* %79 to void (%class.GrRecycledResource*)***
  %89 = load void (%class.GrRecycledResource*)**, void (%class.GrRecycledResource*)*** %88, align 8
  %90 = getelementptr inbounds void (%class.GrRecycledResource*)*, void (%class.GrRecycledResource*)** %89, i64 5
  %91 = load void (%class.GrRecycledResource*)*, void (%class.GrRecycledResource*)** %90, align 8
  call void %91(%class.GrRecycledResource* nonnull %87) #11
  br label %103

92:                                               ; preds = %81
  %93 = atomicrmw add i32* %83, i32 -1 acq_rel
  %94 = icmp eq i32 %93, 1
  br i1 %94, label %95, label %103

95:                                               ; preds = %92
  %96 = bitcast %class.GrVkDescriptorSet* %79 to void (%class.GrManagedResource*)***
  %97 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %96, align 8
  %98 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %97, i64 4
  %99 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %98, align 8
  call void %99(%class.GrManagedResource* nonnull %82) #11
  %100 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %96, align 8
  %101 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %100, i64 1
  %102 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %101, align 8
  call void %102(%class.GrManagedResource* nonnull %82) #11
  br label %103

103:                                              ; preds = %27, %78, %86, %92, %95
  %104 = phi i1 [ %52, %78 ], [ %52, %86 ], [ %52, %92 ], [ %52, %95 ], [ false, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %105

105:                                              ; preds = %23, %20, %103
  %106 = phi i1 [ %104, %103 ], [ false, %20 ], [ true, %23 ]
  ret i1 %106
}

declare zeroext i1 @_ZN17GrVkPipelineState18setAndBindTexturesEP7GrVkGpuRK19GrGeometryProcessorRK10GrPipelinePKPK14GrSurfaceProxyP17GrVkCommandBuffer(%class.GrVkPipelineState*, %class.GrVkGpu*, %class.GrGeometryProcessor* dereferenceable(80), %class.GrPipeline* dereferenceable(128), %class.GrSurfaceProxy**, %class.GrVkCommandBuffer*) local_unnamed_addr #4

declare void @_ZN14GrVkAttachment23inputDescSetForBlendingEP7GrVkGpu(%class.gr_sp.472* sret, %class.GrVkAttachment*, %class.GrVkGpu*) local_unnamed_addr #4

declare zeroext i1 @_ZN17GrVkPipelineState25setAndBindInputAttachmentEP7GrVkGpu5gr_spIK17GrVkDescriptorSetXadL_ZNK17GrManagedResource3refEvEEXadL_ZNK18GrRecycledResource7recycleEvEEEP17GrVkCommandBuffer(%class.GrVkPipelineState*, %class.GrVkGpu*, %class.gr_sp.472*, %class.GrVkCommandBuffer*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrVkOpsRenderPass13onBindBuffersE5sk_spIK8GrBufferES3_S3_18GrPrimitiveRestart(%class.GrVkOpsRenderPass* nocapture readonly, %class.sk_sp.194* nocapture, %class.sk_sp.194* nocapture, %class.sk_sp.194* nocapture, i1 zeroext) unnamed_addr #0 align 2 {
  %6 = alloca %class.sk_sp.194, align 8
  %7 = alloca %class.sk_sp.194, align 8
  %8 = alloca %class.sk_sp.194, align 8
  %9 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 3
  %10 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %9, align 8
  %11 = icmp eq %class.GrVkRenderPass* %10, null
  br i1 %11, label %86, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %14 = load %class.GrVkSecondaryCommandBuffer*, %class.GrVkSecondaryCommandBuffer** %13, align 8
  %15 = icmp eq %class.GrVkSecondaryCommandBuffer* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %class.GrVkSecondaryCommandBuffer* %14 to %class.GrVkCommandBuffer*
  br label %24

18:                                               ; preds = %12
  %19 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %20 = load %class.GrVkGpu*, %class.GrVkGpu** %19, align 8
  %21 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %20, i64 0, i32 13
  %22 = bitcast %class.GrVkPrimaryCommandBuffer** %21 to %class.GrVkCommandBuffer**
  %23 = load %class.GrVkCommandBuffer*, %class.GrVkCommandBuffer** %22, align 8
  br label %24

24:                                               ; preds = %16, %18
  %25 = phi %class.GrVkCommandBuffer* [ %17, %16 ], [ %23, %18 ]
  %26 = getelementptr inbounds %class.sk_sp.194, %class.sk_sp.194* %3, i64 0, i32 0
  %27 = load %class.GrBuffer*, %class.GrBuffer** %26, align 8
  %28 = icmp ne %class.GrBuffer* %27, null
  %29 = getelementptr inbounds %class.GrBuffer, %class.GrBuffer* %27, i64 -19
  %30 = icmp ne %class.GrBuffer* %29, null
  %31 = and i1 %28, %30
  br i1 %31, label %32, label %45

32:                                               ; preds = %24
  %33 = ptrtoint %class.GrBuffer* %27 to i64
  %34 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %35 = load %class.GrVkGpu*, %class.GrVkGpu** %34, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %26, align 8
  %36 = bitcast %class.sk_sp.194* %6 to i64*
  store i64 %33, i64* %36, align 8
  call void @_ZN17GrVkCommandBuffer15bindInputBufferEP7GrVkGpuj5sk_spIK8GrBufferE(%class.GrVkCommandBuffer* %25, %class.GrVkGpu* %35, i32 0, %class.sk_sp.194* nonnull %6) #11
  %37 = getelementptr inbounds %class.sk_sp.194, %class.sk_sp.194* %6, i64 0, i32 0
  %38 = load %class.GrBuffer*, %class.GrBuffer** %37, align 8
  %39 = icmp eq %class.GrBuffer* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %32
  %41 = bitcast %class.GrBuffer* %38 to void (%class.GrBuffer*)***
  %42 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %41, align 8
  %43 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %42, i64 3
  %44 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %43, align 8
  call void %44(%class.GrBuffer* nonnull %38) #11
  br label %45

45:                                               ; preds = %40, %32, %24
  %46 = phi i32 [ 0, %24 ], [ 1, %32 ], [ 1, %40 ]
  %47 = getelementptr inbounds %class.sk_sp.194, %class.sk_sp.194* %2, i64 0, i32 0
  %48 = load %class.GrBuffer*, %class.GrBuffer** %47, align 8
  %49 = icmp ne %class.GrBuffer* %48, null
  %50 = getelementptr inbounds %class.GrBuffer, %class.GrBuffer* %48, i64 -19
  %51 = icmp ne %class.GrBuffer* %50, null
  %52 = and i1 %49, %51
  br i1 %52, label %53, label %66

53:                                               ; preds = %45
  %54 = ptrtoint %class.GrBuffer* %48 to i64
  %55 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %56 = load %class.GrVkGpu*, %class.GrVkGpu** %55, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %47, align 8
  %57 = bitcast %class.sk_sp.194* %7 to i64*
  store i64 %54, i64* %57, align 8
  call void @_ZN17GrVkCommandBuffer15bindInputBufferEP7GrVkGpuj5sk_spIK8GrBufferE(%class.GrVkCommandBuffer* %25, %class.GrVkGpu* %56, i32 %46, %class.sk_sp.194* nonnull %7) #11
  %58 = getelementptr inbounds %class.sk_sp.194, %class.sk_sp.194* %7, i64 0, i32 0
  %59 = load %class.GrBuffer*, %class.GrBuffer** %58, align 8
  %60 = icmp eq %class.GrBuffer* %59, null
  br i1 %60, label %66, label %61

61:                                               ; preds = %53
  %62 = bitcast %class.GrBuffer* %59 to void (%class.GrBuffer*)***
  %63 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %62, align 8
  %64 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %63, i64 3
  %65 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %64, align 8
  call void %65(%class.GrBuffer* nonnull %59) #11
  br label %66

66:                                               ; preds = %61, %53, %45
  %67 = getelementptr inbounds %class.sk_sp.194, %class.sk_sp.194* %1, i64 0, i32 0
  %68 = load %class.GrBuffer*, %class.GrBuffer** %67, align 8
  %69 = icmp ne %class.GrBuffer* %68, null
  %70 = getelementptr inbounds %class.GrBuffer, %class.GrBuffer* %68, i64 -19
  %71 = icmp ne %class.GrBuffer* %70, null
  %72 = and i1 %69, %71
  br i1 %72, label %73, label %86

73:                                               ; preds = %66
  %74 = ptrtoint %class.GrBuffer* %68 to i64
  %75 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %76 = load %class.GrVkGpu*, %class.GrVkGpu** %75, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %67, align 8
  %77 = bitcast %class.sk_sp.194* %8 to i64*
  store i64 %74, i64* %77, align 8
  call void @_ZN17GrVkCommandBuffer15bindIndexBufferEP7GrVkGpu5sk_spIK8GrBufferE(%class.GrVkCommandBuffer* %25, %class.GrVkGpu* %76, %class.sk_sp.194* nonnull %8) #11
  %78 = getelementptr inbounds %class.sk_sp.194, %class.sk_sp.194* %8, i64 0, i32 0
  %79 = load %class.GrBuffer*, %class.GrBuffer** %78, align 8
  %80 = icmp eq %class.GrBuffer* %79, null
  br i1 %80, label %86, label %81

81:                                               ; preds = %73
  %82 = bitcast %class.GrBuffer* %79 to void (%class.GrBuffer*)***
  %83 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %82, align 8
  %84 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %83, i64 3
  %85 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %84, align 8
  call void %85(%class.GrBuffer* nonnull %79) #11
  br label %86

86:                                               ; preds = %81, %73, %66, %5
  ret void
}

declare void @_ZN17GrVkCommandBuffer15bindInputBufferEP7GrVkGpuj5sk_spIK8GrBufferE(%class.GrVkCommandBuffer*, %class.GrVkGpu*, i32, %class.sk_sp.194*) local_unnamed_addr #4

declare void @_ZN17GrVkCommandBuffer15bindIndexBufferEP7GrVkGpu5sk_spIK8GrBufferE(%class.GrVkCommandBuffer*, %class.GrVkGpu*, %class.sk_sp.194*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrVkOpsRenderPass15onDrawInstancedEiiii(%class.GrVkOpsRenderPass* nocapture, i32, i32, i32, i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 3
  %7 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %6, align 8
  %8 = icmp eq %class.GrVkRenderPass* %7, null
  br i1 %8, label %27, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %11 = load %class.GrVkSecondaryCommandBuffer*, %class.GrVkSecondaryCommandBuffer** %10, align 8
  %12 = icmp eq %class.GrVkSecondaryCommandBuffer* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = bitcast %class.GrVkSecondaryCommandBuffer* %11 to %class.GrVkCommandBuffer*
  %15 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %16 = load %class.GrVkGpu*, %class.GrVkGpu** %15, align 8
  br label %23

17:                                               ; preds = %9
  %18 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %19 = load %class.GrVkGpu*, %class.GrVkGpu** %18, align 8
  %20 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %19, i64 0, i32 13
  %21 = bitcast %class.GrVkPrimaryCommandBuffer** %20 to %class.GrVkCommandBuffer**
  %22 = load %class.GrVkCommandBuffer*, %class.GrVkCommandBuffer** %21, align 8
  br label %23

23:                                               ; preds = %13, %17
  %24 = phi %class.GrVkGpu* [ %16, %13 ], [ %19, %17 ]
  %25 = phi %class.GrVkCommandBuffer* [ %14, %13 ], [ %22, %17 ]
  tail call void @_ZN17GrVkCommandBuffer4drawEPK7GrVkGpujjjj(%class.GrVkCommandBuffer* %25, %class.GrVkGpu* %24, i32 %3, i32 %1, i32 %4, i32 %2) #11
  %26 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 6
  store i8 0, i8* %26, align 8
  br label %27

27:                                               ; preds = %5, %23
  ret void
}

declare void @_ZN17GrVkCommandBuffer4drawEPK7GrVkGpujjjj(%class.GrVkCommandBuffer*, %class.GrVkGpu*, i32, i32, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrVkOpsRenderPass22onDrawIndexedInstancedEiiiii(%class.GrVkOpsRenderPass* nocapture, i32, i32, i32, i32, i32) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 3
  %8 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %7, align 8
  %9 = icmp eq %class.GrVkRenderPass* %8, null
  br i1 %9, label %28, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load %class.GrVkSecondaryCommandBuffer*, %class.GrVkSecondaryCommandBuffer** %11, align 8
  %13 = icmp eq %class.GrVkSecondaryCommandBuffer* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = bitcast %class.GrVkSecondaryCommandBuffer* %12 to %class.GrVkCommandBuffer*
  %16 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %17 = load %class.GrVkGpu*, %class.GrVkGpu** %16, align 8
  br label %24

18:                                               ; preds = %10
  %19 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %20 = load %class.GrVkGpu*, %class.GrVkGpu** %19, align 8
  %21 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %20, i64 0, i32 13
  %22 = bitcast %class.GrVkPrimaryCommandBuffer** %21 to %class.GrVkCommandBuffer**
  %23 = load %class.GrVkCommandBuffer*, %class.GrVkCommandBuffer** %22, align 8
  br label %24

24:                                               ; preds = %14, %18
  %25 = phi %class.GrVkGpu* [ %17, %14 ], [ %20, %18 ]
  %26 = phi %class.GrVkCommandBuffer* [ %15, %14 ], [ %23, %18 ]
  tail call void @_ZN17GrVkCommandBuffer11drawIndexedEPK7GrVkGpujjjij(%class.GrVkCommandBuffer* %26, %class.GrVkGpu* %25, i32 %1, i32 %3, i32 %2, i32 %5, i32 %4) #11
  %27 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 6
  store i8 0, i8* %27, align 8
  br label %28

28:                                               ; preds = %6, %24
  ret void
}

declare void @_ZN17GrVkCommandBuffer11drawIndexedEPK7GrVkGpujjjij(%class.GrVkCommandBuffer*, %class.GrVkGpu*, i32, i32, i32, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrVkOpsRenderPass14onDrawIndirectEPK8GrBuffermi(%class.GrVkOpsRenderPass* nocapture, %class.GrBuffer*, i64, i32) unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.194, align 8
  %6 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 3
  %7 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %6, align 8
  %8 = icmp eq %class.GrVkRenderPass* %7, null
  br i1 %8, label %62, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %11 = load %class.GrVkGpu*, %class.GrVkGpu** %10, align 8
  %12 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %11, i64 0, i32 3, i32 0
  %13 = load %class.GrVkCaps*, %class.GrVkCaps** %12, align 8
  %14 = getelementptr inbounds %class.GrVkCaps, %class.GrVkCaps* %13, i64 0, i32 31
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %3, 0
  br i1 %16, label %60, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %19 = icmp eq %class.GrBuffer* %1, null
  %20 = bitcast %class.GrBuffer* %1 to void (%class.GrBuffer*)***
  %21 = ptrtoint %class.GrBuffer* %1 to i64
  %22 = bitcast %class.sk_sp.194* %5 to i64*
  %23 = getelementptr inbounds %class.sk_sp.194, %class.sk_sp.194* %5, i64 0, i32 0
  br label %24

24:                                               ; preds = %17, %54
  %25 = phi i64 [ %2, %17 ], [ %58, %54 ]
  %26 = phi i32 [ %3, %17 ], [ %55, %54 ]
  %27 = icmp ult i32 %15, %26
  %28 = select i1 %27, i32 %15, i32 %26
  %29 = load %class.GrVkSecondaryCommandBuffer*, %class.GrVkSecondaryCommandBuffer** %18, align 8
  %30 = icmp eq %class.GrVkSecondaryCommandBuffer* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %24
  %32 = bitcast %class.GrVkSecondaryCommandBuffer* %29 to %class.GrVkCommandBuffer*
  %33 = load %class.GrVkGpu*, %class.GrVkGpu** %10, align 8
  br label %39

34:                                               ; preds = %24
  %35 = load %class.GrVkGpu*, %class.GrVkGpu** %10, align 8
  %36 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %35, i64 0, i32 13
  %37 = bitcast %class.GrVkPrimaryCommandBuffer** %36 to %class.GrVkCommandBuffer**
  %38 = load %class.GrVkCommandBuffer*, %class.GrVkCommandBuffer** %37, align 8
  br label %39

39:                                               ; preds = %31, %34
  %40 = phi %class.GrVkGpu* [ %33, %31 ], [ %35, %34 ]
  %41 = phi %class.GrVkCommandBuffer* [ %32, %31 ], [ %38, %34 ]
  br i1 %19, label %46, label %42

42:                                               ; preds = %39
  %43 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %20, align 8, !noalias !6
  %44 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %43, i64 2
  %45 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %44, align 8, !noalias !6
  call void %45(%class.GrBuffer* nonnull %1) #11, !noalias !6
  br label %46

46:                                               ; preds = %39, %42
  store i64 %21, i64* %22, align 8
  call void @_ZN17GrVkCommandBuffer12drawIndirectEPK7GrVkGpu5sk_spIK8GrBufferEmjj(%class.GrVkCommandBuffer* %41, %class.GrVkGpu* %40, %class.sk_sp.194* nonnull %5, i64 %25, i32 %28, i32 16) #11
  %47 = load %class.GrBuffer*, %class.GrBuffer** %23, align 8
  %48 = icmp eq %class.GrBuffer* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %46
  %50 = bitcast %class.GrBuffer* %47 to void (%class.GrBuffer*)***
  %51 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %50, align 8
  %52 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %51, i64 3
  %53 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %52, align 8
  call void %53(%class.GrBuffer* nonnull %47) #11
  br label %54

54:                                               ; preds = %49, %46
  %55 = sub i32 %26, %28
  %56 = zext i32 %28 to i64
  %57 = shl nuw nsw i64 %56, 4
  %58 = add i64 %57, %25
  %59 = icmp eq i32 %55, 0
  br i1 %59, label %60, label %24

60:                                               ; preds = %54, %9
  %61 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 6
  store i8 0, i8* %61, align 8
  br label %62

62:                                               ; preds = %4, %60
  ret void
}

declare void @_ZN17GrVkCommandBuffer12drawIndirectEPK7GrVkGpu5sk_spIK8GrBufferEmjj(%class.GrVkCommandBuffer*, %class.GrVkGpu*, %class.sk_sp.194*, i64, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrVkOpsRenderPass21onDrawIndexedIndirectEPK8GrBuffermi(%class.GrVkOpsRenderPass* nocapture, %class.GrBuffer*, i64, i32) unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.194, align 8
  %6 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 3
  %7 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %6, align 8
  %8 = icmp eq %class.GrVkRenderPass* %7, null
  br i1 %8, label %62, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %11 = load %class.GrVkGpu*, %class.GrVkGpu** %10, align 8
  %12 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %11, i64 0, i32 3, i32 0
  %13 = load %class.GrVkCaps*, %class.GrVkCaps** %12, align 8
  %14 = getelementptr inbounds %class.GrVkCaps, %class.GrVkCaps* %13, i64 0, i32 31
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %3, 0
  br i1 %16, label %60, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %19 = icmp eq %class.GrBuffer* %1, null
  %20 = bitcast %class.GrBuffer* %1 to void (%class.GrBuffer*)***
  %21 = ptrtoint %class.GrBuffer* %1 to i64
  %22 = bitcast %class.sk_sp.194* %5 to i64*
  %23 = getelementptr inbounds %class.sk_sp.194, %class.sk_sp.194* %5, i64 0, i32 0
  br label %24

24:                                               ; preds = %17, %54
  %25 = phi i64 [ %2, %17 ], [ %58, %54 ]
  %26 = phi i32 [ %3, %17 ], [ %55, %54 ]
  %27 = icmp ult i32 %15, %26
  %28 = select i1 %27, i32 %15, i32 %26
  %29 = load %class.GrVkSecondaryCommandBuffer*, %class.GrVkSecondaryCommandBuffer** %18, align 8
  %30 = icmp eq %class.GrVkSecondaryCommandBuffer* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %24
  %32 = bitcast %class.GrVkSecondaryCommandBuffer* %29 to %class.GrVkCommandBuffer*
  %33 = load %class.GrVkGpu*, %class.GrVkGpu** %10, align 8
  br label %39

34:                                               ; preds = %24
  %35 = load %class.GrVkGpu*, %class.GrVkGpu** %10, align 8
  %36 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %35, i64 0, i32 13
  %37 = bitcast %class.GrVkPrimaryCommandBuffer** %36 to %class.GrVkCommandBuffer**
  %38 = load %class.GrVkCommandBuffer*, %class.GrVkCommandBuffer** %37, align 8
  br label %39

39:                                               ; preds = %31, %34
  %40 = phi %class.GrVkGpu* [ %33, %31 ], [ %35, %34 ]
  %41 = phi %class.GrVkCommandBuffer* [ %32, %31 ], [ %38, %34 ]
  br i1 %19, label %46, label %42

42:                                               ; preds = %39
  %43 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %20, align 8, !noalias !9
  %44 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %43, i64 2
  %45 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %44, align 8, !noalias !9
  call void %45(%class.GrBuffer* nonnull %1) #11, !noalias !9
  br label %46

46:                                               ; preds = %39, %42
  store i64 %21, i64* %22, align 8
  call void @_ZN17GrVkCommandBuffer19drawIndexedIndirectEPK7GrVkGpu5sk_spIK8GrBufferEmjj(%class.GrVkCommandBuffer* %41, %class.GrVkGpu* %40, %class.sk_sp.194* nonnull %5, i64 %25, i32 %28, i32 20) #11
  %47 = load %class.GrBuffer*, %class.GrBuffer** %23, align 8
  %48 = icmp eq %class.GrBuffer* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %46
  %50 = bitcast %class.GrBuffer* %47 to void (%class.GrBuffer*)***
  %51 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %50, align 8
  %52 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %51, i64 3
  %53 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %52, align 8
  call void %53(%class.GrBuffer* nonnull %47) #11
  br label %54

54:                                               ; preds = %49, %46
  %55 = sub i32 %26, %28
  %56 = zext i32 %28 to i64
  %57 = mul nuw nsw i64 %56, 20
  %58 = add i64 %57, %25
  %59 = icmp eq i32 %55, 0
  br i1 %59, label %60, label %24

60:                                               ; preds = %54, %9
  %61 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 6
  store i8 0, i8* %61, align 8
  br label %62

62:                                               ; preds = %4, %60
  ret void
}

declare void @_ZN17GrVkCommandBuffer19drawIndexedIndirectEPK7GrVkGpu5sk_spIK8GrBufferEmjj(%class.GrVkCommandBuffer*, %class.GrVkGpu*, %class.sk_sp.194*, i64, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17GrVkOpsRenderPass17onExecuteDrawableENSt3__110unique_ptrIN10SkDrawable14GpuDrawHandlerENS0_14default_deleteIS3_EEEE(%class.GrVkOpsRenderPass*, %"class.SkDrawable::GpuDrawHandler"*) unnamed_addr #0 align 2 {
  %3 = alloca %struct.VkRect2D, align 4
  %4 = alloca %struct.GrVkDrawableInfo, align 8
  %5 = alloca %class.GrBackendDrawableInfo, align 8
  %6 = ptrtoint %"class.SkDrawable::GpuDrawHandler"* %1 to i64
  %7 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 3
  %8 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %7, align 8
  %9 = icmp eq %class.GrVkRenderPass* %8, null
  br i1 %9, label %79, label %10

10:                                               ; preds = %2
  %11 = bitcast %struct.VkRect2D* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #11
  %12 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %13 = bitcast %struct.VkRect2D* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 0, i64 16, i1 false)
  %14 = load %class.GrVkSecondaryCommandBuffer*, %class.GrVkSecondaryCommandBuffer** %12, align 8
  %15 = icmp eq %class.GrVkSecondaryCommandBuffer* %14, null
  br i1 %15, label %16, label %28

16:                                               ; preds = %10
  %17 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %18 = load %class.GrVkGpu*, %class.GrVkGpu** %17, align 8
  %19 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 0, i32 2
  %20 = load %class.GrRenderTarget*, %class.GrRenderTarget** %19, align 8
  %21 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 7
  tail call void @_ZN7GrVkGpu13endRenderPassEP14GrRenderTarget15GrSurfaceOriginRK7SkIRect(%class.GrVkGpu* %18, %class.GrRenderTarget* %20, i32 %22, %struct.SkIRect* dereferenceable(16) %23) #11
  tail call void @_ZN17GrVkOpsRenderPass23addAdditionalRenderPassEb(%class.GrVkOpsRenderPass* %0, i1 zeroext true)
  %24 = load %class.GrVkRenderPass*, %class.GrVkRenderPass** %7, align 8
  %25 = icmp eq %class.GrVkRenderPass* %24, null
  br i1 %25, label %77, label %26

26:                                               ; preds = %16
  %27 = load %class.GrVkSecondaryCommandBuffer*, %class.GrVkSecondaryCommandBuffer** %12, align 8
  br label %28

28:                                               ; preds = %26, %10
  %29 = phi %class.GrVkRenderPass* [ %24, %26 ], [ %8, %10 ]
  %30 = phi %class.GrVkSecondaryCommandBuffer* [ %27, %26 ], [ %14, %10 ]
  %31 = bitcast %struct.GrVkDrawableInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %31) #11
  %32 = getelementptr inbounds %struct.GrVkDrawableInfo, %struct.GrVkDrawableInfo* %4, i64 0, i32 1
  %33 = bitcast i32* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 40, i1 false)
  %34 = getelementptr inbounds %class.GrVkSecondaryCommandBuffer, %class.GrVkSecondaryCommandBuffer* %30, i64 0, i32 0, i32 9
  %35 = bitcast %struct.VkCommandBuffer_T** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %struct.GrVkDrawableInfo* %4 to i64*
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %class.GrVkRenderPass, %class.GrVkRenderPass* %29, i64 0, i32 1
  %39 = bitcast %struct.VkRenderPass_T** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %struct.GrVkDrawableInfo, %struct.GrVkDrawableInfo* %4, i64 0, i32 2
  %42 = bitcast %struct.VkRenderPass_T** %41 to i64*
  store i64 %40, i64* %42, align 8
  %43 = getelementptr inbounds %struct.GrVkDrawableInfo, %struct.GrVkDrawableInfo* %4, i64 0, i32 1
  %44 = call zeroext i1 @_ZNK14GrVkRenderPass20colorAttachmentIndexEPj(%class.GrVkRenderPass* nonnull %29, i32* %43) #11
  %45 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 1, i32 0
  %46 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %45, align 8
  %47 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %46, i64 0, i32 2, i32 0
  %48 = load %class.GrVkAttachment*, %class.GrVkAttachment** %47, align 8
  %49 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %48, i64 0, i32 1, i32 1, i32 4
  %50 = load i32, i32* %49, align 8
  %51 = getelementptr inbounds %struct.GrVkDrawableInfo, %struct.GrVkDrawableInfo* %4, i64 0, i32 3
  store i32 %50, i32* %51, align 8
  %52 = getelementptr inbounds %struct.GrVkDrawableInfo, %struct.GrVkDrawableInfo* %4, i64 0, i32 4
  store %struct.VkRect2D* %3, %struct.VkRect2D** %52, align 8
  %53 = getelementptr inbounds %struct.GrVkDrawableInfo, %struct.GrVkDrawableInfo* %4, i64 0, i32 5
  store %struct.VkImage_T* null, %struct.VkImage_T** %53, align 8
  %54 = getelementptr inbounds %class.GrBackendDrawableInfo, %class.GrBackendDrawableInfo* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %54) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 56, i1 false)
  store i8 1, i8* %54, align 8
  %55 = getelementptr inbounds %class.GrBackendDrawableInfo, %class.GrBackendDrawableInfo* %5, i64 0, i32 1
  store i32 1, i32* %55, align 4
  %56 = getelementptr inbounds %class.GrBackendDrawableInfo, %class.GrBackendDrawableInfo* %5, i64 0, i32 2
  %57 = bitcast %struct.GrVkDrawableInfo* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* nonnull align 8 %31, i64 48, i1 false) #11
  %58 = load %class.GrVkSecondaryCommandBuffer*, %class.GrVkSecondaryCommandBuffer** %12, align 8
  %59 = icmp eq %class.GrVkSecondaryCommandBuffer* %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %28
  %61 = bitcast %class.GrVkSecondaryCommandBuffer* %58 to %class.GrVkCommandBuffer*
  br label %68

62:                                               ; preds = %28
  %63 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %64 = load %class.GrVkGpu*, %class.GrVkGpu** %63, align 8
  %65 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %64, i64 0, i32 13
  %66 = bitcast %class.GrVkPrimaryCommandBuffer** %65 to %class.GrVkCommandBuffer**
  %67 = load %class.GrVkCommandBuffer*, %class.GrVkCommandBuffer** %66, align 8
  br label %68

68:                                               ; preds = %60, %62
  %69 = phi %class.GrVkCommandBuffer* [ %61, %60 ], [ %67, %62 ]
  call void @_ZN17GrVkCommandBuffer15invalidateStateEv(%class.GrVkCommandBuffer* %69) #11
  %70 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 6
  store i8 0, i8* %70, align 8
  %71 = bitcast %"class.SkDrawable::GpuDrawHandler"* %1 to void (%"class.SkDrawable::GpuDrawHandler"*, %class.GrBackendDrawableInfo*)***
  %72 = load void (%"class.SkDrawable::GpuDrawHandler"*, %class.GrBackendDrawableInfo*)**, void (%"class.SkDrawable::GpuDrawHandler"*, %class.GrBackendDrawableInfo*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.SkDrawable::GpuDrawHandler"*, %class.GrBackendDrawableInfo*)*, void (%"class.SkDrawable::GpuDrawHandler"*, %class.GrBackendDrawableInfo*)** %72, i64 2
  %74 = load void (%"class.SkDrawable::GpuDrawHandler"*, %class.GrBackendDrawableInfo*)*, void (%"class.SkDrawable::GpuDrawHandler"*, %class.GrBackendDrawableInfo*)** %73, align 8
  call void %74(%"class.SkDrawable::GpuDrawHandler"* %1, %class.GrBackendDrawableInfo* nonnull dereferenceable(56) %5) #11
  %75 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %0, i64 0, i32 11
  %76 = load %class.GrVkGpu*, %class.GrVkGpu** %75, align 8
  call void @_ZN7GrVkGpu11addDrawableENSt3__110unique_ptrIN10SkDrawable14GpuDrawHandlerENS0_14default_deleteIS3_EEEE(%class.GrVkGpu* %76, %"class.SkDrawable::GpuDrawHandler"* %1) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %54) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %31) #11
  br label %77

77:                                               ; preds = %16, %68
  %78 = phi i64 [ 0, %68 ], [ %6, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  br label %79

79:                                               ; preds = %2, %77
  %80 = phi i64 [ %6, %2 ], [ %78, %77 ]
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %88, label %82

82:                                               ; preds = %79
  %83 = inttoptr i64 %80 to %"class.SkDrawable::GpuDrawHandler"*
  %84 = inttoptr i64 %80 to void (%"class.SkDrawable::GpuDrawHandler"*)***
  %85 = load void (%"class.SkDrawable::GpuDrawHandler"*)**, void (%"class.SkDrawable::GpuDrawHandler"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.SkDrawable::GpuDrawHandler"*)*, void (%"class.SkDrawable::GpuDrawHandler"*)** %85, i64 1
  %87 = load void (%"class.SkDrawable::GpuDrawHandler"*)*, void (%"class.SkDrawable::GpuDrawHandler"*)** %86, align 8
  call void %87(%"class.SkDrawable::GpuDrawHandler"* nonnull %83) #11
  br label %88

88:                                               ; preds = %79, %82
  ret void
}

declare void @_ZN17GrVkCommandBuffer15invalidateStateEv(%class.GrVkCommandBuffer*) local_unnamed_addr #4

declare void @_ZN7GrVkGpu11addDrawableENSt3__110unique_ptrIN10SkDrawable14GpuDrawHandlerENS0_14default_deleteIS3_EEEE(%class.GrVkGpu*, %"class.SkDrawable::GpuDrawHandler"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15GrOpsRenderPass7onBeginEv(%class.GrOpsRenderPass*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17GrVkOpsRenderPass6onDrawEii(%class.GrVkOpsRenderPass*, i32, i32) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %class.GrVkOpsRenderPass* %0 to void (%class.GrVkOpsRenderPass*, i32, i32, i32, i32)***
  %5 = load void (%class.GrVkOpsRenderPass*, i32, i32, i32, i32)**, void (%class.GrVkOpsRenderPass*, i32, i32, i32, i32)*** %4, align 8
  %6 = getelementptr inbounds void (%class.GrVkOpsRenderPass*, i32, i32, i32, i32)*, void (%class.GrVkOpsRenderPass*, i32, i32, i32, i32)** %5, i64 12
  %7 = load void (%class.GrVkOpsRenderPass*, i32, i32, i32, i32)*, void (%class.GrVkOpsRenderPass*, i32, i32, i32, i32)** %6, align 8
  tail call void %7(%class.GrVkOpsRenderPass* %0, i32 1, i32 0, i32 %1, i32 %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17GrVkOpsRenderPass13onDrawIndexedEiitti(%class.GrVkOpsRenderPass*, i32, i32, i16 zeroext, i16 zeroext, i32) unnamed_addr #0 comdat align 2 {
  %7 = bitcast %class.GrVkOpsRenderPass* %0 to void (%class.GrVkOpsRenderPass*, i32, i32, i32, i32, i32)***
  %8 = load void (%class.GrVkOpsRenderPass*, i32, i32, i32, i32, i32)**, void (%class.GrVkOpsRenderPass*, i32, i32, i32, i32, i32)*** %7, align 8
  %9 = getelementptr inbounds void (%class.GrVkOpsRenderPass*, i32, i32, i32, i32, i32)*, void (%class.GrVkOpsRenderPass*, i32, i32, i32, i32, i32)** %8, i64 13
  %10 = load void (%class.GrVkOpsRenderPass*, i32, i32, i32, i32, i32)*, void (%class.GrVkOpsRenderPass*, i32, i32, i32, i32, i32)** %9, align 8
  tail call void %10(%class.GrVkOpsRenderPass* %0, i32 %1, i32 %2, i32 1, i32 0, i32 %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15GrOpsRenderPassD2Ev(%class.GrOpsRenderPass*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV15GrOpsRenderPass, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 5, i32 0
  %4 = load %class.GrBuffer*, %class.GrBuffer** %3, align 8
  %5 = icmp eq %class.GrBuffer* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.GrBuffer* %4 to void (%class.GrBuffer*)***
  %8 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %8, i64 3
  %10 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %9, align 8
  tail call void %10(%class.GrBuffer* nonnull %4) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 4, i32 0
  %13 = load %class.GrBuffer*, %class.GrBuffer** %12, align 8
  %14 = icmp eq %class.GrBuffer* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %class.GrBuffer* %13 to void (%class.GrBuffer*)***
  %17 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %17, i64 3
  %19 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %18, align 8
  tail call void %19(%class.GrBuffer* nonnull %13) #11
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %class.GrOpsRenderPass, %class.GrOpsRenderPass* %0, i64 0, i32 3, i32 0
  %22 = load %class.GrBuffer*, %class.GrBuffer** %21, align 8
  %23 = icmp eq %class.GrBuffer* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = bitcast %class.GrBuffer* %22 to void (%class.GrBuffer*)***
  %26 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %26, i64 3
  %28 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %27, align 8
  tail call void %28(%class.GrBuffer* nonnull %22) #11
  br label %29

29:                                               ; preds = %20, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15GrOpsRenderPassD0Ev(%class.GrOpsRenderPass*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15GrOpsRenderPass5onEndEv(%class.GrOpsRenderPass*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15GrOpsRenderPass14onDrawIndirectEPK8GrBuffermi(%class.GrOpsRenderPass*, %class.GrBuffer*, i64, i32) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3, i64 0, i64 0), i32 194, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #10
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15GrOpsRenderPass21onDrawIndexedIndirectEPK8GrBuffermi(%class.GrOpsRenderPass*, %class.GrBuffer*, i64, i32) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3, i64 0, i64 0), i32 197, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #10
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15GrOpsRenderPass17onExecuteDrawableENSt3__110unique_ptrIN10SkDrawable14GpuDrawHandlerENS0_14default_deleteIS3_EEEE(%class.GrOpsRenderPass*, %"class.SkDrawable::GpuDrawHandler"*) unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.SkDrawable::GpuDrawHandler"* %1, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.SkDrawable::GpuDrawHandler"* %1 to void (%"class.SkDrawable::GpuDrawHandler"*)***
  %6 = load void (%"class.SkDrawable::GpuDrawHandler"*)**, void (%"class.SkDrawable::GpuDrawHandler"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.SkDrawable::GpuDrawHandler"*)*, void (%"class.SkDrawable::GpuDrawHandler"*)** %6, i64 1
  %8 = load void (%"class.SkDrawable::GpuDrawHandler"*)*, void (%"class.SkDrawable::GpuDrawHandler"*)** %7, align 8
  tail call void %8(%"class.SkDrawable::GpuDrawHandler"* nonnull %1) #11
  br label %9

9:                                                ; preds = %2, %4
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZN9GrVkImage27setImageLayoutAndQueueIndexEPK7GrVkGpu13VkImageLayoutjjbj(%class.GrVkImage*, %class.GrVkGpu*, i32, i32, i32, i1 zeroext, i32) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

declare dereferenceable(24) %class.GrXferProcessor* @_ZN21GrPorterDuffXPFactory15SimpleSrcOverXPEv() local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { noreturn nounwind }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_Z9sk_ref_spI15GrVkFramebufferE5sk_spIT_EPKS2_: argument 0"}
!5 = distinct !{!5, !"_Z9sk_ref_spI15GrVkFramebufferE5sk_spIT_EPKS2_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_Z9sk_ref_spI8GrBufferE5sk_spIT_EPKS2_: argument 0"}
!8 = distinct !{!8, !"_Z9sk_ref_spI8GrBufferE5sk_spIT_EPKS2_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_Z9sk_ref_spI8GrBufferE5sk_spIT_EPKS2_: argument 0"}
!11 = distinct !{!11, !"_Z9sk_ref_spI8GrBufferE5sk_spIT_EPKS2_"}
