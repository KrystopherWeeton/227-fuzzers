; ModuleID = '../../third_party/pdfium/third_party/lcms/src/cmssamp.c'
source_filename = "../../third_party/pdfium/third_party/lcms/src/cmssamp.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.cmsCIEXYZ = type { double, double, double }
%struct.cmsCIELab = type { double, double, double }
%struct._cmsContext_struct = type { %struct._cmsContext_struct*, %struct._cmsSubAllocator*, [15 x i8*], %struct._cmsMemPluginChunkType }
%struct._cmsSubAllocator = type { %struct._cmsContext_struct*, %struct._cmsSubAllocator_chunk_st* }
%struct._cmsSubAllocator_chunk_st = type { i8*, i32, i32, %struct._cmsSubAllocator_chunk_st* }
%struct._cmsMemPluginChunkType = type { i8* (%struct._cmsContext_struct*, i32)*, i8* (%struct._cmsContext_struct*, i32)*, void (%struct._cmsContext_struct*, i8*)*, i8* (%struct._cmsContext_struct*, i8*, i32)*, i8* (%struct._cmsContext_struct*, i32, i32)*, i8* (%struct._cmsContext_struct*, i8*, i32)* }
%struct.cmsCIExyY = type { double, double, double }
%struct.cmsMAT3 = type { [3 x %struct.cmsVEC3] }
%struct.cmsVEC3 = type { [3 x double] }

@__const.CreateRoundtripXForm.States = private unnamed_addr constant [4 x double] [double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00], align 16

; Function Attrs: nounwind ssp uwtable
define hidden i32 @cmsDetectBlackPoint(%struct.cmsCIEXYZ*, i8*, i32, i32) local_unnamed_addr #0 {
  %5 = alloca [4 x i32], align 16
  %6 = alloca [4 x double], align 16
  %7 = alloca [4 x i8*], align 16
  %8 = alloca <4 x i32>, align 16
  %9 = alloca %struct.cmsCIELab, align 8
  %10 = alloca %struct.cmsCIELab, align 8
  %11 = alloca %struct.cmsCIEXYZ, align 8
  %12 = tail call i32 @cmsGetDeviceClass(i8* %1) #5
  switch i32 %12, label %15 [
    i32 1852662636, label %13
    i32 1818848875, label %13
    i32 1633842036, label %13
  ]

13:                                               ; preds = %4, %4, %4
  %14 = bitcast %struct.cmsCIEXYZ* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false)
  br label %83

15:                                               ; preds = %4
  %16 = icmp ugt i32 %2, 2
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = bitcast %struct.cmsCIEXYZ* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false)
  br label %83

19:                                               ; preds = %15
  %20 = tail call i32 @cmsGetEncodedICCversion(i8* %1) #5
  %21 = icmp ugt i32 %20, 67108863
  %22 = and i32 %2, -3
  %23 = icmp eq i32 %22, 0
  %24 = and i1 %23, %21
  br i1 %24, label %25, label %33

25:                                               ; preds = %19
  %26 = tail call i32 @cmsIsMatrixShaper(i8* %1) #5
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %25
  %29 = tail call fastcc i32 @BlackPointAsDarkerColorant(i8* %1, i32 1, %struct.cmsCIEXYZ* %0)
  br label %83

30:                                               ; preds = %25
  %31 = bitcast %struct.cmsCIEXYZ* %0 to <2 x double>*
  store <2 x double> <double 3.360000e-03, double 3.473100e-03>, <2 x double>* %31, align 8
  %32 = getelementptr inbounds %struct.cmsCIEXYZ, %struct.cmsCIEXYZ* %0, i64 0, i32 2
  store double 2.870000e-03, double* %32, align 8
  br label %83

33:                                               ; preds = %19
  %34 = icmp eq i32 %2, 1
  br i1 %34, label %35, label %81

35:                                               ; preds = %33
  %36 = tail call i32 @cmsGetDeviceClass(i8* %1) #5
  %37 = icmp eq i32 %36, 1886549106
  br i1 %37, label %38, label %81

38:                                               ; preds = %35
  %39 = tail call i32 @cmsGetColorSpace(i8* %1) #5
  %40 = icmp eq i32 %39, 1129142603
  br i1 %40, label %41, label %81

41:                                               ; preds = %38
  %42 = bitcast %struct.cmsCIELab* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #5
  %43 = bitcast %struct.cmsCIELab* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -1, i64 24, i1 false) #5
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #5
  %44 = getelementptr inbounds %struct.cmsCIELab, %struct.cmsCIELab* %10, i64 0, i32 0
  %45 = getelementptr inbounds %struct.cmsCIELab, %struct.cmsCIELab* %10, i64 0, i32 1
  %46 = bitcast %struct.cmsCIEXYZ* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -1, i64 24, i1 false) #5
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -1, i64 24, i1 false) #5
  %47 = tail call i32 @cmsIsIntentSupported(i8* %1, i32 0, i32 0) #5
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %41
  %50 = bitcast %struct.cmsCIEXYZ* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #5
  br label %79

51:                                               ; preds = %41
  %52 = tail call %struct._cmsContext_struct* @cmsGetProfileContextID(i8* %1) #5
  %53 = tail call i8* @cmsCreateLab4ProfileTHR(%struct._cmsContext_struct* %52, %struct.cmsCIExyY* null) #5
  %54 = bitcast [4 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %54, i8 0, i64 16, i1 false) #5
  %55 = bitcast [4 x double]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %55) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %55, i8* align 16 bitcast ([4 x double]* @__const.CreateRoundtripXForm.States to i8*), i64 32, i1 false) #5
  %56 = bitcast [4 x i8*]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %56) #5
  %57 = getelementptr inbounds [4 x i8*], [4 x i8*]* %7, i64 0, i64 0
  %58 = getelementptr inbounds [4 x i8*], [4 x i8*]* %7, i64 0, i64 1
  %59 = getelementptr inbounds [4 x i8*], [4 x i8*]* %7, i64 0, i64 2
  %60 = getelementptr inbounds [4 x i8*], [4 x i8*]* %7, i64 0, i64 3
  %61 = bitcast <4 x i32>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #5
  %62 = getelementptr inbounds <4 x i32>, <4 x i32>* %8, i64 0, i64 0
  store i8* %53, i8** %57, align 16
  store i8* %1, i8** %58, align 8
  store i8* %1, i8** %59, align 16
  store i8* %53, i8** %60, align 8
  store <4 x i32> <i32 1, i32 0, i32 1, i32 1>, <4 x i32>* %8, align 16
  %63 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 0, i64 0
  %64 = getelementptr inbounds [4 x double], [4 x double]* %6, i64 0, i64 0
  %65 = call i8* @cmsCreateExtendedTransform(%struct._cmsContext_struct* %52, i32 4, i8** nonnull %57, i32* nonnull %63, i32* nonnull %62, double* nonnull %64, i8* null, i32 0, i32 4849688, i32 4849688, i32 320) #5
  %66 = call i32 @cmsCloseProfile(i8* %53) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %56) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %55) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #5
  %67 = icmp eq i8* %65, null
  br i1 %67, label %68, label %70

68:                                               ; preds = %51
  %69 = bitcast %struct.cmsCIEXYZ* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 24, i1 false) #5
  br label %79

70:                                               ; preds = %51
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 0, i64 24, i1 false) #5
  call void @cmsDoTransform(i8* nonnull %65, i8* nonnull %42, i8* nonnull %43, i32 1) #5
  %71 = load double, double* %44, align 8
  %72 = fcmp ogt double %71, 5.000000e+01
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  store double 5.000000e+01, double* %44, align 8
  br label %74

74:                                               ; preds = %73, %70
  %75 = bitcast double* %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 16, i1 false) #5
  call void @cmsDeleteTransform(i8* nonnull %65) #5
  call void @cmsLab2XYZ(%struct.cmsCIEXYZ* null, %struct.cmsCIEXYZ* nonnull %11, %struct.cmsCIELab* nonnull %10) #5
  %76 = icmp eq %struct.cmsCIEXYZ* %0, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %74
  %78 = bitcast %struct.cmsCIEXYZ* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %78, i8* nonnull align 8 %46, i64 24, i1 false) #5
  br label %79

79:                                               ; preds = %49, %68, %74, %77
  %80 = phi i32 [ 0, %68 ], [ 1, %49 ], [ 1, %74 ], [ 1, %77 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #5
  br label %83

81:                                               ; preds = %38, %35, %33
  %82 = tail call fastcc i32 @BlackPointAsDarkerColorant(i8* %1, i32 %2, %struct.cmsCIEXYZ* %0)
  br label %83

83:                                               ; preds = %81, %79, %30, %28, %17, %13
  %84 = phi i32 [ 0, %13 ], [ 0, %17 ], [ %29, %28 ], [ 1, %30 ], [ %80, %79 ], [ %82, %81 ]
  ret i32 %84
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @cmsGetDeviceClass(i8*) local_unnamed_addr #2

declare i32 @cmsGetEncodedICCversion(i8*) local_unnamed_addr #2

declare i32 @cmsIsMatrixShaper(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @BlackPointAsDarkerColorant(i8*, i32, %struct.cmsCIEXYZ*) unnamed_addr #0 {
  %4 = alloca i16*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.cmsCIELab, align 8
  %7 = alloca %struct.cmsCIEXYZ, align 8
  %8 = bitcast i16** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #5
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %4, align 8
  %9 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #5
  store i32 -1431655766, i32* %5, align 4
  %10 = bitcast %struct.cmsCIELab* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #5
  %11 = getelementptr inbounds %struct.cmsCIELab, %struct.cmsCIELab* %6, i64 0, i32 0
  %12 = getelementptr inbounds %struct.cmsCIELab, %struct.cmsCIELab* %6, i64 0, i32 1
  %13 = bitcast %struct.cmsCIEXYZ* %7 to i8*
  %14 = bitcast %struct.cmsCIELab* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -1, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #5
  %15 = bitcast %struct.cmsCIEXYZ* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -1, i64 24, i1 false)
  %16 = tail call %struct._cmsContext_struct* @cmsGetProfileContextID(i8* %0) #5
  %17 = tail call i32 @cmsIsIntentSupported(i8* %0, i32 %1, i32 0) #5
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %3
  %20 = bitcast %struct.cmsCIEXYZ* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false)
  br label %57

21:                                               ; preds = %3
  %22 = tail call i32 @cmsFormatterForColorspaceOfProfile(i8* %0, i32 2, i32 0) #5
  %23 = tail call i32 @cmsGetColorSpace(i8* %0) #5
  %24 = call i32 @_cmsEndPointsBySpace(i32 %23, i16** null, i16** nonnull %4, i32* nonnull %5) #5
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %21
  %27 = bitcast %struct.cmsCIEXYZ* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false)
  br label %57

28:                                               ; preds = %21
  %29 = load i32, i32* %5, align 4
  %30 = lshr i32 %22, 3
  %31 = and i32 %30, 15
  %32 = icmp eq i32 %29, %31
  br i1 %32, label %35, label %33

33:                                               ; preds = %28
  %34 = bitcast %struct.cmsCIEXYZ* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false)
  br label %57

35:                                               ; preds = %28
  %36 = call i8* @cmsCreateLab2ProfileTHR(%struct._cmsContext_struct* %16, %struct.cmsCIExyY* null) #5
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40

38:                                               ; preds = %35
  %39 = bitcast %struct.cmsCIEXYZ* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false)
  br label %57

40:                                               ; preds = %35
  %41 = call i8* @cmsCreateTransformTHR(%struct._cmsContext_struct* %16, i8* %0, i32 %22, i8* nonnull %36, i32 4849688, i32 %1, i32 320) #5
  %42 = call i32 @cmsCloseProfile(i8* nonnull %36) #5
  %43 = icmp eq i8* %41, null
  br i1 %43, label %44, label %46

44:                                               ; preds = %40
  %45 = bitcast %struct.cmsCIEXYZ* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 24, i1 false)
  br label %57

46:                                               ; preds = %40
  %47 = bitcast i16** %4 to i8**
  %48 = load i8*, i8** %47, align 8
  call void @cmsDoTransform(i8* nonnull %41, i8* %48, i8* nonnull %10, i32 1) #5
  %49 = bitcast double* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false)
  %50 = load double, double* %11, align 8
  %51 = fcmp ogt double %50, 5.000000e+01
  br i1 %51, label %52, label %53

52:                                               ; preds = %46
  store double 5.000000e+01, double* %11, align 8
  br label %53

53:                                               ; preds = %52, %46
  call void @cmsDeleteTransform(i8* nonnull %41) #5
  call void @cmsLab2XYZ(%struct.cmsCIEXYZ* null, %struct.cmsCIEXYZ* nonnull %7, %struct.cmsCIELab* nonnull %6) #5
  %54 = icmp eq %struct.cmsCIEXYZ* %2, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = bitcast %struct.cmsCIEXYZ* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %56, i8* nonnull align 8 %13, i64 24, i1 false)
  br label %57

57:                                               ; preds = %55, %53, %44, %38, %33, %26, %19
  %58 = phi i32 [ 0, %33 ], [ 0, %38 ], [ 0, %44 ], [ 0, %26 ], [ 0, %19 ], [ 1, %53 ], [ 1, %55 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #5
  ret i32 %58
}

declare i32 @cmsGetColorSpace(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @cmsDetectDestinationBlackPoint(%struct.cmsCIEXYZ*, i8*, i32, i32) local_unnamed_addr #0 {
  %5 = alloca %struct.cmsMAT3, align 8
  %6 = alloca %struct.cmsVEC3, align 8
  %7 = alloca %struct.cmsVEC3, align 8
  %8 = alloca [4 x i32], align 16
  %9 = alloca [4 x double], align 16
  %10 = alloca [4 x i8*], align 16
  %11 = alloca [4 x i32], align 16
  %12 = alloca %struct.cmsCIELab, align 8
  %13 = alloca %struct.cmsCIELab, align 8
  %14 = alloca %struct.cmsCIELab, align 8
  %15 = alloca [256 x double], align 16
  %16 = alloca [256 x double], align 16
  %17 = alloca [256 x double], align 16
  %18 = alloca [256 x double], align 16
  %19 = alloca [256 x double], align 16
  %20 = alloca %struct.cmsCIEXYZ, align 8
  %21 = bitcast %struct.cmsCIELab* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #5
  %22 = getelementptr inbounds %struct.cmsCIELab, %struct.cmsCIELab* %12, i64 0, i32 1
  %23 = getelementptr inbounds %struct.cmsCIELab, %struct.cmsCIELab* %12, i64 0, i32 2
  %24 = bitcast %struct.cmsCIELab* %13 to i8*
  %25 = bitcast %struct.cmsCIELab* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -1, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #5
  %26 = bitcast %struct.cmsCIELab* %14 to i8*
  %27 = bitcast %struct.cmsCIELab* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -1, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #5
  %28 = getelementptr inbounds %struct.cmsCIELab, %struct.cmsCIELab* %14, i64 0, i32 0
  %29 = getelementptr inbounds %struct.cmsCIELab, %struct.cmsCIELab* %14, i64 0, i32 1
  %30 = getelementptr inbounds %struct.cmsCIELab, %struct.cmsCIELab* %14, i64 0, i32 2
  %31 = bitcast [256 x double]* %15 to i8*
  %32 = bitcast %struct.cmsCIELab* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -1, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %31) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %31, i8 -1, i64 2048, i1 false)
  %33 = bitcast [256 x double]* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %33) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %33, i8 -1, i64 2048, i1 false)
  %34 = bitcast [256 x double]* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %34) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -1, i64 2048, i1 false)
  %35 = bitcast [256 x double]* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %35) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %35, i8 -1, i64 2048, i1 false)
  %36 = bitcast [256 x double]* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %36) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %36, i8 -1, i64 2048, i1 false)
  %37 = tail call i32 @cmsGetDeviceClass(i8* %1) #5
  switch i32 %37, label %40 [
    i32 1852662636, label %38
    i32 1818848875, label %38
    i32 1633842036, label %38
  ]

38:                                               ; preds = %4, %4, %4
  %39 = bitcast %struct.cmsCIEXYZ* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false)
  br label %310

40:                                               ; preds = %4
  %41 = icmp ugt i32 %2, 2
  br i1 %41, label %42, label %44

42:                                               ; preds = %40
  %43 = bitcast %struct.cmsCIEXYZ* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false)
  br label %310

44:                                               ; preds = %40
  %45 = tail call i32 @cmsGetEncodedICCversion(i8* %1) #5
  %46 = icmp ugt i32 %45, 67108863
  %47 = and i32 %2, -3
  %48 = icmp eq i32 %47, 0
  %49 = and i1 %48, %46
  br i1 %49, label %50, label %58

50:                                               ; preds = %44
  %51 = tail call i32 @cmsIsMatrixShaper(i8* %1) #5
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %50
  %54 = tail call fastcc i32 @BlackPointAsDarkerColorant(i8* %1, i32 1, %struct.cmsCIEXYZ* %0)
  br label %310

55:                                               ; preds = %50
  %56 = bitcast %struct.cmsCIEXYZ* %0 to <2 x double>*
  store <2 x double> <double 3.360000e-03, double 3.473100e-03>, <2 x double>* %56, align 8
  %57 = getelementptr inbounds %struct.cmsCIEXYZ, %struct.cmsCIEXYZ* %0, i64 0, i32 2
  store double 2.870000e-03, double* %57, align 8
  br label %310

58:                                               ; preds = %44
  %59 = tail call i32 @cmsGetColorSpace(i8* %1) #5
  %60 = tail call i32 @cmsIsCLUT(i8* %1, i32 %2, i32 1) #5
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %63, label %62

62:                                               ; preds = %58
  switch i32 %59, label %63 [
    i32 1380401696, label %65
    i32 1196573017, label %65
    i32 1129142603, label %65
  ]

63:                                               ; preds = %62, %58
  %64 = tail call i32 @cmsDetectBlackPoint(%struct.cmsCIEXYZ* %0, i8* %1, i32 %2, i32 undef)
  br label %310

65:                                               ; preds = %62, %62, %62
  %66 = icmp eq i32 %2, 1
  br i1 %66, label %67, label %74

67:                                               ; preds = %65
  %68 = bitcast %struct.cmsCIEXYZ* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #5
  %69 = bitcast %struct.cmsCIEXYZ* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -1, i64 24, i1 false)
  %70 = call i32 @cmsDetectBlackPoint(%struct.cmsCIEXYZ* nonnull %20, i8* %1, i32 1, i32 undef)
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %73, label %72

72:                                               ; preds = %67
  call void @cmsXYZ2Lab(%struct.cmsCIEXYZ* null, %struct.cmsCIELab* nonnull %12, %struct.cmsCIEXYZ* nonnull %20) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #5
  br label %76

73:                                               ; preds = %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #5
  br label %310

74:                                               ; preds = %65
  %75 = bitcast %struct.cmsCIELab* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 0, i64 24, i1 false)
  br label %76

76:                                               ; preds = %72, %74
  %77 = call %struct._cmsContext_struct* @cmsGetProfileContextID(i8* %1) #5
  %78 = call i8* @cmsCreateLab4ProfileTHR(%struct._cmsContext_struct* %77, %struct.cmsCIExyY* null) #5
  %79 = bitcast [4 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %79, i8 0, i64 16, i1 false) #5
  %80 = bitcast [4 x double]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %80) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %80, i8* align 16 bitcast ([4 x double]* @__const.CreateRoundtripXForm.States to i8*), i64 32, i1 false) #5
  %81 = bitcast [4 x i8*]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %81) #5
  %82 = getelementptr inbounds [4 x i8*], [4 x i8*]* %10, i64 0, i64 0
  %83 = getelementptr inbounds [4 x i8*], [4 x i8*]* %10, i64 0, i64 1
  %84 = getelementptr inbounds [4 x i8*], [4 x i8*]* %10, i64 0, i64 2
  %85 = getelementptr inbounds [4 x i8*], [4 x i8*]* %10, i64 0, i64 3
  %86 = bitcast [4 x i32]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %86) #5
  %87 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 0
  %88 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 1
  %89 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 2
  %90 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 3
  store i8* %78, i8** %82, align 16
  store i8* %1, i8** %83, align 8
  store i8* %1, i8** %84, align 16
  store i8* %78, i8** %85, align 8
  store i32 1, i32* %87, align 16
  store i32 %2, i32* %88, align 4
  store i32 1, i32* %89, align 8
  store i32 1, i32* %90, align 4
  %91 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 0
  %92 = getelementptr inbounds [4 x double], [4 x double]* %9, i64 0, i64 0
  %93 = call i8* @cmsCreateExtendedTransform(%struct._cmsContext_struct* %77, i32 4, i8** nonnull %82, i32* nonnull %91, i32* nonnull %87, double* nonnull %92, i8* null, i32 0, i32 4849688, i32 4849688, i32 320) #5
  %94 = call i32 @cmsCloseProfile(i8* %78) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %86) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %81) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %80) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #5
  %95 = icmp eq i8* %93, null
  br i1 %95, label %310, label %96

96:                                               ; preds = %76
  %97 = bitcast %struct.cmsCIELab* %14 to i64*
  %98 = bitcast %struct.cmsCIELab* %13 to i64*
  br label %99

99:                                               ; preds = %99, %96
  %100 = phi i64 [ 0, %96 ], [ %121, %99 ]
  %101 = trunc i64 %100 to i32
  %102 = sitofp i32 %101 to double
  %103 = fmul double %102, 1.000000e+02
  %104 = fdiv double %103, 2.550000e+02
  store double %104, double* %28, align 8
  %105 = load double, double* %22, align 8
  %106 = fcmp olt double %105, -5.000000e+01
  %107 = select i1 %106, double -5.000000e+01, double %105
  %108 = fcmp ogt double %107, 5.000000e+01
  %109 = select i1 %108, double 5.000000e+01, double %107
  store double %109, double* %29, align 8
  %110 = load double, double* %23, align 8
  %111 = fcmp olt double %110, -5.000000e+01
  %112 = select i1 %111, double -5.000000e+01, double %110
  %113 = fcmp ogt double %112, 5.000000e+01
  %114 = select i1 %113, double 5.000000e+01, double %112
  store double %114, double* %30, align 8
  call void @cmsDoTransform(i8* nonnull %93, i8* nonnull %26, i8* nonnull %24, i32 1) #5
  %115 = load i64, i64* %97, align 8
  %116 = getelementptr inbounds [256 x double], [256 x double]* %15, i64 0, i64 %100
  %117 = bitcast double* %116 to i64*
  store i64 %115, i64* %117, align 8
  %118 = load i64, i64* %98, align 8
  %119 = getelementptr inbounds [256 x double], [256 x double]* %16, i64 0, i64 %100
  %120 = bitcast double* %119 to i64*
  store i64 %118, i64* %120, align 8
  %121 = add nuw nsw i64 %100, 1
  %122 = icmp eq i64 %121, 256
  br i1 %122, label %123, label %99

123:                                              ; preds = %99
  %124 = getelementptr inbounds [256 x double], [256 x double]* %16, i64 0, i64 255
  %125 = load double, double* %124, align 8
  br label %126

126:                                              ; preds = %126, %123
  %127 = phi double [ %125, %123 ], [ %137, %126 ]
  %128 = phi i64 [ 254, %123 ], [ %138, %126 ]
  %129 = getelementptr inbounds [256 x double], [256 x double]* %16, i64 0, i64 %128
  %130 = load double, double* %129, align 16
  %131 = fcmp olt double %130, %127
  %132 = select i1 %131, double %130, double %127
  store double %132, double* %129, align 16
  %133 = add nsw i64 %128, -1
  %134 = getelementptr inbounds [256 x double], [256 x double]* %16, i64 0, i64 %133
  %135 = load double, double* %134, align 8
  %136 = fcmp olt double %135, %132
  %137 = select i1 %136, double %135, double %132
  store double %137, double* %134, align 8
  %138 = add nsw i64 %128, -2
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %126

140:                                              ; preds = %126
  %141 = getelementptr inbounds [256 x double], [256 x double]* %16, i64 0, i64 0
  %142 = load double, double* %141, align 16
  %143 = load double, double* %124, align 8
  %144 = fcmp olt double %142, %143
  br i1 %144, label %147, label %145

145:                                              ; preds = %140
  call void @cmsDeleteTransform(i8* nonnull %93) #5
  %146 = bitcast %struct.cmsCIEXYZ* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %146, i8 0, i64 24, i1 false)
  br label %310

147:                                              ; preds = %140
  %148 = fsub double %143, %142
  br i1 %66, label %149, label %174

149:                                              ; preds = %147
  %150 = fmul double %148, 2.000000e-01
  %151 = fadd double %142, %150
  br label %152

152:                                              ; preds = %342, %149
  %153 = phi i64 [ 0, %149 ], [ %344, %342 ]
  %154 = phi i32 [ 1, %149 ], [ %343, %342 ]
  %155 = getelementptr inbounds [256 x double], [256 x double]* %15, i64 0, i64 %153
  %156 = load double, double* %155, align 16
  %157 = fcmp ugt double %156, %151
  br i1 %157, label %158, label %165

158:                                              ; preds = %152
  %159 = getelementptr inbounds [256 x double], [256 x double]* %16, i64 0, i64 %153
  %160 = load double, double* %159, align 16
  %161 = fsub double %156, %160
  %162 = call double @llvm.fabs.f64(double %161)
  %163 = fcmp olt double %162, 4.000000e+00
  br i1 %163, label %165, label %164

164:                                              ; preds = %158
  br label %165

165:                                              ; preds = %152, %158, %164
  %166 = phi i32 [ %154, %152 ], [ %154, %158 ], [ 0, %164 ]
  %167 = or i64 %153, 1
  %168 = getelementptr inbounds [256 x double], [256 x double]* %15, i64 0, i64 %167
  %169 = load double, double* %168, align 8
  %170 = fcmp ugt double %169, %151
  br i1 %170, label %335, label %342

171:                                              ; preds = %342
  %172 = icmp eq i32 %343, 0
  br i1 %172, label %174, label %173

173:                                              ; preds = %171
  call void @cmsLab2XYZ(%struct.cmsCIEXYZ* null, %struct.cmsCIEXYZ* %0, %struct.cmsCIELab* nonnull %12) #5
  call void @cmsDeleteTransform(i8* nonnull %93) #5
  br label %310

174:                                              ; preds = %147, %171
  %175 = fsub double %142, %142
  %176 = fdiv double %175, %148
  %177 = getelementptr inbounds [256 x double], [256 x double]* %17, i64 0, i64 0
  store double %176, double* %177, align 16
  %178 = insertelement <2 x double> undef, double %142, i32 0
  %179 = shufflevector <2 x double> %178, <2 x double> undef, <2 x i32> zeroinitializer
  %180 = insertelement <2 x double> undef, double %148, i32 0
  %181 = shufflevector <2 x double> %180, <2 x double> undef, <2 x i32> zeroinitializer
  br label %182

182:                                              ; preds = %325, %174
  %183 = phi i64 [ 0, %174 ], [ %334, %325 ]
  %184 = or i64 %183, 1
  %185 = getelementptr inbounds [256 x double], [256 x double]* %16, i64 0, i64 %184
  %186 = bitcast double* %185 to <2 x double>*
  %187 = load <2 x double>, <2 x double>* %186, align 8
  %188 = fsub <2 x double> %187, %179
  %189 = fdiv <2 x double> %188, %181
  %190 = getelementptr inbounds [256 x double], [256 x double]* %17, i64 0, i64 %184
  %191 = bitcast double* %190 to <2 x double>*
  store <2 x double> %189, <2 x double>* %191, align 8
  %192 = or i64 %183, 2
  %193 = icmp eq i64 %192, 254
  br i1 %193, label %194, label %325, !llvm.loop !2

194:                                              ; preds = %182
  %195 = getelementptr inbounds [256 x double], [256 x double]* %16, i64 0, i64 255
  %196 = load double, double* %195, align 8
  %197 = fsub double %196, %142
  %198 = fdiv double %197, %148
  %199 = getelementptr inbounds [256 x double], [256 x double]* %17, i64 0, i64 255
  store double %198, double* %199, align 8
  %200 = select i1 %66, double 1.000000e-01, double 3.000000e-02
  %201 = select i1 %66, double 5.000000e-01, double 2.500000e-01
  br label %202

202:                                              ; preds = %321, %194
  %203 = phi i64 [ 0, %194 ], [ %323, %321 ]
  %204 = phi i32 [ 0, %194 ], [ %322, %321 ]
  %205 = getelementptr inbounds [256 x double], [256 x double]* %17, i64 0, i64 %203
  %206 = load double, double* %205, align 16
  %207 = fcmp oge double %206, %200
  %208 = fcmp olt double %206, %201
  %209 = and i1 %207, %208
  br i1 %209, label %210, label %219

210:                                              ; preds = %202
  %211 = getelementptr inbounds [256 x double], [256 x double]* %15, i64 0, i64 %203
  %212 = bitcast double* %211 to i64*
  %213 = load i64, i64* %212, align 16
  %214 = sext i32 %204 to i64
  %215 = getelementptr inbounds [256 x double], [256 x double]* %18, i64 0, i64 %214
  %216 = bitcast double* %215 to i64*
  store i64 %213, i64* %216, align 8
  %217 = getelementptr inbounds [256 x double], [256 x double]* %19, i64 0, i64 %214
  store double %206, double* %217, align 8
  %218 = add nsw i32 %204, 1
  br label %219

219:                                              ; preds = %202, %210
  %220 = phi i32 [ %218, %210 ], [ %204, %202 ]
  %221 = or i64 %203, 1
  %222 = getelementptr inbounds [256 x double], [256 x double]* %17, i64 0, i64 %221
  %223 = load double, double* %222, align 8
  %224 = fcmp oge double %223, %200
  %225 = fcmp olt double %223, %201
  %226 = and i1 %224, %225
  br i1 %226, label %312, label %321

227:                                              ; preds = %321
  %228 = icmp slt i32 %322, 3
  br i1 %228, label %229, label %231

229:                                              ; preds = %227
  call void @cmsDeleteTransform(i8* nonnull %93) #5
  %230 = bitcast %struct.cmsCIEXYZ* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %230, i8 0, i64 24, i1 false)
  br label %310

231:                                              ; preds = %227
  %232 = bitcast %struct.cmsMAT3* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %232) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %232, i8 -1, i64 72, i1 false) #5
  %233 = bitcast %struct.cmsVEC3* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %233) #5
  %234 = bitcast %struct.cmsVEC3* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %233, i8 -1, i64 24, i1 false) #5
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %234) #5
  %235 = getelementptr inbounds %struct.cmsVEC3, %struct.cmsVEC3* %7, i64 0, i32 0, i64 0
  %236 = getelementptr inbounds %struct.cmsVEC3, %struct.cmsVEC3* %7, i64 0, i32 0, i64 1
  %237 = getelementptr inbounds %struct.cmsVEC3, %struct.cmsVEC3* %7, i64 0, i32 0, i64 2
  %238 = icmp eq i32 %322, 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %234, i8 -1, i64 24, i1 false) #5
  br i1 %238, label %303, label %239

239:                                              ; preds = %231
  %240 = zext i32 %322 to i64
  br label %241

241:                                              ; preds = %241, %239
  %242 = phi i64 [ 0, %239 ], [ %266, %241 ]
  %243 = phi double [ 0.000000e+00, %239 ], [ %254, %241 ]
  %244 = phi double [ 0.000000e+00, %239 ], [ %265, %241 ]
  %245 = phi double [ 0.000000e+00, %239 ], [ %263, %241 ]
  %246 = phi double [ 0.000000e+00, %239 ], [ %261, %241 ]
  %247 = phi double [ 0.000000e+00, %239 ], [ %260, %241 ]
  %248 = phi double [ 0.000000e+00, %239 ], [ %258, %241 ]
  %249 = phi double [ 0.000000e+00, %239 ], [ %256, %241 ]
  %250 = getelementptr inbounds [256 x double], [256 x double]* %18, i64 0, i64 %242
  %251 = load double, double* %250, align 8
  %252 = getelementptr inbounds [256 x double], [256 x double]* %19, i64 0, i64 %242
  %253 = load double, double* %252, align 8
  %254 = fadd double %243, %251
  %255 = fmul double %251, %251
  %256 = fadd double %249, %255
  %257 = fmul double %251, %255
  %258 = fadd double %248, %257
  %259 = fmul double %251, %257
  %260 = fadd double %247, %259
  %261 = fadd double %246, %253
  %262 = fmul double %251, %253
  %263 = fadd double %245, %262
  %264 = fmul double %251, %262
  %265 = fadd double %244, %264
  %266 = add nuw nsw i64 %242, 1
  %267 = icmp eq i64 %266, %240
  br i1 %267, label %268, label %241

268:                                              ; preds = %241
  %269 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %5, i64 0, i32 0, i64 0
  %270 = sitofp i32 %322 to double
  call void @_cmsVEC3init(%struct.cmsVEC3* nonnull %269, double %270, double %254, double %256) #5
  %271 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %5, i64 0, i32 0, i64 1
  call void @_cmsVEC3init(%struct.cmsVEC3* %271, double %254, double %256, double %258) #5
  %272 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %5, i64 0, i32 0, i64 2
  call void @_cmsVEC3init(%struct.cmsVEC3* %272, double %256, double %258, double %260) #5
  call void @_cmsVEC3init(%struct.cmsVEC3* nonnull %6, double %261, double %263, double %265) #5
  %273 = call i32 @_cmsMAT3solve(%struct.cmsVEC3* nonnull %7, %struct.cmsMAT3* nonnull %5, %struct.cmsVEC3* nonnull %6) #5
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %303, label %275

275:                                              ; preds = %268
  %276 = load double, double* %237, align 8
  %277 = load double, double* %236, align 8
  %278 = load double, double* %235, align 8
  %279 = call double @llvm.fabs.f64(double %276) #5
  %280 = fcmp olt double %279, 1.000000e-10
  br i1 %280, label %281, label %288

281:                                              ; preds = %275
  %282 = fsub double -0.000000e+00, %278
  %283 = fdiv double %282, %277
  %284 = fcmp olt double %283, 5.000000e+01
  %285 = fcmp ogt double %283, 0.000000e+00
  %286 = or i1 %284, %285
  %287 = select i1 %286, double 0.000000e+00, double %283
  br label %303

288:                                              ; preds = %275
  %289 = fmul double %277, %277
  %290 = fmul double %276, 4.000000e+00
  %291 = fmul double %290, %278
  %292 = fsub double %289, %291
  %293 = fcmp ugt double %292, 0.000000e+00
  br i1 %293, label %294, label %303

294:                                              ; preds = %288
  %295 = call double @sqrt(double %292) #5
  %296 = fsub double %295, %277
  %297 = fmul double %276, 2.000000e+00
  %298 = fdiv double %296, %297
  %299 = fcmp ogt double %298, 5.000000e+01
  %300 = select i1 %299, double 5.000000e+01, double %298
  %301 = fcmp olt double %300, 0.000000e+00
  %302 = select i1 %301, double 0.000000e+00, double %300
  br label %303

303:                                              ; preds = %231, %268, %281, %288, %294
  %304 = phi double [ 0.000000e+00, %231 ], [ 0.000000e+00, %268 ], [ %287, %281 ], [ 0.000000e+00, %288 ], [ %302, %294 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %234) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %233) #5
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %232) #5
  %305 = fcmp olt double %304, 0.000000e+00
  %306 = select i1 %305, double 0.000000e+00, double %304
  store double %306, double* %28, align 8
  %307 = bitcast double* %22 to <2 x i64>*
  %308 = load <2 x i64>, <2 x i64>* %307, align 8
  %309 = bitcast double* %29 to <2 x i64>*
  store <2 x i64> %308, <2 x i64>* %309, align 8
  call void @cmsLab2XYZ(%struct.cmsCIEXYZ* null, %struct.cmsCIEXYZ* %0, %struct.cmsCIELab* nonnull %14) #5
  call void @cmsDeleteTransform(i8* nonnull %93) #5
  br label %310

310:                                              ; preds = %76, %73, %303, %229, %173, %145, %63, %55, %53, %42, %38
  %311 = phi i32 [ 0, %38 ], [ 0, %42 ], [ %54, %53 ], [ 1, %55 ], [ %64, %63 ], [ 1, %173 ], [ 0, %229 ], [ 1, %303 ], [ 0, %145 ], [ 0, %73 ], [ 0, %76 ]
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %36) #5
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %35) #5
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %34) #5
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %33) #5
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %31) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #5
  ret i32 %311

312:                                              ; preds = %219
  %313 = getelementptr inbounds [256 x double], [256 x double]* %15, i64 0, i64 %221
  %314 = bitcast double* %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = sext i32 %220 to i64
  %317 = getelementptr inbounds [256 x double], [256 x double]* %18, i64 0, i64 %316
  %318 = bitcast double* %317 to i64*
  store i64 %315, i64* %318, align 8
  %319 = getelementptr inbounds [256 x double], [256 x double]* %19, i64 0, i64 %316
  store double %223, double* %319, align 8
  %320 = add nsw i32 %220, 1
  br label %321

321:                                              ; preds = %312, %219
  %322 = phi i32 [ %320, %312 ], [ %220, %219 ]
  %323 = add nuw nsw i64 %203, 2
  %324 = icmp eq i64 %323, 256
  br i1 %324, label %227, label %202

325:                                              ; preds = %182
  %326 = or i64 %183, 3
  %327 = getelementptr inbounds [256 x double], [256 x double]* %16, i64 0, i64 %326
  %328 = bitcast double* %327 to <2 x double>*
  %329 = load <2 x double>, <2 x double>* %328, align 8
  %330 = fsub <2 x double> %329, %179
  %331 = fdiv <2 x double> %330, %181
  %332 = getelementptr inbounds [256 x double], [256 x double]* %17, i64 0, i64 %326
  %333 = bitcast double* %332 to <2 x double>*
  store <2 x double> %331, <2 x double>* %333, align 8
  %334 = add nuw nsw i64 %183, 4
  br label %182

335:                                              ; preds = %165
  %336 = getelementptr inbounds [256 x double], [256 x double]* %16, i64 0, i64 %167
  %337 = load double, double* %336, align 8
  %338 = fsub double %169, %337
  %339 = call double @llvm.fabs.f64(double %338)
  %340 = fcmp olt double %339, 4.000000e+00
  br i1 %340, label %342, label %341

341:                                              ; preds = %335
  br label %342

342:                                              ; preds = %341, %335, %165
  %343 = phi i32 [ %166, %165 ], [ %166, %335 ], [ 0, %341 ]
  %344 = add nuw nsw i64 %153, 2
  %345 = icmp eq i64 %344, 256
  br i1 %345, label %171, label %152
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @cmsIsCLUT(i8*, i32, i32) local_unnamed_addr #2

declare void @cmsXYZ2Lab(%struct.cmsCIEXYZ*, %struct.cmsCIELab*, %struct.cmsCIEXYZ*) local_unnamed_addr #2

declare void @cmsDoTransform(i8*, i8*, i8*, i32) local_unnamed_addr #2

declare void @cmsDeleteTransform(i8*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #3

declare void @cmsLab2XYZ(%struct.cmsCIEXYZ*, %struct.cmsCIEXYZ*, %struct.cmsCIELab*) local_unnamed_addr #2

declare %struct._cmsContext_struct* @cmsGetProfileContextID(i8*) local_unnamed_addr #2

declare i32 @cmsIsIntentSupported(i8*, i32, i32) local_unnamed_addr #2

declare i32 @cmsFormatterForColorspaceOfProfile(i8*, i32, i32) local_unnamed_addr #2

declare i32 @_cmsEndPointsBySpace(i32, i16**, i16**, i32*) local_unnamed_addr #2

declare i8* @cmsCreateLab2ProfileTHR(%struct._cmsContext_struct*, %struct.cmsCIExyY*) local_unnamed_addr #2

declare i8* @cmsCreateTransformTHR(%struct._cmsContext_struct*, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #2

declare i32 @cmsCloseProfile(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i8* @cmsCreateLab4ProfileTHR(%struct._cmsContext_struct*, %struct.cmsCIExyY*) local_unnamed_addr #2

declare i8* @cmsCreateExtendedTransform(%struct._cmsContext_struct*, i32, i8**, i32*, i32*, double*, i8*, i32, i32, i32, i32) local_unnamed_addr #2

declare void @_cmsVEC3init(%struct.cmsVEC3*, double, double, double) local_unnamed_addr #2

declare i32 @_cmsMAT3solve(%struct.cmsVEC3*, %struct.cmsMAT3*, %struct.cmsVEC3*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare double @sqrt(double) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
