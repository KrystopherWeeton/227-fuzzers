; ModuleID = '../../v8/src/codegen/register-configuration.cc'
source_filename = "../../v8/src/codegen/register-configuration.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::base::LeakyObject" = type { %"struct.std::__1::aligned_storage<336, 8>::type" }
%"struct.std::__1::aligned_storage<336, 8>::type" = type { [336 x i8] }
%"class.v8::base::LeakyObject.7" = type { %"struct.std::__1::aligned_storage<336, 8>::type" }
%"class.v8::internal::RegisterConfiguration" = type <{ i32 (...)**, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32*, [32 x i32], i32*, [32 x i32], i32, [4 x i8] }>
%"class.v8::internal::(anonymous namespace)::ArchDefaultRegisterConfiguration" = type { %"class.v8::internal::RegisterConfiguration.base", [4 x i8] }
%"class.v8::internal::RegisterConfiguration.base" = type <{ i32 (...)**, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32*, [32 x i32], i32*, [32 x i32], i32 }>
%"class.v8::internal::(anonymous namespace)::ArchDefaultPoisoningRegisterConfiguration" = type { %"class.v8::internal::RegisterConfiguration.base", [4 x i8] }
%"class.v8::internal::(anonymous namespace)::RestrictedRegisterConfiguration" = type { %"class.v8::internal::RegisterConfiguration.base", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.1" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i8** }

$_ZN2v88internal21RegisterConfigurationD0Ev = comdat any

$_ZN2v88internal21RegisterConfigurationD2Ev = comdat any

$_ZTVN2v88internal21RegisterConfigurationE = comdat any

$_ZZN2v88internal12RegisterNameENS0_8RegisterEE5Names = comdat any

@_ZTVN2v88internal21RegisterConfigurationE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::RegisterConfiguration"*)* @_ZN2v88internal21RegisterConfigurationD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::RegisterConfiguration"*)* @_ZN2v88internal21RegisterConfigurationD0Ev to i8*)] }, comdat, align 8
@_ZZN2v88internal12_GLOBAL__N_131GetDefaultRegisterConfigurationEvE6object = internal global %"class.v8::base::LeakyObject" zeroinitializer, align 8
@_ZGVZN2v88internal12_GLOBAL__N_131GetDefaultRegisterConfigurationEvE6object = internal global i64 0, align 8
@_ZN2v88internal12_GLOBAL__N_124kAllocatableGeneralCodesE = internal constant [11 x i32] [i32 0, i32 3, i32 2, i32 1, i32 6, i32 7, i32 8, i32 9, i32 11, i32 12, i32 15], align 16
@_ZTVN2v88internal12_GLOBAL__N_132ArchDefaultRegisterConfigurationE = internal unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::RegisterConfiguration"*)* @_ZN2v88internal21RegisterConfigurationD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::(anonymous namespace)::ArchDefaultRegisterConfiguration"*)* @_ZN2v88internal12_GLOBAL__N_132ArchDefaultRegisterConfigurationD0Ev to i8*)] }, align 8
@_ZN2v88internal12_GLOBAL__N_123kAllocatableDoubleCodesE = internal constant [15 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14], align 16
@_ZZN2v88internal12_GLOBAL__N_140GetDefaultPoisoningRegisterConfigurationEvE6object = internal global %"class.v8::base::LeakyObject.7" zeroinitializer, align 8
@_ZGVZN2v88internal12_GLOBAL__N_140GetDefaultPoisoningRegisterConfigurationEvE6object = internal global i64 0, align 8
@_ZTVN2v88internal12_GLOBAL__N_141ArchDefaultPoisoningRegisterConfigurationE = internal unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::RegisterConfiguration"*)* @_ZN2v88internal21RegisterConfigurationD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::(anonymous namespace)::ArchDefaultPoisoningRegisterConfiguration"*)* @_ZN2v88internal12_GLOBAL__N_141ArchDefaultPoisoningRegisterConfigurationD0Ev to i8*)] }, align 8
@_ZN2v88internal12_GLOBAL__N_141ArchDefaultPoisoningRegisterConfiguration26allocatable_general_codes_E = internal global [10 x i32] zeroinitializer, align 16
@_ZZN2v88internal12RegisterNameENS0_8RegisterEE5Names = linkonce_odr hidden local_unnamed_addr constant [16 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i32 0, i32 0)], comdat, align 16
@.str = private unnamed_addr constant [4 x i8] c"rax\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"rcx\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"rdx\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"rbx\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"rsp\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"rbp\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"rsi\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"rdi\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"r8\00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c"r9\00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c"r10\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"r11\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"r12\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"r13\00", align 1
@.str.15 = private unnamed_addr constant [4 x i8] c"r14\00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"r15\00", align 1
@_ZTVN2v88internal12_GLOBAL__N_131RestrictedRegisterConfigurationE = internal unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::(anonymous namespace)::RestrictedRegisterConfiguration"*)* @_ZN2v88internal12_GLOBAL__N_131RestrictedRegisterConfigurationD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::(anonymous namespace)::RestrictedRegisterConfiguration"*)* @_ZN2v88internal12_GLOBAL__N_131RestrictedRegisterConfigurationD0Ev to i8*)] }, align 8

@_ZN2v88internal21RegisterConfigurationC1EiiiiPKiS3_NS1_12AliasingKindE = hidden unnamed_addr alias void (%"class.v8::internal::RegisterConfiguration"*, i32, i32, i32, i32, i32*, i32*, i32), void (%"class.v8::internal::RegisterConfiguration"*, i32, i32, i32, i32, i32*, i32*, i32)* @_ZN2v88internal21RegisterConfigurationC2EiiiiPKiS3_NS1_12AliasingKindE

; Function Attrs: nofree nounwind ssp uwtable
define hidden %"class.v8::internal::RegisterConfiguration"* @_ZN2v88internal21RegisterConfiguration7DefaultEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN2v88internal12_GLOBAL__N_131GetDefaultRegisterConfigurationEvE6object to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2v88internal12_GLOBAL__N_131GetDefaultRegisterConfigurationEvE6object) #11
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store i32* getelementptr inbounds ([11 x i32], [11 x i32]* @_ZN2v88internal12_GLOBAL__N_124kAllocatableGeneralCodesE, i64 0, i64 0), i32** bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject", %"class.v8::base::LeakyObject"* @_ZZN2v88internal12_GLOBAL__N_131GetDefaultRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 56) to i32**), align 8
  store i32* getelementptr inbounds ([15 x i32], [15 x i32]* @_ZN2v88internal12_GLOBAL__N_123kAllocatableDoubleCodesE, i64 0, i64 0), i32** bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject", %"class.v8::base::LeakyObject"* @_ZZN2v88internal12_GLOBAL__N_131GetDefaultRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 192) to i32**), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject", %"class.v8::base::LeakyObject"* @_ZZN2v88internal12_GLOBAL__N_131GetDefaultRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 328) to i32*), align 8
  store i32 39887, i32* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject", %"class.v8::base::LeakyObject"* @_ZZN2v88internal12_GLOBAL__N_131GetDefaultRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 40) to i32*), align 8
  store i32 32767, i32* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject", %"class.v8::base::LeakyObject"* @_ZZN2v88internal12_GLOBAL__N_131GetDefaultRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 48) to i32*), align 8
  store <4 x i32> <i32 16, i32 16, i32 16, i32 16>, <4 x i32>* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject", %"class.v8::base::LeakyObject"* @_ZZN2v88internal12_GLOBAL__N_131GetDefaultRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 8) to <4 x i32>*), align 8
  store <4 x i32> <i32 11, i32 15, i32 15, i32 15>, <4 x i32>* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject", %"class.v8::base::LeakyObject"* @_ZZN2v88internal12_GLOBAL__N_131GetDefaultRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 24) to <4 x i32>*), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject", %"class.v8::base::LeakyObject"* @_ZZN2v88internal12_GLOBAL__N_131GetDefaultRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 200) to i32*), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject", %"class.v8::base::LeakyObject"* @_ZZN2v88internal12_GLOBAL__N_131GetDefaultRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 64) to i32*), align 8
  store i32 1, i32* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject", %"class.v8::base::LeakyObject"* @_ZZN2v88internal12_GLOBAL__N_131GetDefaultRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 204) to i32*), align 4
  store <4 x i32> <i32 1, i32 2, i32 3, i32 4>, <4 x i32>* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject", %"class.v8::base::LeakyObject"* @_ZZN2v88internal12_GLOBAL__N_131GetDefaultRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 68) to <4 x i32>*), align 4
  store <4 x i32> <i32 2, i32 3, i32 4, i32 5>, <4 x i32>* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject", %"class.v8::base::LeakyObject"* @_ZZN2v88internal12_GLOBAL__N_131GetDefaultRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 208) to <4 x i32>*), align 8
  store <4 x i32> <i32 5, i32 6, i32 7, i32 8>, <4 x i32>* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject", %"class.v8::base::LeakyObject"* @_ZZN2v88internal12_GLOBAL__N_131GetDefaultRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 84) to <4 x i32>*), align 4
  store <4 x i32> <i32 6, i32 7, i32 8, i32 9>, <4 x i32>* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject", %"class.v8::base::LeakyObject"* @_ZZN2v88internal12_GLOBAL__N_131GetDefaultRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 224) to <4 x i32>*), align 8
  store <4 x i32> <i32 9, i32 10, i32 11, i32 12>, <4 x i32>* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject", %"class.v8::base::LeakyObject"* @_ZZN2v88internal12_GLOBAL__N_131GetDefaultRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 100) to <4 x i32>*), align 4
  store <4 x i32> <i32 10, i32 11, i32 12, i32 13>, <4 x i32>* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject", %"class.v8::base::LeakyObject"* @_ZZN2v88internal12_GLOBAL__N_131GetDefaultRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 240) to <4 x i32>*), align 8
  store i32 13, i32* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject", %"class.v8::base::LeakyObject"* @_ZZN2v88internal12_GLOBAL__N_131GetDefaultRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 116) to i32*), align 4
  store i32 14, i32* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject", %"class.v8::base::LeakyObject"* @_ZZN2v88internal12_GLOBAL__N_131GetDefaultRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 256) to i32*), align 8
  store i32 14, i32* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject", %"class.v8::base::LeakyObject"* @_ZZN2v88internal12_GLOBAL__N_131GetDefaultRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 120) to i32*), align 8
  store i32 32767, i32* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject", %"class.v8::base::LeakyObject"* @_ZZN2v88internal12_GLOBAL__N_131GetDefaultRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 52) to i32*), align 4
  store i32 32767, i32* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject", %"class.v8::base::LeakyObject"* @_ZZN2v88internal12_GLOBAL__N_131GetDefaultRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 44) to i32*), align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal12_GLOBAL__N_132ArchDefaultRegisterConfigurationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** bitcast (%"class.v8::base::LeakyObject"* @_ZZN2v88internal12_GLOBAL__N_131GetDefaultRegisterConfigurationEvE6object to i32 (...)***), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN2v88internal12_GLOBAL__N_131GetDefaultRegisterConfigurationEvE6object) #11
  br label %7

7:                                                ; preds = %0, %3, %6
  ret %"class.v8::internal::RegisterConfiguration"* bitcast (%"class.v8::base::LeakyObject"* @_ZZN2v88internal12_GLOBAL__N_131GetDefaultRegisterConfigurationEvE6object to %"class.v8::internal::RegisterConfiguration"*)
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden %"class.v8::internal::RegisterConfiguration"* @_ZN2v88internal21RegisterConfiguration9PoisoningEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN2v88internal12_GLOBAL__N_140GetDefaultPoisoningRegisterConfigurationEvE6object to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2v88internal12_GLOBAL__N_140GetDefaultPoisoningRegisterConfigurationEvE6object) #11
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store <4 x i32> <i32 0, i32 3, i32 2, i32 1>, <4 x i32>* bitcast ([10 x i32]* @_ZN2v88internal12_GLOBAL__N_141ArchDefaultPoisoningRegisterConfiguration26allocatable_general_codes_E to <4 x i32>*), align 16
  store <4 x i32> <i32 6, i32 7, i32 8, i32 9>, <4 x i32>* bitcast (i32* getelementptr inbounds ([10 x i32], [10 x i32]* @_ZN2v88internal12_GLOBAL__N_141ArchDefaultPoisoningRegisterConfiguration26allocatable_general_codes_E, i64 0, i64 4) to <4 x i32>*), align 16
  store i32 12, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @_ZN2v88internal12_GLOBAL__N_141ArchDefaultPoisoningRegisterConfiguration26allocatable_general_codes_E, i64 0, i64 8), align 16
  store i32 15, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @_ZN2v88internal12_GLOBAL__N_141ArchDefaultPoisoningRegisterConfiguration26allocatable_general_codes_E, i64 0, i64 9), align 4
  store i32* getelementptr inbounds ([10 x i32], [10 x i32]* @_ZN2v88internal12_GLOBAL__N_141ArchDefaultPoisoningRegisterConfiguration26allocatable_general_codes_E, i64 0, i64 0), i32** bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject.7", %"class.v8::base::LeakyObject.7"* @_ZZN2v88internal12_GLOBAL__N_140GetDefaultPoisoningRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 56) to i32**), align 8
  store i32* getelementptr inbounds ([15 x i32], [15 x i32]* @_ZN2v88internal12_GLOBAL__N_123kAllocatableDoubleCodesE, i64 0, i64 0), i32** bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject.7", %"class.v8::base::LeakyObject.7"* @_ZZN2v88internal12_GLOBAL__N_140GetDefaultPoisoningRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 192) to i32**), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject.7", %"class.v8::base::LeakyObject.7"* @_ZZN2v88internal12_GLOBAL__N_140GetDefaultPoisoningRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 328) to i32*), align 8
  store i32 37839, i32* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject.7", %"class.v8::base::LeakyObject.7"* @_ZZN2v88internal12_GLOBAL__N_140GetDefaultPoisoningRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 40) to i32*), align 8
  store i32 32767, i32* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject.7", %"class.v8::base::LeakyObject.7"* @_ZZN2v88internal12_GLOBAL__N_140GetDefaultPoisoningRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 48) to i32*), align 8
  store <4 x i32> <i32 16, i32 16, i32 16, i32 16>, <4 x i32>* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject.7", %"class.v8::base::LeakyObject.7"* @_ZZN2v88internal12_GLOBAL__N_140GetDefaultPoisoningRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 8) to <4 x i32>*), align 8
  store <4 x i32> <i32 10, i32 15, i32 15, i32 15>, <4 x i32>* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject.7", %"class.v8::base::LeakyObject.7"* @_ZZN2v88internal12_GLOBAL__N_140GetDefaultPoisoningRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 24) to <4 x i32>*), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject.7", %"class.v8::base::LeakyObject.7"* @_ZZN2v88internal12_GLOBAL__N_140GetDefaultPoisoningRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 200) to i32*), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject.7", %"class.v8::base::LeakyObject.7"* @_ZZN2v88internal12_GLOBAL__N_140GetDefaultPoisoningRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 64) to i32*), align 8
  store i32 1, i32* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject.7", %"class.v8::base::LeakyObject.7"* @_ZZN2v88internal12_GLOBAL__N_140GetDefaultPoisoningRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 204) to i32*), align 4
  store <4 x i32> <i32 1, i32 2, i32 3, i32 4>, <4 x i32>* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject.7", %"class.v8::base::LeakyObject.7"* @_ZZN2v88internal12_GLOBAL__N_140GetDefaultPoisoningRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 68) to <4 x i32>*), align 4
  store <4 x i32> <i32 2, i32 3, i32 4, i32 5>, <4 x i32>* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject.7", %"class.v8::base::LeakyObject.7"* @_ZZN2v88internal12_GLOBAL__N_140GetDefaultPoisoningRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 208) to <4 x i32>*), align 8
  store <4 x i32> <i32 5, i32 6, i32 7, i32 8>, <4 x i32>* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject.7", %"class.v8::base::LeakyObject.7"* @_ZZN2v88internal12_GLOBAL__N_140GetDefaultPoisoningRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 84) to <4 x i32>*), align 4
  store <4 x i32> <i32 6, i32 7, i32 8, i32 9>, <4 x i32>* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject.7", %"class.v8::base::LeakyObject.7"* @_ZZN2v88internal12_GLOBAL__N_140GetDefaultPoisoningRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 224) to <4 x i32>*), align 8
  store <4 x i32> <i32 9, i32 10, i32 11, i32 12>, <4 x i32>* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject.7", %"class.v8::base::LeakyObject.7"* @_ZZN2v88internal12_GLOBAL__N_140GetDefaultPoisoningRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 100) to <4 x i32>*), align 4
  store <4 x i32> <i32 10, i32 11, i32 12, i32 13>, <4 x i32>* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject.7", %"class.v8::base::LeakyObject.7"* @_ZZN2v88internal12_GLOBAL__N_140GetDefaultPoisoningRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 240) to <4 x i32>*), align 8
  store i32 13, i32* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject.7", %"class.v8::base::LeakyObject.7"* @_ZZN2v88internal12_GLOBAL__N_140GetDefaultPoisoningRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 116) to i32*), align 4
  store i32 14, i32* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject.7", %"class.v8::base::LeakyObject.7"* @_ZZN2v88internal12_GLOBAL__N_140GetDefaultPoisoningRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 256) to i32*), align 8
  store i32 14, i32* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject.7", %"class.v8::base::LeakyObject.7"* @_ZZN2v88internal12_GLOBAL__N_140GetDefaultPoisoningRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 120) to i32*), align 8
  store i32 32767, i32* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject.7", %"class.v8::base::LeakyObject.7"* @_ZZN2v88internal12_GLOBAL__N_140GetDefaultPoisoningRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 52) to i32*), align 4
  store i32 32767, i32* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject.7", %"class.v8::base::LeakyObject.7"* @_ZZN2v88internal12_GLOBAL__N_140GetDefaultPoisoningRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 44) to i32*), align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal12_GLOBAL__N_141ArchDefaultPoisoningRegisterConfigurationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** bitcast (%"class.v8::base::LeakyObject.7"* @_ZZN2v88internal12_GLOBAL__N_140GetDefaultPoisoningRegisterConfigurationEvE6object to i32 (...)***), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN2v88internal12_GLOBAL__N_140GetDefaultPoisoningRegisterConfigurationEvE6object) #11
  br label %7

7:                                                ; preds = %0, %3, %6
  ret %"class.v8::internal::RegisterConfiguration"* bitcast (%"class.v8::base::LeakyObject.7"* @_ZZN2v88internal12_GLOBAL__N_140GetDefaultPoisoningRegisterConfigurationEvE6object to %"class.v8::internal::RegisterConfiguration"*)
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.v8::internal::RegisterConfiguration"* @_ZN2v88internal21RegisterConfiguration24RestrictGeneralRegistersEj(i32) local_unnamed_addr #1 align 2 {
  %2 = tail call i32 @llvm.ctpop.i32(i32 %0) #11, !range !3
  %3 = shl nuw nsw i32 %2, 2
  %4 = zext i32 %3 to i64
  %5 = tail call i8* @_Znam(i64 %4) #12
  %6 = bitcast i8* %5 to i32*
  %7 = ptrtoint i8* %5 to i64
  %8 = shl nuw nsw i32 %2, 3
  %9 = zext i32 %8 to i64
  %10 = tail call i8* @_Znam(i64 %9) #12
  %11 = bitcast i8* %10 to i8**
  %12 = ptrtoint i8* %10 to i64
  %13 = tail call %"class.v8::internal::RegisterConfiguration"* @_ZN2v88internal21RegisterConfiguration7DefaultEv()
  %14 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject", %"class.v8::base::LeakyObject"* @_ZZN2v88internal12_GLOBAL__N_131GetDefaultRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 24) to i32*), align 8
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %161, label %16

16:                                               ; preds = %182, %1
  %17 = tail call i8* @_Znwm(i64 352) #12
  %18 = bitcast i8* %17 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal21RegisterConfigurationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = getelementptr inbounds i8, i8* %17, i64 8
  %20 = getelementptr inbounds i8, i8* %17, i64 12
  %21 = bitcast i8* %20 to i32*
  %22 = getelementptr inbounds i8, i8* %17, i64 20
  %23 = bitcast i8* %22 to i32*
  %24 = bitcast i8* %19 to <4 x i32>*
  store <4 x i32> <i32 16, i32 0, i32 16, i32 0>, <4 x i32>* %24, align 8
  %25 = getelementptr inbounds i8, i8* %17, i64 24
  %26 = bitcast i8* %25 to i32*
  store i32 %2, i32* %26, align 8
  %27 = getelementptr inbounds i8, i8* %17, i64 28
  %28 = bitcast i8* %27 to i32*
  store i32 0, i32* %28, align 4
  %29 = getelementptr inbounds i8, i8* %17, i64 32
  %30 = bitcast i8* %29 to i32*
  store i32 15, i32* %30, align 8
  %31 = getelementptr inbounds i8, i8* %17, i64 36
  %32 = bitcast i8* %31 to i32*
  %33 = getelementptr inbounds i8, i8* %17, i64 40
  %34 = bitcast i8* %33 to i32*
  %35 = getelementptr inbounds i8, i8* %17, i64 44
  %36 = bitcast i8* %35 to i32*
  %37 = getelementptr inbounds i8, i8* %17, i64 48
  %38 = bitcast i8* %37 to i32*
  %39 = getelementptr inbounds i8, i8* %17, i64 52
  %40 = bitcast i8* %39 to i32*
  %41 = getelementptr inbounds i8, i8* %17, i64 56
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %31, i8 0, i64 20, i1 false) #11
  %42 = bitcast i8* %41 to i8**
  store i8* %5, i8** %42, align 8
  %43 = getelementptr inbounds i8, i8* %17, i64 192
  %44 = bitcast i8* %43 to i32**
  store i32* getelementptr inbounds ([15 x i32], [15 x i32]* @_ZN2v88internal12_GLOBAL__N_123kAllocatableDoubleCodesE, i64 0, i64 0), i32** %44, align 8
  %45 = getelementptr inbounds i8, i8* %17, i64 328
  %46 = bitcast i8* %45 to i32*
  store i32 0, i32* %46, align 8
  %47 = icmp eq i32 %0, 0
  br i1 %47, label %131, label %48

48:                                               ; preds = %16
  %49 = zext i32 %2 to i64
  %50 = icmp ult i32 %2, 8
  br i1 %50, label %117, label %51

51:                                               ; preds = %48
  %52 = and i64 %49, 56
  %53 = add nsw i64 %52, -8
  %54 = lshr exact i64 %53, 3
  %55 = add nuw nsw i64 %54, 1
  %56 = and i64 %55, 1
  %57 = icmp eq i64 %53, 0
  br i1 %57, label %89, label %58

58:                                               ; preds = %51
  %59 = sub nuw nsw i64 %55, %56
  br label %60

60:                                               ; preds = %60, %58
  %61 = phi i64 [ 0, %58 ], [ %86, %60 ]
  %62 = phi <4 x i32> [ zeroinitializer, %58 ], [ %84, %60 ]
  %63 = phi <4 x i32> [ zeroinitializer, %58 ], [ %85, %60 ]
  %64 = phi i64 [ %59, %58 ], [ %87, %60 ]
  %65 = getelementptr inbounds i32, i32* %6, i64 %61
  %66 = bitcast i32* %65 to <4 x i32>*
  %67 = load <4 x i32>, <4 x i32>* %66, align 4
  %68 = getelementptr inbounds i32, i32* %65, i64 4
  %69 = bitcast i32* %68 to <4 x i32>*
  %70 = load <4 x i32>, <4 x i32>* %69, align 4
  %71 = shl <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %67
  %72 = shl <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %70
  %73 = or <4 x i32> %71, %62
  %74 = or <4 x i32> %72, %63
  %75 = or i64 %61, 8
  %76 = getelementptr inbounds i32, i32* %6, i64 %75
  %77 = bitcast i32* %76 to <4 x i32>*
  %78 = load <4 x i32>, <4 x i32>* %77, align 4
  %79 = getelementptr inbounds i32, i32* %76, i64 4
  %80 = bitcast i32* %79 to <4 x i32>*
  %81 = load <4 x i32>, <4 x i32>* %80, align 4
  %82 = shl <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %78
  %83 = shl <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %81
  %84 = or <4 x i32> %82, %73
  %85 = or <4 x i32> %83, %74
  %86 = add i64 %61, 16
  %87 = add i64 %64, -2
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %60, !llvm.loop !4

89:                                               ; preds = %60, %51
  %90 = phi <4 x i32> [ undef, %51 ], [ %84, %60 ]
  %91 = phi <4 x i32> [ undef, %51 ], [ %85, %60 ]
  %92 = phi i64 [ 0, %51 ], [ %86, %60 ]
  %93 = phi <4 x i32> [ zeroinitializer, %51 ], [ %84, %60 ]
  %94 = phi <4 x i32> [ zeroinitializer, %51 ], [ %85, %60 ]
  %95 = icmp eq i64 %56, 0
  br i1 %95, label %107, label %96

96:                                               ; preds = %89
  %97 = getelementptr inbounds i32, i32* %6, i64 %92
  %98 = getelementptr inbounds i32, i32* %97, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4
  %101 = shl <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %100
  %102 = or <4 x i32> %101, %94
  %103 = bitcast i32* %97 to <4 x i32>*
  %104 = load <4 x i32>, <4 x i32>* %103, align 4
  %105 = shl <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %104
  %106 = or <4 x i32> %105, %93
  br label %107

107:                                              ; preds = %89, %96
  %108 = phi <4 x i32> [ %90, %89 ], [ %106, %96 ]
  %109 = phi <4 x i32> [ %91, %89 ], [ %102, %96 ]
  %110 = or <4 x i32> %109, %108
  %111 = shufflevector <4 x i32> %110, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %112 = or <4 x i32> %110, %111
  %113 = shufflevector <4 x i32> %112, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %114 = or <4 x i32> %112, %113
  %115 = extractelement <4 x i32> %114, i32 0
  %116 = icmp eq i64 %52, %49
  br i1 %116, label %129, label %117

117:                                              ; preds = %107, %48
  %118 = phi i32 [ 0, %48 ], [ %115, %107 ]
  %119 = phi i64 [ 0, %48 ], [ %52, %107 ]
  br label %120

120:                                              ; preds = %117, %120
  %121 = phi i32 [ %126, %120 ], [ %118, %117 ]
  %122 = phi i64 [ %127, %120 ], [ %119, %117 ]
  %123 = getelementptr inbounds i32, i32* %6, i64 %122
  %124 = load i32, i32* %123, align 4
  %125 = shl i32 1, %124
  %126 = or i32 %125, %121
  %127 = add nuw nsw i64 %122, 1
  %128 = icmp eq i64 %127, %49
  br i1 %128, label %129, label %120, !llvm.loop !6

129:                                              ; preds = %120, %107
  %130 = phi i32 [ %115, %107 ], [ %126, %120 ]
  store i32 %130, i32* %34, align 8
  br label %131

131:                                              ; preds = %129, %16
  store i32 32767, i32* %38, align 8
  store i32 16, i32* %23, align 4
  store i32 16, i32* %21, align 4
  store i32 15, i32* %32, align 4
  store i32 15, i32* %28, align 4
  %132 = getelementptr inbounds i8, i8* %17, i64 200
  %133 = getelementptr inbounds i8, i8* %17, i64 64
  %134 = bitcast i8* %132 to <4 x i32>*
  store <4 x i32> <i32 0, i32 1, i32 2, i32 3>, <4 x i32>* %134, align 4
  %135 = bitcast i8* %133 to <4 x i32>*
  store <4 x i32> <i32 0, i32 1, i32 2, i32 3>, <4 x i32>* %135, align 4
  %136 = getelementptr inbounds i8, i8* %17, i64 216
  %137 = bitcast i8* %136 to i32*
  store i32 4, i32* %137, align 4
  %138 = getelementptr inbounds i8, i8* %17, i64 80
  %139 = bitcast i8* %138 to i32*
  store i32 4, i32* %139, align 4
  %140 = getelementptr inbounds i8, i8* %17, i64 220
  %141 = bitcast i8* %140 to i32*
  store i32 5, i32* %141, align 4
  %142 = getelementptr inbounds i8, i8* %17, i64 84
  %143 = getelementptr inbounds i8, i8* %17, i64 224
  %144 = bitcast i8* %142 to <4 x i32>*
  store <4 x i32> <i32 5, i32 6, i32 7, i32 8>, <4 x i32>* %144, align 4
  %145 = bitcast i8* %143 to <4 x i32>*
  store <4 x i32> <i32 6, i32 7, i32 8, i32 9>, <4 x i32>* %145, align 4
  %146 = getelementptr inbounds i8, i8* %17, i64 100
  %147 = getelementptr inbounds i8, i8* %17, i64 240
  %148 = bitcast i8* %146 to <4 x i32>*
  store <4 x i32> <i32 9, i32 10, i32 11, i32 12>, <4 x i32>* %148, align 4
  %149 = bitcast i8* %147 to <4 x i32>*
  store <4 x i32> <i32 10, i32 11, i32 12, i32 13>, <4 x i32>* %149, align 4
  %150 = getelementptr inbounds i8, i8* %17, i64 116
  %151 = bitcast i8* %150 to i32*
  store i32 13, i32* %151, align 4
  %152 = getelementptr inbounds i8, i8* %17, i64 256
  %153 = bitcast i8* %152 to i32*
  store i32 14, i32* %153, align 4
  %154 = getelementptr inbounds i8, i8* %17, i64 120
  %155 = bitcast i8* %154 to i32*
  store i32 14, i32* %155, align 4
  store i32 32767, i32* %40, align 4
  store i32 32767, i32* %36, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal12_GLOBAL__N_131RestrictedRegisterConfigurationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %156 = getelementptr inbounds i8, i8* %17, i64 336
  %157 = bitcast i8* %156 to i64*
  store i64 %7, i64* %157, align 8
  %158 = getelementptr inbounds i8, i8* %17, i64 344
  %159 = bitcast i8* %158 to i64*
  store i64 %12, i64* %159, align 8
  %160 = bitcast i8* %17 to %"class.v8::internal::RegisterConfiguration"*
  ret %"class.v8::internal::RegisterConfiguration"* %160

161:                                              ; preds = %1, %182
  %162 = phi i64 [ %184, %182 ], [ 0, %1 ]
  %163 = phi i32 [ %183, %182 ], [ 0, %1 ]
  %164 = tail call %"class.v8::internal::RegisterConfiguration"* @_ZN2v88internal21RegisterConfiguration7DefaultEv()
  %165 = load i32*, i32** bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject", %"class.v8::base::LeakyObject"* @_ZZN2v88internal12_GLOBAL__N_131GetDefaultRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 56) to i32**), align 8
  %166 = getelementptr inbounds i32, i32* %165, i64 %162
  %167 = load i32, i32* %166, align 4
  %168 = icmp eq i32 %167, -1
  %169 = shl i32 1, %167
  %170 = select i1 %168, i32 0, i32 %169
  %171 = and i32 %170, %0
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %182, label %173

173:                                              ; preds = %161
  %174 = sext i32 %163 to i64
  %175 = getelementptr inbounds i32, i32* %6, i64 %174
  store i32 %167, i32* %175, align 4
  %176 = getelementptr inbounds [16 x i8*], [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_8RegisterEE5Names, i64 0, i64 %162
  %177 = bitcast i8** %176 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = getelementptr inbounds i8*, i8** %11, i64 %174
  %180 = bitcast i8** %179 to i64*
  store i64 %178, i64* %180, align 8
  %181 = add nsw i32 %163, 1
  br label %182

182:                                              ; preds = %161, %173
  %183 = phi i32 [ %181, %173 ], [ %163, %161 ]
  %184 = add nuw nsw i64 %162, 1
  %185 = tail call %"class.v8::internal::RegisterConfiguration"* @_ZN2v88internal21RegisterConfiguration7DefaultEv()
  %186 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.v8::base::LeakyObject", %"class.v8::base::LeakyObject"* @_ZZN2v88internal12_GLOBAL__N_131GetDefaultRegisterConfigurationEvE6object, i64 0, i32 0, i32 0, i64 24) to i32*), align 8
  %187 = sext i32 %186 to i64
  %188 = icmp slt i64 %184, %187
  br i1 %188, label %161, label %16
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal21RegisterConfigurationC2EiiiiPKiS3_NS1_12AliasingKindE(%"class.v8::internal::RegisterConfiguration"*, i32, i32, i32, i32, i32*, i32*, i32) unnamed_addr #3 align 2 {
  %9 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal21RegisterConfigurationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %0, i64 0, i32 1
  store i32 %1, i32* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %0, i64 0, i32 2
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %0, i64 0, i32 3
  store i32 %2, i32* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %0, i64 0, i32 4
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %0, i64 0, i32 5
  store i32 %3, i32* %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %0, i64 0, i32 6
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %0, i64 0, i32 7
  store i32 %4, i32* %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %0, i64 0, i32 8
  %18 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %0, i64 0, i32 9
  %19 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %0, i64 0, i32 10
  %20 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %0, i64 0, i32 11
  %21 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %0, i64 0, i32 12
  %22 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %0, i64 0, i32 13
  %23 = bitcast i32* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %23, i8 0, i64 20, i1 false)
  store i32* %5, i32** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %0, i64 0, i32 15
  store i32* %6, i32** %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %0, i64 0, i32 17
  store i32 %7, i32* %25, align 8
  %26 = icmp sgt i32 %3, 0
  br i1 %26, label %27, label %49

27:                                               ; preds = %8
  %28 = zext i32 %3 to i64
  %29 = add nsw i64 %28, -1
  %30 = and i64 %28, 3
  %31 = icmp ult i64 %29, 3
  br i1 %31, label %34, label %32

32:                                               ; preds = %27
  %33 = sub nsw i64 %28, %30
  br label %58

34:                                               ; preds = %58, %27
  %35 = phi i32 [ 0, %27 ], [ %80, %58 ]
  %36 = phi i64 [ 0, %27 ], [ %81, %58 ]
  %37 = icmp eq i64 %30, 0
  br i1 %37, label %49, label %38

38:                                               ; preds = %34, %38
  %39 = phi i32 [ %45, %38 ], [ %35, %34 ]
  %40 = phi i64 [ %46, %38 ], [ %36, %34 ]
  %41 = phi i64 [ %47, %38 ], [ %30, %34 ]
  %42 = getelementptr inbounds i32, i32* %5, i64 %40
  %43 = load i32, i32* %42, align 4
  %44 = shl i32 1, %43
  %45 = or i32 %39, %44
  store i32 %45, i32* %18, align 8
  %46 = add nuw nsw i64 %40, 1
  %47 = add i64 %41, -1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %38, !llvm.loop !8

49:                                               ; preds = %34, %38, %8
  %50 = icmp sgt i32 %4, 0
  br i1 %50, label %51, label %100

51:                                               ; preds = %49
  %52 = zext i32 %4 to i64
  %53 = add nsw i64 %52, -1
  %54 = and i64 %52, 3
  %55 = icmp ult i64 %53, 3
  br i1 %55, label %84, label %56

56:                                               ; preds = %51
  %57 = sub nsw i64 %52, %54
  br label %103

58:                                               ; preds = %58, %32
  %59 = phi i32 [ 0, %32 ], [ %80, %58 ]
  %60 = phi i64 [ 0, %32 ], [ %81, %58 ]
  %61 = phi i64 [ %33, %32 ], [ %82, %58 ]
  %62 = getelementptr inbounds i32, i32* %5, i64 %60
  %63 = load i32, i32* %62, align 4
  %64 = shl i32 1, %63
  %65 = or i32 %59, %64
  store i32 %65, i32* %18, align 8
  %66 = or i64 %60, 1
  %67 = getelementptr inbounds i32, i32* %5, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = shl i32 1, %68
  %70 = or i32 %65, %69
  store i32 %70, i32* %18, align 8
  %71 = or i64 %60, 2
  %72 = getelementptr inbounds i32, i32* %5, i64 %71
  %73 = load i32, i32* %72, align 4
  %74 = shl i32 1, %73
  %75 = or i32 %70, %74
  store i32 %75, i32* %18, align 8
  %76 = or i64 %60, 3
  %77 = getelementptr inbounds i32, i32* %5, i64 %76
  %78 = load i32, i32* %77, align 4
  %79 = shl i32 1, %78
  %80 = or i32 %75, %79
  store i32 %80, i32* %18, align 8
  %81 = add nuw nsw i64 %60, 4
  %82 = add i64 %61, -4
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %34, label %58

84:                                               ; preds = %103, %51
  %85 = phi i32 [ undef, %51 ], [ %125, %103 ]
  %86 = phi i32 [ 0, %51 ], [ %125, %103 ]
  %87 = phi i64 [ 0, %51 ], [ %126, %103 ]
  %88 = icmp eq i64 %54, 0
  br i1 %88, label %100, label %89

89:                                               ; preds = %84, %89
  %90 = phi i32 [ %96, %89 ], [ %86, %84 ]
  %91 = phi i64 [ %97, %89 ], [ %87, %84 ]
  %92 = phi i64 [ %98, %89 ], [ %54, %84 ]
  %93 = getelementptr inbounds i32, i32* %6, i64 %91
  %94 = load i32, i32* %93, align 4
  %95 = shl i32 1, %94
  %96 = or i32 %90, %95
  store i32 %96, i32* %20, align 8
  %97 = add nuw nsw i64 %91, 1
  %98 = add i64 %92, -1
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %89, !llvm.loop !10

100:                                              ; preds = %84, %89, %49
  %101 = phi i32 [ 0, %49 ], [ %85, %84 ], [ %96, %89 ]
  %102 = icmp eq i32 %7, 1
  br i1 %102, label %129, label %197

103:                                              ; preds = %103, %56
  %104 = phi i32 [ 0, %56 ], [ %125, %103 ]
  %105 = phi i64 [ 0, %56 ], [ %126, %103 ]
  %106 = phi i64 [ %57, %56 ], [ %127, %103 ]
  %107 = getelementptr inbounds i32, i32* %6, i64 %105
  %108 = load i32, i32* %107, align 4
  %109 = shl i32 1, %108
  %110 = or i32 %104, %109
  store i32 %110, i32* %20, align 8
  %111 = or i64 %105, 1
  %112 = getelementptr inbounds i32, i32* %6, i64 %111
  %113 = load i32, i32* %112, align 4
  %114 = shl i32 1, %113
  %115 = or i32 %110, %114
  store i32 %115, i32* %20, align 8
  %116 = or i64 %105, 2
  %117 = getelementptr inbounds i32, i32* %6, i64 %116
  %118 = load i32, i32* %117, align 4
  %119 = shl i32 1, %118
  %120 = or i32 %115, %119
  store i32 %120, i32* %20, align 8
  %121 = or i64 %105, 3
  %122 = getelementptr inbounds i32, i32* %6, i64 %121
  %123 = load i32, i32* %122, align 4
  %124 = shl i32 1, %123
  %125 = or i32 %120, %124
  store i32 %125, i32* %20, align 8
  %126 = add nuw nsw i64 %105, 4
  %127 = add i64 %106, -4
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %84, label %103

129:                                              ; preds = %100
  %130 = icmp slt i32 %2, 17
  %131 = shl nsw i32 %2, 1
  %132 = select i1 %130, i32 %131, i32 32
  store i32 %132, i32* %11, align 4
  store i32 0, i32* %15, align 4
  br i1 %50, label %143, label %133

133:                                              ; preds = %129
  %134 = sdiv i32 %2, 2
  store i32 %134, i32* %13, align 4
  store i32 0, i32* %17, align 4
  br label %237

135:                                              ; preds = %165
  %136 = load i32, i32* %12, align 8
  %137 = load i32*, i32** %24, align 8
  %138 = sdiv i32 %136, 2
  store i32 %138, i32* %13, align 4
  store i32 0, i32* %17, align 4
  %139 = icmp sgt i32 %166, 1
  br i1 %139, label %140, label %237

140:                                              ; preds = %135
  %141 = load i32, i32* %137, align 4
  %142 = sdiv i32 %141, 2
  br label %172

143:                                              ; preds = %129, %170
  %144 = phi i32 [ %166, %170 ], [ %4, %129 ]
  %145 = phi i32* [ %171, %170 ], [ %6, %129 ]
  %146 = phi i64 [ %167, %170 ], [ 0, %129 ]
  %147 = getelementptr inbounds i32, i32* %145, i64 %146
  %148 = load i32, i32* %147, align 4
  %149 = shl nsw i32 %148, 1
  %150 = icmp sgt i32 %148, 15
  br i1 %150, label %165, label %151

151:                                              ; preds = %143
  %152 = load i32, i32* %15, align 4
  %153 = add nsw i32 %152, 1
  store i32 %153, i32* %15, align 4
  %154 = sext i32 %152 to i64
  %155 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %0, i64 0, i32 14, i64 %154
  store i32 %149, i32* %155, align 4
  %156 = or i32 %149, 1
  %157 = load i32, i32* %15, align 4
  %158 = add nsw i32 %157, 1
  store i32 %158, i32* %15, align 4
  %159 = sext i32 %157 to i64
  %160 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %0, i64 0, i32 14, i64 %159
  store i32 %156, i32* %160, align 4
  %161 = shl i32 3, %149
  %162 = load i32, i32* %19, align 4
  %163 = or i32 %162, %161
  store i32 %163, i32* %19, align 4
  %164 = load i32, i32* %16, align 8
  br label %165

165:                                              ; preds = %143, %151
  %166 = phi i32 [ %144, %143 ], [ %164, %151 ]
  %167 = add nuw nsw i64 %146, 1
  %168 = sext i32 %166 to i64
  %169 = icmp slt i64 %167, %168
  br i1 %169, label %170, label %135

170:                                              ; preds = %165
  %171 = load i32*, i32** %24, align 8
  br label %143

172:                                              ; preds = %195, %140
  %173 = phi i32 [ %166, %140 ], [ %191, %195 ]
  %174 = phi i32* [ %137, %140 ], [ %196, %195 ]
  %175 = phi i64 [ 1, %140 ], [ %192, %195 ]
  %176 = phi i32 [ %142, %140 ], [ %179, %195 ]
  %177 = getelementptr inbounds i32, i32* %174, i64 %175
  %178 = load i32, i32* %177, align 4
  %179 = sdiv i32 %178, 2
  %180 = icmp eq i32 %176, %179
  br i1 %180, label %181, label %190

181:                                              ; preds = %172
  %182 = load i32, i32* %17, align 4
  %183 = add nsw i32 %182, 1
  store i32 %183, i32* %17, align 4
  %184 = sext i32 %182 to i64
  %185 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %0, i64 0, i32 16, i64 %184
  store i32 %176, i32* %185, align 4
  %186 = shl i32 1, %176
  %187 = load i32, i32* %21, align 4
  %188 = or i32 %187, %186
  store i32 %188, i32* %21, align 4
  %189 = load i32, i32* %16, align 8
  br label %190

190:                                              ; preds = %181, %172
  %191 = phi i32 [ %189, %181 ], [ %173, %172 ]
  %192 = add nuw nsw i64 %175, 1
  %193 = sext i32 %191 to i64
  %194 = icmp slt i64 %192, %193
  br i1 %194, label %195, label %237

195:                                              ; preds = %190
  %196 = load i32*, i32** %24, align 8
  br label %172

197:                                              ; preds = %100
  store i32 %2, i32* %13, align 4
  store i32 %2, i32* %11, align 4
  store i32 %4, i32* %17, align 4
  store i32 %4, i32* %15, align 4
  br i1 %50, label %198, label %219

198:                                              ; preds = %197
  %199 = load i32, i32* %6, align 4
  %200 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %0, i64 0, i32 16, i64 0
  store i32 %199, i32* %200, align 4
  %201 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %0, i64 0, i32 14, i64 0
  store i32 %199, i32* %201, align 4
  %202 = icmp eq i32 %4, 1
  br i1 %202, label %219, label %203

203:                                              ; preds = %198
  %204 = zext i32 %4 to i64
  %205 = add nsw i64 %204, -1
  %206 = and i64 %205, 1
  %207 = icmp eq i32 %4, 2
  br i1 %207, label %210, label %208

208:                                              ; preds = %203
  %209 = sub nsw i64 %205, %206
  br label %220

210:                                              ; preds = %220, %203
  %211 = phi i64 [ 1, %203 ], [ %234, %220 ]
  %212 = icmp eq i64 %206, 0
  br i1 %212, label %219, label %213

213:                                              ; preds = %210
  %214 = load i32*, i32** %24, align 8
  %215 = getelementptr inbounds i32, i32* %214, i64 %211
  %216 = load i32, i32* %215, align 4
  %217 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %0, i64 0, i32 16, i64 %211
  store i32 %216, i32* %217, align 4
  %218 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %0, i64 0, i32 14, i64 %211
  store i32 %216, i32* %218, align 4
  br label %219

219:                                              ; preds = %213, %210, %198, %197
  store i32 %101, i32* %21, align 4
  store i32 %101, i32* %19, align 4
  br label %237

220:                                              ; preds = %220, %208
  %221 = phi i64 [ 1, %208 ], [ %234, %220 ]
  %222 = phi i64 [ %209, %208 ], [ %235, %220 ]
  %223 = load i32*, i32** %24, align 8
  %224 = getelementptr inbounds i32, i32* %223, i64 %221
  %225 = load i32, i32* %224, align 4
  %226 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %0, i64 0, i32 16, i64 %221
  store i32 %225, i32* %226, align 4
  %227 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %0, i64 0, i32 14, i64 %221
  store i32 %225, i32* %227, align 4
  %228 = add nuw nsw i64 %221, 1
  %229 = load i32*, i32** %24, align 8
  %230 = getelementptr inbounds i32, i32* %229, i64 %228
  %231 = load i32, i32* %230, align 4
  %232 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %0, i64 0, i32 16, i64 %228
  store i32 %231, i32* %232, align 4
  %233 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %0, i64 0, i32 14, i64 %228
  store i32 %231, i32* %233, align 4
  %234 = add nuw nsw i64 %221, 2
  %235 = add i64 %222, -2
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %210, label %220

237:                                              ; preds = %190, %133, %135, %219
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @_ZNK2v88internal21RegisterConfiguration10GetAliasesENS0_21MachineRepresentationEiS2_Pi(%"class.v8::internal::RegisterConfiguration"* nocapture readnone, i8 zeroext, i32, i8 zeroext, i32* nocapture) local_unnamed_addr #4 align 2 {
  %6 = icmp eq i8 %1, %3
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  store i32 %2, i32* %4, align 4
  br label %21

8:                                                ; preds = %5
  %9 = zext i8 %1 to i32
  %10 = zext i8 %3 to i32
  %11 = icmp ugt i8 %1, %3
  br i1 %11, label %12, label %18

12:                                               ; preds = %8
  %13 = sub nsw i32 %9, %10
  %14 = shl i32 %2, %13
  %15 = icmp sgt i32 %14, 31
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  store i32 %14, i32* %4, align 4
  %17 = shl i32 1, %13
  br label %21

18:                                               ; preds = %8
  %19 = sub nsw i32 %10, %9
  %20 = ashr i32 %2, %19
  store i32 %20, i32* %4, align 4
  br label %21

21:                                               ; preds = %18, %12, %16, %7
  %22 = phi i32 [ 1, %7 ], [ 1, %18 ], [ %17, %16 ], [ 0, %12 ]
  ret i32 %22
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal21RegisterConfiguration10AreAliasesENS0_21MachineRepresentationEiS2_i(%"class.v8::internal::RegisterConfiguration"* nocapture readnone, i8 zeroext, i32, i8 zeroext, i32) local_unnamed_addr #5 align 2 {
  %6 = icmp eq i8 %1, %3
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = icmp eq i32 %2, %4
  br label %21

9:                                                ; preds = %5
  %10 = zext i8 %1 to i32
  %11 = zext i8 %3 to i32
  %12 = icmp ugt i8 %1, %3
  br i1 %12, label %13, label %17

13:                                               ; preds = %9
  %14 = sub nsw i32 %10, %11
  %15 = ashr i32 %4, %14
  %16 = icmp eq i32 %15, %2
  br label %21

17:                                               ; preds = %9
  %18 = sub nsw i32 %11, %10
  %19 = ashr i32 %2, %18
  %20 = icmp eq i32 %19, %4
  br label %21

21:                                               ; preds = %13, %17, %7
  %22 = phi i1 [ %8, %7 ], [ %16, %13 ], [ %20, %17 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal21RegisterConfigurationD0Ev(%"class.v8::internal::RegisterConfiguration"*) unnamed_addr #1 comdat align 2 {
  %2 = bitcast %"class.v8::internal::RegisterConfiguration"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2v88internal12_GLOBAL__N_132ArchDefaultRegisterConfigurationD0Ev(%"class.v8::internal::(anonymous namespace)::ArchDefaultRegisterConfiguration"*) unnamed_addr #7 align 2 {
  %2 = bitcast %"class.v8::internal::(anonymous namespace)::ArchDefaultRegisterConfiguration"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal21RegisterConfigurationD2Ev(%"class.v8::internal::RegisterConfiguration"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2v88internal12_GLOBAL__N_141ArchDefaultPoisoningRegisterConfigurationD0Ev(%"class.v8::internal::(anonymous namespace)::ArchDefaultPoisoningRegisterConfiguration"*) unnamed_addr #7 align 2 {
  %2 = bitcast %"class.v8::internal::(anonymous namespace)::ArchDefaultPoisoningRegisterConfiguration"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctpop.i32(i32) #9

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2v88internal12_GLOBAL__N_131RestrictedRegisterConfigurationD2Ev(%"class.v8::internal::(anonymous namespace)::RestrictedRegisterConfiguration"* nocapture) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RestrictedRegisterConfiguration", %"class.v8::internal::(anonymous namespace)::RestrictedRegisterConfiguration"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal12_GLOBAL__N_131RestrictedRegisterConfigurationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RestrictedRegisterConfiguration", %"class.v8::internal::(anonymous namespace)::RestrictedRegisterConfiguration"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load i8**, i8*** %3, align 8
  store i8** null, i8*** %3, align 8
  %5 = icmp eq i8** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast i8** %4 to i8*
  tail call void @_ZdaPv(i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RestrictedRegisterConfiguration", %"class.v8::internal::(anonymous namespace)::RestrictedRegisterConfiguration"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  store i32* null, i32** %9, align 8
  %11 = icmp eq i32* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = bitcast i32* %10 to i8*
  tail call void @_ZdaPv(i8* %13) #12
  br label %14

14:                                               ; preds = %8, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN2v88internal12_GLOBAL__N_131RestrictedRegisterConfigurationD0Ev(%"class.v8::internal::(anonymous namespace)::RestrictedRegisterConfiguration"*) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RestrictedRegisterConfiguration", %"class.v8::internal::(anonymous namespace)::RestrictedRegisterConfiguration"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal12_GLOBAL__N_131RestrictedRegisterConfigurationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RestrictedRegisterConfiguration", %"class.v8::internal::(anonymous namespace)::RestrictedRegisterConfiguration"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load i8**, i8*** %3, align 8
  store i8** null, i8*** %3, align 8
  %5 = icmp eq i8** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast i8** %4 to i8*
  tail call void @_ZdaPv(i8* %7) #12
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.v8::internal::(anonymous namespace)::RestrictedRegisterConfiguration", %"class.v8::internal::(anonymous namespace)::RestrictedRegisterConfiguration"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  store i32* null, i32** %9, align 8
  %11 = icmp eq i32* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = bitcast i32* %10 to i8*
  tail call void @_ZdaPv(i8* %13) #12
  br label %14

14:                                               ; preds = %8, %12
  %15 = bitcast %"class.v8::internal::(anonymous namespace)::RestrictedRegisterConfiguration"* %0 to i8*
  tail call void @_ZdlPv(i8* %15) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #10

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { argmemonly nounwind }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i32 0, i32 33}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.isvectorized", i32 1}
!6 = distinct !{!6, !7, !5}
!7 = !{!"llvm.loop.unroll.runtime.disable"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.unroll.disable"}
!10 = distinct !{!10, !9}
