; ModuleID = '../../third_party/blink/renderer/core/animation/compositor_animations.cc'
source_filename = "../../third_party/blink/renderer/core/animation/compositor_animations.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::AnimationTimeDelta" = type { double }
%"class.base::TimeDelta" = type { i64 }
%"class.blink::LinearTimingFunction" = type { %"class.blink::TimingFunction" }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.blink::Timing" = type <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, %"class.absl::optional", i32, [4 x i8], %class.scoped_refptr, i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::AnimationTimeDelta" }
%class.scoped_refptr = type { %"class.blink::TimingFunction"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.14" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.1", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.3" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.1" = type { %"class.blink::MemberBase.2" }
%"class.blink::MemberBase.2" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.27", %"class.blink::Member.29", %"class.blink::Member.1", %"class.blink::Member.31", %"class.blink::Member.31", %"class.blink::Member.50", %"class.blink::Member.52", %"class.blink::Member.54", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.59", %"class.blink::HeapVector.61" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.27" = type { %"class.blink::MemberBase.28" }
%"class.blink::MemberBase.28" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.29" = type { %"class.blink::MemberBase.30" }
%"class.blink::MemberBase.30" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.77", %"class.WTF::Vector.77", i8, i32, %"class.blink::Member.84", %"class.blink::Member.86", %"class.blink::Member.88", %"class.blink::Member.90", %"class.blink::Member.92", %"class.blink::Member.94", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.97", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.103", %"class.blink::Member.105", %"class.blink::Member.67", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.108", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.42", %"class.blink::Member.317", %"class.blink::Member.42", %"class.blink::Member.42", %"class.blink::Member.42", %"class.blink::UserActionElementSet", %"class.blink::Member.326", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.333", i16, i8, %"class.blink::Member.340", %"class.blink::Member.342", %"class.blink::Member.344", %"class.blink::Member.346", %"class.blink::TextLinkColors", %"class.blink::Member.348", i8, [7 x i8], %"class.blink::HeapHashMap.350", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.42", %"class.WTF::Vector.357", %"class.blink::Member.362", %"class.blink::Member.364", i8, %"class.blink::Member.42", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.366", %"class.blink::HeapVector.368", %"class.std::__1::unique_ptr.376", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.382", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.395", %"class.WTF::Vector.397", i8, i8, %"class.std::__1::unique_ptr.402", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.408", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.416", i8, i32, %"class.blink::Member.418", %"class.blink::Member.420", %"class.blink::Member.422", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.424", %"class.WTF::HashMap.426", %"class.blink::Member.431", %"class.blink::Member.433", %"class.blink::Member.435", %"class.blink::Member.437", %"class.blink::Member.29", %"class.blink::Member.29", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.439", i8, i32, %"class.blink::Member.446", %"class.blink::Member.448", i32, %"class.blink::Member.450", %"class.blink::Member.452", %"class.blink::Member.454", %"class.std::__1::unique_ptr.456", i64, %"class.std::__1::unique_ptr.462", i32, i32, %"class.blink::Member.477", %"class.blink::Member.479", %"class.blink::Member.481", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.483", %"class.WTF::Vector.485", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.490", %"class.blink::Member.497", %"class.std::__1::unique_ptr.499", %"class.blink::Member.505", i8, i8, %"class.WTF::String", %"class.blink::Member.507", i8, [7 x i8], %"class.blink::HeapHashMap.509", %"class.blink::HeapObserverSet", %"class.blink::Member.523", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.525", i32, i8, i8, %"class.blink::WeakMember.527", %"class.blink::Member.528" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.70" }
%"class.blink::HeapHashMap.70" = type { %"class.WTF::HashMap.73" }
%"class.WTF::HashMap.73" = type { %"class.WTF::HashTable.74" }
%"class.WTF::HashTable.74" = type <{ %"struct.WTF::KeyValuePair.76"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.76" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.77" = type { %"class.WTF::VectorBuffer.78" }
%"class.WTF::VectorBuffer.78" = type { %"class.WTF::VectorBufferBase.79" }
%"class.WTF::VectorBufferBase.79" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.80 }
%class.scoped_refptr.80 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.81", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.81" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.84" = type { %"class.blink::MemberBase.85" }
%"class.blink::MemberBase.85" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.86" = type { %"class.blink::MemberBase.87" }
%"class.blink::MemberBase.87" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.546", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.619", i32, i8, [3 x i8], %"class.blink::HeapVector.621", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.629", %"class.blink::Member.631", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.640", %"class.blink::Member.768", %"class.blink::Member.770", i8, [7 x i8] }>
%"class.blink::Supplementable.546" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.547" }
%"class.blink::HeapHashMap.547" = type { %"class.WTF::HashMap.550" }
%"class.WTF::HashMap.550" = type { %"class.WTF::HashTable.551" }
%"class.WTF::HashTable.551" = type <{ %"struct.WTF::KeyValuePair.553"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.553" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.562" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.554" }
%"class.blink::HeapObserverSet.554" = type { i32, [4 x i8], %"class.blink::HeapHashSet.555" }
%"class.blink::HeapHashSet.555" = type { %"class.WTF::HashSet.558" }
%"class.WTF::HashSet.558" = type { %"class.WTF::HashTable.559" }
%"class.WTF::HashTable.559" = type <{ %"class.blink::WeakMember.561"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.561" = type opaque
%"class.blink::Supplementable.562" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.563" }
%"class.blink::HeapHashMap.563" = type { %"class.WTF::HashMap.566" }
%"class.WTF::HashMap.566" = type { %"class.WTF::HashTable.567" }
%"class.WTF::HashTable.567" = type <{ %"struct.WTF::KeyValuePair.569"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.569" = type { i8*, %"class.blink::Member.2909" }
%"class.blink::Member.2909" = type { %"class.blink::MemberBase.2910" }
%"class.blink::MemberBase.2910" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2911" }
%"class.blink::Member.2911" = type { %"class.blink::MemberBase.2912" }
%"class.blink::MemberBase.2912" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.570, %"class.std::__1::unique_ptr.579", %"class.std::__1::unique_ptr.579", %"class.std::__1::unique_ptr.609", %"class.std::__1::unique_ptr.609", %"class.blink::Member.86", i32, [4 x i8], %"class.WTF::HashSet.615", i32, i32 }
%class.scoped_refptr.570 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.571", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.573", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.578 }
%"class.WTF::RefCounted.571" = type { %"class.base::RefCounted.572" }
%"class.base::RefCounted.572" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional.573" = type { %"class.absl::optional_internal::optional_data.574" }
%"class.absl::optional_internal::optional_data.574" = type { %"class.absl::optional_internal::optional_data_base.575" }
%"class.absl::optional_internal::optional_data_base.575" = type { %"class.absl::optional_internal::optional_data_dtor_base.576" }
%"class.absl::optional_internal::optional_data_dtor_base.576" = type { i8, %union.anon.577 }
%union.anon.577 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.578 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.579" = type { %"class.std::__1::__compressed_pair.580" }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.581" }
%"struct.std::__1::__compressed_pair_elem.581" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.596", %"class.std::__1::map.605"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.573" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.582" }
%"class.std::__1::__compressed_pair.582" = type { %"struct.std::__1::__compressed_pair_elem.583" }
%"struct.std::__1::__compressed_pair_elem.583" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.584 }
%union.anon.584 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.588", %"class.std::__1::__compressed_pair.593" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { i64 }
%"class.std::__1::map.596" = type { %"class.std::__1::__tree.597" }
%"class.std::__1::__tree.597" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.598", %"class.std::__1::__compressed_pair.602" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"class.std::__1::map.605" = type opaque
%"class.std::__1::unique_ptr.609" = type { %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.615" = type { %"class.WTF::HashTable.616" }
%"class.WTF::HashTable.616" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.619" = type { %"class.blink::MemberBase.620" }
%"class.blink::MemberBase.620" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.621" = type { %"class.WTF::Vector.624" }
%"class.WTF::Vector.624" = type { %"class.WTF::VectorBuffer.625" }
%"class.WTF::VectorBuffer.625" = type { %"class.WTF::VectorBufferBase.626" }
%"class.WTF::VectorBufferBase.626" = type { %"class.blink::Member.627"*, i32, i32 }
%"class.blink::Member.627" = type opaque
%"class.blink::Member.629" = type { %"class.blink::MemberBase.630" }
%"class.blink::MemberBase.630" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.631" = type { %"class.blink::MemberBase.632" }
%"class.blink::MemberBase.632" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.633", i32, i32 }
%"class.blink::HeapHashMap.633" = type { %"class.WTF::HashMap.636" }
%"class.WTF::HashMap.636" = type { %"class.WTF::HashTable.637" }
%"class.WTF::HashTable.637" = type <{ %"struct.WTF::KeyValuePair.639"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.639" = type opaque
%"class.std::__1::unique_ptr.640" = type { %"class.std::__1::__compressed_pair.641" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.643" }
%"class.std::__1::unique_ptr.643" = type { %"class.std::__1::__compressed_pair.644" }
%"class.std::__1::__compressed_pair.644" = type { %"struct.std::__1::__compressed_pair_elem.645" }
%"struct.std::__1::__compressed_pair_elem.645" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.646" }
%"class.WTF::Vector.646" = type { %"class.WTF::VectorBuffer.647" }
%"class.WTF::VectorBuffer.647" = type { %"class.WTF::VectorBufferBase.648" }
%"class.WTF::VectorBufferBase.648" = type { %"class.mojo::StructPtr.649"*, i32, i32 }
%"class.mojo::StructPtr.649" = type { %"class.std::__1::unique_ptr.650" }
%"class.std::__1::unique_ptr.650" = type { %"class.std::__1::__compressed_pair.651" }
%"class.std::__1::__compressed_pair.651" = type { %"struct.std::__1::__compressed_pair_elem.652" }
%"struct.std::__1::__compressed_pair_elem.652" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.653", %"class.WTF::HashMap.660", %"class.WTF::HashMap.665", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.670", i32, %"class.mojo::StructPtr.675", %"class.WTF::Vector.670" }
%"class.mojo::StructPtr.653" = type { %"class.std::__1::unique_ptr.654" }
%"class.std::__1::unique_ptr.654" = type { %"class.std::__1::__compressed_pair.655" }
%"class.std::__1::__compressed_pair.655" = type { %"struct.std::__1::__compressed_pair_elem.656" }
%"struct.std::__1::__compressed_pair_elem.656" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.660" = type { %"class.WTF::HashTable.661" }
%"class.WTF::HashTable.661" = type <{ %"struct.WTF::KeyValuePair.664"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.664" = type opaque
%"class.WTF::HashMap.665" = type { %"class.WTF::HashTable.666" }
%"class.WTF::HashTable.666" = type <{ %"struct.WTF::KeyValuePair.669"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.669" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.675" = type { %"class.std::__1::unique_ptr.676" }
%"class.std::__1::unique_ptr.676" = type { %"class.std::__1::__compressed_pair.677" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.678" }
%"struct.std::__1::__compressed_pair_elem.678" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.670", i8, i8, [6 x i8] }>
%"class.WTF::Vector.670" = type { %"class.WTF::VectorBuffer.671" }
%"class.WTF::VectorBuffer.671" = type { %"class.WTF::VectorBufferBase.672" }
%"class.WTF::VectorBufferBase.672" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.759" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.690", i32 }>
%"class.std::__1::unique_ptr.690" = type { %"class.std::__1::__compressed_pair.691" }
%"class.std::__1::__compressed_pair.691" = type { %"struct.std::__1::__compressed_pair_elem.692" }
%"struct.std::__1::__compressed_pair_elem.692" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.693", %"class.absl::optional.694", %"class.absl::optional.699", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.712", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.734", %"class.std::__1::map.745", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.754", i8, %class.scoped_refptr.704, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.755" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.693" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.694" = type { %"class.absl::optional_internal::optional_data.695" }
%"class.absl::optional_internal::optional_data.695" = type { %"class.absl::optional_internal::optional_data_base.696" }
%"class.absl::optional_internal::optional_data_base.696" = type { %"class.absl::optional_internal::optional_data_dtor_base.697" }
%"class.absl::optional_internal::optional_data_dtor_base.697" = type { i8, %union.anon.698 }
%union.anon.698 = type { %"class.base::TimeDelta" }
%"class.absl::optional.699" = type { %"class.absl::optional_internal::optional_data.700" }
%"class.absl::optional_internal::optional_data.700" = type { %"class.absl::optional_internal::optional_data_base.701" }
%"class.absl::optional_internal::optional_data_base.701" = type { %"class.absl::optional_internal::optional_data_dtor_base.702" }
%"class.absl::optional_internal::optional_data_dtor_base.702" = type { i8, %union.anon.703 }
%union.anon.703 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.704, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.705" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.705" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.309 }
%class.scoped_refptr.309 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.310", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.310" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.311" }
%"struct.std::__1::atomic.311" = type { %"struct.std::__1::__atomic_base.312" }
%"struct.std::__1::__atomic_base.312" = type { %"struct.std::__1::__atomic_base.313" }
%"struct.std::__1::__atomic_base.313" = type { %"struct.std::__1::__cxx_atomic_impl.314" }
%"struct.std::__1::__cxx_atomic_impl.314" = type { %"struct.std::__1::__cxx_atomic_base_impl.315" }
%"struct.std::__1::__cxx_atomic_base_impl.315" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.710 }
%class.scoped_refptr.710 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.772", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.704, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.9", [4 x i8] }>
%"class.base::RefCountedThreadSafe.772" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { i32 }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.712" = type { %"class.std::__1::__compressed_pair.713" }
%"class.std::__1::__compressed_pair.713" = type { %"struct.std::__1::__compressed_pair_elem.714" }
%"struct.std::__1::__compressed_pair_elem.714" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.715", %class.scoped_refptr.716 }
%"class.base::RepeatingCallback.715" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.716 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.717", [4 x i8] }>
%"class.base::RefCountedThreadSafe.717" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.721", %"class.std::__1::unique_ptr.727", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.733" }
%"class.std::__1::unique_ptr.721" = type { %"class.std::__1::__compressed_pair.722" }
%"class.std::__1::__compressed_pair.722" = type { %"struct.std::__1::__compressed_pair_elem.723" }
%"struct.std::__1::__compressed_pair_elem.723" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.727" = type { %"class.std::__1::__compressed_pair.728" }
%"class.std::__1::__compressed_pair.728" = type { %"struct.std::__1::__compressed_pair_elem.729" }
%"struct.std::__1::__compressed_pair_elem.729" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.733" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.734" = type { %"class.std::__1::__tree.735" }
%"class.std::__1::__tree.735" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.736", %"class.std::__1::__compressed_pair.740" }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"class.std::__1::map.745" = type { %"class.std::__1::__tree.746" }
%"class.std::__1::__tree.746" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.747", %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"class.base::OnceCallback.754" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.704 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.308" }>
%"class.base::RefCountedThreadSafe.308" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.755" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.759" = type { %"class.std::__1::__compressed_pair.760" }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.768" = type { %"class.blink::MemberBase.769" }
%"class.blink::MemberBase.769" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.770" = type { %"class.blink::MemberBase.771" }
%"class.blink::MemberBase.771" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.88" = type { %"class.blink::MemberBase.89" }
%"class.blink::MemberBase.89" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.90" = type { %"class.blink::MemberBase.91" }
%"class.blink::MemberBase.91" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.92" = type { %"class.blink::MemberBase.93" }
%"class.blink::MemberBase.93" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.94" = type { %"class.blink::MemberBase.95" }
%"class.blink::MemberBase.95" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.103" = type { %"class.blink::MemberBase.104" }
%"class.blink::MemberBase.104" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.105" = type { %"class.blink::MemberBase.106" }
%"class.blink::MemberBase.106" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.67" = type { %"class.blink::MemberBase.68" }
%"class.blink::MemberBase.68" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.107 }
%class.scoped_refptr.107 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.108" = type { %"class.WTF::VectorBuffer.109" }
%"class.WTF::VectorBuffer.109" = type { %"class.WTF::VectorBufferBase.110" }
%"class.WTF::VectorBufferBase.110" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.111 }
%class.scoped_refptr.111 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.112", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.112" = type { %"class.base::RefCounted.113" }
%"class.base::RefCounted.113" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.116" }
%"class.blink::HeapHashMap.116" = type { %"class.WTF::HashMap.119" }
%"class.WTF::HashMap.119" = type { %"class.WTF::HashTable.120" }
%"class.WTF::HashTable.120" = type <{ %"struct.WTF::KeyValuePair.122"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.122" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.123" }
%"class.blink::MemberBase.123" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.124", i32, [4 x i8], %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.270", %"class.std::__1::unique_ptr.276", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.288", %"class.std::__1::unique_ptr.294", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.301", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.182", %"class.std::__1::unique_ptr.189", %"class.std::__1::unique_ptr.196", %"class.std::__1::unique_ptr.196", %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.240", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.160" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.160" = type { %"struct.std::__1::__atomic_base.161" }
%"struct.std::__1::__atomic_base.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i64 }
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.blink::Worklist.171"* }
%"class.blink::Worklist.171" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.160" }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::Worklist.178"* }
%"class.blink::Worklist.178" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.160" }
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::Worklist.185"* }
%"class.blink::Worklist.185" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.160" }
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.blink::Worklist.192"* }
%"class.blink::Worklist.192" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.160" }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.blink::Worklist.199"* }
%"class.blink::Worklist.199" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.160" }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.blink::Worklist.206"* }
%"class.blink::Worklist.206" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.160" }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.blink::Worklist.213"* }
%"class.blink::Worklist.213" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.160" }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.220", %"class.std::__1::__compressed_pair.227", %"class.std::__1::__compressed_pair.232", %"class.std::__1::__compressed_pair.234", [4 x i8] }>
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222", %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { float }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.243", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.252" }
%"class.WTF::Vector.252" = type { %"class.WTF::VectorBuffer.253" }
%"class.WTF::VectorBuffer.253" = type { %"class.WTF::VectorBufferBase.254" }
%"class.WTF::VectorBufferBase.254" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.268" }
%"class.WTF::VectorBuffer.268" = type { %"class.WTF::VectorBufferBase.269" }
%"class.WTF::VectorBufferBase.269" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.282" }
%"class.std::__1::unique_ptr.282" = type { %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.171"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.178"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.185"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.192"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.199"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.541" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.541" = type { %"struct.std::__1::__compressed_pair_elem.542" }
%"struct.std::__1::__compressed_pair_elem.542" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.294" = type { %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.300 }
%class.scoped_refptr.300 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.301" = type { %"struct.std::__1::__atomic_base.302" }
%"struct.std::__1::__atomic_base.302" = type { %"struct.std::__1::__cxx_atomic_impl.303" }
%"struct.std::__1::__cxx_atomic_impl.303" = type { %"struct.std::__1::__cxx_atomic_base_impl.304" }
%"struct.std::__1::__cxx_atomic_base_impl.304" = type { i8 }
%"class.blink::Member.317" = type { %"class.blink::MemberBase.318" }
%"class.blink::MemberBase.318" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.319" }
%"class.blink::HeapHashMap.319" = type { %"class.WTF::HashMap.322" }
%"class.WTF::HashMap.322" = type { %"class.WTF::HashTable.323" }
%"class.WTF::HashTable.323" = type <{ %"struct.WTF::KeyValuePair.325"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.325" = type opaque
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.330" }
%"class.WTF::HashTable.330" = type <{ %"class.blink::WeakMember.332"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.332" = type opaque
%"class.blink::HeapHashSet.333" = type { %"class.WTF::HashSet.336" }
%"class.WTF::HashSet.336" = type { %"class.WTF::HashTable.337" }
%"class.WTF::HashTable.337" = type <{ %"class.blink::WeakMember.339"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.339" = type opaque
%"class.blink::Member.340" = type { %"class.blink::MemberBase.341" }
%"class.blink::MemberBase.341" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.342" = type { %"class.blink::MemberBase.343" }
%"class.blink::MemberBase.343" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.344" = type { %"class.blink::MemberBase.345" }
%"class.blink::MemberBase.345" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.346" = type { %"class.blink::MemberBase.347" }
%"class.blink::MemberBase.347" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.350" = type { %"class.WTF::HashMap.353" }
%"class.WTF::HashMap.353" = type { %"class.WTF::HashTable.354" }
%"class.WTF::HashTable.354" = type <{ %"struct.WTF::KeyValuePair.356"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.356" = type opaque
%"class.WTF::Vector.357" = type { %"class.WTF::VectorBuffer.358" }
%"class.WTF::VectorBuffer.358" = type { %"class.WTF::VectorBufferBase.359" }
%"class.WTF::VectorBufferBase.359" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.362" = type { %"class.blink::MemberBase.363" }
%"class.blink::MemberBase.363" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.364" = type { %"class.blink::MemberBase.365" }
%"class.blink::MemberBase.365" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.42" = type { %"class.blink::MemberBase.43" }
%"class.blink::MemberBase.43" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.366" = type { %"class.blink::MemberBase.367" }
%"class.blink::MemberBase.367" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.368" = type { %"class.WTF::Vector.371" }
%"class.WTF::Vector.371" = type { %"class.WTF::VectorBuffer.372" }
%"class.WTF::VectorBuffer.372" = type { %"class.WTF::VectorBufferBase.373" }
%"class.WTF::VectorBufferBase.373" = type { %"class.blink::Member.374"*, i32, i32 }
%"class.blink::Member.374" = type opaque
%"class.std::__1::unique_ptr.376" = type { %"class.std::__1::__compressed_pair.377" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.382" = type { %"class.WTF::HashSet.385" }
%"class.WTF::HashSet.385" = type { %"class.WTF::HashTable.386" }
%"class.WTF::HashTable.386" = type <{ %"class.blink::WeakMember.388"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.388" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.389", i32, [4 x i8] }>
%"class.WTF::Vector.389" = type { %"class.WTF::VectorBuffer.390" }
%"class.WTF::VectorBuffer.390" = type { %"class.WTF::VectorBufferBase.391" }
%"class.WTF::VectorBufferBase.391" = type { %"struct.std::__1::pair.392"*, i32, i32 }
%"struct.std::__1::pair.392" = type opaque
%"class.blink::Member.395" = type { %"class.blink::MemberBase.396" }
%"class.blink::MemberBase.396" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.397" = type { %"class.WTF::VectorBuffer.398" }
%"class.WTF::VectorBuffer.398" = type { %"class.WTF::VectorBufferBase.399" }
%"class.WTF::VectorBufferBase.399" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.402" = type { %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.46" }
%"class.WTF::Vector.46" = type { %"class.WTF::VectorBuffer.47" }
%"class.WTF::VectorBuffer.47" = type { %"class.WTF::VectorBufferBase.48" }
%"class.WTF::VectorBufferBase.48" = type { %"class.blink::Member.42"*, i32, i32 }
%"class.blink::HeapVector.408" = type { %"class.WTF::Vector.411" }
%"class.WTF::Vector.411" = type { %"class.WTF::VectorBuffer.412" }
%"class.WTF::VectorBuffer.412" = type { %"class.WTF::VectorBufferBase.413" }
%"class.WTF::VectorBufferBase.413" = type { %"class.blink::Member.414"*, i32, i32 }
%"class.blink::Member.414" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.29" }
%"class.blink::Member.416" = type { %"class.blink::MemberBase.417" }
%"class.blink::MemberBase.417" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.418" = type { %"class.blink::MemberBase.419" }
%"class.blink::MemberBase.419" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.420" = type { %"class.blink::MemberBase.421" }
%"class.blink::MemberBase.421" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.422" = type { %"class.blink::MemberBase.423" }
%"class.blink::MemberBase.423" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.424" = type { %"class.blink::MemberBase.425" }
%"class.blink::MemberBase.425" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.426" = type { %"class.WTF::HashTable.427" }
%"class.WTF::HashTable.427" = type <{ %"struct.WTF::KeyValuePair.430"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.430" = type opaque
%"class.blink::Member.431" = type { %"class.blink::MemberBase.432" }
%"class.blink::MemberBase.432" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.433" = type { %"class.blink::MemberBase.434" }
%"class.blink::MemberBase.434" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.435" = type { %"class.blink::MemberBase.436" }
%"class.blink::MemberBase.436" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.437" = type { %"class.blink::MemberBase.438" }
%"class.blink::MemberBase.438" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.316", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.307, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.307 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.316" = type { %"class.blink::MemberBase.30" }
%"class.blink::HeapHashSet.439" = type { %"class.WTF::HashSet.442" }
%"class.WTF::HashSet.442" = type { %"class.WTF::HashTable.443" }
%"class.WTF::HashTable.443" = type <{ %"class.blink::Member.445"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.445" = type opaque
%"class.blink::Member.446" = type { %"class.blink::MemberBase.447" }
%"class.blink::MemberBase.447" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.448" = type { %"class.blink::MemberBase.449" }
%"class.blink::MemberBase.449" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.450" = type { %"class.blink::MemberBase.451" }
%"class.blink::MemberBase.451" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.452" = type { %"class.blink::MemberBase.453" }
%"class.blink::MemberBase.453" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.454" = type { %"class.blink::MemberBase.455" }
%"class.blink::MemberBase.455" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.465", %"class.WTF::HashSet.465", %"class.WTF::HashSet.465", %"class.WTF::HashSet.465", %"class.WTF::HashSet.465", %"class.WTF::HashSet.465", i32, [4 x i8], %"class.WTF::HashMap.469", %"class.WTF::HashMap.469", %"class.WTF::HashMap.469", %"class.WTF::HashMap.469", %"class.WTF::HashMap.469", %"class.WTF::HashMap.469", %"class.WTF::HashMap.469", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashSet.465" = type { %"class.WTF::HashTable.466" }
%"class.WTF::HashTable.466" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.469" = type { %"class.WTF::HashTable.470" }
%"class.WTF::HashTable.470" = type <{ %"struct.WTF::KeyValuePair.473"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.473" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.477" = type { %"class.blink::MemberBase.478" }
%"class.blink::MemberBase.478" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.479" = type { %"class.blink::MemberBase.480" }
%"class.blink::MemberBase.480" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.481" = type { %"class.blink::MemberBase.482" }
%"class.blink::MemberBase.482" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.483" = type { %"class.blink::MemberBase.484" }
%"class.blink::MemberBase.484" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.485" = type { %"class.WTF::VectorBuffer.486" }
%"class.WTF::VectorBuffer.486" = type { %"class.WTF::VectorBufferBase.487" }
%"class.WTF::VectorBufferBase.487" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.490" = type { %"class.WTF::HashMap.493" }
%"class.WTF::HashMap.493" = type { %"class.WTF::HashTable.494" }
%"class.WTF::HashTable.494" = type <{ %"struct.WTF::KeyValuePair.496"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.496" = type opaque
%"class.blink::Member.497" = type { %"class.blink::MemberBase.498" }
%"class.blink::MemberBase.498" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.499" = type { %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.505" = type { %"class.blink::MemberBase.506" }
%"class.blink::MemberBase.506" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr.8 }
%class.scoped_refptr.8 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.9" }
%"class.blink::Member.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.509" = type { %"class.WTF::HashMap.512" }
%"class.WTF::HashMap.512" = type { %"class.WTF::HashTable.513" }
%"class.WTF::HashTable.513" = type <{ %"struct.WTF::KeyValuePair.515"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.515" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.516" }
%"class.blink::HeapHashSet.516" = type { %"class.WTF::HashSet.519" }
%"class.WTF::HashSet.519" = type { %"class.WTF::HashTable.520" }
%"class.WTF::HashTable.520" = type <{ %"class.blink::WeakMember.522"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.522" = type opaque
%"class.blink::Member.523" = type { %"class.blink::MemberBase.524" }
%"class.blink::MemberBase.524" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.525" = type { %"class.blink::MemberBase.526" }
%"class.blink::MemberBase.526" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.29", %"class.blink::HeapHashSet.532", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.539", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.532" = type { %"class.WTF::HashSet.535" }
%"class.WTF::HashSet.535" = type { %"class.WTF::HashTable.536" }
%"class.WTF::HashTable.536" = type <{ %"class.blink::Member.538"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.538" = type opaque
%"class.blink::HeapTaskRunnerTimer.539" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.540", { i64, i64 } }
%"class.blink::WeakMember.540" = type { %"class.blink::MemberBase.526" }
%"class.blink::WeakMember.527" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Member.528" = type { %"class.blink::MemberBase.529" }
%"class.blink::MemberBase.529" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.31" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.38" }
%"class.blink::Member.38" = type { %"class.blink::MemberBase.39" }
%"class.blink::MemberBase.39" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.42", i32, %"class.blink::HeapVector" }
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.52" = type { %"class.blink::MemberBase.53" }
%"class.blink::MemberBase.53" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.54" = type { %"class.blink::MemberBase.55" }
%"class.blink::MemberBase.55" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.56" }
%"class.blink::Member.56" = type { %"class.blink::MemberBase.57" }
%"class.blink::MemberBase.57" = type { %"class.blink::HeapHashMap.58"* }
%"class.blink::HeapHashMap.58" = type opaque
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.61" = type { %"class.WTF::Vector.64" }
%"class.WTF::Vector.64" = type { %"class.WTF::VectorBuffer.65" }
%"class.WTF::VectorBuffer.65" = type { %"class.WTF::VectorBufferBase.66" }
%"class.WTF::VectorBufferBase.66" = type { %"class.blink::Member.67"*, i32, i32 }
%"class.blink::Member.3" = type { %"class.blink::MemberBase.4" }
%"class.blink::MemberBase.4" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.18", %"class.blink::Member.20", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.18" = type { %"class.WTF::SingleThreadedBitField.19" }
%"class.WTF::SingleThreadedBitField.19" = type { i32 }
%"class.blink::Member.20" = type { %"class.blink::MemberBase.21" }
%"class.blink::MemberBase.21" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.24 }
%class.scoped_refptr.24 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.25", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.25" = type { %"class.base::RefCounted.26" }
%"class.base::RefCounted.26" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Animation" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::CompositorAnimationDelegate", %"class.blink::CompositorAnimationClient", %"class.blink::AnimationEffectOwner", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.WTF::String", i32, [4 x i8], double, %"class.absl::optional.796", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.801", %"class.absl::optional", i8, [3 x i8], i32, %"class.blink::Member.806", %"class.blink::Member.806", %"class.blink::Member.808", %"class.blink::Member.29", %"class.blink::Member.821", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.blink::Member.967", %"class.blink::Member.967", %"class.blink::Member.967", %"class.std::__1::unique_ptr.969", i8, [3 x i8], i32, %"class.blink::Member.975", i8, [7 x i8], %"class.base::TimeTicks", i8, i8, i8, [5 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.787" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.775" }
%"class.blink::HeapVector.775" = type { %"class.WTF::Vector.778" }
%"class.WTF::Vector.778" = type { %"class.WTF::VectorBuffer.779" }
%"class.WTF::VectorBuffer.779" = type { %"class.WTF::VectorBufferBase.780", [32 x i8] }
%"class.WTF::VectorBufferBase.780" = type { %"struct.std::__1::pair.781"*, i32, i32 }
%"struct.std::__1::pair.781" = type { %"class.WTF::AtomicString", %"class.blink::Member.782" }
%"class.blink::Member.782" = type { %"class.blink::MemberBase.783" }
%"class.blink::MemberBase.783" = type { %"class.blink::HeapVector.784"* }
%"class.blink::HeapVector.784" = type opaque
%"class.std::__1::unique_ptr.787" = type { %"class.std::__1::__compressed_pair.788" }
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"class.WTF::Vector.790"* }
%"class.WTF::Vector.790" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.794" }
%"class.blink::WeakMember.794" = type { %"class.blink::MemberBase.795" }
%"class.blink::MemberBase.795" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::CompositorAnimationDelegate" = type { i32 (...)** }
%"class.blink::CompositorAnimationClient" = type { i32 (...)** }
%"class.blink::AnimationEffectOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.absl::optional.796" = type { %"class.absl::optional_internal::optional_data.797" }
%"class.absl::optional_internal::optional_data.797" = type { %"class.absl::optional_internal::optional_data_base.798" }
%"class.absl::optional_internal::optional_data_base.798" = type { %"class.absl::optional_internal::optional_data_dtor_base.799" }
%"class.absl::optional_internal::optional_data_dtor_base.799" = type { i8, %union.anon.800 }
%union.anon.800 = type { double }
%"class.absl::optional.801" = type { %"class.absl::optional_internal::optional_data.802" }
%"class.absl::optional_internal::optional_data.802" = type { %"class.absl::optional_internal::optional_data_base.803" }
%"class.absl::optional_internal::optional_data_base.803" = type { %"class.absl::optional_internal::optional_data_dtor_base.804" }
%"class.absl::optional_internal::optional_data_dtor_base.804" = type { i8, %union.anon.805 }
%union.anon.805 = type { i32 }
%"class.blink::Member.806" = type { %"class.blink::MemberBase.807" }
%"class.blink::MemberBase.807" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::Member.808" = type { %"class.blink::MemberBase.809" }
%"class.blink::MemberBase.809" = type { %"class.blink::AnimationEffect"* }
%"class.blink::AnimationEffect" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.810", %"struct.blink::Timing", %"class.blink::Member.812", %"struct.blink::Timing::CalculatedTiming", i8, %"class.absl::optional", %"class.absl::optional.816", %"class.blink::AnimationTimeDelta" }
%"class.blink::Member.810" = type { %"class.blink::MemberBase.811" }
%"class.blink::MemberBase.811" = type { %"class.blink::AnimationEffectOwner"* }
%"class.blink::Member.812" = type { %"class.blink::MemberBase.813" }
%"class.blink::MemberBase.813" = type { %"class.blink::AnimationEffect::EventDelegate"* }
%"class.blink::AnimationEffect::EventDelegate" = type { i32 (...)** }
%"struct.blink::Timing::CalculatedTiming" = type { i32, %"class.absl::optional.796", %"class.absl::optional.796", i8, i8, i8, %"class.absl::optional", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.816" = type { %"class.absl::optional_internal::optional_data.817" }
%"class.absl::optional_internal::optional_data.817" = type { %"class.absl::optional_internal::optional_data_base.818" }
%"class.absl::optional_internal::optional_data_base.818" = type { %"class.absl::optional_internal::optional_data_dtor_base.819" }
%"class.absl::optional_internal::optional_data_dtor_base.819" = type { i8, %union.anon.820 }
%union.anon.820 = type { i32 }
%"class.blink::Member.821" = type { %"class.blink::MemberBase.822" }
%"class.blink::MemberBase.822" = type { %"class.blink::AnimationTimeline"* }
%"class.blink::AnimationTimeline" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.29", i32, [4 x i8], %"class.blink::HeapHashSet.823", %"class.blink::HeapHashSet.831", %"class.std::__1::unique_ptr.838", %"class.absl::optional.962" }
%"class.blink::HeapHashSet.823" = type { %"class.WTF::HashSet.826" }
%"class.WTF::HashSet.826" = type { %"class.WTF::HashTable.827" }
%"class.WTF::HashTable.827" = type <{ %"class.blink::Member.829"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.829" = type { %"class.blink::MemberBase.830" }
%"class.blink::MemberBase.830" = type { %"class.blink::Animation"* }
%"class.blink::HeapHashSet.831" = type { %"class.WTF::HashSet.834" }
%"class.WTF::HashSet.834" = type { %"class.WTF::HashTable.835" }
%"class.WTF::HashTable.835" = type <{ %"class.blink::WeakMember.837"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.837" = type { %"class.blink::MemberBase.830" }
%"class.std::__1::unique_ptr.838" = type { %"class.std::__1::__compressed_pair.839" }
%"class.std::__1::__compressed_pair.839" = type { %"struct.std::__1::__compressed_pair_elem.840" }
%"struct.std::__1::__compressed_pair_elem.840" = type { %"class.blink::CompositorAnimationTimeline"* }
%"class.blink::CompositorAnimationTimeline" = type { %class.scoped_refptr.841 }
%class.scoped_refptr.841 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type <{ i32 (...)**, %"class.base::RefCounted.842", [4 x i8], %"class.std::__1::unordered_map", i32, [4 x i8], %"class.cc::AnimationHost"*, i8, i8, [6 x i8] }>
%"class.base::RefCounted.842" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.843" }
%"class.std::__1::__hash_table.843" = type <{ %"class.std::__1::unique_ptr.844", %"class.std::__1::__compressed_pair.854", %"class.std::__1::__compressed_pair.859", %"class.std::__1::__compressed_pair.863", [4 x i8] }>
%"class.std::__1::unique_ptr.844" = type { %"class.std::__1::__compressed_pair.845" }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.846", %"struct.std::__1::__compressed_pair_elem.848" }
%"struct.std::__1::__compressed_pair_elem.846" = type { %"struct.std::__1::__hash_node_base.847"** }
%"struct.std::__1::__hash_node_base.847" = type { %"struct.std::__1::__hash_node_base.847"* }
%"struct.std::__1::__compressed_pair_elem.848" = type { %"class.std::__1::__bucket_list_deallocator.849" }
%"class.std::__1::__bucket_list_deallocator.849" = type { %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"class.std::__1::__compressed_pair.854" = type { %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"struct.std::__1::__hash_node_base.847" }
%"class.std::__1::__compressed_pair.859" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"class.cc::AnimationHost" = type { %"class.cc::MutatorHost", %"class.cc::LayerTreeMutatorClient", %"class.std::__1::unordered_map.868", %"class.std::__1::vector.894", %"class.std::__1::unordered_map.909", %"class.cc::MutatorHostClient"*, %"class.std::__1::unique_ptr.933", %"class.std::__1::unique_ptr.939", i32, i8, %"class.std::__1::unique_ptr.945", i64, i8, i8, i8, i8, i8, %"class.std::__1::vector.951", %"class.base::WeakPtrFactory.958" }
%"class.cc::MutatorHost" = type { i32 (...)** }
%"class.cc::LayerTreeMutatorClient" = type { i32 (...)** }
%"class.std::__1::unordered_map.868" = type { %"class.std::__1::__hash_table.869" }
%"class.std::__1::__hash_table.869" = type <{ %"class.std::__1::unique_ptr.870", %"class.std::__1::__compressed_pair.880", %"class.std::__1::__compressed_pair.885", %"class.std::__1::__compressed_pair.888", [4 x i8] }>
%"class.std::__1::unique_ptr.870" = type { %"class.std::__1::__compressed_pair.871" }
%"class.std::__1::__compressed_pair.871" = type { %"struct.std::__1::__compressed_pair_elem.872", %"struct.std::__1::__compressed_pair_elem.874" }
%"struct.std::__1::__compressed_pair_elem.872" = type { %"struct.std::__1::__hash_node_base.873"** }
%"struct.std::__1::__hash_node_base.873" = type { %"struct.std::__1::__hash_node_base.873"* }
%"struct.std::__1::__compressed_pair_elem.874" = type { %"class.std::__1::__bucket_list_deallocator.875" }
%"class.std::__1::__bucket_list_deallocator.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"class.std::__1::__compressed_pair.880" = type { %"struct.std::__1::__compressed_pair_elem.881" }
%"struct.std::__1::__compressed_pair_elem.881" = type { %"struct.std::__1::__hash_node_base.873" }
%"class.std::__1::__compressed_pair.885" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"class.std::__1::vector.894" = type { %"class.std::__1::__vector_base.895" }
%"class.std::__1::__vector_base.895" = type { %class.scoped_refptr.896*, %class.scoped_refptr.896*, %"class.std::__1::__compressed_pair.904" }
%class.scoped_refptr.896 = type { %"class.cc::Animation"* }
%"class.cc::Animation" = type { i32 (...)**, %"class.base::RefCounted.897", %"class.cc::AnimationHost"*, %"class.cc::AnimationTimeline"*, %"class.cc::AnimationDelegate"*, i32, %"class.std::__1::unique_ptr.898" }
%"class.base::RefCounted.897" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::AnimationDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.898" = type { %"class.std::__1::__compressed_pair.899" }
%"class.std::__1::__compressed_pair.899" = type { %"struct.std::__1::__compressed_pair_elem.900" }
%"struct.std::__1::__compressed_pair_elem.900" = type { %"class.cc::KeyframeEffect"* }
%"class.cc::KeyframeEffect" = type opaque
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.905" = type { %class.scoped_refptr.896* }
%"class.std::__1::unordered_map.909" = type { %"class.std::__1::__hash_table.910" }
%"class.std::__1::__hash_table.910" = type <{ %"class.std::__1::unique_ptr.911", %"class.std::__1::__compressed_pair.921", %"class.std::__1::__compressed_pair.926", %"class.std::__1::__compressed_pair.929", [4 x i8] }>
%"class.std::__1::unique_ptr.911" = type { %"class.std::__1::__compressed_pair.912" }
%"class.std::__1::__compressed_pair.912" = type { %"struct.std::__1::__compressed_pair_elem.913", %"struct.std::__1::__compressed_pair_elem.915" }
%"struct.std::__1::__compressed_pair_elem.913" = type { %"struct.std::__1::__hash_node_base.914"** }
%"struct.std::__1::__hash_node_base.914" = type { %"struct.std::__1::__hash_node_base.914"* }
%"struct.std::__1::__compressed_pair_elem.915" = type { %"class.std::__1::__bucket_list_deallocator.916" }
%"class.std::__1::__bucket_list_deallocator.916" = type { %"class.std::__1::__compressed_pair.917" }
%"class.std::__1::__compressed_pair.917" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"class.std::__1::__compressed_pair.921" = type { %"struct.std::__1::__compressed_pair_elem.922" }
%"struct.std::__1::__compressed_pair_elem.922" = type { %"struct.std::__1::__hash_node_base.914" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"class.std::__1::__compressed_pair.929" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"class.cc::MutatorHostClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.933" = type { %"class.std::__1::__compressed_pair.934" }
%"class.std::__1::__compressed_pair.934" = type { %"struct.std::__1::__compressed_pair_elem.935" }
%"struct.std::__1::__compressed_pair_elem.935" = type { %"class.cc::ScrollOffsetAnimations"* }
%"class.cc::ScrollOffsetAnimations" = type opaque
%"class.std::__1::unique_ptr.939" = type { %"class.std::__1::__compressed_pair.940" }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.941" }
%"struct.std::__1::__compressed_pair_elem.941" = type { %"class.cc::ScrollOffsetAnimationsImpl"* }
%"class.cc::ScrollOffsetAnimationsImpl" = type opaque
%"class.std::__1::unique_ptr.945" = type { %"class.std::__1::__compressed_pair.946" }
%"class.std::__1::__compressed_pair.946" = type { %"struct.std::__1::__compressed_pair_elem.947" }
%"struct.std::__1::__compressed_pair_elem.947" = type { %"class.cc::LayerTreeMutator"* }
%"class.cc::LayerTreeMutator" = type { i32 (...)** }
%"class.std::__1::vector.951" = type { %"class.std::__1::__vector_base.952" }
%"class.std::__1::__vector_base.952" = type { %"struct.cc::MutatorHost::PendingThroughputTrackerInfo"*, %"struct.cc::MutatorHost::PendingThroughputTrackerInfo"*, %"class.std::__1::__compressed_pair.953" }
%"struct.cc::MutatorHost::PendingThroughputTrackerInfo" = type <{ i64, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.953" = type { %"struct.std::__1::__compressed_pair_elem.954" }
%"struct.std::__1::__compressed_pair_elem.954" = type { %"struct.cc::MutatorHost::PendingThroughputTrackerInfo"* }
%"class.base::WeakPtrFactory.958" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.962" = type { %"class.absl::optional_internal::optional_data.963" }
%"class.absl::optional_internal::optional_data.963" = type { %"class.absl::optional_internal::optional_data_base.964" }
%"class.absl::optional_internal::optional_data_base.964" = type { %"class.absl::optional_internal::optional_data_dtor_base.965" }
%"class.absl::optional_internal::optional_data_dtor_base.965" = type { i8, %union.anon.966 }
%union.anon.966 = type { %"struct.blink::AnimationTimeline::PhaseAndTime" }
%"struct.blink::AnimationTimeline::PhaseAndTime" = type { i32, %"class.absl::optional.694" }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Event"* }
%"class.blink::Event" = type opaque
%"class.std::__1::unique_ptr.969" = type { %"class.std::__1::__compressed_pair.970" }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.971" }
%"struct.std::__1::__compressed_pair_elem.971" = type { %"class.blink::Animation::CompositorState"* }
%"class.blink::Animation::CompositorState" = type { %"class.absl::optional.796", %"class.absl::optional.796", double, i8, i32 }
%"class.blink::Member.975" = type { %"class.blink::MemberBase.976" }
%"class.blink::MemberBase.976" = type { %"class.blink::Animation::CompositorAnimationHolder"* }
%"class.blink::Animation::CompositorAnimationHolder" = type { %"class.blink::ThreadState::PrefinalizerRegistration.979", %"class.std::__1::unique_ptr.980", %"class.blink::Member.829" }
%"class.blink::ThreadState::PrefinalizerRegistration.979" = type { i8 }
%"class.std::__1::unique_ptr.980" = type { %"class.std::__1::__compressed_pair.981" }
%"class.std::__1::__compressed_pair.981" = type { %"struct.std::__1::__compressed_pair_elem.982" }
%"struct.std::__1::__compressed_pair_elem.982" = type { %"class.blink::CompositorAnimation"* }
%"class.blink::CompositorAnimation" = type { %"class.cc::AnimationDelegate", %class.scoped_refptr.896, %"class.blink::CompositorAnimationDelegate"* }
%"class.blink::EffectModel" = type { i32 (...)** }
%"class.blink::PaintArtifactCompositor" = type { %"class.blink::PropertyTreeManagerClient", %"class.base::WeakPtr", i8, i8, i32, i8, %class.scoped_refptr.989, %"class.WTF::Vector.1066", %"class.WTF::Vector.1072", %"class.WTF::Vector.1150", %"class.WTF::Vector.1155", %"class.WTF::Vector.1161" }
%"class.blink::PropertyTreeManagerClient" = type { i32 (...)** }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.988 }
%class.scoped_refptr.988 = type { %"class.base::internal::WeakReference::Flag"* }
%class.scoped_refptr.989 = type { %"class.cc::Layer"* }
%"class.cc::Layer" = type <{ i32 (...)**, %"class.base::RefCounted.990", [4 x i8], %"class.cc::Layer"*, %"class.cc::LayerTreeHost"*, %"struct.cc::Layer::Inputs", %"class.std::__1::unique_ptr.1006", i32, i32, i32, i32, i32, i32, %"class.gfx::Vector2dF", i8, i16, [5 x i8], %"class.std::__1::unique_ptr.1046" }>
%"class.base::RefCounted.990" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::LayerTreeHost" = type opaque
%"struct.cc::Layer::Inputs" = type { %"class.std::__1::vector.991", %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i32, %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", %"struct.cc::ElementId" }
%"class.std::__1::vector.991" = type { %"class.std::__1::__vector_base.992" }
%"class.std::__1::__vector_base.992" = type { %class.scoped_refptr.989*, %class.scoped_refptr.989*, %"class.std::__1::__compressed_pair.993" }
%"class.std::__1::__compressed_pair.993" = type { %"struct.std::__1::__compressed_pair_elem.994" }
%"struct.std::__1::__compressed_pair_elem.994" = type { %class.scoped_refptr.989* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.998" }
%"class.std::__1::vector.998" = type { %"class.std::__1::__vector_base.999" }
%"class.std::__1::__vector_base.999" = type { %"struct.std::__1::pair.1000"*, %"struct.std::__1::pair.1000"*, %"class.std::__1::__compressed_pair.1001" }
%"struct.std::__1::pair.1000" = type opaque
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.1002" }
%"struct.std::__1::__compressed_pair_elem.1002" = type { %"struct.std::__1::pair.1000"* }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1006" = type { %"class.std::__1::__compressed_pair.1007" }
%"class.std::__1::__compressed_pair.1007" = type { %"struct.std::__1::__compressed_pair_elem.1008" }
%"struct.std::__1::__compressed_pair_elem.1008" = type { %"struct.cc::Layer::LayerTreeInputs"* }
%"struct.cc::Layer::LayerTreeInputs" = type { %"class.gfx::Rect", %"class.cc::PictureLayer"*, float, i32, i8, %"class.gfx::PointF", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.viz::SubtreeCaptureId", i32, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.1029", float, i32, %"class.gfx::ScrollOffset", %"class.gfx::Size", %"class.gfx::RoundedCornersF", %"class.base::RepeatingCallback.1034", %"class.std::__1::vector.1035" }
%"class.cc::PictureLayer" = type <{ %"class.cc::Layer", %"struct.cc::PictureLayer::PictureLayerInputs", %"class.std::__1::unique_ptr.1331", %"struct.cc::devtools_instrumentation::ScopedLayerObjectTracker", %"class.cc::Region", i32, [4 x i8] }>
%"struct.cc::PictureLayer::PictureLayerInputs" = type <{ %"class.cc::ContentLayerClient"*, i8, i8, [6 x i8], %class.scoped_refptr.1230, %"class.absl::optional.1326", [4 x i8] }>
%"class.cc::ContentLayerClient" = type { i32 (...)** }
%class.scoped_refptr.1230 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type <{ %"class.base::RefCountedThreadSafe.1231", [4 x i8], %"class.cc::RTree", %"class.cc::DiscardableImageMap", %"class.cc::PaintOpBuffer", %"class.std::__1::vector.1017", %"class.std::__1::vector.1312", %"class.std::__1::vector.1319", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe.1231" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::RTree" = type <{ i64, %"struct.cc::RTree<unsigned long>::Branch", %"class.std::__1::vector.1232", i8, [7 x i8] }>
%"struct.cc::RTree<unsigned long>::Branch" = type { %"struct.cc::RTree<unsigned long>::Node"*, i64, %"class.gfx::Rect" }
%"struct.cc::RTree<unsigned long>::Node" = type opaque
%"class.std::__1::vector.1232" = type { %"class.std::__1::__vector_base.1233" }
%"class.std::__1::__vector_base.1233" = type { %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"*, %"class.std::__1::__compressed_pair.1234" }
%"class.std::__1::__compressed_pair.1234" = type { %"struct.std::__1::__compressed_pair_elem.1235" }
%"struct.std::__1::__compressed_pair_elem.1235" = type { %"struct.cc::RTree<unsigned long>::Node"* }
%"class.cc::DiscardableImageMap" = type { %"class.base::flat_map.1239", %"class.std::__1::vector.1249", %"class.base::flat_map.1263", i8, i8, [6 x i8], %"class.cc::RTree.1273", %"class.std::__1::vector.1304" }
%"class.base::flat_map.1239" = type { %"class.base::internal::flat_tree.1240" }
%"class.base::internal::flat_tree.1240" = type { %"class.std::__1::vector.1241" }
%"class.std::__1::vector.1241" = type { %"class.std::__1::__vector_base.1242" }
%"class.std::__1::__vector_base.1242" = type { %"struct.std::__1::pair.1243"*, %"struct.std::__1::pair.1243"*, %"class.std::__1::__compressed_pair.1244" }
%"struct.std::__1::pair.1243" = type opaque
%"class.std::__1::__compressed_pair.1244" = type { %"struct.std::__1::__compressed_pair_elem.1245" }
%"struct.std::__1::__compressed_pair_elem.1245" = type { %"struct.std::__1::pair.1243"* }
%"class.std::__1::vector.1249" = type { %"class.std::__1::__vector_base.1250" }
%"class.std::__1::__vector_base.1250" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"class.std::__1::__compressed_pair.1258" }
%"struct.cc::DiscardableImageMap::AnimatedImageMetadata" = type { i32, i32, %"class.std::__1::vector.1251", i32, i32 }
%"class.std::__1::vector.1251" = type { %"class.std::__1::__vector_base.1252" }
%"class.std::__1::__vector_base.1252" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.1253" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.std::__1::__compressed_pair.1253" = type { %"struct.std::__1::__compressed_pair_elem.1254" }
%"struct.std::__1::__compressed_pair_elem.1254" = type { %"struct.cc::FrameMetadata"* }
%"class.std::__1::__compressed_pair.1258" = type { %"struct.std::__1::__compressed_pair_elem.1259" }
%"struct.std::__1::__compressed_pair_elem.1259" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"* }
%"class.base::flat_map.1263" = type { %"class.base::internal::flat_tree.1264" }
%"class.base::internal::flat_tree.1264" = type { %"class.std::__1::vector.1265" }
%"class.std::__1::vector.1265" = type { %"class.std::__1::__vector_base.1266" }
%"class.std::__1::__vector_base.1266" = type { %"struct.std::__1::pair.1267"*, %"struct.std::__1::pair.1267"*, %"class.std::__1::__compressed_pair.1268" }
%"struct.std::__1::pair.1267" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1268" = type { %"struct.std::__1::__compressed_pair_elem.1269" }
%"struct.std::__1::__compressed_pair_elem.1269" = type { %"struct.std::__1::pair.1267"* }
%"class.cc::RTree.1273" = type <{ i64, %"struct.cc::RTree<cc::DrawImage>::Branch", %"class.std::__1::vector.1296", i8, [7 x i8] }>
%"struct.cc::RTree<cc::DrawImage>::Branch" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.cc::DrawImage", %"class.gfx::Rect" }
%"struct.cc::RTree<cc::DrawImage>::Node" = type opaque
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional.1286", %"class.absl::optional.1291", float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp.1274, %class.sk_sp.1277, %"class.gfx::Rect", i32, %class.sk_sp.1282, %class.sk_sp.1283, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.1274, %class.scoped_refptr.1284 }
%class.sk_sp.1277 = type { %"class.cc::PaintOpBuffer"* }
%class.sk_sp.1282 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.1283 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp.1274 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.1275, i32, i32 }
%class.sk_sp.1275 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.1276, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.1276 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.311" }
%struct.SkISize = type { i32, i32 }
%class.scoped_refptr.1284 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1285", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1285" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkSize = type { float, float }
%"class.absl::optional.1286" = type { %"class.absl::optional_internal::optional_data.1287" }
%"class.absl::optional_internal::optional_data.1287" = type { %"class.absl::optional_internal::optional_data_base.1288" }
%"class.absl::optional_internal::optional_data_base.1288" = type { %"class.absl::optional_internal::optional_data_dtor_base.1289" }
%"class.absl::optional_internal::optional_data_dtor_base.1289" = type { i8, %union.anon.1290 }
%union.anon.1290 = type { i64 }
%"class.absl::optional.1291" = type { %"class.absl::optional_internal::optional_data.1292" }
%"class.absl::optional_internal::optional_data.1292" = type { %"class.absl::optional_internal::optional_data_base.1293" }
%"class.absl::optional_internal::optional_data_base.1293" = type { %"class.absl::optional_internal::optional_data_dtor_base.1294" }
%"class.absl::optional_internal::optional_data_dtor_base.1294" = type { i8, %union.anon.1295 }
%union.anon.1295 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::vector.1296" = type { %"class.std::__1::__vector_base.1297" }
%"class.std::__1::__vector_base.1297" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.std::__1::__compressed_pair.1298" }
%"class.std::__1::__compressed_pair.1298" = type { %"struct.std::__1::__compressed_pair_elem.1299" }
%"struct.std::__1::__compressed_pair_elem.1299" = type { %"struct.cc::RTree<cc::DrawImage>::Node"* }
%"class.std::__1::vector.1304" = type { %"class.std::__1::__vector_base.1305" }
%"class.std::__1::__vector_base.1305" = type { %"struct.std::__1::pair.1306"*, %"struct.std::__1::pair.1306"*, %"class.std::__1::__compressed_pair.1307" }
%"struct.std::__1::pair.1306" = type opaque
%"class.std::__1::__compressed_pair.1307" = type { %"struct.std::__1::__compressed_pair_elem.1308" }
%"struct.std::__1::__compressed_pair_elem.1308" = type { %"struct.std::__1::pair.1306"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.1278", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1278" = type { %"class.std::__1::__compressed_pair.1279" }
%"class.std::__1::__compressed_pair.1279" = type { %"struct.std::__1::__compressed_pair_elem.1280" }
%"struct.std::__1::__compressed_pair_elem.1280" = type { i8* }
%"class.std::__1::vector.1017" = type { %"class.std::__1::__vector_base.1018" }
%"class.std::__1::__vector_base.1018" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.1019" }
%"class.std::__1::__compressed_pair.1019" = type { %"struct.std::__1::__compressed_pair_elem.1020" }
%"struct.std::__1::__compressed_pair_elem.1020" = type { %"class.gfx::Rect"* }
%"class.std::__1::vector.1312" = type { %"class.std::__1::__vector_base.1313" }
%"class.std::__1::__vector_base.1313" = type { i64*, i64*, %"class.std::__1::__compressed_pair.1314" }
%"class.std::__1::__compressed_pair.1314" = type { %"struct.std::__1::__compressed_pair_elem.1315" }
%"struct.std::__1::__compressed_pair_elem.1315" = type { i64* }
%"class.std::__1::vector.1319" = type { %"class.std::__1::__vector_base.1320" }
%"class.std::__1::__vector_base.1320" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"class.std::__1::__compressed_pair.1321" }
%"struct.cc::DisplayItemList::PairedBeginInfo" = type { i64, i64 }
%"class.std::__1::__compressed_pair.1321" = type { %"struct.std::__1::__compressed_pair_elem.1322" }
%"struct.std::__1::__compressed_pair_elem.1322" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"* }
%"class.absl::optional.1326" = type { %"class.absl::optional_internal::optional_data.1327" }
%"class.absl::optional_internal::optional_data.1327" = type { %"class.absl::optional_internal::optional_data_base.1328" }
%"class.absl::optional_internal::optional_data_base.1328" = type { %"class.absl::optional_internal::optional_data_dtor_base.1329" }
%"class.absl::optional_internal::optional_data_dtor_base.1329" = type { i8, %union.anon.1330 }
%union.anon.1330 = type { %"class.gfx::Size" }
%"class.std::__1::unique_ptr.1331" = type { %"class.std::__1::__compressed_pair.1332" }
%"class.std::__1::__compressed_pair.1332" = type { %"struct.std::__1::__compressed_pair_elem.1333" }
%"struct.std::__1::__compressed_pair_elem.1333" = type { %"class.cc::RecordingSource"* }
%"class.cc::RecordingSource" = type opaque
%"struct.cc::devtools_instrumentation::ScopedLayerObjectTracker" = type { %"class.base::trace_event::TraceScopedTrackableObject.base", [4 x i8] }
%"class.base::trace_event::TraceScopedTrackableObject.base" = type <{ i8*, i32 }>
%"class.gfx::PointF" = type { float, float }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.gfx::Point3F" = type { float, float, float }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.1009" }
%"class.std::__1::vector.1009" = type { %"class.std::__1::__vector_base.1010" }
%"class.std::__1::__vector_base.1010" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.1024" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.1017", i32, [4 x i8] }>
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1011, i32, %"class.absl::optional.1012", i8, i32 }
%class.sk_sp.1011 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1012" = type { %"class.absl::optional_internal::optional_data.1013" }
%"class.absl::optional_internal::optional_data.1013" = type { %"class.absl::optional_internal::optional_data_base.1014" }
%"class.absl::optional_internal::optional_data_base.1014" = type { %"class.absl::optional_internal::optional_data_dtor_base.1015" }
%"class.absl::optional_internal::optional_data_dtor_base.1015" = type { i8, %union.anon.1016 }
%union.anon.1016 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::__compressed_pair.1024" = type { %"struct.std::__1::__compressed_pair_elem.1025" }
%"struct.std::__1::__compressed_pair_elem.1025" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.1029" = type { %"class.absl::optional_internal::optional_data.1030" }
%"class.absl::optional_internal::optional_data.1030" = type { %"class.absl::optional_internal::optional_data_base.1031" }
%"class.absl::optional_internal::optional_data_base.1031" = type { %"class.absl::optional_internal::optional_data_dtor_base.1032" }
%"class.absl::optional_internal::optional_data_dtor_base.1032" = type { i8, %union.anon.1033 }
%union.anon.1033 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.gfx::RoundedCornersF" = type { float, float, float, float }
%"class.base::RepeatingCallback.1034" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::vector.1035" = type { %"class.std::__1::__vector_base.1036" }
%"class.std::__1::__vector_base.1036" = type { %"class.std::__1::unique_ptr.1037"*, %"class.std::__1::unique_ptr.1037"*, %"class.std::__1::__compressed_pair.1038" }
%"class.std::__1::unique_ptr.1037" = type opaque
%"class.std::__1::__compressed_pair.1038" = type { %"struct.std::__1::__compressed_pair_elem.1039" }
%"struct.std::__1::__compressed_pair_elem.1039" = type { %"class.std::__1::unique_ptr.1037"* }
%"class.gfx::Vector2dF" = type { float, float }
%"class.std::__1::unique_ptr.1046" = type { %"class.std::__1::__compressed_pair.1047" }
%"class.std::__1::__compressed_pair.1047" = type { %"struct.std::__1::__compressed_pair_elem.1048" }
%"struct.std::__1::__compressed_pair_elem.1048" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.1049", %"class.std::__1::vector.1049", %"class.std::__1::vector.1056" }
%"class.std::__1::vector.1049" = type { %"class.std::__1::__vector_base.1050" }
%"class.std::__1::__vector_base.1050" = type { i8**, i8**, %"class.std::__1::__compressed_pair.1051" }
%"class.std::__1::__compressed_pair.1051" = type { %"struct.std::__1::__compressed_pair_elem.1052" }
%"struct.std::__1::__compressed_pair_elem.1052" = type { i8** }
%"class.std::__1::vector.1056" = type { %"class.std::__1::__vector_base.1057" }
%"class.std::__1::__vector_base.1057" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.1058" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.1059" }
%"struct.std::__1::__compressed_pair_elem.1059" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.std::__1::unique_ptr.1069"*, i32, i32 }
%"class.std::__1::unique_ptr.1069" = type opaque
%"class.WTF::Vector.1072" = type { %"class.WTF::VectorBuffer.1073" }
%"class.WTF::VectorBuffer.1073" = type { %"class.WTF::VectorBufferBase.1074" }
%"class.WTF::VectorBufferBase.1074" = type { %"struct.blink::PaintArtifactCompositor::SynthesizedClipEntry"*, i32, i32 }
%"struct.blink::PaintArtifactCompositor::SynthesizedClipEntry" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.std::__1::unique_ptr.1136", i8, [7 x i8] }>
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.1091" }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1075", i8, i8, %class.scoped_refptr.1077, i32, i32 }
%"class.WTF::RefCounted.1075" = type { %"class.base::RefCounted.1076" }
%"class.base::RefCounted.1076" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1077 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1078, %"class.absl::optional.1079", %class.scoped_refptr.1084, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%class.scoped_refptr.1078 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1097" }
%"class.blink::PaintPropertyNode.1097" = type { %"class.WTF::RefCounted.1098", i8, i8, %class.scoped_refptr.1078, i32, i32 }
%"class.WTF::RefCounted.1098" = type { %"class.base::RefCounted.1099" }
%"class.base::RefCounted.1099" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1079" = type { %"class.absl::optional_internal::optional_data.1080" }
%"class.absl::optional_internal::optional_data.1080" = type { %"class.absl::optional_internal::optional_data_base.1081" }
%"class.absl::optional_internal::optional_data_base.1081" = type { %"class.absl::optional_internal::optional_data_dtor_base.1082" }
%"class.absl::optional_internal::optional_data_dtor_base.1082" = type { i8, [3 x i8], %union.anon.1083 }
%union.anon.1083 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%class.scoped_refptr.1084 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.1089", [4 x i8] }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.1085, i32, %"struct.std::__1::atomic.311", %"struct.std::__1::atomic.311", i8, i8 }>
%class.sk_sp.1085 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1086, %class.SkTDArray.1087, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.1086 = type { i8*, i32, i32 }
%class.SkTDArray.1087 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.1088 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.1088 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.301", [3 x i8] }
%"class.WTF::RefCounted.1089" = type { %"class.base::RefCounted.1090" }
%"class.base::RefCounted.1090" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1091" = type { %"class.std::__1::__compressed_pair.1092" }
%"class.std::__1::__compressed_pair.1092" = type { %"struct.std::__1::__compressed_pair_elem.1093" }
%"struct.std::__1::__compressed_pair_elem.1093" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.1094", i32, [4 x i8] }>
%"class.WTF::Vector.1094" = type { %"class.WTF::VectorBuffer.1095" }
%"class.WTF::VectorBuffer.1095" = type { %"class.WTF::VectorBufferBase.1096" }
%"class.WTF::VectorBufferBase.1096" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1113" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1106, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1107", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1100" }
%"class.std::__1::unique_ptr.1100" = type { %"class.std::__1::__compressed_pair.1101" }
%"class.std::__1::__compressed_pair.1101" = type { %"struct.std::__1::__compressed_pair_elem.1102" }
%"struct.std::__1::__compressed_pair_elem.1102" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1106 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1215", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1215" = type { %"class.WTF::RefCounted.1216", i8, i8, %class.scoped_refptr.1106, i32, i32 }
%"class.WTF::RefCounted.1216" = type { %"class.base::RefCounted.1217" }
%"class.base::RefCounted.1217" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1218" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1218" = type { %"class.absl::optional_internal::optional_data.1219" }
%"class.absl::optional_internal::optional_data.1219" = type { %"class.absl::optional_internal::optional_data_base.1220" }
%"class.absl::optional_internal::optional_data_base.1220" = type { %"class.absl::optional_internal::optional_data_dtor_base.1221" }
%"class.absl::optional_internal::optional_data_dtor_base.1221" = type { i8, %union.anon.1222 }
%union.anon.1222 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1223", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.1223" = type { %"class.std::__1::__vector_base.1224" }
%"class.std::__1::__vector_base.1224" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1225" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1225" = type { %"struct.std::__1::__compressed_pair_elem.1226" }
%"struct.std::__1::__compressed_pair_elem.1226" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1107" = type { %"class.std::__1::__compressed_pair.1108" }
%"class.std::__1::__compressed_pair.1108" = type { %"struct.std::__1::__compressed_pair_elem.1109" }
%"struct.std::__1::__compressed_pair_elem.1109" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.std::__1::unique_ptr.1113" = type { %"class.std::__1::__compressed_pair.1114" }
%"class.std::__1::__compressed_pair.1114" = type { %"struct.std::__1::__compressed_pair_elem.1115" }
%"struct.std::__1::__compressed_pair_elem.1115" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1116", %"class.std::__1::unique_ptr.1122", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1116" = type { %"class.std::__1::__compressed_pair.1117" }
%"class.std::__1::__compressed_pair.1117" = type { %"struct.std::__1::__compressed_pair_elem.1118" }
%"struct.std::__1::__compressed_pair_elem.1118" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1122" = type { %"class.std::__1::__compressed_pair.1123" }
%"class.std::__1::__compressed_pair.1123" = type { %"struct.std::__1::__compressed_pair_elem.1124" }
%"struct.std::__1::__compressed_pair_elem.1124" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1136" = type { %"class.std::__1::__compressed_pair.1137" }
%"class.std::__1::__compressed_pair.1137" = type { %"struct.std::__1::__compressed_pair_elem.1138" }
%"struct.std::__1::__compressed_pair_elem.1138" = type { %"class.blink::SynthesizedClip"* }
%"class.blink::SynthesizedClip" = type { %"class.cc::ContentLayerClient", %class.scoped_refptr.1139, %"class.blink::GeometryMapper::Translation2DOrMatrix", i8, %class.SkRRect, %class.scoped_refptr.1084, %"struct.cc::ElementId", %"struct.cc::ElementId" }
%class.scoped_refptr.1139 = type { %"class.cc::PictureLayer"* }
%"class.blink::GeometryMapper::Translation2DOrMatrix" = type { %"class.blink::FloatSize", %"class.absl::optional.1140" }
%"class.absl::optional.1140" = type { %"class.absl::optional_internal::optional_data.1141" }
%"class.absl::optional_internal::optional_data.1141" = type { %"class.absl::optional_internal::optional_data_base.1142" }
%"class.absl::optional_internal::optional_data_base.1142" = type { %"class.absl::optional_internal::optional_data_dtor_base.1143" }
%"class.absl::optional_internal::optional_data_dtor_base.1143" = type { i8, %union.anon.1144 }
%union.anon.1144 = type { %"class.blink::TransformationMatrix" }
%"class.WTF::Vector.1150" = type { %"class.WTF::VectorBuffer.1151" }
%"class.WTF::VectorBuffer.1151" = type { %"class.WTF::VectorBufferBase.1152" }
%"class.WTF::VectorBufferBase.1152" = type { %class.scoped_refptr.989*, i32, i32 }
%"class.WTF::Vector.1155" = type { %"class.WTF::VectorBuffer.1156" }
%"class.WTF::VectorBuffer.1156" = type { %"class.WTF::VectorBufferBase.1157" }
%"class.WTF::VectorBufferBase.1157" = type { %class.scoped_refptr.1158*, i32, i32 }
%class.scoped_refptr.1158 = type opaque
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"struct.blink::PaintArtifactCompositor::PendingLayer"*, i32, i32 }
%"struct.blink::PaintArtifactCompositor::PendingLayer" = type <{ %"class.blink::FloatRect", %"class.blink::FloatRect", i8, [7 x i8], %"class.blink::PaintChunkSubset", %"class.blink::PropertyTreeState", %"class.blink::FloatPoint", i8, [7 x i8], %"class.blink::GraphicsLayer"*, i32, [4 x i8] }>
%"class.blink::PaintChunkSubset" = type { %class.scoped_refptr.1164, %"class.WTF::Vector.1205", i32, i32 }
%class.scoped_refptr.1164 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1165", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1172" }
%"class.WTF::RefCounted.1165" = type { %"class.base::RefCounted.1166" }
%"class.base::RefCounted.1166" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1167", i32, [4 x i8] }>
%"class.WTF::Vector.1167" = type { %"class.WTF::VectorBuffer.1168" }
%"class.WTF::VectorBuffer.1168" = type { %"class.WTF::VectorBufferBase.1169" }
%"class.WTF::VectorBufferBase.1169" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1172" = type { %"class.WTF::VectorBuffer.1173" }
%"class.WTF::VectorBuffer.1173" = type { %"class.WTF::VectorBufferBase.1174" }
%"class.WTF::VectorBufferBase.1174" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1176", %"class.std::__1::unique_ptr.1192", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1078, %class.scoped_refptr.1077, %class.scoped_refptr.1175 }
%class.scoped_refptr.1175 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1212" }
%"class.blink::PaintPropertyNode.1212" = type { %"class.WTF::RefCounted.1213", i8, i8, %class.scoped_refptr.1175, i32, i32 }
%"class.WTF::RefCounted.1213" = type { %"class.base::RefCounted.1214" }
%"class.base::RefCounted.1214" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1176" = type { %"class.std::__1::__compressed_pair.1177" }
%"class.std::__1::__compressed_pair.1177" = type { %"struct.std::__1::__compressed_pair_elem.1178" }
%"struct.std::__1::__compressed_pair_elem.1178" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1179", %"class.WTF::Vector.1184", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1179" = type { %"class.WTF::VectorBuffer.1180" }
%"class.WTF::VectorBuffer.1180" = type { %"class.WTF::VectorBufferBase.1181" }
%"class.WTF::VectorBufferBase.1181" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1184" = type { %"class.WTF::VectorBuffer.1185" }
%"class.WTF::VectorBuffer.1185" = type { %"class.WTF::VectorBufferBase.1186" }
%"class.WTF::VectorBufferBase.1186" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.1192" = type { %"class.std::__1::__compressed_pair.1193" }
%"class.std::__1::__compressed_pair.1193" = type { %"struct.std::__1::__compressed_pair_elem.1194" }
%"struct.std::__1::__compressed_pair_elem.1194" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1195", %"class.absl::optional.1195" }
%"class.absl::optional.1195" = type { %"class.absl::optional_internal::optional_data.1196" }
%"class.absl::optional_internal::optional_data.1196" = type { %"class.absl::optional_internal::optional_data_base.1197" }
%"class.absl::optional_internal::optional_data_base.1197" = type { %"class.absl::optional_internal::optional_data_dtor_base.1198" }
%"class.absl::optional_internal::optional_data_dtor_base.1198" = type { i8, [3 x i8], %union.anon.1199 }
%union.anon.1199 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.WTF::Vector.1205" = type { %"class.WTF::VectorBuffer.1206" }
%"class.WTF::VectorBuffer.1206" = type { %"class.WTF::VectorBufferBase.1207" }
%"class.WTF::VectorBufferBase.1207" = type { i32*, i32, i32 }
%"class.blink::PropertyTreeState" = type { %"class.blink::PropertyTreeStateOrAlias" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::GraphicsLayer" = type opaque
%"class.WTF::HashSet.1337" = type { %"class.WTF::HashTable.1338" }
%"class.WTF::HashTable.1338" = type <{ %"class.blink::PropertyHandle"*, i32, i32, i32, [4 x i8] }>
%"class.blink::PropertyHandle" = type { i32, %union.anon.1341, %"class.WTF::AtomicString" }
%union.anon.1341 = type { %"class.blink::CSSProperty"* }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"struct.blink::CompositorAnimations::CompositorTiming" = type { i32, %"class.blink::AnimationTimeDelta", %"class.base::TimeDelta", double, double, i32, double }
%"class.blink::KeyframeEffectModelBase" = type <{ %"class.blink::EffectModel", %"class.blink::HeapVector.1342", %"class.blink::Member.1350", %"class.blink::Member.1374", i32, [4 x i8], double, %"class.blink::AnimationTimeDelta", i32, [4 x i8], %class.scoped_refptr, i8, i8, i8, [5 x i8] }>
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type { %"class.blink::MemberBase.2916" }
%"class.blink::MemberBase.2916" = type { %"class.blink::Keyframe"* }
%"class.blink::Keyframe" = type { i32 (...)**, %"class.absl::optional.796", %"class.absl::optional.2919", %class.scoped_refptr }
%"class.absl::optional.2919" = type { %"class.absl::optional_internal::optional_data.2920" }
%"class.absl::optional_internal::optional_data.2920" = type { %"class.absl::optional_internal::optional_data_base.2921" }
%"class.absl::optional_internal::optional_data_base.2921" = type { %"class.absl::optional_internal::optional_data_dtor_base.2922" }
%"class.absl::optional_internal::optional_data_dtor_base.2922" = type { i8, %union.anon.2923 }
%union.anon.2923 = type { i32 }
%"class.blink::Member.1350" = type { %"class.blink::MemberBase.1351" }
%"class.blink::MemberBase.1351" = type { %"class.blink::HeapHashMap.1352"* }
%"class.blink::HeapHashMap.1352" = type { %"class.WTF::HashMap.1355" }
%"class.WTF::HashMap.1355" = type { %"class.WTF::HashTable.1356" }
%"class.WTF::HashTable.1356" = type <{ %"struct.WTF::KeyValuePair.1358"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1358" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1359" }
%"class.blink::Member.1359" = type { %"class.blink::MemberBase.1360" }
%"class.blink::MemberBase.1360" = type { %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* }
%"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup" = type { %"class.blink::HeapVector.1363" }
%"class.blink::HeapVector.1363" = type { %"class.WTF::Vector.1366" }
%"class.WTF::Vector.1366" = type { %"class.WTF::VectorBuffer.1367" }
%"class.WTF::VectorBuffer.1367" = type { %"class.WTF::VectorBufferBase.1368" }
%"class.WTF::VectorBufferBase.1368" = type { %"class.blink::Member.1369"*, i32, i32 }
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::Keyframe::PropertySpecificKeyframe"* }
%"class.blink::Keyframe::PropertySpecificKeyframe" = type <{ i32 (...)**, double, %class.scoped_refptr, i32, [4 x i8] }>
%"class.blink::Member.1374" = type { %"class.blink::MemberBase.1375" }
%"class.blink::MemberBase.1375" = type { %"class.blink::InterpolationEffect"* }
%"class.blink::InterpolationEffect" = type { i8, %"class.blink::HeapVector.1378" }
%"class.blink::HeapVector.1378" = type { %"class.WTF::Vector.1381" }
%"class.WTF::Vector.1381" = type { %"class.WTF::VectorBuffer.1382" }
%"class.WTF::VectorBuffer.1382" = type { %"class.WTF::VectorBufferBase.1383" }
%"class.WTF::VectorBufferBase.1383" = type { %"class.blink::Member.1384"*, i32, i32 }
%"class.blink::Member.1384" = type { %"class.blink::MemberBase.2913" }
%"class.blink::MemberBase.2913" = type { %"class.blink::InterpolationEffect::InterpolationRecord"* }
%"class.blink::InterpolationEffect::InterpolationRecord" = type { %"class.blink::Member.2625", %class.scoped_refptr, double, double, double, double }
%"class.blink::Member.2625" = type { %"class.blink::MemberBase.2626" }
%"class.blink::MemberBase.2626" = type { %"class.blink::Interpolation"* }
%"class.blink::Interpolation" = type { i32 (...)** }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.3114", %"class.blink::Member.3116", %"class.blink::Member.3118", %"class.blink::Member.3137", %"class.blink::Member.3139" }
%"class.blink::Member.3114" = type { %"class.blink::MemberBase.3115" }
%"class.blink::MemberBase.3115" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr.1386 }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.1386, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1824" }
%"class.blink::MemberBase.1824" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1825" }
%"class.std::__1::unique_ptr.1825" = type { %"class.std::__1::__compressed_pair.1826" }
%"class.std::__1::__compressed_pair.1826" = type { %"struct.std::__1::__compressed_pair_elem.1827" }
%"struct.std::__1::__compressed_pair_elem.1827" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.1828", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1834", %"class.std::__1::unique_ptr.1861", i8, %"class.absl::optional.1867", %class.scoped_refptr.1084, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1872" }
%"class.std::__1::unique_ptr.1828" = type { %"class.std::__1::__compressed_pair.1829" }
%"class.std::__1::__compressed_pair.1829" = type { %"struct.std::__1::__compressed_pair_elem.1830" }
%"struct.std::__1::__compressed_pair_elem.1830" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.1834" = type { %"class.std::__1::__compressed_pair.1835" }
%"class.std::__1::__compressed_pair.1835" = type { %"struct.std::__1::__compressed_pair_elem.1836" }
%"struct.std::__1::__compressed_pair_elem.1836" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1837, %class.scoped_refptr.1837, %class.scoped_refptr.1837, %class.scoped_refptr.1837, %class.scoped_refptr.1837, %class.scoped_refptr.1837, %class.scoped_refptr.1838, %class.scoped_refptr.1839, %class.scoped_refptr.1840, %class.scoped_refptr.1840, %class.scoped_refptr.1840, %class.scoped_refptr.1840, %class.scoped_refptr.1840, %class.scoped_refptr.1840, %class.scoped_refptr.1855, %class.scoped_refptr.1856, %class.scoped_refptr.1856, %class.scoped_refptr.1856, %class.scoped_refptr.1856, %class.scoped_refptr.1856, %class.scoped_refptr.1856, %class.scoped_refptr.1856, %class.scoped_refptr.1856, %class.scoped_refptr.1857 }
%class.scoped_refptr.1837 = type { %"class.blink::TransformPaintPropertyNode"* }
%class.scoped_refptr.1838 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1839 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1840 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1078, %class.scoped_refptr.1077, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1841", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.std::__1::unique_ptr.1841" = type { %"class.std::__1::__compressed_pair.1842" }
%"class.std::__1::__compressed_pair.1842" = type { %"struct.std::__1::__compressed_pair_elem.1843" }
%"struct.std::__1::__compressed_pair_elem.1843" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.1847" }
%"class.base::internal::flat_tree.1847" = type { %"class.std::__1::vector.1848" }
%"class.std::__1::vector.1848" = type { %"class.std::__1::__vector_base.1849" }
%"class.std::__1::__vector_base.1849" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1850" }
%"class.std::__1::__compressed_pair.1850" = type { %"struct.std::__1::__compressed_pair_elem.1851" }
%"struct.std::__1::__compressed_pair_elem.1851" = type { i32* }
%class.scoped_refptr.1855 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1856 = type { %"class.blink::ClipPaintPropertyNode"* }
%class.scoped_refptr.1857 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.1861" = type { %"class.std::__1::__compressed_pair.1862" }
%"class.std::__1::__compressed_pair.1862" = type { %"struct.std::__1::__compressed_pair_elem.1863" }
%"struct.std::__1::__compressed_pair_elem.1863" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.absl::optional.1867" = type { %"class.absl::optional_internal::optional_data.1868" }
%"class.absl::optional_internal::optional_data.1868" = type { %"class.absl::optional_internal::optional_data_base.1869" }
%"class.absl::optional_internal::optional_data_base.1869" = type { %"class.absl::optional_internal::optional_data_dtor_base.1870" }
%"class.absl::optional_internal::optional_data_dtor_base.1870" = type { i8, %union.anon.1871 }
%union.anon.1871 = type { %"class.blink::IntRect" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.1872" = type { %"class.std::__1::__compressed_pair.1873" }
%"class.std::__1::__compressed_pair.1873" = type { %"struct.std::__1::__compressed_pair_elem.1874" }
%"struct.std::__1::__compressed_pair_elem.1874" = type { %"class.blink::FragmentData"* }
%class.scoped_refptr.1386 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1809", %"class.std::__1::unique_ptr.1811" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.1452", %"class.blink::DataRef.1532", %"class.blink::DataRef.1536", %"class.blink::DataRef.1729", %"class.blink::DataRef.1792", %"class.blink::DataRef.1796", %"class.blink::DataRef.1800", %"class.blink::DataRef.1804", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.1387 }
%class.scoped_refptr.1387 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.1388", %"class.blink::DataRef.1390", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.1388" = type { %"class.base::RefCounted.1389" }
%"class.base::RefCounted.1389" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1390" = type { %class.scoped_refptr.1391 }
%class.scoped_refptr.1391 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.1392", %"class.blink::Font" }
%"class.WTF::RefCounted.1392" = type { %"class.base::RefCounted.1393" }
%"class.base::RefCounted.1393" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.1420 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.1395, %class.scoped_refptr.1403, %class.scoped_refptr.1413, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.1419 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1394 }
%class.scoped_refptr.1394 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1883", [4 x i8] }>
%"class.WTF::RefCounted.1883" = type { %"class.base::RefCounted.1884" }
%"class.base::RefCounted.1884" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1395 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.1401", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.1396" }
%"class.WTF::Vector.1396" = type { %"class.WTF::VectorBuffer.1397" }
%"class.WTF::VectorBuffer.1397" = type { %"class.WTF::VectorBufferBase.1398" }
%"class.WTF::VectorBufferBase.1398" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.1401" = type { %"class.base::RefCounted.1402" }
%"class.base::RefCounted.1402" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1403 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.1404", %"class.WTF::RefCounted.1411", [4 x i8] }>
%"class.blink::FontSettings.1404" = type { %"class.WTF::Vector.1405" }
%"class.WTF::Vector.1405" = type { %"class.WTF::VectorBuffer.1406" }
%"class.WTF::VectorBuffer.1406" = type { %"class.WTF::VectorBufferBase.1407" }
%"class.WTF::VectorBufferBase.1407" = type { %"class.blink::FontTagValuePair.1408"*, i32, i32 }
%"class.blink::FontTagValuePair.1408" = type { i32, float }
%"class.WTF::RefCounted.1411" = type { %"class.base::RefCounted.1412" }
%"class.base::RefCounted.1412" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1413 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.1414", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.1416, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.1414" = type { %"class.base::RefCounted.1415" }
%"class.base::RefCounted.1415" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.1416 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1417", [4 x i8] }>
%"class.WTF::RefCounted.1417" = type { %"class.base::RefCounted.1418" }
%"class.base::RefCounted.1418" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.1419 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.1420 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.1421", %"class.WTF::Vector.1423", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr.1450" }
%"class.WTF::RefCounted.1421" = type { %"class.base::RefCounted.1422" }
%"class.base::RefCounted.1422" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1423" = type { %"class.WTF::VectorBuffer.1424" }
%"class.WTF::VectorBuffer.1424" = type { %"class.WTF::VectorBufferBase.1425", [8 x i8] }
%"class.WTF::VectorBufferBase.1425" = type { %class.scoped_refptr.1426*, i32, i32 }
%class.scoped_refptr.1426 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.1427", [4 x i8] }>
%"class.WTF::RefCounted.1427" = type { %"class.base::RefCounted.1428" }
%"class.base::RefCounted.1428" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.1438", %class.scoped_refptr.1445, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1427" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.1431", %"class.absl::optional.1431", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.1431" = type { %"class.absl::optional_internal::optional_data.1432" }
%"class.absl::optional_internal::optional_data.1432" = type { %"class.absl::optional_internal::optional_data_base.1433" }
%"class.absl::optional_internal::optional_data_base.1433" = type { %"class.absl::optional_internal::optional_data_dtor_base.1434" }
%"class.absl::optional_internal::optional_data_dtor_base.1434" = type { i8, %union.anon.1435 }
%union.anon.1435 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp.1436, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.1437, i8, [7 x i8] }>
%class.sk_sp.1436 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.1437 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp.1436, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.1438" = type { %"class.std::__1::__compressed_pair.1439" }
%"class.std::__1::__compressed_pair.1439" = type { %"struct.std::__1::__compressed_pair_elem.1440" }
%"struct.std::__1::__compressed_pair_elem.1440" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.1441, %class.scoped_refptr.1441 }
%class.scoped_refptr.1441 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.1445 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.1446", [4 x i8] }>
%"class.WTF::RefCounted.1446" = type { %"class.base::RefCounted.1447" }
%"class.base::RefCounted.1447" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.1448" }
%"class.blink::PersistentBase.1448" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.1449" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr.1449" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr.1450" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::Length" = type <{ %union.anon.1451, i8, i8, i8, i8 }>
%union.anon.1451 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.1452" = type { %class.scoped_refptr.1453 }
%class.scoped_refptr.1453 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.1454", [4 x i8], %"class.blink::DataRef.1456", %"class.blink::DataRef.1497", %"class.WTF::Vector.1501", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.1505, %class.scoped_refptr.1514, %"class.blink::Persistent.1522", %"class.blink::Persistent.1524", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.1454" = type { %"class.base::RefCounted.1455" }
%"class.base::RefCounted.1455" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1456" = type { %class.scoped_refptr.1457 }
%class.scoped_refptr.1457 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.1458", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.1460, %class.scoped_refptr.1467, %"class.blink::Persistent.1484", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.1458" = type { %"class.base::RefCounted.1459" }
%"class.base::RefCounted.1459" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1460 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.1461", %"class.WTF::Vector.1462" }
%"class.base::RefCountedThreadSafe.1461" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1462" = type { %"class.WTF::VectorBuffer.1463" }
%"class.WTF::VectorBuffer.1463" = type { %"class.WTF::VectorBufferBase.1464" }
%"class.WTF::VectorBufferBase.1464" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.1467 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.1468", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.1468" = type { %"class.base::RefCounted.1469" }
%"class.base::RefCounted.1469" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.1470", %"class.blink::Persistent.1475" }
%"class.WTF::HashMap.1470" = type { %"class.WTF::HashTable.1471" }
%"class.WTF::HashTable.1471" = type <{ %"struct.WTF::KeyValuePair.1474"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1474" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2948 }
%class.scoped_refptr.2948 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2949", %"class.WTF::Vector.670", %"class.WTF::Vector.2951", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2949" = type { %"class.base::RefCounted.2950" }
%"class.base::RefCounted.2950" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2951" = type { %"class.WTF::VectorBuffer.2952" }
%"class.WTF::VectorBuffer.2952" = type { %"class.WTF::VectorBufferBase.2953" }
%"class.WTF::VectorBufferBase.2953" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2954 }
%union.anon.2954 = type { double }
%"class.blink::Persistent.1475" = type { %"class.blink::PersistentBase.1476" }
%"class.blink::PersistentBase.1476" = type { %"class.blink::HeapHashMap.1477"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashMap.1477" = type { %"class.WTF::HashMap.1480" }
%"class.WTF::HashMap.1480" = type { %"class.WTF::HashTable.1481" }
%"class.WTF::HashTable.1481" = type <{ %"struct.WTF::KeyValuePair.1483"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1483" = type opaque
%"class.blink::Persistent.1484" = type { %"class.blink::PersistentBase.1485" }
%"class.blink::PersistentBase.1485" = type { %"class.blink::HeapVector.1486"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.1486" = type { %"class.WTF::Vector.1489" }
%"class.WTF::Vector.1489" = type { %"class.WTF::VectorBuffer.1490" }
%"class.WTF::VectorBuffer.1490" = type { %"class.WTF::VectorBufferBase.1491" }
%"class.WTF::VectorBufferBase.1491" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.1492", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.1492" = type { %"class.blink::MemberBase.1493" }
%"class.blink::MemberBase.1493" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.1497" = type { %class.scoped_refptr.1498 }
%class.scoped_refptr.1498 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.1499", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.1499" = type { %"class.base::RefCounted.1500" }
%"class.base::RefCounted.1500" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1501" = type { %"class.WTF::VectorBuffer.1502" }
%"class.WTF::VectorBuffer.1502" = type { %"class.WTF::VectorBufferBase" }
%class.scoped_refptr.1505 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.1506", %"class.WTF::Vector.1508" }
%"class.WTF::RefCounted.1506" = type { %"class.base::RefCounted.1507" }
%"class.base::RefCounted.1507" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1508" = type { %"class.WTF::VectorBuffer.1509" }
%"class.WTF::VectorBuffer.1509" = type { %"class.WTF::VectorBufferBase.1510" }
%"class.WTF::VectorBufferBase.1510" = type { %"struct.std::__1::pair.1511"*, i32, i32 }
%"struct.std::__1::pair.1511" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1514 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.1515", [4 x i8], %"class.WTF::Vector.1517" }
%"class.WTF::RefCounted.1515" = type { %"class.base::RefCounted.1516" }
%"class.base::RefCounted.1516" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1517" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.1519", [28 x i8] }>
%"class.WTF::VectorBufferBase.1519" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.1522" = type { %"class.blink::PersistentBase.1523" }
%"class.blink::PersistentBase.1523" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.1524" = type { %"class.blink::PersistentBase.1525" }
%"class.blink::PersistentBase.1525" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.1528", %"class.blink::Member.1530" }
%"class.blink::Member.1528" = type { %"class.blink::MemberBase.1529" }
%"class.blink::MemberBase.1529" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.1530" = type { %"class.blink::MemberBase.1531" }
%"class.blink::MemberBase.1531" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.1532" = type { %class.scoped_refptr.1533 }
%class.scoped_refptr.1533 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.1534", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.1534" = type { %"class.base::RefCounted.1535" }
%"class.base::RefCounted.1535" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.1536" = type { %class.scoped_refptr.1537 }
%class.scoped_refptr.1537 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.1538", [4 x i8], %"class.blink::DataRef.1540", %"class.blink::DataRef.1606", %"class.blink::TransformOperations", %class.scoped_refptr.1514, %"class.blink::Persistent.1723", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.1538" = type { %"class.base::RefCounted.1539" }
%"class.base::RefCounted.1539" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1540" = type { %class.scoped_refptr.1541 }
%class.scoped_refptr.1541 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.1542", [4 x i8], %"class.blink::DataRef.1544", %"class.blink::Persistent.1582", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.1542" = type { %"class.base::RefCounted.1543" }
%"class.base::RefCounted.1543" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1544" = type { %class.scoped_refptr.1545 }
%class.scoped_refptr.1545 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.1546", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.1564, %class.scoped_refptr.1567, %class.scoped_refptr.1570, %class.scoped_refptr.1573, %class.scoped_refptr.1574, %class.scoped_refptr.1575, %"class.blink::Persistent.1582", %"class.blink::Persistent.1597", %"class.absl::optional.1601", %"class.absl::optional.1601", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.1546" = type { %"class.base::RefCounted.1547" }
%"class.base::RefCounted.1547" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.1548", %"class.std::__1::unique_ptr.1553" }
%"class.WTF::Vector.1548" = type { %"class.WTF::VectorBuffer.1549" }
%"class.WTF::VectorBuffer.1549" = type { %"class.WTF::VectorBufferBase.1550" }
%"class.WTF::VectorBufferBase.1550" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.1556", %"class.WTF::Vector.1548", i32, i32 }
%"class.WTF::Vector.1556" = type { %"class.WTF::VectorBuffer.1557" }
%"class.WTF::VectorBuffer.1557" = type { %"class.WTF::VectorBufferBase.1558" }
%"class.WTF::VectorBufferBase.1558" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.1564 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1565", [4 x i8] }>
%"class.WTF::RefCounted.1565" = type { %"class.base::RefCounted.1566" }
%"class.base::RefCounted.1566" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1567 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.1568", [4 x i8] }>
%"class.WTF::RefCounted.1568" = type { %"class.base::RefCounted.1569" }
%"class.base::RefCounted.1569" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1570 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1571" }>
%"class.WTF::RefCounted.1571" = type { %"class.base::RefCounted.1572" }
%"class.base::RefCounted.1572" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.1573 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.1574 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.1575 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.1576", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.1576" = type { %"class.base::RefCounted.1577" }
%"class.base::RefCounted.1577" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.1578" }
%"class.blink::DataRef.1578" = type { %class.scoped_refptr.1579 }
%class.scoped_refptr.1579 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.1522", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.1580" }
%"class.WTF::RefCounted.1580" = type { %"class.base::RefCounted.1581" }
%"class.base::RefCounted.1581" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.1597" = type { %"class.blink::PersistentBase.1598" }
%"class.blink::PersistentBase.1598" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.1567, %"class.blink::Member.1492", i32, [4 x i8] }>
%"class.absl::optional.1601" = type { %"class.absl::optional_internal::optional_data.1602" }
%"class.absl::optional_internal::optional_data.1602" = type { %"class.absl::optional_internal::optional_data_base.1603" }
%"class.absl::optional_internal::optional_data_base.1603" = type { %"class.absl::optional_internal::optional_data_dtor_base.1604" }
%"class.absl::optional_internal::optional_data_dtor_base.1604" = type { i8, [3 x i8], %union.anon.1605 }
%union.anon.1605 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.1582" = type { %"class.blink::PersistentBase.1583" }
%"class.blink::PersistentBase.1583" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.1586" }
%"class.blink::HeapVector.1586" = type { %"class.WTF::Vector.1589" }
%"class.WTF::Vector.1589" = type { %"class.WTF::VectorBuffer.1590" }
%"class.WTF::VectorBuffer.1590" = type { %"class.WTF::VectorBufferBase.1591" }
%"class.WTF::VectorBufferBase.1591" = type { %"class.blink::Member.1592"*, i32, i32 }
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.1606" = type { %class.scoped_refptr.1607 }
%class.scoped_refptr.1607 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.1608", %"class.blink::DataRef.1610", %"class.blink::DataRef.1614", %"class.blink::DataRef.1623", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.1642", %"class.std::__1::unique_ptr.1653", %"class.std::__1::unique_ptr.1689", %"class.std::__1::unique_ptr.1700", %"class.std::__1::unique_ptr.1711", %"class.WTF::Vector.670", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.1608" = type { %"class.base::RefCounted.1609" }
%"class.base::RefCounted.1609" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1610" = type { %class.scoped_refptr.1611 }
%class.scoped_refptr.1611 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.1612", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1612" = type { %"class.base::RefCounted.1613" }
%"class.base::RefCounted.1613" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1614" = type { %class.scoped_refptr.1615 }
%class.scoped_refptr.1615 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.1616", [4 x i8], %"class.WTF::Vector.1618", i8, [7 x i8] }>
%"class.WTF::RefCounted.1616" = type { %"class.base::RefCounted.1617" }
%"class.base::RefCounted.1617" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1618" = type { %"class.WTF::VectorBuffer.1619" }
%"class.WTF::VectorBuffer.1619" = type { %"class.WTF::VectorBufferBase.1620" }
%"class.WTF::VectorBufferBase.1620" = type { i32*, i32, i32 }
%"class.blink::DataRef.1623" = type { %class.scoped_refptr.1624 }
%class.scoped_refptr.1624 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.1625", [4 x i8], %"class.WTF::HashMap.1627", %"class.WTF::HashMap.1627", %"class.WTF::HashMap.1627", %"class.WTF::HashMap.1627", %"class.WTF::HashMap.1627", %"class.WTF::HashMap.1627", %"class.WTF::HashMap.1632", %"class.WTF::HashMap.1632", %"class.WTF::HashMap.1632", %"class.WTF::HashMap.1632", %"class.WTF::HashMap.1637", %"class.WTF::Vector.1548", %"class.WTF::Vector.1548", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.1625" = type { %"class.base::RefCounted.1626" }
%"class.base::RefCounted.1626" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.1627" = type { %"class.WTF::HashTable.1628" }
%"class.WTF::HashTable.1628" = type <{ %"struct.WTF::KeyValuePair.1631"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1631" = type { %"class.WTF::String", %"class.WTF::Vector.2938" }
%"class.WTF::Vector.2938" = type { %"class.WTF::VectorBuffer.2939" }
%"class.WTF::VectorBuffer.2939" = type { %"class.WTF::VectorBufferBase.2940" }
%"class.WTF::VectorBufferBase.2940" = type { i64*, i32, i32 }
%"class.WTF::HashMap.1632" = type { %"class.WTF::HashTable.1633" }
%"class.WTF::HashTable.1633" = type <{ %"struct.WTF::KeyValuePair.1636"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1636" = type { i64, %"class.WTF::Vector.670" }
%"class.WTF::HashMap.1637" = type { %"class.WTF::HashTable.1638" }
%"class.WTF::HashTable.1638" = type <{ %"struct.WTF::KeyValuePair.1641"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1641" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.1642" = type { %"class.std::__1::__compressed_pair.1643" }
%"class.std::__1::__compressed_pair.1643" = type { %"struct.std::__1::__compressed_pair_elem.1644" }
%"struct.std::__1::__compressed_pair_elem.1644" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.1645" }
%"class.WTF::HashMap.1645" = type { %"class.WTF::HashTable.1646" }
%"class.WTF::HashTable.1646" = type <{ %"struct.WTF::KeyValuePair.1649"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1649" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2943", %"class.absl::optional.2943", %"class.absl::optional.2943" }
%"class.absl::optional.2943" = type { %"class.absl::optional_internal::optional_data.2944" }
%"class.absl::optional_internal::optional_data.2944" = type { %"class.absl::optional_internal::optional_data_base.2945" }
%"class.absl::optional_internal::optional_data_base.2945" = type { %"class.absl::optional_internal::optional_data_dtor_base.2946" }
%"class.absl::optional_internal::optional_data_dtor_base.2946" = type { i8, %union.anon.2947 }
%union.anon.2947 = type { i32 }
%"class.std::__1::unique_ptr.1653" = type { %"class.std::__1::__compressed_pair.1654" }
%"class.std::__1::__compressed_pair.1654" = type { %"struct.std::__1::__compressed_pair_elem.1655" }
%"struct.std::__1::__compressed_pair_elem.1655" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1501", %"class.WTF::Vector.1666", %"class.WTF::Vector.1656", %"class.WTF::Vector.1671", %"class.WTF::Vector.1676", %"class.WTF::Vector.1681" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.1656", %"class.WTF::Vector.1656", %"class.WTF::Vector.1661" }
%"class.WTF::Vector.1661" = type { %"class.WTF::VectorBuffer.1662" }
%"class.WTF::VectorBuffer.1662" = type { %"class.WTF::VectorBufferBase.1663" }
%"class.WTF::VectorBufferBase.1663" = type { %class.scoped_refptr*, i32, i32 }
%"class.WTF::Vector.1666" = type { %"class.WTF::VectorBuffer.1667" }
%"class.WTF::VectorBuffer.1667" = type { %"class.WTF::VectorBufferBase.1668" }
%"class.WTF::VectorBufferBase.1668" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.1656" = type { %"class.WTF::VectorBuffer.1657" }
%"class.WTF::VectorBuffer.1657" = type { %"class.WTF::VectorBufferBase.1658" }
%"class.WTF::VectorBufferBase.1658" = type { double*, i32, i32 }
%"class.WTF::Vector.1671" = type { %"class.WTF::VectorBuffer.1672" }
%"class.WTF::VectorBuffer.1672" = type { %"class.WTF::VectorBufferBase.1673" }
%"class.WTF::VectorBufferBase.1673" = type { i32*, i32, i32 }
%"class.WTF::Vector.1676" = type { %"class.WTF::VectorBuffer.1677" }
%"class.WTF::VectorBuffer.1677" = type { %"class.WTF::VectorBufferBase.1678" }
%"class.WTF::VectorBufferBase.1678" = type { i32*, i32, i32 }
%"class.WTF::Vector.1681" = type { %"class.WTF::VectorBuffer.1682" }
%"class.WTF::VectorBuffer.1682" = type { %"class.WTF::VectorBufferBase.1683" }
%"class.WTF::VectorBufferBase.1683" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1689" = type { %"class.std::__1::__compressed_pair.1690" }
%"class.std::__1::__compressed_pair.1690" = type { %"struct.std::__1::__compressed_pair_elem.1691" }
%"struct.std::__1::__compressed_pair_elem.1691" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1692" }
%"class.WTF::Vector.1692" = type { %"class.WTF::VectorBuffer.1693" }
%"class.WTF::VectorBuffer.1693" = type { %"class.WTF::VectorBufferBase.1694" }
%"class.WTF::VectorBufferBase.1694" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1700" = type { %"class.std::__1::__compressed_pair.1701" }
%"class.std::__1::__compressed_pair.1701" = type { %"struct.std::__1::__compressed_pair_elem.1702" }
%"struct.std::__1::__compressed_pair_elem.1702" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.1703" }
%"class.WTF::Vector.1703" = type { %"class.WTF::VectorBuffer.1704" }
%"class.WTF::VectorBuffer.1704" = type { %"class.WTF::VectorBufferBase.1705" }
%"class.WTF::VectorBufferBase.1705" = type { %"class.blink::Persistent.1522"*, i32, i32 }
%"class.std::__1::unique_ptr.1711" = type { %"class.std::__1::__compressed_pair.1712" }
%"class.std::__1::__compressed_pair.1712" = type { %"struct.std::__1::__compressed_pair_elem.1713" }
%"struct.std::__1::__compressed_pair_elem.1713" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.1522", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.1717" }
%"class.WTF::Vector.1717" = type { %"class.WTF::VectorBuffer.1718" }
%"class.WTF::VectorBuffer.1718" = type { %"class.WTF::VectorBufferBase.1719" }
%"class.WTF::VectorBufferBase.1719" = type { %class.scoped_refptr.1720*, i32, i32 }
%class.scoped_refptr.1720 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1571", [4 x i8] }>
%"class.blink::Persistent.1723" = type { %"class.blink::PersistentBase.1724" }
%"class.blink::PersistentBase.1724" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1727" }
%"class.blink::Member.1727" = type { %"class.blink::MemberBase.1728" }
%"class.blink::MemberBase.1728" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1729" = type { %class.scoped_refptr.1730 }
%class.scoped_refptr.1730 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1731", [4 x i8], %"class.blink::DataRef.1733", %"class.blink::DataRef.1737", %"class.blink::DataRef.1754", %"class.blink::DataRef.1772", %"class.blink::DataRef.1784", %"class.blink::DataRef.1788", %class.scoped_refptr.1758, i32, [4 x i8] }>
%"class.WTF::RefCounted.1731" = type { %"class.base::RefCounted.1732" }
%"class.base::RefCounted.1732" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1733" = type { %class.scoped_refptr.1734 }
%class.scoped_refptr.1734 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1735", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1735" = type { %"class.base::RefCounted.1736" }
%"class.base::RefCounted.1736" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1737" = type { %class.scoped_refptr.1738 }
%class.scoped_refptr.1738 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1739", %class.scoped_refptr.1741, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1739" = type { %"class.base::RefCounted.1740" }
%"class.base::RefCounted.1740" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1741 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1742", %"class.std::__1::unique_ptr.1748", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1568" }>
%"class.std::__1::unique_ptr.1742" = type { %"class.std::__1::__compressed_pair.1743" }
%"class.std::__1::__compressed_pair.1743" = type { %"struct.std::__1::__compressed_pair_elem.1744" }
%"struct.std::__1::__compressed_pair_elem.1744" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1748" = type { %"class.std::__1::__compressed_pair.1749" }
%"class.std::__1::__compressed_pair.1749" = type { %"struct.std::__1::__compressed_pair_elem.1750" }
%"struct.std::__1::__compressed_pair_elem.1750" = type { %"class.blink::Path"* }
%"class.blink::DataRef.1754" = type { %class.scoped_refptr.1755 }
%class.scoped_refptr.1755 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1756", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1756" = type { %"class.base::RefCounted.1757" }
%"class.base::RefCounted.1757" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1758, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1772" = type { %class.scoped_refptr.1773 }
%class.scoped_refptr.1773 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1774", [4 x i8], %class.scoped_refptr.1776, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1774" = type { %"class.base::RefCounted.1775" }
%"class.base::RefCounted.1775" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1776 = type { %"class.base::RefCountedData.1777"* }
%"class.base::RefCountedData.1777" = type { %"class.base::RefCountedThreadSafe.1778", %"class.WTF::Vector.1779" }
%"class.base::RefCountedThreadSafe.1778" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1779" = type { %"class.WTF::VectorBuffer.1780" }
%"class.WTF::VectorBuffer.1780" = type { %"class.WTF::VectorBufferBase.1781" }
%"class.WTF::VectorBufferBase.1781" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1784" = type { %class.scoped_refptr.1785 }
%class.scoped_refptr.1785 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1786", %class.scoped_refptr.1758, %class.scoped_refptr.1758, %class.scoped_refptr.1758 }
%"class.WTF::RefCounted.1786" = type { %"class.base::RefCounted.1787" }
%"class.base::RefCounted.1787" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1788" = type { %class.scoped_refptr.1789 }
%class.scoped_refptr.1789 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1790", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1790" = type { %"class.base::RefCounted.1791" }
%"class.base::RefCounted.1791" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1758 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1759", %"class.blink::Persistent.1761", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1759" = type { %"class.base::RefCounted.1760" }
%"class.base::RefCounted.1760" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1761" = type { %"class.blink::PersistentBase.1762" }
%"class.blink::PersistentBase.1762" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.42", %"class.blink::HeapHashMap.1765" }
%"class.blink::HeapHashMap.1765" = type { %"class.WTF::HashMap.1768" }
%"class.WTF::HashMap.1768" = type { %"class.WTF::HashTable.1769" }
%"class.WTF::HashTable.1769" = type <{ %"struct.WTF::KeyValuePair.1771"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1771" = type opaque
%"class.blink::DataRef.1792" = type { %class.scoped_refptr.1793 }
%class.scoped_refptr.1793 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1794", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1794" = type { %"class.base::RefCounted.1795" }
%"class.base::RefCounted.1795" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1796" = type { %class.scoped_refptr.1797 }
%class.scoped_refptr.1797 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1798", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1798" = type { %"class.base::RefCounted.1799" }
%"class.base::RefCounted.1799" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1800" = type { %class.scoped_refptr.1801 }
%class.scoped_refptr.1801 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1802", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1802" = type { %"class.base::RefCounted.1803" }
%"class.base::RefCounted.1803" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1804" = type { %class.scoped_refptr.1805 }
%class.scoped_refptr.1805 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1806", %class.scoped_refptr.1808 }
%"class.WTF::RefCounted.1806" = type { %"class.base::RefCounted.1807" }
%"class.base::RefCounted.1807" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1808 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1881", %"class.blink::StyleVariables", %class.scoped_refptr.1808 }
%"class.WTF::RefCounted.1881" = type { %"class.base::RefCounted.1882" }
%"class.base::RefCounted.1882" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1809" = type { %"class.base::RefCounted.1810" }
%"class.base::RefCounted.1810" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1811" = type { %"class.std::__1::__compressed_pair.1812" }
%"class.std::__1::__compressed_pair.1812" = type { %"struct.std::__1::__compressed_pair_elem.1813" }
%"struct.std::__1::__compressed_pair_elem.1813" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1814" }
%"class.std::__1::unique_ptr.1814" = type { %"class.std::__1::__compressed_pair.1815" }
%"class.std::__1::__compressed_pair.1815" = type { %"struct.std::__1::__compressed_pair_elem.1816" }
%"struct.std::__1::__compressed_pair_elem.1816" = type { %"class.WTF::Vector.1817"* }
%"class.WTF::Vector.1817" = type { %"class.WTF::VectorBuffer.2958" }
%"class.WTF::VectorBuffer.2958" = type { %"class.WTF::VectorBufferBase.2959", [32 x i8] }
%"class.WTF::VectorBufferBase.2959" = type { %class.scoped_refptr.1386*, i32, i32 }
%"class.blink::Member.3116" = type { %"class.blink::MemberBase.3117" }
%"class.blink::MemberBase.3117" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.3118" = type { %"class.blink::MemberBase.3119" }
%"class.blink::MemberBase.3119" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.3122", %"class.blink::HeapHashSet.3131" }
%"class.blink::HeapVector.3122" = type { %"class.WTF::Vector.3125" }
%"class.WTF::Vector.3125" = type { %"class.WTF::VectorBuffer.3126" }
%"class.WTF::VectorBuffer.3126" = type { %"class.WTF::VectorBufferBase.3127" }
%"class.WTF::VectorBufferBase.3127" = type { %"class.blink::Member.3128"*, i32, i32 }
%"class.blink::Member.3128" = type { %"class.blink::MemberBase.3129" }
%"class.blink::MemberBase.3129" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.3131" = type { %"class.WTF::HashSet.3134" }
%"class.WTF::HashSet.3134" = type { %"class.WTF::HashTable.3135" }
%"class.WTF::HashTable.3135" = type <{ %"class.blink::Member.3128"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3137" = type { %"class.blink::MemberBase.3138" }
%"class.blink::MemberBase.3138" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.3139" = type { %"class.blink::MemberBase.3140" }
%"class.blink::MemberBase.3140" = type { %"class.blink::HeapHashSet.3141"* }
%"class.blink::HeapHashSet.3141" = type opaque
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.1452", %"class.blink::DataRef.1532", %"class.blink::DataRef.1536", %"class.blink::DataRef.1729", %"class.blink::DataRef.1792", %"class.blink::DataRef.1796", %"class.blink::DataRef.1800", %"class.blink::DataRef.1804", [20 x i8], [4 x i8] }>
%"class.blink::CompositorKeyframeValue" = type { i32 (...)** }
%"class.blink::FilterOperationsWrapper" = type { %"class.blink::FilterOperations" }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1956", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1964", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1978", %"class.blink::FrameLoader", %"class.blink::Member.1999", %"class.blink::Member.42", %"class.blink::Member.2001", %"class.blink::Member.2003", %"class.blink::Member.2005", %"class.blink::Member.2007", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.2009", %class.scoped_refptr.2229, %"class.blink::Member.2230", %"class.blink::Member.2232", %"class.blink::Member.2234", %"class.blink::Member.2236", %"class.blink::Member.2238", %"class.blink::Member.2242", %"class.blink::Member.2244", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2248", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2269", %"class.std::__1::unique_ptr.2270", %"class.absl::optional.1944", i32, [4 x i8], %"class.std::__1::unique_ptr.2276", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2284", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2289", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2294", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2297", %"class.blink::Member.2299", %"class.blink::Member.2301", %"class.blink::Member.2303", %"class.mojo::StructPtr.2306", %"class.blink::Member.2315", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2317", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1915", %"class.blink::Member.1917", %"class.blink::Member.1919", i8, i32, i8, i32, %"class.blink::Member.1921", %"class.blink::Member.1923", %"class.blink::FrameLifecycle", %"class.blink::Member.1913", %"class.blink::Member.1913", %"class.blink::Member.1913", %"class.blink::Member.1913", %"class.blink::Member.1913", %"class.blink::Member.1913", %"class.blink::Member.1925", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map.1927", %"class.blink::Member.1937", i8, %"class.base::UnguessableToken", %"class.absl::optional.1939", %"class.absl::optional.1944", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.1913", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1915" = type { %"class.blink::MemberBase.1916" }
%"class.blink::MemberBase.1916" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1917" = type { %"class.blink::MemberBase.1918" }
%"class.blink::MemberBase.1918" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1919" = type { %"class.blink::MemberBase.1920" }
%"class.blink::MemberBase.1920" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type opaque
%"class.blink::Member.1921" = type { %"class.blink::MemberBase.1922" }
%"class.blink::MemberBase.1922" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.1923" = type { %"class.blink::MemberBase.1924" }
%"class.blink::MemberBase.1924" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.1913" = type { %"class.blink::MemberBase.1914" }
%"class.blink::MemberBase.1914" = type { %"class.blink::Frame"* }
%"class.blink::Member.1925" = type { %"class.blink::MemberBase.1926" }
%"class.blink::MemberBase.1926" = type { %"class.blink::LocalFrame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.1913", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map.1927" = type { %"class.base::internal::flat_tree.1928" }
%"class.base::internal::flat_tree.1928" = type { %"class.std::__1::vector.1929" }
%"class.std::__1::vector.1929" = type { %"class.std::__1::__vector_base.1930" }
%"class.std::__1::__vector_base.1930" = type { %"struct.std::__1::pair.1931"*, %"struct.std::__1::pair.1931"*, %"class.std::__1::__compressed_pair.1932" }
%"struct.std::__1::pair.1931" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1932" = type { %"struct.std::__1::__compressed_pair_elem.1933" }
%"struct.std::__1::__compressed_pair_elem.1933" = type { %"struct.std::__1::pair.1931"* }
%"class.blink::Member.1937" = type { %"class.blink::MemberBase.1938" }
%"class.blink::MemberBase.1938" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.1939" = type { %"class.absl::optional_internal::optional_data.1940" }
%"class.absl::optional_internal::optional_data.1940" = type { %"class.absl::optional_internal::optional_data_base.1941" }
%"class.absl::optional_internal::optional_data_base.1941" = type { %"class.absl::optional_internal::optional_data_dtor_base.1942" }
%"class.absl::optional_internal::optional_data_dtor_base.1942" = type { i8, %union.anon.1943 }
%union.anon.1943 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1949" }
%"class.blink::HeapHashSet.1949" = type { %"class.WTF::HashSet.1952" }
%"class.WTF::HashSet.1952" = type { %"class.WTF::HashTable.1953" }
%"class.WTF::HashTable.1953" = type <{ %"class.blink::WeakMember.1955"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1955" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1956" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1957" }
%"class.blink::HeapHashMap.1957" = type { %"class.WTF::HashMap.1960" }
%"class.WTF::HashMap.1960" = type { %"class.WTF::HashTable.1961" }
%"class.WTF::HashTable.1961" = type <{ %"struct.WTF::KeyValuePair.1963"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1963" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1964" = type { %"class.std::__1::__compressed_pair.1965" }
%"class.std::__1::__compressed_pair.1965" = type { %"struct.std::__1::__compressed_pair_elem.1966" }
%"struct.std::__1::__compressed_pair_elem.1966" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.1967", %"class.base::WeakPtrFactory.1972" }
%"class.WTF::HashMap.1967" = type { %"class.WTF::HashTable.1968" }
%"class.WTF::HashTable.1968" = type <{ %"struct.WTF::KeyValuePair.1971"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1971" = type opaque
%"class.base::WeakPtrFactory.1972" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1976" }
%"class.blink::Member.1976" = type { %"class.blink::MemberBase.1977" }
%"class.blink::MemberBase.1977" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.2964", i64, %"class.std::__1::map.2965", i8*, i64, %"class.base::WeakPtrFactory.2974" }
%"class.base::RepeatingCallback.2964" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2965" = type { %"class.std::__1::__tree.2966" }
%"class.std::__1::__tree.2966" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2967", %"class.std::__1::__compressed_pair.2971" }
%"class.std::__1::__compressed_pair.2967" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"class.std::__1::__compressed_pair.2971" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"class.base::WeakPtrFactory.2974" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1978" = type { %"class.WTF::HashSet.1981" }
%"class.WTF::HashSet.1981" = type { %"class.WTF::HashTable.1982" }
%"class.WTF::HashTable.1982" = type <{ %"class.blink::WeakMember.1984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1984" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1925", %"class.blink::Member.1985", %"class.blink::Member.1987", %"class.std::__1::unique_ptr.1989", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1995" }
%"class.blink::Member.1985" = type { %"class.blink::MemberBase.1986" }
%"class.blink::MemberBase.1986" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1987" = type { %"class.blink::MemberBase.1988" }
%"class.blink::MemberBase.1988" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1989" = type { %"class.std::__1::__compressed_pair.1990" }
%"class.std::__1::__compressed_pair.1990" = type { %"struct.std::__1::__compressed_pair_elem.1991" }
%"struct.std::__1::__compressed_pair_elem.1991" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.8 }
%"class.WTF::HashSet.1995" = type { %"class.WTF::HashTable.1996" }
%"class.WTF::HashTable.1996" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1999" = type { %"class.blink::MemberBase.2000" }
%"class.blink::MemberBase.2000" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.2396", %"class.blink::Member.1925", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.2401", i8, i32, %"class.blink::Color", %"class.absl::optional.2403", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.2408", %"class.blink::Member.2410", %"class.blink::Member.2410", %"class.std::__1::unique_ptr.2413", i32, [4 x i8], %"class.WTF::HashSet.2416", %"class.blink::Member.2423", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2425", %"class.blink::HeapHashSet.2432", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2440", i8, %"class.blink::Member.2446", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.2458", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2472", i8, %"class.std::__1::unique_ptr.2478", %"class.std::__1::unique_ptr.2520", %"class.WTF::Vector.2526", i32, %class.scoped_refptr.2531, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2532", %"class.blink::Member.2534", %"class.blink::Member.2536", %"class.blink::HeapHashSet.2538", %"class.blink::HeapHashSet.2545", %"class.std::__1::unique_ptr.2552", %"class.std::__1::unique_ptr.2559", %"class.WTF::Vector.77" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.2396" = type { %"class.WTF::HashTable.2397" }
%"class.WTF::HashTable.2397" = type <{ %class.scoped_refptr.2400*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2400 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.2401" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2402", { i64, i64 } }
%"class.blink::WeakMember.2402" = type { %"class.blink::MemberBase.2000" }
%"class.absl::optional.2403" = type { %"class.absl::optional_internal::optional_data.2404" }
%"class.absl::optional_internal::optional_data.2404" = type { %"class.absl::optional_internal::optional_data_base.2405" }
%"class.absl::optional_internal::optional_data_base.2405" = type { %"class.absl::optional_internal::optional_data_dtor_base.2406" }
%"class.absl::optional_internal::optional_data_dtor_base.2406" = type { i8, %union.anon.2407 }
%union.anon.2407 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.2408" = type { %"class.blink::MemberBase.2409" }
%"class.blink::MemberBase.2409" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.2410" = type { %"class.blink::MemberBase.2411" }
%"class.blink::MemberBase.2411" = type { %"class.blink::HeapHashSet.2412"* }
%"class.blink::HeapHashSet.2412" = type opaque
%"class.std::__1::unique_ptr.2413" = type { %"class.std::__1::__compressed_pair.2414" }
%"class.std::__1::__compressed_pair.2414" = type { %"struct.std::__1::__compressed_pair_elem.2415" }
%"struct.std::__1::__compressed_pair_elem.2415" = type { %"class.WTF::HashSet.2416"* }
%"class.WTF::HashSet.2416" = type { %"class.WTF::HashTable.2417" }
%"class.WTF::HashTable.2417" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2423" = type { %"class.blink::MemberBase.2424" }
%"class.blink::MemberBase.2424" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2425" = type { %"class.WTF::HashSet.2428" }
%"class.WTF::HashSet.2428" = type { %"class.WTF::HashTable.2429" }
%"class.WTF::HashTable.2429" = type <{ %"class.blink::Member.2431"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2431" = type opaque
%"class.blink::HeapHashSet.2432" = type { %"class.WTF::HashSet.2435" }
%"class.WTF::HashSet.2435" = type { %"class.WTF::HashTable.2436" }
%"class.WTF::HashTable.2436" = type <{ %"class.blink::Member.2438"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2438" = type { %"class.blink::MemberBase.2439" }
%"class.blink::MemberBase.2439" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2572", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2583", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.42" }
%"class.blink::Member.2572" = type { %"class.blink::MemberBase.2573" }
%"class.blink::MemberBase.2573" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2574", %"class.blink::Member.2575", %"class.blink::Member.2577", %"class.blink::Member.2579", %"class.blink::Member.2581", %"class.WTF::Vector.77", i16, %class.scoped_refptr.307 }
%"class.blink::ThreadState::PrefinalizerRegistration.2574" = type { i8 }
%"class.blink::Member.2575" = type { %"class.blink::MemberBase.2576" }
%"class.blink::MemberBase.2576" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2577" = type { %"class.blink::MemberBase.2578" }
%"class.blink::MemberBase.2578" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2579" = type { %"class.blink::MemberBase.2580" }
%"class.blink::MemberBase.2580" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2581" = type { %"class.blink::MemberBase.2582" }
%"class.blink::MemberBase.2582" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.2583" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2584", { i64, i64 } }
%"class.blink::WeakMember.2584" = type { %"class.blink::MemberBase.2439" }
%"class.std::__1::unique_ptr.2440" = type { %"class.std::__1::__compressed_pair.2441" }
%"class.std::__1::__compressed_pair.2441" = type { %"struct.std::__1::__compressed_pair_elem.2442" }
%"struct.std::__1::__compressed_pair_elem.2442" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.2446" = type { %"class.blink::MemberBase.2447" }
%"class.blink::MemberBase.2447" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.2450", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.2450" = type { %"class.WTF::HashTable.2451" }
%"class.WTF::HashTable.2451" = type <{ %"struct.WTF::KeyValuePair.2453"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2453" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.2454", i32, i32 }
%"class.WTF::Vector.2454" = type { %"class.WTF::VectorBuffer.2455" }
%"class.WTF::VectorBuffer.2455" = type { %"class.WTF::VectorBufferBase.2456" }
%"class.WTF::VectorBufferBase.2456" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.2458" = type { %"class.WTF::LinkedHashSet.2461" }
%"class.WTF::LinkedHashSet.2461" = type { %"class.WTF::HashMap.2462", %"class.WTF::VectorBackedLinkedList.2466" }
%"class.WTF::HashMap.2462" = type { %"class.WTF::HashTable.2463" }
%"class.WTF::HashTable.2463" = type <{ %"struct.WTF::KeyValuePair.2465"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2465" = type opaque
%"class.WTF::VectorBackedLinkedList.2466" = type { %"class.WTF::Vector.2467", i32, i32 }
%"class.WTF::Vector.2467" = type { %"class.WTF::VectorBuffer.2468" }
%"class.WTF::VectorBuffer.2468" = type { %"class.WTF::VectorBufferBase.2469" }
%"class.WTF::VectorBufferBase.2469" = type { %"class.WTF::VectorBackedLinkedListNode.2470"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2470" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2472" = type { %"class.std::__1::__compressed_pair.2473" }
%"class.std::__1::__compressed_pair.2473" = type { %"struct.std::__1::__compressed_pair_elem.2474" }
%"struct.std::__1::__compressed_pair_elem.2474" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2478" = type { %"class.std::__1::__compressed_pair.2479" }
%"class.std::__1::__compressed_pair.2479" = type { %"struct.std::__1::__compressed_pair_elem.2480" }
%"struct.std::__1::__compressed_pair_elem.2480" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2481, %class.scoped_refptr.2481, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2497", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2502", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2481 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1172"*, %"class.absl::optional.2482", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2482" = type { %"class.absl::optional_internal::optional_data.2483" }
%"class.absl::optional_internal::optional_data.2483" = type { %"class.absl::optional_internal::optional_data_base.2484" }
%"class.absl::optional_internal::optional_data_base.2484" = type { %"class.absl::optional_internal::optional_data_dtor_base.2485" }
%"class.absl::optional_internal::optional_data_dtor_base.2485" = type { i8, %union.anon.2486 }
%union.anon.2486 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2487", %"class.WTF::Vector.2492" }
%"class.WTF::Vector.2487" = type { %"class.WTF::VectorBuffer.2488" }
%"class.WTF::VectorBuffer.2488" = type { %"class.WTF::VectorBufferBase.2489", [128 x i8] }
%"class.WTF::VectorBufferBase.2489" = type { i32*, i32, i32 }
%"class.WTF::Vector.2492" = type { %"class.WTF::VectorBuffer.2493" }
%"class.WTF::VectorBuffer.2493" = type { %"class.WTF::VectorBufferBase.2494", [128 x i8] }
%"class.WTF::VectorBufferBase.2494" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2497" = type { %"class.WTF::VectorBuffer.2498" }
%"class.WTF::VectorBuffer.2498" = type { %"class.WTF::VectorBufferBase.2499" }
%"class.WTF::VectorBufferBase.2499" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2502" = type { %"class.WTF::HashTable.2503" }
%"class.WTF::HashTable.2503" = type <{ %"struct.WTF::KeyValuePair.2506"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2506" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2507", %"class.WTF::Vector.2512" }
%"class.WTF::HashMap.2507" = type { %"class.WTF::HashTable.2508" }
%"class.WTF::HashTable.2508" = type <{ %"struct.WTF::KeyValuePair.2511"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2511" = type opaque
%"class.WTF::Vector.2512" = type { %"class.WTF::VectorBuffer.2513" }
%"class.WTF::VectorBuffer.2513" = type { %"class.WTF::VectorBufferBase.2514" }
%"class.WTF::VectorBufferBase.2514" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2520" = type { %"class.std::__1::__compressed_pair.2521" }
%"class.std::__1::__compressed_pair.2521" = type { %"struct.std::__1::__compressed_pair_elem.2522" }
%"struct.std::__1::__compressed_pair_elem.2522" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.WTF::Vector.2526" = type { %"class.WTF::VectorBuffer.2527" }
%"class.WTF::VectorBuffer.2527" = type { %"class.WTF::VectorBufferBase.2528" }
%"class.WTF::VectorBufferBase.2528" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type { %"class.blink::PaintChunkSubset", %"class.blink::GraphicsLayer"* }
%class.scoped_refptr.2531 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2532" = type { %"class.blink::MemberBase.2533" }
%"class.blink::MemberBase.2533" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2534" = type { %"class.blink::MemberBase.2535" }
%"class.blink::MemberBase.2535" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2536" = type { %"class.blink::MemberBase.2537" }
%"class.blink::MemberBase.2537" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2538" = type { %"class.WTF::HashSet.2541" }
%"class.WTF::HashSet.2541" = type { %"class.WTF::HashTable.2542" }
%"class.WTF::HashTable.2542" = type <{ %"class.blink::WeakMember.2544"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2544" = type opaque
%"class.blink::HeapHashSet.2545" = type { %"class.WTF::HashSet.2548" }
%"class.WTF::HashSet.2548" = type { %"class.WTF::HashTable.2549" }
%"class.WTF::HashTable.2549" = type <{ %"class.blink::WeakMember.2551"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2551" = type opaque
%"class.std::__1::unique_ptr.2552" = type { %"class.std::__1::__compressed_pair.2553" }
%"class.std::__1::__compressed_pair.2553" = type { %"struct.std::__1::__compressed_pair_elem.2554" }
%"struct.std::__1::__compressed_pair_elem.2554" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2555" }
%"class.base::time_internal::TimeBase.2555" = type { i64 }
%"class.std::__1::unique_ptr.2559" = type { %"class.std::__1::__compressed_pair.2560" }
%"class.std::__1::__compressed_pair.2560" = type { %"struct.std::__1::__compressed_pair_elem.2561" }
%"struct.std::__1::__compressed_pair_elem.2561" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2562", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2562" = type { %"class.absl::optional_internal::optional_data.2563" }
%"class.absl::optional_internal::optional_data.2563" = type { %"class.absl::optional_internal::optional_data_base.2564" }
%"class.absl::optional_internal::optional_data_base.2564" = type { %"class.absl::optional_internal::optional_data_dtor_base.2565" }
%"class.absl::optional_internal::optional_data_dtor_base.2565" = type { i8, %union.anon.2566 }
%union.anon.2566 = type { %"class.base::Time" }
%"class.blink::Member.2001" = type { %"class.blink::MemberBase.2002" }
%"class.blink::MemberBase.2002" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.2003" = type { %"class.blink::MemberBase.2004" }
%"class.blink::MemberBase.2004" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.2005" = type { %"class.blink::MemberBase.2006" }
%"class.blink::MemberBase.2006" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.2007" = type { %"class.blink::MemberBase.2008" }
%"class.blink::MemberBase.2008" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.2009" = type { %"class.blink::MemberBase.2010" }
%"class.blink::MemberBase.2010" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.2020", %"class.blink::HeapListHashSet.2031", %"class.blink::HeapListHashSet.2042", %"class.blink::HeapListHashSet.2053", %"class.blink::HeapListHashSet.2064", %"class.blink::HeapListHashSet.2075", %"class.blink::HeapListHashSet.2086", %"class.blink::HeapListHashSet.2097", %"class.blink::HeapListHashSet.2108", %"class.blink::HeapListHashSet.2119", %"class.blink::HeapListHashSet.2130", %"class.blink::HeapListHashSet.2141", %"class.blink::HeapListHashSet.2152", %"class.blink::HeapListHashSet.2163", %"class.blink::HeapListHashSet.2174", %"class.blink::HeapListHashSet.2185", %"class.blink::HeapListHashSet.2196", %"class.blink::HeapListHashSet.2207", %"class.blink::HeapListHashSet.2218" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.2016", %"class.blink::Member.2018", %"class.blink::Member.2018", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2016" = type <{ %"class.blink::Member.2018"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2018" = type { %"class.blink::MemberBase.2019" }
%"class.blink::MemberBase.2019" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.2232", %"class.blink::Member.2018", %"class.blink::Member.2018" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.2020" = type { %"class.WTF::ListHashSet.base.2030", [7 x i8] }
%"class.WTF::ListHashSet.base.2030" = type <{ %"class.WTF::HashTable.2025", %"class.blink::Member.2027", %"class.blink::Member.2027", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2025" = type <{ %"class.blink::Member.2027"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2027" = type { %"class.blink::MemberBase.2028" }
%"class.blink::MemberBase.2028" = type { %"class.blink::HeapListHashSetNode.2029"* }
%"class.blink::HeapListHashSetNode.2029" = type { %"class.blink::Member.2390", %"class.blink::Member.2027", %"class.blink::Member.2027" }
%"class.blink::Member.2390" = type { %"class.blink::MemberBase.2391" }
%"class.blink::MemberBase.2391" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.2031" = type { %"class.WTF::ListHashSet.base.2041", [7 x i8] }
%"class.WTF::ListHashSet.base.2041" = type <{ %"class.WTF::HashTable.2036", %"class.blink::Member.2038", %"class.blink::Member.2038", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2036" = type <{ %"class.blink::Member.2038"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2038" = type { %"class.blink::MemberBase.2039" }
%"class.blink::MemberBase.2039" = type { %"class.blink::HeapListHashSetNode.2040"* }
%"class.blink::HeapListHashSetNode.2040" = type { %"class.blink::Member.2386", %"class.blink::Member.2038", %"class.blink::Member.2038" }
%"class.blink::Member.2386" = type { %"class.blink::MemberBase.2387" }
%"class.blink::MemberBase.2387" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.2042" = type { %"class.WTF::ListHashSet.base.2052", [7 x i8] }
%"class.WTF::ListHashSet.base.2052" = type <{ %"class.WTF::HashTable.2047", %"class.blink::Member.2049", %"class.blink::Member.2049", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2047" = type <{ %"class.blink::Member.2049"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2049" = type { %"class.blink::MemberBase.2050" }
%"class.blink::MemberBase.2050" = type { %"class.blink::HeapListHashSetNode.2051"* }
%"class.blink::HeapListHashSetNode.2051" = type { %"class.blink::Member.2382", %"class.blink::Member.2049", %"class.blink::Member.2049" }
%"class.blink::Member.2382" = type { %"class.blink::MemberBase.2383" }
%"class.blink::MemberBase.2383" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.2053" = type { %"class.WTF::ListHashSet.base.2063", [7 x i8] }
%"class.WTF::ListHashSet.base.2063" = type <{ %"class.WTF::HashTable.2058", %"class.blink::Member.2060", %"class.blink::Member.2060", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2058" = type <{ %"class.blink::Member.2060"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2060" = type { %"class.blink::MemberBase.2061" }
%"class.blink::MemberBase.2061" = type { %"class.blink::HeapListHashSetNode.2062"* }
%"class.blink::HeapListHashSetNode.2062" = type { %"class.blink::Member.2378", %"class.blink::Member.2060", %"class.blink::Member.2060" }
%"class.blink::Member.2378" = type { %"class.blink::MemberBase.2379" }
%"class.blink::MemberBase.2379" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.2064" = type { %"class.WTF::ListHashSet.base.2074", [7 x i8] }
%"class.WTF::ListHashSet.base.2074" = type <{ %"class.WTF::HashTable.2069", %"class.blink::Member.2071", %"class.blink::Member.2071", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2069" = type <{ %"class.blink::Member.2071"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2071" = type { %"class.blink::MemberBase.2072" }
%"class.blink::MemberBase.2072" = type { %"class.blink::HeapListHashSetNode.2073"* }
%"class.blink::HeapListHashSetNode.2073" = type { %"class.blink::Member.2374", %"class.blink::Member.2071", %"class.blink::Member.2071" }
%"class.blink::Member.2374" = type { %"class.blink::MemberBase.2375" }
%"class.blink::MemberBase.2375" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.2075" = type { %"class.WTF::ListHashSet.base.2085", [7 x i8] }
%"class.WTF::ListHashSet.base.2085" = type <{ %"class.WTF::HashTable.2080", %"class.blink::Member.2082", %"class.blink::Member.2082", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2080" = type <{ %"class.blink::Member.2082"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2082" = type { %"class.blink::MemberBase.2083" }
%"class.blink::MemberBase.2083" = type { %"class.blink::HeapListHashSetNode.2084"* }
%"class.blink::HeapListHashSetNode.2084" = type { %"class.blink::Member.2370", %"class.blink::Member.2082", %"class.blink::Member.2082" }
%"class.blink::Member.2370" = type { %"class.blink::MemberBase.2371" }
%"class.blink::MemberBase.2371" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.2086" = type { %"class.WTF::ListHashSet.base.2096", [7 x i8] }
%"class.WTF::ListHashSet.base.2096" = type <{ %"class.WTF::HashTable.2091", %"class.blink::Member.2093", %"class.blink::Member.2093", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2091" = type <{ %"class.blink::Member.2093"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2093" = type { %"class.blink::MemberBase.2094" }
%"class.blink::MemberBase.2094" = type { %"class.blink::HeapListHashSetNode.2095"* }
%"class.blink::HeapListHashSetNode.2095" = type { %"class.blink::Member.2366", %"class.blink::Member.2093", %"class.blink::Member.2093" }
%"class.blink::Member.2366" = type { %"class.blink::MemberBase.2367" }
%"class.blink::MemberBase.2367" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.2097" = type { %"class.WTF::ListHashSet.base.2107", [7 x i8] }
%"class.WTF::ListHashSet.base.2107" = type <{ %"class.WTF::HashTable.2102", %"class.blink::Member.2104", %"class.blink::Member.2104", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2102" = type <{ %"class.blink::Member.2104"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2104" = type { %"class.blink::MemberBase.2105" }
%"class.blink::MemberBase.2105" = type { %"class.blink::HeapListHashSetNode.2106"* }
%"class.blink::HeapListHashSetNode.2106" = type { %"class.blink::Member.2362", %"class.blink::Member.2104", %"class.blink::Member.2104" }
%"class.blink::Member.2362" = type { %"class.blink::MemberBase.2363" }
%"class.blink::MemberBase.2363" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.2108" = type { %"class.WTF::ListHashSet.base.2118", [7 x i8] }
%"class.WTF::ListHashSet.base.2118" = type <{ %"class.WTF::HashTable.2113", %"class.blink::Member.2115", %"class.blink::Member.2115", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2113" = type <{ %"class.blink::Member.2115"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2115" = type { %"class.blink::MemberBase.2116" }
%"class.blink::MemberBase.2116" = type { %"class.blink::HeapListHashSetNode.2117"* }
%"class.blink::HeapListHashSetNode.2117" = type { %"class.blink::Member.2358", %"class.blink::Member.2115", %"class.blink::Member.2115" }
%"class.blink::Member.2358" = type { %"class.blink::MemberBase.2359" }
%"class.blink::MemberBase.2359" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.2119" = type { %"class.WTF::ListHashSet.base.2129", [7 x i8] }
%"class.WTF::ListHashSet.base.2129" = type <{ %"class.WTF::HashTable.2124", %"class.blink::Member.2126", %"class.blink::Member.2126", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2124" = type <{ %"class.blink::Member.2126"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2126" = type { %"class.blink::MemberBase.2127" }
%"class.blink::MemberBase.2127" = type { %"class.blink::HeapListHashSetNode.2128"* }
%"class.blink::HeapListHashSetNode.2128" = type { %"class.blink::Member.2236", %"class.blink::Member.2126", %"class.blink::Member.2126" }
%"class.blink::HeapListHashSet.2130" = type { %"class.WTF::ListHashSet.base.2140", [7 x i8] }
%"class.WTF::ListHashSet.base.2140" = type <{ %"class.WTF::HashTable.2135", %"class.blink::Member.2137", %"class.blink::Member.2137", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2135" = type <{ %"class.blink::Member.2137"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2137" = type { %"class.blink::MemberBase.2138" }
%"class.blink::MemberBase.2138" = type { %"class.blink::HeapListHashSetNode.2139"* }
%"class.blink::HeapListHashSetNode.2139" = type { %"class.blink::Member.2352", %"class.blink::Member.2137", %"class.blink::Member.2137" }
%"class.blink::Member.2352" = type { %"class.blink::MemberBase.2353" }
%"class.blink::MemberBase.2353" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.2141" = type { %"class.WTF::ListHashSet.base.2151", [7 x i8] }
%"class.WTF::ListHashSet.base.2151" = type <{ %"class.WTF::HashTable.2146", %"class.blink::Member.2148", %"class.blink::Member.2148", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2146" = type <{ %"class.blink::Member.2148"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2148" = type { %"class.blink::MemberBase.2149" }
%"class.blink::MemberBase.2149" = type { %"class.blink::HeapListHashSetNode.2150"* }
%"class.blink::HeapListHashSetNode.2150" = type { %"class.blink::Member.2348", %"class.blink::Member.2148", %"class.blink::Member.2148" }
%"class.blink::Member.2348" = type { %"class.blink::MemberBase.2349" }
%"class.blink::MemberBase.2349" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.2152" = type { %"class.WTF::ListHashSet.base.2162", [7 x i8] }
%"class.WTF::ListHashSet.base.2162" = type <{ %"class.WTF::HashTable.2157", %"class.blink::Member.2159", %"class.blink::Member.2159", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2157" = type <{ %"class.blink::Member.2159"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2159" = type { %"class.blink::MemberBase.2160" }
%"class.blink::MemberBase.2160" = type { %"class.blink::HeapListHashSetNode.2161"* }
%"class.blink::HeapListHashSetNode.2161" = type { %"class.blink::Member.2344", %"class.blink::Member.2159", %"class.blink::Member.2159" }
%"class.blink::Member.2344" = type { %"class.blink::MemberBase.2345" }
%"class.blink::MemberBase.2345" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.2163" = type { %"class.WTF::ListHashSet.base.2173", [7 x i8] }
%"class.WTF::ListHashSet.base.2173" = type <{ %"class.WTF::HashTable.2168", %"class.blink::Member.2170", %"class.blink::Member.2170", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2168" = type <{ %"class.blink::Member.2170"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2170" = type { %"class.blink::MemberBase.2171" }
%"class.blink::MemberBase.2171" = type { %"class.blink::HeapListHashSetNode.2172"* }
%"class.blink::HeapListHashSetNode.2172" = type { %"class.blink::Member.2340", %"class.blink::Member.2170", %"class.blink::Member.2170" }
%"class.blink::Member.2340" = type { %"class.blink::MemberBase.2341" }
%"class.blink::MemberBase.2341" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.2174" = type { %"class.WTF::ListHashSet.base.2184", [7 x i8] }
%"class.WTF::ListHashSet.base.2184" = type <{ %"class.WTF::HashTable.2179", %"class.blink::Member.2181", %"class.blink::Member.2181", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2179" = type <{ %"class.blink::Member.2181"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2181" = type { %"class.blink::MemberBase.2182" }
%"class.blink::MemberBase.2182" = type { %"class.blink::HeapListHashSetNode.2183"* }
%"class.blink::HeapListHashSetNode.2183" = type { %"class.blink::Member.2336", %"class.blink::Member.2181", %"class.blink::Member.2181" }
%"class.blink::Member.2336" = type { %"class.blink::MemberBase.2337" }
%"class.blink::MemberBase.2337" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.2185" = type { %"class.WTF::ListHashSet.base.2195", [7 x i8] }
%"class.WTF::ListHashSet.base.2195" = type <{ %"class.WTF::HashTable.2190", %"class.blink::Member.2192", %"class.blink::Member.2192", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2190" = type <{ %"class.blink::Member.2192"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2192" = type { %"class.blink::MemberBase.2193" }
%"class.blink::MemberBase.2193" = type { %"class.blink::HeapListHashSetNode.2194"* }
%"class.blink::HeapListHashSetNode.2194" = type { %"class.blink::Member.2332", %"class.blink::Member.2192", %"class.blink::Member.2192" }
%"class.blink::Member.2332" = type { %"class.blink::MemberBase.2333" }
%"class.blink::MemberBase.2333" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.2196" = type { %"class.WTF::ListHashSet.base.2206", [7 x i8] }
%"class.WTF::ListHashSet.base.2206" = type <{ %"class.WTF::HashTable.2201", %"class.blink::Member.2203", %"class.blink::Member.2203", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2201" = type <{ %"class.blink::Member.2203"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2203" = type { %"class.blink::MemberBase.2204" }
%"class.blink::MemberBase.2204" = type { %"class.blink::HeapListHashSetNode.2205"* }
%"class.blink::HeapListHashSetNode.2205" = type { %"class.blink::Member.2328", %"class.blink::Member.2203", %"class.blink::Member.2203" }
%"class.blink::Member.2328" = type { %"class.blink::MemberBase.2329" }
%"class.blink::MemberBase.2329" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.2207" = type { %"class.WTF::ListHashSet.base.2217", [7 x i8] }
%"class.WTF::ListHashSet.base.2217" = type <{ %"class.WTF::HashTable.2212", %"class.blink::Member.2214", %"class.blink::Member.2214", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2212" = type <{ %"class.blink::Member.2214"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2214" = type { %"class.blink::MemberBase.2215" }
%"class.blink::MemberBase.2215" = type { %"class.blink::HeapListHashSetNode.2216"* }
%"class.blink::HeapListHashSetNode.2216" = type { %"class.blink::Member.2238", %"class.blink::Member.2214", %"class.blink::Member.2214" }
%"class.blink::HeapListHashSet.2218" = type { %"class.WTF::ListHashSet.base.2228", [7 x i8] }
%"class.WTF::ListHashSet.base.2228" = type <{ %"class.WTF::HashTable.2223", %"class.blink::Member.2225", %"class.blink::Member.2225", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2223" = type <{ %"class.blink::Member.2225"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2225" = type { %"class.blink::MemberBase.2226" }
%"class.blink::MemberBase.2226" = type { %"class.blink::HeapListHashSetNode.2227"* }
%"class.blink::HeapListHashSetNode.2227" = type { %"class.blink::Member.2230", %"class.blink::Member.2225", %"class.blink::Member.2225" }
%class.scoped_refptr.2229 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2230" = type { %"class.blink::MemberBase.2231" }
%"class.blink::MemberBase.2231" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2232" = type { %"class.blink::MemberBase.2233" }
%"class.blink::MemberBase.2233" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.2234" = type { %"class.blink::MemberBase.2235" }
%"class.blink::MemberBase.2235" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2236" = type { %"class.blink::MemberBase.2237" }
%"class.blink::MemberBase.2237" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2238" = type { %"class.blink::MemberBase.2239" }
%"class.blink::MemberBase.2239" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.2242" = type { %"class.blink::MemberBase.2243" }
%"class.blink::MemberBase.2243" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2244" = type { %"class.blink::MemberBase.2245" }
%"class.blink::MemberBase.2245" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.2246" }
%"class.blink::Member.2246" = type { %"class.blink::MemberBase.2247" }
%"class.blink::MemberBase.2247" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3070" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.2977, %"class.std::__1::unique_ptr.690", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.704, i32 }>
%class.scoped_refptr.2977 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.704, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.3036", %"class.absl::optional.3041", %"class.absl::optional.2994", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.3061", i8, [7 x i8], %class.scoped_refptr.704, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.717" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.704, %"class.std::__1::unique_ptr.2978", %"class.absl::optional.2988", %"struct.std::__1::atomic.301", i8, i8, i8, i8, i32, i32, %"class.absl::optional.2994", %"class.std::__1::unique_ptr.2999", i8, i64, %class.scoped_refptr.3033, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.3034", %"class.base::WeakPtrFactory.3035" }
%"class.std::__1::unique_ptr.2978" = type { %"class.std::__1::__compressed_pair.2979" }
%"class.std::__1::__compressed_pair.2979" = type { %"struct.std::__1::__compressed_pair_elem.2980" }
%"struct.std::__1::__compressed_pair_elem.2980" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.704, i8, %"class.mojo::ScopedHandleBase.2981", %class.scoped_refptr.2982, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2983", i8*, %"class.base::WeakPtrFactory.2984" }
%"class.mojo::ScopedHandleBase.2981" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.2982 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.2983" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.2984" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2988" = type { %"class.absl::optional_internal::optional_data.2989" }
%"class.absl::optional_internal::optional_data.2989" = type { %"class.absl::optional_internal::optional_data_base.2990" }
%"class.absl::optional_internal::optional_data_base.2990" = type { %"class.absl::optional_internal::optional_data_dtor_base.2991" }
%"class.absl::optional_internal::optional_data_dtor_base.2991" = type { i8, %union.anon.2992 }
%union.anon.2992 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.2993", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.2993" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.2999" = type { %"class.std::__1::__compressed_pair.3000" }
%"class.std::__1::__compressed_pair.3000" = type { %"struct.std::__1::__compressed_pair_elem.3001" }
%"struct.std::__1::__compressed_pair_elem.3001" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.3002", i8, i64, %class.scoped_refptr.3003, %class.scoped_refptr.3028 }
%"class.base::RepeatingCallback.3002" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.3003 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.3004", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.3006", %"class.std::__1::map.3017", i8, [7 x i8] }>
%"class.base::RefCounted.3004" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.3005 }
%class.scoped_refptr.3005 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.3006" = type { %"class.std::__1::__tree.3007" }
%"class.std::__1::__tree.3007" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3008", %"class.std::__1::__compressed_pair.3012" }
%"class.std::__1::__compressed_pair.3008" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"class.std::__1::__compressed_pair.3012" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"class.std::__1::map.3017" = type { %"class.std::__1::__tree.3018" }
%"class.std::__1::__tree.3018" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3019", %"class.std::__1::__compressed_pair.3023" }
%"class.std::__1::__compressed_pair.3019" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"class.std::__1::__compressed_pair.3023" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%class.scoped_refptr.3028 = type { %"class.base::RefCountedData.3029"* }
%"class.base::RefCountedData.3029" = type opaque
%class.scoped_refptr.3033 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.3034" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.3035" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.3036" = type { %"class.absl::optional_internal::optional_data.3037" }
%"class.absl::optional_internal::optional_data.3037" = type { %"class.absl::optional_internal::optional_data_base.3038" }
%"class.absl::optional_internal::optional_data_base.3038" = type { %"class.absl::optional_internal::optional_data_dtor_base.3039" }
%"class.absl::optional_internal::optional_data_dtor_base.3039" = type { i8, %union.anon.3040 }
%union.anon.3040 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.3041" = type { %"class.absl::optional_internal::optional_data.3042" }
%"class.absl::optional_internal::optional_data.3042" = type { %"class.absl::optional_internal::optional_data_base.3043" }
%"class.absl::optional_internal::optional_data_base.3043" = type { %"class.absl::optional_internal::optional_data_dtor_base.3044" }
%"class.absl::optional_internal::optional_data_dtor_base.3044" = type { i8, [7 x i8], %union.anon.3045 }
%union.anon.3045 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.2994" = type { %"class.absl::optional_internal::optional_data.2995" }
%"class.absl::optional_internal::optional_data.2995" = type { %"class.absl::optional_internal::optional_data_base.2996" }
%"class.absl::optional_internal::optional_data_base.2996" = type { %"class.absl::optional_internal::optional_data_dtor_base.2997" }
%"class.absl::optional_internal::optional_data_dtor_base.2997" = type { i8, %union.anon.2998 }
%union.anon.2998 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.3046 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.3046 = type { %"class.std::__1::map.3049" }
%"class.std::__1::map.3049" = type { %"class.std::__1::__tree.3050" }
%"class.std::__1::__tree.3050" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3051", %"class.std::__1::__compressed_pair.3055" }
%"class.std::__1::__compressed_pair.3051" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"class.std::__1::__compressed_pair.3055" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.3060"*, i64 }
%"class.std::__1::unique_ptr.3060" = type opaque
%"class.std::__1::map.3061" = type { %"class.std::__1::__tree.3062" }
%"class.std::__1::__tree.3062" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3063", %"class.std::__1::__compressed_pair.3067" }
%"class.std::__1::__compressed_pair.3063" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"class.std::__1::__compressed_pair.3067" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.3070" = type { %"class.std::__1::__compressed_pair.3071" }
%"class.std::__1::__compressed_pair.3071" = type { %"struct.std::__1::__compressed_pair_elem.3072" }
%"struct.std::__1::__compressed_pair_elem.3072" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.std::__1::unique_ptr.2248" = type { %"class.std::__1::__compressed_pair.2249" }
%"class.std::__1::__compressed_pair.2249" = type { %"struct.std::__1::__compressed_pair_elem.2250" }
%"struct.std::__1::__compressed_pair_elem.2250" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.2251, %"class.blink::WebVector", %"class.base::WaitableEvent"* }
%class.scoped_refptr.2251 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.2252", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.2252" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.2253" }
%"class.std::__1::vector.2253" = type { %"class.std::__1::__vector_base.2254" }
%"class.std::__1::__vector_base.2254" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.2255" }
%"class.std::__1::__compressed_pair.2255" = type { %"struct.std::__1::__compressed_pair_elem.2256" }
%"struct.std::__1::__compressed_pair_elem.2256" = type { %"class.blink::WebString"* }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.2260, i8, [7 x i8] }>
%class.scoped_refptr.2260 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.2261", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.2261" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.2262" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.2262" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2269" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2270" = type { %"class.std::__1::__compressed_pair.2271" }
%"class.std::__1::__compressed_pair.2271" = type { %"struct.std::__1::__compressed_pair_elem.2272" }
%"struct.std::__1::__compressed_pair_elem.2272" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.1944" = type { %"class.absl::optional_internal::optional_data.1945" }
%"class.absl::optional_internal::optional_data.1945" = type { %"class.absl::optional_internal::optional_data_base.1946" }
%"class.absl::optional_internal::optional_data_base.1946" = type { %"class.absl::optional_internal::optional_data_dtor_base.1947" }
%"class.absl::optional_internal::optional_data_dtor_base.1947" = type { i8, %union.anon.1948 }
%union.anon.1948 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2276" = type { %"class.std::__1::__compressed_pair.2277" }
%"class.std::__1::__compressed_pair.2277" = type { %"struct.std::__1::__compressed_pair_elem.2278" }
%"struct.std::__1::__compressed_pair_elem.2278" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2282" }
%"class.blink::Member.2282" = type { %"class.blink::MemberBase.2283" }
%"class.blink::MemberBase.2283" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3078" }
%"class.mojo::AssociatedRemote.3078" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3079" }
%"class.mojo::internal::AssociatedInterfacePtrState.3079" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3080" }
%"class.std::__1::unique_ptr.3080" = type { %"class.std::__1::__compressed_pair.3081" }
%"class.std::__1::__compressed_pair.3081" = type { %"struct.std::__1::__compressed_pair_elem.3082" }
%"struct.std::__1::__compressed_pair_elem.3082" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2284" = type { %"class.blink::Member.2285" }
%"class.blink::Member.2285" = type { %"class.blink::MemberBase.2286" }
%"class.blink::MemberBase.2286" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3088" }
%"class.mojo::AssociatedRemote.3088" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3089" }
%"class.mojo::internal::AssociatedInterfacePtrState.3089" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3090" }
%"class.std::__1::unique_ptr.3090" = type { %"class.std::__1::__compressed_pair.3091" }
%"class.std::__1::__compressed_pair.3091" = type { %"struct.std::__1::__compressed_pair_elem.3092" }
%"struct.std::__1::__compressed_pair_elem.3092" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2287" }
%"class.blink::Member.2287" = type { %"class.blink::MemberBase.2288" }
%"class.blink::MemberBase.2288" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3098", %"class.blink::Member.1925", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3098" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.3099" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.690" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.3099" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2289" = type { %"class.blink::Member.2290" }
%"class.blink::Member.2290" = type { %"class.blink::MemberBase.2291" }
%"class.blink::MemberBase.2291" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3102", %"class.blink::Member.1925", %"class.mojo::AssociatedReceiver.3103" }
%"class.blink::ThreadState::PrefinalizerRegistration.3102" = type { i8 }
%"class.mojo::AssociatedReceiver.3103" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.3104" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.3104" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2292" }
%"class.blink::Member.2292" = type { %"class.blink::MemberBase.2293" }
%"class.blink::MemberBase.2293" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3107", %"class.blink::Member.1925", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3107" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.2977, %"class.std::__1::unique_ptr.690", %"class.base::WeakPtrFactory.3108" }
%"class.base::WeakPtrFactory.3108" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2294" = type { %"class.blink::Member.2295" }
%"class.blink::Member.2295" = type { %"class.blink::MemberBase.2296" }
%"class.blink::MemberBase.2296" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3111", %"class.blink::Member.1925", %"class.mojo::AssociatedReceiver.3112" }
%"class.blink::ThreadState::PrefinalizerRegistration.3111" = type { i8 }
%"class.mojo::AssociatedReceiver.3112" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.3113" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.3113" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2297" = type { %"class.blink::MemberBase.2298" }
%"class.blink::MemberBase.2298" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2299" = type { %"class.blink::MemberBase.2300" }
%"class.blink::MemberBase.2300" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2301" = type { %"class.blink::MemberBase.2302" }
%"class.blink::MemberBase.2302" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type { %"class.blink::NativePaintImageGenerator" }
%"class.blink::NativePaintImageGenerator" = type { i32 (...)** }
%"class.blink::Member.2303" = type { %"class.blink::MemberBase.2304" }
%"class.blink::MemberBase.2304" = type { %"class.blink::HeapHashMap.2305"* }
%"class.blink::HeapHashMap.2305" = type opaque
%"class.mojo::StructPtr.2306" = type { %"class.std::__1::unique_ptr.2307" }
%"class.std::__1::unique_ptr.2307" = type { %"class.std::__1::__compressed_pair.2308" }
%"class.std::__1::__compressed_pair.2308" = type { %"struct.std::__1::__compressed_pair_elem.2309" }
%"struct.std::__1::__compressed_pair_elem.2309" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2310", %"class.mojo::InlinedStructPtr.2311" }
%"class.mojo::InlinedStructPtr.2310" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2311" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2315" = type { %"class.blink::MemberBase.2316" }
%"class.blink::MemberBase.2316" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.absl::optional.2317" = type { %"class.absl::optional_internal::optional_data.2318" }
%"class.absl::optional_internal::optional_data.2318" = type { %"class.absl::optional_internal::optional_data_base.2319" }
%"class.absl::optional_internal::optional_data_base.2319" = type { %"class.absl::optional_internal::optional_data_dtor_base.2320" }
%"class.absl::optional_internal::optional_data_dtor_base.2320" = type { i8, %union.anon.2321 }
%union.anon.2321 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::ElementAnimations" = type { %"class.blink::EffectStack", %"class.blink::CSSAnimations", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.2710", i8, %class.scoped_refptr.2717, %"class.std::__1::unique_ptr.2718" }
%"class.blink::EffectStack" = type { %"class.blink::HeapVector.2607" }
%"class.blink::HeapVector.2607" = type { %"class.WTF::Vector.2610" }
%"class.WTF::Vector.2610" = type { %"class.WTF::VectorBuffer.2611" }
%"class.WTF::VectorBuffer.2611" = type { %"class.WTF::VectorBufferBase.2612" }
%"class.WTF::VectorBufferBase.2612" = type { %"class.blink::Member.2613"*, i32, i32 }
%"class.blink::Member.2613" = type { %"class.blink::MemberBase.2614" }
%"class.blink::MemberBase.2614" = type { %"class.blink::SampledEffect"* }
%"class.blink::SampledEffect" = type { %"class.blink::WeakMember.2617", %"class.blink::HeapVector.2619", i32, i32 }
%"class.blink::WeakMember.2617" = type { %"class.blink::MemberBase.2618" }
%"class.blink::MemberBase.2618" = type { %"class.blink::KeyframeEffect"* }
%"class.blink::KeyframeEffect" = type { %"class.blink::AnimationEffect", %"class.blink::Member.42", %"class.blink::Member.42", %"class.WTF::String", %"class.blink::Member.2654", %"class.blink::Member.2613", i32, %"class.WTF::Vector.2724", i8, %"class.absl::optional.2728" }
%"class.blink::Member.2654" = type { %"class.blink::MemberBase.2655" }
%"class.blink::MemberBase.2655" = type { %"class.blink::KeyframeEffectModelBase"* }
%"class.WTF::Vector.2724" = type { %"class.WTF::VectorBuffer.2725" }
%"class.WTF::VectorBuffer.2725" = type { %"class.WTF::VectorBufferBase.2489" }
%"class.absl::optional.2728" = type { %"class.absl::optional_internal::optional_data.2729" }
%"class.absl::optional_internal::optional_data.2729" = type { %"class.absl::optional_internal::optional_data_base.2730" }
%"class.absl::optional_internal::optional_data_base.2730" = type { %"class.absl::optional_internal::optional_data_dtor_base.2731" }
%"class.absl::optional_internal::optional_data_dtor_base.2731" = type { i8, %union.anon.2732 }
%union.anon.2732 = type { %"class.blink::FloatSize" }
%"class.blink::HeapVector.2619" = type { %"class.WTF::Vector.2622" }
%"class.WTF::Vector.2622" = type { %"class.WTF::VectorBuffer.2623" }
%"class.WTF::VectorBuffer.2623" = type { %"class.WTF::VectorBufferBase.2624" }
%"class.WTF::VectorBufferBase.2624" = type { %"class.blink::Member.2625"*, i32, i32 }
%"class.blink::CSSAnimations" = type { %"class.blink::HeapVector.2631", %"class.blink::HeapHashMap.2639", %"class.blink::CSSAnimationUpdate", %"class.blink::HeapHashMap.2697", %"class.blink::HeapHashMap.2697" }
%"class.blink::HeapVector.2631" = type { %"class.WTF::Vector.2634" }
%"class.WTF::Vector.2634" = type { %"class.WTF::VectorBuffer.2635" }
%"class.WTF::VectorBuffer.2635" = type { %"class.WTF::VectorBufferBase.2636" }
%"class.WTF::VectorBufferBase.2636" = type { %"class.blink::Member.2637"*, i32, i32 }
%"class.blink::Member.2637" = type opaque
%"class.blink::HeapHashMap.2639" = type { %"class.WTF::HashMap.2642" }
%"class.WTF::HashMap.2642" = type { %"class.WTF::HashTable.2643" }
%"class.WTF::HashTable.2643" = type <{ %"struct.WTF::KeyValuePair.2645"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2645" = type opaque
%"class.blink::CSSAnimationUpdate" = type { %"class.blink::HeapVector.2646", %"class.WTF::Vector.1205", %"class.blink::HeapHashSet.2669", %"class.WTF::Vector.1205", %"class.blink::HeapVector.2676", %"class.blink::HeapVector.2683", %"class.blink::HeapHashMap.2690", %"class.WTF::HashSet.1337", %"class.WTF::HashSet.1337", %"class.blink::HeapHashMap.2697", %"class.blink::HeapHashMap.2697", %"class.blink::HeapHashMap.2697", %"class.blink::HeapHashMap.2697" }
%"class.blink::HeapVector.2646" = type { %"class.WTF::Vector.2649" }
%"class.WTF::Vector.2649" = type { %"class.WTF::VectorBuffer.2650" }
%"class.WTF::VectorBuffer.2650" = type { %"class.WTF::VectorBufferBase.2651" }
%"class.WTF::VectorBufferBase.2651" = type { %"class.blink::NewCSSAnimation"*, i32, i32 }
%"class.blink::NewCSSAnimation" = type { %"class.WTF::AtomicString", i64, i64, %"class.blink::Member.2652", %"struct.blink::Timing", %"class.blink::Member.2656", i32, %"class.blink::Member.821", %"class.WTF::Vector.1681" }
%"class.blink::Member.2652" = type { %"class.blink::MemberBase.2653" }
%"class.blink::MemberBase.2653" = type { %"class.blink::InertEffect"* }
%"class.blink::InertEffect" = type { %"class.blink::AnimationEffect", %"class.blink::Member.2654", i8, %"class.absl::optional", %"class.absl::optional.801" }
%"class.blink::Member.2656" = type { %"class.blink::MemberBase.2657" }
%"class.blink::MemberBase.2657" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.2660", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::HeapVector.2660" = type { %"class.WTF::Vector.2663" }
%"class.WTF::Vector.2663" = type { %"class.WTF::VectorBuffer.2664" }
%"class.WTF::VectorBuffer.2664" = type { %"class.WTF::VectorBufferBase.2665" }
%"class.WTF::VectorBufferBase.2665" = type { %"class.blink::Member.2666"*, i32, i32 }
%"class.blink::Member.2666" = type opaque
%"class.blink::HeapHashSet.2669" = type { %"class.WTF::HashSet.2672" }
%"class.WTF::HashSet.2672" = type { %"class.WTF::HashTable.2673" }
%"class.WTF::HashTable.2673" = type <{ %"class.blink::Member.2675"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2675" = type { %"class.blink::MemberBase.2924" }
%"class.blink::MemberBase.2924" = type { %"class.blink::Animation"* }
%"class.blink::HeapVector.2676" = type { %"class.WTF::Vector.2679" }
%"class.WTF::Vector.2679" = type { %"class.WTF::VectorBuffer.2680" }
%"class.WTF::VectorBuffer.2680" = type { %"class.WTF::VectorBufferBase.2681" }
%"class.WTF::VectorBufferBase.2681" = type { %"class.blink::UpdatedCSSAnimation"*, i32, i32 }
%"class.blink::UpdatedCSSAnimation" = type { i32, %"class.blink::Member.829", %"class.blink::Member.2652", %"struct.blink::Timing", %"class.blink::Member.2656", i32, %"class.blink::Member.821", %"class.WTF::Vector.1681" }
%"class.blink::HeapVector.2683" = type { %"class.WTF::Vector.2686" }
%"class.WTF::Vector.2686" = type { %"class.WTF::VectorBuffer.2687" }
%"class.WTF::VectorBuffer.2687" = type { %"class.WTF::VectorBufferBase.2688" }
%"class.WTF::VectorBufferBase.2688" = type { %"class.blink::Member.829"*, i32, i32 }
%"class.blink::HeapHashMap.2690" = type { %"class.WTF::HashMap.2693" }
%"class.WTF::HashMap.2693" = type { %"class.WTF::HashTable.2694" }
%"class.WTF::HashTable.2694" = type <{ %"struct.WTF::KeyValuePair.2696"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2696" = type { %"class.blink::PropertyHandle", %"class.blink::Member.2934" }
%"class.blink::Member.2934" = type { %"class.blink::MemberBase.2935" }
%"class.blink::MemberBase.2935" = type { %"struct.blink::CSSAnimationUpdate::NewTransition"* }
%"struct.blink::CSSAnimationUpdate::NewTransition" = type { i32 (...)**, %"class.blink::PropertyHandle", %class.scoped_refptr.1386, %class.scoped_refptr.1386, %class.scoped_refptr.1386, double, %"class.blink::Member.2652" }
%"class.blink::HeapHashMap.2697" = type { %"class.WTF::HashMap.2700" }
%"class.WTF::HashMap.2700" = type { %"class.WTF::HashTable.2701" }
%"class.WTF::HashTable.2701" = type <{ %"struct.WTF::KeyValuePair.2703"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2703" = type { %"class.blink::PropertyHandle", %"class.blink::Member.2925" }
%"class.blink::Member.2925" = type { %"class.blink::MemberBase.2926" }
%"class.blink::MemberBase.2926" = type { %"class.blink::HeapVector.2927"* }
%"class.blink::HeapVector.2927" = type { %"class.WTF::Vector.2930" }
%"class.WTF::Vector.2930" = type { %"class.WTF::VectorBuffer.2931" }
%"class.WTF::VectorBuffer.2931" = type { %"class.WTF::VectorBufferBase.2624", [8 x i8] }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.2706" }
%"class.WTF::HashMap.2706" = type { %"class.WTF::HashTable.2707" }
%"class.WTF::HashTable.2707" = type <{ %"struct.WTF::KeyValuePair.2709"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2709" = type <{ %"class.blink::WeakMember.837", i32, [4 x i8] }>
%"class.blink::HeapHashSet.2710" = type { %"class.WTF::HashSet.2713" }
%"class.WTF::HashSet.2713" = type { %"class.WTF::HashTable.2714" }
%"class.WTF::HashTable.2714" = type <{ %"class.blink::WeakMember.2716"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2716" = type opaque
%class.scoped_refptr.2717 = type { %"class.blink::ComputedStyle"* }
%"class.std::__1::unique_ptr.2718" = type { %"class.std::__1::__compressed_pair.2719" }
%"class.std::__1::__compressed_pair.2719" = type { %"struct.std::__1::__compressed_pair_elem.2720" }
%"struct.std::__1::__compressed_pair_elem.2720" = type { %"class.blink::CSSBitsetBase"* }
%"class.blink::CSSBitsetBase" = type opaque
%"class.blink::SVGElement" = type { %"class.blink::Element", %"class.blink::HeapHashSet.1885", %"class.blink::HeapHashMap.1892", %"class.blink::Member.1899", %"class.blink::Member.1901" }
%"class.blink::HeapHashSet.1885" = type { %"class.WTF::HashSet.1888" }
%"class.WTF::HashSet.1888" = type { %"class.WTF::HashTable.1889" }
%"class.WTF::HashTable.1889" = type <{ %"class.blink::WeakMember.1891"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1891" = type opaque
%"class.blink::HeapHashMap.1892" = type { %"class.WTF::HashMap.1895" }
%"class.WTF::HashMap.1895" = type { %"class.WTF::HashTable.1896" }
%"class.WTF::HashTable.1896" = type <{ %"struct.WTF::KeyValuePair.1898"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1898" = type opaque
%"class.blink::Member.1899" = type { %"class.blink::MemberBase.1900" }
%"class.blink::MemberBase.1900" = type { %"class.blink::SVGElementRareData"* }
%"class.blink::SVGElementRareData" = type opaque
%"class.blink::Member.1901" = type { %"class.blink::MemberBase.1902" }
%"class.blink::MemberBase.1902" = type { %"class.blink::SVGAnimatedString"* }
%"class.blink::SVGAnimatedString" = type opaque
%"class.WTF::HashMap<blink::PropertyHandle, blink::Member<blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup>, WTF::DefaultHash<blink::PropertyHandle>::Hash, WTF::HashTraits<blink::PropertyHandle>, WTF::HashTraits<blink::Member<blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup> >, blink::HeapAllocator>::HashMapKeysProxy" = type { %"class.WTF::HashMap.1355" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::Settings" = type <{ %"class.blink::SettingsDelegate"*, %"class.blink::GenericFontFamilySettings", double, i32, [4 x i8], double, i32, i32, i32, i32, i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", i32, i32, double, i32, i32, i32, i32, i32, %"class.blink::IntSize", [4 x i8], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], double, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", [14 x i8], [2 x i8] }>
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.2587" }
%"class.std::__1::unique_ptr.2587" = type { %"class.std::__1::__compressed_pair.2588" }
%"class.std::__1::__compressed_pair.2588" = type { %"struct.std::__1::__compressed_pair_elem.2589" }
%"struct.std::__1::__compressed_pair_elem.2589" = type { %"class.blink::Settings"* }
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.2593", %"class.WTF::HashMap.2593", %"class.WTF::HashMap.2593", %"class.WTF::HashMap.2593", %"class.WTF::HashMap.2593", %"class.WTF::HashMap.2593", %"class.WTF::HashMap.2593", %"class.std::__1::unique_ptr.2598" }
%"class.WTF::HashMap.2593" = type { %"class.WTF::HashTable.2594" }
%"class.WTF::HashTable.2594" = type <{ %"struct.WTF::KeyValuePair.2597"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2597" = type opaque
%"class.std::__1::unique_ptr.2598" = type { %"class.std::__1::__compressed_pair.2599" }
%"class.std::__1::__compressed_pair.2599" = type { %"struct.std::__1::__compressed_pair_elem.2600" }
%"struct.std::__1::__compressed_pair_elem.2600" = type { %"class.WTF::Vector.2601"* }
%"class.WTF::Vector.2601" = type opaque
%"class.blink::Platform" = type { i32 (...)** }
%"class.WTF::Vector.2734" = type { %"class.WTF::VectorBuffer.2735" }
%"class.WTF::VectorBuffer.2735" = type { %"class.WTF::VectorBufferBase.2736" }
%"class.WTF::VectorBufferBase.2736" = type { %"class.std::__1::unique_ptr.2737"*, i32, i32 }
%"class.std::__1::unique_ptr.2737" = type { %"class.std::__1::__compressed_pair.2738" }
%"class.std::__1::__compressed_pair.2738" = type { %"struct.std::__1::__compressed_pair_elem.2739" }
%"struct.std::__1::__compressed_pair_elem.2739" = type { %"class.blink::CompositorKeyframeModel"* }
%"class.blink::CompositorKeyframeModel" = type { %"class.std::__1::unique_ptr.2740" }
%"class.std::__1::unique_ptr.2740" = type { %"class.std::__1::__compressed_pair.2741" }
%"class.std::__1::__compressed_pair.2741" = type { %"struct.std::__1::__compressed_pair_elem.2742" }
%"struct.std::__1::__compressed_pair_elem.2742" = type { %"class.cc::KeyframeModel"* }
%"class.cc::KeyframeModel" = type <{ %"class.gfx::KeyframeModel", i32, [4 x i8], %"class.cc::KeyframeModel::TargetPropertyId", %"struct.cc::ElementId", i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.gfx::KeyframeModel" = type { i32 (...)**, %"class.std::__1::unique_ptr.2743", i32, i32, i32, double, double, i32, double, i32, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeDelta" }
%"class.std::__1::unique_ptr.2743" = type { %"class.std::__1::__compressed_pair.2744" }
%"class.std::__1::__compressed_pair.2744" = type { %"struct.std::__1::__compressed_pair_elem.2745" }
%"struct.std::__1::__compressed_pair_elem.2745" = type { %"class.gfx::AnimationCurve"* }
%"class.gfx::AnimationCurve" = type { i32 (...)** }
%"class.cc::KeyframeModel::TargetPropertyId" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.blink::CompositorColorKeyframe" = type { %"class.blink::CompositorKeyframe", %"class.std::__1::unique_ptr.2892" }
%"class.blink::CompositorKeyframe" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2892" = type { %"class.std::__1::__compressed_pair.2893" }
%"class.std::__1::__compressed_pair.2893" = type { %"struct.std::__1::__compressed_pair_elem.2894" }
%"struct.std::__1::__compressed_pair_elem.2894" = type { %"class.gfx::ColorKeyframe"* }
%"class.gfx::ColorKeyframe" = type <{ %"class.gfx::Keyframe", i32, [4 x i8] }>
%"class.gfx::Keyframe" = type { i32 (...)**, %"class.base::TimeDelta", %"class.std::__1::unique_ptr.2774" }
%"class.std::__1::unique_ptr.2774" = type { %"class.std::__1::__compressed_pair.2775" }
%"class.std::__1::__compressed_pair.2775" = type { %"struct.std::__1::__compressed_pair_elem.2776" }
%"struct.std::__1::__compressed_pair_elem.2776" = type { %"class.gfx::TimingFunction"* }
%"class.gfx::TimingFunction" = type { i32 (...)** }
%"class.blink::CompositorTransformOperations" = type { %"class.gfx::TransformOperations" }
%"class.gfx::TransformOperations" = type { %"class.std::__1::vector.2830", %"class.std::__1::unordered_map.2843" }
%"class.std::__1::vector.2830" = type { %"class.std::__1::__vector_base.2831" }
%"class.std::__1::__vector_base.2831" = type { %"struct.gfx::TransformOperation"*, %"struct.gfx::TransformOperation"*, %"class.std::__1::__compressed_pair.2838" }
%"struct.gfx::TransformOperation" = type { i32, %"class.gfx::Transform", %union.anon.2832 }
%union.anon.2832 = type { %struct.anon.2836 }
%struct.anon.2836 = type { %struct.anon.2837, float }
%struct.anon.2837 = type { float, float, float }
%"class.std::__1::__compressed_pair.2838" = type { %"struct.std::__1::__compressed_pair_elem.2839" }
%"struct.std::__1::__compressed_pair_elem.2839" = type { %"struct.gfx::TransformOperation"* }
%"class.std::__1::unordered_map.2843" = type { %"class.std::__1::__hash_table.2844" }
%"class.std::__1::__hash_table.2844" = type <{ %"class.std::__1::unique_ptr.2845", %"class.std::__1::__compressed_pair.2855", %"class.std::__1::__compressed_pair.2860", %"class.std::__1::__compressed_pair.2865", [4 x i8] }>
%"class.std::__1::unique_ptr.2845" = type { %"class.std::__1::__compressed_pair.2846" }
%"class.std::__1::__compressed_pair.2846" = type { %"struct.std::__1::__compressed_pair_elem.2847", %"struct.std::__1::__compressed_pair_elem.2849" }
%"struct.std::__1::__compressed_pair_elem.2847" = type { %"struct.std::__1::__hash_node_base.2848"** }
%"struct.std::__1::__hash_node_base.2848" = type { %"struct.std::__1::__hash_node_base.2848"* }
%"struct.std::__1::__compressed_pair_elem.2849" = type { %"class.std::__1::__bucket_list_deallocator.2850" }
%"class.std::__1::__bucket_list_deallocator.2850" = type { %"class.std::__1::__compressed_pair.2851" }
%"class.std::__1::__compressed_pair.2851" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"class.std::__1::__compressed_pair.2855" = type { %"struct.std::__1::__compressed_pair_elem.2856" }
%"struct.std::__1::__compressed_pair_elem.2856" = type { %"struct.std::__1::__hash_node_base.2848" }
%"class.std::__1::__compressed_pair.2860" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"class.std::__1::__compressed_pair.2865" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"class.blink::CompositorTransformKeyframe" = type { %"class.blink::CompositorKeyframe", %"class.std::__1::unique_ptr.2827" }
%"class.std::__1::unique_ptr.2827" = type { %"class.std::__1::__compressed_pair.2828" }
%"class.std::__1::__compressed_pair.2828" = type { %"struct.std::__1::__compressed_pair_elem.2829" }
%"struct.std::__1::__compressed_pair_elem.2829" = type { %"class.gfx::TransformKeyframe"* }
%"class.gfx::TransformKeyframe" = type { %"class.gfx::Keyframe", %"class.gfx::TransformOperations" }
%"class.blink::FilterEffectBuilder" = type <{ %"class.blink::FloatRect", float, float, %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"*, i32, [4 x i8] }>
%"class.cc::PaintFlags" = type <{ %class.sk_sp.3160, %class.sk_sp.3161, %class.sk_sp.3180, %class.sk_sp.3181, %class.sk_sp.3182, %class.sk_sp, i32, float, float, i32, %union.anon.3183, [4 x i8] }>
%class.sk_sp.3160 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.3161 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.3162", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.1277, i32, %"class.absl::optional.3167", %"class.std::__1::vector.1848", %"class.std::__1::vector.3172", %class.sk_sp.3179, %class.sk_sp.1274, i32, [4 x i8] }>
%"class.absl::optional.3162" = type { %"class.absl::optional_internal::optional_data.3163" }
%"class.absl::optional_internal::optional_data.3163" = type { %"class.absl::optional_internal::optional_data_base.3164" }
%"class.absl::optional_internal::optional_data_base.3164" = type { %"class.absl::optional_internal::optional_data_dtor_base.3165" }
%"class.absl::optional_internal::optional_data_dtor_base.3165" = type { i8, %union.anon.3166 }
%union.anon.3166 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%"class.absl::optional.3167" = type { %"class.absl::optional_internal::optional_data.3168" }
%"class.absl::optional_internal::optional_data.3168" = type { %"class.absl::optional_internal::optional_data_base.3169" }
%"class.absl::optional_internal::optional_data_base.3169" = type { %"class.absl::optional_internal::optional_data_dtor_base.3170" }
%"class.absl::optional_internal::optional_data_dtor_base.3170" = type { i8, %union.anon.3171 }
%union.anon.3171 = type { %"class.gfx::SizeF" }
%"class.std::__1::vector.3172" = type { %"class.std::__1::__vector_base.3173" }
%"class.std::__1::__vector_base.3173" = type { float*, float*, %"class.std::__1::__compressed_pair.3174" }
%"class.std::__1::__compressed_pair.3174" = type { %"struct.std::__1::__compressed_pair_elem.3175" }
%"struct.std::__1::__compressed_pair_elem.3175" = type { float* }
%class.sk_sp.3179 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.301", [7 x i8] }>
%class.sk_sp.3180 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.3181 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.3182 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%union.anon.3183 = type { i32 }
%"class.blink::CompositorFilterKeyframe" = type { %"class.blink::CompositorKeyframe", %"class.std::__1::unique_ptr.2802" }
%"class.std::__1::unique_ptr.2802" = type { %"class.std::__1::__compressed_pair.2803" }
%"class.std::__1::__compressed_pair.2803" = type { %"struct.std::__1::__compressed_pair_elem.2804" }
%"struct.std::__1::__compressed_pair_elem.2804" = type { %"class.cc::FilterKeyframe"* }
%"class.cc::FilterKeyframe" = type { %"class.gfx::Keyframe", %"class.cc::FilterOperations" }
%"class.blink::CompositorFloatAnimationCurve" = type { %"class.blink::CompositorAnimationCurve", %"class.std::__1::unique_ptr.2766" }
%"class.blink::CompositorAnimationCurve" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2766" = type { %"class.std::__1::__compressed_pair.2767" }
%"class.std::__1::__compressed_pair.2767" = type { %"struct.std::__1::__compressed_pair_elem.2768" }
%"struct.std::__1::__compressed_pair_elem.2768" = type { %"class.gfx::KeyframedFloatAnimationCurve"* }
%"class.gfx::KeyframedFloatAnimationCurve" = type { %"class.gfx::FloatAnimationCurve", %"class.std::__1::vector.2769", %"class.std::__1::unique_ptr.2774", double }
%"class.gfx::FloatAnimationCurve" = type { %"class.gfx::AnimationCurve", %"class.gfx::FloatAnimationCurve::Target"* }
%"class.gfx::FloatAnimationCurve::Target" = type { i32 (...)** }
%"class.std::__1::vector.2769" = type { %"class.std::__1::__vector_base.2770" }
%"class.std::__1::__vector_base.2770" = type { %"class.std::__1::unique_ptr.2771"*, %"class.std::__1::unique_ptr.2771"*, %"class.std::__1::__compressed_pair.2783" }
%"class.std::__1::unique_ptr.2771" = type { %"class.std::__1::__compressed_pair.2772" }
%"class.std::__1::__compressed_pair.2772" = type { %"struct.std::__1::__compressed_pair_elem.2773" }
%"struct.std::__1::__compressed_pair_elem.2773" = type { %"class.gfx::FloatKeyframe"* }
%"class.gfx::FloatKeyframe" = type <{ %"class.gfx::Keyframe", float, [4 x i8] }>
%"class.std::__1::__compressed_pair.2783" = type { %"struct.std::__1::__compressed_pair_elem.2784" }
%"struct.std::__1::__compressed_pair_elem.2784" = type { %"class.std::__1::unique_ptr.2771"* }
%"class.blink::CompositorFilterAnimationCurve" = type { %"class.blink::CompositorAnimationCurve", %"class.std::__1::unique_ptr.2797" }
%"class.std::__1::unique_ptr.2797" = type { %"class.std::__1::__compressed_pair.2798" }
%"class.std::__1::__compressed_pair.2798" = type { %"struct.std::__1::__compressed_pair_elem.2799" }
%"struct.std::__1::__compressed_pair_elem.2799" = type { %"class.cc::KeyframedFilterAnimationCurve"* }
%"class.cc::KeyframedFilterAnimationCurve" = type { %"class.cc::FilterAnimationCurve", %"class.std::__1::vector.2800", %"class.std::__1::unique_ptr.2774", double }
%"class.cc::FilterAnimationCurve" = type { %"class.gfx::AnimationCurve", %"class.cc::FilterAnimationCurve::Target"* }
%"class.cc::FilterAnimationCurve::Target" = type { i32 (...)** }
%"class.std::__1::vector.2800" = type { %"class.std::__1::__vector_base.2801" }
%"class.std::__1::__vector_base.2801" = type { %"class.std::__1::unique_ptr.2802"*, %"class.std::__1::unique_ptr.2802"*, %"class.std::__1::__compressed_pair.2808" }
%"class.std::__1::__compressed_pair.2808" = type { %"struct.std::__1::__compressed_pair_elem.2809" }
%"struct.std::__1::__compressed_pair_elem.2809" = type { %"class.std::__1::unique_ptr.2802"* }
%"class.blink::CompositorTransformAnimationCurve" = type { %"class.blink::CompositorAnimationCurve", %"class.std::__1::unique_ptr.2822" }
%"class.std::__1::unique_ptr.2822" = type { %"class.std::__1::__compressed_pair.2823" }
%"class.std::__1::__compressed_pair.2823" = type { %"struct.std::__1::__compressed_pair_elem.2824" }
%"struct.std::__1::__compressed_pair_elem.2824" = type { %"class.gfx::KeyframedTransformAnimationCurve"* }
%"class.gfx::KeyframedTransformAnimationCurve" = type { %"class.gfx::TransformAnimationCurve", %"class.std::__1::vector.2825", %"class.std::__1::unique_ptr.2774", double }
%"class.gfx::TransformAnimationCurve" = type { %"class.gfx::AnimationCurve", %"class.gfx::TransformAnimationCurve::Target"* }
%"class.gfx::TransformAnimationCurve::Target" = type { i32 (...)** }
%"class.std::__1::vector.2825" = type { %"class.std::__1::__vector_base.2826" }
%"class.std::__1::__vector_base.2826" = type { %"class.std::__1::unique_ptr.2827"*, %"class.std::__1::unique_ptr.2827"*, %"class.std::__1::__compressed_pair.2873" }
%"class.std::__1::__compressed_pair.2873" = type { %"struct.std::__1::__compressed_pair_elem.2874" }
%"struct.std::__1::__compressed_pair_elem.2874" = type { %"class.std::__1::unique_ptr.2827"* }
%"class.blink::CompositorColorAnimationCurve" = type { %"class.blink::CompositorAnimationCurve", %"class.std::__1::unique_ptr.2887" }
%"class.std::__1::unique_ptr.2887" = type { %"class.std::__1::__compressed_pair.2888" }
%"class.std::__1::__compressed_pair.2888" = type { %"struct.std::__1::__compressed_pair_elem.2889" }
%"struct.std::__1::__compressed_pair_elem.2889" = type { %"class.gfx::KeyframedColorAnimationCurve"* }
%"class.gfx::KeyframedColorAnimationCurve" = type { %"class.gfx::ColorAnimationCurve", %"class.std::__1::vector.2890", %"class.std::__1::unique_ptr.2774", double }
%"class.gfx::ColorAnimationCurve" = type { %"class.gfx::AnimationCurve", %"class.gfx::ColorAnimationCurve::Target"* }
%"class.gfx::ColorAnimationCurve::Target" = type { i32 (...)** }
%"class.std::__1::vector.2890" = type { %"class.std::__1::__vector_base.2891" }
%"class.std::__1::__vector_base.2891" = type { %"class.std::__1::unique_ptr.2892"*, %"class.std::__1::unique_ptr.2892"*, %"class.std::__1::__compressed_pair.2898" }
%"class.std::__1::__compressed_pair.2898" = type { %"struct.std::__1::__compressed_pair_elem.2899" }
%"struct.std::__1::__compressed_pair_elem.2899" = type { %"class.std::__1::unique_ptr.2892"* }
%"class.blink::CompositorFloatKeyframe" = type { %"class.blink::CompositorKeyframe", %"class.std::__1::unique_ptr.2771" }
%"class.logging::CheckOpResult" = type { i8* }

$_ZNK3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EES2_EEPKS8_RKT0_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS2_SF_EENS_18HashTableAddResultISA_S2_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6ExpandEPS2_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSB_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS6_S8_S9_EES2_EENSt3__14pairIPS2_bEERKT0_ = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRiEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm = comdat any

$_ZN5blink20LinearTimingFunction6SharedEv = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink23CompositorKeyframeModelENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink23CompositorKeyframeModelENS2_14default_deleteIS5_EEEEEEmm = comdat any

$_ZZN5blink20LinearTimingFunction6SharedEvE6linear = comdat any

$_ZGVZN5blink20LinearTimingFunction6SharedEvE6linear = comdat any

@__const._ZN5blink20CompositorAnimations24GetAnimationOnCompositorERKNS_7ElementERKNS_6TimingEiN4absl8optionalIdEEN4base9TimeDeltaERKNS_23KeyframeEffectModelBaseERN3WTF6VectorINSt3__110unique_ptrINS_23CompositorKeyframeModelENSH_14default_deleteISJ_EEEELj0ENSF_18PartitionAllocatorEEEd.compositor_timing = private unnamed_addr constant { i32, [4 x i8], %"class.blink::AnimationTimeDelta", %"class.base::TimeDelta", double, double, i32, [4 x i8], double } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.blink::AnimationTimeDelta" { double 0xFFFFFFFFFFFFFFFF }, %"class.base::TimeDelta" { i64 -6148914691236517206 }, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", double 0xFFFFFFFFFFFFFFFF }, align 8
@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase40is_composite_relative_keyframes_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase40is_composite_bg_color_animation_enabled_E = external local_unnamed_addr global i8, align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.2 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14PropertyHandleEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::PropertyHandle]\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.4 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@_ZN2cc9ElementId17kInvalidElementIdE = external local_unnamed_addr constant i64, align 8
@.str.5 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.6 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.8 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.9 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv = private unnamed_addr constant [51 x i8] c"const char *WTF::GetStringWithTypeName() [T = int]\00", align 1
@_ZZN5blink20LinearTimingFunction6SharedEvE6linear = linkonce_odr hidden local_unnamed_addr global %"class.blink::LinearTimingFunction"* null, comdat, align 8
@_ZGVZN5blink20LinearTimingFunction6SharedEvE6linear = linkonce_odr hidden global i64 0, comdat, align 8
@.str.10 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.11 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@_ZTVN5blink20LinearTimingFunctionE = external unnamed_addr constant { [9 x i8*] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink23CompositorKeyframeModelENS1_14default_deleteIS4_EEEEEEPKcv = private unnamed_addr constant [159 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::CompositorKeyframeModel, std::__1::default_delete<blink::CompositorKeyframeModel> >]\00", align 1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink20CompositorAnimations37CompositorElementNamespaceForPropertyENS_13CSSPropertyIDE(i32) local_unnamed_addr #0 align 2 {
  switch i32 %0, label %4 [
    i32 251, label %5
    i32 47, label %5
    i32 293, label %2
    i32 298, label %2
    i32 377, label %2
    i32 369, label %2
    i32 145, label %3
    i32 52, label %5
    i32 1, label %5
  ]

2:                                                ; preds = %1, %1, %1, %1
  br label %5

3:                                                ; preds = %1
  br label %5

4:                                                ; preds = %1
  br label %5

5:                                                ; preds = %1, %1, %1, %1, %4, %3, %2
  %6 = phi i32 [ 0, %4 ], [ 6, %3 ], [ 5, %2 ], [ 4, %1 ], [ 4, %1 ], [ 4, %1 ], [ 4, %1 ]
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink20CompositorAnimations31CheckCanStartEffectOnCompositorERKNS_6TimingERKNS_7ElementEPKNS_9AnimationERKNS_11EffectModelEPKNS_23PaintArtifactCompositorEdPN3WTF7HashSetINS_14PropertyHandleENSG_11DefaultHashISI_E4HashENSG_10HashTraitsISI_EENSG_18PartitionAllocatorEEE(%"struct.blink::Timing"* nocapture readonly dereferenceable(80), %"class.blink::Element"* dereferenceable(104), %"class.blink::Animation"*, %"class.blink::EffectModel"* dereferenceable(8), %"class.blink::PaintArtifactCompositor"*, double, %"class.WTF::HashSet.1337"*) local_unnamed_addr #1 align 2 {
  %8 = alloca %"class.blink::PropertyHandle", align 8
  %9 = alloca %"class.blink::PropertyHandle", align 8
  %10 = alloca %"class.blink::PropertyHandle", align 8
  %11 = alloca %"class.blink::PropertyHandle", align 8
  %12 = alloca %"class.blink::PropertyHandle", align 8
  %13 = alloca %"class.WTF::HashSet.1337", align 8
  %14 = alloca %"struct.blink::CompositorAnimations::CompositorTiming", align 8
  %15 = bitcast %"class.blink::EffectModel"* %3 to %"class.blink::KeyframeEffectModelBase"*
  %16 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %22 = bitcast %"class.blink::NodeData"** %21 to %"class.blink::NodeRareData"**
  %23 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %23, i64 0, i32 1, i32 0, i32 0
  %25 = bitcast %"class.blink::NodeData"** %21 to %"class.blink::NodeRenderingData"**
  %26 = select i1 %20, %"class.blink::NodeRenderingData"** %25, %"class.blink::NodeRenderingData"** %24
  %27 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %27, i64 0, i32 1
  %29 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %28, align 8
  %30 = icmp ne %"class.blink::PaintArtifactCompositor"* %4, null
  %31 = icmp ne %"class.blink::LayoutObject"* %29, null
  %32 = and i1 %30, %31
  br i1 %32, label %33, label %45

33:                                               ; preds = %7
  %34 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %29, i64 0, i32 5, i32 0
  %35 = bitcast %"class.blink::ComputedStyle"** %34 to %"class.blink::ComputedStyleBase"**
  %36 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %36, i64 0, i32 1, i32 0, i32 0
  %38 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %38, i64 0, i32 2, i32 0, i32 0
  %40 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %40, i64 0, i32 19
  %42 = load i16, i16* %41, align 4
  %43 = and i16 %42, 32
  %44 = zext i16 %43 to i32
  br label %45

45:                                               ; preds = %33, %7
  %46 = phi i32 [ 0, %7 ], [ %44, %33 ]
  %47 = bitcast %"class.WTF::HashSet.1337"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #14
  %48 = getelementptr inbounds %"class.WTF::HashSet.1337", %"class.WTF::HashSet.1337"* %13, i64 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.WTF::HashSet.1337", %"class.WTF::HashSet.1337"* %13, i64 0, i32 0, i32 1
  %50 = getelementptr inbounds %"class.WTF::HashSet.1337", %"class.WTF::HashSet.1337"* %13, i64 0, i32 0, i32 2
  %51 = bitcast %"class.WTF::HashSet.1337"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 24, i1 false)
  call void @_ZNK5blink23KeyframeEffectModelBase10PropertiesEv(%"class.WTF::HashSet.1337"* nonnull sret %13, %"class.blink::KeyframeEffectModelBase"* %15) #14
  %52 = load i32, i32* %50, align 4
  %53 = icmp eq i32 %52, 0
  %54 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %48, align 8
  %55 = load i32, i32* %49, align 8
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %54, i64 %56
  br i1 %53, label %96, label %58

58:                                               ; preds = %45
  %59 = icmp eq i32 %55, 0
  br i1 %59, label %96, label %60

60:                                               ; preds = %58
  %61 = bitcast %"class.blink::PropertyHandle"* %9 to i8*
  %62 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %9, i64 0, i32 0
  %63 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %9, i64 0, i32 1
  %64 = bitcast %union.anon.1341* %63 to i8*
  %65 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %9, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %66

66:                                               ; preds = %89, %60
  %67 = phi %"class.blink::PropertyHandle"* [ %54, %60 ], [ %90, %89 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #14
  store i32 0, i32* %62, align 8, !alias.scope !2
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 16, i1 false) #14, !alias.scope !2
  %68 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %67, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %9) #14
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #14
  br label %84

84:                                               ; preds = %83, %80, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #14
  %85 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %67, i64 0, i32 0
  %86 = load i32, i32* %85, align 8
  %87 = icmp eq i32 %86, 1
  %88 = or i1 %68, %87
  br i1 %88, label %89, label %92

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %67, i64 1
  %91 = icmp eq %"class.blink::PropertyHandle"* %90, %57
  br i1 %91, label %92, label %66

92:                                               ; preds = %89, %84
  %93 = phi %"class.blink::PropertyHandle"* [ %57, %89 ], [ %67, %84 ]
  %94 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %48, align 8
  %95 = load i32, i32* %49, align 8
  br label %96

96:                                               ; preds = %92, %45, %58
  %97 = phi i32 [ %55, %45 ], [ 0, %58 ], [ %95, %92 ]
  %98 = phi %"class.blink::PropertyHandle"* [ %54, %45 ], [ %54, %58 ], [ %94, %92 ]
  %99 = phi %"class.blink::PropertyHandle"* [ %57, %45 ], [ %54, %58 ], [ %93, %92 ]
  %100 = zext i32 %97 to i64
  %101 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %98, i64 %100
  %102 = icmp eq %"class.blink::PropertyHandle"* %99, %101
  br i1 %102, label %120, label %103

103:                                              ; preds = %96
  %104 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %29, i64 0, i32 4
  %105 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %104 to i96*
  %106 = bitcast %"class.blink::LayoutObject"* %29 to i1 (%"class.blink::LayoutObject"*, i32)***
  %107 = icmp eq %"class.blink::Element"* %1, null
  %108 = getelementptr inbounds %"class.blink::EffectModel", %"class.blink::EffectModel"* %3, i64 3
  %109 = bitcast %"class.blink::EffectModel"* %108 to %"class.blink::HeapHashMap.1352"**
  %110 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %29, i64 0, i32 5, i32 0
  %111 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %29, i64 0, i32 6, i32 0, i32 0
  %112 = icmp eq %"class.WTF::HashSet.1337"* %6, null
  %113 = getelementptr inbounds %"class.WTF::HashSet.1337", %"class.WTF::HashSet.1337"* %6, i64 0, i32 0
  %114 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %115 = bitcast %"class.blink::PropertyHandle"* %8 to i8*
  %116 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %8, i64 0, i32 0
  %117 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %8, i64 0, i32 1
  %118 = bitcast %union.anon.1341* %117 to i8*
  %119 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %8, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %130

120:                                              ; preds = %548, %96
  %121 = phi i32 [ %46, %96 ], [ %518, %548 ]
  %122 = phi i32 [ 0, %96 ], [ %519, %548 ]
  %123 = call zeroext i1 @_ZN5blink20CompositorAnimations40CompositorPropertyAnimationsHaveNoEffectERKNS_7ElementERKNS_11EffectModelEPKNS_23PaintArtifactCompositorE(%"class.blink::Element"* dereferenceable(104) %1, %"class.blink::EffectModel"* dereferenceable(8) %3, %"class.blink::PaintArtifactCompositor"* %4)
  %124 = or i32 %121, 131072
  %125 = select i1 %123, i32 %124, i32 %121
  %126 = icmp ugt i32 %122, 1
  %127 = or i32 %125, 16384
  %128 = select i1 %126, i32 %127, i32 %125
  %129 = icmp ne %"class.blink::Animation"* %2, null
  br i1 %129, label %551, label %702

130:                                              ; preds = %103, %548
  %131 = phi i32 [ 0, %103 ], [ %519, %548 ]
  %132 = phi i32 [ %46, %103 ], [ %518, %548 ]
  %133 = phi %"class.blink::PropertyHandle"* [ %99, %103 ], [ %549, %548 ]
  %134 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %133, i64 0, i32 0
  %135 = load i32, i32* %134, align 8
  %136 = or i32 %135, 1
  %137 = icmp eq i32 %136, 3
  br i1 %137, label %140, label %138

138:                                              ; preds = %130
  %139 = or i32 %132, 512
  br label %517

140:                                              ; preds = %130
  %141 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %133, i64 0, i32 1, i32 0
  %142 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %141, align 8
  %143 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %133, i64 0, i32 2, i32 0, i32 0, i32 0
  %144 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %143, align 8
  %145 = icmp eq %"class.WTF::StringImpl"* %144, null
  br i1 %145, label %163, label %146

146:                                              ; preds = %140
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load atomic i32, i32* %147 monotonic, align 4
  %149 = and i32 %148, 2
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %163

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 0
  %153 = load i32, i32* %152, align 4
  %154 = zext i32 %153 to i33
  %155 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %154, i33 1) #14
  %156 = extractvalue { i33, i1 } %155, 1
  %157 = extractvalue { i33, i1 } %155, 0
  %158 = icmp slt i33 %157, 0
  %159 = or i1 %156, %158
  br i1 %159, label %160, label %161, !prof !7

160:                                              ; preds = %151
  call void @llvm.trap() #14
  unreachable

161:                                              ; preds = %151
  %162 = trunc i33 %157 to i32
  store i32 %162, i32* %152, align 4
  br label %163

163:                                              ; preds = %161, %146, %140
  %164 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %142, i64 0, i32 1
  %165 = load i32, i32* %164, align 8
  switch i32 %165, label %166 [
    i32 293, label %167
    i32 298, label %167
    i32 369, label %167
    i32 377, label %167
  ]

166:                                              ; preds = %163
  br label %167

167:                                              ; preds = %166, %163, %163, %163, %163
  %168 = phi i1 [ true, %163 ], [ false, %166 ], [ true, %163 ], [ true, %163 ], [ true, %163 ]
  br i1 %145, label %182, label %169

169:                                              ; preds = %167
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 0
  %175 = load i32, i32* %174, align 4
  br i1 %173, label %176, label %178

176:                                              ; preds = %169
  %177 = add i32 %175, -1
  store i32 %177, i32* %174, align 4
  br label %178

178:                                              ; preds = %176, %169
  %179 = phi i32 [ %177, %176 ], [ %175, %169 ]
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %178
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %144) #14
  br label %182

182:                                              ; preds = %167, %178, %181
  br i1 %168, label %183, label %260

183:                                              ; preds = %182
  br i1 %31, label %184, label %195

184:                                              ; preds = %183
  %185 = load i96, i96* %105, align 4
  %186 = and i96 %185, 67108864
  %187 = icmp eq i96 %186, 0
  br i1 %187, label %188, label %195

188:                                              ; preds = %184
  %189 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %106, align 8
  %190 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %189, i64 92
  %191 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %190, align 8
  %192 = call zeroext i1 %191(%"class.blink::LayoutObject"* nonnull %29, i32 58) #14
  %193 = or i32 %132, 1024
  %194 = select i1 %192, i32 %132, i32 %193
  br label %195

195:                                              ; preds = %188, %184, %183
  %196 = phi i32 [ %132, %183 ], [ %132, %184 ], [ %194, %188 ]
  %197 = load i32, i32* %17, align 8
  %198 = and i32 %197, 48
  %199 = icmp ne i32 %198, 32
  %200 = or i1 %107, %199
  br i1 %200, label %257, label %201

201:                                              ; preds = %195
  %202 = and i32 %197, 1
  %203 = icmp eq i32 %202, 0
  %204 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %22, align 8
  %205 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %204, i64 0, i32 1, i32 0, i32 0
  %206 = select i1 %203, %"class.blink::NodeRenderingData"** %25, %"class.blink::NodeRenderingData"** %205
  %207 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %206, align 8
  %208 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %207, i64 0, i32 1
  %209 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %208, align 8
  %210 = icmp eq %"class.blink::LayoutObject"* %209, null
  br i1 %210, label %254, label %211

211:                                              ; preds = %201
  %212 = bitcast %"class.blink::LayoutObject"* %209 to i1 (%"class.blink::LayoutObject"*, i32)***
  %213 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %212, align 8
  %214 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %213, i64 92
  %215 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %214, align 8
  %216 = call zeroext i1 %215(%"class.blink::LayoutObject"* nonnull %209, i32 73) #14
  br i1 %216, label %254, label %217

217:                                              ; preds = %211
  %218 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %209, i64 0, i32 5, i32 0
  %219 = bitcast %"class.blink::ComputedStyle"** %218 to %"class.blink::ComputedStyleBase"**
  %220 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %219, align 8
  %221 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %220, i64 0, i32 1, i32 0, i32 0
  %222 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %221, align 8
  %223 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %222, i64 0, i32 2, i32 0, i32 0
  %224 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %223, align 8
  %225 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %224, i64 0, i32 6
  %226 = load float, float* %225, align 8
  %227 = fcmp une float %226, 1.000000e+00
  br i1 %227, label %254, label %228

228:                                              ; preds = %217
  %229 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %212, align 8
  %230 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %229, i64 92
  %231 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %230, align 8
  %232 = call zeroext i1 %231(%"class.blink::LayoutObject"* nonnull %209, i32 71) #14
  br i1 %232, label %233, label %247

233:                                              ; preds = %228
  %234 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %209, i64 2, i32 1, i32 1
  %235 = bitcast i8* %234 to float*
  %236 = load float, float* %235, align 4
  %237 = fcmp ogt float %236, 0xBE80000000000000
  %238 = fcmp olt float %236, 0x3E80000000000000
  %239 = and i1 %237, %238
  br i1 %239, label %240, label %254

240:                                              ; preds = %233
  %241 = getelementptr inbounds i8, i8* %234, i64 4
  %242 = bitcast i8* %241 to float*
  %243 = load float, float* %242, align 4
  %244 = fcmp ogt float %243, 0xBE80000000000000
  %245 = fcmp olt float %243, 0x3E80000000000000
  %246 = and i1 %244, %245
  br i1 %246, label %247, label %254

247:                                              ; preds = %240, %228
  %248 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %209, i64 0, i32 4
  %249 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %248 to i96*
  %250 = load i96, i96* %249, align 4
  %251 = lshr i96 %250, 61
  %252 = trunc i96 %251 to i32
  %253 = and i32 %252, 1024
  br label %254

254:                                              ; preds = %201, %211, %217, %233, %240, %247
  %255 = phi i32 [ %253, %247 ], [ 0, %201 ], [ 1024, %211 ], [ 1024, %217 ], [ 1024, %240 ], [ 1024, %233 ]
  %256 = or i32 %255, %196
  br label %257

257:                                              ; preds = %195, %254
  %258 = phi i32 [ %196, %195 ], [ %256, %254 ]
  %259 = add i32 %131, 1
  br label %260

260:                                              ; preds = %257, %182
  %261 = phi i32 [ %258, %257 ], [ %132, %182 ]
  %262 = phi i32 [ %259, %257 ], [ %131, %182 ]
  call void @_ZNK5blink23KeyframeEffectModelBase20EnsureKeyframeGroupsEv(%"class.blink::KeyframeEffectModelBase"* %15) #14
  %263 = load %"class.blink::HeapHashMap.1352"*, %"class.blink::HeapHashMap.1352"** %109, align 8
  %264 = getelementptr inbounds %"class.blink::HeapHashMap.1352", %"class.blink::HeapHashMap.1352"* %263, i64 0, i32 0, i32 0
  %265 = call %"struct.WTF::KeyValuePair.1358"* @_ZNK3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EES2_EEPKS8_RKT0_(%"class.WTF::HashTable.1356"* %264, %"class.blink::PropertyHandle"* dereferenceable(24) %133) #14
  %266 = icmp eq %"struct.WTF::KeyValuePair.1358"* %265, null
  %267 = getelementptr inbounds %"class.blink::HeapHashMap.1352", %"class.blink::HeapHashMap.1352"* %263, i64 0, i32 0, i32 0, i32 0
  %268 = load %"struct.WTF::KeyValuePair.1358"*, %"struct.WTF::KeyValuePair.1358"** %267, align 8
  %269 = getelementptr inbounds %"class.blink::HeapHashMap.1352", %"class.blink::HeapHashMap.1352"* %263, i64 0, i32 0, i32 0, i32 1
  %270 = load i32, i32* %269, align 8
  %271 = zext i32 %270 to i64
  %272 = getelementptr inbounds %"struct.WTF::KeyValuePair.1358", %"struct.WTF::KeyValuePair.1358"* %268, i64 %271
  %273 = select i1 %266, %"struct.WTF::KeyValuePair.1358"* %272, %"struct.WTF::KeyValuePair.1358"* %265
  %274 = load %"class.blink::HeapHashMap.1352"*, %"class.blink::HeapHashMap.1352"** %109, align 8
  %275 = getelementptr inbounds %"class.blink::HeapHashMap.1352", %"class.blink::HeapHashMap.1352"* %274, i64 0, i32 0, i32 0, i32 0
  %276 = load %"struct.WTF::KeyValuePair.1358"*, %"struct.WTF::KeyValuePair.1358"** %275, align 8
  %277 = getelementptr inbounds %"class.blink::HeapHashMap.1352", %"class.blink::HeapHashMap.1352"* %274, i64 0, i32 0, i32 0, i32 1
  %278 = load i32, i32* %277, align 8
  %279 = zext i32 %278 to i64
  %280 = getelementptr inbounds %"struct.WTF::KeyValuePair.1358", %"struct.WTF::KeyValuePair.1358"* %276, i64 %279
  %281 = icmp eq %"struct.WTF::KeyValuePair.1358"* %273, %280
  br i1 %281, label %286, label %282

282:                                              ; preds = %260
  %283 = getelementptr inbounds %"struct.WTF::KeyValuePair.1358", %"struct.WTF::KeyValuePair.1358"* %273, i64 0, i32 1, i32 0, i32 0
  %284 = load %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"*, %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"** %283, align 8
  %285 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup", %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* %284, i64 0, i32 0
  br label %286

286:                                              ; preds = %260, %282
  %287 = phi %"class.blink::HeapVector.1363"* [ %285, %282 ], [ null, %260 ]
  %288 = getelementptr inbounds %"class.blink::HeapVector.1363", %"class.blink::HeapVector.1363"* %287, i64 0, i32 0
  %289 = getelementptr inbounds %"class.blink::HeapVector.1363", %"class.blink::HeapVector.1363"* %287, i64 0, i32 0, i32 0, i32 0, i32 0
  %290 = load %"class.blink::Member.1369"*, %"class.blink::Member.1369"** %289, align 8
  %291 = getelementptr inbounds %"class.blink::HeapVector.1363", %"class.blink::HeapVector.1363"* %287, i64 0, i32 0, i32 0, i32 0, i32 2
  %292 = load i32, i32* %291, align 4
  %293 = zext i32 %292 to i64
  %294 = getelementptr inbounds %"class.blink::Member.1369", %"class.blink::Member.1369"* %290, i64 %293
  %295 = icmp eq i32 %292, 0
  br i1 %295, label %517, label %296

296:                                              ; preds = %286
  %297 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %133, i64 0, i32 2
  br label %298

298:                                              ; preds = %296, %513
  %299 = phi %"class.blink::Member.1369"* [ %290, %296 ], [ %515, %513 ]
  %300 = phi i32 [ %261, %296 ], [ %514, %513 ]
  %301 = getelementptr inbounds %"class.blink::Member.1369", %"class.blink::Member.1369"* %299, i64 0, i32 0, i32 0
  %302 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %301, align 8
  %303 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %302, i64 0, i32 3
  %304 = load i32, i32* %303, align 8
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %314, label %306

306:                                              ; preds = %298
  %307 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"* %302 to i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)***
  %308 = load i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)**, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*** %307, align 8
  %309 = getelementptr inbounds i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %308, i64 2
  %310 = load i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, i1 (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %309, align 8
  %311 = call zeroext i1 %310(%"class.blink::Keyframe::PropertySpecificKeyframe"* %302) #14
  %312 = or i32 %300, 16
  %313 = select i1 %311, i32 %300, i32 %312
  br label %314

314:                                              ; preds = %306, %298
  %315 = phi i32 [ %300, %298 ], [ %313, %306 ]
  %316 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %141, align 8
  %317 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %316, i64 0, i32 1
  %318 = load i32, i32* %317, align 8
  switch i32 %318, label %498 [
    i32 251, label %502
    i32 293, label %319
    i32 298, label %319
    i32 377, label %319
    i32 369, label %319
    i32 145, label %354
    i32 47, label %502
    i32 52, label %376
    i32 1, label %423
  ]

319:                                              ; preds = %314, %314, %314, %314
  %320 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase40is_composite_relative_keyframes_enabled_E, align 1, !range !8
  %321 = icmp eq i8 %320, 0
  br i1 %321, label %333, label %322

322:                                              ; preds = %319
  br i1 %31, label %323, label %502

323:                                              ; preds = %322
  %324 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %106, align 8
  %325 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %324, i64 92
  %326 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %325, align 8
  %327 = call zeroext i1 %326(%"class.blink::LayoutObject"* nonnull %29, i32 58) #14
  br i1 %327, label %328, label %502

328:                                              ; preds = %323
  %329 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %106, align 8
  %330 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %329, i64 92
  %331 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %330, align 8
  %332 = call zeroext i1 %331(%"class.blink::LayoutObject"* nonnull %29, i32 67) #14
  br i1 %332, label %502, label %333

333:                                              ; preds = %328, %319
  %334 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %301, align 8
  %335 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"* %334 to %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)***
  %336 = load %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)**, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*** %335, align 8
  %337 = getelementptr inbounds %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %336, i64 6
  %338 = load %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %337, align 8
  %339 = call %"class.blink::CompositorKeyframeValue"* %338(%"class.blink::Keyframe::PropertySpecificKeyframe"* %334) #14
  %340 = icmp eq %"class.blink::CompositorKeyframeValue"* %339, null
  br i1 %340, label %502, label %341

341:                                              ; preds = %333
  %342 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %301, align 8
  %343 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"* %342 to %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)***
  %344 = load %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)**, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*** %343, align 8
  %345 = getelementptr inbounds %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %344, i64 6
  %346 = load %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %345, align 8
  %347 = call %"class.blink::CompositorKeyframeValue"* %346(%"class.blink::Keyframe::PropertySpecificKeyframe"* %342) #14
  %348 = getelementptr inbounds %"class.blink::CompositorKeyframeValue", %"class.blink::CompositorKeyframeValue"* %347, i64 1
  %349 = bitcast %"class.blink::CompositorKeyframeValue"* %348 to %"class.blink::TransformOperations"*
  %350 = call i32 @_ZNK5blink19TransformOperations19BoxSizeDependenciesEj(%"class.blink::TransformOperations"* %349, i32 0) #14
  %351 = icmp eq i32 %350, 0
  %352 = or i32 %315, 2048
  %353 = select i1 %351, i32 %315, i32 %352
  br label %502

354:                                              ; preds = %314
  %355 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %301, align 8
  %356 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"* %355 to %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)***
  %357 = load %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)**, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*** %356, align 8
  %358 = getelementptr inbounds %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %357, i64 6
  %359 = load %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %358, align 8
  %360 = call %"class.blink::CompositorKeyframeValue"* %359(%"class.blink::Keyframe::PropertySpecificKeyframe"* %355) #14
  %361 = icmp eq %"class.blink::CompositorKeyframeValue"* %360, null
  br i1 %361, label %502, label %362

362:                                              ; preds = %354
  %363 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %301, align 8
  %364 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"* %363 to %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)***
  %365 = load %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)**, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*** %364, align 8
  %366 = getelementptr inbounds %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %365, i64 6
  %367 = load %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %366, align 8
  %368 = call %"class.blink::CompositorKeyframeValue"* %367(%"class.blink::Keyframe::PropertySpecificKeyframe"* %363) #14
  %369 = getelementptr inbounds %"class.blink::CompositorKeyframeValue", %"class.blink::CompositorKeyframeValue"* %368, i64 1
  %370 = bitcast %"class.blink::CompositorKeyframeValue"* %369 to %"class.blink::FilterOperationsWrapper"**
  %371 = load %"class.blink::FilterOperationsWrapper"*, %"class.blink::FilterOperationsWrapper"** %370, align 8
  %372 = getelementptr inbounds %"class.blink::FilterOperationsWrapper", %"class.blink::FilterOperationsWrapper"* %371, i64 0, i32 0
  %373 = call zeroext i1 @_ZNK5blink16FilterOperations24HasFilterThatMovesPixelsEv(%"class.blink::FilterOperations"* %372) #14
  %374 = or i32 %315, 4096
  %375 = select i1 %373, i32 %374, i32 %315
  br label %502

376:                                              ; preds = %314
  %377 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase40is_composite_bg_color_animation_enabled_E, align 1, !range !8
  %378 = icmp eq i8 %377, 0
  br i1 %378, label %399, label %379

379:                                              ; preds = %376
  %380 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %114, align 8
  %381 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %380, i64 0, i32 2, i32 0, i32 0
  %382 = load %"class.blink::Document"*, %"class.blink::Document"** %381, align 8
  %383 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %382) #14
  %384 = call %"class.blink::BackgroundColorPaintImageGenerator"* @_ZN5blink10LocalFrame37GetBackgroundColorPaintImageGeneratorEv(%"class.blink::LocalFrame"* %383) #14
  %385 = icmp eq %"class.blink::BackgroundColorPaintImageGenerator"* %384, null
  br i1 %385, label %392, label %386

386:                                              ; preds = %379
  %387 = bitcast %"class.blink::BackgroundColorPaintImageGenerator"* %384 to %"class.blink::Animation"* (%"class.blink::BackgroundColorPaintImageGenerator"*, %"class.blink::Element"*)***
  %388 = load %"class.blink::Animation"* (%"class.blink::BackgroundColorPaintImageGenerator"*, %"class.blink::Element"*)**, %"class.blink::Animation"* (%"class.blink::BackgroundColorPaintImageGenerator"*, %"class.blink::Element"*)*** %387, align 8
  %389 = getelementptr inbounds %"class.blink::Animation"* (%"class.blink::BackgroundColorPaintImageGenerator"*, %"class.blink::Element"*)*, %"class.blink::Animation"* (%"class.blink::BackgroundColorPaintImageGenerator"*, %"class.blink::Element"*)** %388, i64 6
  %390 = load %"class.blink::Animation"* (%"class.blink::BackgroundColorPaintImageGenerator"*, %"class.blink::Element"*)*, %"class.blink::Animation"* (%"class.blink::BackgroundColorPaintImageGenerator"*, %"class.blink::Element"*)** %389, align 8
  %391 = call %"class.blink::Animation"* %390(%"class.blink::BackgroundColorPaintImageGenerator"* nonnull %384, %"class.blink::Element"* %1) #14
  br label %392

392:                                              ; preds = %379, %386
  %393 = phi %"class.blink::Animation"* [ %391, %386 ], [ null, %379 ]
  %394 = call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink4Node23GetLayoutBoxModelObjectEv(%"class.blink::Node"* %16) #14
  %395 = icmp eq %"class.blink::LayoutBoxModelObject"* %394, null
  br i1 %395, label %399, label %396

396:                                              ; preds = %392
  %397 = call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink4Node23GetLayoutBoxModelObjectEv(%"class.blink::Node"* %16) #14
  %398 = call zeroext i1 @_ZNK5blink20LayoutBoxModelObject25BackgroundTransfersToViewEPKNS_13ComputedStyleE(%"class.blink::LayoutBoxModelObject"* %397, %"class.blink::ComputedStyle"* null) #14
  br label %399

399:                                              ; preds = %376, %396, %392
  %400 = phi i1 [ false, %376 ], [ false, %392 ], [ %398, %396 ]
  %401 = phi %"class.blink::Animation"* [ null, %376 ], [ %393, %392 ], [ %393, %396 ]
  %402 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase40is_composite_bg_color_animation_enabled_E, align 1, !range !8
  %403 = icmp ne i8 %402, 0
  %404 = and i1 %31, %403
  br i1 %404, label %405, label %419

405:                                              ; preds = %399
  %406 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %106, align 8
  %407 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %406, i64 92
  %408 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %407, align 8
  %409 = call zeroext i1 %408(%"class.blink::LayoutObject"* nonnull %29, i32 48) #14
  br i1 %409, label %419, label %410

410:                                              ; preds = %405
  %411 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %106, align 8
  %412 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %411, i64 92
  %413 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %412, align 8
  %414 = call zeroext i1 %413(%"class.blink::LayoutObject"* nonnull %29, i32 49) #14
  br i1 %414, label %419, label %415

415:                                              ; preds = %410
  %416 = xor i1 %400, true
  %417 = icmp ne %"class.blink::Animation"* %401, null
  %418 = and i1 %417, %416
  br i1 %418, label %502, label %419

419:                                              ; preds = %415, %410, %405, %399
  %420 = or i32 %315, 8192
  br i1 %112, label %502, label %421

421:                                              ; preds = %419
  %422 = call { %"class.blink::PropertyHandle"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS2_SF_EENS_18HashTableAddResultISA_S2_EEOT0_OT1_(%"class.WTF::HashTable.1338"* %113, %"class.blink::PropertyHandle"* dereferenceable(24) %133, %"class.blink::PropertyHandle"* dereferenceable(24) %133) #14
  br label %502

423:                                              ; preds = %314
  %424 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %301, align 8
  %425 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"* %424 to %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)***
  %426 = load %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)**, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*** %425, align 8
  %427 = getelementptr inbounds %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %426, i64 6
  %428 = load %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %427, align 8
  %429 = call %"class.blink::CompositorKeyframeValue"* %428(%"class.blink::Keyframe::PropertySpecificKeyframe"* %424) #14
  %430 = icmp eq %"class.blink::CompositorKeyframeValue"* %429, null
  br i1 %430, label %494, label %431

431:                                              ; preds = %423
  br i1 %31, label %432, label %456

432:                                              ; preds = %431
  %433 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %110, align 8
  %434 = icmp eq %"class.blink::ComputedStyle"* %433, null
  br i1 %434, label %456, label %435

435:                                              ; preds = %432
  %436 = load %"class.blink::Node"*, %"class.blink::Node"** %111, align 8
  %437 = icmp eq %"class.blink::Node"* %436, null
  br i1 %437, label %438, label %445

438:                                              ; preds = %435, %438
  %439 = phi %"class.blink::LayoutObject"* [ %441, %438 ], [ %29, %435 ]
  %440 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %439, i64 0, i32 7
  %441 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %440, align 8
  %442 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %441, i64 0, i32 6, i32 0, i32 0
  %443 = load %"class.blink::Node"*, %"class.blink::Node"** %442, align 8
  %444 = icmp eq %"class.blink::Node"* %443, null
  br i1 %444, label %438, label %445

445:                                              ; preds = %438, %435
  %446 = phi %"class.blink::Node"* [ %436, %435 ], [ %443, %438 ]
  %447 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %446, i64 0, i32 3, i32 0, i32 0
  %448 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %447, align 8
  %449 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %448, i64 0, i32 2, i32 0, i32 0
  %450 = load %"class.blink::Document"*, %"class.blink::Document"** %449, align 8
  %451 = call zeroext i1 @_ZNK5blink13ComputedStyle36HasCSSPaintImagesUsingCustomPropertyERKN3WTF12AtomicStringERKNS_8DocumentE(%"class.blink::ComputedStyle"* nonnull %433, %"class.WTF::AtomicString"* dereferenceable(8) %297, %"class.blink::Document"* dereferenceable(2848) %450) #14
  br i1 %451, label %456, label %452

452:                                              ; preds = %445
  %453 = or i32 %315, 8192
  br i1 %112, label %456, label %454

454:                                              ; preds = %452
  %455 = call { %"class.blink::PropertyHandle"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS2_SF_EENS_18HashTableAddResultISA_S2_EEOT0_OT1_(%"class.WTF::HashTable.1338"* %113, %"class.blink::PropertyHandle"* dereferenceable(24) %133, %"class.blink::PropertyHandle"* dereferenceable(24) %133) #14
  br label %456

456:                                              ; preds = %454, %452, %432, %445, %431
  %457 = phi i32 [ %315, %432 ], [ %315, %445 ], [ %315, %431 ], [ %453, %452 ], [ %453, %454 ]
  %458 = call dereferenceable(8) %"class.blink::Member.1369"* @_ZNK3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1366"* %288, i32 0) #14
  %459 = getelementptr inbounds %"class.blink::Member.1369", %"class.blink::Member.1369"* %458, i64 0, i32 0, i32 0
  %460 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %459, align 8
  %461 = icmp eq %"class.blink::Keyframe::PropertySpecificKeyframe"* %460, null
  br i1 %461, label %492, label %462

462:                                              ; preds = %456
  %463 = call dereferenceable(8) %"class.blink::Member.1369"* @_ZNK3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1366"* %288, i32 0) #14
  %464 = getelementptr inbounds %"class.blink::Member.1369", %"class.blink::Member.1369"* %463, i64 0, i32 0, i32 0
  %465 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %464, align 8
  %466 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"* %465 to %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)***
  %467 = load %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)**, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*** %466, align 8
  %468 = getelementptr inbounds %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %467, i64 6
  %469 = load %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %468, align 8
  %470 = call %"class.blink::CompositorKeyframeValue"* %469(%"class.blink::Keyframe::PropertySpecificKeyframe"* %465) #14
  %471 = icmp eq %"class.blink::CompositorKeyframeValue"* %470, null
  br i1 %471, label %492, label %472

472:                                              ; preds = %462
  %473 = call dereferenceable(8) %"class.blink::Member.1369"* @_ZNK3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1366"* %288, i32 0) #14
  %474 = getelementptr inbounds %"class.blink::Member.1369", %"class.blink::Member.1369"* %473, i64 0, i32 0, i32 0
  %475 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %474, align 8
  %476 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"* %475 to %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)***
  %477 = load %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)**, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*** %476, align 8
  %478 = getelementptr inbounds %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %477, i64 6
  %479 = load %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %478, align 8
  %480 = call %"class.blink::CompositorKeyframeValue"* %479(%"class.blink::Keyframe::PropertySpecificKeyframe"* %475) #14
  %481 = bitcast %"class.blink::CompositorKeyframeValue"* %480 to i32 (%"class.blink::CompositorKeyframeValue"*)***
  %482 = load i32 (%"class.blink::CompositorKeyframeValue"*)**, i32 (%"class.blink::CompositorKeyframeValue"*)*** %481, align 8
  %483 = getelementptr inbounds i32 (%"class.blink::CompositorKeyframeValue"*)*, i32 (%"class.blink::CompositorKeyframeValue"*)** %482, i64 3
  %484 = load i32 (%"class.blink::CompositorKeyframeValue"*)*, i32 (%"class.blink::CompositorKeyframeValue"*)** %483, align 8
  %485 = call i32 %484(%"class.blink::CompositorKeyframeValue"* %480) #14
  %486 = bitcast %"class.blink::CompositorKeyframeValue"* %429 to i32 (%"class.blink::CompositorKeyframeValue"*)***
  %487 = load i32 (%"class.blink::CompositorKeyframeValue"*)**, i32 (%"class.blink::CompositorKeyframeValue"*)*** %486, align 8
  %488 = getelementptr inbounds i32 (%"class.blink::CompositorKeyframeValue"*)*, i32 (%"class.blink::CompositorKeyframeValue"*)** %487, i64 3
  %489 = load i32 (%"class.blink::CompositorKeyframeValue"*)*, i32 (%"class.blink::CompositorKeyframeValue"*)** %488, align 8
  %490 = call i32 %489(%"class.blink::CompositorKeyframeValue"* nonnull %429) #14
  %491 = icmp eq i32 %485, %490
  br i1 %491, label %502, label %492

492:                                              ; preds = %456, %472, %462
  %493 = or i32 %457, 32768
  br label %502

494:                                              ; preds = %423
  %495 = or i32 %315, 8192
  br i1 %112, label %513, label %496

496:                                              ; preds = %494
  %497 = call { %"class.blink::PropertyHandle"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS2_SF_EENS_18HashTableAddResultISA_S2_EEOT0_OT1_(%"class.WTF::HashTable.1338"* %113, %"class.blink::PropertyHandle"* dereferenceable(24) %133, %"class.blink::PropertyHandle"* dereferenceable(24) %133) #14
  br label %513

498:                                              ; preds = %314
  %499 = or i32 %315, 8192
  br i1 %112, label %513, label %500

500:                                              ; preds = %498
  %501 = call { %"class.blink::PropertyHandle"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS2_SF_EENS_18HashTableAddResultISA_S2_EEOT0_OT1_(%"class.WTF::HashTable.1338"* %113, %"class.blink::PropertyHandle"* dereferenceable(24) %133, %"class.blink::PropertyHandle"* dereferenceable(24) %133) #14
  br label %513

502:                                              ; preds = %328, %362, %341, %323, %421, %419, %472, %492, %415, %333, %354, %322, %314, %314
  %503 = phi i32 [ %493, %492 ], [ %457, %472 ], [ %315, %415 ], [ %315, %354 ], [ %315, %333 ], [ %315, %328 ], [ %315, %322 ], [ %315, %314 ], [ %315, %314 ], [ %420, %419 ], [ %420, %421 ], [ %315, %323 ], [ %353, %341 ], [ %375, %362 ]
  %504 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %301, align 8
  %505 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"* %504 to %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)***
  %506 = load %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)**, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*** %505, align 8
  %507 = getelementptr inbounds %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %506, i64 6
  %508 = load %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %507, align 8
  %509 = call %"class.blink::CompositorKeyframeValue"* %508(%"class.blink::Keyframe::PropertySpecificKeyframe"* %504) #14
  %510 = icmp eq %"class.blink::CompositorKeyframeValue"* %509, null
  %511 = or i32 %503, 4
  %512 = select i1 %510, i32 %511, i32 %503
  br label %513

513:                                              ; preds = %502, %500, %498, %496, %494
  %514 = phi i32 [ %495, %494 ], [ %495, %496 ], [ %499, %498 ], [ %499, %500 ], [ %512, %502 ]
  %515 = getelementptr inbounds %"class.blink::Member.1369", %"class.blink::Member.1369"* %299, i64 1
  %516 = icmp eq %"class.blink::Member.1369"* %515, %294
  br i1 %516, label %517, label %298

517:                                              ; preds = %513, %286, %138
  %518 = phi i32 [ %139, %138 ], [ %261, %286 ], [ %514, %513 ]
  %519 = phi i32 [ %131, %138 ], [ %262, %286 ], [ %262, %513 ]
  %520 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %133, i64 1
  %521 = icmp eq %"class.blink::PropertyHandle"* %520, %57
  br i1 %521, label %548, label %522

522:                                              ; preds = %517, %545
  %523 = phi %"class.blink::PropertyHandle"* [ %546, %545 ], [ %520, %517 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #14
  store i32 0, i32* %116, align 8, !alias.scope !9
  call void @llvm.memset.p0i8.i64(i8* align 8 %118, i8 0, i64 16, i1 false) #14, !alias.scope !9
  %524 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %523, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8) #14
  %525 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %119, align 8
  %526 = icmp eq %"class.WTF::StringImpl"* %525, null
  br i1 %526, label %540, label %527

527:                                              ; preds = %522
  %528 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %525, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %529 = load atomic i32, i32* %528 monotonic, align 4
  %530 = and i32 %529, 2
  %531 = icmp eq i32 %530, 0
  %532 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %525, i64 0, i32 0
  %533 = load i32, i32* %532, align 4
  br i1 %531, label %534, label %536

534:                                              ; preds = %527
  %535 = add i32 %533, -1
  store i32 %535, i32* %532, align 4
  br label %536

536:                                              ; preds = %534, %527
  %537 = phi i32 [ %535, %534 ], [ %533, %527 ]
  %538 = icmp eq i32 %537, 0
  br i1 %538, label %539, label %540

539:                                              ; preds = %536
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %525) #14
  br label %540

540:                                              ; preds = %539, %536, %522
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #14
  %541 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %523, i64 0, i32 0
  %542 = load i32, i32* %541, align 8
  %543 = icmp eq i32 %542, 1
  %544 = or i1 %524, %543
  br i1 %544, label %545, label %548

545:                                              ; preds = %540
  %546 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %523, i64 1
  %547 = icmp eq %"class.blink::PropertyHandle"* %546, %57
  br i1 %547, label %548, label %522

548:                                              ; preds = %540, %545, %517
  %549 = phi %"class.blink::PropertyHandle"* [ %57, %517 ], [ %523, %540 ], [ %57, %545 ]
  %550 = icmp eq %"class.blink::PropertyHandle"* %549, %101
  br i1 %550, label %120, label %130

551:                                              ; preds = %120
  %552 = call zeroext i1 @_ZNK5blink7Element13HasAnimationsEv(%"class.blink::Element"* %1) #14
  br i1 %552, label %553, label %702

553:                                              ; preds = %551
  %554 = call %"class.blink::ElementAnimations"* @_ZNK5blink7Element20GetElementAnimationsEv(%"class.blink::Element"* %1) #14
  %555 = bitcast %"class.blink::PropertyHandle"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %555) #14
  %556 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink21GetCSSPropertyOpacityEv() #14
  %557 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %10, i64 0, i32 0
  store i32 2, i32* %557, align 8
  %558 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %10, i64 0, i32 1, i32 0
  store %"class.blink::CSSProperty"* %556, %"class.blink::CSSProperty"** %558, align 8
  %559 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %10, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %559, align 8
  %560 = bitcast %"class.blink::EffectModel"* %3 to i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)***
  %561 = load i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)**, i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)*** %560, align 8
  %562 = getelementptr inbounds i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)*, i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)** %561, i64 3
  %563 = load i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)*, i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)** %562, align 8
  %564 = call zeroext i1 %563(%"class.blink::EffectModel"* %3, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %10) #14
  %565 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %559, align 8
  %566 = icmp eq %"class.WTF::StringImpl"* %565, null
  br i1 %566, label %580, label %567

567:                                              ; preds = %553
  %568 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %565, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %569 = load atomic i32, i32* %568 monotonic, align 4
  %570 = and i32 %569, 2
  %571 = icmp eq i32 %570, 0
  %572 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %565, i64 0, i32 0
  %573 = load i32, i32* %572, align 4
  br i1 %571, label %574, label %576

574:                                              ; preds = %567
  %575 = add i32 %573, -1
  store i32 %575, i32* %572, align 4
  br label %576

576:                                              ; preds = %574, %567
  %577 = phi i32 [ %575, %574 ], [ %573, %567 ]
  %578 = icmp eq i32 %577, 0
  br i1 %578, label %579, label %580

579:                                              ; preds = %576
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %565) #14
  br label %580

580:                                              ; preds = %579, %576, %553
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %555) #14
  %581 = bitcast %"class.blink::EffectModel"* %3 to i1 (%"class.blink::EffectModel"*)***
  %582 = load i1 (%"class.blink::EffectModel"*)**, i1 (%"class.blink::EffectModel"*)*** %581, align 8
  %583 = getelementptr inbounds i1 (%"class.blink::EffectModel"*)*, i1 (%"class.blink::EffectModel"*)** %582, i64 5
  %584 = load i1 (%"class.blink::EffectModel"*)*, i1 (%"class.blink::EffectModel"*)** %583, align 8
  %585 = call zeroext i1 %584(%"class.blink::EffectModel"* %3) #14
  %586 = bitcast %"class.blink::PropertyHandle"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %586) #14
  %587 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink20GetCSSPropertyFilterEv() #14
  %588 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %11, i64 0, i32 0
  store i32 2, i32* %588, align 8
  %589 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %11, i64 0, i32 1, i32 0
  store %"class.blink::CSSProperty"* %587, %"class.blink::CSSProperty"** %589, align 8
  %590 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %11, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %590, align 8
  %591 = load i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)**, i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)*** %560, align 8
  %592 = getelementptr inbounds i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)*, i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)** %591, i64 3
  %593 = load i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)*, i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)** %592, align 8
  %594 = call zeroext i1 %593(%"class.blink::EffectModel"* %3, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %11) #14
  %595 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %590, align 8
  %596 = icmp eq %"class.WTF::StringImpl"* %595, null
  br i1 %596, label %610, label %597

597:                                              ; preds = %580
  %598 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %595, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %599 = load atomic i32, i32* %598 monotonic, align 4
  %600 = and i32 %599, 2
  %601 = icmp eq i32 %600, 0
  %602 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %595, i64 0, i32 0
  %603 = load i32, i32* %602, align 4
  br i1 %601, label %604, label %606

604:                                              ; preds = %597
  %605 = add i32 %603, -1
  store i32 %605, i32* %602, align 4
  br label %606

606:                                              ; preds = %604, %597
  %607 = phi i32 [ %605, %604 ], [ %603, %597 ]
  %608 = icmp eq i32 %607, 0
  br i1 %608, label %609, label %610

609:                                              ; preds = %606
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %595) #14
  br label %610

610:                                              ; preds = %609, %606, %580
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %586) #14
  %611 = bitcast %"class.blink::PropertyHandle"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %611) #14
  %612 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink28GetCSSPropertyBackdropFilterEv() #14
  %613 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %12, i64 0, i32 0
  store i32 2, i32* %613, align 8
  %614 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %12, i64 0, i32 1, i32 0
  store %"class.blink::CSSProperty"* %612, %"class.blink::CSSProperty"** %614, align 8
  %615 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %12, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %615, align 8
  %616 = load i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)**, i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)*** %560, align 8
  %617 = getelementptr inbounds i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)*, i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)** %616, i64 3
  %618 = load i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)*, i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)** %617, align 8
  %619 = call zeroext i1 %618(%"class.blink::EffectModel"* %3, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %12) #14
  %620 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %615, align 8
  %621 = icmp eq %"class.WTF::StringImpl"* %620, null
  br i1 %621, label %635, label %622

622:                                              ; preds = %610
  %623 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %620, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %624 = load atomic i32, i32* %623 monotonic, align 4
  %625 = and i32 %624, 2
  %626 = icmp eq i32 %625, 0
  %627 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %620, i64 0, i32 0
  %628 = load i32, i32* %627, align 4
  br i1 %626, label %629, label %631

629:                                              ; preds = %622
  %630 = add i32 %628, -1
  store i32 %630, i32* %627, align 4
  br label %631

631:                                              ; preds = %629, %622
  %632 = phi i32 [ %630, %629 ], [ %628, %622 ]
  %633 = icmp eq i32 %632, 0
  br i1 %633, label %634, label %635

634:                                              ; preds = %631
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %620) #14
  br label %635

635:                                              ; preds = %634, %631, %610
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %611) #14
  %636 = getelementptr inbounds %"class.blink::ElementAnimations", %"class.blink::ElementAnimations"* %554, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %637 = load i32, i32* %636, align 4
  %638 = icmp eq i32 %637, 0
  %639 = getelementptr inbounds %"class.blink::ElementAnimations", %"class.blink::ElementAnimations"* %554, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %640 = load %"struct.WTF::KeyValuePair.2709"*, %"struct.WTF::KeyValuePair.2709"** %639, align 8
  %641 = getelementptr inbounds %"class.blink::ElementAnimations", %"class.blink::ElementAnimations"* %554, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %642 = load i32, i32* %641, align 8
  %643 = zext i32 %642 to i64
  %644 = getelementptr inbounds %"struct.WTF::KeyValuePair.2709", %"struct.WTF::KeyValuePair.2709"* %640, i64 %643
  br i1 %638, label %702, label %645

645:                                              ; preds = %635
  %646 = icmp eq i32 %642, 0
  br i1 %646, label %654, label %647

647:                                              ; preds = %645, %651
  %648 = phi %"struct.WTF::KeyValuePair.2709"* [ %652, %651 ], [ %640, %645 ]
  %649 = bitcast %"struct.WTF::KeyValuePair.2709"* %648 to i64*
  %650 = load i64, i64* %649, align 8
  switch i64 %650, label %654 [
    i64 -1, label %651
    i64 0, label %651
  ]

651:                                              ; preds = %647, %647
  %652 = getelementptr inbounds %"struct.WTF::KeyValuePair.2709", %"struct.WTF::KeyValuePair.2709"* %648, i64 1
  %653 = icmp eq %"struct.WTF::KeyValuePair.2709"* %652, %644
  br i1 %653, label %702, label %647

654:                                              ; preds = %647, %645
  %655 = phi %"struct.WTF::KeyValuePair.2709"* [ %640, %645 ], [ %648, %647 ]
  %656 = icmp eq %"struct.WTF::KeyValuePair.2709"* %655, %644
  br i1 %656, label %702, label %657

657:                                              ; preds = %654, %698
  %658 = phi %"struct.WTF::KeyValuePair.2709"* [ %692, %698 ], [ %655, %654 ]
  %659 = getelementptr inbounds %"struct.WTF::KeyValuePair.2709", %"struct.WTF::KeyValuePair.2709"* %658, i64 0, i32 0, i32 0, i32 0
  %660 = load %"class.blink::Animation"*, %"class.blink::Animation"** %659, align 8
  %661 = icmp eq %"class.blink::Animation"* %660, %2
  br i1 %661, label %688, label %662

662:                                              ; preds = %657
  %663 = call zeroext i1 @_ZNK5blink9Animation15PendingInternalEv(%"class.blink::Animation"* %660) #14
  br i1 %663, label %673, label %664

664:                                              ; preds = %662
  %665 = call i32 @_ZNK5blink9Animation27CalculateAnimationPlayStateEv(%"class.blink::Animation"* %660) #14
  switch i32 %665, label %673 [
    i32 1, label %688
    i32 5, label %666
    i32 4, label %666
  ]

666:                                              ; preds = %664, %664
  %667 = call zeroext i1 @_ZN5blink9Animation25HasLowerCompositeOrderingEPKS0_S2_NS0_25CompareAnimationsOrderingE(%"class.blink::Animation"* %660, %"class.blink::Animation"* nonnull %2, i32 1) #14
  br i1 %667, label %668, label %673

668:                                              ; preds = %666
  %669 = load i1 (%"class.blink::EffectModel"*)**, i1 (%"class.blink::EffectModel"*)*** %581, align 8
  %670 = getelementptr inbounds i1 (%"class.blink::EffectModel"*)*, i1 (%"class.blink::EffectModel"*)** %669, i64 4
  %671 = load i1 (%"class.blink::EffectModel"*)*, i1 (%"class.blink::EffectModel"*)** %670, align 8
  %672 = call zeroext i1 %671(%"class.blink::EffectModel"* %3) #14
  br i1 %672, label %673, label %688

673:                                              ; preds = %668, %666, %664, %662
  br i1 %564, label %674, label %677

674:                                              ; preds = %673
  %675 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink21GetCSSPropertyOpacityEv() #14
  %676 = call zeroext i1 @_ZNK5blink9Animation7AffectsERKNS_7ElementERKNS_11CSSPropertyE(%"class.blink::Animation"* %660, %"class.blink::Element"* dereferenceable(104) %1, %"class.blink::CSSProperty"* dereferenceable(24) %675) #14
  br i1 %676, label %700, label %677

677:                                              ; preds = %674, %673
  br i1 %585, label %678, label %680

678:                                              ; preds = %677
  %679 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_127IsTransformRelatedAnimationERKNS_7ElementEPKNS_9AnimationE(%"class.blink::Element"* dereferenceable(104) %1, %"class.blink::Animation"* %660) #14
  br i1 %679, label %700, label %680

680:                                              ; preds = %678, %677
  br i1 %594, label %681, label %684

681:                                              ; preds = %680
  %682 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink20GetCSSPropertyFilterEv() #14
  %683 = call zeroext i1 @_ZNK5blink9Animation7AffectsERKNS_7ElementERKNS_11CSSPropertyE(%"class.blink::Animation"* %660, %"class.blink::Element"* dereferenceable(104) %1, %"class.blink::CSSProperty"* dereferenceable(24) %682) #14
  br i1 %683, label %700, label %684

684:                                              ; preds = %681, %680
  br i1 %619, label %685, label %688

685:                                              ; preds = %684
  %686 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink28GetCSSPropertyBackdropFilterEv() #14
  %687 = call zeroext i1 @_ZNK5blink9Animation7AffectsERKNS_7ElementERKNS_11CSSPropertyE(%"class.blink::Animation"* %660, %"class.blink::Element"* dereferenceable(104) %1, %"class.blink::CSSProperty"* dereferenceable(24) %686) #14
  br i1 %687, label %700, label %688

688:                                              ; preds = %685, %684, %668, %664, %657
  %689 = getelementptr inbounds %"struct.WTF::KeyValuePair.2709", %"struct.WTF::KeyValuePair.2709"* %658, i64 1
  %690 = icmp eq %"struct.WTF::KeyValuePair.2709"* %689, %644
  br i1 %690, label %702, label %691

691:                                              ; preds = %688, %695
  %692 = phi %"struct.WTF::KeyValuePair.2709"* [ %696, %695 ], [ %689, %688 ]
  %693 = bitcast %"struct.WTF::KeyValuePair.2709"* %692 to i64*
  %694 = load i64, i64* %693, align 8
  switch i64 %694, label %698 [
    i64 -1, label %695
    i64 0, label %695
  ]

695:                                              ; preds = %691, %691
  %696 = getelementptr inbounds %"struct.WTF::KeyValuePair.2709", %"struct.WTF::KeyValuePair.2709"* %692, i64 1
  %697 = icmp eq %"struct.WTF::KeyValuePair.2709"* %696, %644
  br i1 %697, label %702, label %691

698:                                              ; preds = %691
  %699 = icmp eq %"struct.WTF::KeyValuePair.2709"* %692, %644
  br i1 %699, label %702, label %657

700:                                              ; preds = %685, %681, %678, %674
  %701 = or i32 %128, 64
  br label %702

702:                                              ; preds = %651, %698, %688, %695, %635, %654, %551, %700, %120
  %703 = phi i32 [ %701, %700 ], [ %128, %120 ], [ %128, %551 ], [ %128, %654 ], [ %128, %635 ], [ %128, %695 ], [ %128, %688 ], [ %128, %698 ], [ %128, %651 ]
  %704 = bitcast %"struct.blink::CompositorAnimations::CompositorTiming"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %704) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %704, i8* align 8 bitcast ({ i32, [4 x i8], %"class.blink::AnimationTimeDelta", %"class.base::TimeDelta", double, double, i32, [4 x i8], double }* @__const._ZN5blink20CompositorAnimations24GetAnimationOnCompositorERKNS_7ElementERKNS_6TimingEiN4absl8optionalIdEEN4base9TimeDeltaERKNS_23KeyframeEffectModelBaseERN3WTF6VectorINSt3__110unique_ptrINS_23CompositorKeyframeModelENSH_14default_deleteISJ_EEEELj0ENSF_18PartitionAllocatorEEEd.compositor_timing to i8*), i64 56, i1 false)
  %705 = getelementptr inbounds %"struct.blink::CompositorAnimations::CompositorTiming", %"struct.blink::CompositorAnimations::CompositorTiming"* %14, i64 0, i32 1, i32 0
  %706 = bitcast double* %705 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %706, i8 0, i64 16, i1 false) #14
  br i1 %129, label %707, label %709

707:                                              ; preds = %702
  %708 = call i64 @_ZNK5blink9Animation27ComputeCompositorTimeOffsetEv(%"class.blink::Animation"* nonnull %2) #14
  br label %709

709:                                              ; preds = %702, %707
  %710 = phi i64 [ %708, %707 ], [ 0, %702 ]
  %711 = call zeroext i1 @_ZN5blink20CompositorAnimations26ConvertTimingForCompositorERKNS_6TimingEN4base9TimeDeltaERNS0_16CompositorTimingEd(%"struct.blink::Timing"* dereferenceable(80) %0, i64 %710, %"struct.blink::CompositorAnimations::CompositorTiming"* nonnull dereferenceable(56) %14, double %5)
  %712 = or i32 %703, 8
  %713 = select i1 %711, i32 %703, i32 %712
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %704) #14
  %714 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %48, align 8
  %715 = icmp eq %"class.blink::PropertyHandle"* %714, null
  br i1 %715, label %748, label %716, !prof !14

716:                                              ; preds = %709
  %717 = load i32, i32* %49, align 8
  %718 = icmp eq i32 %717, 0
  br i1 %718, label %746, label %719

719:                                              ; preds = %716
  %720 = zext i32 %717 to i64
  br label %721

721:                                              ; preds = %743, %719
  %722 = phi i64 [ 0, %719 ], [ %744, %743 ]
  %723 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %714, i64 %722, i32 0
  %724 = load i32, i32* %723, align 8
  %725 = icmp eq i32 %724, 1
  br i1 %725, label %743, label %726

726:                                              ; preds = %721
  %727 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %714, i64 %722, i32 2, i32 0, i32 0, i32 0
  %728 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %727, align 8
  %729 = icmp eq %"class.WTF::StringImpl"* %728, null
  br i1 %729, label %743, label %730

730:                                              ; preds = %726
  %731 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %728, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %732 = load atomic i32, i32* %731 monotonic, align 4
  %733 = and i32 %732, 2
  %734 = icmp eq i32 %733, 0
  %735 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %728, i64 0, i32 0
  %736 = load i32, i32* %735, align 4
  br i1 %734, label %737, label %739

737:                                              ; preds = %730
  %738 = add i32 %736, -1
  store i32 %738, i32* %735, align 4
  br label %739

739:                                              ; preds = %737, %730
  %740 = phi i32 [ %738, %737 ], [ %736, %730 ]
  %741 = icmp eq i32 %740, 0
  br i1 %741, label %742, label %743

742:                                              ; preds = %739
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %728) #14
  br label %743

743:                                              ; preds = %742, %739, %726, %721
  %744 = add nuw nsw i64 %722, 1
  %745 = icmp eq i64 %744, %720
  br i1 %745, label %746, label %721

746:                                              ; preds = %743, %716
  %747 = bitcast %"class.blink::PropertyHandle"* %714 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %747) #14
  store %"class.blink::PropertyHandle"* null, %"class.blink::PropertyHandle"** %48, align 8
  br label %748

748:                                              ; preds = %709, %746
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #14
  ret i32 %713
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZNK5blink23KeyframeEffectModelBase10PropertiesEv(%"class.WTF::HashSet.1337"* sret, %"class.blink::KeyframeEffectModelBase"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink20CompositorAnimations49CheckCanStartTransformAnimationOnCompositorForSVGERKNS_10SVGElementE(%"class.blink::SVGElement"* nocapture readonly dereferenceable(168)) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 1
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %7 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRareData"**
  %8 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %8, i64 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRenderingData"**
  %11 = select i1 %5, %"class.blink::NodeRenderingData"** %10, %"class.blink::NodeRenderingData"** %9
  %12 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %12, i64 0, i32 1
  %14 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %15 = icmp eq %"class.blink::LayoutObject"* %14, null
  br i1 %15, label %59, label %16

16:                                               ; preds = %1
  %17 = bitcast %"class.blink::LayoutObject"* %14 to i1 (%"class.blink::LayoutObject"*, i32)***
  %18 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %18, i64 92
  %20 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.blink::LayoutObject"* nonnull %14, i32 73) #14
  br i1 %21, label %59, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %14, i64 0, i32 5, i32 0
  %24 = bitcast %"class.blink::ComputedStyle"** %23 to %"class.blink::ComputedStyleBase"**
  %25 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %25, i64 0, i32 1, i32 0, i32 0
  %27 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %27, i64 0, i32 2, i32 0, i32 0
  %29 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %29, i64 0, i32 6
  %31 = load float, float* %30, align 8
  %32 = fcmp une float %31, 1.000000e+00
  br i1 %32, label %59, label %33

33:                                               ; preds = %22
  %34 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %17, align 8
  %35 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %34, i64 92
  %36 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %35, align 8
  %37 = tail call zeroext i1 %36(%"class.blink::LayoutObject"* nonnull %14, i32 71) #14
  br i1 %37, label %38, label %52

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %14, i64 2, i32 1, i32 1
  %40 = bitcast i8* %39 to float*
  %41 = load float, float* %40, align 4
  %42 = fcmp ogt float %41, 0xBE80000000000000
  %43 = fcmp olt float %41, 0x3E80000000000000
  %44 = and i1 %42, %43
  br i1 %44, label %45, label %59

45:                                               ; preds = %38
  %46 = getelementptr inbounds i8, i8* %39, i64 4
  %47 = bitcast i8* %46 to float*
  %48 = load float, float* %47, align 4
  %49 = fcmp ogt float %48, 0xBE80000000000000
  %50 = fcmp olt float %48, 0x3E80000000000000
  %51 = and i1 %49, %50
  br i1 %51, label %52, label %59

52:                                               ; preds = %45, %33
  %53 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %14, i64 0, i32 4
  %54 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %53 to i96*
  %55 = load i96, i96* %54, align 4
  %56 = lshr i96 %55, 61
  %57 = trunc i96 %56 to i32
  %58 = and i32 %57, 1024
  ret i32 %58

59:                                               ; preds = %38, %45, %22, %16, %1
  %60 = phi i32 [ 0, %1 ], [ 1024, %16 ], [ 1024, %22 ], [ 1024, %45 ], [ 1024, %38 ]
  ret i32 %60
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @_ZNK5blink19TransformOperations19BoxSizeDependenciesEj(%"class.blink::TransformOperations"*, i32) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink16FilterOperations24HasFilterThatMovesPixelsEv(%"class.blink::FilterOperations"*) local_unnamed_addr #3

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #3

declare %"class.blink::BackgroundColorPaintImageGenerator"* @_ZN5blink10LocalFrame37GetBackgroundColorPaintImageGeneratorEv(%"class.blink::LocalFrame"*) local_unnamed_addr #3

declare %"class.blink::LayoutBoxModelObject"* @_ZNK5blink4Node23GetLayoutBoxModelObjectEv(%"class.blink::Node"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink20LayoutBoxModelObject25BackgroundTransfersToViewEPKNS_13ComputedStyleE(%"class.blink::LayoutBoxModelObject"*, %"class.blink::ComputedStyle"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink13ComputedStyle36HasCSSPaintImagesUsingCustomPropertyERKN3WTF12AtomicStringERKNS_8DocumentE(%"class.blink::ComputedStyle"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink20CompositorAnimations40CompositorPropertyAnimationsHaveNoEffectERKNS_7ElementERKNS_11EffectModelEPKNS_23PaintArtifactCompositorE(%"class.blink::Element"* nocapture readonly dereferenceable(104), %"class.blink::EffectModel"* dereferenceable(8), %"class.blink::PaintArtifactCompositor"*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.blink::PropertyHandle", align 8
  %5 = alloca %"class.blink::PropertyHandle", align 8
  %6 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %11 = bitcast %"class.blink::NodeData"** %10 to %"class.blink::NodeRareData"**
  %12 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %12, i64 0, i32 1, i32 0, i32 0
  %14 = bitcast %"class.blink::NodeData"** %10 to %"class.blink::NodeRenderingData"**
  %15 = select i1 %9, %"class.blink::NodeRenderingData"** %14, %"class.blink::NodeRenderingData"** %13
  %16 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %16, i64 0, i32 1
  %18 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %17, align 8
  %19 = icmp eq %"class.blink::LayoutObject"* %18, null
  br i1 %19, label %158, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %18, i64 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %22 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %21, align 8
  %23 = icmp eq %"struct.blink::FragmentData::RareData"* %22, null
  br i1 %23, label %158, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %22, i64 0, i32 4, i32 0, i32 0, i32 0
  %26 = load %"class.blink::ObjectPaintProperties"*, %"class.blink::ObjectPaintProperties"** %25, align 8
  %27 = icmp eq %"class.blink::ObjectPaintProperties"* %26, null
  %28 = icmp eq %"class.blink::PaintArtifactCompositor"* %2, null
  %29 = or i1 %28, %27
  br i1 %29, label %158, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.blink::EffectModel"* %1 to %"class.blink::KeyframeEffectModelBase"*
  tail call void @_ZNK5blink23KeyframeEffectModelBase20EnsureKeyframeGroupsEv(%"class.blink::KeyframeEffectModelBase"* %31) #14
  %32 = getelementptr inbounds %"class.blink::EffectModel", %"class.blink::EffectModel"* %1, i64 3
  %33 = bitcast %"class.blink::EffectModel"* %32 to %"class.WTF::HashMap<blink::PropertyHandle, blink::Member<blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup>, WTF::DefaultHash<blink::PropertyHandle>::Hash, WTF::HashTraits<blink::PropertyHandle>, WTF::HashTraits<blink::Member<blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup> >, blink::HeapAllocator>::HashMapKeysProxy"**
  %34 = load %"class.WTF::HashMap<blink::PropertyHandle, blink::Member<blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup>, WTF::DefaultHash<blink::PropertyHandle>::Hash, WTF::HashTraits<blink::PropertyHandle>, WTF::HashTraits<blink::Member<blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup> >, blink::HeapAllocator>::HashMapKeysProxy"*, %"class.WTF::HashMap<blink::PropertyHandle, blink::Member<blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup>, WTF::DefaultHash<blink::PropertyHandle>::Hash, WTF::HashTraits<blink::PropertyHandle>, WTF::HashTraits<blink::Member<blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup> >, blink::HeapAllocator>::HashMapKeysProxy"** %33, align 8
  %35 = getelementptr inbounds %"class.WTF::HashMap<blink::PropertyHandle, blink::Member<blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup>, WTF::DefaultHash<blink::PropertyHandle>::Hash, WTF::HashTraits<blink::PropertyHandle>, WTF::HashTraits<blink::Member<blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup> >, blink::HeapAllocator>::HashMapKeysProxy", %"class.WTF::HashMap<blink::PropertyHandle, blink::Member<blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup>, WTF::DefaultHash<blink::PropertyHandle>::Hash, WTF::HashTraits<blink::PropertyHandle>, WTF::HashTraits<blink::Member<blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup> >, blink::HeapAllocator>::HashMapKeysProxy"* %34, i64 0, i32 0, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::HashMap<blink::PropertyHandle, blink::Member<blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup>, WTF::DefaultHash<blink::PropertyHandle>::Hash, WTF::HashTraits<blink::PropertyHandle>, WTF::HashTraits<blink::Member<blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup> >, blink::HeapAllocator>::HashMapKeysProxy", %"class.WTF::HashMap<blink::PropertyHandle, blink::Member<blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup>, WTF::DefaultHash<blink::PropertyHandle>::Hash, WTF::HashTraits<blink::PropertyHandle>, WTF::HashTraits<blink::Member<blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup> >, blink::HeapAllocator>::HashMapKeysProxy"* %34, i64 0, i32 0, i32 0, i32 0
  %39 = load %"struct.WTF::KeyValuePair.1358"*, %"struct.WTF::KeyValuePair.1358"** %38, align 8
  %40 = getelementptr inbounds %"class.WTF::HashMap<blink::PropertyHandle, blink::Member<blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup>, WTF::DefaultHash<blink::PropertyHandle>::Hash, WTF::HashTraits<blink::PropertyHandle>, WTF::HashTraits<blink::Member<blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup> >, blink::HeapAllocator>::HashMapKeysProxy", %"class.WTF::HashMap<blink::PropertyHandle, blink::Member<blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup>, WTF::DefaultHash<blink::PropertyHandle>::Hash, WTF::HashTraits<blink::PropertyHandle>, WTF::HashTraits<blink::Member<blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup> >, blink::HeapAllocator>::HashMapKeysProxy"* %34, i64 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.1358", %"struct.WTF::KeyValuePair.1358"* %39, i64 %42
  br i1 %37, label %83, label %44

44:                                               ; preds = %30
  %45 = icmp eq i32 %41, 0
  br i1 %45, label %83, label %46

46:                                               ; preds = %44
  %47 = bitcast %"class.blink::PropertyHandle"* %4 to i8*
  %48 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 0
  %49 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 1
  %50 = bitcast %union.anon.1341* %49 to i8*
  %51 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %52

52:                                               ; preds = %76, %46
  %53 = phi %"struct.WTF::KeyValuePair.1358"* [ %39, %46 ], [ %77, %76 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.1358", %"struct.WTF::KeyValuePair.1358"* %53, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #14
  store i32 0, i32* %48, align 8, !alias.scope !15
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 16, i1 false) #14, !alias.scope !15
  %55 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %54, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %4) #14
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #14
  br label %71

71:                                               ; preds = %70, %67, %52
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #14
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.1358", %"struct.WTF::KeyValuePair.1358"* %53, i64 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %73, 1
  %75 = or i1 %55, %74
  br i1 %75, label %76, label %79

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.1358", %"struct.WTF::KeyValuePair.1358"* %53, i64 1
  %78 = icmp eq %"struct.WTF::KeyValuePair.1358"* %77, %43
  br i1 %78, label %79, label %52

79:                                               ; preds = %76, %71
  %80 = phi %"struct.WTF::KeyValuePair.1358"* [ %53, %71 ], [ %43, %76 ]
  %81 = load %"struct.WTF::KeyValuePair.1358"*, %"struct.WTF::KeyValuePair.1358"** %38, align 8
  %82 = load i32, i32* %40, align 8
  br label %83

83:                                               ; preds = %79, %30, %44
  %84 = phi i32 [ %41, %30 ], [ 0, %44 ], [ %82, %79 ]
  %85 = phi %"struct.WTF::KeyValuePair.1358"* [ %39, %30 ], [ %39, %44 ], [ %81, %79 ]
  %86 = phi %"struct.WTF::KeyValuePair.1358"* [ %43, %30 ], [ %39, %44 ], [ %80, %79 ]
  %87 = zext i32 %84 to i64
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair.1358", %"struct.WTF::KeyValuePair.1358"* %85, i64 %87
  %89 = icmp eq %"struct.WTF::KeyValuePair.1358"* %86, %88
  br i1 %89, label %96, label %90

90:                                               ; preds = %83
  %91 = bitcast %"class.blink::PropertyHandle"* %5 to i8*
  %92 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 0
  %93 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 1
  %94 = bitcast %union.anon.1341* %93 to i8*
  %95 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %100

96:                                               ; preds = %155, %83
  %97 = phi i8 [ 0, %83 ], [ %125, %155 ]
  %98 = and i8 %97, 1
  %99 = icmp ne i8 %98, 0
  br label %158

100:                                              ; preds = %90, %155
  %101 = phi i8 [ 0, %90 ], [ %125, %155 ]
  %102 = phi %"struct.WTF::KeyValuePair.1358"* [ %86, %90 ], [ %156, %155 ]
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.1358", %"struct.WTF::KeyValuePair.1358"* %102, i64 0, i32 0, i32 0
  %104 = load i32, i32* %103, align 8
  %105 = or i32 %104, 1
  %106 = icmp eq i32 %105, 3
  br i1 %106, label %107, label %124

107:                                              ; preds = %100
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair.1358", %"struct.WTF::KeyValuePair.1358"* %102, i64 0, i32 0, i32 1, i32 0
  %109 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %109, i64 0, i32 1
  %111 = load i32, i32* %110, align 8
  switch i32 %111, label %124 [
    i32 251, label %112
    i32 47, label %112
    i32 293, label %112
    i32 298, label %112
    i32 377, label %112
    i32 369, label %112
    i32 145, label %112
  ]

112:                                              ; preds = %107, %107, %107, %107, %107, %107, %107
  %113 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %21, align 8
  %114 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %113, i64 0, i32 1
  %115 = load i64, i64* %114, align 8
  switch i32 %111, label %118 [
    i32 251, label %119
    i32 47, label %119
    i32 293, label %116
    i32 298, label %116
    i32 377, label %116
    i32 369, label %116
    i32 145, label %117
    i32 52, label %119
  ]

116:                                              ; preds = %112, %112, %112, %112
  br label %119

117:                                              ; preds = %112
  br label %119

118:                                              ; preds = %112
  br label %119

119:                                              ; preds = %112, %112, %112, %116, %117, %118
  %120 = phi i32 [ 0, %118 ], [ 6, %117 ], [ 5, %116 ], [ 4, %112 ], [ 4, %112 ], [ 4, %112 ]
  %121 = call i64 @_ZN5blink37CompositorElementIdFromUniqueObjectIdEmNS_28CompositorElementIdNamespaceE(i64 %115, i32 %120) #14
  %122 = call zeroext i1 @_ZNK5blink23PaintArtifactCompositor13HasCompositedEN2cc9ElementIdE(%"class.blink::PaintArtifactCompositor"* nonnull %2, i64 %121) #14
  %123 = select i1 %122, i8 %101, i8 1
  br label %124

124:                                              ; preds = %107, %100, %119
  %125 = phi i8 [ %123, %119 ], [ %101, %100 ], [ %101, %107 ]
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair.1358", %"struct.WTF::KeyValuePair.1358"* %102, i64 1
  %127 = icmp eq %"struct.WTF::KeyValuePair.1358"* %126, %43
  br i1 %127, label %155, label %128

128:                                              ; preds = %124, %152
  %129 = phi %"struct.WTF::KeyValuePair.1358"* [ %153, %152 ], [ %126, %124 ]
  %130 = getelementptr inbounds %"struct.WTF::KeyValuePair.1358", %"struct.WTF::KeyValuePair.1358"* %129, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #14
  store i32 0, i32* %92, align 8, !alias.scope !20
  call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 16, i1 false) #14, !alias.scope !20
  %131 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %130, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %5) #14
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #14
  br label %147

147:                                              ; preds = %146, %143, %128
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #14
  %148 = getelementptr inbounds %"struct.WTF::KeyValuePair.1358", %"struct.WTF::KeyValuePair.1358"* %129, i64 0, i32 0, i32 0
  %149 = load i32, i32* %148, align 8
  %150 = icmp eq i32 %149, 1
  %151 = or i1 %131, %150
  br i1 %151, label %152, label %155

152:                                              ; preds = %147
  %153 = getelementptr inbounds %"struct.WTF::KeyValuePair.1358", %"struct.WTF::KeyValuePair.1358"* %129, i64 1
  %154 = icmp eq %"struct.WTF::KeyValuePair.1358"* %153, %43
  br i1 %154, label %155, label %128

155:                                              ; preds = %147, %152, %124
  %156 = phi %"struct.WTF::KeyValuePair.1358"* [ %43, %124 ], [ %129, %147 ], [ %43, %152 ]
  %157 = icmp eq %"struct.WTF::KeyValuePair.1358"* %156, %88
  br i1 %157, label %96, label %100

158:                                              ; preds = %20, %3, %24, %96
  %159 = phi i1 [ %99, %96 ], [ false, %24 ], [ false, %3 ], [ false, %20 ]
  ret i1 %159
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare i64 @_ZNK5blink9Animation27ComputeCompositorTimeOffsetEv(%"class.blink::Animation"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink20CompositorAnimations26ConvertTimingForCompositorERKNS_6TimingEN4base9TimeDeltaERNS0_16CompositorTimingEd(%"struct.blink::Timing"* nocapture readonly dereferenceable(80), i64, %"struct.blink::CompositorAnimations::CompositorTiming"* nocapture dereferenceable(56), double) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = fcmp oeq double %3, 0.000000e+00
  br i1 %6, label %98, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 1, i32 0
  %9 = load double, double* %8, align 8
  %10 = fcmp oeq double %9, 0.000000e+00
  br i1 %10, label %11, label %98

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %98, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 5
  %17 = load double, double* %16, align 8
  %18 = fcmp une double %17, 0.000000e+00
  br i1 %18, label %19, label %98

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta"* %20, i64 0, i32 0
  %22 = load double, double* %21, align 8
  %23 = fcmp oeq double %22, 0.000000e+00
  %24 = fcmp oeq double %22, 0x7FF0000000000000
  %25 = or i1 %23, %24
  br i1 %25, label %98, label %26

26:                                               ; preds = %19
  %27 = fcmp ogt double %3, 0.000000e+00
  br i1 %27, label %28, label %31

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 0, i32 0
  %30 = load double, double* %29, align 8
  br label %31

31:                                               ; preds = %26, %28
  %32 = phi double [ %30, %28 ], [ 0.000000e+00, %26 ]
  %33 = fdiv double %32, %3
  %34 = fmul double %33, 1.000000e+06
  %35 = fcmp ult double %34, 0xC3E0000000000000
  %36 = fcmp ugt double %34, 0x43DFFFFFFFFFFFFF
  %37 = fcmp ogt double %34, 0xC3E0000000000000
  %38 = select i1 %37, double %34, double 0xC3E0000000000000
  %39 = fptosi double %38 to i64
  %40 = select i1 %35, i64 0, i64 9223372036854775807
  %41 = select i1 %36, i64 %40, i64 %39
  %42 = add i64 %41, -9223372036854775807
  %43 = icmp ult i64 %42, 2
  %44 = sub nsw i64 0, %41
  %45 = icmp slt i64 %41, 0
  %46 = select i1 %45, i64 9223372036854775807, i64 -9223372036854775808
  %47 = select i1 %43, i64 %46, i64 %44
  %48 = add i64 %1, -9223372036854775807
  %49 = icmp ult i64 %48, 2
  br i1 %49, label %50, label %60

50:                                               ; preds = %31
  %51 = add i64 %47, -9223372036854775807
  %52 = icmp ugt i64 %51, 1
  %53 = icmp eq i64 %47, %1
  %54 = or i1 %53, %52
  br i1 %54, label %58, label %55

55:                                               ; preds = %50
  %56 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #14
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #14
  br label %58

58:                                               ; preds = %50, %55
  %59 = getelementptr inbounds %"struct.blink::CompositorAnimations::CompositorTiming", %"struct.blink::CompositorAnimations::CompositorTiming"* %2, i64 0, i32 2, i32 0
  store i64 %1, i64* %59, align 8
  br label %98

60:                                               ; preds = %31
  %61 = icmp slt i64 %1, 0
  %62 = select i1 %61, i64 -9223372036854775808, i64 9223372036854775807
  %63 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %47, i64 %1) #14
  %64 = extractvalue { i64, i1 } %63, 1
  %65 = extractvalue { i64, i1 } %63, 0
  %66 = select i1 %64, i64 %62, i64 %65, !prof !7
  %67 = add i64 %66, -9223372036854775807
  %68 = getelementptr inbounds %"struct.blink::CompositorAnimations::CompositorTiming", %"struct.blink::CompositorAnimations::CompositorTiming"* %2, i64 0, i32 2, i32 0
  store i64 %66, i64* %68, align 8
  %69 = icmp ult i64 %67, 2
  br i1 %69, label %98, label %70

70:                                               ; preds = %60
  %71 = load double, double* %16, align 8
  %72 = call double @llvm.fabs.f64(double %71) #15
  %73 = fcmp one double %72, 0x7FF0000000000000
  %74 = select i1 %73, double %71, double 0x7FF0000000000000
  %75 = getelementptr inbounds %"struct.blink::CompositorAnimations::CompositorTiming", %"struct.blink::CompositorAnimations::CompositorTiming"* %2, i64 0, i32 3
  store double %74, double* %75, align 8
  %76 = load i8, i8* %12, align 8, !range !8
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %70
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #16
  unreachable

79:                                               ; preds = %70
  %80 = getelementptr inbounds %"struct.blink::CompositorAnimations::CompositorTiming", %"struct.blink::CompositorAnimations::CompositorTiming"* %2, i64 0, i32 1
  %81 = bitcast %"class.blink::AnimationTimeDelta"* %20 to i64*
  %82 = bitcast %"class.blink::AnimationTimeDelta"* %80 to i64*
  %83 = load i64, i64* %81, align 8
  store i64 %83, i64* %82, align 8
  %84 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 7
  %85 = load i32, i32* %84, align 8
  %86 = getelementptr inbounds %"struct.blink::CompositorAnimations::CompositorTiming", %"struct.blink::CompositorAnimations::CompositorTiming"* %2, i64 0, i32 0
  store i32 %85, i32* %86, align 8
  %87 = getelementptr inbounds %"struct.blink::CompositorAnimations::CompositorTiming", %"struct.blink::CompositorAnimations::CompositorTiming"* %2, i64 0, i32 4
  store double %3, double* %87, align 8
  %88 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 2
  %89 = load i32, i32* %88, align 8
  %90 = icmp eq i32 %89, 4
  %91 = select i1 %90, i32 0, i32 %89
  %92 = getelementptr inbounds %"struct.blink::CompositorAnimations::CompositorTiming", %"struct.blink::CompositorAnimations::CompositorTiming"* %2, i64 0, i32 5
  store i32 %91, i32* %92, align 8
  %93 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 4
  %94 = bitcast double* %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = getelementptr inbounds %"struct.blink::CompositorAnimations::CompositorTiming", %"struct.blink::CompositorAnimations::CompositorTiming"* %2, i64 0, i32 6
  %97 = bitcast double* %96 to i64*
  store i64 %95, i64* %97, align 8
  br label %98

98:                                               ; preds = %58, %11, %60, %79, %15, %19, %7, %4
  %99 = phi i1 [ false, %4 ], [ false, %7 ], [ false, %19 ], [ false, %15 ], [ false, %11 ], [ true, %79 ], [ false, %60 ], [ false, %58 ]
  ret i1 %99
}

declare i64 @_ZN5blink37CompositorElementIdFromUniqueObjectIdEmNS_28CompositorElementIdNamespaceE(i64, i32) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink23PaintArtifactCompositor13HasCompositedEN2cc9ElementIdE(%"class.blink::PaintArtifactCompositor"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink20CompositorAnimations32CheckCanStartElementOnCompositorERKNS_7ElementERKNS_11EffectModelE(%"class.blink::Element"* dereferenceable(104), %"class.blink::EffectModel"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %4, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  %7 = tail call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* %6) #14
  %8 = icmp eq %"class.blink::Settings"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %7, i64 0, i32 71
  %11 = bitcast [14 x i8]* %10 to i112*
  %12 = load i112, i112* %11, align 8
  %13 = and i112 %12, 16
  %14 = icmp eq i112 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %9, %2
  %16 = tail call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #14
  %17 = bitcast %"class.blink::Platform"* %16 to i1 (%"class.blink::Platform"*)***
  %18 = load i1 (%"class.blink::Platform"*)**, i1 (%"class.blink::Platform"*)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.blink::Platform"*)*, i1 (%"class.blink::Platform"*)** %18, i64 52
  %20 = load i1 (%"class.blink::Platform"*)*, i1 (%"class.blink::Platform"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.blink::Platform"* %16) #14
  br i1 %21, label %23, label %22

22:                                               ; preds = %9, %15
  br label %23

23:                                               ; preds = %22, %15
  %24 = phi i32 [ 0, %15 ], [ 1, %22 ]
  %25 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, 48
  %28 = icmp ne i32 %27, 32
  %29 = bitcast %"class.blink::Element"* %0 to %"class.blink::SVGElement"*
  %30 = icmp eq %"class.blink::Element"* %0, null
  %31 = or i1 %30, %28
  br i1 %31, label %43, label %32

32:                                               ; preds = %23
  %33 = tail call zeroext i1 @_ZNK5blink10SVGElement27HasNonCSSPropertyAnimationsEv(%"class.blink::SVGElement"* nonnull %29) #14
  %34 = select i1 %33, i32 64, i32 0
  %35 = tail call dereferenceable(24) %"class.blink::HeapHashSet.1885"* @_ZNK5blink10SVGElement19InstancesForElementEv(%"class.blink::SVGElement"* nonnull %29) #14
  %36 = getelementptr inbounds %"class.blink::HeapHashSet.1885", %"class.blink::HeapHashSet.1885"* %35, i64 0, i32 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  %39 = or i32 %34, 32
  %40 = select i1 %38, i32 %34, i32 %39
  %41 = or i32 %40, %24
  %42 = load i32, i32* %25, align 8
  br label %43

43:                                               ; preds = %23, %32
  %44 = phi i32 [ %42, %32 ], [ %26, %23 ]
  %45 = phi i32 [ %41, %32 ], [ %24, %23 ]
  %46 = and i32 %44, 1
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %49 = bitcast %"class.blink::NodeData"** %48 to %"class.blink::NodeRareData"**
  %50 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %50, i64 0, i32 1, i32 0, i32 0
  %52 = bitcast %"class.blink::NodeData"** %48 to %"class.blink::NodeRenderingData"**
  %53 = select i1 %47, %"class.blink::NodeRenderingData"** %52, %"class.blink::NodeRenderingData"** %51
  %54 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %54, i64 0, i32 1
  %56 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %55, align 8
  %57 = icmp eq %"class.blink::LayoutObject"* %56, null
  br i1 %57, label %94, label %58

58:                                               ; preds = %43
  %59 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %56, i64 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %60 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %59, align 8
  %61 = icmp eq %"struct.blink::FragmentData::RareData"* %60, null
  br i1 %61, label %88, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %60, i64 0, i32 11, i32 0, i32 0, i32 0
  %64 = load %"class.blink::FragmentData"*, %"class.blink::FragmentData"** %63, align 8
  %65 = icmp eq %"class.blink::FragmentData"* %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %62
  %67 = or i32 %45, 32
  br label %88

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %60, i64 0, i32 4, i32 0, i32 0, i32 0
  %70 = load %"class.blink::ObjectPaintProperties"*, %"class.blink::ObjectPaintProperties"** %69, align 8
  %71 = icmp eq %"class.blink::ObjectPaintProperties"* %70, null
  br i1 %71, label %88, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.blink::ObjectPaintProperties", %"class.blink::ObjectPaintProperties"* %70, i64 0, i32 2, i32 0
  %74 = load %"class.blink::TransformPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::ObjectPaintProperties", %"class.blink::ObjectPaintProperties"* %70, i64 0, i32 8, i32 0
  %76 = load %"class.blink::EffectPaintPropertyNode"*, %"class.blink::EffectPaintPropertyNode"** %75, align 8
  %77 = icmp eq %"class.blink::TransformPaintPropertyNode"* %74, null
  br i1 %77, label %82, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.blink::TransformPaintPropertyNode", %"class.blink::TransformPaintPropertyNode"* %74, i64 0, i32 1, i32 5
  %80 = load i64, i64* %79, align 8
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %96

82:                                               ; preds = %78, %72
  %83 = icmp eq %"class.blink::EffectPaintPropertyNode"* %76, null
  br i1 %83, label %88, label %84

84:                                               ; preds = %82
  %85 = getelementptr inbounds %"class.blink::EffectPaintPropertyNode", %"class.blink::EffectPaintPropertyNode"* %76, i64 0, i32 1, i32 6
  %86 = load i64, i64* %85, align 8
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %96

88:                                               ; preds = %84, %58, %82, %68, %66
  %89 = phi i32 [ %45, %84 ], [ %45, %68 ], [ %45, %82 ], [ %67, %66 ], [ %45, %58 ]
  %90 = bitcast %"class.blink::EffectModel"* %1 to %"class.blink::KeyframeEffectModelBase"*
  %91 = tail call zeroext i1 @_ZNK5blink23KeyframeEffectModelBase20RequiresPropertyNodeEv(%"class.blink::KeyframeEffectModelBase"* %90) #14
  %92 = or i32 %89, 32
  %93 = select i1 %91, i32 %92, i32 %89
  ret i32 %93

94:                                               ; preds = %43
  %95 = or i32 %45, 32
  br label %96

96:                                               ; preds = %84, %78, %94
  %97 = phi i32 [ %95, %94 ], [ %45, %84 ], [ %45, %78 ]
  ret i32 %97
}

declare %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"*) local_unnamed_addr #3

declare %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink20CompositorAnimations35CheckCanStartSVGElementOnCompositorERKNS_10SVGElementE(%"class.blink::SVGElement"* dereferenceable(168)) local_unnamed_addr #1 align 2 {
  %2 = tail call zeroext i1 @_ZNK5blink10SVGElement27HasNonCSSPropertyAnimationsEv(%"class.blink::SVGElement"* %0) #14
  %3 = select i1 %2, i32 64, i32 0
  %4 = tail call dereferenceable(24) %"class.blink::HeapHashSet.1885"* @_ZNK5blink10SVGElement19InstancesForElementEv(%"class.blink::SVGElement"* %0) #14
  %5 = getelementptr inbounds %"class.blink::HeapHashSet.1885", %"class.blink::HeapHashSet.1885"* %4, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  %8 = or i32 %3, 32
  %9 = select i1 %7, i32 %3, i32 %8
  ret i32 %9
}

declare zeroext i1 @_ZNK5blink23KeyframeEffectModelBase20RequiresPropertyNodeEv(%"class.blink::KeyframeEffectModelBase"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink20CompositorAnimations34CheckCanStartAnimationOnCompositorERKNS_6TimingERKNS_7ElementEPKNS_9AnimationERKNS_11EffectModelEPKNS_23PaintArtifactCompositorEdPN3WTF7HashSetINS_14PropertyHandleENSG_11DefaultHashISI_E4HashENSG_10HashTraitsISI_EENSG_18PartitionAllocatorEEE(%"struct.blink::Timing"* nocapture readonly dereferenceable(80), %"class.blink::Element"* dereferenceable(104), %"class.blink::Animation"*, %"class.blink::EffectModel"* dereferenceable(8), %"class.blink::PaintArtifactCompositor"*, double, %"class.WTF::HashSet.1337"*) local_unnamed_addr #1 align 2 {
  %8 = tail call i32 @_ZN5blink20CompositorAnimations31CheckCanStartEffectOnCompositorERKNS_6TimingERKNS_7ElementEPKNS_9AnimationERKNS_11EffectModelEPKNS_23PaintArtifactCompositorEdPN3WTF7HashSetINS_14PropertyHandleENSG_11DefaultHashISI_E4HashENSG_10HashTraitsISI_EENSG_18PartitionAllocatorEEE(%"struct.blink::Timing"* dereferenceable(80) %0, %"class.blink::Element"* dereferenceable(104) %1, %"class.blink::Animation"* %2, %"class.blink::EffectModel"* dereferenceable(8) %3, %"class.blink::PaintArtifactCompositor"* %4, double %5, %"class.WTF::HashSet.1337"* %6)
  %9 = tail call i32 @_ZN5blink20CompositorAnimations32CheckCanStartElementOnCompositorERKNS_7ElementERKNS_11EffectModelE(%"class.blink::Element"* dereferenceable(104) %1, %"class.blink::EffectModel"* dereferenceable(8) %3)
  %10 = or i32 %9, %8
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20CompositorAnimations40CancelIncompatibleAnimationsOnCompositorERKNS_7ElementERKNS_9AnimationERKNS_11EffectModelE(%"class.blink::Element"* dereferenceable(104), %"class.blink::Animation"* dereferenceable(368), %"class.blink::EffectModel"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.blink::PropertyHandle", align 8
  %5 = alloca %"class.blink::PropertyHandle", align 8
  %6 = alloca %"class.blink::PropertyHandle", align 8
  %7 = bitcast %"class.blink::PropertyHandle"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #14
  %8 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink21GetCSSPropertyOpacityEv() #14
  %9 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 0
  store i32 2, i32* %9, align 8
  %10 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 1, i32 0
  store %"class.blink::CSSProperty"* %8, %"class.blink::CSSProperty"** %10, align 8
  %11 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %11, align 8
  %12 = bitcast %"class.blink::EffectModel"* %2 to i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)***
  %13 = load i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)**, i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)*, i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)** %13, i64 3
  %15 = load i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)*, i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)** %14, align 8
  %16 = call zeroext i1 %15(%"class.blink::EffectModel"* %2, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %4) #14
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #14
  br label %32

32:                                               ; preds = %3, %28, %31
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #14
  %33 = bitcast %"class.blink::EffectModel"* %2 to i1 (%"class.blink::EffectModel"*)***
  %34 = load i1 (%"class.blink::EffectModel"*)**, i1 (%"class.blink::EffectModel"*)*** %33, align 8
  %35 = getelementptr inbounds i1 (%"class.blink::EffectModel"*)*, i1 (%"class.blink::EffectModel"*)** %34, i64 5
  %36 = load i1 (%"class.blink::EffectModel"*)*, i1 (%"class.blink::EffectModel"*)** %35, align 8
  %37 = call zeroext i1 %36(%"class.blink::EffectModel"* %2) #14
  %38 = bitcast %"class.blink::PropertyHandle"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #14
  %39 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink20GetCSSPropertyFilterEv() #14
  %40 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 0
  store i32 2, i32* %40, align 8
  %41 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 1, i32 0
  store %"class.blink::CSSProperty"* %39, %"class.blink::CSSProperty"** %41, align 8
  %42 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %42, align 8
  %43 = load i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)**, i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)*** %12, align 8
  %44 = getelementptr inbounds i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)*, i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)** %43, i64 3
  %45 = load i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)*, i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)** %44, align 8
  %46 = call zeroext i1 %45(%"class.blink::EffectModel"* %2, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %5) #14
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %32
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %49
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %49
  %59 = phi i32 [ %57, %56 ], [ %55, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #14
  br label %62

62:                                               ; preds = %32, %58, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #14
  %63 = bitcast %"class.blink::PropertyHandle"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #14
  %64 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink28GetCSSPropertyBackdropFilterEv() #14
  %65 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %6, i64 0, i32 0
  store i32 2, i32* %65, align 8
  %66 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %6, i64 0, i32 1, i32 0
  store %"class.blink::CSSProperty"* %64, %"class.blink::CSSProperty"** %66, align 8
  %67 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %67, align 8
  %68 = load i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)**, i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)*** %12, align 8
  %69 = getelementptr inbounds i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)*, i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)** %68, i64 3
  %70 = load i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)*, i1 (%"class.blink::EffectModel"*, %"class.blink::PropertyHandle"*)** %69, align 8
  %71 = call zeroext i1 %70(%"class.blink::EffectModel"* %2, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %6) #14
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %62
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #14
  br label %87

87:                                               ; preds = %62, %83, %86
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #14
  %88 = call zeroext i1 @_ZNK5blink7Element13HasAnimationsEv(%"class.blink::Element"* %0) #14
  br i1 %88, label %89, label %156

89:                                               ; preds = %87
  %90 = call %"class.blink::ElementAnimations"* @_ZNK5blink7Element20GetElementAnimationsEv(%"class.blink::Element"* %0) #14
  %91 = getelementptr inbounds %"class.blink::ElementAnimations", %"class.blink::ElementAnimations"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.blink::ElementAnimations", %"class.blink::ElementAnimations"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %95 = load %"struct.WTF::KeyValuePair.2709"*, %"struct.WTF::KeyValuePair.2709"** %94, align 8
  %96 = getelementptr inbounds %"class.blink::ElementAnimations", %"class.blink::ElementAnimations"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.2709", %"struct.WTF::KeyValuePair.2709"* %95, i64 %98
  br i1 %93, label %156, label %100

100:                                              ; preds = %89
  %101 = icmp eq i32 %97, 0
  br i1 %101, label %109, label %102

102:                                              ; preds = %100, %106
  %103 = phi %"struct.WTF::KeyValuePair.2709"* [ %107, %106 ], [ %95, %100 ]
  %104 = bitcast %"struct.WTF::KeyValuePair.2709"* %103 to i64*
  %105 = load i64, i64* %104, align 8
  switch i64 %105, label %109 [
    i64 -1, label %106
    i64 0, label %106
  ]

106:                                              ; preds = %102, %102
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.2709", %"struct.WTF::KeyValuePair.2709"* %103, i64 1
  %108 = icmp eq %"struct.WTF::KeyValuePair.2709"* %107, %99
  br i1 %108, label %156, label %102

109:                                              ; preds = %102, %100
  %110 = phi %"struct.WTF::KeyValuePair.2709"* [ %95, %100 ], [ %103, %102 ]
  %111 = icmp eq %"struct.WTF::KeyValuePair.2709"* %110, %99
  br i1 %111, label %156, label %112

112:                                              ; preds = %109, %154
  %113 = phi %"struct.WTF::KeyValuePair.2709"* [ %148, %154 ], [ %110, %109 ]
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair.2709", %"struct.WTF::KeyValuePair.2709"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = load %"class.blink::Animation"*, %"class.blink::Animation"** %114, align 8
  %116 = icmp eq %"class.blink::Animation"* %115, %1
  br i1 %116, label %144, label %117

117:                                              ; preds = %112
  %118 = call zeroext i1 @_ZNK5blink9Animation15PendingInternalEv(%"class.blink::Animation"* %115) #14
  br i1 %118, label %128, label %119

119:                                              ; preds = %117
  %120 = call i32 @_ZNK5blink9Animation27CalculateAnimationPlayStateEv(%"class.blink::Animation"* %115) #14
  switch i32 %120, label %128 [
    i32 1, label %144
    i32 5, label %121
    i32 4, label %121
  ]

121:                                              ; preds = %119, %119
  %122 = call zeroext i1 @_ZN5blink9Animation25HasLowerCompositeOrderingEPKS0_S2_NS0_25CompareAnimationsOrderingE(%"class.blink::Animation"* %115, %"class.blink::Animation"* %1, i32 1) #14
  br i1 %122, label %123, label %128

123:                                              ; preds = %121
  %124 = load i1 (%"class.blink::EffectModel"*)**, i1 (%"class.blink::EffectModel"*)*** %33, align 8
  %125 = getelementptr inbounds i1 (%"class.blink::EffectModel"*)*, i1 (%"class.blink::EffectModel"*)** %124, i64 4
  %126 = load i1 (%"class.blink::EffectModel"*)*, i1 (%"class.blink::EffectModel"*)** %125, align 8
  %127 = call zeroext i1 %126(%"class.blink::EffectModel"* %2) #14
  br i1 %127, label %128, label %144

128:                                              ; preds = %119, %121, %117, %123
  br i1 %16, label %129, label %132

129:                                              ; preds = %128
  %130 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink21GetCSSPropertyOpacityEv() #14
  %131 = call zeroext i1 @_ZNK5blink9Animation7AffectsERKNS_7ElementERKNS_11CSSPropertyE(%"class.blink::Animation"* %115, %"class.blink::Element"* dereferenceable(104) %0, %"class.blink::CSSProperty"* dereferenceable(24) %130) #14
  br i1 %131, label %143, label %132

132:                                              ; preds = %129, %128
  br i1 %37, label %133, label %135

133:                                              ; preds = %132
  %134 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_127IsTransformRelatedAnimationERKNS_7ElementEPKNS_9AnimationE(%"class.blink::Element"* dereferenceable(104) %0, %"class.blink::Animation"* %115)
  br i1 %134, label %143, label %135

135:                                              ; preds = %133, %132
  br i1 %46, label %136, label %139

136:                                              ; preds = %135
  %137 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink20GetCSSPropertyFilterEv() #14
  %138 = call zeroext i1 @_ZNK5blink9Animation7AffectsERKNS_7ElementERKNS_11CSSPropertyE(%"class.blink::Animation"* %115, %"class.blink::Element"* dereferenceable(104) %0, %"class.blink::CSSProperty"* dereferenceable(24) %137) #14
  br i1 %138, label %143, label %139

139:                                              ; preds = %136, %135
  br i1 %71, label %140, label %144

140:                                              ; preds = %139
  %141 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink28GetCSSPropertyBackdropFilterEv() #14
  %142 = call zeroext i1 @_ZNK5blink9Animation7AffectsERKNS_7ElementERKNS_11CSSPropertyE(%"class.blink::Animation"* %115, %"class.blink::Element"* dereferenceable(104) %0, %"class.blink::CSSProperty"* dereferenceable(24) %141) #14
  br i1 %142, label %143, label %144

143:                                              ; preds = %140, %136, %133, %129
  call void @_ZN5blink9Animation27CancelAnimationOnCompositorEv(%"class.blink::Animation"* %115) #14
  br label %144

144:                                              ; preds = %119, %112, %123, %139, %140, %143
  %145 = getelementptr inbounds %"struct.WTF::KeyValuePair.2709", %"struct.WTF::KeyValuePair.2709"* %113, i64 1
  %146 = icmp eq %"struct.WTF::KeyValuePair.2709"* %145, %99
  br i1 %146, label %156, label %147

147:                                              ; preds = %144, %151
  %148 = phi %"struct.WTF::KeyValuePair.2709"* [ %152, %151 ], [ %145, %144 ]
  %149 = bitcast %"struct.WTF::KeyValuePair.2709"* %148 to i64*
  %150 = load i64, i64* %149, align 8
  switch i64 %150, label %154 [
    i64 -1, label %151
    i64 0, label %151
  ]

151:                                              ; preds = %147, %147
  %152 = getelementptr inbounds %"struct.WTF::KeyValuePair.2709", %"struct.WTF::KeyValuePair.2709"* %148, i64 1
  %153 = icmp eq %"struct.WTF::KeyValuePair.2709"* %152, %99
  br i1 %153, label %156, label %147

154:                                              ; preds = %147
  %155 = icmp eq %"struct.WTF::KeyValuePair.2709"* %148, %99
  br i1 %155, label %156, label %112

156:                                              ; preds = %106, %144, %154, %151, %89, %109, %87
  ret void
}

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink21GetCSSPropertyOpacityEv() local_unnamed_addr #3

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink20GetCSSPropertyFilterEv() local_unnamed_addr #3

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink28GetCSSPropertyBackdropFilterEv() local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink7Element13HasAnimationsEv(%"class.blink::Element"*) local_unnamed_addr #3

declare %"class.blink::ElementAnimations"* @_ZNK5blink7Element20GetElementAnimationsEv(%"class.blink::Element"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink9Animation7AffectsERKNS_7ElementERKNS_11CSSPropertyE(%"class.blink::Animation"*, %"class.blink::Element"* dereferenceable(104), %"class.blink::CSSProperty"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_127IsTransformRelatedAnimationERKNS_7ElementEPKNS_9AnimationE(%"class.blink::Element"* dereferenceable(104), %"class.blink::Animation"*) unnamed_addr #1 {
  %3 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink23GetCSSPropertyTransformEv() #14
  %4 = tail call zeroext i1 @_ZNK5blink9Animation7AffectsERKNS_7ElementERKNS_11CSSPropertyE(%"class.blink::Animation"* %1, %"class.blink::Element"* dereferenceable(104) %0, %"class.blink::CSSProperty"* dereferenceable(24) %3) #14
  br i1 %4, label %14, label %5

5:                                                ; preds = %2
  %6 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink20GetCSSPropertyRotateEv() #14
  %7 = tail call zeroext i1 @_ZNK5blink9Animation7AffectsERKNS_7ElementERKNS_11CSSPropertyE(%"class.blink::Animation"* %1, %"class.blink::Element"* dereferenceable(104) %0, %"class.blink::CSSProperty"* dereferenceable(24) %6) #14
  br i1 %7, label %14, label %8

8:                                                ; preds = %5
  %9 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink19GetCSSPropertyScaleEv() #14
  %10 = tail call zeroext i1 @_ZNK5blink9Animation7AffectsERKNS_7ElementERKNS_11CSSPropertyE(%"class.blink::Animation"* %1, %"class.blink::Element"* dereferenceable(104) %0, %"class.blink::CSSProperty"* dereferenceable(24) %9) #14
  br i1 %10, label %14, label %11

11:                                               ; preds = %8
  %12 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink23GetCSSPropertyTranslateEv() #14
  %13 = tail call zeroext i1 @_ZNK5blink9Animation7AffectsERKNS_7ElementERKNS_11CSSPropertyE(%"class.blink::Animation"* %1, %"class.blink::Element"* dereferenceable(104) %0, %"class.blink::CSSProperty"* dereferenceable(24) %12) #14
  br label %14

14:                                               ; preds = %11, %8, %5, %2
  %15 = phi i1 [ true, %8 ], [ true, %5 ], [ true, %2 ], [ %13, %11 ]
  ret i1 %15
}

declare void @_ZN5blink9Animation27CancelAnimationOnCompositorEv(%"class.blink::Animation"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20CompositorAnimations26StartAnimationOnCompositorERKNS_7ElementEiN4absl8optionalIdEEN4base9TimeDeltaERKNS_6TimingEPKNS_9AnimationERNS_19CompositorAnimationERKNS_11EffectModelERN3WTF6VectorIiLj0ENSK_18PartitionAllocatorEEEd(%"class.blink::Element"* nocapture readonly dereferenceable(104), i32, i8, double, i64, %"struct.blink::Timing"* nocapture readonly dereferenceable(80), %"class.blink::Animation"* nocapture readnone, %"class.blink::CompositorAnimation"* dereferenceable(24), %"class.blink::EffectModel"* dereferenceable(8), %"class.WTF::Vector.2724"* dereferenceable(16), double) local_unnamed_addr #1 align 2 {
  %12 = alloca %"class.WTF::Vector.2734", align 8
  %13 = alloca i32, align 4
  %14 = bitcast %"class.blink::EffectModel"* %8 to %"class.blink::KeyframeEffectModelBase"*
  %15 = bitcast %"class.WTF::Vector.2734"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #14
  %16 = getelementptr inbounds %"class.WTF::Vector.2734", %"class.WTF::Vector.2734"* %12, i64 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.WTF::Vector.2734", %"class.WTF::Vector.2734"* %12, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 16, i1 false) #14
  call void @_ZN5blink20CompositorAnimations24GetAnimationOnCompositorERKNS_7ElementERKNS_6TimingEiN4absl8optionalIdEEN4base9TimeDeltaERKNS_23KeyframeEffectModelBaseERN3WTF6VectorINSt3__110unique_ptrINS_23CompositorKeyframeModelENSH_14default_deleteISJ_EEEELj0ENSF_18PartitionAllocatorEEEd(%"class.blink::Element"* dereferenceable(104) %0, %"struct.blink::Timing"* dereferenceable(80) %5, i32 %1, i8 %2, double %3, i64 %4, %"class.blink::KeyframeEffectModelBase"* dereferenceable(88) %14, %"class.WTF::Vector.2734"* nonnull dereferenceable(16) %12, double %10)
  %18 = load %"class.std::__1::unique_ptr.2737"*, %"class.std::__1::unique_ptr.2737"** %16, align 8
  %19 = load i32, i32* %17, align 4
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.2737", %"class.std::__1::unique_ptr.2737"* %18, i64 %20
  %22 = icmp eq i32 %19, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %11
  %24 = bitcast i32* %13 to i8*
  %25 = getelementptr inbounds %"class.WTF::Vector.2724", %"class.WTF::Vector.2724"* %9, i64 0, i32 0, i32 0, i32 2
  %26 = getelementptr inbounds %"class.WTF::Vector.2724", %"class.WTF::Vector.2724"* %9, i64 0, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.WTF::Vector.2724", %"class.WTF::Vector.2724"* %9, i64 0, i32 0, i32 0, i32 0
  br label %56

28:                                               ; preds = %73
  %29 = load %"class.std::__1::unique_ptr.2737"*, %"class.std::__1::unique_ptr.2737"** %16, align 8
  br label %30

30:                                               ; preds = %28, %11
  %31 = phi %"class.std::__1::unique_ptr.2737"* [ %29, %28 ], [ %18, %11 ]
  %32 = icmp eq %"class.std::__1::unique_ptr.2737"* %31, null
  br i1 %32, label %55, label %33, !prof !14

33:                                               ; preds = %30
  %34 = bitcast %"class.std::__1::unique_ptr.2737"* %31 to i8*
  %35 = load i32, i32* %17, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %53, label %37, !prof !7

37:                                               ; preds = %33
  %38 = zext i32 %35 to i64
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.2737", %"class.std::__1::unique_ptr.2737"* %31, i64 %38
  br label %40

40:                                               ; preds = %47, %37
  %41 = phi %"class.std::__1::unique_ptr.2737"* [ %48, %47 ], [ %31, %37 ]
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.2737", %"class.std::__1::unique_ptr.2737"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.blink::CompositorKeyframeModel"*, %"class.blink::CompositorKeyframeModel"** %42, align 8
  store %"class.blink::CompositorKeyframeModel"* null, %"class.blink::CompositorKeyframeModel"** %42, align 8
  %44 = icmp eq %"class.blink::CompositorKeyframeModel"* %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %40
  call void @_ZN5blink23CompositorKeyframeModelD1Ev(%"class.blink::CompositorKeyframeModel"* nonnull %43) #14
  %46 = bitcast %"class.blink::CompositorKeyframeModel"* %43 to i8*
  call void @free(i8* %46) #14
  br label %47

47:                                               ; preds = %45, %40
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.2737", %"class.std::__1::unique_ptr.2737"* %41, i64 1
  %49 = icmp eq %"class.std::__1::unique_ptr.2737"* %48, %39
  br i1 %49, label %50, label %40

50:                                               ; preds = %47
  store i32 0, i32* %17, align 4
  %51 = bitcast %"class.WTF::Vector.2734"* %12 to i8**
  %52 = load i8*, i8** %51, align 8
  br label %53

53:                                               ; preds = %50, %33
  %54 = phi i8* [ %52, %50 ], [ %34, %33 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %54) #14
  store %"class.std::__1::unique_ptr.2737"* null, %"class.std::__1::unique_ptr.2737"** %16, align 8
  br label %55

55:                                               ; preds = %30, %53
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #14
  ret void

56:                                               ; preds = %23, %73
  %57 = phi %"class.std::__1::unique_ptr.2737"* [ %18, %23 ], [ %74, %73 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #14
  store i32 -1431655766, i32* %13, align 4
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.2737", %"class.std::__1::unique_ptr.2737"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.blink::CompositorKeyframeModel"*, %"class.blink::CompositorKeyframeModel"** %58, align 8
  %60 = call i32 @_ZNK5blink23CompositorKeyframeModel2IdEv(%"class.blink::CompositorKeyframeModel"* %59) #14
  store i32 %60, i32* %13, align 4
  %61 = load %"class.blink::CompositorKeyframeModel"*, %"class.blink::CompositorKeyframeModel"** %58, align 8
  store %"class.blink::CompositorKeyframeModel"* null, %"class.blink::CompositorKeyframeModel"** %58, align 8
  call void @_ZN5blink19CompositorAnimation16AddKeyframeModelENSt3__110unique_ptrINS_23CompositorKeyframeModelENS1_14default_deleteIS3_EEEE(%"class.blink::CompositorAnimation"* %7, %"class.blink::CompositorKeyframeModel"* %61) #14
  %62 = load i32, i32* %25, align 4
  %63 = load i32, i32* %26, align 8
  %64 = icmp eq i32 %62, %63
  br i1 %64, label %72, label %65, !prof !7

65:                                               ; preds = %56
  %66 = load i32*, i32** %27, align 8
  %67 = zext i32 %62 to i64
  %68 = getelementptr inbounds i32, i32* %66, i64 %67
  %69 = load i32, i32* %13, align 4
  store i32 %69, i32* %68, align 4
  %70 = load i32, i32* %25, align 4
  %71 = add i32 %70, 1
  store i32 %71, i32* %25, align 4
  br label %73

72:                                               ; preds = %56
  call void @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRiEEvOT_(%"class.WTF::Vector.2724"* %9, i32* nonnull dereferenceable(4) %13) #14
  br label %73

73:                                               ; preds = %65, %72
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #14
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.2737", %"class.std::__1::unique_ptr.2737"* %57, i64 1
  %75 = icmp eq %"class.std::__1::unique_ptr.2737"* %74, %21
  br i1 %75, label %28, label %56
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20CompositorAnimations24GetAnimationOnCompositorERKNS_7ElementERKNS_6TimingEiN4absl8optionalIdEEN4base9TimeDeltaERKNS_23KeyframeEffectModelBaseERN3WTF6VectorINSt3__110unique_ptrINS_23CompositorKeyframeModelENSH_14default_deleteISJ_EEEELj0ENSF_18PartitionAllocatorEEEd(%"class.blink::Element"* nocapture readonly dereferenceable(104), %"struct.blink::Timing"* nocapture readonly dereferenceable(80), i32, i8, double, i64, %"class.blink::KeyframeEffectModelBase"* dereferenceable(88), %"class.WTF::Vector.2734"* dereferenceable(16), double) local_unnamed_addr #4 align 2 {
  %10 = alloca %"class.blink::CompositorColorKeyframe", align 8
  %11 = alloca %"class.blink::CompositorTransformOperations", align 8
  %12 = alloca %"class.blink::CompositorTransformKeyframe", align 8
  %13 = alloca %"class.blink::CompositorTransformOperations", align 8
  %14 = alloca <2 x float>, align 8
  %15 = alloca %"class.blink::FilterEffectBuilder", align 8
  %16 = alloca %"class.blink::FloatRect", align 4
  %17 = alloca %"class.blink::CompositorFilterKeyframe", align 8
  %18 = alloca %"class.blink::CompositorFilterOperations", align 8
  %19 = alloca %"class.blink::PropertyHandle", align 8
  %20 = alloca %"class.blink::PropertyHandle", align 8
  %21 = alloca %"struct.blink::CompositorAnimations::CompositorTiming", align 8
  %22 = alloca %"class.WTF::HashSet.1337", align 8
  %23 = alloca %"class.WTF::AtomicString", align 8
  %24 = alloca %"class.std::__1::unique_ptr.2737", align 8
  %25 = bitcast %"struct.blink::CompositorAnimations::CompositorTiming"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %25) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* align 8 bitcast ({ i32, [4 x i8], %"class.blink::AnimationTimeDelta", %"class.base::TimeDelta", double, double, i32, [4 x i8], double }* @__const._ZN5blink20CompositorAnimations24GetAnimationOnCompositorERKNS_7ElementERKNS_6TimingEiN4absl8optionalIdEEN4base9TimeDeltaERKNS_23KeyframeEffectModelBaseERN3WTF6VectorINSt3__110unique_ptrINS_23CompositorKeyframeModelENSH_14default_deleteISJ_EEEELj0ENSF_18PartitionAllocatorEEEd.compositor_timing to i8*), i64 56, i1 false)
  %26 = getelementptr inbounds %"struct.blink::CompositorAnimations::CompositorTiming", %"struct.blink::CompositorAnimations::CompositorTiming"* %21, i64 0, i32 1, i32 0
  %27 = bitcast double* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #14
  %28 = call zeroext i1 @_ZN5blink20CompositorAnimations26ConvertTimingForCompositorERKNS_6TimingEN4base9TimeDeltaERNS0_16CompositorTimingEd(%"struct.blink::Timing"* dereferenceable(80) %1, i64 %5, %"struct.blink::CompositorAnimations::CompositorTiming"* nonnull dereferenceable(56) %21, double %8)
  %29 = bitcast %"class.WTF::HashSet.1337"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #14
  %30 = getelementptr inbounds %"class.WTF::HashSet.1337", %"class.WTF::HashSet.1337"* %22, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.WTF::HashSet.1337", %"class.WTF::HashSet.1337"* %22, i64 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.WTF::HashSet.1337", %"class.WTF::HashSet.1337"* %22, i64 0, i32 0, i32 2
  %33 = bitcast %"class.WTF::HashSet.1337"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 24, i1 false)
  call void @_ZNK5blink23KeyframeEffectModelBase10PropertiesEv(%"class.WTF::HashSet.1337"* nonnull sret %22, %"class.blink::KeyframeEffectModelBase"* %6) #14
  %34 = load i32, i32* %32, align 4
  %35 = icmp eq i32 %34, 0
  %36 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %30, align 8
  %37 = load i32, i32* %31, align 8
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %36, i64 %38
  br i1 %35, label %78, label %40

40:                                               ; preds = %9
  %41 = icmp eq i32 %37, 0
  br i1 %41, label %78, label %42

42:                                               ; preds = %40
  %43 = bitcast %"class.blink::PropertyHandle"* %19 to i8*
  %44 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %19, i64 0, i32 0
  %45 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %19, i64 0, i32 1
  %46 = bitcast %union.anon.1341* %45 to i8*
  %47 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %19, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %48

48:                                               ; preds = %71, %42
  %49 = phi %"class.blink::PropertyHandle"* [ %36, %42 ], [ %72, %71 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #14
  store i32 0, i32* %44, align 8, !alias.scope !25
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false) #14, !alias.scope !25
  %50 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %49, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %19) #14
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #14
  br label %66

66:                                               ; preds = %65, %62, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #14
  %67 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %49, i64 0, i32 0
  %68 = load i32, i32* %67, align 8
  %69 = icmp eq i32 %68, 1
  %70 = or i1 %50, %69
  br i1 %70, label %71, label %74

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %49, i64 1
  %73 = icmp eq %"class.blink::PropertyHandle"* %72, %39
  br i1 %73, label %74, label %48

74:                                               ; preds = %71, %66
  %75 = phi %"class.blink::PropertyHandle"* [ %39, %71 ], [ %49, %66 ]
  %76 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %30, align 8
  %77 = load i32, i32* %31, align 8
  br label %78

78:                                               ; preds = %74, %9, %40
  %79 = phi i32 [ %37, %9 ], [ 0, %40 ], [ %77, %74 ]
  %80 = phi %"class.blink::PropertyHandle"* [ %36, %9 ], [ %36, %40 ], [ %76, %74 ]
  %81 = phi %"class.blink::PropertyHandle"* [ %39, %9 ], [ %36, %40 ], [ %75, %74 ]
  %82 = zext i32 %79 to i64
  %83 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %80, i64 %82
  %84 = icmp eq %"class.blink::PropertyHandle"* %81, %83
  br i1 %84, label %135, label %85

85:                                               ; preds = %78
  %86 = bitcast %"class.WTF::AtomicString"* %23 to i8*
  %87 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %23, i64 0, i32 0, i32 0, i32 0
  %88 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %6, i64 0, i32 2, i32 0, i32 0
  %89 = bitcast %"class.blink::CompositorFilterOperations"* %18 to i8*
  %90 = bitcast %"class.blink::FilterEffectBuilder"* %15 to i8*
  %91 = getelementptr inbounds %"class.blink::FilterEffectBuilder", %"class.blink::FilterEffectBuilder"* %15, i64 0, i32 3
  %92 = bitcast %"class.blink::FloatRect"* %16 to i8*
  %93 = bitcast %"class.cc::PaintFlags"** %91 to i8*
  %94 = bitcast %"class.blink::CompositorFilterKeyframe"* %17 to i8*
  %95 = getelementptr inbounds %"class.blink::CompositorFilterOperations", %"class.blink::CompositorFilterOperations"* %18, i64 0, i32 0
  %96 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %1, i64 0, i32 9, i32 0
  %97 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 1
  %98 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %99 = bitcast %"class.blink::NodeData"** %98 to %"class.blink::NodeRareData"**
  %100 = bitcast %"class.blink::NodeData"** %98 to %"class.blink::NodeRenderingData"**
  %101 = bitcast <2 x float>* %14 to i8*
  %102 = bitcast <2 x float>* %14 to %"class.blink::FloatSize"*
  %103 = bitcast %"class.blink::CompositorTransformOperations"* %13 to i8*
  %104 = bitcast %"class.blink::CompositorTransformOperations"* %11 to i8*
  %105 = getelementptr inbounds %"class.blink::CompositorTransformOperations", %"class.blink::CompositorTransformOperations"* %11, i64 0, i32 0, i32 1, i32 0, i32 3, i32 0, i32 0
  %106 = getelementptr inbounds %"class.blink::CompositorTransformOperations", %"class.blink::CompositorTransformOperations"* %11, i64 0, i32 0, i32 1, i32 0, i32 4, i64 0
  %107 = getelementptr inbounds %"class.blink::CompositorTransformOperations", %"class.blink::CompositorTransformOperations"* %11, i64 0, i32 0
  %108 = bitcast i8* %106 to i32*
  %109 = bitcast %"class.blink::CompositorTransformKeyframe"* %12 to i8*
  %110 = getelementptr inbounds %"class.blink::CompositorTransformOperations", %"class.blink::CompositorTransformOperations"* %13, i64 0, i32 0
  %111 = bitcast %"class.WTF::AtomicString"* %23 to i64*
  %112 = bitcast %"class.blink::CompositorColorKeyframe"* %10 to i8*
  %113 = bitcast %"class.std::__1::unique_ptr.2737"* %24 to i8*
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.2737", %"class.std::__1::unique_ptr.2737"* %24, i64 0, i32 0, i32 0, i32 0
  %115 = bitcast %"class.std::__1::unique_ptr.2737"* %24 to i64*
  %116 = icmp eq i8 %3, 0
  %117 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  %118 = getelementptr inbounds %"struct.blink::CompositorAnimations::CompositorTiming", %"struct.blink::CompositorAnimations::CompositorTiming"* %21, i64 0, i32 3
  %119 = getelementptr inbounds %"struct.blink::CompositorAnimations::CompositorTiming", %"struct.blink::CompositorAnimations::CompositorTiming"* %21, i64 0, i32 6
  %120 = getelementptr inbounds %"struct.blink::CompositorAnimations::CompositorTiming", %"struct.blink::CompositorAnimations::CompositorTiming"* %21, i64 0, i32 2, i32 0
  %121 = getelementptr inbounds %"struct.blink::CompositorAnimations::CompositorTiming", %"struct.blink::CompositorAnimations::CompositorTiming"* %21, i64 0, i32 0
  %122 = load i32, i32* %121, align 8
  %123 = getelementptr inbounds %"struct.blink::CompositorAnimations::CompositorTiming", %"struct.blink::CompositorAnimations::CompositorTiming"* %21, i64 0, i32 4
  %124 = getelementptr inbounds %"struct.blink::CompositorAnimations::CompositorTiming", %"struct.blink::CompositorAnimations::CompositorTiming"* %21, i64 0, i32 5
  %125 = getelementptr inbounds %"class.WTF::Vector.2734", %"class.WTF::Vector.2734"* %7, i64 0, i32 0, i32 0, i32 2
  %126 = getelementptr inbounds %"class.WTF::Vector.2734", %"class.WTF::Vector.2734"* %7, i64 0, i32 0, i32 0, i32 1
  %127 = getelementptr inbounds %"class.WTF::Vector.2734", %"class.WTF::Vector.2734"* %7, i64 0, i32 0, i32 0, i32 0
  %128 = bitcast %"class.blink::PropertyHandle"* %20 to i8*
  %129 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %20, i64 0, i32 0
  %130 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %20, i64 0, i32 1
  %131 = bitcast %union.anon.1341* %130 to i8*
  %132 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %20, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %171

133:                                              ; preds = %585
  %134 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %30, align 8
  br label %135

135:                                              ; preds = %133, %78
  %136 = phi %"class.blink::PropertyHandle"* [ %134, %133 ], [ %80, %78 ]
  %137 = icmp eq %"class.blink::PropertyHandle"* %136, null
  br i1 %137, label %170, label %138, !prof !14

138:                                              ; preds = %135
  %139 = load i32, i32* %31, align 8
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %168, label %141

141:                                              ; preds = %138
  %142 = zext i32 %139 to i64
  br label %143

143:                                              ; preds = %165, %141
  %144 = phi i64 [ 0, %141 ], [ %166, %165 ]
  %145 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %136, i64 %144, i32 0
  %146 = load i32, i32* %145, align 8
  %147 = icmp eq i32 %146, 1
  br i1 %147, label %165, label %148

148:                                              ; preds = %143
  %149 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %136, i64 %144, i32 2, i32 0, i32 0, i32 0
  %150 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %149, align 8
  %151 = icmp eq %"class.WTF::StringImpl"* %150, null
  br i1 %151, label %165, label %152

152:                                              ; preds = %148
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load atomic i32, i32* %153 monotonic, align 4
  %155 = and i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 0
  %158 = load i32, i32* %157, align 4
  br i1 %156, label %159, label %161

159:                                              ; preds = %152
  %160 = add i32 %158, -1
  store i32 %160, i32* %157, align 4
  br label %161

161:                                              ; preds = %159, %152
  %162 = phi i32 [ %160, %159 ], [ %158, %152 ]
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %165

164:                                              ; preds = %161
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %150) #14
  br label %165

165:                                              ; preds = %164, %161, %148, %143
  %166 = add nuw nsw i64 %144, 1
  %167 = icmp eq i64 %166, %142
  br i1 %167, label %168, label %143

168:                                              ; preds = %165, %138
  %169 = bitcast %"class.blink::PropertyHandle"* %136 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %169) #14
  store %"class.blink::PropertyHandle"* null, %"class.blink::PropertyHandle"** %30, align 8
  br label %170

170:                                              ; preds = %135, %168
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #14
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %25) #14
  ret void

171:                                              ; preds = %85, %585
  %172 = phi %"class.blink::PropertyHandle"* [ %81, %85 ], [ %586, %585 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #14
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %87, align 8
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %23, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0) #14
  %173 = load double, double* %26, align 8
  %174 = call double @llvm.fabs.f64(double %173) #15
  %175 = fcmp one double %174, 0x7FF0000000000000
  %176 = select i1 %175, double %173, double 1.000000e+00
  call void @_ZNK5blink23KeyframeEffectModelBase20EnsureKeyframeGroupsEv(%"class.blink::KeyframeEffectModelBase"* %6) #14
  %177 = load %"class.blink::HeapHashMap.1352"*, %"class.blink::HeapHashMap.1352"** %88, align 8
  %178 = getelementptr inbounds %"class.blink::HeapHashMap.1352", %"class.blink::HeapHashMap.1352"* %177, i64 0, i32 0, i32 0
  %179 = call %"struct.WTF::KeyValuePair.1358"* @_ZNK3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EES2_EEPKS8_RKT0_(%"class.WTF::HashTable.1356"* %178, %"class.blink::PropertyHandle"* dereferenceable(24) %172) #14
  %180 = icmp eq %"struct.WTF::KeyValuePair.1358"* %179, null
  %181 = getelementptr inbounds %"class.blink::HeapHashMap.1352", %"class.blink::HeapHashMap.1352"* %177, i64 0, i32 0, i32 0, i32 0
  %182 = load %"struct.WTF::KeyValuePair.1358"*, %"struct.WTF::KeyValuePair.1358"** %181, align 8
  %183 = getelementptr inbounds %"class.blink::HeapHashMap.1352", %"class.blink::HeapHashMap.1352"* %177, i64 0, i32 0, i32 0, i32 1
  %184 = load i32, i32* %183, align 8
  %185 = zext i32 %184 to i64
  %186 = getelementptr inbounds %"struct.WTF::KeyValuePair.1358", %"struct.WTF::KeyValuePair.1358"* %182, i64 %185
  %187 = select i1 %180, %"struct.WTF::KeyValuePair.1358"* %186, %"struct.WTF::KeyValuePair.1358"* %179
  %188 = load %"class.blink::HeapHashMap.1352"*, %"class.blink::HeapHashMap.1352"** %88, align 8
  %189 = getelementptr inbounds %"class.blink::HeapHashMap.1352", %"class.blink::HeapHashMap.1352"* %188, i64 0, i32 0, i32 0, i32 0
  %190 = load %"struct.WTF::KeyValuePair.1358"*, %"struct.WTF::KeyValuePair.1358"** %189, align 8
  %191 = getelementptr inbounds %"class.blink::HeapHashMap.1352", %"class.blink::HeapHashMap.1352"* %188, i64 0, i32 0, i32 0, i32 1
  %192 = load i32, i32* %191, align 8
  %193 = zext i32 %192 to i64
  %194 = getelementptr inbounds %"struct.WTF::KeyValuePair.1358", %"struct.WTF::KeyValuePair.1358"* %190, i64 %193
  %195 = icmp eq %"struct.WTF::KeyValuePair.1358"* %187, %194
  br i1 %195, label %200, label %196

196:                                              ; preds = %171
  %197 = getelementptr inbounds %"struct.WTF::KeyValuePair.1358", %"struct.WTF::KeyValuePair.1358"* %187, i64 0, i32 1, i32 0, i32 0
  %198 = load %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"*, %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"** %197, align 8
  %199 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup", %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* %198, i64 0, i32 0
  br label %200

200:                                              ; preds = %171, %196
  %201 = phi %"class.blink::HeapVector.1363"* [ %199, %196 ], [ null, %171 ]
  %202 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %172, i64 0, i32 1, i32 0
  %203 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %202, align 8
  %204 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %203, i64 0, i32 1
  %205 = load i32, i32* %204, align 8
  switch i32 %205, label %540 [
    i32 251, label %206
    i32 1, label %319
    i32 52, label %315
    i32 293, label %259
    i32 298, label %259
    i32 377, label %259
    i32 369, label %259
    i32 47, label %210
    i32 145, label %211
  ]

206:                                              ; preds = %200
  %207 = call i8* @_Znwm(i64 16) #17
  %208 = bitcast i8* %207 to %"class.blink::CompositorFloatAnimationCurve"*
  call void @_ZN5blink29CompositorFloatAnimationCurveC1Ev(%"class.blink::CompositorFloatAnimationCurve"* nonnull %208) #14
  call fastcc void @_ZN5blink12_GLOBAL__N_119AddKeyframesToCurveINS_29CompositorFloatAnimationCurveEJEEEvRT_RKNS_10HeapVectorINS_6MemberINS_8Keyframe24PropertySpecificKeyframeEEELj0EEEDpT0_(%"class.blink::CompositorFloatAnimationCurve"* nonnull dereferenceable(16) %208, %"class.blink::HeapVector.1363"* dereferenceable(16) %201)
  %209 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %96, align 8
  call void @_ZN5blink29CompositorFloatAnimationCurve17SetTimingFunctionERKNS_14TimingFunctionE(%"class.blink::CompositorFloatAnimationCurve"* nonnull %208, %"class.blink::TimingFunction"* dereferenceable(16) %209) #14
  call void @_ZN5blink29CompositorFloatAnimationCurve17SetScaledDurationEd(%"class.blink::CompositorFloatAnimationCurve"* nonnull %208, double %176) #14
  br label %421

210:                                              ; preds = %200
  br label %211

211:                                              ; preds = %200, %210
  %212 = phi i32 [ 8, %210 ], [ 2, %200 ]
  %213 = call i8* @_Znwm(i64 16) #17
  %214 = bitcast i8* %213 to %"class.blink::CompositorFilterAnimationCurve"*
  call void @_ZN5blink30CompositorFilterAnimationCurveC1Ev(%"class.blink::CompositorFilterAnimationCurve"* nonnull %214) #14
  %215 = getelementptr inbounds %"class.blink::HeapVector.1363", %"class.blink::HeapVector.1363"* %201, i64 0, i32 0
  %216 = getelementptr inbounds %"class.blink::HeapVector.1363", %"class.blink::HeapVector.1363"* %201, i64 0, i32 0, i32 0, i32 0, i32 2
  %217 = load i32, i32* %216, align 4
  %218 = add i32 %217, -1
  %219 = call dereferenceable(8) %"class.blink::Member.1369"* @_ZNK3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1366"* %215, i32 %218) #14
  %220 = getelementptr inbounds %"class.blink::Member.1369", %"class.blink::Member.1369"* %219, i64 0, i32 0, i32 0
  %221 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %220, align 8
  %222 = getelementptr inbounds %"class.blink::HeapVector.1363", %"class.blink::HeapVector.1363"* %201, i64 0, i32 0, i32 0, i32 0, i32 0
  %223 = load %"class.blink::Member.1369"*, %"class.blink::Member.1369"** %222, align 8
  %224 = load i32, i32* %216, align 4
  %225 = zext i32 %224 to i64
  %226 = getelementptr inbounds %"class.blink::Member.1369", %"class.blink::Member.1369"* %223, i64 %225
  %227 = icmp eq i32 %224, 0
  br i1 %227, label %257, label %228

228:                                              ; preds = %211, %240
  %229 = phi %"class.blink::Member.1369"* [ %255, %240 ], [ %223, %211 ]
  %230 = getelementptr inbounds %"class.blink::Member.1369", %"class.blink::Member.1369"* %229, i64 0, i32 0, i32 0
  %231 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %230, align 8
  %232 = icmp eq %"class.blink::Keyframe::PropertySpecificKeyframe"* %231, %221
  br i1 %232, label %233, label %237

233:                                              ; preds = %228
  %234 = call %"class.blink::LinearTimingFunction"* @_ZN5blink20LinearTimingFunction6SharedEv() #14
  %235 = getelementptr inbounds %"class.blink::LinearTimingFunction", %"class.blink::LinearTimingFunction"* %234, i64 0, i32 0
  %236 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %230, align 8
  br label %240

237:                                              ; preds = %228
  %238 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %231, i64 0, i32 2, i32 0
  %239 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %238, align 8
  br label %240

240:                                              ; preds = %237, %233
  %241 = phi %"class.blink::Keyframe::PropertySpecificKeyframe"* [ %236, %233 ], [ %231, %237 ]
  %242 = phi %"class.blink::TimingFunction"* [ %235, %233 ], [ %239, %237 ]
  %243 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"* %241 to %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)***
  %244 = load %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)**, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*** %243, align 8
  %245 = getelementptr inbounds %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %244, i64 6
  %246 = load %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %245, align 8
  %247 = call %"class.blink::CompositorKeyframeValue"* %246(%"class.blink::Keyframe::PropertySpecificKeyframe"* %241) #14
  %248 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %230, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %89) #14
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %90) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -1, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 -86, i64 24, i1 false) #14
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %92, i8 0, i64 16, i1 false) #14
  call void @_ZN5blink19FilterEffectBuilderC1ERKNS_9FloatRectEfPKN2cc10PaintFlagsES7_10SkTileMode(%"class.blink::FilterEffectBuilder"* nonnull %15, %"class.blink::FloatRect"* nonnull dereferenceable(16) %16, float 1.000000e+00, %"class.cc::PaintFlags"* null, %"class.cc::PaintFlags"* null, i32 3) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #14
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #14
  %249 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %248, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %94, i8 -86, i64 16, i1 false) #14
  %250 = load double, double* %249, align 8
  %251 = getelementptr inbounds %"class.blink::CompositorKeyframeValue", %"class.blink::CompositorKeyframeValue"* %247, i64 1
  %252 = bitcast %"class.blink::CompositorKeyframeValue"* %251 to %"class.blink::FilterOperationsWrapper"**
  %253 = load %"class.blink::FilterOperationsWrapper"*, %"class.blink::FilterOperationsWrapper"** %252, align 8
  %254 = getelementptr inbounds %"class.blink::FilterOperationsWrapper", %"class.blink::FilterOperationsWrapper"* %253, i64 0, i32 0
  call void @_ZNK5blink19FilterEffectBuilder21BuildFilterOperationsERKNS_16FilterOperationsE(%"class.blink::CompositorFilterOperations"* nonnull sret %18, %"class.blink::FilterEffectBuilder"* nonnull %15, %"class.blink::FilterOperations"* dereferenceable(16) %254) #14
  call void @_ZN5blink24CompositorFilterKeyframeC1EdNS_26CompositorFilterOperationsERKNS_14TimingFunctionE(%"class.blink::CompositorFilterKeyframe"* nonnull %17, double %250, %"class.blink::CompositorFilterOperations"* nonnull %18, %"class.blink::TimingFunction"* dereferenceable(16) %242) #14
  call void @_ZN2cc16FilterOperationsD1Ev(%"class.cc::FilterOperations"* nonnull %95) #14
  call void @_ZN5blink30CompositorFilterAnimationCurve11AddKeyframeERKNS_24CompositorFilterKeyframeE(%"class.blink::CompositorFilterAnimationCurve"* nonnull %214, %"class.blink::CompositorFilterKeyframe"* nonnull dereferenceable(16) %17) #14
  call void @_ZN5blink24CompositorFilterKeyframeD1Ev(%"class.blink::CompositorFilterKeyframe"* nonnull %17) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %90) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %89) #14
  %255 = getelementptr inbounds %"class.blink::Member.1369", %"class.blink::Member.1369"* %229, i64 1
  %256 = icmp eq %"class.blink::Member.1369"* %255, %226
  br i1 %256, label %257, label %228

257:                                              ; preds = %240, %211
  %258 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %96, align 8
  call void @_ZN5blink30CompositorFilterAnimationCurve17SetTimingFunctionERKNS_14TimingFunctionE(%"class.blink::CompositorFilterAnimationCurve"* nonnull %214, %"class.blink::TimingFunction"* dereferenceable(16) %258) #14
  call void @_ZN5blink30CompositorFilterAnimationCurve17SetScaledDurationEd(%"class.blink::CompositorFilterAnimationCurve"* nonnull %214, double %176) #14
  br label %421

259:                                              ; preds = %200, %200, %200, %200
  %260 = load i32, i32* %97, align 8
  %261 = and i32 %260, 1
  %262 = icmp eq i32 %261, 0
  %263 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %99, align 8
  %264 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %263, i64 0, i32 1, i32 0, i32 0
  %265 = select i1 %262, %"class.blink::NodeRenderingData"** %100, %"class.blink::NodeRenderingData"** %264
  %266 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %265, align 8
  %267 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %266, i64 0, i32 1
  %268 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %267, align 8
  %269 = call { <2 x float>, <2 x float> } @_ZN5blink18ComputedStyleUtils24ReferenceBoxForTransformERKNS_12LayoutObjectENS0_18UsePixelSnappedBoxE(%"class.blink::LayoutObject"* dereferenceable(88) %268, i32 1) #14
  %270 = extractvalue { <2 x float>, <2 x float> } %269, 1
  %271 = call i8* @_Znwm(i64 16) #17
  %272 = bitcast i8* %271 to %"class.blink::CompositorTransformAnimationCurve"*
  call void @_ZN5blink33CompositorTransformAnimationCurveC1Ev(%"class.blink::CompositorTransformAnimationCurve"* nonnull %272) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101)
  store <2 x float> %270, <2 x float>* %14, align 8
  %273 = getelementptr inbounds %"class.blink::HeapVector.1363", %"class.blink::HeapVector.1363"* %201, i64 0, i32 0
  %274 = getelementptr inbounds %"class.blink::HeapVector.1363", %"class.blink::HeapVector.1363"* %201, i64 0, i32 0, i32 0, i32 0, i32 2
  %275 = load i32, i32* %274, align 4
  %276 = add i32 %275, -1
  %277 = call dereferenceable(8) %"class.blink::Member.1369"* @_ZNK3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1366"* %273, i32 %276) #14
  %278 = getelementptr inbounds %"class.blink::Member.1369", %"class.blink::Member.1369"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %278, align 8
  %280 = getelementptr inbounds %"class.blink::HeapVector.1363", %"class.blink::HeapVector.1363"* %201, i64 0, i32 0, i32 0, i32 0, i32 0
  %281 = load %"class.blink::Member.1369"*, %"class.blink::Member.1369"** %280, align 8
  %282 = load i32, i32* %274, align 4
  %283 = zext i32 %282 to i64
  %284 = getelementptr inbounds %"class.blink::Member.1369", %"class.blink::Member.1369"* %281, i64 %283
  %285 = icmp eq i32 %282, 0
  br i1 %285, label %313, label %286

286:                                              ; preds = %259, %298
  %287 = phi %"class.blink::Member.1369"* [ %311, %298 ], [ %281, %259 ]
  %288 = getelementptr inbounds %"class.blink::Member.1369", %"class.blink::Member.1369"* %287, i64 0, i32 0, i32 0
  %289 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %288, align 8
  %290 = icmp eq %"class.blink::Keyframe::PropertySpecificKeyframe"* %289, %279
  br i1 %290, label %291, label %295

291:                                              ; preds = %286
  %292 = call %"class.blink::LinearTimingFunction"* @_ZN5blink20LinearTimingFunction6SharedEv() #14
  %293 = getelementptr inbounds %"class.blink::LinearTimingFunction", %"class.blink::LinearTimingFunction"* %292, i64 0, i32 0
  %294 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %288, align 8
  br label %298

295:                                              ; preds = %286
  %296 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %289, i64 0, i32 2, i32 0
  %297 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %296, align 8
  br label %298

298:                                              ; preds = %295, %291
  %299 = phi %"class.blink::Keyframe::PropertySpecificKeyframe"* [ %294, %291 ], [ %289, %295 ]
  %300 = phi %"class.blink::TimingFunction"* [ %293, %291 ], [ %297, %295 ]
  %301 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"* %299 to %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)***
  %302 = load %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)**, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*** %301, align 8
  %303 = getelementptr inbounds %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %302, i64 6
  %304 = load %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %303, align 8
  %305 = call %"class.blink::CompositorKeyframeValue"* %304(%"class.blink::Keyframe::PropertySpecificKeyframe"* %299) #14
  %306 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %288, align 8
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %103) #14
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %104) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 56, i1 false) #14
  store float 0xFFFFFFFFE0000000, float* %105, align 8
  store i32 -1431655766, i32* %108, align 4
  call void @_ZN3gfx19TransformOperationsC1Ev(%"class.gfx::TransformOperations"* nonnull %107) #14
  %307 = getelementptr inbounds %"class.blink::CompositorKeyframeValue", %"class.blink::CompositorKeyframeValue"* %305, i64 1
  %308 = bitcast %"class.blink::CompositorKeyframeValue"* %307 to %"class.blink::TransformOperations"*
  call void @_ZN5blink31ToCompositorTransformOperationsERKNS_19TransformOperationsEPNS_29CompositorTransformOperationsERKNS_9FloatSizeE(%"class.blink::TransformOperations"* dereferenceable(16) %308, %"class.blink::CompositorTransformOperations"* nonnull %11, %"class.blink::FloatSize"* nonnull dereferenceable(8) %102) #14
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %109) #14
  %309 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %306, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 -86, i64 16, i1 false) #14
  %310 = load double, double* %309, align 8
  call void @_ZN3gfx19TransformOperationsC1ERKS0_(%"class.gfx::TransformOperations"* nonnull %110, %"class.gfx::TransformOperations"* nonnull dereferenceable(64) %107) #14
  call void @_ZN5blink27CompositorTransformKeyframeC1EdNS_29CompositorTransformOperationsERKNS_14TimingFunctionE(%"class.blink::CompositorTransformKeyframe"* nonnull %12, double %310, %"class.blink::CompositorTransformOperations"* nonnull %13, %"class.blink::TimingFunction"* dereferenceable(16) %300) #14
  call void @_ZN3gfx19TransformOperationsD1Ev(%"class.gfx::TransformOperations"* nonnull %110) #14
  call void @_ZN5blink33CompositorTransformAnimationCurve11AddKeyframeERKNS_27CompositorTransformKeyframeE(%"class.blink::CompositorTransformAnimationCurve"* nonnull %272, %"class.blink::CompositorTransformKeyframe"* nonnull dereferenceable(16) %12) #14
  call void @_ZN5blink27CompositorTransformKeyframeD1Ev(%"class.blink::CompositorTransformKeyframe"* nonnull %12) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %109) #14
  call void @_ZN3gfx19TransformOperationsD1Ev(%"class.gfx::TransformOperations"* nonnull %107) #14
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %104) #14
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %103) #14
  %311 = getelementptr inbounds %"class.blink::Member.1369", %"class.blink::Member.1369"* %287, i64 1
  %312 = icmp eq %"class.blink::Member.1369"* %311, %284
  br i1 %312, label %313, label %286

313:                                              ; preds = %298, %259
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101)
  %314 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %96, align 8
  call void @_ZN5blink33CompositorTransformAnimationCurve17SetTimingFunctionERKNS_14TimingFunctionE(%"class.blink::CompositorTransformAnimationCurve"* nonnull %272, %"class.blink::TimingFunction"* dereferenceable(16) %314) #14
  call void @_ZN5blink33CompositorTransformAnimationCurve17SetScaledDurationEd(%"class.blink::CompositorTransformAnimationCurve"* nonnull %272, double %176) #14
  br label %421

315:                                              ; preds = %200
  %316 = call i8* @_Znwm(i64 16) #17
  %317 = bitcast i8* %316 to %"class.blink::CompositorFloatAnimationCurve"*
  call void @_ZN5blink29CompositorFloatAnimationCurveC1Ev(%"class.blink::CompositorFloatAnimationCurve"* nonnull %317) #14
  call fastcc void @_ZN5blink12_GLOBAL__N_119AddKeyframesToCurveINS_29CompositorFloatAnimationCurveEJEEEvRT_RKNS_10HeapVectorINS_6MemberINS_8Keyframe24PropertySpecificKeyframeEEELj0EEEDpT0_(%"class.blink::CompositorFloatAnimationCurve"* nonnull dereferenceable(16) %317, %"class.blink::HeapVector.1363"* dereferenceable(16) %201)
  %318 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %96, align 8
  call void @_ZN5blink29CompositorFloatAnimationCurve17SetTimingFunctionERKNS_14TimingFunctionE(%"class.blink::CompositorFloatAnimationCurve"* nonnull %317, %"class.blink::TimingFunction"* dereferenceable(16) %318) #14
  call void @_ZN5blink29CompositorFloatAnimationCurve17SetScaledDurationEd(%"class.blink::CompositorFloatAnimationCurve"* nonnull %317, double %176) #14
  br label %421

319:                                              ; preds = %200
  %320 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %172, i64 0, i32 2, i32 0, i32 0, i32 0
  %321 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %320, align 8
  %322 = icmp eq %"class.WTF::StringImpl"* %321, null
  br i1 %322, label %340, label %323

323:                                              ; preds = %319
  %324 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %321, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %325 = load atomic i32, i32* %324 monotonic, align 4
  %326 = and i32 %325, 2
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %328, label %340

328:                                              ; preds = %323
  %329 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %321, i64 0, i32 0
  %330 = load i32, i32* %329, align 4
  %331 = zext i32 %330 to i33
  %332 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %331, i33 1) #14
  %333 = extractvalue { i33, i1 } %332, 1
  %334 = extractvalue { i33, i1 } %332, 0
  %335 = icmp slt i33 %334, 0
  %336 = or i1 %333, %335
  br i1 %336, label %337, label %338, !prof !7

337:                                              ; preds = %328
  call void @llvm.trap() #14
  unreachable

338:                                              ; preds = %328
  %339 = trunc i33 %334 to i32
  store i32 %339, i32* %329, align 4
  br label %340

340:                                              ; preds = %338, %323, %319
  %341 = ptrtoint %"class.WTF::StringImpl"* %321 to i64
  %342 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  store i64 %341, i64* %111, align 8
  %343 = icmp eq %"class.WTF::StringImpl"* %342, null
  br i1 %343, label %357, label %344

344:                                              ; preds = %340
  %345 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %342, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %346 = load atomic i32, i32* %345 monotonic, align 4
  %347 = and i32 %346, 2
  %348 = icmp eq i32 %347, 0
  %349 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %342, i64 0, i32 0
  %350 = load i32, i32* %349, align 4
  br i1 %348, label %351, label %353

351:                                              ; preds = %344
  %352 = add i32 %350, -1
  store i32 %352, i32* %349, align 4
  br label %353

353:                                              ; preds = %351, %344
  %354 = phi i32 [ %352, %351 ], [ %350, %344 ]
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %356, label %357

356:                                              ; preds = %353
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %342) #14
  br label %357

357:                                              ; preds = %340, %353, %356
  %358 = getelementptr inbounds %"class.blink::HeapVector.1363", %"class.blink::HeapVector.1363"* %201, i64 0, i32 0
  %359 = call dereferenceable(8) %"class.blink::Member.1369"* @_ZNK3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1366"* %358, i32 0) #14
  %360 = getelementptr inbounds %"class.blink::Member.1369", %"class.blink::Member.1369"* %359, i64 0, i32 0, i32 0
  %361 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %360, align 8
  %362 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"* %361 to %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)***
  %363 = load %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)**, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*** %362, align 8
  %364 = getelementptr inbounds %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %363, i64 6
  %365 = load %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %364, align 8
  %366 = call %"class.blink::CompositorKeyframeValue"* %365(%"class.blink::Keyframe::PropertySpecificKeyframe"* %361) #14
  %367 = bitcast %"class.blink::CompositorKeyframeValue"* %366 to i32 (%"class.blink::CompositorKeyframeValue"*)***
  %368 = load i32 (%"class.blink::CompositorKeyframeValue"*)**, i32 (%"class.blink::CompositorKeyframeValue"*)*** %367, align 8
  %369 = getelementptr inbounds i32 (%"class.blink::CompositorKeyframeValue"*)*, i32 (%"class.blink::CompositorKeyframeValue"*)** %368, i64 3
  %370 = load i32 (%"class.blink::CompositorKeyframeValue"*)*, i32 (%"class.blink::CompositorKeyframeValue"*)** %369, align 8
  %371 = call i32 %370(%"class.blink::CompositorKeyframeValue"* %366) #14
  %372 = icmp eq i32 %371, 3
  %373 = call i8* @_Znwm(i64 16) #17
  br i1 %372, label %374, label %418

374:                                              ; preds = %357
  %375 = bitcast i8* %373 to %"class.blink::CompositorColorAnimationCurve"*
  call void @_ZN5blink29CompositorColorAnimationCurveC1Ev(%"class.blink::CompositorColorAnimationCurve"* nonnull %375) #14
  %376 = getelementptr inbounds %"class.blink::HeapVector.1363", %"class.blink::HeapVector.1363"* %201, i64 0, i32 0, i32 0, i32 0, i32 2
  %377 = load i32, i32* %376, align 4
  %378 = add i32 %377, -1
  %379 = call dereferenceable(8) %"class.blink::Member.1369"* @_ZNK3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1366"* %358, i32 %378) #14
  %380 = getelementptr inbounds %"class.blink::Member.1369", %"class.blink::Member.1369"* %379, i64 0, i32 0, i32 0
  %381 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %380, align 8
  %382 = getelementptr inbounds %"class.blink::HeapVector.1363", %"class.blink::HeapVector.1363"* %201, i64 0, i32 0, i32 0, i32 0, i32 0
  %383 = load %"class.blink::Member.1369"*, %"class.blink::Member.1369"** %382, align 8
  %384 = load i32, i32* %376, align 4
  %385 = zext i32 %384 to i64
  %386 = getelementptr inbounds %"class.blink::Member.1369", %"class.blink::Member.1369"* %383, i64 %385
  %387 = icmp eq i32 %384, 0
  br i1 %387, label %416, label %388

388:                                              ; preds = %374, %400
  %389 = phi %"class.blink::Member.1369"* [ %414, %400 ], [ %383, %374 ]
  %390 = getelementptr inbounds %"class.blink::Member.1369", %"class.blink::Member.1369"* %389, i64 0, i32 0, i32 0
  %391 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %390, align 8
  %392 = icmp eq %"class.blink::Keyframe::PropertySpecificKeyframe"* %391, %381
  br i1 %392, label %393, label %397

393:                                              ; preds = %388
  %394 = call %"class.blink::LinearTimingFunction"* @_ZN5blink20LinearTimingFunction6SharedEv() #14
  %395 = getelementptr inbounds %"class.blink::LinearTimingFunction", %"class.blink::LinearTimingFunction"* %394, i64 0, i32 0
  %396 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %390, align 8
  br label %400

397:                                              ; preds = %388
  %398 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %391, i64 0, i32 2, i32 0
  %399 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %398, align 8
  br label %400

400:                                              ; preds = %397, %393
  %401 = phi %"class.blink::Keyframe::PropertySpecificKeyframe"* [ %396, %393 ], [ %391, %397 ]
  %402 = phi %"class.blink::TimingFunction"* [ %395, %393 ], [ %399, %397 ]
  %403 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"* %401 to %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)***
  %404 = load %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)**, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*** %403, align 8
  %405 = getelementptr inbounds %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %404, i64 6
  %406 = load %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %405, align 8
  %407 = call %"class.blink::CompositorKeyframeValue"* %406(%"class.blink::Keyframe::PropertySpecificKeyframe"* %401) #14
  %408 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %390, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %112) #14
  %409 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %408, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %112, i8 -86, i64 16, i1 false) #14
  %410 = load double, double* %409, align 8
  %411 = getelementptr inbounds %"class.blink::CompositorKeyframeValue", %"class.blink::CompositorKeyframeValue"* %407, i64 1
  %412 = bitcast %"class.blink::CompositorKeyframeValue"* %411 to i32*
  %413 = load i32, i32* %412, align 8
  call void @_ZN5blink23CompositorColorKeyframeC1EdjRKNS_14TimingFunctionE(%"class.blink::CompositorColorKeyframe"* nonnull %10, double %410, i32 %413, %"class.blink::TimingFunction"* dereferenceable(16) %402) #14
  call void @_ZN5blink29CompositorColorAnimationCurve11AddKeyframeERKNS_23CompositorColorKeyframeE(%"class.blink::CompositorColorAnimationCurve"* nonnull %375, %"class.blink::CompositorColorKeyframe"* nonnull dereferenceable(16) %10) #14
  call void @_ZN5blink23CompositorColorKeyframeD1Ev(%"class.blink::CompositorColorKeyframe"* nonnull %10) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %112) #14
  %414 = getelementptr inbounds %"class.blink::Member.1369", %"class.blink::Member.1369"* %389, i64 1
  %415 = icmp eq %"class.blink::Member.1369"* %414, %386
  br i1 %415, label %416, label %388

416:                                              ; preds = %400, %374
  %417 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %96, align 8
  call void @_ZN5blink29CompositorColorAnimationCurve17SetTimingFunctionERKNS_14TimingFunctionE(%"class.blink::CompositorColorAnimationCurve"* nonnull %375, %"class.blink::TimingFunction"* dereferenceable(16) %417) #14
  call void @_ZN5blink29CompositorColorAnimationCurve17SetScaledDurationEd(%"class.blink::CompositorColorAnimationCurve"* nonnull %375, double %176) #14
  br label %421

418:                                              ; preds = %357
  %419 = bitcast i8* %373 to %"class.blink::CompositorFloatAnimationCurve"*
  call void @_ZN5blink29CompositorFloatAnimationCurveC1Ev(%"class.blink::CompositorFloatAnimationCurve"* nonnull %419) #14
  call fastcc void @_ZN5blink12_GLOBAL__N_119AddKeyframesToCurveINS_29CompositorFloatAnimationCurveEJEEEvRT_RKNS_10HeapVectorINS_6MemberINS_8Keyframe24PropertySpecificKeyframeEEELj0EEEDpT0_(%"class.blink::CompositorFloatAnimationCurve"* nonnull dereferenceable(16) %419, %"class.blink::HeapVector.1363"* dereferenceable(16) %201)
  %420 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %96, align 8
  call void @_ZN5blink29CompositorFloatAnimationCurve17SetTimingFunctionERKNS_14TimingFunctionE(%"class.blink::CompositorFloatAnimationCurve"* nonnull %419, %"class.blink::TimingFunction"* dereferenceable(16) %420) #14
  call void @_ZN5blink29CompositorFloatAnimationCurve17SetScaledDurationEd(%"class.blink::CompositorFloatAnimationCurve"* nonnull %419, double %176) #14
  br label %421

421:                                              ; preds = %416, %418, %315, %313, %257, %206
  %422 = phi i8* [ %373, %416 ], [ %373, %418 ], [ %316, %315 ], [ %271, %313 ], [ %213, %257 ], [ %207, %206 ]
  %423 = phi i32 [ 6, %416 ], [ 6, %418 ], [ 7, %315 ], [ 0, %313 ], [ %212, %257 ], [ 1, %206 ]
  %424 = phi i32 [ 1, %416 ], [ 1, %418 ], [ 0, %315 ], [ 1, %313 ], [ 1, %257 ], [ 1, %206 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %113) #14
  store i64 0, i64* %115, align 8
  %425 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %426 = icmp eq %"class.WTF::StringImpl"* %425, null
  br i1 %426, label %440, label %427

427:                                              ; preds = %421
  %428 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %425, i64 0, i32 1
  %429 = load i32, i32* %428, align 4
  %430 = icmp eq i32 %429, 0
  br i1 %430, label %440, label %431

431:                                              ; preds = %427
  %432 = bitcast i8* %422 to %"class.blink::CompositorAnimationCurve"*
  %433 = call noalias i8* @malloc(i64 8) #14
  %434 = bitcast i8* %433 to %"class.blink::CompositorKeyframeModel"*
  call void @_ZN5blink23CompositorKeyframeModelC1ERKNS_24CompositorAnimationCurveEN2cc14TargetProperty4TypeEiiRKN3WTF12AtomicStringE(%"class.blink::CompositorKeyframeModel"* %434, %"class.blink::CompositorAnimationCurve"* dereferenceable(8) %432, i32 %423, i32 0, i32 %2, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %23) #14
  %435 = ptrtoint i8* %433 to i64
  %436 = load %"class.blink::CompositorKeyframeModel"*, %"class.blink::CompositorKeyframeModel"** %114, align 8
  store i64 %435, i64* %115, align 8
  %437 = icmp eq %"class.blink::CompositorKeyframeModel"* %436, null
  br i1 %437, label %457, label %438

438:                                              ; preds = %431
  call void @_ZN5blink23CompositorKeyframeModelD1Ev(%"class.blink::CompositorKeyframeModel"* nonnull %436) #14
  %439 = bitcast %"class.blink::CompositorKeyframeModel"* %436 to i8*
  call void @free(i8* %439) #14
  br label %457

440:                                              ; preds = %421, %427
  %441 = icmp eq i32 %424, 1
  %442 = bitcast i8* %422 to %"class.blink::CompositorAnimationCurve"*
  %443 = call noalias i8* @malloc(i64 8) #14
  %444 = bitcast i8* %443 to %"class.blink::CompositorKeyframeModel"*
  br i1 %441, label %451, label %445

445:                                              ; preds = %440
  call void @_ZN5blink23CompositorKeyframeModelC1ERKNS_24CompositorAnimationCurveEN2cc14TargetProperty4TypeEiiNS4_17PaintWorkletInput18NativePropertyTypeE(%"class.blink::CompositorKeyframeModel"* %444, %"class.blink::CompositorAnimationCurve"* dereferenceable(8) %442, i32 %423, i32 0, i32 %2, i32 %424) #14
  %446 = ptrtoint i8* %443 to i64
  %447 = load %"class.blink::CompositorKeyframeModel"*, %"class.blink::CompositorKeyframeModel"** %114, align 8
  store i64 %446, i64* %115, align 8
  %448 = icmp eq %"class.blink::CompositorKeyframeModel"* %447, null
  br i1 %448, label %457, label %449

449:                                              ; preds = %445
  call void @_ZN5blink23CompositorKeyframeModelD1Ev(%"class.blink::CompositorKeyframeModel"* nonnull %447) #14
  %450 = bitcast %"class.blink::CompositorKeyframeModel"* %447 to i8*
  call void @free(i8* %450) #14
  br label %457

451:                                              ; preds = %440
  call void @_ZN5blink23CompositorKeyframeModelC1ERKNS_24CompositorAnimationCurveEN2cc14TargetProperty4TypeEii(%"class.blink::CompositorKeyframeModel"* %444, %"class.blink::CompositorAnimationCurve"* dereferenceable(8) %442, i32 %423, i32 0, i32 %2) #14
  %452 = ptrtoint i8* %443 to i64
  %453 = load %"class.blink::CompositorKeyframeModel"*, %"class.blink::CompositorKeyframeModel"** %114, align 8
  store i64 %452, i64* %115, align 8
  %454 = icmp eq %"class.blink::CompositorKeyframeModel"* %453, null
  br i1 %454, label %457, label %455

455:                                              ; preds = %451
  call void @_ZN5blink23CompositorKeyframeModelD1Ev(%"class.blink::CompositorKeyframeModel"* nonnull %453) #14
  %456 = bitcast %"class.blink::CompositorKeyframeModel"* %453 to i8*
  call void @free(i8* %456) #14
  br label %457

457:                                              ; preds = %451, %455, %445, %449, %431, %438
  br i1 %116, label %460, label %458

458:                                              ; preds = %457
  %459 = load %"class.blink::CompositorKeyframeModel"*, %"class.blink::CompositorKeyframeModel"** %114, align 8
  call void @_ZN5blink23CompositorKeyframeModel12SetStartTimeEd(%"class.blink::CompositorKeyframeModel"* %459, double %4) #14
  br label %460

460:                                              ; preds = %457, %458
  %461 = load i32, i32* %97, align 8
  %462 = and i32 %461, 1
  %463 = icmp eq i32 %462, 0
  %464 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %99, align 8
  %465 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %464, i64 0, i32 1, i32 0, i32 0
  %466 = select i1 %463, %"class.blink::NodeRenderingData"** %100, %"class.blink::NodeRenderingData"** %465
  %467 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %466, align 8
  %468 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %467, i64 0, i32 1
  %469 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %468, align 8
  %470 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %469, i64 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %471 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %470, align 8
  %472 = icmp eq %"struct.blink::FragmentData::RareData"* %471, null
  br i1 %472, label %481, label %473

473:                                              ; preds = %460
  %474 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %471, i64 0, i32 1
  %475 = load i64, i64* %474, align 8
  %476 = icmp eq i64 %475, 0
  br i1 %476, label %481, label %477

477:                                              ; preds = %473
  %478 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %202, align 8
  %479 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %478, i64 0, i32 1
  %480 = load i32, i32* %479, align 8
  br label %494

481:                                              ; preds = %460, %473
  %482 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase40is_composite_bg_color_animation_enabled_E, align 1, !range !8
  %483 = icmp ne i8 %482, 0
  %484 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %202, align 8
  %485 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %484, i64 0, i32 1
  %486 = load i32, i32* %485, align 8
  %487 = icmp eq i32 %486, 52
  %488 = and i1 %483, %487
  %489 = icmp eq i32 %486, 1
  %490 = or i1 %489, %488
  br i1 %490, label %503, label %491

491:                                              ; preds = %481
  %492 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %471, i64 0, i32 1
  %493 = load i64, i64* %492, align 8
  br label %494

494:                                              ; preds = %477, %491
  %495 = phi i32 [ %486, %491 ], [ %480, %477 ]
  %496 = phi i64 [ %493, %491 ], [ %475, %477 ]
  switch i32 %495, label %499 [
    i32 251, label %500
    i32 47, label %500
    i32 293, label %497
    i32 298, label %497
    i32 377, label %497
    i32 369, label %497
    i32 145, label %498
    i32 52, label %500
    i32 1, label %500
  ]

497:                                              ; preds = %494, %494, %494, %494
  br label %500

498:                                              ; preds = %494
  br label %500

499:                                              ; preds = %494
  br label %500

500:                                              ; preds = %494, %494, %494, %494, %497, %498, %499
  %501 = phi i32 [ 0, %499 ], [ 6, %498 ], [ 5, %497 ], [ 4, %494 ], [ 4, %494 ], [ 4, %494 ], [ 4, %494 ]
  %502 = call i64 @_ZN5blink37CompositorElementIdFromUniqueObjectIdEmNS_28CompositorElementIdNamespaceE(i64 %496, i32 %501) #14
  br label %503

503:                                              ; preds = %500, %481
  %504 = phi i64 [ %117, %481 ], [ %502, %500 ]
  %505 = load %"class.blink::CompositorKeyframeModel"*, %"class.blink::CompositorKeyframeModel"** %114, align 8
  call void @_ZN5blink23CompositorKeyframeModel12SetElementIdEN2cc9ElementIdE(%"class.blink::CompositorKeyframeModel"* %505, i64 %504) #14
  %506 = load %"class.blink::CompositorKeyframeModel"*, %"class.blink::CompositorKeyframeModel"** %114, align 8
  %507 = load double, double* %118, align 8
  call void @_ZN5blink23CompositorKeyframeModel13SetIterationsEd(%"class.blink::CompositorKeyframeModel"* %506, double %507) #14
  %508 = load %"class.blink::CompositorKeyframeModel"*, %"class.blink::CompositorKeyframeModel"** %114, align 8
  %509 = load double, double* %119, align 8
  call void @_ZN5blink23CompositorKeyframeModel17SetIterationStartEd(%"class.blink::CompositorKeyframeModel"* %508, double %509) #14
  %510 = load %"class.blink::CompositorKeyframeModel"*, %"class.blink::CompositorKeyframeModel"** %114, align 8
  %511 = load i64, i64* %120, align 8
  call void @_ZN5blink23CompositorKeyframeModel13SetTimeOffsetEN4base9TimeDeltaE(%"class.blink::CompositorKeyframeModel"* %510, i64 %511) #14
  %512 = load %"class.blink::CompositorKeyframeModel"*, %"class.blink::CompositorKeyframeModel"** %114, align 8
  call void @_ZN5blink23CompositorKeyframeModel12SetDirectionEN3gfx13KeyframeModel9DirectionE(%"class.blink::CompositorKeyframeModel"* %512, i32 %122) #14
  %513 = load %"class.blink::CompositorKeyframeModel"*, %"class.blink::CompositorKeyframeModel"** %114, align 8
  %514 = load double, double* %123, align 8
  call void @_ZN5blink23CompositorKeyframeModel15SetPlaybackRateEd(%"class.blink::CompositorKeyframeModel"* %513, double %514) #14
  %515 = load %"class.blink::CompositorKeyframeModel"*, %"class.blink::CompositorKeyframeModel"** %114, align 8
  %516 = load i32, i32* %124, align 8
  call void @_ZN5blink23CompositorKeyframeModel11SetFillModeEN3gfx13KeyframeModel8FillModeE(%"class.blink::CompositorKeyframeModel"* %515, i32 %516) #14
  %517 = load i32, i32* %125, align 4
  %518 = load i32, i32* %126, align 8
  %519 = icmp eq i32 %517, %518
  br i1 %519, label %528, label %520, !prof !7

520:                                              ; preds = %503
  %521 = load %"class.std::__1::unique_ptr.2737"*, %"class.std::__1::unique_ptr.2737"** %127, align 8
  %522 = zext i32 %517 to i64
  %523 = getelementptr inbounds %"class.std::__1::unique_ptr.2737", %"class.std::__1::unique_ptr.2737"* %521, i64 %522
  %524 = load i64, i64* %115, align 8
  store %"class.blink::CompositorKeyframeModel"* null, %"class.blink::CompositorKeyframeModel"** %114, align 8
  %525 = bitcast %"class.std::__1::unique_ptr.2737"* %523 to i64*
  store i64 %524, i64* %525, align 8
  %526 = load i32, i32* %125, align 4
  %527 = add i32 %526, 1
  store i32 %527, i32* %125, align 4
  br label %529

528:                                              ; preds = %503
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink23CompositorKeyframeModelENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.2734"* %7, %"class.std::__1::unique_ptr.2737"* nonnull dereferenceable(8) %24) #14
  br label %529

529:                                              ; preds = %520, %528
  %530 = load %"class.blink::CompositorKeyframeModel"*, %"class.blink::CompositorKeyframeModel"** %114, align 8
  store %"class.blink::CompositorKeyframeModel"* null, %"class.blink::CompositorKeyframeModel"** %114, align 8
  %531 = icmp eq %"class.blink::CompositorKeyframeModel"* %530, null
  br i1 %531, label %534, label %532

532:                                              ; preds = %529
  call void @_ZN5blink23CompositorKeyframeModelD1Ev(%"class.blink::CompositorKeyframeModel"* nonnull %530) #14
  %533 = bitcast %"class.blink::CompositorKeyframeModel"* %530 to i8*
  call void @free(i8* %533) #14
  br label %534

534:                                              ; preds = %532, %529
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113) #14
  %535 = bitcast i8* %422 to %"class.blink::CompositorAnimationCurve"*
  %536 = bitcast i8* %422 to void (%"class.blink::CompositorAnimationCurve"*)***
  %537 = load void (%"class.blink::CompositorAnimationCurve"*)**, void (%"class.blink::CompositorAnimationCurve"*)*** %536, align 8
  %538 = getelementptr inbounds void (%"class.blink::CompositorAnimationCurve"*)*, void (%"class.blink::CompositorAnimationCurve"*)** %537, i64 1
  %539 = load void (%"class.blink::CompositorAnimationCurve"*)*, void (%"class.blink::CompositorAnimationCurve"*)** %538, align 8
  call void %539(%"class.blink::CompositorAnimationCurve"* nonnull %535) #14
  br label %540

540:                                              ; preds = %200, %534
  %541 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %542 = icmp eq %"class.WTF::StringImpl"* %541, null
  br i1 %542, label %556, label %543

543:                                              ; preds = %540
  %544 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %541, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %545 = load atomic i32, i32* %544 monotonic, align 4
  %546 = and i32 %545, 2
  %547 = icmp eq i32 %546, 0
  %548 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %541, i64 0, i32 0
  %549 = load i32, i32* %548, align 4
  br i1 %547, label %550, label %552

550:                                              ; preds = %543
  %551 = add i32 %549, -1
  store i32 %551, i32* %548, align 4
  br label %552

552:                                              ; preds = %550, %543
  %553 = phi i32 [ %551, %550 ], [ %549, %543 ]
  %554 = icmp eq i32 %553, 0
  br i1 %554, label %555, label %556

555:                                              ; preds = %552
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %541) #14
  br label %556

556:                                              ; preds = %540, %552, %555
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #14
  %557 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %172, i64 1
  %558 = icmp eq %"class.blink::PropertyHandle"* %557, %39
  br i1 %558, label %585, label %559

559:                                              ; preds = %556, %582
  %560 = phi %"class.blink::PropertyHandle"* [ %583, %582 ], [ %557, %556 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %128) #14
  store i32 0, i32* %129, align 8, !alias.scope !30
  call void @llvm.memset.p0i8.i64(i8* align 8 %131, i8 0, i64 16, i1 false) #14, !alias.scope !30
  %561 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %560, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %20) #14
  %562 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %563 = icmp eq %"class.WTF::StringImpl"* %562, null
  br i1 %563, label %577, label %564

564:                                              ; preds = %559
  %565 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %562, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %566 = load atomic i32, i32* %565 monotonic, align 4
  %567 = and i32 %566, 2
  %568 = icmp eq i32 %567, 0
  %569 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %562, i64 0, i32 0
  %570 = load i32, i32* %569, align 4
  br i1 %568, label %571, label %573

571:                                              ; preds = %564
  %572 = add i32 %570, -1
  store i32 %572, i32* %569, align 4
  br label %573

573:                                              ; preds = %571, %564
  %574 = phi i32 [ %572, %571 ], [ %570, %564 ]
  %575 = icmp eq i32 %574, 0
  br i1 %575, label %576, label %577

576:                                              ; preds = %573
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %562) #14
  br label %577

577:                                              ; preds = %576, %573, %559
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %128) #14
  %578 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %560, i64 0, i32 0
  %579 = load i32, i32* %578, align 8
  %580 = icmp eq i32 %579, 1
  %581 = or i1 %561, %580
  br i1 %581, label %582, label %585

582:                                              ; preds = %577
  %583 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %560, i64 1
  %584 = icmp eq %"class.blink::PropertyHandle"* %583, %39
  br i1 %584, label %585, label %559

585:                                              ; preds = %577, %582, %556
  %586 = phi %"class.blink::PropertyHandle"* [ %39, %556 ], [ %560, %577 ], [ %39, %582 ]
  %587 = icmp eq %"class.blink::PropertyHandle"* %586, %83
  br i1 %587, label %133, label %171
}

declare i32 @_ZNK5blink23CompositorKeyframeModel2IdEv(%"class.blink::CompositorKeyframeModel"*) local_unnamed_addr #3

declare void @_ZN5blink19CompositorAnimation16AddKeyframeModelENSt3__110unique_ptrINS_23CompositorKeyframeModelENS1_14default_deleteIS3_EEEE(%"class.blink::CompositorAnimation"*, %"class.blink::CompositorKeyframeModel"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20CompositorAnimations27CancelAnimationOnCompositorERKNS_7ElementEPNS_19CompositorAnimationEiRKNS_11EffectModelE(%"class.blink::Element"* dereferenceable(104), %"class.blink::CompositorAnimation"*, i32, %"class.blink::EffectModel"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %5 = tail call i32 @_ZN5blink20CompositorAnimations32CheckCanStartElementOnCompositorERKNS_7ElementERKNS_11EffectModelE(%"class.blink::Element"* dereferenceable(104) %0, %"class.blink::EffectModel"* dereferenceable(8) %3)
  %6 = icmp eq i32 %5, 0
  %7 = icmp ne %"class.blink::CompositorAnimation"* %1, null
  %8 = and i1 %7, %6
  br i1 %8, label %9, label %10

9:                                                ; preds = %4
  tail call void @_ZN5blink19CompositorAnimation19RemoveKeyframeModelEi(%"class.blink::CompositorAnimation"* nonnull %1, i32 %2) #14
  br label %10

10:                                               ; preds = %4, %9
  ret void
}

declare void @_ZN5blink19CompositorAnimation19RemoveKeyframeModelEi(%"class.blink::CompositorAnimation"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20CompositorAnimations36PauseAnimationForTestingOnCompositorERKNS_7ElementERKNS_9AnimationEiN4base9TimeDeltaERKNS_11EffectModelE(%"class.blink::Element"* nocapture readnone dereferenceable(104), %"class.blink::Animation"* dereferenceable(368), i32, i64, %"class.blink::EffectModel"* nocapture readnone dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %6 = bitcast %"class.blink::Animation"* %1 to %"class.blink::CompositorAnimation"* (%"class.blink::Animation"*)***
  %7 = load %"class.blink::CompositorAnimation"* (%"class.blink::Animation"*)**, %"class.blink::CompositorAnimation"* (%"class.blink::Animation"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::CompositorAnimation"* (%"class.blink::Animation"*)*, %"class.blink::CompositorAnimation"* (%"class.blink::Animation"*)** %7, i64 44
  %9 = load %"class.blink::CompositorAnimation"* (%"class.blink::Animation"*)*, %"class.blink::CompositorAnimation"* (%"class.blink::Animation"*)** %8, align 8
  %10 = tail call %"class.blink::CompositorAnimation"* %9(%"class.blink::Animation"* %1) #14
  tail call void @_ZN5blink19CompositorAnimation18PauseKeyframeModelEiN4base9TimeDeltaE(%"class.blink::CompositorAnimation"* %10, i32 %2, i64 %3) #14
  ret void
}

declare void @_ZN5blink19CompositorAnimation18PauseKeyframeModelEiN4base9TimeDeltaE(%"class.blink::CompositorAnimation"*, i32, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20CompositorAnimations22AttachCompositedLayersERNS_7ElementEPNS_19CompositorAnimationE(%"class.blink::Element"* nocapture readonly dereferenceable(104), %"class.blink::CompositorAnimation"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"struct.cc::ElementId", align 8
  %4 = icmp eq %"class.blink::CompositorAnimation"* %1, null
  br i1 %4, label %26, label %5

5:                                                ; preds = %2
  %6 = bitcast %"struct.cc::ElementId"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %12 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRareData"**
  %13 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %13, i64 0, i32 1, i32 0, i32 0
  %15 = bitcast %"class.blink::NodeData"** %11 to %"class.blink::NodeRenderingData"**
  %16 = select i1 %10, %"class.blink::NodeRenderingData"** %15, %"class.blink::NodeRenderingData"** %14
  %17 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %17, i64 0, i32 1
  %19 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %19, i64 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %21 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %20, align 8
  %22 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %21, i64 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = tail call i64 @_ZN5blink37CompositorElementIdFromUniqueObjectIdEmNS_28CompositorElementIdNamespaceE(i64 %23, i32 4) #14
  %25 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %3, i64 0, i32 0
  store i64 %24, i64* %25, align 8
  call void @_ZN5blink19CompositorAnimation13AttachElementERKN2cc9ElementIdE(%"class.blink::CompositorAnimation"* nonnull %1, %"struct.cc::ElementId"* nonnull dereferenceable(8) %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  br label %26

26:                                               ; preds = %2, %5
  ret void
}

declare void @_ZN5blink19CompositorAnimation13AttachElementERKN2cc9ElementIdE(%"class.blink::CompositorAnimation"*, %"struct.cc::ElementId"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_119AddKeyframesToCurveINS_29CompositorFloatAnimationCurveEJEEEvRT_RKNS_10HeapVectorINS_6MemberINS_8Keyframe24PropertySpecificKeyframeEEELj0EEEDpT0_(%"class.blink::CompositorFloatAnimationCurve"* dereferenceable(16), %"class.blink::HeapVector.1363"* dereferenceable(16)) unnamed_addr #1 {
  %3 = alloca %"class.blink::CompositorFloatKeyframe", align 8
  %4 = getelementptr inbounds %"class.blink::HeapVector.1363", %"class.blink::HeapVector.1363"* %1, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::HeapVector.1363", %"class.blink::HeapVector.1363"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = add i32 %6, -1
  %8 = tail call dereferenceable(8) %"class.blink::Member.1369"* @_ZNK3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1366"* %4, i32 %7) #14
  %9 = getelementptr inbounds %"class.blink::Member.1369", %"class.blink::Member.1369"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::HeapVector.1363", %"class.blink::HeapVector.1363"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::Member.1369"*, %"class.blink::Member.1369"** %11, align 8
  %13 = load i32, i32* %5, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.blink::Member.1369", %"class.blink::Member.1369"* %12, i64 %14
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %2
  %18 = bitcast %"class.blink::CompositorFloatKeyframe"* %3 to i8*
  br label %20

19:                                               ; preds = %32, %2
  ret void

20:                                               ; preds = %17, %32
  %21 = phi %"class.blink::Member.1369"* [ %12, %17 ], [ %47, %32 ]
  %22 = getelementptr inbounds %"class.blink::Member.1369", %"class.blink::Member.1369"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %22, align 8
  %24 = icmp eq %"class.blink::Keyframe::PropertySpecificKeyframe"* %23, %10
  br i1 %24, label %25, label %29

25:                                               ; preds = %20
  %26 = call %"class.blink::LinearTimingFunction"* @_ZN5blink20LinearTimingFunction6SharedEv()
  %27 = getelementptr inbounds %"class.blink::LinearTimingFunction", %"class.blink::LinearTimingFunction"* %26, i64 0, i32 0
  %28 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %22, align 8
  br label %32

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %23, i64 0, i32 2, i32 0
  %31 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %30, align 8
  br label %32

32:                                               ; preds = %29, %25
  %33 = phi %"class.blink::Keyframe::PropertySpecificKeyframe"* [ %28, %25 ], [ %23, %29 ]
  %34 = phi %"class.blink::TimingFunction"* [ %27, %25 ], [ %31, %29 ]
  %35 = bitcast %"class.blink::Keyframe::PropertySpecificKeyframe"* %33 to %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)***
  %36 = load %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)**, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*** %35, align 8
  %37 = getelementptr inbounds %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %36, i64 6
  %38 = load %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)*, %"class.blink::CompositorKeyframeValue"* (%"class.blink::Keyframe::PropertySpecificKeyframe"*)** %37, align 8
  %39 = call %"class.blink::CompositorKeyframeValue"* %38(%"class.blink::Keyframe::PropertySpecificKeyframe"* %33) #14
  %40 = load %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"** %22, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #14
  %41 = getelementptr inbounds %"class.blink::Keyframe::PropertySpecificKeyframe", %"class.blink::Keyframe::PropertySpecificKeyframe"* %40, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 16, i1 false) #14
  %42 = load double, double* %41, align 8
  %43 = getelementptr inbounds %"class.blink::CompositorKeyframeValue", %"class.blink::CompositorKeyframeValue"* %39, i64 1
  %44 = bitcast %"class.blink::CompositorKeyframeValue"* %43 to double*
  %45 = load double, double* %44, align 8
  %46 = fptrunc double %45 to float
  call void @_ZN5blink23CompositorFloatKeyframeC1EdfRKNS_14TimingFunctionE(%"class.blink::CompositorFloatKeyframe"* nonnull %3, double %42, float %46, %"class.blink::TimingFunction"* dereferenceable(16) %34) #14
  call void @_ZN5blink29CompositorFloatAnimationCurve11AddKeyframeERKNS_23CompositorFloatKeyframeE(%"class.blink::CompositorFloatAnimationCurve"* %0, %"class.blink::CompositorFloatKeyframe"* nonnull dereferenceable(16) %3) #14
  call void @_ZN5blink23CompositorFloatKeyframeD1Ev(%"class.blink::CompositorFloatKeyframe"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #14
  %47 = getelementptr inbounds %"class.blink::Member.1369", %"class.blink::Member.1369"* %21, i64 1
  %48 = icmp eq %"class.blink::Member.1369"* %47, %15
  br i1 %48, label %19, label %20
}

declare void @_ZN5blink29CompositorFloatAnimationCurve17SetTimingFunctionERKNS_14TimingFunctionE(%"class.blink::CompositorFloatAnimationCurve"*, %"class.blink::TimingFunction"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN5blink29CompositorFloatAnimationCurve17SetScaledDurationEd(%"class.blink::CompositorFloatAnimationCurve"*, double) local_unnamed_addr #3

declare void @_ZN5blink30CompositorFilterAnimationCurve17SetTimingFunctionERKNS_14TimingFunctionE(%"class.blink::CompositorFilterAnimationCurve"*, %"class.blink::TimingFunction"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN5blink30CompositorFilterAnimationCurve17SetScaledDurationEd(%"class.blink::CompositorFilterAnimationCurve"*, double) local_unnamed_addr #3

declare { <2 x float>, <2 x float> } @_ZN5blink18ComputedStyleUtils24ReferenceBoxForTransformERKNS_12LayoutObjectENS0_18UsePixelSnappedBoxE(%"class.blink::LayoutObject"* dereferenceable(88), i32) local_unnamed_addr #3

declare void @_ZN5blink33CompositorTransformAnimationCurve17SetTimingFunctionERKNS_14TimingFunctionE(%"class.blink::CompositorTransformAnimationCurve"*, %"class.blink::TimingFunction"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN5blink33CompositorTransformAnimationCurve17SetScaledDurationEd(%"class.blink::CompositorTransformAnimationCurve"*, double) local_unnamed_addr #3

declare void @_ZN5blink29CompositorColorAnimationCurve17SetTimingFunctionERKNS_14TimingFunctionE(%"class.blink::CompositorColorAnimationCurve"*, %"class.blink::TimingFunction"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN5blink29CompositorColorAnimationCurve17SetScaledDurationEd(%"class.blink::CompositorColorAnimationCurve"*, double) local_unnamed_addr #3

declare void @_ZN5blink23CompositorKeyframeModel12SetStartTimeEd(%"class.blink::CompositorKeyframeModel"*, double) local_unnamed_addr #3

declare void @_ZN5blink23CompositorKeyframeModel12SetElementIdEN2cc9ElementIdE(%"class.blink::CompositorKeyframeModel"*, i64) local_unnamed_addr #3

declare void @_ZN5blink23CompositorKeyframeModel13SetIterationsEd(%"class.blink::CompositorKeyframeModel"*, double) local_unnamed_addr #3

declare void @_ZN5blink23CompositorKeyframeModel17SetIterationStartEd(%"class.blink::CompositorKeyframeModel"*, double) local_unnamed_addr #3

declare void @_ZN5blink23CompositorKeyframeModel13SetTimeOffsetEN4base9TimeDeltaE(%"class.blink::CompositorKeyframeModel"*, i64) local_unnamed_addr #3

declare void @_ZN5blink23CompositorKeyframeModel12SetDirectionEN3gfx13KeyframeModel9DirectionE(%"class.blink::CompositorKeyframeModel"*, i32) local_unnamed_addr #3

declare void @_ZN5blink23CompositorKeyframeModel15SetPlaybackRateEd(%"class.blink::CompositorKeyframeModel"*, double) local_unnamed_addr #3

declare void @_ZN5blink23CompositorKeyframeModel11SetFillModeEN3gfx13KeyframeModel8FillModeE(%"class.blink::CompositorKeyframeModel"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink20CompositorAnimations28CheckUsesCompositedScrollingEPNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #1 align 2 {
  %2 = icmp eq %"class.blink::Node"* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink4Node23GetLayoutBoxModelObjectEv(%"class.blink::Node"* nonnull %0) #14
  %5 = icmp eq %"class.blink::LayoutBoxModelObject"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = tail call zeroext i1 @_ZNK5blink20LayoutBoxModelObject23UsesCompositedScrollingEv(%"class.blink::LayoutBoxModelObject"* nonnull %4) #14
  br label %8

8:                                                ; preds = %6, %3, %1
  %9 = phi i1 [ false, %1 ], [ %7, %6 ], [ false, %3 ]
  ret i1 %9
}

declare zeroext i1 @_ZNK5blink20LayoutBoxModelObject23UsesCompositedScrollingEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink10SVGElement27HasNonCSSPropertyAnimationsEv(%"class.blink::SVGElement"*) local_unnamed_addr #3

declare dereferenceable(24) %"class.blink::HeapHashSet.1885"* @_ZNK5blink10SVGElement19InstancesForElementEv(%"class.blink::SVGElement"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink20CompositorAnimations44CanStartTransformAnimationOnCompositorForSVGERKNS_10SVGElementE(%"class.blink::SVGElement"* dereferenceable(168)) local_unnamed_addr #1 align 2 {
  %2 = tail call zeroext i1 @_ZNK5blink10SVGElement27HasNonCSSPropertyAnimationsEv(%"class.blink::SVGElement"* %0) #14
  %3 = select i1 %2, i32 64, i32 0
  %4 = tail call dereferenceable(24) %"class.blink::HeapHashSet.1885"* @_ZNK5blink10SVGElement19InstancesForElementEv(%"class.blink::SVGElement"* %0) #14
  %5 = getelementptr inbounds %"class.blink::HeapHashSet.1885", %"class.blink::HeapHashSet.1885"* %4, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  %8 = or i32 %3, 32
  %9 = select i1 %7, i32 %3, i32 %8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %68

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %17 = bitcast %"class.blink::NodeData"** %16 to %"class.blink::NodeRareData"**
  %18 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %18, i64 0, i32 1, i32 0, i32 0
  %20 = bitcast %"class.blink::NodeData"** %16 to %"class.blink::NodeRenderingData"**
  %21 = select i1 %15, %"class.blink::NodeRenderingData"** %20, %"class.blink::NodeRenderingData"** %19
  %22 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %22, i64 0, i32 1
  %24 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %23, align 8
  %25 = icmp eq %"class.blink::LayoutObject"* %24, null
  br i1 %25, label %68, label %26

26:                                               ; preds = %11
  %27 = bitcast %"class.blink::LayoutObject"* %24 to i1 (%"class.blink::LayoutObject"*, i32)***
  %28 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %27, align 8
  %29 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %28, i64 92
  %30 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.blink::LayoutObject"* nonnull %24, i32 73) #14
  br i1 %31, label %68, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 0, i32 5, i32 0
  %34 = bitcast %"class.blink::ComputedStyle"** %33 to %"class.blink::ComputedStyleBase"**
  %35 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %35, i64 0, i32 1, i32 0, i32 0
  %37 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %37, i64 0, i32 2, i32 0, i32 0
  %39 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %39, i64 0, i32 6
  %41 = load float, float* %40, align 8
  %42 = fcmp une float %41, 1.000000e+00
  br i1 %42, label %68, label %43

43:                                               ; preds = %32
  %44 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %27, align 8
  %45 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %44, i64 92
  %46 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %45, align 8
  %47 = tail call zeroext i1 %46(%"class.blink::LayoutObject"* nonnull %24, i32 71) #14
  br i1 %47, label %48, label %62

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 2, i32 1, i32 1
  %50 = bitcast i8* %49 to float*
  %51 = load float, float* %50, align 4
  %52 = fcmp ogt float %51, 0xBE80000000000000
  %53 = fcmp olt float %51, 0x3E80000000000000
  %54 = and i1 %52, %53
  br i1 %54, label %55, label %68

55:                                               ; preds = %48
  %56 = getelementptr inbounds i8, i8* %49, i64 4
  %57 = bitcast i8* %56 to float*
  %58 = load float, float* %57, align 4
  %59 = fcmp ogt float %58, 0xBE80000000000000
  %60 = fcmp olt float %58, 0x3E80000000000000
  %61 = and i1 %59, %60
  br i1 %61, label %62, label %68

62:                                               ; preds = %55, %43
  %63 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 0, i32 4
  %64 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %63 to i96*
  %65 = load i96, i96* %64, align 4
  %66 = and i96 %65, 2361183241434822606848
  %67 = icmp eq i96 %66, 0
  br label %68

68:                                               ; preds = %62, %55, %48, %32, %26, %11, %1
  %69 = phi i1 [ false, %1 ], [ %67, %62 ], [ true, %11 ], [ false, %26 ], [ false, %32 ], [ false, %55 ], [ false, %48 ]
  ret i1 %69
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZNK5blink23KeyframeEffectModelBase20EnsureKeyframeGroupsEv(%"class.blink::KeyframeEffectModelBase"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1358"* @_ZNK3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EES2_EEPKS8_RKT0_(%"class.WTF::HashTable.1356"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #7 comdat align 2 {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable.1356", %"class.WTF::HashTable.1356"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1358"*, %"struct.WTF::KeyValuePair.1358"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1358"* %5, null
  br i1 %6, label %66, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::HashTable.1356", %"class.WTF::HashTable.1356"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, -1
  %11 = zext i32 %10 to i64
  %12 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #14
  %13 = and i32 %12, %10
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.1358", %"struct.WTF::KeyValuePair.1358"* %5, i64 %14
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.1358", %"struct.WTF::KeyValuePair.1358"* %15, i64 0, i32 0
  %17 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %16, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #14
  br i1 %17, label %66, label %18

18:                                               ; preds = %7
  %19 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %20 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %21 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %22 = bitcast %union.anon.1341* %21 to i8*
  %23 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %24 = xor i32 %12, -1
  %25 = lshr i32 %12, 23
  %26 = add i32 %25, %24
  %27 = shl i32 %26, 12
  %28 = xor i32 %27, %26
  %29 = lshr i32 %28, 7
  %30 = xor i32 %29, %28
  %31 = shl i32 %30, 2
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 20
  %34 = xor i32 %33, %32
  %35 = or i32 %34, 1
  %36 = zext i32 %35 to i64
  br label %37

37:                                               ; preds = %18, %58
  %38 = phi %"class.blink::PropertyHandle"* [ %16, %18 ], [ %64, %58 ]
  %39 = phi i64 [ %14, %18 ], [ %62, %58 ]
  %40 = phi i64 [ 0, %18 ], [ %60, %58 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #14
  store i32 0, i32* %20, align 8, !alias.scope !35
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #14, !alias.scope !35
  %41 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %38, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #14
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #14
  br label %57

57:                                               ; preds = %37, %53, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #14
  br i1 %41, label %66, label %58

58:                                               ; preds = %57
  %59 = icmp eq i64 %40, 0
  %60 = select i1 %59, i64 %36, i64 %40
  %61 = add i64 %60, %39
  %62 = and i64 %61, %11
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.1358", %"struct.WTF::KeyValuePair.1358"* %5, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1358", %"struct.WTF::KeyValuePair.1358"* %63, i64 0, i32 0
  %65 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %64, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #14
  br i1 %65, label %66, label %37

66:                                               ; preds = %58, %57, %7, %2
  %67 = phi %"struct.WTF::KeyValuePair.1358"* [ null, %2 ], [ %15, %7 ], [ %63, %58 ], [ null, %57 ]
  ret %"struct.WTF::KeyValuePair.1358"* %67
}

declare i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::PropertyHandle"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS2_SF_EENS_18HashTableAddResultISA_S2_EEOT0_OT1_(%"class.WTF::HashTable.1338"*, %"class.blink::PropertyHandle"* dereferenceable(24), %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.blink::PropertyHandle", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.1338", %"class.WTF::HashTable.1338"* %0, i64 0, i32 0
  %6 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %5, align 8
  %7 = icmp eq %"class.blink::PropertyHandle"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call %"class.blink::PropertyHandle"* @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.1338"* %0, %"class.blink::PropertyHandle"* null)
  %10 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %5, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi %"class.blink::PropertyHandle"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashTable.1338", %"class.WTF::HashTable.1338"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #14
  %18 = and i32 %17, %15
  %19 = zext i32 %18 to i64
  %20 = bitcast %"class.blink::PropertyHandle"* %4 to i8*
  %21 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 0
  %22 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 1
  %23 = bitcast %union.anon.1341* %22 to i8*
  %24 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %25 = xor i32 %17, -1
  %26 = lshr i32 %17, 23
  %27 = add i32 %26, %25
  %28 = shl i32 %27, 12
  %29 = xor i32 %28, %27
  %30 = lshr i32 %29, 7
  %31 = xor i32 %30, %29
  %32 = shl i32 %31, 2
  %33 = xor i32 %32, %31
  %34 = lshr i32 %33, 20
  %35 = xor i32 %34, %33
  %36 = or i32 %35, 1
  %37 = zext i32 %36 to i64
  br label %38

38:                                               ; preds = %62, %11
  %39 = phi i64 [ 0, %11 ], [ %68, %62 ]
  %40 = phi i64 [ %19, %11 ], [ %70, %62 ]
  %41 = phi %"class.blink::PropertyHandle"* [ null, %11 ], [ %66, %62 ]
  %42 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %12, i64 %40
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #14
  store i32 0, i32* %21, align 8, !alias.scope !40
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #14, !alias.scope !40
  %43 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %42, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %4) #14
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #14
  br label %59

59:                                               ; preds = %38, %55, %58
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #14
  br i1 %43, label %71, label %60

60:                                               ; preds = %59
  %61 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %42, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #14
  br i1 %61, label %139, label %62

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %42, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %64, 1
  %66 = select i1 %65, %"class.blink::PropertyHandle"* %42, %"class.blink::PropertyHandle"* %41
  %67 = icmp eq i64 %39, 0
  %68 = select i1 %67, i64 %37, i64 %39
  %69 = add i64 %68, %40
  %70 = and i64 %69, %16
  br label %38

71:                                               ; preds = %59
  %72 = icmp eq %"class.blink::PropertyHandle"* %41, null
  br i1 %72, label %73, label %75

73:                                               ; preds = %71
  %74 = bitcast %"class.blink::PropertyHandle"* %42 to i8*
  br label %83

75:                                               ; preds = %71
  %76 = bitcast %"class.blink::PropertyHandle"* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 0, i64 24, i1 false) #14
  %77 = getelementptr inbounds %"class.WTF::HashTable.1338", %"class.WTF::HashTable.1338"* %0, i64 0, i32 3
  %78 = load i32, i32* %77, align 8
  %79 = add i32 %78, 2147483647
  %80 = and i32 %79, 2147483647
  %81 = and i32 %78, -2147483648
  %82 = or i32 %80, %81
  store i32 %82, i32* %77, align 8
  br label %83

83:                                               ; preds = %73, %75
  %84 = phi i8* [ %74, %73 ], [ %76, %75 ]
  %85 = phi %"class.blink::PropertyHandle"* [ %42, %73 ], [ %41, %75 ]
  %86 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %86, i64 16, i1 false) #14
  %87 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %85, i64 0, i32 2
  %88 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %108, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %108

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = zext i32 %98 to i33
  %100 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %99, i33 1) #14
  %101 = extractvalue { i33, i1 } %100, 1
  %102 = extractvalue { i33, i1 } %100, 0
  %103 = icmp slt i33 %102, 0
  %104 = or i1 %101, %103
  br i1 %104, label %105, label %106, !prof !7

105:                                              ; preds = %96
  call void @llvm.trap() #14
  unreachable

106:                                              ; preds = %96
  %107 = trunc i33 %102 to i32
  store i32 %107, i32* %97, align 4
  br label %108

108:                                              ; preds = %106, %91, %83
  %109 = ptrtoint %"class.WTF::StringImpl"* %89 to i64
  %110 = bitcast %"class.WTF::AtomicString"* %87 to i64*
  %111 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %87, i64 0, i32 0, i32 0, i32 0
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  store i64 %109, i64* %110, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %113, label %127, label %114

114:                                              ; preds = %108
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %120 = load i32, i32* %119, align 4
  br i1 %118, label %121, label %123

121:                                              ; preds = %114
  %122 = add i32 %120, -1
  store i32 %122, i32* %119, align 4
  br label %123

123:                                              ; preds = %121, %114
  %124 = phi i32 [ %122, %121 ], [ %120, %114 ]
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %123
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %112) #14
  br label %127

127:                                              ; preds = %108, %123, %126
  %128 = getelementptr inbounds %"class.WTF::HashTable.1338", %"class.WTF::HashTable.1338"* %0, i64 0, i32 2
  %129 = load i32, i32* %128, align 4
  %130 = add i32 %129, 1
  store i32 %130, i32* %128, align 4
  %131 = getelementptr inbounds %"class.WTF::HashTable.1338", %"class.WTF::HashTable.1338"* %0, i64 0, i32 3
  %132 = load i32, i32* %131, align 8
  %133 = add i32 %132, %130
  %134 = shl i32 %133, 1
  %135 = load i32, i32* %13, align 8
  %136 = icmp ult i32 %134, %135
  br i1 %136, label %139, label %137

137:                                              ; preds = %127
  %138 = call %"class.blink::PropertyHandle"* @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.1338"* %0, %"class.blink::PropertyHandle"* %85)
  br label %139

139:                                              ; preds = %60, %127, %137
  %140 = phi i8 [ 1, %127 ], [ 1, %137 ], [ 0, %60 ]
  %141 = phi %"class.blink::PropertyHandle"* [ %85, %127 ], [ %138, %137 ], [ %42, %60 ]
  %142 = insertvalue { %"class.blink::PropertyHandle"*, i8 } undef, %"class.blink::PropertyHandle"* %141, 0
  %143 = insertvalue { %"class.blink::PropertyHandle"*, i8 } %142, i8 %140, 1
  ret { %"class.blink::PropertyHandle"*, i8 } %143
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::PropertyHandle"* @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.1338"*, %"class.blink::PropertyHandle"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1338", %"class.WTF::HashTable.1338"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1338", %"class.WTF::HashTable.1338"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #14
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #14
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* %22, i8* %23) #14
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #14
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #14
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #14
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 24
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14PropertyHandleEEEPKcv, i64 0, i64 0)) #14
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #14
  %36 = bitcast i8* %35 to %"class.blink::PropertyHandle"*
  %37 = call %"class.blink::PropertyHandle"* @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSB_(%"class.WTF::HashTable.1338"* %0, %"class.blink::PropertyHandle"* %36, i32 %32, %"class.blink::PropertyHandle"* %1) #14
  ret %"class.blink::PropertyHandle"* %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::PropertyHandle"* @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSB_(%"class.WTF::HashTable.1338"*, %"class.blink::PropertyHandle"*, i32, %"class.blink::PropertyHandle"*) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.blink::PropertyHandle", align 8
  %6 = alloca %"class.WTF::HashTable.1338", align 8
  %7 = bitcast %"class.WTF::HashTable.1338"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.WTF::HashTable.1338", %"class.WTF::HashTable.1338"* %6, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.1338", %"class.WTF::HashTable.1338"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.WTF::HashTable.1338", %"class.WTF::HashTable.1338"* %6, i64 0, i32 2
  %11 = getelementptr inbounds %"class.WTF::HashTable.1338", %"class.WTF::HashTable.1338"* %6, i64 0, i32 3
  %12 = bitcast %"class.WTF::HashTable.1338"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  store %"class.blink::PropertyHandle"* %1, %"class.blink::PropertyHandle"** %8, align 8
  store i32 %2, i32* %9, align 8
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 8
  %13 = getelementptr inbounds %"class.WTF::HashTable.1338", %"class.WTF::HashTable.1338"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::HashTable.1338", %"class.WTF::HashTable.1338"* %0, i64 0, i32 0
  br i1 %15, label %17, label %20

17:                                               ; preds = %4
  %18 = ptrtoint %"class.blink::PropertyHandle"* %1 to i64
  %19 = bitcast %"class.WTF::HashTable.1338"* %6 to i64*
  br label %29

20:                                               ; preds = %4
  %21 = bitcast %"class.blink::PropertyHandle"* %5 to i8*
  %22 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 0
  %23 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 1
  %24 = bitcast %union.anon.1341* %23 to i8*
  %25 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %73

26:                                               ; preds = %134
  %27 = bitcast %"class.WTF::HashTable.1338"* %6 to i64*
  %28 = load i64, i64* %27, align 8
  br label %29

29:                                               ; preds = %17, %26
  %30 = phi i64* [ %19, %17 ], [ %27, %26 ]
  %31 = phi i64 [ %18, %17 ], [ %28, %26 ]
  %32 = phi %"class.blink::PropertyHandle"* [ null, %17 ], [ %135, %26 ]
  %33 = phi i32 [ 0, %17 ], [ %136, %26 ]
  %34 = bitcast %"class.WTF::HashTable.1338"* %0 to i64*
  %35 = load i64, i64* %34, align 8
  store atomic i64 %31, i64* %34 monotonic, align 8
  store i32 %2, i32* %13, align 8
  store i64 %35, i64* %30, align 8
  store i32 %33, i32* %9, align 8
  %36 = inttoptr i64 %35 to %"class.blink::PropertyHandle"*
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %69, label %38

38:                                               ; preds = %29
  %39 = icmp eq i32 %33, 0
  br i1 %39, label %67, label %40

40:                                               ; preds = %38
  %41 = zext i32 %33 to i64
  br label %42

42:                                               ; preds = %64, %40
  %43 = phi i64 [ 0, %40 ], [ %65, %64 ]
  %44 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %36, i64 %43, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %64, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %36, i64 %43, i32 2, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #14
  br label %64

64:                                               ; preds = %63, %60, %47, %42
  %65 = add nuw nsw i64 %43, 1
  %66 = icmp eq i64 %65, %41
  br i1 %66, label %67, label %42

67:                                               ; preds = %64, %38
  %68 = inttoptr i64 %35 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %68) #14
  store atomic i64 0, i64* %30 monotonic, align 8
  store i32 0, i32* %9, align 8
  store i32 0, i32* %10, align 4
  br label %69

69:                                               ; preds = %29, %67
  %70 = getelementptr inbounds %"class.WTF::HashTable.1338", %"class.WTF::HashTable.1338"* %0, i64 0, i32 3
  %71 = load i32, i32* %70, align 8
  %72 = and i32 %71, -2147483648
  store i32 %72, i32* %70, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #14
  ret %"class.blink::PropertyHandle"* %32

73:                                               ; preds = %20, %134
  %74 = phi %"class.blink::PropertyHandle"* [ null, %20 ], [ %135, %134 ]
  %75 = phi i32 [ 0, %20 ], [ %136, %134 ]
  %76 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %16, align 8
  %77 = zext i32 %75 to i64
  %78 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %76, i64 %77
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #14
  store i32 0, i32* %22, align 8, !alias.scope !45
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #14, !alias.scope !45
  %79 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %78, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %5) #14
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %95, label %82

82:                                               ; preds = %73
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %91

89:                                               ; preds = %82
  %90 = add i32 %88, -1
  store i32 %90, i32* %87, align 4
  br label %91

91:                                               ; preds = %89, %82
  %92 = phi i32 [ %90, %89 ], [ %88, %82 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #14
  br label %95

95:                                               ; preds = %73, %91, %94
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #14
  %96 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %78, i64 0, i32 0
  %97 = load i32, i32* %96, align 8
  %98 = icmp eq i32 %97, 1
  %99 = or i1 %79, %98
  br i1 %99, label %134, label %100

100:                                              ; preds = %95
  %101 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %16, align 8
  %102 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %101, i64 %77
  %103 = call { %"class.blink::PropertyHandle"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS6_S8_S9_EES2_EENSt3__14pairIPS2_bEERKT0_(%"class.WTF::HashTable.1338"* nonnull %6, %"class.blink::PropertyHandle"* dereferenceable(24) %102) #14
  %104 = extractvalue { %"class.blink::PropertyHandle"*, i8 } %103, 0
  %105 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %104, i64 0, i32 2, i32 0, i32 0, i32 0
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %121, label %108

108:                                              ; preds = %100
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  br i1 %112, label %115, label %117

115:                                              ; preds = %108
  %116 = add i32 %114, -1
  store i32 %116, i32* %113, align 4
  br label %117

117:                                              ; preds = %115, %108
  %118 = phi i32 [ %116, %115 ], [ %114, %108 ]
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %117
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #14
  br label %121

121:                                              ; preds = %100, %117, %120
  %122 = bitcast %"class.blink::PropertyHandle"* %104 to i8*
  %123 = bitcast %"class.blink::PropertyHandle"* %102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* align 8 %123, i64 16, i1 false) #14
  %124 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %104, i64 0, i32 2
  %125 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %101, i64 %77, i32 2
  %126 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %125, i64 0, i32 0, i32 0, i32 0
  %127 = bitcast %"class.WTF::AtomicString"* %125 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.WTF::AtomicString"* %124 to i64*
  store i64 %128, i64* %129, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %126, align 8
  %130 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %16, align 8
  %131 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %130, i64 %77
  %132 = icmp eq %"class.blink::PropertyHandle"* %131, %3
  %133 = select i1 %132, %"class.blink::PropertyHandle"* %104, %"class.blink::PropertyHandle"* %74
  br label %134

134:                                              ; preds = %95, %121
  %135 = phi %"class.blink::PropertyHandle"* [ %74, %95 ], [ %133, %121 ]
  %136 = add i32 %75, 1
  %137 = load i32, i32* %13, align 8
  %138 = icmp eq i32 %136, %137
  br i1 %138, label %26, label %73
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::PropertyHandle"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleES2_NS_17IdentityExtractorENS_11DefaultHashIS2_E4HashENS_10HashTraitsIS2_EES8_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS6_S8_S9_EES2_EENSt3__14pairIPS2_bEERKT0_(%"class.WTF::HashTable.1338"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #7 comdat align 2 {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable.1338", %"class.WTF::HashTable.1338"* %0, i64 0, i32 0
  %5 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1338", %"class.WTF::HashTable.1338"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, -1
  %9 = zext i32 %8 to i64
  %10 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #14
  %11 = and i32 %10, %8
  %12 = zext i32 %11 to i64
  %13 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %14 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %16 = bitcast %union.anon.1341* %15 to i8*
  %17 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %18 = xor i32 %10, -1
  %19 = lshr i32 %10, 23
  %20 = add i32 %19, %18
  %21 = shl i32 %20, 12
  %22 = xor i32 %21, %20
  %23 = lshr i32 %22, 7
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 2
  %26 = xor i32 %25, %24
  %27 = lshr i32 %26, 20
  %28 = xor i32 %27, %26
  %29 = or i32 %28, 1
  %30 = zext i32 %29 to i64
  br label %31

31:                                               ; preds = %60, %2
  %32 = phi i64 [ 0, %2 ], [ %64, %60 ]
  %33 = phi i64 [ 0, %2 ], [ %66, %60 ]
  %34 = phi i64 [ %12, %2 ], [ %68, %60 ]
  %35 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 %34
  %36 = ptrtoint %"class.blink::PropertyHandle"* %35 to i64
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #14
  store i32 0, i32* %14, align 8, !alias.scope !50
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #14, !alias.scope !50
  %37 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %35, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #14
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #14
  br label %53

53:                                               ; preds = %31, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #14
  br i1 %37, label %54, label %58

54:                                               ; preds = %53
  %55 = ptrtoint %"class.blink::PropertyHandle"* %35 to i64
  %56 = icmp eq i64 %32, 0
  %57 = select i1 %56, i64 %55, i64 %32
  br label %71

58:                                               ; preds = %53
  %59 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %35, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #14
  br i1 %59, label %69, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %35, i64 0, i32 0
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 1
  %64 = select i1 %63, i64 %36, i64 %32
  %65 = icmp eq i64 %33, 0
  %66 = select i1 %65, i64 %30, i64 %33
  %67 = add i64 %66, %34
  %68 = and i64 %67, %9
  br label %31

69:                                               ; preds = %58
  %70 = ptrtoint %"class.blink::PropertyHandle"* %35 to i64
  br label %71

71:                                               ; preds = %69, %54
  %72 = phi i64 [ %57, %54 ], [ %70, %69 ]
  %73 = phi i8 [ 0, %54 ], [ 1, %69 ]
  %74 = inttoptr i64 %72 to %"class.blink::PropertyHandle"*
  %75 = insertvalue { %"class.blink::PropertyHandle"*, i8 } undef, %"class.blink::PropertyHandle"* %74, 0
  %76 = insertvalue { %"class.blink::PropertyHandle"*, i8 } %75, i8 %73, 1
  ret { %"class.blink::PropertyHandle"*, i8 } %76
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink9Animation15PendingInternalEv(%"class.blink::Animation"*) local_unnamed_addr #3

declare i32 @_ZNK5blink9Animation27CalculateAnimationPlayStateEv(%"class.blink::Animation"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink9Animation25HasLowerCompositeOrderingEPKS0_S2_NS0_25CompareAnimationsOrderingE(%"class.blink::Animation"*, %"class.blink::Animation"*, i32) local_unnamed_addr #3

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink23GetCSSPropertyTransformEv() local_unnamed_addr #3

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink20GetCSSPropertyRotateEv() local_unnamed_addr #3

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink19GetCSSPropertyScaleEv() local_unnamed_addr #3

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink23GetCSSPropertyTranslateEv() local_unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #5

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #9

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.1369"* @_ZNK3WTF6VectorIN5blink6MemberINS1_8Keyframe24PropertySpecificKeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1366"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1366", %"class.WTF::Vector.1366"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.1366", %"class.WTF::Vector.1366"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.1369"*, %"class.blink::Member.1369"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.1369", %"class.blink::Member.1369"* %24, i64 %25
  ret %"class.blink::Member.1369"* %26
}

; Function Attrs: nounwind
declare void @_ZN5blink23CompositorKeyframeModelD1Ev(%"class.blink::CompositorKeyframeModel"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #8

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRiEEvOT_(%"class.WTF::Vector.2724"*, i32* dereferenceable(4)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2724", %"class.WTF::Vector.2724"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2724", %"class.WTF::Vector.2724"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp ugt i32* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i32, i32* %7, i64 %10
  %12 = icmp ugt i32* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2724", %"class.WTF::Vector.2724"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !14

24:                                               ; preds = %13
  %25 = icmp eq i32* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %26) #14
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #14
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.2724"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to i32*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 2
  %37 = ptrtoint i8* %28 to i64
  %38 = load i32*, i32** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne i32* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast i32* %38 to i8*
  br i1 %41, label %43, label %49, !prof !14

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #14
  %47 = bitcast %"class.WTF::Vector.2724"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #14
  %51 = bitcast %"class.WTF::Vector.2724"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to i32*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint i32* %1 to i64
  %56 = ptrtoint i32* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 2
  %59 = getelementptr inbounds %"class.WTF::Vector.2724", %"class.WTF::Vector.2724"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !14

69:                                               ; preds = %54
  %70 = icmp eq i32* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %71) #14
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #14
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.2724"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load i32*, i32** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne i32* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast i32* %78 to i8*
  br i1 %81, label %83, label %89, !prof !14

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #14
  %87 = bitcast %"class.WTF::Vector.2724"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #14
  %91 = bitcast %"class.WTF::Vector.2724"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 2
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to i32*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi i32* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds i32, i32* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi i32* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi i32* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %100, i64 %103
  %105 = load i32, i32* %101, align 4
  store i32 %105, i32* %104, align 4
  %106 = load i32, i32* %3, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.9, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #14
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

declare void @_ZN5blink29CompositorFloatAnimationCurveC1Ev(%"class.blink::CompositorFloatAnimationCurve"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LinearTimingFunction"* @_ZN5blink20LinearTimingFunction6SharedEv() local_unnamed_addr #1 comdat align 2 {
  %1 = alloca %"class.logging::CheckError", align 8
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink20LinearTimingFunction6SharedEvE6linear to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %31, !prof !55

4:                                                ; preds = %0
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink20LinearTimingFunction6SharedEvE6linear) #14
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %31, label %7

7:                                                ; preds = %4
  %8 = tail call noalias i8* @malloc(i64 16) #14
  %9 = getelementptr inbounds i8, i8* %8, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 1, i32* %10, align 4
  %11 = bitcast i8* %8 to i32 (...)***
  %12 = getelementptr inbounds i8, i8* %8, i64 12
  %13 = bitcast i8* %12 to i32*
  store i32 0, i32* %13, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink20LinearTimingFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %14 = icmp eq i8* %8, null
  br i1 %14, label %30, label %15

15:                                               ; preds = %7
  %16 = atomicrmw add i32* %10, i32 1 monotonic
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = bitcast %"class.logging::CheckError"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.10, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11, i64 0, i64 0)) #14
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %1) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %1) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #14
  br label %21

21:                                               ; preds = %18, %15
  %22 = atomicrmw sub i32* %10, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %21
  %25 = bitcast i8* %8 to %"class.blink::TimingFunction"*
  %26 = bitcast i8* %8 to void (%"class.blink::TimingFunction"*)***
  %27 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %27, i64 1
  %29 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %28, align 8
  call void %29(%"class.blink::TimingFunction"* nonnull %25) #14
  br label %30

30:                                               ; preds = %7, %21, %24
  store i8* %8, i8** bitcast (%"class.blink::LinearTimingFunction"** @_ZZN5blink20LinearTimingFunction6SharedEvE6linear to i8**), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink20LinearTimingFunction6SharedEvE6linear) #14
  br label %31

31:                                               ; preds = %4, %30, %0
  %32 = load %"class.blink::LinearTimingFunction"*, %"class.blink::LinearTimingFunction"** @_ZZN5blink20LinearTimingFunction6SharedEvE6linear, align 8
  ret %"class.blink::LinearTimingFunction"* %32
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #12

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #12

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #13

declare void @_ZN5blink23CompositorFloatKeyframeC1EdfRKNS_14TimingFunctionE(%"class.blink::CompositorFloatKeyframe"*, double, float, %"class.blink::TimingFunction"* dereferenceable(16)) unnamed_addr #3

declare void @_ZN5blink29CompositorFloatAnimationCurve11AddKeyframeERKNS_23CompositorFloatKeyframeE(%"class.blink::CompositorFloatAnimationCurve"*, %"class.blink::CompositorFloatKeyframe"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink23CompositorFloatKeyframeD1Ev(%"class.blink::CompositorFloatKeyframe"*) unnamed_addr #8

declare void @_ZN5blink30CompositorFilterAnimationCurveC1Ev(%"class.blink::CompositorFilterAnimationCurve"*) unnamed_addr #3

declare void @_ZN5blink19FilterEffectBuilderC1ERKNS_9FloatRectEfPKN2cc10PaintFlagsES7_10SkTileMode(%"class.blink::FilterEffectBuilder"*, %"class.blink::FloatRect"* dereferenceable(16), float, %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"*, i32) unnamed_addr #3

declare void @_ZNK5blink19FilterEffectBuilder21BuildFilterOperationsERKNS_16FilterOperationsE(%"class.blink::CompositorFilterOperations"* sret, %"class.blink::FilterEffectBuilder"*, %"class.blink::FilterOperations"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN5blink24CompositorFilterKeyframeC1EdNS_26CompositorFilterOperationsERKNS_14TimingFunctionE(%"class.blink::CompositorFilterKeyframe"*, double, %"class.blink::CompositorFilterOperations"*, %"class.blink::TimingFunction"* dereferenceable(16)) unnamed_addr #3

declare void @_ZN5blink30CompositorFilterAnimationCurve11AddKeyframeERKNS_24CompositorFilterKeyframeE(%"class.blink::CompositorFilterAnimationCurve"*, %"class.blink::CompositorFilterKeyframe"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink24CompositorFilterKeyframeD1Ev(%"class.blink::CompositorFilterKeyframe"*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN2cc16FilterOperationsD1Ev(%"class.cc::FilterOperations"*) unnamed_addr #8

declare void @_ZN5blink33CompositorTransformAnimationCurveC1Ev(%"class.blink::CompositorTransformAnimationCurve"*) unnamed_addr #3

declare void @_ZN5blink31ToCompositorTransformOperationsERKNS_19TransformOperationsEPNS_29CompositorTransformOperationsERKNS_9FloatSizeE(%"class.blink::TransformOperations"* dereferenceable(16), %"class.blink::CompositorTransformOperations"*, %"class.blink::FloatSize"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN5blink27CompositorTransformKeyframeC1EdNS_29CompositorTransformOperationsERKNS_14TimingFunctionE(%"class.blink::CompositorTransformKeyframe"*, double, %"class.blink::CompositorTransformOperations"*, %"class.blink::TimingFunction"* dereferenceable(16)) unnamed_addr #3

declare void @_ZN5blink33CompositorTransformAnimationCurve11AddKeyframeERKNS_27CompositorTransformKeyframeE(%"class.blink::CompositorTransformAnimationCurve"*, %"class.blink::CompositorTransformKeyframe"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink27CompositorTransformKeyframeD1Ev(%"class.blink::CompositorTransformKeyframe"*) unnamed_addr #8

declare void @_ZN3gfx19TransformOperationsC1Ev(%"class.gfx::TransformOperations"*) unnamed_addr #3

declare void @_ZN3gfx19TransformOperationsC1ERKS0_(%"class.gfx::TransformOperations"*, %"class.gfx::TransformOperations"* dereferenceable(64)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3gfx19TransformOperationsD1Ev(%"class.gfx::TransformOperations"*) unnamed_addr #8

declare void @_ZN5blink29CompositorColorAnimationCurveC1Ev(%"class.blink::CompositorColorAnimationCurve"*) unnamed_addr #3

declare void @_ZN5blink23CompositorColorKeyframeC1EdjRKNS_14TimingFunctionE(%"class.blink::CompositorColorKeyframe"*, double, i32, %"class.blink::TimingFunction"* dereferenceable(16)) unnamed_addr #3

declare void @_ZN5blink29CompositorColorAnimationCurve11AddKeyframeERKNS_23CompositorColorKeyframeE(%"class.blink::CompositorColorAnimationCurve"*, %"class.blink::CompositorColorKeyframe"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink23CompositorColorKeyframeD1Ev(%"class.blink::CompositorColorKeyframe"*) unnamed_addr #8

declare void @_ZN5blink23CompositorKeyframeModelC1ERKNS_24CompositorAnimationCurveEN2cc14TargetProperty4TypeEiiRKN3WTF12AtomicStringE(%"class.blink::CompositorKeyframeModel"*, %"class.blink::CompositorAnimationCurve"* dereferenceable(8), i32, i32, i32, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #3

declare void @_ZN5blink23CompositorKeyframeModelC1ERKNS_24CompositorAnimationCurveEN2cc14TargetProperty4TypeEiiNS4_17PaintWorkletInput18NativePropertyTypeE(%"class.blink::CompositorKeyframeModel"*, %"class.blink::CompositorAnimationCurve"* dereferenceable(8), i32, i32, i32, i32) unnamed_addr #3

declare void @_ZN5blink23CompositorKeyframeModelC1ERKNS_24CompositorAnimationCurveEN2cc14TargetProperty4TypeEii(%"class.blink::CompositorKeyframeModel"*, %"class.blink::CompositorAnimationCurve"* dereferenceable(8), i32, i32, i32) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink23CompositorKeyframeModelENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.2734"*, %"class.std::__1::unique_ptr.2737"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2734", %"class.WTF::Vector.2734"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2734", %"class.WTF::Vector.2734"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.2737"*, %"class.std::__1::unique_ptr.2737"** %6, align 8
  %8 = icmp ugt %"class.std::__1::unique_ptr.2737"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.2737", %"class.std::__1::unique_ptr.2737"* %7, i64 %10
  %12 = icmp ugt %"class.std::__1::unique_ptr.2737"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2734", %"class.WTF::Vector.2734"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !14

24:                                               ; preds = %13
  %25 = icmp eq %"class.std::__1::unique_ptr.2737"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink23CompositorKeyframeModelENS2_14default_deleteIS5_EEEEEEmm(i64 %26) #14
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink23CompositorKeyframeModelENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #14
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.2734"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.std::__1::unique_ptr.2737"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.std::__1::unique_ptr.2737"*, %"class.std::__1::unique_ptr.2737"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.std::__1::unique_ptr.2737"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.std::__1::unique_ptr.2737"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !14

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #14
  %47 = bitcast %"class.WTF::Vector.2734"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #14
  %51 = bitcast %"class.WTF::Vector.2734"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.std::__1::unique_ptr.2737"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.std::__1::unique_ptr.2737"* %1 to i64
  %56 = ptrtoint %"class.std::__1::unique_ptr.2737"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.2734", %"class.WTF::Vector.2734"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !14

69:                                               ; preds = %54
  %70 = icmp eq %"class.std::__1::unique_ptr.2737"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink23CompositorKeyframeModelENS2_14default_deleteIS5_EEEEEEmm(i64 %71) #14
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink23CompositorKeyframeModelENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #14
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.2734"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.std::__1::unique_ptr.2737"*, %"class.std::__1::unique_ptr.2737"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.std::__1::unique_ptr.2737"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.std::__1::unique_ptr.2737"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !14

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #14
  %87 = bitcast %"class.WTF::Vector.2734"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #14
  %91 = bitcast %"class.WTF::Vector.2734"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.std::__1::unique_ptr.2737"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.std::__1::unique_ptr.2737"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.2737", %"class.std::__1::unique_ptr.2737"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.std::__1::unique_ptr.2737"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.std::__1::unique_ptr.2737"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.2737", %"class.std::__1::unique_ptr.2737"* %100, i64 %103
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.2737", %"class.std::__1::unique_ptr.2737"* %101, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.2737"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::CompositorKeyframeModel"* null, %"class.blink::CompositorKeyframeModel"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.2737"* %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink23CompositorKeyframeModelENS2_14default_deleteIS5_EEEEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.9, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #14
  ret i64 %21
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind }
attributes #13 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { nounwind readnone }
attributes #16 = { noreturn nounwind }
attributes #17 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!4 = distinct !{!4, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!5 = distinct !{!5, !6, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!6 = distinct !{!6, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!7 = !{!"branch_weights", i32 1, i32 2000}
!8 = !{i8 0, i8 2}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!11 = distinct !{!11, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!12 = distinct !{!12, !13, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!13 = distinct !{!13, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!14 = !{!"branch_weights", i32 2000, i32 1}
!15 = !{!16, !18}
!16 = distinct !{!16, !17, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!17 = distinct !{!17, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!18 = distinct !{!18, !19, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!19 = distinct !{!19, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!20 = !{!21, !23}
!21 = distinct !{!21, !22, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!22 = distinct !{!22, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!23 = distinct !{!23, !24, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!24 = distinct !{!24, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!25 = !{!26, !28}
!26 = distinct !{!26, !27, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!27 = distinct !{!27, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!28 = distinct !{!28, !29, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!29 = distinct !{!29, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!30 = !{!31, !33}
!31 = distinct !{!31, !32, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!32 = distinct !{!32, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!33 = distinct !{!33, !34, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!34 = distinct !{!34, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!35 = !{!36, !38}
!36 = distinct !{!36, !37, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!37 = distinct !{!37, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!38 = distinct !{!38, !39, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!39 = distinct !{!39, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!40 = !{!41, !43}
!41 = distinct !{!41, !42, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!42 = distinct !{!42, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!43 = distinct !{!43, !44, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!44 = distinct !{!44, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!45 = !{!46, !48}
!46 = distinct !{!46, !47, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!47 = distinct !{!47, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!48 = distinct !{!48, !49, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!49 = distinct !{!49, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!50 = !{!51, !53}
!51 = distinct !{!51, !52, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!52 = distinct !{!52, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!53 = distinct !{!53, !54, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!54 = distinct !{!54, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!55 = !{!"branch_weights", i32 1, i32 1048575}
