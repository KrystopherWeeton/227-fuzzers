; ModuleID = '../../third_party/icu/source/common/lsr.cpp'
source_filename = "../../third_party/icu/source/common/lsr.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.icu_69::MaybeStackArray" = type <{ i8*, i32, i8, [40 x i8], [3 x i8] }>
%"struct.icu_69::LSR" = type <{ i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%"class.icu_69::CharString" = type { %"class.icu_69::MaybeStackArray", i32, [4 x i8] }
%"class.icu_69::StringPiece" = type <{ i8*, i32, [4 x i8] }>

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ev = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ei10UErrorCode = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE6resizeEii = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EED5Ev = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE12releaseArrayEv = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5EOS1_ = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE17resetToStackArrayEv = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEaSEOS1_ = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE11getCapacityEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE8getAliasEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE13getArrayLimitEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EEixEl = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEixEl = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE12aliasInsteadEPci = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE13orphanOrCloneEiRi = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE8copyFromERKS1_R10UErrorCode = comdat any

@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1

@_ZN6icu_6915MaybeStackArrayIcLi40EEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ev
@_ZN6icu_6915MaybeStackArrayIcLi40EEC1Ei10UErrorCode = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*, i32, i32), void (%"class.icu_69::MaybeStackArray"*, i32, i32)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ei10UErrorCode
@_ZN6icu_6915MaybeStackArrayIcLi40EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EED2Ev
@_ZN6icu_6915MaybeStackArrayIcLi40EEC1EOS1_ = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2EOS1_
@_ZN6icu_693LSRC1EcPKcS2_S2_iR10UErrorCode = hidden unnamed_addr alias void (%"struct.icu_69::LSR"*, i8, i8*, i8*, i8*, i32, i32*), void (%"struct.icu_69::LSR"*, i8, i8*, i8*, i8*, i32, i32*)* @_ZN6icu_693LSRC2EcPKcS2_S2_iR10UErrorCode
@_ZN6icu_693LSRC1EOS0_ = hidden unnamed_addr alias void (%"struct.icu_69::LSR"*, %"struct.icu_69::LSR"*), void (%"struct.icu_69::LSR"*, %"struct.icu_69::LSR"*)* @_ZN6icu_693LSRC2EOS0_

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ev(%"class.icu_69::MaybeStackArray"*) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %3, i8** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ei10UErrorCode(%"class.icu_69::MaybeStackArray"*, i32, i32) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ei10UErrorCode) align 2 {
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %5, i8** %4, align 8
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %7, align 4
  %8 = icmp slt i32 %2, 1
  %9 = icmp sgt i32 %1, 40
  %10 = and i1 %9, %8
  br i1 %10, label %11, label %21

11:                                               ; preds = %3
  %12 = sext i32 %1 to i64
  %13 = tail call noalias i8* @uprv_malloc_69(i64 %12) #10
  %14 = icmp eq i8* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = load i8, i8* %7, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %15
  %19 = load i8*, i8** %4, align 8
  tail call void @uprv_free_69(i8* %19) #11
  br label %20

20:                                               ; preds = %18, %15
  store i8* %13, i8** %4, align 8
  store i32 %1, i32* %6, align 8
  store i8 1, i8* %7, align 4
  br label %21

21:                                               ; preds = %3, %11, %20
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i8* @_ZN6icu_6915MaybeStackArrayIcLi40EE6resizeEii(%"class.icu_69::MaybeStackArray"*, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %31

5:                                                ; preds = %3
  %6 = sext i32 %1 to i64
  %7 = tail call noalias i8* @uprv_malloc_69(i64 %6) #10
  %8 = icmp eq i8* %7, null
  br i1 %8, label %31, label %9

9:                                                ; preds = %5
  %10 = icmp sgt i32 %2, 0
  br i1 %10, label %11, label %21

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp slt i32 %13, %2
  %15 = select i1 %14, i32 %13, i32 %2
  %16 = icmp sgt i32 %15, %1
  %17 = select i1 %16, i32 %1, i32 %15
  %18 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = sext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %7, i8* align 1 %19, i64 %20, i1 false)
  br label %21

21:                                               ; preds = %11, %9
  %22 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %23 = load i8, i8* %22, align 4
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @uprv_free_69(i8* %27) #11
  br label %28

28:                                               ; preds = %21, %25
  %29 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %7, i8** %29, align 8
  %30 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %1, i32* %30, align 8
  store i8 1, i8* %22, align 4
  br label %31

31:                                               ; preds = %3, %28, %5
  %32 = phi i8* [ null, %5 ], [ %7, %28 ], [ null, %3 ]
  ret i8* %32
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EED2Ev(%"class.icu_69::MaybeStackArray"*) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void @uprv_free_69(i8* %7) #11
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE12releaseArrayEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void @uprv_free_69(i8* %7) #11
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2EOS1_(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56)) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5EOS1_) align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %4 = bitcast %"class.icu_69::MaybeStackArray"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.icu_69::MaybeStackArray"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 2
  %12 = load i8, i8* %11, align 4
  store i8 %12, i8* %10, align 4
  %13 = load i8*, i8** %3, align 8
  %14 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 3, i64 0
  %15 = icmp eq i8* %13, %14
  br i1 %15, label %16, label %21

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %18 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %18, i8** %17, align 8
  %19 = load i32, i32* %8, align 8
  %20 = sext i32 %19 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %13, i64 %20, i1 false)
  br label %22

21:                                               ; preds = %2
  store i8* %14, i8** %3, align 8
  store i32 40, i32* %8, align 8
  store i8 0, i8* %11, align 4
  br label %22

22:                                               ; preds = %21, %16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE17resetToStackArrayEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %2, i8** %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden dereferenceable(56) %"class.icu_69::MaybeStackArray"* @_ZN6icu_6915MaybeStackArrayIcLi40EEaSEOS1_(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @uprv_free_69(i8* %8) #11
  br label %9

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %11, i32* %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 2
  %14 = load i8, i8* %13, align 4
  store i8 %14, i8* %3, align 4
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 3, i64 0
  %18 = icmp eq i8* %16, %17
  br i1 %18, label %19, label %24

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %21 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %20, i8** %21, align 8
  %22 = load i32, i32* %10, align 8
  %23 = sext i32 %22 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %16, i64 %23, i1 false)
  br label %26

24:                                               ; preds = %9
  %25 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %16, i8** %25, align 8
  store i8* %17, i8** %15, align 8
  store i32 40, i32* %10, align 8
  store i8 0, i8* %13, align 4
  br label %26

26:                                               ; preds = %24, %19
  ret %"class.icu_69::MaybeStackArray"* %0
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK6icu_6915MaybeStackArrayIcLi40EE11getCapacityEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EE8getAliasEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EE13getArrayLimitEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds i8, i8* %3, i64 %6
  ret i8* %7
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(1) i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EEixEl(%"class.icu_69::MaybeStackArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 %1
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(1) i8* @_ZN6icu_6915MaybeStackArrayIcLi40EEixEl(%"class.icu_69::MaybeStackArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 %1
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE12aliasInsteadEPci(%"class.icu_69::MaybeStackArray"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ne i8* %1, null
  %5 = icmp sgt i32 %2, 0
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %17

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  tail call void @uprv_free_69(i8* %13) #11
  br label %14

14:                                               ; preds = %7, %11
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %1, i8** %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %2, i32* %16, align 8
  store i8 0, i8* %8, align 4
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i8* @_ZN6icu_6915MaybeStackArrayIcLi40EE13orphanOrCloneEiRi(%"class.icu_69::MaybeStackArray"*, i32, i32* dereferenceable(4)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  br label %23

10:                                               ; preds = %3
  %11 = icmp slt i32 %1, 1
  br i1 %11, label %29, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp slt i32 %14, %1
  %16 = select i1 %15, i32 %14, i32 %1
  %17 = sext i32 %16 to i64
  %18 = tail call noalias i8* @uprv_malloc_69(i64 %17) #10
  %19 = icmp eq i8* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %18, i8* align 1 %22, i64 %17, i1 false)
  br label %23

23:                                               ; preds = %20, %7
  %24 = phi i32 [ %1, %7 ], [ %16, %20 ]
  %25 = phi i8* [ %9, %7 ], [ %18, %20 ]
  store i32 %24, i32* %2, align 4
  %26 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %27 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %26, i8** %27, align 8
  %28 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %28, align 8
  store i8 0, i8* %4, align 4
  br label %29

29:                                               ; preds = %12, %10, %23
  %30 = phi i8* [ %25, %23 ], [ null, %10 ], [ null, %12 ]
  ret i8* %30
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE8copyFromERKS1_R10UErrorCode(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %27

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %21

10:                                               ; preds = %6
  %11 = sext i32 %8 to i64
  %12 = tail call noalias i8* @uprv_malloc_69(i64 %11) #10
  %13 = icmp eq i8* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %16 = load i8, i8* %15, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @uprv_free_69(i8* %20) #11
  br label %22

21:                                               ; preds = %10, %6
  store i32 7, i32* %2, align 4
  br label %27

22:                                               ; preds = %18, %14
  %23 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %12, i8** %23, align 8
  %24 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %8, i32* %24, align 8
  store i8 1, i8* %15, align 4
  %25 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 %26, i64 %11, i1 false)
  br label %27

27:                                               ; preds = %3, %21, %22
  ret void
}

declare void @uprv_free_69(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_693LSRC2EcPKcS2_S2_iR10UErrorCode(%"struct.icu_69::LSR"* nocapture, i8 signext, i8*, i8*, i8*, i32, i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %8 = alloca %"class.icu_69::CharString", align 8
  %9 = alloca { i8*, i32 }, align 8
  %10 = alloca { i8*, i32 }, align 8
  %11 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %0, i64 0, i32 2
  %13 = bitcast %"struct.icu_69::LSR"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false)
  store i8* %4, i8** %12, align 8
  %14 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %0, i64 0, i32 3
  store i8* null, i8** %14, align 8
  %15 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %0, i64 0, i32 4
  %16 = load i8, i8* %4, align 1
  %17 = sext i8 %16 to i32
  %18 = add nsw i32 %17, -48
  %19 = icmp ult i32 %18, 10
  br i1 %19, label %20, label %42

20:                                               ; preds = %7
  %21 = getelementptr inbounds i8, i8* %4, i64 1
  %22 = load i8, i8* %21, align 1
  %23 = sext i8 %22 to i32
  %24 = add nsw i32 %23, -48
  %25 = icmp ugt i32 %24, 9
  br i1 %25, label %59, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds i8, i8* %4, i64 2
  %28 = load i8, i8* %27, align 1
  %29 = sext i8 %28 to i32
  %30 = add nsw i32 %29, -48
  %31 = icmp ugt i32 %30, 9
  br i1 %31, label %59, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds i8, i8* %4, i64 3
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %59

36:                                               ; preds = %32
  %37 = mul nsw i32 %18, 10
  %38 = add nuw nsw i32 %24, %37
  %39 = mul nsw i32 %38, 10
  %40 = or i32 %39, 1
  %41 = add nsw i32 %30, %40
  br label %59

42:                                               ; preds = %7
  %43 = add nsw i32 %17, -65
  %44 = icmp ugt i32 %43, 25
  br i1 %44, label %59, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds i8, i8* %4, i64 1
  %47 = load i8, i8* %46, align 1
  %48 = sext i8 %47 to i32
  %49 = add nsw i32 %48, -65
  %50 = icmp ugt i32 %49, 25
  br i1 %50, label %59, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds i8, i8* %4, i64 2
  %53 = load i8, i8* %52, align 1
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %59

55:                                               ; preds = %51
  %56 = mul nsw i32 %43, 26
  %57 = add nuw nsw i32 %56, 1001
  %58 = add nuw nsw i32 %57, %49
  br label %59

59:                                               ; preds = %20, %26, %32, %36, %42, %45, %51, %55
  %60 = phi i32 [ %41, %36 ], [ 0, %20 ], [ 0, %32 ], [ 0, %26 ], [ 0, %42 ], [ %58, %55 ], [ 0, %51 ], [ 0, %45 ]
  store i32 %60, i32* %15, align 8
  %61 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %0, i64 0, i32 5
  store i32 %5, i32* %61, align 4
  %62 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %0, i64 0, i32 6
  store i32 0, i32* %62, align 8
  %63 = load i32, i32* %6, align 4
  %64 = icmp sgt i32 %63, 0
  br i1 %64, label %102, label %65

65:                                               ; preds = %59
  %66 = bitcast { i8*, i32 }* %10 to %"class.icu_69::StringPiece"*
  %67 = bitcast { i8*, i32 }* %9 to %"class.icu_69::StringPiece"*
  %68 = bitcast %"class.icu_69::CharString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %68) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 -86, i64 64, i1 false)
  %69 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %8, i64 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %8, i64 0, i32 0, i32 3, i64 0
  store i8* %70, i8** %69, align 8
  %71 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %8, i64 0, i32 0, i32 1
  store i32 40, i32* %71, align 8
  %72 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %8, i64 0, i32 0, i32 2
  store i8 0, i8* %72, align 4
  %73 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %8, i64 0, i32 1
  store i32 0, i32* %73, align 8
  store i8 0, i8* %70, align 1
  %74 = call dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEcR10UErrorCode(%"class.icu_69::CharString"* nonnull %8, i8 signext %1, i32* dereferenceable(4) %6) #11
  call void @_ZN6icu_6911StringPieceC1EPKc(%"class.icu_69::StringPiece"* nonnull %67, i8* %2) #11
  %75 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %9, i64 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %9, i64 0, i32 1
  %78 = load i32, i32* %77, align 8
  %79 = call dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEPKciR10UErrorCode(%"class.icu_69::CharString"* %74, i8* %76, i32 %78, i32* dereferenceable(4) %6) #11
  %80 = call dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEcR10UErrorCode(%"class.icu_69::CharString"* %79, i8 signext 0, i32* dereferenceable(4) %6) #11
  %81 = load i32, i32* %73, align 8
  %82 = call dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEcR10UErrorCode(%"class.icu_69::CharString"* nonnull %8, i8 signext %1, i32* dereferenceable(4) %6) #11
  call void @_ZN6icu_6911StringPieceC1EPKc(%"class.icu_69::StringPiece"* nonnull %66, i8* %3) #11
  %83 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %10, i64 0, i32 0
  %84 = load i8*, i8** %83, align 8
  %85 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %10, i64 0, i32 1
  %86 = load i32, i32* %85, align 8
  %87 = call dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEPKciR10UErrorCode(%"class.icu_69::CharString"* %82, i8* %84, i32 %86, i32* dereferenceable(4) %6) #11
  %88 = call i8* @_ZNK6icu_6910CharString9cloneDataER10UErrorCode(%"class.icu_69::CharString"* nonnull %8, i32* dereferenceable(4) %6) #11
  store i8* %88, i8** %14, align 8
  %89 = load i32, i32* %6, align 4
  %90 = icmp sgt i32 %89, 0
  br i1 %90, label %96, label %91

91:                                               ; preds = %65
  %92 = ptrtoint i8* %88 to i64
  %93 = bitcast %"struct.icu_69::LSR"* %0 to i64*
  store i64 %92, i64* %93, align 8
  %94 = sext i32 %81 to i64
  %95 = getelementptr inbounds i8, i8* %88, i64 %94
  store i8* %95, i8** %11, align 8
  br label %96

96:                                               ; preds = %65, %91
  %97 = load i8, i8* %72, align 4
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %101, label %99

99:                                               ; preds = %96
  %100 = load i8*, i8** %69, align 8
  call void @uprv_free_69(i8* %100) #11
  br label %101

101:                                              ; preds = %96, %99
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %68) #11
  br label %102

102:                                              ; preds = %59, %101
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN6icu_693LSR14indexForRegionEPKc(i8* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = load i8, i8* %0, align 1
  %3 = sext i8 %2 to i32
  %4 = add nsw i32 %3, -48
  %5 = icmp ult i32 %4, 10
  br i1 %5, label %6, label %28

6:                                                ; preds = %1
  %7 = getelementptr inbounds i8, i8* %0, i64 1
  %8 = load i8, i8* %7, align 1
  %9 = sext i8 %8 to i32
  %10 = add nsw i32 %9, -48
  %11 = icmp ugt i32 %10, 9
  br i1 %11, label %45, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds i8, i8* %0, i64 2
  %14 = load i8, i8* %13, align 1
  %15 = sext i8 %14 to i32
  %16 = add nsw i32 %15, -48
  %17 = icmp ugt i32 %16, 9
  br i1 %17, label %45, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds i8, i8* %0, i64 3
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %45

22:                                               ; preds = %18
  %23 = mul nsw i32 %4, 10
  %24 = add nuw nsw i32 %10, %23
  %25 = mul nsw i32 %24, 10
  %26 = or i32 %25, 1
  %27 = add nsw i32 %26, %16
  br label %45

28:                                               ; preds = %1
  %29 = add nsw i32 %3, -65
  %30 = icmp ugt i32 %29, 25
  br i1 %30, label %45, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds i8, i8* %0, i64 1
  %33 = load i8, i8* %32, align 1
  %34 = sext i8 %33 to i32
  %35 = add nsw i32 %34, -65
  %36 = icmp ugt i32 %35, 25
  br i1 %36, label %45, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds i8, i8* %0, i64 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %45

41:                                               ; preds = %37
  %42 = mul nsw i32 %29, 26
  %43 = add nuw nsw i32 %42, 1001
  %44 = add nuw nsw i32 %43, %35
  br label %45

45:                                               ; preds = %41, %37, %31, %28, %22, %6, %18, %12
  %46 = phi i32 [ %27, %22 ], [ 0, %6 ], [ 0, %18 ], [ 0, %12 ], [ 0, %28 ], [ %44, %41 ], [ 0, %37 ], [ 0, %31 ]
  ret i32 %46
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEcR10UErrorCode(%"class.icu_69::CharString"*, i8 signext, i32* dereferenceable(4)) local_unnamed_addr #4

declare void @_ZN6icu_6911StringPieceC1EPKc(%"class.icu_69::StringPiece"*, i8*) unnamed_addr #4

declare i8* @_ZNK6icu_6910CharString9cloneDataER10UErrorCode(%"class.icu_69::CharString"*, i32* dereferenceable(4)) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6icu_693LSRC2EOS0_(%"struct.icu_69::LSR"* nocapture, %"struct.icu_69::LSR"* nocapture dereferenceable(48)) unnamed_addr #6 align 2 {
  %3 = bitcast %"struct.icu_69::LSR"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"struct.icu_69::LSR"* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %1, i64 0, i32 1
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast i8** %6 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %1, i64 0, i32 2
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast i8** %11 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %0, i64 0, i32 3
  %17 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %1, i64 0, i32 3
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast i8** %16 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %0, i64 0, i32 4
  %22 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %1, i64 0, i32 4
  %23 = load i32, i32* %22, align 8
  store i32 %23, i32* %21, align 8
  %24 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %0, i64 0, i32 5
  %25 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %1, i64 0, i32 5
  %26 = load i32, i32* %25, align 4
  store i32 %26, i32* %24, align 4
  %27 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %0, i64 0, i32 6
  %28 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %1, i64 0, i32 6
  %29 = load i32, i32* %28, align 8
  store i32 %29, i32* %27, align 8
  %30 = icmp eq i64 %19, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %2
  %32 = bitcast %"struct.icu_69::LSR"* %1 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)>, <2 x i8*>* %32, align 8
  store i8* null, i8** %17, align 8
  store i32 0, i32* %28, align 8
  br label %33

33:                                               ; preds = %2, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_693LSR11deleteOwnedEv(%"struct.icu_69::LSR"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %0, i64 0, i32 3
  %3 = load i8*, i8** %2, align 8
  tail call void @uprv_free_69(i8* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"struct.icu_69::LSR"* @_ZN6icu_693LSRaSEOS0_(%"struct.icu_69::LSR"* returned, %"struct.icu_69::LSR"* nocapture dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %0, i64 0, i32 3
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @uprv_free_69(i8* nonnull %4) #11
  br label %7

7:                                                ; preds = %2, %6
  %8 = bitcast %"struct.icu_69::LSR"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"struct.icu_69::LSR"* %0 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %1, i64 0, i32 1
  %12 = bitcast i8** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %0, i64 0, i32 1
  %15 = bitcast i8** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %1, i64 0, i32 2
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %0, i64 0, i32 2
  %20 = bitcast i8** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %1, i64 0, i32 4
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %0, i64 0, i32 4
  store i32 %22, i32* %23, align 8
  %24 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %1, i64 0, i32 5
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %0, i64 0, i32 5
  store i32 %25, i32* %26, align 4
  %27 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %1, i64 0, i32 3
  %28 = bitcast i8** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast i8** %3 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %1, i64 0, i32 6
  %32 = load i32, i32* %31, align 8
  %33 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %0, i64 0, i32 6
  store i32 %32, i32* %33, align 8
  %34 = icmp eq i64 %29, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %7
  %36 = bitcast %"struct.icu_69::LSR"* %1 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)>, <2 x i8*>* %36, align 8
  store i8* null, i8** %27, align 8
  store i32 0, i32* %31, align 8
  br label %37

37:                                               ; preds = %7, %35
  ret %"struct.icu_69::LSR"* %0
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden signext i8 @_ZNK6icu_693LSR14isEquivalentToERKS0_(%"struct.icu_69::LSR"* nocapture readonly, %"struct.icu_69::LSR"* nocapture readonly dereferenceable(48)) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %1, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = tail call i32 @strcmp(i8* %4, i8* %6) #12
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %32

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %0, i64 0, i32 1
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %1, i64 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = tail call i32 @strcmp(i8* %11, i8* %13) #12
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %32

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %0, i64 0, i32 4
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %1, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %22, label %32

22:                                               ; preds = %16
  %23 = icmp sgt i32 %18, 0
  br i1 %23, label %32, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %0, i64 0, i32 2
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %1, i64 0, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = tail call i32 @strcmp(i8* %26, i8* %28) #12
  %30 = icmp eq i32 %29, 0
  %31 = zext i1 %30 to i8
  br label %32

32:                                               ; preds = %22, %24, %16, %9, %2
  %33 = phi i8 [ 0, %16 ], [ 0, %9 ], [ 0, %2 ], [ 1, %22 ], [ %31, %24 ]
  ret i8 %33
}

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind readonly ssp uwtable
define hidden signext i8 @_ZNK6icu_693LSReqERKS0_(%"struct.icu_69::LSR"* nocapture readonly, %"struct.icu_69::LSR"* nocapture readonly dereferenceable(48)) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %1, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = tail call i32 @strcmp(i8* %4, i8* %6) #12
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %38

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %0, i64 0, i32 1
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %1, i64 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = tail call i32 @strcmp(i8* %11, i8* %13) #12
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %38

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %0, i64 0, i32 4
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %1, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %22, label %38

22:                                               ; preds = %16
  %23 = icmp sgt i32 %18, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %0, i64 0, i32 2
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %1, i64 0, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = tail call i32 @strcmp(i8* %26, i8* %28) #12
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %38

31:                                               ; preds = %24, %22
  %32 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %0, i64 0, i32 5
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %1, i64 0, i32 5
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %33, %35
  %37 = zext i1 %36 to i8
  br label %38

38:                                               ; preds = %31, %24, %16, %9, %2
  %39 = phi i8 [ 0, %24 ], [ 0, %16 ], [ 0, %9 ], [ 0, %2 ], [ %37, %31 ]
  ret i8 %39
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"struct.icu_69::LSR"* @_ZN6icu_693LSR11setHashCodeEv(%"struct.icu_69::LSR"* returned) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %26

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = tail call i64 @strlen(i8* %7) #12
  %9 = trunc i64 %8 to i32
  %10 = tail call i32 @ustr_hashCharsN_69(i8* %7, i32 %9) #11
  %11 = mul i32 %10, 37
  %12 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %0, i64 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = tail call i64 @strlen(i8* %13) #12
  %15 = trunc i64 %14 to i32
  %16 = tail call i32 @ustr_hashCharsN_69(i8* %13, i32 %15) #11
  %17 = add i32 %16, %11
  %18 = mul i32 %17, 37
  %19 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %0, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %18, %20
  %22 = mul i32 %21, 37
  %23 = getelementptr inbounds %"struct.icu_69::LSR", %"struct.icu_69::LSR"* %0, i64 0, i32 5
  %24 = load i32, i32* %23, align 4
  %25 = add i32 %22, %24
  store i32 %25, i32* %2, align 8
  br label %26

26:                                               ; preds = %5, %1
  ret %"struct.icu_69::LSR"* %0
}

declare i32 @ustr_hashCharsN_69(i8*, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEPKciR10UErrorCode(%"class.icu_69::CharString"*, i8*, i32, i32* dereferenceable(4)) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind allocsize(0) }
attributes #11 = { nounwind }
attributes #12 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
