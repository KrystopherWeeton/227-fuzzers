; ModuleID = '../../third_party/dav1d/libdav1d/src/lf_apply_tmpl.c'
source_filename = "../../third_party/dav1d/libdav1d/src/lf_apply_tmpl.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Dav1dFrameContext = type { %struct.Dav1dRef*, %struct.Dav1dSequenceHeader*, %struct.Dav1dRef*, %struct.Dav1dFrameHeader*, [7 x %struct.Dav1dThreadPicture], %struct.Dav1dPicture, %struct.Dav1dThreadPicture, %struct.Dav1dRef*, %struct.refmvs_temporal_block*, [7 x %struct.refmvs_temporal_block*], [7 x %struct.Dav1dRef*], %struct.Dav1dRef*, %struct.Dav1dRef*, i8*, i8*, [7 x i32], [7 x [7 x i32]], [7 x i8], %struct.CdfThreadContext, %struct.CdfThreadContext, %struct.Dav1dTileGroup*, i32, i32, [7 x [2 x %struct.ScalableMotionParams]], [2 x i32], [2 x i32], %struct.Dav1dContext*, %struct.Dav1dTileContext*, i32, %struct.Dav1dTileState*, i32, %struct.Dav1dDSPContext*, %struct.anon.38, i32, [3 x i8*], i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x [3 x [2 x i16]]], [19 x [3 x i8*]], %struct.BlockContext*, i32, %struct.refmvs_frame, [7 x [7 x i8]], i32, %struct.anon.45, %struct.anon.46, %struct.FrameTileThreadData, [8 x i8] }
%struct.Dav1dSequenceHeader = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [32 x %struct.Dav1dSequenceHeaderOperatingPoint], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [32 x %struct.Dav1dSequenceHeaderOperatingParameterInfo] }
%struct.Dav1dSequenceHeaderOperatingPoint = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.Dav1dSequenceHeaderOperatingParameterInfo = type { i32, i32, i32 }
%struct.Dav1dFrameHeader = type { %struct.anon, i32, [2 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [32 x %struct.Dav1dFrameHeaderOperatingPoint], i32, i32, i32, %struct.anon.0, i32, i32, i32, [7 x i32], i32, i32, i32, i32, i32, %struct.anon.1, %struct.anon.2, %struct.anon.3, %struct.anon.4, i32, %struct.anon.7, %struct.anon.8, %struct.anon.9, i32, i32, i32, i32, [2 x i32], i32, i32, [7 x %struct.Dav1dWarpedMotionParams] }
%struct.anon = type { %struct.Dav1dFilmGrainData, i32, i32 }
%struct.Dav1dFilmGrainData = type { i32, i32, [14 x [2 x i8]], i32, [2 x i32], [2 x [10 x [2 x i8]]], i32, i32, [24 x i8], [2 x [28 x i8]], i64, i32, [2 x i32], [2 x i32], [2 x i32], i32, i32 }
%struct.Dav1dFrameHeaderOperatingPoint = type { i32 }
%struct.anon.0 = type { i32, i32 }
%struct.anon.1 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [65 x i16], [65 x i16], i32 }
%struct.anon.2 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.anon.3 = type { i32, i32, i32, i32, %struct.Dav1dSegmentationDataSet, [8 x i32], [8 x i32] }
%struct.Dav1dSegmentationDataSet = type { [8 x %struct.Dav1dSegmentationData], i32, i32 }
%struct.Dav1dSegmentationData = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.anon.4 = type { %struct.anon.5, %struct.anon.6 }
%struct.anon.5 = type { i32, i32 }
%struct.anon.6 = type { i32, i32, i32 }
%struct.anon.7 = type { [2 x i32], i32, i32, i32, i32, %struct.Dav1dLoopfilterModeRefDeltas, i32 }
%struct.Dav1dLoopfilterModeRefDeltas = type { [2 x i32], [8 x i32] }
%struct.anon.8 = type { i32, i32, [8 x i32], [8 x i32] }
%struct.anon.9 = type { [3 x i32], [2 x i32] }
%struct.Dav1dWarpedMotionParams = type { i32, [6 x i32], %union.anon }
%union.anon = type { %struct.anon.10 }
%struct.anon.10 = type { i16, i16, i16, i16 }
%struct.Dav1dPicture = type { %struct.Dav1dSequenceHeader*, %struct.Dav1dFrameHeader*, [3 x i8*], [2 x i64], %struct.Dav1dPictureParameters, %struct.Dav1dDataProps, %struct.Dav1dContentLightLevel*, %struct.Dav1dMasteringDisplay*, %struct.Dav1dITUTT35*, [4 x i64], %struct.Dav1dRef*, %struct.Dav1dRef*, %struct.Dav1dRef*, %struct.Dav1dRef*, %struct.Dav1dRef*, [4 x i64], %struct.Dav1dRef*, i8* }
%struct.Dav1dPictureParameters = type { i32, i32, i32, i32 }
%struct.Dav1dDataProps = type { i64, i64, i64, i64, %struct.Dav1dUserData }
%struct.Dav1dUserData = type { i8*, %struct.Dav1dRef* }
%struct.Dav1dContentLightLevel = type { i32, i32 }
%struct.Dav1dMasteringDisplay = type { [3 x [2 x i16]], [2 x i16], i32, i32 }
%struct.Dav1dITUTT35 = type { i8, i8, i64, i8* }
%struct.Dav1dThreadPicture = type { %struct.Dav1dPicture, i32, i32, %struct.thread_data*, i32* }
%struct.thread_data = type { i64, %union.pthread_cond_t, %union.pthread_mutex_t, i32 }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.11, %union.anon.13, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.11 = type { i64 }
%union.anon.13 = type { i64 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.refmvs_temporal_block = type { %union.mv, i8 }
%union.mv = type { i32 }
%struct.Dav1dRef = type { i8*, i8*, i32, i32, void (i8*, i8*)*, i8* }
%struct.CdfThreadContext = type { %struct.Dav1dRef*, %union.anon.16, %struct.thread_data*, i32* }
%union.anon.16 = type { %struct.CdfContext* }
%struct.CdfContext = type { %struct.CdfModeContext, [5 x [5 x [16 x i16]]], %struct.CdfCoefContext, %struct.CdfMvContext, %struct.CdfMvContext }
%struct.CdfModeContext = type { [4 x [16 x i16]], [2 x [13 x [16 x i16]]], [9 x [16 x i16]], [5 x [4 x [16 x i16]]], [6 x [16 x i16]], [2 x [16 x i16]], [16 x i16], [2 x [13 x [8 x i16]]], [3 x [13 x [8 x i16]]], [8 x i16], [8 x [8 x i16]], [8 x i16], [8 x [8 x i16]], [3 x [8 x i16]], [2 x [7 x [8 x i16]]], [2 x [7 x [5 x [8 x i16]]]], [2 x [8 x [4 x i16]]], [4 x [3 x [4 x i16]]], [22 x [4 x i16]], [4 x i16], [5 x [4 x i16]], [4 x [4 x i16]], [4 x i16], [2 x i16], [2 x i16], [7 x [2 x i16]], [7 x [2 x i16]], [4 x [2 x i16]], [22 x [2 x i16]], [6 x [2 x i16]], [2 x [2 x i16]], [6 x [2 x i16]], [3 x [2 x i16]], [4 x [2 x i16]], [5 x [2 x i16]], [5 x [2 x i16]], [6 x [2 x i16]], [6 x [2 x i16]], [9 x [2 x i16]], [6 x [3 x [2 x i16]]], [3 x [3 x [2 x i16]]], [2 x [3 x [2 x i16]]], [3 x [3 x [2 x i16]]], [7 x [3 x [2 x i16]]], [3 x [2 x i16]], [3 x [2 x i16]], [3 x [2 x i16]], [22 x [2 x i16]], [7 x [3 x [2 x i16]]], [2 x [2 x i16]], [2 x i16], [8 x i8] }
%struct.CdfCoefContext = type { [2 x [2 x [8 x i16]]], [2 x [2 x [8 x i16]]], [2 x [2 x [8 x i16]]], [2 x [2 x [8 x i16]]], [2 x [2 x [16 x i16]]], [2 x [16 x i16]], [2 x [16 x i16]], [5 x [2 x [4 x [4 x i16]]]], [5 x [2 x [41 x [4 x i16]]]], [4 x [2 x [21 x [4 x i16]]]], [5 x [2 x [11 x [2 x i16]]]], [5 x [13 x [2 x i16]]], [2 x [3 x [2 x i16]]], [28 x i8] }
%struct.CdfMvContext = type { [2 x %struct.CdfMvComponent], [4 x i16], [24 x i8] }
%struct.CdfMvComponent = type { [16 x i16], [2 x [4 x i16]], [4 x i16], [2 x i16], [2 x i16], [2 x i16], [10 x [2 x i16]], [2 x i16], [16 x i8] }
%struct.Dav1dTileGroup = type { %struct.Dav1dData, i32, i32 }
%struct.Dav1dData = type { i8*, i64, %struct.Dav1dRef*, %struct.Dav1dDataProps }
%struct.ScalableMotionParams = type { i32, i32 }
%struct.Dav1dContext = type { %struct.Dav1dFrameContext*, i32, %struct.Dav1dPostFilterContext*, i32, %struct.Dav1dTileGroup*, i32, i32, i32, %struct.Dav1dMemPool*, %struct.Dav1dRef*, %struct.Dav1dSequenceHeader*, %struct.Dav1dMemPool*, %struct.Dav1dRef*, %struct.Dav1dFrameHeader*, %struct.Dav1dRef*, %struct.Dav1dContentLightLevel*, %struct.Dav1dRef*, %struct.Dav1dMasteringDisplay*, %struct.Dav1dRef*, %struct.Dav1dITUTT35*, %struct.Dav1dData, %struct.Dav1dPicture, i32, i32*, %struct.anon.17, %struct.PostFilterThreadData, %struct.Dav1dMemPool*, %struct.Dav1dMemPool*, [8 x %struct.anon.18], %struct.Dav1dMemPool*, [8 x %struct.CdfThreadContext], [3 x %struct.Dav1dDSPContext], %struct.anon.20, %struct.Dav1dPicAllocator, i32, i32, i32, i32, i32, i32, i32, i32, %struct.Dav1dLogger, %struct.Dav1dMemPool* }
%struct.Dav1dPostFilterContext = type { %struct.Dav1dContext*, %struct.thread_data, i32, i32 }
%struct.anon.17 = type { %struct.Dav1dThreadPicture*, i32 }
%struct.PostFilterThreadData = type { %union.pthread_mutex_t, %union.pthread_cond_t, %struct.Dav1dTask*, i32, i32 }
%struct.Dav1dTask = type opaque
%struct.anon.18 = type { %struct.Dav1dThreadPicture, %struct.Dav1dRef*, %struct.Dav1dRef*, [7 x i32] }
%struct.Dav1dDSPContext = type { %struct.Dav1dFilmGrainDSPContext, %struct.Dav1dIntraPredDSPContext, %struct.Dav1dMCDSPContext, %struct.Dav1dInvTxfmDSPContext, %struct.Dav1dLoopFilterDSPContext, %struct.Dav1dCdefDSPContext, %struct.Dav1dLoopRestorationDSPContext }
%struct.Dav1dFilmGrainDSPContext = type { void ([82 x i8]*, %struct.Dav1dFilmGrainData*)*, [3 x void ([82 x i8]*, [82 x i8]*, %struct.Dav1dFilmGrainData*, i64)*], void (i8*, i8*, i64, %struct.Dav1dFilmGrainData*, i64, i8*, [82 x i8]*, i32, i32)*, [3 x void (i8*, i8*, i64, %struct.Dav1dFilmGrainData*, i32, i8*, [82 x i8]*, i32, i32, i8*, i64, i32, i32)*] }
%struct.Dav1dIntraPredDSPContext = type { [14 x void (i8*, i64, i8*, i32, i32, i32, i32, i32)*], [3 x void (i16*, i8*, i64, i32, i32, i32, i32)*], [6 x void (i8*, i64, i8*, i32, i32, i16*, i32)*], void (i8*, i64, i16*, i8*, i32, i32)* }
%struct.Dav1dMCDSPContext = type { [10 x void (i8*, i64, i8*, i64, i32, i32, i32, i32)*], [10 x void (i8*, i64, i8*, i64, i32, i32, i32, i32, i32, i32)*], [10 x void (i16*, i8*, i64, i32, i32, i32, i32)*], [10 x void (i16*, i8*, i64, i32, i32, i32, i32, i32, i32)*], void (i8*, i64, i16*, i16*, i32, i32)*, void (i8*, i64, i16*, i16*, i32, i32, i32)*, void (i8*, i64, i16*, i16*, i32, i32, i8*)*, [3 x void (i8*, i64, i16*, i16*, i32, i32, i8*, i32)*], void (i8*, i64, i8*, i32, i32, i8*)*, void (i8*, i64, i8*, i32, i32)*, void (i8*, i64, i8*, i32, i32)*, void (i8*, i64, i8*, i64, i16*, i32, i32)*, void (i16*, i64, i8*, i64, i16*, i32, i32)*, void (i64, i64, i64, i64, i64, i64, i8*, i64, i8*, i64)*, void (i8*, i64, i8*, i64, i32, i32, i32, i32, i32)* }
%struct.Dav1dInvTxfmDSPContext = type { [19 x [17 x void (i8*, i64, i16*, i32)*]] }
%struct.Dav1dLoopFilterDSPContext = type { [2 x [2 x void (i8*, i64, i32*, [4 x i8]*, i64, %struct.Av1FilterLUT*, i32)*]] }
%struct.Av1FilterLUT = type { [64 x i8], [64 x i8], [2 x i64] }
%struct.Dav1dCdefDSPContext = type { i32 (i8*, i64, i32*)*, [3 x void (i8*, i64, [2 x i8]*, i8*, i32, i32, i32, i32, i32)*] }
%struct.Dav1dLoopRestorationDSPContext = type { [2 x void (i8*, i64, [4 x i8]*, i8*, i64, i32, i32, %union.LooprestorationParams*, i32)*], [3 x void (i8*, i64, [4 x i8]*, i8*, i64, i32, i32, %union.LooprestorationParams*, i32)*] }
%union.LooprestorationParams = type { %struct.anon.19, [20 x i8] }
%struct.anon.19 = type { i32, i32, i16, i16 }
%struct.anon.20 = type { [2 x %struct.EdgeNode*], [85 x %struct.EdgeBranch], [21 x %struct.EdgeBranch], [256 x %struct.EdgeTip], [64 x %struct.EdgeTip] }
%struct.EdgeNode = type { i32, [2 x i32], [2 x i32] }
%struct.EdgeBranch = type { %struct.EdgeNode, [3 x i32], [3 x i32], [3 x i32], [3 x i32], [4 x i32], [4 x i32], [4 x %struct.EdgeNode*] }
%struct.EdgeTip = type { %struct.EdgeNode, [4 x i32] }
%struct.Dav1dPicAllocator = type { i8*, i32 (%struct.Dav1dPicture*, i8*)*, void (%struct.Dav1dPicture*, i8*)* }
%struct.Dav1dLogger = type { i8*, void (i8*, i8*, %struct.__va_list_tag*)* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.Dav1dMemPool = type { %union.pthread_mutex_t, %struct.Dav1dMemPoolBuffer*, i32, i32 }
%struct.Dav1dMemPoolBuffer = type { i8*, %struct.Dav1dMemPoolBuffer* }
%struct.Dav1dTileContext = type { %struct.Dav1dFrameContext*, %struct.Dav1dTileState*, i32, i32, %struct.BlockContext, %struct.BlockContext*, [16 x i8], %union.anon.24, [2 x [32 x [3 x [8 x i16]]]], [2 x [32 x i8]], [1024 x i8], %struct.refmvs_tile, [24 x i8], %union.anon.26, %struct.Dav1dWarpedMotionParams, %struct.Av1Filter*, i8*, i32, %struct.anon.37, [8 x i8] }
%struct.BlockContext = type { [32 x i8], [32 x i8], [2 x [32 x i8]], [32 x i8], [32 x i8], [32 x i8], [32 x i8], [32 x i8], [2 x [32 x i8]], [2 x [32 x i8]], [32 x i8], [32 x i8], [32 x i8], [32 x i8], [16 x i8], [32 x i8], [32 x i8] }
%union.anon.24 = type { [1024 x i32] }
%struct.refmvs_tile = type { %struct.refmvs_frame*, [37 x %struct.refmvs_block*], %struct.refmvs_temporal_block*, %struct.anon.25, %struct.anon.25 }
%struct.refmvs_block = type { %union.refmvs_mvpair, %union.refmvs_refpair, i8, i8 }
%union.refmvs_mvpair = type { i64 }
%union.refmvs_refpair = type { i16 }
%struct.anon.25 = type { i32, i32 }
%union.anon.26 = type { %struct.anon.27 }
%struct.anon.27 = type { %union.anon.28, %union.anon.30 }
%union.anon.28 = type { %struct.anon.29 }
%struct.anon.29 = type { [2 x [16384 x i16]], [16384 x i8] }
%union.anon.30 = type { [84160 x i16] }
%struct.anon.37 = type { %struct.thread_data, %struct.FrameTileThreadData*, i32 }
%struct.Dav1dTileState = type { %struct.CdfContext, %struct.MsacContext, %struct.anon.21, i32, %struct.anon.22, %struct.anon.23, [8 x [3 x [2 x i16]]], [3 x [2 x i16]]*, i32, [4 x i8], [8 x [4 x [8 x [2 x i8]]]], [4 x [8 x [2 x i8]]]*, [3 x %struct.Av1RestorationUnit*], [24 x i8] }
%struct.MsacContext = type { i8*, i8*, i64, i32, i32, i32, i32 (%struct.MsacContext*, i16*, i64)* }
%struct.anon.21 = type { i32, i32, i32, i32, i32, i32 }
%struct.anon.22 = type { %union.pthread_mutex_t, %union.pthread_cond_t }
%struct.anon.23 = type { i8*, i16* }
%struct.Av1RestorationUnit = type { i8, [3 x i8], [3 x i8], i8, [2 x i8] }
%struct.anon.38 = type { void (%struct.Dav1dTileContext*, i32, i32, %struct.Av1Block*)*, i32 (%struct.Dav1dTileContext*, i32, %struct.Av1Block*)*, void (%struct.Dav1dFrameContext*, i32)*, void (%struct.Dav1dFrameContext*, i32)*, void (%struct.Dav1dFrameContext*, i32)*, void (%struct.Dav1dFrameContext*, i32)*, void (%struct.Dav1dFrameContext*, i32)*, void (%struct.Dav1dTileContext*)*, void (%struct.Dav1dTileContext*, i32, %struct.Av1Block*)* }
%struct.Av1Block = type { i8, i8, i8, i8, i8, i8, i8, i8, %union.anon.39 }
%union.anon.39 = type { %struct.anon.41 }
%struct.anon.41 = type { %union.anon.42, i8, i8, i8, i8, [2 x i8], i8, i8, i8, i8, i16 }
%union.anon.42 = type { %struct.anon.43 }
%struct.anon.43 = type { [2 x %union.mv], i8, i8, i8 }
%struct.refmvs_frame = type { %struct.Dav1dFrameHeader*, i32, i32, i32, i32, i32, i32, [7 x i8], [7 x i8], [7 x i8], [3 x i8], [3 x i32], [3 x [7 x i32]], i32, %struct.refmvs_temporal_block*, %struct.refmvs_temporal_block**, %struct.refmvs_temporal_block*, i64, %struct.refmvs_block*, i64, i32, i32 }
%struct.anon.45 = type { %struct.thread_data, i32, i32, %struct.Av1Block*, %struct.CodedBlockInfo*, [3 x [8 x i16]]*, i8*, i16*, i32, i32, i32, i32* }
%struct.CodedBlockInfo = type { [3 x i16], [3 x i8] }
%struct.anon.46 = type { [4 x i8]*, %struct.Av1Filter*, %struct.Av1Restoration*, i32, i32, i32, [2 x i32], i32, i32, [12 x i8], %struct.Av1FilterLUT, i32, [8 x [4 x [8 x [2 x i8]]]], [2 x i8*], i8*, [2 x [3 x i8*]], [3 x i8*], i32, [3 x i8*], [3 x i8*], %struct.Av1Filter*, %struct.Av1Filter*, i32, %struct.anon.47, [8 x i8] }
%struct.Av1Restoration = type { [3 x [4 x %struct.Av1RestorationUnit]] }
%struct.anon.47 = type { %union.pthread_cond_t, %struct.PostFilterThreadData*, %struct.Dav1dTask*, i32, i32, i32, i32 }
%struct.FrameTileThreadData = type { i64, %union.pthread_mutex_t, %union.pthread_cond_t, %union.pthread_cond_t, i32, i32, [2 x i32]*, i32, [2 x i32], [65 x i16], i32 }
%struct.Av1Filter = type { [2 x [32 x [3 x [2 x i16]]]], [2 x [32 x [2 x [2 x i16]]]], [4 x i8], [16 x [2 x i16]] }

; Function Attrs: nounwind ssp uwtable
define hidden void @dav1d_loopfilter_sbrow_8bpc(%struct.Dav1dFrameContext*, i8** nocapture readonly, %struct.Av1Filter* nocapture, i32, i32) local_unnamed_addr #0 {
  %6 = alloca [4 x i32], align 16
  %7 = alloca [3 x i32], align 4
  %8 = icmp sgt i32 %3, 0
  %9 = zext i1 %8 to i32
  %10 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 1
  %11 = load %struct.Dav1dSequenceHeader*, %struct.Dav1dSequenceHeader** %10, align 8
  %12 = getelementptr inbounds %struct.Dav1dSequenceHeader, %struct.Dav1dSequenceHeader* %11, i64 0, i32 30
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  %15 = zext i1 %14 to i32
  %16 = and i32 %15, %3
  %17 = shl nuw nsw i32 %16, 4
  %18 = lshr i32 32, %15
  %19 = select i1 %14, i32 4, i32 5
  %20 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 39
  %21 = load i32, i32* %20, align 4
  %22 = add nsw i32 %21, 31
  %23 = and i32 %22, -32
  %24 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 5, i32 4, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 1
  %27 = zext i1 %26 to i32
  %28 = icmp ne i32 %25, 3
  %29 = zext i1 %28 to i32
  %30 = lshr i32 16, %27
  %31 = lshr i32 16, %29
  %32 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 37
  %33 = load i32, i32* %32, align 4
  %34 = mul nsw i32 %18, %3
  %35 = sub nsw i32 %33, %34
  %36 = icmp slt i32 %35, %18
  %37 = select i1 %36, i32 %35, i32 %18
  %38 = add nsw i32 %37, %17
  %39 = add nsw i32 %38, %27
  %40 = lshr i32 %39, %27
  %41 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 3
  %42 = load %struct.Dav1dFrameHeader*, %struct.Dav1dFrameHeader** %41, align 8
  %43 = getelementptr inbounds %struct.Dav1dFrameHeader, %struct.Dav1dFrameHeader* %42, i64 0, i32 34, i32 10, i64 1
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = shl i32 %45, %19
  %47 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 38
  %48 = load i32, i32* %47, align 8
  %49 = icmp slt i32 %46, %48
  br i1 %49, label %50, label %77

50:                                               ; preds = %5
  %51 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 54, i32 13, i64 1
  %52 = load i8*, i8** %51, align 8
  %53 = sub nuw nsw i32 %19, %27
  %54 = shl i32 %3, %53
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %52, i64 %55
  %57 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 54, i32 13, i64 0
  %58 = load i8*, i8** %57, align 8
  %59 = shl i32 %3, %19
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i8, i8* %58, i64 %60
  %62 = shl i32 1, %17
  %63 = icmp ult i32 %17, %38
  %64 = lshr i32 %17, %27
  %65 = shl i32 1, %64
  %66 = icmp ult i32 %64, %40
  %67 = select i1 %26, i32 3, i32 4
  %68 = sext i32 %23 to i64
  %69 = ashr i32 %23, %27
  %70 = sext i32 %69 to i64
  %71 = shl nuw nsw i32 %16, 4
  %72 = zext i32 %71 to i64
  %73 = zext i32 %17 to i64
  %74 = zext i32 %38 to i64
  %75 = zext i32 %64 to i64
  %76 = zext i32 %40 to i64
  br label %81

77:                                               ; preds = %174, %5
  %78 = icmp eq i32 %4, 0
  %79 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 40
  %80 = load i32, i32* %79, align 16
  br i1 %78, label %304, label %185

81:                                               ; preds = %50, %174
  %82 = phi i64 [ 1, %50 ], [ %177, %174 ]
  %83 = phi i32 [ %45, %50 ], [ %181, %174 ]
  %84 = phi i8* [ %56, %50 ], [ %176, %174 ]
  %85 = phi i8* [ %61, %50 ], [ %175, %174 ]
  %86 = and i32 %83, %15
  %87 = icmp eq i32 %86, 0
  %88 = select i1 %87, i32 0, i32 16
  %89 = lshr i32 %88, %29
  %90 = lshr i32 %83, %15
  %91 = zext i32 %90 to i64
  %92 = zext i32 %88 to i64
  br i1 %63, label %96, label %93

93:                                               ; preds = %96, %81
  %94 = load i32, i32* %24, align 8
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %174, label %138

96:                                               ; preds = %81, %96
  %97 = phi i64 [ %135, %96 ], [ %72, %81 ]
  %98 = phi i32 [ %136, %96 ], [ %62, %81 ]
  %99 = icmp ugt i32 %98, 65535
  %100 = zext i1 %99 to i32
  %101 = shl nuw nsw i32 %100, 4
  %102 = lshr i32 %98, %101
  %103 = zext i1 %99 to i64
  %104 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %91, i32 0, i64 0, i64 %92, i64 2, i64 %103
  %105 = load i16, i16* %104, align 2
  %106 = zext i16 %105 to i32
  %107 = and i32 %102, %106
  %108 = icmp ne i32 %107, 0
  %109 = zext i1 %108 to i32
  %110 = shl nuw nsw i32 %109, 1
  %111 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %91, i32 0, i64 0, i64 %92, i64 1, i64 %103
  %112 = load i16, i16* %111, align 2
  %113 = zext i16 %112 to i32
  %114 = and i32 %102, %113
  %115 = icmp ne i32 %114, 0
  %116 = zext i1 %115 to i32
  %117 = or i32 %110, %116
  %118 = trunc i32 %102 to i16
  %119 = xor i16 %118, -1
  %120 = and i16 %105, %119
  store i16 %120, i16* %104, align 2
  %121 = and i16 %112, %119
  store i16 %121, i16* %111, align 2
  %122 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %91, i32 0, i64 0, i64 %92, i64 0, i64 %103
  %123 = load i16, i16* %122, align 2
  %124 = and i16 %123, %119
  store i16 %124, i16* %122, align 2
  %125 = sub nuw nsw i64 %97, %73
  %126 = getelementptr inbounds i8, i8* %85, i64 %125
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i32
  %129 = icmp ult i32 %117, %128
  %130 = select i1 %129, i32 %117, i32 %128
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %91, i32 0, i64 0, i64 %92, i64 %131, i64 %103
  %133 = load i16, i16* %132, align 2
  %134 = or i16 %133, %118
  store i16 %134, i16* %132, align 2
  %135 = add nuw nsw i64 %97, 1
  %136 = shl i32 %98, 1
  %137 = icmp ult i64 %135, %74
  br i1 %137, label %96, label %93

138:                                              ; preds = %93
  %139 = zext i32 %89 to i64
  br i1 %66, label %140, label %174

140:                                              ; preds = %138, %140
  %141 = phi i64 [ %171, %140 ], [ %75, %138 ]
  %142 = phi i32 [ %172, %140 ], [ %65, %138 ]
  %143 = lshr i32 %142, %30
  %144 = icmp ne i32 %143, 0
  %145 = zext i1 %144 to i32
  %146 = shl i32 %145, %67
  %147 = lshr i32 %142, %146
  %148 = zext i1 %144 to i64
  %149 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %91, i32 1, i64 0, i64 %139, i64 1, i64 %148
  %150 = load i16, i16* %149, align 2
  %151 = zext i16 %150 to i32
  %152 = and i32 %147, %151
  %153 = icmp ne i32 %152, 0
  %154 = zext i1 %153 to i32
  %155 = trunc i32 %147 to i16
  %156 = xor i16 %155, -1
  %157 = and i16 %150, %156
  store i16 %157, i16* %149, align 2
  %158 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %91, i32 1, i64 0, i64 %139, i64 0, i64 %148
  %159 = load i16, i16* %158, align 2
  %160 = and i16 %159, %156
  store i16 %160, i16* %158, align 2
  %161 = sub nuw nsw i64 %141, %75
  %162 = getelementptr inbounds i8, i8* %84, i64 %161
  %163 = load i8, i8* %162, align 1
  %164 = zext i8 %163 to i32
  %165 = icmp ult i32 %154, %164
  %166 = select i1 %165, i32 %154, i32 %164
  %167 = zext i32 %166 to i64
  %168 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %91, i32 1, i64 0, i64 %139, i64 %167, i64 %148
  %169 = load i16, i16* %168, align 2
  %170 = or i16 %169, %155
  store i16 %170, i16* %168, align 2
  %171 = add nuw nsw i64 %141, 1
  %172 = shl i32 %142, 1
  %173 = icmp eq i64 %171, %76
  br i1 %173, label %174, label %140

174:                                              ; preds = %140, %138, %93
  %175 = getelementptr inbounds i8, i8* %85, i64 %68
  %176 = getelementptr inbounds i8, i8* %84, i64 %70
  %177 = add nuw i64 %82, 1
  %178 = load %struct.Dav1dFrameHeader*, %struct.Dav1dFrameHeader** %41, align 8
  %179 = getelementptr inbounds %struct.Dav1dFrameHeader, %struct.Dav1dFrameHeader* %178, i64 0, i32 34, i32 10, i64 %177
  %180 = load i16, i16* %179, align 2
  %181 = zext i16 %180 to i32
  %182 = shl i32 %181, %19
  %183 = load i32, i32* %47, align 8
  %184 = icmp slt i32 %182, %183
  br i1 %184, label %81, label %77

185:                                              ; preds = %77
  %186 = icmp sgt i32 %80, 0
  br i1 %186, label %191, label %187

187:                                              ; preds = %185
  %188 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 54, i32 0
  %189 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 35
  %190 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 40
  br label %503

191:                                              ; preds = %185
  %192 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 48
  %193 = load %struct.BlockContext*, %struct.BlockContext** %192, align 16
  %194 = add nsw i32 %4, -1
  %195 = mul nsw i32 %80, %194
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds %struct.BlockContext, %struct.BlockContext* %193, i64 %196
  %198 = zext i32 %17 to i64
  %199 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 36
  %200 = lshr i32 %17, %27
  %201 = zext i32 %200 to i64
  %202 = select i1 %28, i32 3, i32 4
  br label %203

203:                                              ; preds = %191, %298
  %204 = phi i64 [ 0, %191 ], [ %299, %298 ]
  %205 = phi %struct.BlockContext* [ %197, %191 ], [ %300, %298 ]
  %206 = load i32, i32* %199, align 16
  %207 = trunc i64 %204 to i32
  %208 = shl i32 %207, 5
  %209 = sub nsw i32 %206, %208
  %210 = icmp slt i32 %209, 32
  %211 = select i1 %210, i32 %209, i32 32
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %215, label %213

213:                                              ; preds = %203
  %214 = zext i32 %211 to i64
  br label %218

215:                                              ; preds = %218, %203
  %216 = load i32, i32* %24, align 8
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %298, label %259

218:                                              ; preds = %213, %218
  %219 = phi i64 [ 0, %213 ], [ %257, %218 ]
  %220 = phi i32 [ 1, %213 ], [ %256, %218 ]
  %221 = icmp ugt i32 %220, 65535
  %222 = zext i1 %221 to i32
  %223 = shl nuw nsw i32 %222, 4
  %224 = lshr i32 %220, %223
  %225 = zext i1 %221 to i64
  %226 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %204, i32 0, i64 1, i64 %198, i64 2, i64 %225
  %227 = load i16, i16* %226, align 2
  %228 = zext i16 %227 to i32
  %229 = and i32 %224, %228
  %230 = icmp ne i32 %229, 0
  %231 = zext i1 %230 to i32
  %232 = shl nuw nsw i32 %231, 1
  %233 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %204, i32 0, i64 1, i64 %198, i64 1, i64 %225
  %234 = load i16, i16* %233, align 2
  %235 = zext i16 %234 to i32
  %236 = and i32 %224, %235
  %237 = icmp ne i32 %236, 0
  %238 = zext i1 %237 to i32
  %239 = or i32 %232, %238
  %240 = trunc i32 %224 to i16
  %241 = xor i16 %240, -1
  %242 = and i16 %227, %241
  store i16 %242, i16* %226, align 2
  %243 = and i16 %234, %241
  store i16 %243, i16* %233, align 2
  %244 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %204, i32 0, i64 1, i64 %198, i64 0, i64 %225
  %245 = load i16, i16* %244, align 2
  %246 = and i16 %245, %241
  store i16 %246, i16* %244, align 2
  %247 = getelementptr inbounds %struct.BlockContext, %struct.BlockContext* %205, i64 0, i32 12, i64 %219
  %248 = load i8, i8* %247, align 1
  %249 = zext i8 %248 to i32
  %250 = icmp ult i32 %239, %249
  %251 = select i1 %250, i32 %239, i32 %249
  %252 = zext i32 %251 to i64
  %253 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %204, i32 0, i64 1, i64 %198, i64 %252, i64 %225
  %254 = load i16, i16* %253, align 2
  %255 = or i16 %254, %240
  store i16 %255, i16* %253, align 2
  %256 = shl i32 %220, 1
  %257 = add nuw nsw i64 %219, 1
  %258 = icmp ult i64 %257, %214
  br i1 %258, label %218, label %215

259:                                              ; preds = %215
  %260 = add nsw i32 %211, %29
  %261 = lshr i32 %260, %29
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %298, label %263

263:                                              ; preds = %259
  %264 = zext i32 %261 to i64
  br label %265

265:                                              ; preds = %265, %263
  %266 = phi i64 [ 0, %263 ], [ %296, %265 ]
  %267 = phi i32 [ 1, %263 ], [ %295, %265 ]
  %268 = lshr i32 %267, %31
  %269 = icmp ne i32 %268, 0
  %270 = zext i1 %269 to i32
  %271 = shl i32 %270, %202
  %272 = lshr i32 %267, %271
  %273 = zext i1 %269 to i64
  %274 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %204, i32 1, i64 1, i64 %201, i64 1, i64 %273
  %275 = load i16, i16* %274, align 2
  %276 = zext i16 %275 to i32
  %277 = and i32 %272, %276
  %278 = icmp ne i32 %277, 0
  %279 = zext i1 %278 to i32
  %280 = trunc i32 %272 to i16
  %281 = xor i16 %280, -1
  %282 = and i16 %275, %281
  store i16 %282, i16* %274, align 2
  %283 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %204, i32 1, i64 1, i64 %201, i64 0, i64 %273
  %284 = load i16, i16* %283, align 2
  %285 = and i16 %284, %281
  store i16 %285, i16* %283, align 2
  %286 = getelementptr inbounds %struct.BlockContext, %struct.BlockContext* %205, i64 0, i32 13, i64 %266
  %287 = load i8, i8* %286, align 1
  %288 = zext i8 %287 to i32
  %289 = icmp ult i32 %279, %288
  %290 = select i1 %289, i32 %279, i32 %288
  %291 = zext i32 %290 to i64
  %292 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %204, i32 1, i64 1, i64 %201, i64 %291, i64 %273
  %293 = load i16, i16* %292, align 2
  %294 = or i16 %293, %280
  store i16 %294, i16* %292, align 2
  %295 = shl i32 %267, 1
  %296 = add nuw nsw i64 %266, 1
  %297 = icmp eq i64 %296, %264
  br i1 %297, label %298, label %265

298:                                              ; preds = %265, %259, %215
  %299 = add nuw nsw i64 %204, 1
  %300 = getelementptr inbounds %struct.BlockContext, %struct.BlockContext* %205, i64 1
  %301 = load i32, i32* %79, align 16
  %302 = sext i32 %301 to i64
  %303 = icmp slt i64 %299, %302
  br i1 %303, label %203, label %304

304:                                              ; preds = %298, %77
  %305 = phi i32 [ %80, %77 ], [ %301, %298 ]
  %306 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 54, i32 0
  %307 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 35
  %308 = sext i32 %3 to i64
  %309 = zext i32 %18 to i64
  %310 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 40
  %311 = icmp sgt i32 %305, 0
  br i1 %311, label %312, label %503

312:                                              ; preds = %304
  %313 = load i8*, i8** %1, align 8
  %314 = load [4 x i8]*, [4 x i8]** %306, align 16
  %315 = mul nsw i64 %309, %308
  %316 = load i64, i64* %307, align 8
  %317 = mul i64 %315, %316
  %318 = getelementptr inbounds [4 x i8], [4 x i8]* %314, i64 %317
  %319 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 5, i32 3, i64 0
  %320 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 36
  %321 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 31
  %322 = bitcast [4 x i32]* %6 to i8*
  %323 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i64 0, i64 0
  %324 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i64 0, i64 1
  %325 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i64 0, i64 2
  %326 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i64 0, i64 3
  %327 = icmp eq i32 %16, 0
  %328 = icmp sgt i32 %38, 16
  %329 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 54, i32 10
  br label %330

330:                                              ; preds = %410, %312
  %331 = phi i32 [ %305, %312 ], [ %406, %410 ]
  %332 = phi i64 [ %316, %312 ], [ %413, %410 ]
  %333 = phi i64 [ 0, %312 ], [ %407, %410 ]
  %334 = phi [4 x i8]* [ %318, %312 ], [ %411, %410 ]
  %335 = phi i8* [ %313, %312 ], [ %412, %410 ]
  %336 = phi i32 [ 0, %312 ], [ 1, %410 ]
  %337 = load i64, i64* %319, align 8
  %338 = load i32, i32* %320, align 16
  %339 = trunc i64 %333 to i32
  %340 = shl nsw i32 %339, 5
  %341 = sub nsw i32 %338, %340
  %342 = icmp sgt i32 %341, 0
  br i1 %342, label %343, label %405

343:                                              ; preds = %330
  %344 = icmp slt i32 %341, 32
  %345 = select i1 %344, i32 %341, i32 32
  %346 = load %struct.Dav1dDSPContext*, %struct.Dav1dDSPContext** %321, align 8
  %347 = getelementptr inbounds %struct.Dav1dDSPContext, %struct.Dav1dDSPContext* %346, i64 0, i32 4, i32 0, i64 0, i64 0
  %348 = zext i32 %345 to i64
  br label %349

349:                                              ; preds = %400, %343
  %350 = phi i64 [ 0, %343 ], [ %401, %400 ]
  %351 = trunc i64 %350 to i32
  %352 = or i32 %336, %351
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %400, label %354

354:                                              ; preds = %349
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %322) #2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %322, i8 -86, i64 16, i1 false) #2
  br i1 %327, label %355, label %381

355:                                              ; preds = %354
  %356 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %333, i32 0, i64 0, i64 %350, i64 0, i64 0
  %357 = load i16, i16* %356, align 2
  %358 = zext i16 %357 to i32
  store i32 %358, i32* %323, align 16
  %359 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %333, i32 0, i64 0, i64 %350, i64 1, i64 0
  %360 = load i16, i16* %359, align 2
  %361 = zext i16 %360 to i32
  store i32 %361, i32* %324, align 4
  %362 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %333, i32 0, i64 0, i64 %350, i64 2, i64 0
  %363 = load i16, i16* %362, align 2
  %364 = zext i16 %363 to i32
  store i32 %364, i32* %325, align 8
  br i1 %328, label %365, label %393

365:                                              ; preds = %355
  %366 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %333, i32 0, i64 0, i64 %350, i64 0, i64 1
  %367 = load i16, i16* %366, align 2
  %368 = zext i16 %367 to i32
  %369 = shl nuw i32 %368, 16
  %370 = or i32 %369, %358
  store i32 %370, i32* %323, align 16
  %371 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %333, i32 0, i64 0, i64 %350, i64 1, i64 1
  %372 = load i16, i16* %371, align 2
  %373 = zext i16 %372 to i32
  %374 = shl nuw i32 %373, 16
  %375 = or i32 %374, %361
  store i32 %375, i32* %324, align 4
  %376 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %333, i32 0, i64 0, i64 %350, i64 2, i64 1
  %377 = load i16, i16* %376, align 2
  %378 = zext i16 %377 to i32
  %379 = shl nuw i32 %378, 16
  %380 = or i32 %379, %364
  br label %391

381:                                              ; preds = %354
  %382 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %333, i32 0, i64 0, i64 %350, i64 0, i64 1
  %383 = load i16, i16* %382, align 2
  %384 = zext i16 %383 to i32
  store i32 %384, i32* %323, align 16
  %385 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %333, i32 0, i64 0, i64 %350, i64 1, i64 1
  %386 = load i16, i16* %385, align 2
  %387 = zext i16 %386 to i32
  store i32 %387, i32* %324, align 4
  %388 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %333, i32 0, i64 0, i64 %350, i64 2, i64 1
  %389 = load i16, i16* %388, align 2
  %390 = zext i16 %389 to i32
  br label %391

391:                                              ; preds = %365, %381
  %392 = phi i32 [ %390, %381 ], [ %380, %365 ]
  store i32 %392, i32* %325, align 8
  br label %393

393:                                              ; preds = %391, %355
  store i32 0, i32* %326, align 4
  %394 = load void (i8*, i64, i32*, [4 x i8]*, i64, %struct.Av1FilterLUT*, i32)*, void (i8*, i64, i32*, [4 x i8]*, i64, %struct.Av1FilterLUT*, i32)** %347, align 8
  %395 = shl i64 %350, 2
  %396 = and i64 %395, 4294967292
  %397 = getelementptr inbounds i8, i8* %335, i64 %396
  %398 = getelementptr inbounds [4 x i8], [4 x i8]* %334, i64 %350, i64 0
  %399 = bitcast i8* %398 to [4 x i8]*
  call void %394(i8* %397, i64 %337, i32* nonnull %323, [4 x i8]* %399, i64 %332, %struct.Av1FilterLUT* %329, i32 %37) #2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %322) #2
  br label %400

400:                                              ; preds = %393, %349
  %401 = add nuw nsw i64 %350, 1
  %402 = icmp eq i64 %401, %348
  br i1 %402, label %403, label %349

403:                                              ; preds = %400
  %404 = load i32, i32* %310, align 16
  br label %405

405:                                              ; preds = %403, %330
  %406 = phi i32 [ %404, %403 ], [ %331, %330 ]
  %407 = add nuw nsw i64 %333, 1
  %408 = sext i32 %406 to i64
  %409 = icmp slt i64 %407, %408
  br i1 %409, label %410, label %414

410:                                              ; preds = %405
  %411 = getelementptr inbounds [4 x i8], [4 x i8]* %334, i64 32
  %412 = getelementptr inbounds i8, i8* %335, i64 128
  %413 = load i64, i64* %307, align 8
  br label %330

414:                                              ; preds = %405
  %415 = icmp sgt i32 %406, 0
  br i1 %415, label %416, label %503

416:                                              ; preds = %414
  %417 = load i8*, i8** %1, align 8
  %418 = load [4 x i8]*, [4 x i8]** %306, align 16
  %419 = mul nsw i64 %309, %308
  %420 = load i64, i64* %307, align 8
  %421 = mul i64 %419, %420
  %422 = getelementptr inbounds [4 x i8], [4 x i8]* %418, i64 %421
  %423 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 5, i32 3, i64 0
  %424 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 36
  %425 = icmp sgt i32 %37, 0
  %426 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 31
  %427 = bitcast [4 x i32]* %6 to i8*
  %428 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i64 0, i64 0
  %429 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i64 0, i64 1
  %430 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i64 0, i64 2
  %431 = getelementptr inbounds [4 x i32], [4 x i32]* %6, i64 0, i64 3
  %432 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 54, i32 10
  %433 = zext i32 %17 to i64
  br label %434

434:                                              ; preds = %499, %416
  %435 = phi i32 [ %406, %416 ], [ %495, %499 ]
  %436 = phi i64 [ %420, %416 ], [ %502, %499 ]
  %437 = phi i64 [ 0, %416 ], [ %496, %499 ]
  %438 = phi [4 x i8]* [ %422, %416 ], [ %500, %499 ]
  %439 = phi i8* [ %417, %416 ], [ %501, %499 ]
  %440 = load i64, i64* %423, align 8
  %441 = load i32, i32* %424, align 16
  %442 = trunc i64 %437 to i32
  %443 = shl nsw i32 %442, 5
  %444 = sub nsw i32 %441, %443
  %445 = icmp slt i32 %444, 32
  %446 = select i1 %445, i32 %444, i32 32
  br i1 %425, label %447, label %494

447:                                              ; preds = %434
  %448 = load %struct.Dav1dDSPContext*, %struct.Dav1dDSPContext** %426, align 8
  %449 = getelementptr inbounds %struct.Dav1dDSPContext, %struct.Dav1dDSPContext* %448, i64 0, i32 4, i32 0, i64 0, i64 1
  %450 = shl nsw i64 %440, 2
  br label %451

451:                                              ; preds = %486, %447
  %452 = phi i64 [ %433, %447 ], [ %487, %486 ]
  %453 = phi [4 x i8]* [ %438, %447 ], [ %489, %486 ]
  %454 = phi i8* [ %439, %447 ], [ %488, %486 ]
  %455 = trunc i64 %452 to i32
  %456 = or i32 %455, %9
  %457 = icmp eq i32 %456, 0
  br i1 %457, label %486, label %458

458:                                              ; preds = %451
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %427) #2
  %459 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %437, i32 0, i64 1, i64 %452, i64 0, i64 0
  %460 = load i16, i16* %459, align 2
  %461 = zext i16 %460 to i32
  %462 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %437, i32 0, i64 1, i64 %452, i64 0, i64 1
  %463 = load i16, i16* %462, align 2
  %464 = zext i16 %463 to i32
  %465 = shl nuw i32 %464, 16
  %466 = or i32 %465, %461
  store i32 %466, i32* %428, align 16
  %467 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %437, i32 0, i64 1, i64 %452, i64 1, i64 0
  %468 = load i16, i16* %467, align 2
  %469 = zext i16 %468 to i32
  %470 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %437, i32 0, i64 1, i64 %452, i64 1, i64 1
  %471 = load i16, i16* %470, align 2
  %472 = zext i16 %471 to i32
  %473 = shl nuw i32 %472, 16
  %474 = or i32 %473, %469
  store i32 %474, i32* %429, align 4
  %475 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %437, i32 0, i64 1, i64 %452, i64 2, i64 0
  %476 = load i16, i16* %475, align 2
  %477 = zext i16 %476 to i32
  %478 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %437, i32 0, i64 1, i64 %452, i64 2, i64 1
  %479 = load i16, i16* %478, align 2
  %480 = zext i16 %479 to i32
  %481 = shl nuw i32 %480, 16
  %482 = or i32 %481, %477
  store i32 %482, i32* %430, align 8
  store i32 0, i32* %431, align 4
  %483 = load void (i8*, i64, i32*, [4 x i8]*, i64, %struct.Av1FilterLUT*, i32)*, void (i8*, i64, i32*, [4 x i8]*, i64, %struct.Av1FilterLUT*, i32)** %449, align 8
  %484 = getelementptr inbounds [4 x i8], [4 x i8]* %453, i64 0, i64 1
  %485 = bitcast i8* %484 to [4 x i8]*
  call void %483(i8* %454, i64 %440, i32* nonnull %428, [4 x i8]* %485, i64 %436, %struct.Av1FilterLUT* %432, i32 %446) #2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %427) #2
  br label %486

486:                                              ; preds = %458, %451
  %487 = add nuw nsw i64 %452, 1
  %488 = getelementptr inbounds i8, i8* %454, i64 %450
  %489 = getelementptr inbounds [4 x i8], [4 x i8]* %453, i64 %436
  %490 = trunc i64 %487 to i32
  %491 = icmp eq i32 %38, %490
  br i1 %491, label %492, label %451

492:                                              ; preds = %486
  %493 = load i32, i32* %310, align 16
  br label %494

494:                                              ; preds = %492, %434
  %495 = phi i32 [ %493, %492 ], [ %435, %434 ]
  %496 = add nuw nsw i64 %437, 1
  %497 = sext i32 %495 to i64
  %498 = icmp slt i64 %496, %497
  br i1 %498, label %499, label %503

499:                                              ; preds = %494
  %500 = getelementptr inbounds [4 x i8], [4 x i8]* %438, i64 32
  %501 = getelementptr inbounds i8, i8* %439, i64 128
  %502 = load i64, i64* %307, align 8
  br label %434

503:                                              ; preds = %494, %187, %304, %414
  %504 = phi [4 x i8]** [ %306, %414 ], [ %188, %187 ], [ %306, %304 ], [ %306, %494 ]
  %505 = phi i32* [ %310, %414 ], [ %190, %187 ], [ %310, %304 ], [ %310, %494 ]
  %506 = phi i64* [ %307, %414 ], [ %189, %187 ], [ %307, %304 ], [ %307, %494 ]
  %507 = phi i32 [ %406, %414 ], [ %80, %187 ], [ %305, %304 ], [ %495, %494 ]
  %508 = load %struct.Dav1dFrameHeader*, %struct.Dav1dFrameHeader** %41, align 8
  %509 = getelementptr inbounds %struct.Dav1dFrameHeader, %struct.Dav1dFrameHeader* %508, i64 0, i32 39, i32 1
  %510 = load i32, i32* %509, align 8
  %511 = icmp eq i32 %510, 0
  br i1 %511, label %512, label %516

512:                                              ; preds = %503
  %513 = getelementptr inbounds %struct.Dav1dFrameHeader, %struct.Dav1dFrameHeader* %508, i64 0, i32 39, i32 2
  %514 = load i32, i32* %513, align 4
  %515 = icmp eq i32 %514, 0
  br i1 %515, label %722, label %516

516:                                              ; preds = %512, %503
  %517 = ashr i32 %34, %27
  %518 = sext i32 %517 to i64
  %519 = icmp sgt i32 %507, 0
  br i1 %519, label %520, label %722

520:                                              ; preds = %516
  %521 = load [4 x i8]*, [4 x i8]** %504, align 16
  %522 = load i64, i64* %506, align 8
  %523 = mul nsw i64 %522, %518
  %524 = getelementptr inbounds [4 x i8], [4 x i8]* %521, i64 %523
  %525 = getelementptr inbounds i8*, i8** %1, i64 1
  %526 = getelementptr inbounds i8*, i8** %1, i64 2
  %527 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 5, i32 3, i64 1
  %528 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 36
  %529 = lshr i32 %17, %27
  %530 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 31
  %531 = bitcast [3 x i32]* %7 to i8*
  %532 = getelementptr inbounds [3 x i32], [3 x i32]* %7, i64 0, i64 0
  %533 = getelementptr inbounds [3 x i32], [3 x i32]* %7, i64 0, i64 1
  %534 = getelementptr inbounds [3 x i32], [3 x i32]* %7, i64 0, i64 2
  %535 = icmp eq i32 %529, 0
  %536 = icmp slt i32 %30, %40
  %537 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 54, i32 10
  %538 = sub nsw i32 %40, %529
  %539 = lshr i32 128, %29
  %540 = zext i32 %539 to i64
  %541 = lshr i32 32, %29
  %542 = zext i32 %541 to i64
  br label %543

543:                                              ; preds = %622, %520
  %544 = phi i32 [ %507, %520 ], [ %618, %622 ]
  %545 = phi i64 [ %522, %520 ], [ %625, %622 ]
  %546 = phi i64 [ 0, %520 ], [ %619, %622 ]
  %547 = phi i64 [ 0, %520 ], [ %624, %622 ]
  %548 = phi [4 x i8]* [ %524, %520 ], [ %623, %622 ]
  %549 = phi i32 [ 0, %520 ], [ 1, %622 ]
  %550 = load i8*, i8** %525, align 8
  %551 = getelementptr inbounds i8, i8* %550, i64 %547
  %552 = load i8*, i8** %526, align 8
  %553 = getelementptr inbounds i8, i8* %552, i64 %547
  %554 = load i64, i64* %527, align 8
  %555 = load i32, i32* %528, align 16
  %556 = trunc i64 %546 to i32
  %557 = shl nsw i32 %556, 5
  %558 = sub nsw i32 %555, %557
  %559 = icmp slt i32 %558, 32
  %560 = select i1 %559, i32 %558, i32 32
  %561 = add nsw i32 %560, %29
  %562 = ashr i32 %561, %29
  %563 = icmp sgt i32 %562, 0
  br i1 %563, label %564, label %617

564:                                              ; preds = %543
  %565 = load %struct.Dav1dDSPContext*, %struct.Dav1dDSPContext** %530, align 8
  %566 = getelementptr inbounds %struct.Dav1dDSPContext, %struct.Dav1dDSPContext* %565, i64 0, i32 4, i32 0, i64 1, i64 0
  %567 = zext i32 %562 to i64
  br label %568

568:                                              ; preds = %612, %564
  %569 = phi i64 [ 0, %564 ], [ %613, %612 ]
  %570 = trunc i64 %569 to i32
  %571 = or i32 %549, %570
  %572 = icmp eq i32 %571, 0
  br i1 %572, label %612, label %573

573:                                              ; preds = %568
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %531) #2
  store i32 -1431655766, i32* %532, align 4
  store i32 -1431655766, i32* %533, align 4
  store i32 -1431655766, i32* %534, align 4
  br i1 %535, label %574, label %592

574:                                              ; preds = %573
  %575 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %546, i32 1, i64 0, i64 %569, i64 0, i64 0
  %576 = load i16, i16* %575, align 2
  %577 = zext i16 %576 to i32
  store i32 %577, i32* %532, align 4
  %578 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %546, i32 1, i64 0, i64 %569, i64 1, i64 0
  %579 = load i16, i16* %578, align 2
  %580 = zext i16 %579 to i32
  store i32 %580, i32* %533, align 4
  br i1 %536, label %581, label %601

581:                                              ; preds = %574
  %582 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %546, i32 1, i64 0, i64 %569, i64 0, i64 1
  %583 = load i16, i16* %582, align 2
  %584 = zext i16 %583 to i32
  %585 = shl i32 %584, %30
  %586 = or i32 %585, %577
  store i32 %586, i32* %532, align 4
  %587 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %546, i32 1, i64 0, i64 %569, i64 1, i64 1
  %588 = load i16, i16* %587, align 2
  %589 = zext i16 %588 to i32
  %590 = shl i32 %589, %30
  %591 = or i32 %590, %580
  br label %599

592:                                              ; preds = %573
  %593 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %546, i32 1, i64 0, i64 %569, i64 0, i64 1
  %594 = load i16, i16* %593, align 2
  %595 = zext i16 %594 to i32
  store i32 %595, i32* %532, align 4
  %596 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %546, i32 1, i64 0, i64 %569, i64 1, i64 1
  %597 = load i16, i16* %596, align 2
  %598 = zext i16 %597 to i32
  br label %599

599:                                              ; preds = %581, %592
  %600 = phi i32 [ %598, %592 ], [ %591, %581 ]
  store i32 %600, i32* %533, align 4
  br label %601

601:                                              ; preds = %599, %574
  store i32 0, i32* %534, align 4
  %602 = load void (i8*, i64, i32*, [4 x i8]*, i64, %struct.Av1FilterLUT*, i32)*, void (i8*, i64, i32*, [4 x i8]*, i64, %struct.Av1FilterLUT*, i32)** %566, align 8
  %603 = shl i64 %569, 2
  %604 = and i64 %603, 4294967292
  %605 = getelementptr inbounds i8, i8* %551, i64 %604
  %606 = getelementptr inbounds [4 x i8], [4 x i8]* %548, i64 %569, i64 2
  %607 = bitcast i8* %606 to [4 x i8]*
  call void %602(i8* %605, i64 %554, i32* nonnull %532, [4 x i8]* %607, i64 %545, %struct.Av1FilterLUT* %537, i32 %538) #2
  %608 = load void (i8*, i64, i32*, [4 x i8]*, i64, %struct.Av1FilterLUT*, i32)*, void (i8*, i64, i32*, [4 x i8]*, i64, %struct.Av1FilterLUT*, i32)** %566, align 8
  %609 = getelementptr inbounds i8, i8* %553, i64 %604
  %610 = getelementptr inbounds [4 x i8], [4 x i8]* %548, i64 %569, i64 3
  %611 = bitcast i8* %610 to [4 x i8]*
  call void %608(i8* %609, i64 %554, i32* nonnull %532, [4 x i8]* %611, i64 %545, %struct.Av1FilterLUT* %537, i32 %538) #2
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %531) #2
  br label %612

612:                                              ; preds = %601, %568
  %613 = add nuw nsw i64 %569, 1
  %614 = icmp eq i64 %613, %567
  br i1 %614, label %615, label %568

615:                                              ; preds = %612
  %616 = load i32, i32* %505, align 16
  br label %617

617:                                              ; preds = %615, %543
  %618 = phi i32 [ %616, %615 ], [ %544, %543 ]
  %619 = add nuw nsw i64 %546, 1
  %620 = sext i32 %618 to i64
  %621 = icmp slt i64 %619, %620
  br i1 %621, label %622, label %626

622:                                              ; preds = %617
  %623 = getelementptr inbounds [4 x i8], [4 x i8]* %548, i64 %542
  %624 = add nuw nsw i64 %547, %540
  %625 = load i64, i64* %506, align 8
  br label %543

626:                                              ; preds = %617
  %627 = icmp sgt i32 %618, 0
  br i1 %627, label %628, label %722

628:                                              ; preds = %626
  %629 = load [4 x i8]*, [4 x i8]** %504, align 16
  %630 = load i64, i64* %506, align 8
  %631 = mul nsw i64 %630, %518
  %632 = getelementptr inbounds [4 x i8], [4 x i8]* %629, i64 %631
  %633 = getelementptr inbounds i8*, i8** %1, i64 1
  %634 = getelementptr inbounds i8*, i8** %1, i64 2
  %635 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 5, i32 3, i64 1
  %636 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 36
  %637 = lshr i32 %17, %27
  %638 = icmp slt i32 %637, %40
  %639 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 31
  %640 = bitcast [3 x i32]* %7 to i8*
  %641 = getelementptr inbounds [3 x i32], [3 x i32]* %7, i64 0, i64 0
  %642 = getelementptr inbounds [3 x i32], [3 x i32]* %7, i64 0, i64 1
  %643 = getelementptr inbounds [3 x i32], [3 x i32]* %7, i64 0, i64 2
  %644 = getelementptr inbounds %struct.Dav1dFrameContext, %struct.Dav1dFrameContext* %0, i64 0, i32 54, i32 10
  %645 = zext i32 %637 to i64
  %646 = lshr i32 128, %29
  %647 = zext i32 %646 to i64
  %648 = lshr i32 32, %29
  %649 = zext i32 %648 to i64
  br label %650

650:                                              ; preds = %718, %628
  %651 = phi i32 [ %618, %628 ], [ %714, %718 ]
  %652 = phi i64 [ %630, %628 ], [ %721, %718 ]
  %653 = phi i64 [ 0, %628 ], [ %715, %718 ]
  %654 = phi i64 [ 0, %628 ], [ %720, %718 ]
  %655 = phi [4 x i8]* [ %632, %628 ], [ %719, %718 ]
  %656 = load i8*, i8** %633, align 8
  %657 = getelementptr inbounds i8, i8* %656, i64 %654
  %658 = load i8*, i8** %634, align 8
  %659 = getelementptr inbounds i8, i8* %658, i64 %654
  %660 = load i64, i64* %635, align 8
  %661 = load i32, i32* %636, align 16
  %662 = trunc i64 %653 to i32
  %663 = shl nsw i32 %662, 5
  %664 = sub nsw i32 %661, %663
  %665 = icmp slt i32 %664, 32
  %666 = select i1 %665, i32 %664, i32 32
  %667 = add nsw i32 %666, %29
  %668 = ashr i32 %667, %29
  br i1 %638, label %669, label %713

669:                                              ; preds = %650
  %670 = load %struct.Dav1dDSPContext*, %struct.Dav1dDSPContext** %639, align 8
  %671 = getelementptr inbounds %struct.Dav1dDSPContext, %struct.Dav1dDSPContext* %670, i64 0, i32 4, i32 0, i64 1, i64 1
  %672 = shl i64 %660, 2
  br label %673

673:                                              ; preds = %705, %669
  %674 = phi i64 [ %645, %669 ], [ %706, %705 ]
  %675 = phi i64 [ 0, %669 ], [ %707, %705 ]
  %676 = phi [4 x i8]* [ %655, %669 ], [ %708, %705 ]
  %677 = trunc i64 %674 to i32
  %678 = or i32 %677, %9
  %679 = icmp eq i32 %678, 0
  br i1 %679, label %705, label %680

680:                                              ; preds = %673
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %640) #2
  %681 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %653, i32 1, i64 1, i64 %674, i64 0, i64 0
  %682 = load i16, i16* %681, align 2
  %683 = zext i16 %682 to i32
  %684 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %653, i32 1, i64 1, i64 %674, i64 0, i64 1
  %685 = load i16, i16* %684, align 2
  %686 = zext i16 %685 to i32
  %687 = shl i32 %686, %31
  %688 = or i32 %687, %683
  store i32 %688, i32* %641, align 4
  %689 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %653, i32 1, i64 1, i64 %674, i64 1, i64 0
  %690 = load i16, i16* %689, align 2
  %691 = zext i16 %690 to i32
  %692 = getelementptr inbounds %struct.Av1Filter, %struct.Av1Filter* %2, i64 %653, i32 1, i64 1, i64 %674, i64 1, i64 1
  %693 = load i16, i16* %692, align 2
  %694 = zext i16 %693 to i32
  %695 = shl i32 %694, %31
  %696 = or i32 %695, %691
  store i32 %696, i32* %642, align 4
  store i32 0, i32* %643, align 4
  %697 = load void (i8*, i64, i32*, [4 x i8]*, i64, %struct.Av1FilterLUT*, i32)*, void (i8*, i64, i32*, [4 x i8]*, i64, %struct.Av1FilterLUT*, i32)** %671, align 8
  %698 = getelementptr inbounds i8, i8* %657, i64 %675
  %699 = getelementptr inbounds [4 x i8], [4 x i8]* %676, i64 0, i64 2
  %700 = bitcast i8* %699 to [4 x i8]*
  call void %697(i8* %698, i64 %660, i32* nonnull %641, [4 x i8]* %700, i64 %652, %struct.Av1FilterLUT* %644, i32 %668) #2
  %701 = load void (i8*, i64, i32*, [4 x i8]*, i64, %struct.Av1FilterLUT*, i32)*, void (i8*, i64, i32*, [4 x i8]*, i64, %struct.Av1FilterLUT*, i32)** %671, align 8
  %702 = getelementptr inbounds i8, i8* %659, i64 %675
  %703 = getelementptr inbounds [4 x i8], [4 x i8]* %676, i64 0, i64 3
  %704 = bitcast i8* %703 to [4 x i8]*
  call void %701(i8* %702, i64 %660, i32* nonnull %641, [4 x i8]* %704, i64 %652, %struct.Av1FilterLUT* %644, i32 %668) #2
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %640) #2
  br label %705

705:                                              ; preds = %680, %673
  %706 = add nuw nsw i64 %674, 1
  %707 = add nsw i64 %675, %672
  %708 = getelementptr inbounds [4 x i8], [4 x i8]* %676, i64 %652
  %709 = trunc i64 %706 to i32
  %710 = icmp eq i32 %40, %709
  br i1 %710, label %711, label %673

711:                                              ; preds = %705
  %712 = load i32, i32* %505, align 16
  br label %713

713:                                              ; preds = %711, %650
  %714 = phi i32 [ %712, %711 ], [ %651, %650 ]
  %715 = add nuw nsw i64 %653, 1
  %716 = sext i32 %714 to i64
  %717 = icmp slt i64 %715, %716
  br i1 %717, label %718, label %722

718:                                              ; preds = %713
  %719 = getelementptr inbounds [4 x i8], [4 x i8]* %655, i64 %649
  %720 = add nuw nsw i64 %654, %647
  %721 = load i64, i64* %506, align 8
  br label %650

722:                                              ; preds = %713, %516, %626, %512
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
