; ModuleID = '../../components/paint_preview/browser/hit_tester.cc'
source_filename = "../../components/paint_preview/browser/hit_tester.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.paint_preview::RectProtoDefaultTypeInternal" = type opaque
%"class.paint_preview::HitTester" = type { %"class.cc::RTree" }
%"class.cc::RTree" = type <{ i64, %"struct.cc::RTree<GURL>::Branch", %"class.std::__1::vector", i8, [7 x i8] }>
%"struct.cc::RTree<GURL>::Branch" = type { %"struct.cc::RTree<GURL>::Node"*, %class.GURL, %"class.gfx::Rect" }
%"struct.cc::RTree<GURL>::Node" = type { i16, i16, [11 x %"struct.cc::RTree<GURL>::Branch"] }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::RTree<GURL>::Node"*, %"struct.cc::RTree<GURL>::Node"*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.cc::RTree<GURL>::Node"* }
%"class.paint_preview::PaintPreviewFrameProto" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedPtrField", %"class.google::protobuf::RepeatedPtrField.19", %"struct.google::protobuf::internal::ArenaStringPtr", i64, i64, i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.google::protobuf::MessageLite" = type { i32 (...)**, %"class.google::protobuf::internal::InternalMetadata" }
%"class.google::protobuf::internal::InternalMetadata" = type { i8* }
%"class.google::protobuf::internal::HasBits" = type { [1 x i32] }
%"class.google::protobuf::internal::CachedSize" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.google::protobuf::RepeatedPtrField" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::internal::RepeatedPtrFieldBase" = type { %"class.google::protobuf::Arena"*, i32, i32, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* }
%"class.google::protobuf::Arena" = type { %"class.google::protobuf::internal::ArenaImpl", void (%"class.std::type_info"*, i64, i8*)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, i8* }
%"class.google::protobuf::internal::ArenaImpl" = type { %"struct.std::__1::atomic.10", %"struct.std::__1::atomic.10", %"struct.std::__1::atomic.14", %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, %"struct.google::protobuf::internal::ArenaImpl::Options" }
%"struct.std::__1::atomic.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { %"class.google::protobuf::internal::ArenaImpl::SerialArena"* }
%"class.google::protobuf::internal::ArenaImpl::SerialArena" = type { %"class.google::protobuf::internal::ArenaImpl"*, i8*, %"class.google::protobuf::internal::ArenaImpl::Block"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, %"class.google::protobuf::internal::ArenaImpl::SerialArena"*, i8*, i8*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"* }
%"struct.google::protobuf::internal::ArenaImpl::CleanupChunk" = type { i64, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, [1 x %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"] }
%"struct.google::protobuf::internal::ArenaImpl::CleanupNode" = type { i8*, void (i8*)* }
%"struct.std::__1::atomic.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl.17" }
%"struct.std::__1::__cxx_atomic_impl.17" = type { %"struct.std::__1::__cxx_atomic_base_impl.18" }
%"struct.std::__1::__cxx_atomic_base_impl.18" = type { i64 }
%"class.google::protobuf::internal::ArenaImpl::Block" = type { %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, i64 }
%"struct.google::protobuf::internal::ArenaImpl::Options" = type { i64, i64, i8*, i64, i8* (i64)*, void (i8*, i64)* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep" = type { i32, [268435454 x i8*] }
%"class.google::protobuf::RepeatedPtrField.19" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"struct.google::protobuf::internal::ArenaStringPtr" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"struct.paint_preview::LinkData"*, %"struct.paint_preview::LinkData"*, %"class.std::__1::__compressed_pair.22" }
%"struct.paint_preview::LinkData" = type { %"class.gfx::Rect", %class.GURL }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.paint_preview::LinkData"* }
%"class.paint_preview::LinkDataProto" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"struct.google::protobuf::internal::ArenaStringPtr", %"class.paint_preview::RectProto"* }
%"class.paint_preview::RectProto" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", i64, i64, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::vector.27" = type { %"class.std::__1::__vector_base.28" }
%"class.std::__1::__vector_base.28" = type { %"class.paint_preview::LinkDataProto"*, %"class.paint_preview::LinkDataProto"*, %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.paint_preview::LinkDataProto"* }
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"struct.cc::RTree<GURL>::Branch"*, %"struct.cc::RTree<GURL>::Branch"*, %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.cc::RTree<GURL>::Branch"* }
%"class.std::__1::vector.34" = type { %"class.std::__1::__vector_base.35" }
%"class.std::__1::__vector_base.35" = type { %class.GURL**, %class.GURL**, %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %class.GURL** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__split_buffer.55" = type { %"struct.cc::RTree<GURL>::Node"*, %"struct.cc::RTree<GURL>::Node"*, %"struct.cc::RTree<GURL>::Node"*, %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.5", %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.std::__1::allocator.7"* }
%"class.std::__1::allocator.7" = type { i8 }

$_ZNSt3__16vectorIN13paint_preview8LinkDataENS_9allocatorIS2_EEE7reserveEm = comdat any

$_ZN2cc5RTreeI4GURLE5BuildINSt3__16vectorIN13paint_preview8LinkDataENS4_9allocatorIS7_EEEEPFN3gfx4RectERKSA_mEPFS1_SE_mEEEvRKT_RKT0_RKT1_ = comdat any

$_ZNSt3__16vectorIN13paint_preview8LinkDataENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZNSt3__16vectorIN2cc5RTreeI4GURLE6BranchIS3_EENS_9allocatorIS6_EEE7reserveEm = comdat any

$_ZNSt3__16vectorIN2cc5RTreeI4GURLE4NodeIS3_EENS_9allocatorIS6_EEE7reserveEm = comdat any

$_ZN2cc5RTreeI4GURLE14BuildRecursiveEPNSt3__16vectorINS2_6BranchIS1_EENS3_9allocatorIS6_EEEEi = comdat any

$_ZNSt3__16vectorIN2cc5RTreeI4GURLE6BranchIS3_EENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJS3_RKN3gfx4RectEEEEvDpOT_ = comdat any

$_ZNSt3__114__split_bufferIN2cc5RTreeI4GURLE4NodeIS3_EERNS_9allocatorIS6_EEED2Ev = comdat any

$_ZNSt3__16vectorIN2cc5RTreeI4GURLE4NodeIS3_EENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJRiEEEvDpOT_ = comdat any

$_ZN2cc5RTreeI4GURLE4NodeIS1_EC2Et = comdat any

$_ZNSt3__16vectorIN2cc5RTreeI4GURLE6BranchIS3_EENS_9allocatorIS6_EEE8__appendEm = comdat any

$_ZNK2cc5RTreeI4GURLE19SearchRefsRecursiveEPNS2_4NodeIS1_EERKN3gfx4RectEPNSt3__16vectorIPKS1_NSA_9allocatorISD_EEEE = comdat any

@_ZN13paint_preview28_RectProto_default_instance_E = external local_unnamed_addr global %"class.paint_preview::RectProtoDefaultTypeInternal", align 1

@_ZN13paint_preview9HitTesterC1Ev = hidden unnamed_addr alias void (%"class.paint_preview::HitTester"*), void (%"class.paint_preview::HitTester"*)* @_ZN13paint_preview9HitTesterC2Ev
@_ZN13paint_preview9HitTesterD1Ev = hidden unnamed_addr alias void (%"class.paint_preview::HitTester"*), void (%"class.paint_preview::HitTester"*)* @_ZN13paint_preview9HitTesterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13paint_preview9HitTesterC2Ev(%"class.paint_preview::HitTester"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.paint_preview::HitTester", %"class.paint_preview::HitTester"* %0, i64 0, i32 0, i32 0
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"class.paint_preview::HitTester", %"class.paint_preview::HitTester"* %0, i64 0, i32 0, i32 1, i32 1
  tail call void @_ZN4GURLC1Ev(%class.GURL* %3) #12
  %4 = getelementptr inbounds %"class.paint_preview::HitTester", %"class.paint_preview::HitTester"* %0, i64 0, i32 0, i32 1, i32 2
  %5 = getelementptr inbounds %"class.paint_preview::HitTester", %"class.paint_preview::HitTester"* %0, i64 0, i32 0, i32 3
  %6 = bitcast %"class.gfx::Rect"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 40, i1 false) #12
  store i8 1, i8* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13paint_preview9HitTesterD2Ev(%"class.paint_preview::HitTester"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.paint_preview::HitTester", %"class.paint_preview::HitTester"* %0, i64 0, i32 0, i32 2
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %"struct.cc::RTree<GURL>::Node"*, %"struct.cc::RTree<GURL>::Node"** %3, align 8
  %5 = icmp eq %"struct.cc::RTree<GURL>::Node"* %4, null
  br i1 %5, label %31, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.cc::RTree<GURL>::Node"* %4 to i8*
  %8 = getelementptr inbounds %"class.paint_preview::HitTester", %"class.paint_preview::HitTester"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %9 = load %"struct.cc::RTree<GURL>::Node"*, %"struct.cc::RTree<GURL>::Node"** %8, align 8
  %10 = icmp eq %"struct.cc::RTree<GURL>::Node"* %9, %4
  br i1 %10, label %29, label %11

11:                                               ; preds = %6, %11
  %12 = phi %"struct.cc::RTree<GURL>::Node"* [ %13, %11 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %12, i64 -1
  %14 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %12, i64 -1, i32 2, i64 10, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %14) #12
  %15 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %12, i64 -1, i32 2, i64 9, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %15) #12
  %16 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %12, i64 -1, i32 2, i64 8, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %16) #12
  %17 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %12, i64 -1, i32 2, i64 7, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %17) #12
  %18 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %12, i64 -1, i32 2, i64 6, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %18) #12
  %19 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %12, i64 -1, i32 2, i64 5, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %19) #12
  %20 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %12, i64 -1, i32 2, i64 4, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %20) #12
  %21 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %12, i64 -1, i32 2, i64 3, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %21) #12
  %22 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %12, i64 -1, i32 2, i64 2, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %22) #12
  %23 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %12, i64 -1, i32 2, i64 1, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %23) #12
  %24 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %12, i64 -1, i32 2, i64 0, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %24) #12
  %25 = icmp eq %"struct.cc::RTree<GURL>::Node"* %13, %4
  br i1 %25, label %26, label %11

26:                                               ; preds = %11
  %27 = bitcast %"class.std::__1::vector"* %2 to i8**
  %28 = load i8*, i8** %27, align 8
  br label %29

29:                                               ; preds = %26, %6
  %30 = phi i8* [ %28, %26 ], [ %7, %6 ]
  store %"struct.cc::RTree<GURL>::Node"* %4, %"struct.cc::RTree<GURL>::Node"** %8, align 8
  tail call void @_ZdlPv(i8* %30) #13
  br label %31

31:                                               ; preds = %1, %29
  %32 = getelementptr inbounds %"class.paint_preview::HitTester", %"class.paint_preview::HitTester"* %0, i64 0, i32 0, i32 1, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %32) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13paint_preview9HitTester5BuildERKNS_22PaintPreviewFrameProtoE(%"class.paint_preview::HitTester"*, %"class.paint_preview::PaintPreviewFrameProto"* nocapture readonly dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = alloca { i64, i64 } (%"class.std::__1::vector.20"*, i64)*, align 8
  %4 = alloca void (%class.GURL*, %"class.std::__1::vector.20"*, i64)*, align 8
  %5 = alloca %"class.std::__1::vector.20", align 8
  %6 = alloca %"struct.paint_preview::LinkData", align 8
  %7 = bitcast %"class.std::__1::vector.20"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %5, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %5, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #12
  %11 = getelementptr inbounds %"class.paint_preview::PaintPreviewFrameProto", %"class.paint_preview::PaintPreviewFrameProto"* %1, i64 0, i32 3, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = sext i32 %12 to i64
  call void @_ZNSt3__16vectorIN13paint_preview8LinkDataENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.20"* nonnull %5, i64 %13)
  %14 = getelementptr inbounds %"class.paint_preview::PaintPreviewFrameProto", %"class.paint_preview::PaintPreviewFrameProto"* %1, i64 0, i32 3, i32 0, i32 3
  %15 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %14, align 8
  %16 = icmp eq %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %15, null
  %17 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %15, i64 0, i32 1, i64 0
  %18 = select i1 %16, i8** null, i8** %17
  %19 = load i32, i32* %11, align 8
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8*, i8** %18, i64 %20
  %22 = icmp eq i32 %19, 0
  br i1 %22, label %31, label %23

23:                                               ; preds = %2
  %24 = bitcast %"struct.paint_preview::LinkData"* %6 to i8*
  %25 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %6, i64 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %6, i64 0, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %6, i64 0, i32 0, i32 1, i32 0
  %28 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %6, i64 0, i32 0, i32 1, i32 1
  %29 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %6, i64 0, i32 1
  %30 = bitcast %"struct.paint_preview::LinkData"** %9 to i64*
  br label %52

31:                                               ; preds = %113, %2
  %32 = getelementptr inbounds %"class.paint_preview::HitTester", %"class.paint_preview::HitTester"* %0, i64 0, i32 0
  %33 = bitcast { i64, i64 } (%"class.std::__1::vector.20"*, i64)** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  store { i64, i64 } (%"class.std::__1::vector.20"*, i64)* @_ZN13paint_preview12_GLOBAL__N_112BoundsGetterERKNSt3__16vectorINS_8LinkDataENS1_9allocatorIS3_EEEEm, { i64, i64 } (%"class.std::__1::vector.20"*, i64)** %3, align 8
  %34 = bitcast void (%class.GURL*, %"class.std::__1::vector.20"*, i64)** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  store void (%class.GURL*, %"class.std::__1::vector.20"*, i64)* @_ZN13paint_preview12_GLOBAL__N_113PayloadGetterERKNSt3__16vectorINS_8LinkDataENS1_9allocatorIS3_EEEEm, void (%class.GURL*, %"class.std::__1::vector.20"*, i64)** %4, align 8
  call void @_ZN2cc5RTreeI4GURLE5BuildINSt3__16vectorIN13paint_preview8LinkDataENS4_9allocatorIS7_EEEEPFN3gfx4RectERKSA_mEPFS1_SE_mEEEvRKT_RKT0_RKT1_(%"class.cc::RTree"* %32, %"class.std::__1::vector.20"* nonnull dereferenceable(24) %5, { i64, i64 } (%"class.std::__1::vector.20"*, i64)** nonnull dereferenceable(8) %3, void (%class.GURL*, %"class.std::__1::vector.20"*, i64)** nonnull dereferenceable(8) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %35 = load %"struct.paint_preview::LinkData"*, %"struct.paint_preview::LinkData"** %8, align 8
  %36 = icmp eq %"struct.paint_preview::LinkData"* %35, null
  br i1 %36, label %51, label %37

37:                                               ; preds = %31
  %38 = bitcast %"struct.paint_preview::LinkData"* %35 to i8*
  %39 = load %"struct.paint_preview::LinkData"*, %"struct.paint_preview::LinkData"** %9, align 8
  %40 = icmp eq %"struct.paint_preview::LinkData"* %39, %35
  br i1 %40, label %49, label %41

41:                                               ; preds = %37, %41
  %42 = phi %"struct.paint_preview::LinkData"* [ %43, %41 ], [ %39, %37 ]
  %43 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %42, i64 -1
  %44 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %42, i64 -1, i32 1
  call void @_ZN4GURLD1Ev(%class.GURL* %44) #12
  %45 = icmp eq %"struct.paint_preview::LinkData"* %43, %35
  br i1 %45, label %46, label %41

46:                                               ; preds = %41
  %47 = bitcast %"class.std::__1::vector.20"* %5 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %46, %37
  %50 = phi i8* [ %48, %46 ], [ %38, %37 ]
  store %"struct.paint_preview::LinkData"* %35, %"struct.paint_preview::LinkData"** %9, align 8
  call void @_ZdlPv(i8* %50) #13
  br label %51

51:                                               ; preds = %31, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #12
  ret void

52:                                               ; preds = %23, %113
  %53 = phi i8** [ %18, %23 ], [ %114, %113 ]
  %54 = bitcast i8** %53 to %"class.paint_preview::LinkDataProto"**
  %55 = load %"class.paint_preview::LinkDataProto"*, %"class.paint_preview::LinkDataProto"** %54, align 8
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %24) #12
  %56 = getelementptr inbounds %"class.paint_preview::LinkDataProto", %"class.paint_preview::LinkDataProto"* %55, i64 0, i32 4
  %57 = load %"class.paint_preview::RectProto"*, %"class.paint_preview::RectProto"** %56, align 8, !noalias !2
  %58 = icmp eq %"class.paint_preview::RectProto"* %57, null
  %59 = select i1 %58, %"class.paint_preview::RectProto"* bitcast (%"class.paint_preview::RectProtoDefaultTypeInternal"* @_ZN13paint_preview28_RectProto_default_instance_E to %"class.paint_preview::RectProto"*), %"class.paint_preview::RectProto"* %57
  %60 = getelementptr inbounds %"class.paint_preview::RectProto", %"class.paint_preview::RectProto"* %59, i64 0, i32 3
  %61 = load i64, i64* %60, align 8, !noalias !2
  %62 = trunc i64 %61 to i32
  %63 = getelementptr inbounds %"class.paint_preview::RectProto", %"class.paint_preview::RectProto"* %59, i64 0, i32 4
  %64 = load i64, i64* %63, align 8, !noalias !2
  %65 = trunc i64 %64 to i32
  %66 = getelementptr inbounds %"class.paint_preview::RectProto", %"class.paint_preview::RectProto"* %59, i64 0, i32 5
  %67 = load i64, i64* %66, align 8, !noalias !2
  %68 = trunc i64 %67 to i32
  %69 = getelementptr inbounds %"class.paint_preview::RectProto", %"class.paint_preview::RectProto"* %59, i64 0, i32 6
  %70 = load i64, i64* %69, align 8, !noalias !2
  %71 = trunc i64 %70 to i32
  store i32 %62, i32* %25, align 8, !alias.scope !2
  store i32 %65, i32* %26, align 4, !alias.scope !2
  %72 = icmp sgt i32 %62, 0
  %73 = icmp sgt i32 %68, 0
  %74 = and i1 %72, %73
  %75 = sub nuw nsw i32 2147483647, %62
  %76 = icmp ult i32 %75, %68
  %77 = and i1 %76, %74
  %78 = select i1 %77, i32 %75, i32 %68
  %79 = icmp sgt i32 %65, 0
  %80 = icmp sgt i32 %71, 0
  %81 = and i1 %79, %80
  %82 = sub nuw nsw i32 2147483647, %65
  %83 = icmp ult i32 %82, %71
  %84 = and i1 %83, %81
  %85 = select i1 %84, i32 %82, i32 %71
  %86 = icmp sgt i32 %78, 0
  %87 = select i1 %86, i32 %78, i32 0
  store i32 %87, i32* %27, align 8, !alias.scope !2
  %88 = icmp sgt i32 %85, 0
  %89 = select i1 %88, i32 %85, i32 0
  store i32 %89, i32* %28, align 4, !alias.scope !2
  %90 = getelementptr inbounds %"class.paint_preview::LinkDataProto", %"class.paint_preview::LinkDataProto"* %55, i64 0, i32 3, i32 0
  %91 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %90, align 8, !noalias !2
  %92 = bitcast %"class.std::__1::basic_string"* %91 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1, !noalias !2
  %95 = icmp slt i8 %94, 0
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8, !noalias !2
  %98 = bitcast %"class.std::__1::basic_string"* %91 to i8*
  %99 = select i1 %95, i8* %97, i8* %98
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %101 = load i64, i64* %100, align 8, !noalias !2
  %102 = zext i8 %94 to i64
  %103 = select i1 %95, i64 %101, i64 %102
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %29, i8* %99, i64 %103) #12
  %104 = load %"struct.paint_preview::LinkData"*, %"struct.paint_preview::LinkData"** %9, align 8
  %105 = load %"struct.paint_preview::LinkData"*, %"struct.paint_preview::LinkData"** %10, align 8
  %106 = icmp ult %"struct.paint_preview::LinkData"* %104, %105
  br i1 %106, label %107, label %112

107:                                              ; preds = %52
  %108 = bitcast %"struct.paint_preview::LinkData"* %104 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %108, i8* nonnull align 8 %24, i64 16, i1 false) #12
  %109 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %104, i64 0, i32 1
  call void @_ZN4GURLC1EOS_(%class.GURL* %109, %class.GURL* dereferenceable(120) %29) #12
  %110 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %104, i64 1
  %111 = ptrtoint %"struct.paint_preview::LinkData"* %110 to i64
  store i64 %111, i64* %30, align 8
  br label %113

112:                                              ; preds = %52
  call void @_ZNSt3__16vectorIN13paint_preview8LinkDataENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.20"* nonnull %5, %"struct.paint_preview::LinkData"* nonnull dereferenceable(136) %6) #12
  br label %113

113:                                              ; preds = %107, %112
  call void @_ZN4GURLD1Ev(%class.GURL* %29) #12
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %24) #12
  %114 = getelementptr inbounds i8*, i8** %53, i64 1
  %115 = icmp eq i8** %114, %21
  br i1 %115, label %31, label %52
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN13paint_preview8LinkDataENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.20"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.paint_preview::LinkData"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.20"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 136
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"struct.paint_preview::LinkData"*
  br i1 %10, label %12, label %60

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"struct.paint_preview::LinkData"** %13 to i64*
  %15 = icmp ugt i64 %1, 135637824071393761
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #14
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 136
  %21 = mul i64 %1, 136
  %22 = tail call i8* @_Znwm(i64 %21) #13
  %23 = bitcast i8* %22 to %"struct.paint_preview::LinkData"*
  %24 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %23, i64 %20
  %25 = ptrtoint %"struct.paint_preview::LinkData"* %24 to i64
  %26 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %23, i64 %1
  %27 = ptrtoint %"struct.paint_preview::LinkData"* %26 to i64
  %28 = inttoptr i64 %18 to %"struct.paint_preview::LinkData"*
  %29 = icmp eq %"struct.paint_preview::LinkData"* %28, %11
  br i1 %29, label %45, label %30

30:                                               ; preds = %17, %30
  %31 = phi %"struct.paint_preview::LinkData"* [ %33, %30 ], [ %24, %17 ]
  %32 = phi %"struct.paint_preview::LinkData"* [ %34, %30 ], [ %28, %17 ]
  %33 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %31, i64 -1
  %34 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %32, i64 -1
  %35 = bitcast %"struct.paint_preview::LinkData"* %33 to i8*
  %36 = bitcast %"struct.paint_preview::LinkData"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 16, i1 false) #12
  %37 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %31, i64 -1, i32 1
  %38 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %32, i64 -1, i32 1
  tail call void @_ZN4GURLC1EOS_(%class.GURL* %37, %class.GURL* dereferenceable(120) %38) #12
  %39 = icmp eq %"struct.paint_preview::LinkData"* %34, %11
  br i1 %39, label %40, label %30

40:                                               ; preds = %30
  %41 = ptrtoint %"struct.paint_preview::LinkData"* %33 to i64
  %42 = load i64, i64* %6, align 8
  %43 = load %"struct.paint_preview::LinkData"*, %"struct.paint_preview::LinkData"** %13, align 8
  %44 = inttoptr i64 %42 to %"struct.paint_preview::LinkData"*
  br label %45

45:                                               ; preds = %17, %40
  %46 = phi %"struct.paint_preview::LinkData"* [ %44, %40 ], [ %28, %17 ]
  %47 = phi %"struct.paint_preview::LinkData"* [ %43, %40 ], [ %11, %17 ]
  %48 = phi i64 [ %41, %40 ], [ %25, %17 ]
  %49 = phi i64 [ %42, %40 ], [ %18, %17 ]
  store i64 %48, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %50 = icmp eq %"struct.paint_preview::LinkData"* %47, %46
  br i1 %50, label %56, label %51

51:                                               ; preds = %45, %51
  %52 = phi %"struct.paint_preview::LinkData"* [ %53, %51 ], [ %47, %45 ]
  %53 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %52, i64 -1
  %54 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %52, i64 -1, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %54) #12
  %55 = icmp eq %"struct.paint_preview::LinkData"* %53, %46
  br i1 %55, label %56, label %51

56:                                               ; preds = %51, %45
  %57 = icmp eq i64 %49, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = inttoptr i64 %49 to i8*
  tail call void @_ZdlPv(i8* %59) #13
  br label %60

60:                                               ; preds = %58, %56, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13paint_preview9HitTester5BuildERKNSt3__16vectorINS_8LinkDataENS1_9allocatorIS3_EEEE(%"class.paint_preview::HitTester"*, %"class.std::__1::vector.20"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca { i64, i64 } (%"class.std::__1::vector.20"*, i64)*, align 8
  %4 = alloca void (%class.GURL*, %"class.std::__1::vector.20"*, i64)*, align 8
  %5 = getelementptr inbounds %"class.paint_preview::HitTester", %"class.paint_preview::HitTester"* %0, i64 0, i32 0
  %6 = bitcast { i64, i64 } (%"class.std::__1::vector.20"*, i64)** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  store { i64, i64 } (%"class.std::__1::vector.20"*, i64)* @_ZN13paint_preview12_GLOBAL__N_112BoundsGetterERKNSt3__16vectorINS_8LinkDataENS1_9allocatorIS3_EEEEm, { i64, i64 } (%"class.std::__1::vector.20"*, i64)** %3, align 8
  %7 = bitcast void (%class.GURL*, %"class.std::__1::vector.20"*, i64)** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  store void (%class.GURL*, %"class.std::__1::vector.20"*, i64)* @_ZN13paint_preview12_GLOBAL__N_113PayloadGetterERKNSt3__16vectorINS_8LinkDataENS1_9allocatorIS3_EEEEm, void (%class.GURL*, %"class.std::__1::vector.20"*, i64)** %4, align 8
  call void @_ZN2cc5RTreeI4GURLE5BuildINSt3__16vectorIN13paint_preview8LinkDataENS4_9allocatorIS7_EEEEPFN3gfx4RectERKSA_mEPFS1_SE_mEEEvRKT_RKT0_RKT1_(%"class.cc::RTree"* %5, %"class.std::__1::vector.20"* dereferenceable(24) %1, { i64, i64 } (%"class.std::__1::vector.20"*, i64)** nonnull dereferenceable(8) %3, void (%class.GURL*, %"class.std::__1::vector.20"*, i64)** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13paint_preview9HitTester5BuildERKNSt3__16vectorINS_13LinkDataProtoENS1_9allocatorIS3_EEEE(%"class.paint_preview::HitTester"*, %"class.std::__1::vector.27"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca { i64, i64 } (%"class.std::__1::vector.20"*, i64)*, align 8
  %4 = alloca void (%class.GURL*, %"class.std::__1::vector.20"*, i64)*, align 8
  %5 = alloca %"class.std::__1::vector.20", align 8
  %6 = alloca %"struct.paint_preview::LinkData", align 8
  %7 = bitcast %"class.std::__1::vector.20"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %5, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %5, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #12
  %11 = getelementptr inbounds %"class.std::__1::vector.27", %"class.std::__1::vector.27"* %1, i64 0, i32 0, i32 1
  %12 = bitcast %"class.paint_preview::LinkDataProto"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.27"* %1 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = sdiv exact i64 %16, 40
  call void @_ZNSt3__16vectorIN13paint_preview8LinkDataENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.20"* nonnull %5, i64 %17)
  %18 = getelementptr inbounds %"class.std::__1::vector.27", %"class.std::__1::vector.27"* %1, i64 0, i32 0, i32 0
  %19 = load %"class.paint_preview::LinkDataProto"*, %"class.paint_preview::LinkDataProto"** %18, align 8
  %20 = load %"class.paint_preview::LinkDataProto"*, %"class.paint_preview::LinkDataProto"** %11, align 8
  %21 = icmp eq %"class.paint_preview::LinkDataProto"* %19, %20
  br i1 %21, label %30, label %22

22:                                               ; preds = %2
  %23 = bitcast %"struct.paint_preview::LinkData"* %6 to i8*
  %24 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %6, i64 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %6, i64 0, i32 0, i32 0, i32 1
  %26 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %6, i64 0, i32 0, i32 1, i32 0
  %27 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %6, i64 0, i32 0, i32 1, i32 1
  %28 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %6, i64 0, i32 1
  %29 = bitcast %"struct.paint_preview::LinkData"** %9 to i64*
  br label %51

30:                                               ; preds = %110, %2
  %31 = getelementptr inbounds %"class.paint_preview::HitTester", %"class.paint_preview::HitTester"* %0, i64 0, i32 0
  %32 = bitcast { i64, i64 } (%"class.std::__1::vector.20"*, i64)** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  store { i64, i64 } (%"class.std::__1::vector.20"*, i64)* @_ZN13paint_preview12_GLOBAL__N_112BoundsGetterERKNSt3__16vectorINS_8LinkDataENS1_9allocatorIS3_EEEEm, { i64, i64 } (%"class.std::__1::vector.20"*, i64)** %3, align 8
  %33 = bitcast void (%class.GURL*, %"class.std::__1::vector.20"*, i64)** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  store void (%class.GURL*, %"class.std::__1::vector.20"*, i64)* @_ZN13paint_preview12_GLOBAL__N_113PayloadGetterERKNSt3__16vectorINS_8LinkDataENS1_9allocatorIS3_EEEEm, void (%class.GURL*, %"class.std::__1::vector.20"*, i64)** %4, align 8
  call void @_ZN2cc5RTreeI4GURLE5BuildINSt3__16vectorIN13paint_preview8LinkDataENS4_9allocatorIS7_EEEEPFN3gfx4RectERKSA_mEPFS1_SE_mEEEvRKT_RKT0_RKT1_(%"class.cc::RTree"* %31, %"class.std::__1::vector.20"* nonnull dereferenceable(24) %5, { i64, i64 } (%"class.std::__1::vector.20"*, i64)** nonnull dereferenceable(8) %3, void (%class.GURL*, %"class.std::__1::vector.20"*, i64)** nonnull dereferenceable(8) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  %34 = load %"struct.paint_preview::LinkData"*, %"struct.paint_preview::LinkData"** %8, align 8
  %35 = icmp eq %"struct.paint_preview::LinkData"* %34, null
  br i1 %35, label %50, label %36

36:                                               ; preds = %30
  %37 = bitcast %"struct.paint_preview::LinkData"* %34 to i8*
  %38 = load %"struct.paint_preview::LinkData"*, %"struct.paint_preview::LinkData"** %9, align 8
  %39 = icmp eq %"struct.paint_preview::LinkData"* %38, %34
  br i1 %39, label %48, label %40

40:                                               ; preds = %36, %40
  %41 = phi %"struct.paint_preview::LinkData"* [ %42, %40 ], [ %38, %36 ]
  %42 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %41, i64 -1
  %43 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %41, i64 -1, i32 1
  call void @_ZN4GURLD1Ev(%class.GURL* %43) #12
  %44 = icmp eq %"struct.paint_preview::LinkData"* %42, %34
  br i1 %44, label %45, label %40

45:                                               ; preds = %40
  %46 = bitcast %"class.std::__1::vector.20"* %5 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %45, %36
  %49 = phi i8* [ %47, %45 ], [ %37, %36 ]
  store %"struct.paint_preview::LinkData"* %34, %"struct.paint_preview::LinkData"** %9, align 8
  call void @_ZdlPv(i8* %49) #13
  br label %50

50:                                               ; preds = %30, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #12
  ret void

51:                                               ; preds = %22, %110
  %52 = phi %"class.paint_preview::LinkDataProto"* [ %19, %22 ], [ %111, %110 ]
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %23) #12
  %53 = getelementptr inbounds %"class.paint_preview::LinkDataProto", %"class.paint_preview::LinkDataProto"* %52, i64 0, i32 4
  %54 = load %"class.paint_preview::RectProto"*, %"class.paint_preview::RectProto"** %53, align 8, !noalias !5
  %55 = icmp eq %"class.paint_preview::RectProto"* %54, null
  %56 = select i1 %55, %"class.paint_preview::RectProto"* bitcast (%"class.paint_preview::RectProtoDefaultTypeInternal"* @_ZN13paint_preview28_RectProto_default_instance_E to %"class.paint_preview::RectProto"*), %"class.paint_preview::RectProto"* %54
  %57 = getelementptr inbounds %"class.paint_preview::RectProto", %"class.paint_preview::RectProto"* %56, i64 0, i32 3
  %58 = load i64, i64* %57, align 8, !noalias !5
  %59 = trunc i64 %58 to i32
  %60 = getelementptr inbounds %"class.paint_preview::RectProto", %"class.paint_preview::RectProto"* %56, i64 0, i32 4
  %61 = load i64, i64* %60, align 8, !noalias !5
  %62 = trunc i64 %61 to i32
  %63 = getelementptr inbounds %"class.paint_preview::RectProto", %"class.paint_preview::RectProto"* %56, i64 0, i32 5
  %64 = load i64, i64* %63, align 8, !noalias !5
  %65 = trunc i64 %64 to i32
  %66 = getelementptr inbounds %"class.paint_preview::RectProto", %"class.paint_preview::RectProto"* %56, i64 0, i32 6
  %67 = load i64, i64* %66, align 8, !noalias !5
  %68 = trunc i64 %67 to i32
  store i32 %59, i32* %24, align 8, !alias.scope !5
  store i32 %62, i32* %25, align 4, !alias.scope !5
  %69 = icmp sgt i32 %59, 0
  %70 = icmp sgt i32 %65, 0
  %71 = and i1 %69, %70
  %72 = sub nuw nsw i32 2147483647, %59
  %73 = icmp ult i32 %72, %65
  %74 = and i1 %73, %71
  %75 = select i1 %74, i32 %72, i32 %65
  %76 = icmp sgt i32 %62, 0
  %77 = icmp sgt i32 %68, 0
  %78 = and i1 %76, %77
  %79 = sub nuw nsw i32 2147483647, %62
  %80 = icmp ult i32 %79, %68
  %81 = and i1 %80, %78
  %82 = select i1 %81, i32 %79, i32 %68
  %83 = icmp sgt i32 %75, 0
  %84 = select i1 %83, i32 %75, i32 0
  store i32 %84, i32* %26, align 8, !alias.scope !5
  %85 = icmp sgt i32 %82, 0
  %86 = select i1 %85, i32 %82, i32 0
  store i32 %86, i32* %27, align 4, !alias.scope !5
  %87 = getelementptr inbounds %"class.paint_preview::LinkDataProto", %"class.paint_preview::LinkDataProto"* %52, i64 0, i32 3, i32 0
  %88 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %87, align 8, !noalias !5
  %89 = bitcast %"class.std::__1::basic_string"* %88 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  %91 = load i8, i8* %90, align 1, !noalias !5
  %92 = icmp slt i8 %91, 0
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8, !noalias !5
  %95 = bitcast %"class.std::__1::basic_string"* %88 to i8*
  %96 = select i1 %92, i8* %94, i8* %95
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %98 = load i64, i64* %97, align 8, !noalias !5
  %99 = zext i8 %91 to i64
  %100 = select i1 %92, i64 %98, i64 %99
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %28, i8* %96, i64 %100) #12
  %101 = load %"struct.paint_preview::LinkData"*, %"struct.paint_preview::LinkData"** %9, align 8
  %102 = load %"struct.paint_preview::LinkData"*, %"struct.paint_preview::LinkData"** %10, align 8
  %103 = icmp ult %"struct.paint_preview::LinkData"* %101, %102
  br i1 %103, label %104, label %109

104:                                              ; preds = %51
  %105 = bitcast %"struct.paint_preview::LinkData"* %101 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* nonnull align 8 %23, i64 16, i1 false) #12
  %106 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %101, i64 0, i32 1
  call void @_ZN4GURLC1EOS_(%class.GURL* %106, %class.GURL* dereferenceable(120) %28) #12
  %107 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %101, i64 1
  %108 = ptrtoint %"struct.paint_preview::LinkData"* %107 to i64
  store i64 %108, i64* %29, align 8
  br label %110

109:                                              ; preds = %51
  call void @_ZNSt3__16vectorIN13paint_preview8LinkDataENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.20"* nonnull %5, %"struct.paint_preview::LinkData"* nonnull dereferenceable(136) %6) #12
  br label %110

110:                                              ; preds = %104, %109
  call void @_ZN4GURLD1Ev(%class.GURL* %28) #12
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %23) #12
  %111 = getelementptr inbounds %"class.paint_preview::LinkDataProto", %"class.paint_preview::LinkDataProto"* %52, i64 1
  %112 = icmp eq %"class.paint_preview::LinkDataProto"* %111, %20
  br i1 %112, label %30, label %51
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2cc5RTreeI4GURLE5BuildINSt3__16vectorIN13paint_preview8LinkDataENS4_9allocatorIS7_EEEEPFN3gfx4RectERKSA_mEPFS1_SE_mEEEvRKT_RKT0_RKT1_(%"class.cc::RTree"*, %"class.std::__1::vector.20"* dereferenceable(24), { i64, i64 } (%"class.std::__1::vector.20"*, i64)** dereferenceable(8), void (%class.GURL*, %"class.std::__1::vector.20"*, i64)** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca i32, align 4
  %6 = alloca %class.GURL, align 8
  %7 = alloca %"class.std::__1::vector.45", align 8
  %8 = alloca { i64, i64 }, align 8
  %9 = bitcast { i64, i64 }* %8 to %"class.gfx::Rect"*
  %10 = alloca %class.GURL, align 8
  %11 = alloca %"struct.cc::RTree<GURL>::Branch", align 8
  %12 = bitcast %"class.std::__1::vector.45"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #12
  %13 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %7, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %7, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #12
  %16 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %1, i64 0, i32 0, i32 1
  %17 = bitcast %"struct.paint_preview::LinkData"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector.20"* %1 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = sdiv exact i64 %21, 136
  call void @_ZNSt3__16vectorIN2cc5RTreeI4GURLE6BranchIS3_EENS_9allocatorIS6_EEE7reserveEm(%"class.std::__1::vector.45"* nonnull %7, i64 %22)
  %23 = load i64, i64* %17, align 8
  %24 = load i64, i64* %19, align 8
  %25 = icmp eq i64 %23, %24
  br i1 %25, label %26, label %28

26:                                               ; preds = %4
  %27 = bitcast %"struct.cc::RTree<GURL>::Branch"** %14 to i64*
  br label %35

28:                                               ; preds = %4
  %29 = bitcast { i64, i64 }* %8 to i8*
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 0
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  %32 = bitcast %class.GURL* %10 to i8*
  %33 = bitcast %class.GURL* %6 to i8*
  %34 = bitcast %"struct.cc::RTree<GURL>::Branch"** %14 to i64*
  br label %44

35:                                               ; preds = %67, %26
  %36 = phi i64* [ %27, %26 ], [ %34, %67 ]
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.std::__1::vector.45"* %7 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %37, %39
  %41 = sdiv exact i64 %40, 144
  %42 = getelementptr inbounds %"class.cc::RTree", %"class.cc::RTree"* %0, i64 0, i32 0
  store i64 %41, i64* %42, align 8
  %43 = inttoptr i64 %39 to %"struct.cc::RTree<GURL>::Branch"*
  switch i64 %41, label %110 [
    i64 1, label %74
    i64 0, label %134
  ]

44:                                               ; preds = %28, %67
  %45 = phi i64 [ 0, %28 ], [ %68, %67 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #12
  %46 = load { i64, i64 } (%"class.std::__1::vector.20"*, i64)*, { i64, i64 } (%"class.std::__1::vector.20"*, i64)** %2, align 8
  %47 = call { i64, i64 } %46(%"class.std::__1::vector.20"* dereferenceable(24) %1, i64 %45) #12
  %48 = extractvalue { i64, i64 } %47, 0
  store i64 %48, i64* %30, align 8
  %49 = extractvalue { i64, i64 } %47, 1
  store i64 %49, i64* %31, align 8
  %50 = trunc i64 %49 to i32
  %51 = icmp eq i32 %50, 0
  %52 = icmp ult i64 %49, 4294967296
  %53 = or i1 %51, %52
  br i1 %53, label %67, label %54

54:                                               ; preds = %44
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %32) #12
  %55 = load void (%class.GURL*, %"class.std::__1::vector.20"*, i64)*, void (%class.GURL*, %"class.std::__1::vector.20"*, i64)** %3, align 8
  call void %55(%class.GURL* nonnull sret %10, %"class.std::__1::vector.20"* dereferenceable(24) %1, i64 %45) #12
  %56 = load %"struct.cc::RTree<GURL>::Branch"*, %"struct.cc::RTree<GURL>::Branch"** %14, align 8
  %57 = load %"struct.cc::RTree<GURL>::Branch"*, %"struct.cc::RTree<GURL>::Branch"** %15, align 8
  %58 = icmp ult %"struct.cc::RTree<GURL>::Branch"* %56, %57
  br i1 %58, label %59, label %65

59:                                               ; preds = %54
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %33) #12
  call void @_ZN4GURLC1EOS_(%class.GURL* nonnull %6, %class.GURL* nonnull dereferenceable(120) %10) #12
  %60 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %56, i64 0, i32 1
  call void @_ZN4GURLC1EOS_(%class.GURL* %60, %class.GURL* nonnull dereferenceable(120) %6) #12
  %61 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %56, i64 0, i32 2
  %62 = bitcast %"class.gfx::Rect"* %61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* nonnull align 8 %29, i64 16, i1 false) #12
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %33) #12
  %63 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %56, i64 1
  %64 = ptrtoint %"struct.cc::RTree<GURL>::Branch"* %63 to i64
  store i64 %64, i64* %34, align 8
  br label %66

65:                                               ; preds = %54
  call void @_ZNSt3__16vectorIN2cc5RTreeI4GURLE6BranchIS3_EENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJS3_RKN3gfx4RectEEEEvDpOT_(%"class.std::__1::vector.45"* nonnull %7, %class.GURL* nonnull dereferenceable(120) %10, %"class.gfx::Rect"* nonnull dereferenceable(16) %9) #12
  br label %66

66:                                               ; preds = %59, %65
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %32) #12
  br label %67

67:                                               ; preds = %44, %66
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #12
  %68 = add nuw i64 %45, 1
  %69 = load i64, i64* %17, align 8
  %70 = load i64, i64* %19, align 8
  %71 = sub i64 %69, %70
  %72 = sdiv exact i64 %71, 136
  %73 = icmp ult i64 %68, %72
  br i1 %73, label %44, label %35

74:                                               ; preds = %35
  %75 = getelementptr inbounds %"class.cc::RTree", %"class.cc::RTree"* %0, i64 0, i32 2
  call void @_ZNSt3__16vectorIN2cc5RTreeI4GURLE4NodeIS3_EENS_9allocatorIS6_EEE7reserveEm(%"class.std::__1::vector"* %75, i64 1)
  %76 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %76)
  store i32 0, i32* %5, align 4
  %77 = getelementptr inbounds %"class.cc::RTree", %"class.cc::RTree"* %0, i64 0, i32 2, i32 0, i32 1
  %78 = load %"struct.cc::RTree<GURL>::Node"*, %"struct.cc::RTree<GURL>::Node"** %77, align 8
  %79 = getelementptr inbounds %"class.cc::RTree", %"class.cc::RTree"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %80 = load %"struct.cc::RTree<GURL>::Node"*, %"struct.cc::RTree<GURL>::Node"** %79, align 8
  %81 = icmp ult %"struct.cc::RTree<GURL>::Node"* %78, %80
  br i1 %81, label %82, label %86

82:                                               ; preds = %74
  call void @_ZN2cc5RTreeI4GURLE4NodeIS1_EC2Et(%"struct.cc::RTree<GURL>::Node"* %78, i16 zeroext 0) #12
  %83 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %78, i64 1
  %84 = ptrtoint %"struct.cc::RTree<GURL>::Node"* %83 to i64
  %85 = bitcast %"struct.cc::RTree<GURL>::Node"** %77 to i64*
  store i64 %84, i64* %85, align 8
  br label %88

86:                                               ; preds = %74
  call void @_ZNSt3__16vectorIN2cc5RTreeI4GURLE4NodeIS3_EENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJRiEEEvDpOT_(%"class.std::__1::vector"* %75, i32* nonnull dereferenceable(4) %5) #12
  %87 = load %"struct.cc::RTree<GURL>::Node"*, %"struct.cc::RTree<GURL>::Node"** %77, align 8
  br label %88

88:                                               ; preds = %82, %86
  %89 = phi %"struct.cc::RTree<GURL>::Node"* [ %83, %82 ], [ %87, %86 ]
  %90 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %89, i64 -1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %76)
  %91 = getelementptr inbounds %"class.cc::RTree", %"class.cc::RTree"* %0, i64 0, i32 1, i32 0
  store %"struct.cc::RTree<GURL>::Node"* %90, %"struct.cc::RTree<GURL>::Node"** %91, align 8
  %92 = load %"struct.cc::RTree<GURL>::Branch"*, %"struct.cc::RTree<GURL>::Branch"** %13, align 8
  %93 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %92, i64 0, i32 2
  %94 = getelementptr inbounds %"class.cc::RTree", %"class.cc::RTree"* %0, i64 0, i32 1, i32 2
  %95 = bitcast %"class.gfx::Rect"* %94 to i8*
  %96 = bitcast %"class.gfx::Rect"* %93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 4 %96, i64 16, i1 false)
  %97 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %90, i64 0, i32 0
  store i16 1, i16* %97, align 8
  %98 = load %"struct.cc::RTree<GURL>::Branch"*, %"struct.cc::RTree<GURL>::Branch"** %13, align 8
  %99 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %89, i64 -1, i32 2, i64 0
  %100 = bitcast %"struct.cc::RTree<GURL>::Branch"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"struct.cc::RTree<GURL>::Branch"* %99 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %89, i64 -1, i32 2, i64 0, i32 1
  %104 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %98, i64 0, i32 1
  %105 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %103, %class.GURL* dereferenceable(120) %104) #12
  %106 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %89, i64 -1, i32 2, i64 0, i32 2
  %107 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %98, i64 0, i32 2
  %108 = bitcast %"class.gfx::Rect"* %106 to i8*
  %109 = bitcast %"class.gfx::Rect"* %107 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %108, i8* align 8 %109, i64 16, i1 false) #12
  br label %132

110:                                              ; preds = %35
  %111 = uitofp i64 %41 to double
  %112 = call double @log(double %111) #12
  %113 = fdiv double %112, 0x40032EE3B77F374C
  %114 = call double @pow(double 1.100000e+01, double %113) #12
  %115 = fadd double %114, -1.000000e+00
  %116 = fdiv double %115, 1.000000e+01
  %117 = fptoui double %116 to i64
  %118 = add i64 %117, 6
  %119 = getelementptr inbounds %"class.cc::RTree", %"class.cc::RTree"* %0, i64 0, i32 2
  call void @_ZNSt3__16vectorIN2cc5RTreeI4GURLE4NodeIS3_EENS_9allocatorIS6_EEE7reserveEm(%"class.std::__1::vector"* %119, i64 %118)
  %120 = bitcast %"struct.cc::RTree<GURL>::Branch"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %120) #12
  call void @_ZN2cc5RTreeI4GURLE14BuildRecursiveEPNSt3__16vectorINS2_6BranchIS1_EENS3_9allocatorIS6_EEEEi(%"struct.cc::RTree<GURL>::Branch"* nonnull sret %11, %"class.cc::RTree"* %0, %"class.std::__1::vector.45"* nonnull %7, i32 0)
  %121 = getelementptr inbounds %"class.cc::RTree", %"class.cc::RTree"* %0, i64 0, i32 1
  %122 = bitcast %"struct.cc::RTree<GURL>::Branch"* %11 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.cc::RTree<GURL>::Branch"* %121 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.cc::RTree", %"class.cc::RTree"* %0, i64 0, i32 1, i32 1
  %126 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %11, i64 0, i32 1
  %127 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %125, %class.GURL* dereferenceable(120) %126) #12
  %128 = getelementptr inbounds %"class.cc::RTree", %"class.cc::RTree"* %0, i64 0, i32 1, i32 2
  %129 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %11, i64 0, i32 2
  %130 = bitcast %"class.gfx::Rect"* %128 to i8*
  %131 = bitcast %"class.gfx::Rect"* %129 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %130, i8* align 8 %131, i64 16, i1 false) #12
  call void @_ZN4GURLD1Ev(%class.GURL* %126) #12
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %120) #12
  br label %132

132:                                              ; preds = %88, %110
  %133 = load %"struct.cc::RTree<GURL>::Branch"*, %"struct.cc::RTree<GURL>::Branch"** %13, align 8
  br label %134

134:                                              ; preds = %132, %35
  %135 = phi %"struct.cc::RTree<GURL>::Branch"* [ %133, %132 ], [ %43, %35 ]
  %136 = icmp eq %"struct.cc::RTree<GURL>::Branch"* %135, null
  br i1 %136, label %151, label %137

137:                                              ; preds = %134
  %138 = bitcast %"struct.cc::RTree<GURL>::Branch"* %135 to i8*
  %139 = load %"struct.cc::RTree<GURL>::Branch"*, %"struct.cc::RTree<GURL>::Branch"** %14, align 8
  %140 = icmp eq %"struct.cc::RTree<GURL>::Branch"* %139, %135
  br i1 %140, label %149, label %141

141:                                              ; preds = %137, %141
  %142 = phi %"struct.cc::RTree<GURL>::Branch"* [ %143, %141 ], [ %139, %137 ]
  %143 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %142, i64 -1
  %144 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %142, i64 -1, i32 1
  call void @_ZN4GURLD1Ev(%class.GURL* %144) #12
  %145 = icmp eq %"struct.cc::RTree<GURL>::Branch"* %143, %135
  br i1 %145, label %146, label %141

146:                                              ; preds = %141
  %147 = bitcast %"class.std::__1::vector.45"* %7 to i8**
  %148 = load i8*, i8** %147, align 8
  br label %149

149:                                              ; preds = %146, %137
  %150 = phi i8* [ %148, %146 ], [ %138, %137 ]
  store %"struct.cc::RTree<GURL>::Branch"* %135, %"struct.cc::RTree<GURL>::Branch"** %14, align 8
  call void @_ZdlPv(i8* %150) #13
  br label %151

151:                                              ; preds = %134, %149
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #12
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal { i64, i64 } @_ZN13paint_preview12_GLOBAL__N_112BoundsGetterERKNSt3__16vectorINS_8LinkDataENS1_9allocatorIS3_EEEEm(%"class.std::__1::vector.20"* nocapture readonly dereferenceable(24), i64) #2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.paint_preview::LinkData"*, %"struct.paint_preview::LinkData"** %3, align 8
  %5 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %4, i64 %1
  %6 = bitcast %"struct.paint_preview::LinkData"* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %4, i64 %1, i32 0, i32 1
  %9 = bitcast %"class.gfx::Size"* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = insertvalue { i64, i64 } undef, i64 %7, 0
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1
  ret { i64, i64 } %12
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN13paint_preview12_GLOBAL__N_113PayloadGetterERKNSt3__16vectorINS_8LinkDataENS1_9allocatorIS3_EEEEm(%class.GURL* noalias sret, %"class.std::__1::vector.20"* nocapture readonly dereferenceable(24), i64) #0 {
  %4 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %1, i64 0, i32 0, i32 0
  %5 = load %"struct.paint_preview::LinkData"*, %"struct.paint_preview::LinkData"** %4, align 8
  %6 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %5, i64 %2, i32 1
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %0, %class.GURL* dereferenceable(120) %6) #12
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN13paint_preview9HitTester7IsValidEv(%"class.paint_preview::HitTester"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.paint_preview::HitTester", %"class.paint_preview::HitTester"* %0, i64 0, i32 0, i32 3
  %3 = load i8, i8* %2, align 8, !range !8
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13paint_preview9HitTester7HitTestERKN3gfx4RectEPNSt3__16vectorIPK4GURLNS5_9allocatorIS9_EEEE(%"class.paint_preview::HitTester"*, %"class.gfx::Rect"* dereferenceable(16), %"class.std::__1::vector.34"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.paint_preview::HitTester", %"class.paint_preview::HitTester"* %0, i64 0, i32 0
  %5 = bitcast %"class.std::__1::vector.34"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %2, i64 0, i32 0, i32 1
  %8 = bitcast %class.GURL*** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = getelementptr inbounds %"class.paint_preview::HitTester", %"class.paint_preview::HitTester"* %0, i64 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %112, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.paint_preview::HitTester", %"class.paint_preview::HitTester"* %0, i64 0, i32 0, i32 3
  %14 = load i8, i8* %13, align 8, !range !8
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %106

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.paint_preview::HitTester", %"class.paint_preview::HitTester"* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load %"struct.cc::RTree<GURL>::Node"*, %"struct.cc::RTree<GURL>::Node"** %17, align 8
  %19 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %18, i64 0, i32 0
  %20 = load i16, i16* %19, align 8
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %112, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %18, i64 0, i32 1
  %24 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast %class.GURL*** %24 to i64*
  %26 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %2, i64 0, i32 0, i32 0
  br label %27

27:                                               ; preds = %101, %22
  %28 = phi i64 [ 0, %22 ], [ %102, %101 ]
  %29 = load i16, i16* %23, align 2
  %30 = icmp eq i16 %29, 0
  br i1 %30, label %31, label %98

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %18, i64 0, i32 2, i64 %28, i32 2
  %33 = tail call zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"* %1, %"class.gfx::Rect"* dereferenceable(16) %32) #12
  br i1 %33, label %34, label %101

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %18, i64 0, i32 2, i64 %28, i32 1
  %36 = ptrtoint %class.GURL* %35 to i64
  %37 = load %class.GURL**, %class.GURL*** %7, align 8
  %38 = load %class.GURL**, %class.GURL*** %24, align 8
  %39 = icmp ult %class.GURL** %37, %38
  %40 = ptrtoint %class.GURL** %38 to i64
  br i1 %39, label %41, label %45

41:                                               ; preds = %34
  %42 = bitcast %class.GURL** %37 to i64*
  store i64 %36, i64* %42, align 8
  %43 = getelementptr inbounds %class.GURL*, %class.GURL** %37, i64 1
  %44 = ptrtoint %class.GURL** %43 to i64
  store i64 %44, i64* %8, align 8
  br label %101

45:                                               ; preds = %34
  %46 = ptrtoint %class.GURL** %37 to i64
  %47 = load i64, i64* %5, align 8
  %48 = sub i64 %46, %47
  %49 = ashr exact i64 %48, 3
  %50 = add nsw i64 %49, 1
  %51 = icmp ugt i64 %50, 2305843009213693951
  br i1 %51, label %52, label %54

52:                                               ; preds = %45
  %53 = bitcast %"class.std::__1::vector.34"* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %53) #14
  unreachable

54:                                               ; preds = %45
  %55 = sub i64 %40, %47
  %56 = ashr exact i64 %55, 3
  %57 = icmp ult i64 %56, 1152921504606846975
  br i1 %57, label %58, label %66

58:                                               ; preds = %54
  %59 = ashr exact i64 %55, 2
  %60 = icmp ult i64 %59, %50
  %61 = select i1 %60, i64 %50, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 2305843009213693951
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void @abort() #14
  unreachable

66:                                               ; preds = %63, %54
  %67 = phi i64 [ %61, %63 ], [ 2305843009213693951, %54 ]
  %68 = shl i64 %67, 3
  %69 = tail call i8* @_Znwm(i64 %68) #13
  %70 = bitcast i8* %69 to %class.GURL**
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi %class.GURL** [ %70, %66 ], [ null, %58 ]
  %74 = getelementptr inbounds %class.GURL*, %class.GURL** %73, i64 %49
  %75 = getelementptr inbounds %class.GURL*, %class.GURL** %73, i64 %72
  %76 = ptrtoint %class.GURL** %75 to i64
  %77 = bitcast %class.GURL** %74 to i64*
  store i64 %36, i64* %77, align 8
  %78 = getelementptr inbounds %class.GURL*, %class.GURL** %74, i64 1
  %79 = ptrtoint %class.GURL** %78 to i64
  %80 = load %class.GURL**, %class.GURL*** %26, align 8
  %81 = load i64, i64* %8, align 8
  %82 = ptrtoint %class.GURL** %80 to i64
  %83 = sub i64 %81, %82
  %84 = ashr exact i64 %83, 3
  %85 = sub nsw i64 0, %84
  %86 = getelementptr inbounds %class.GURL*, %class.GURL** %74, i64 %85
  %87 = ptrtoint %class.GURL** %86 to i64
  %88 = icmp sgt i64 %83, 0
  br i1 %88, label %89, label %93

89:                                               ; preds = %71
  %90 = bitcast %class.GURL** %86 to i8*
  %91 = bitcast %class.GURL** %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %91, i64 %83, i1 false) #12
  %92 = load %class.GURL**, %class.GURL*** %26, align 8
  br label %93

93:                                               ; preds = %89, %71
  %94 = phi %class.GURL** [ %80, %71 ], [ %92, %89 ]
  store i64 %87, i64* %5, align 8
  store i64 %79, i64* %8, align 8
  store i64 %76, i64* %25, align 8
  %95 = icmp eq %class.GURL** %94, null
  br i1 %95, label %101, label %96

96:                                               ; preds = %93
  %97 = bitcast %class.GURL** %94 to i8*
  tail call void @_ZdlPv(i8* %97) #13
  br label %101

98:                                               ; preds = %27
  %99 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %18, i64 0, i32 2, i64 %28, i32 0
  %100 = load %"struct.cc::RTree<GURL>::Node"*, %"struct.cc::RTree<GURL>::Node"** %99, align 8
  tail call void @_ZNK2cc5RTreeI4GURLE19SearchRefsRecursiveEPNS2_4NodeIS1_EERKN3gfx4RectEPNSt3__16vectorIPKS1_NSA_9allocatorISD_EEEE(%"class.cc::RTree"* %4, %"struct.cc::RTree<GURL>::Node"* %100, %"class.gfx::Rect"* dereferenceable(16) %1, %"class.std::__1::vector.34"* %2) #12
  br label %101

101:                                              ; preds = %96, %93, %41, %98, %31
  %102 = add nuw nsw i64 %28, 1
  %103 = load i16, i16* %19, align 8
  %104 = zext i16 %103 to i64
  %105 = icmp ult i64 %102, %104
  br i1 %105, label %27, label %112

106:                                              ; preds = %12
  %107 = getelementptr inbounds %"class.paint_preview::HitTester", %"class.paint_preview::HitTester"* %0, i64 0, i32 0, i32 1, i32 2
  %108 = tail call zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"* %1, %"class.gfx::Rect"* dereferenceable(16) %107) #12
  br i1 %108, label %109, label %112

109:                                              ; preds = %106
  %110 = getelementptr inbounds %"class.paint_preview::HitTester", %"class.paint_preview::HitTester"* %0, i64 0, i32 0, i32 1, i32 0
  %111 = load %"struct.cc::RTree<GURL>::Node"*, %"struct.cc::RTree<GURL>::Node"** %110, align 8
  tail call void @_ZNK2cc5RTreeI4GURLE19SearchRefsRecursiveEPNS2_4NodeIS1_EERKN3gfx4RectEPNSt3__16vectorIPKS1_NSA_9allocatorISD_EEEE(%"class.cc::RTree"* %4, %"struct.cc::RTree<GURL>::Node"* %111, %"class.gfx::Rect"* dereferenceable(16) %1, %"class.std::__1::vector.34"* %2) #12
  br label %112

112:                                              ; preds = %101, %16, %3, %106, %109
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13paint_preview9HitTester5ResetEv(%"class.paint_preview::HitTester"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.paint_preview::HitTester", %"class.paint_preview::HitTester"* %0, i64 0, i32 0, i32 0
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"class.paint_preview::HitTester", %"class.paint_preview::HitTester"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = load %"struct.cc::RTree<GURL>::Node"*, %"struct.cc::RTree<GURL>::Node"** %3, align 8
  %5 = getelementptr inbounds %"class.paint_preview::HitTester", %"class.paint_preview::HitTester"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %6 = load %"struct.cc::RTree<GURL>::Node"*, %"struct.cc::RTree<GURL>::Node"** %5, align 8
  %7 = icmp eq %"struct.cc::RTree<GURL>::Node"* %6, %4
  br i1 %7, label %23, label %8

8:                                                ; preds = %1, %8
  %9 = phi %"struct.cc::RTree<GURL>::Node"* [ %10, %8 ], [ %6, %1 ]
  %10 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %9, i64 -1
  %11 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %9, i64 -1, i32 2, i64 10, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %11) #12
  %12 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %9, i64 -1, i32 2, i64 9, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %12) #12
  %13 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %9, i64 -1, i32 2, i64 8, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %13) #12
  %14 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %9, i64 -1, i32 2, i64 7, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %14) #12
  %15 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %9, i64 -1, i32 2, i64 6, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %15) #12
  %16 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %9, i64 -1, i32 2, i64 5, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %16) #12
  %17 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %9, i64 -1, i32 2, i64 4, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %17) #12
  %18 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %9, i64 -1, i32 2, i64 3, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %18) #12
  %19 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %9, i64 -1, i32 2, i64 2, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %19) #12
  %20 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %9, i64 -1, i32 2, i64 1, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %20) #12
  %21 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %9, i64 -1, i32 2, i64 0, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %21) #12
  %22 = icmp eq %"struct.cc::RTree<GURL>::Node"* %10, %4
  br i1 %22, label %23, label %8

23:                                               ; preds = %8, %1
  store %"struct.cc::RTree<GURL>::Node"* %4, %"struct.cc::RTree<GURL>::Node"** %5, align 8
  %24 = getelementptr inbounds %"class.paint_preview::HitTester", %"class.paint_preview::HitTester"* %0, i64 0, i32 0, i32 1, i32 2
  %25 = bitcast %"class.gfx::Rect"* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #12
  %26 = getelementptr inbounds %"class.paint_preview::HitTester", %"class.paint_preview::HitTester"* %0, i64 0, i32 0, i32 3
  store i8 1, i8* %26, align 8
  ret void
}

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #3

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4GURLC1EOS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN13paint_preview8LinkDataENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.20"*, %"struct.paint_preview::LinkData"* dereferenceable(136)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.paint_preview::LinkData"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.20"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 136
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 135637824071393761
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.20"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.paint_preview::LinkData"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 136
  %20 = icmp ult i64 %19, 67818912035696880
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 135637824071393761, %14 ]
  %28 = mul i64 %27, 136
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"struct.paint_preview::LinkData"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.paint_preview::LinkData"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %33, i64 %32
  %36 = ptrtoint %"struct.paint_preview::LinkData"* %35 to i64
  %37 = bitcast %"struct.paint_preview::LinkData"* %34 to i8*
  %38 = bitcast %"struct.paint_preview::LinkData"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 16, i1 false) #12
  %39 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %33, i64 %9, i32 1
  %40 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %1, i64 0, i32 1
  tail call void @_ZN4GURLC1EOS_(%class.GURL* %39, %class.GURL* dereferenceable(120) %40) #12
  %41 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %34, i64 1
  %42 = ptrtoint %"struct.paint_preview::LinkData"* %41 to i64
  %43 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %0, i64 0, i32 0, i32 0
  %44 = load %"struct.paint_preview::LinkData"*, %"struct.paint_preview::LinkData"** %43, align 8
  %45 = load %"struct.paint_preview::LinkData"*, %"struct.paint_preview::LinkData"** %3, align 8
  %46 = icmp eq %"struct.paint_preview::LinkData"* %45, %44
  br i1 %46, label %47, label %49

47:                                               ; preds = %31
  %48 = ptrtoint %"struct.paint_preview::LinkData"* %44 to i64
  br label %62

49:                                               ; preds = %31, %49
  %50 = phi %"struct.paint_preview::LinkData"* [ %52, %49 ], [ %34, %31 ]
  %51 = phi %"struct.paint_preview::LinkData"* [ %53, %49 ], [ %45, %31 ]
  %52 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %50, i64 -1
  %53 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %51, i64 -1
  %54 = bitcast %"struct.paint_preview::LinkData"* %52 to i8*
  %55 = bitcast %"struct.paint_preview::LinkData"* %53 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 16, i1 false) #12
  %56 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %50, i64 -1, i32 1
  %57 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %51, i64 -1, i32 1
  tail call void @_ZN4GURLC1EOS_(%class.GURL* %56, %class.GURL* dereferenceable(120) %57) #12
  %58 = icmp eq %"struct.paint_preview::LinkData"* %53, %44
  br i1 %58, label %59, label %49

59:                                               ; preds = %49
  %60 = load i64, i64* %6, align 8
  %61 = load %"struct.paint_preview::LinkData"*, %"struct.paint_preview::LinkData"** %3, align 8
  br label %62

62:                                               ; preds = %47, %59
  %63 = phi %"struct.paint_preview::LinkData"* [ %44, %47 ], [ %61, %59 ]
  %64 = phi %"struct.paint_preview::LinkData"* [ %34, %47 ], [ %52, %59 ]
  %65 = phi i64 [ %48, %47 ], [ %60, %59 ]
  %66 = ptrtoint %"struct.paint_preview::LinkData"* %64 to i64
  store i64 %66, i64* %6, align 8
  store i64 %42, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %67 = inttoptr i64 %65 to %"struct.paint_preview::LinkData"*
  %68 = icmp eq %"struct.paint_preview::LinkData"* %63, %67
  br i1 %68, label %74, label %69

69:                                               ; preds = %62, %69
  %70 = phi %"struct.paint_preview::LinkData"* [ %71, %69 ], [ %63, %62 ]
  %71 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %70, i64 -1
  %72 = getelementptr inbounds %"struct.paint_preview::LinkData", %"struct.paint_preview::LinkData"* %70, i64 -1, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %72) #12
  %73 = icmp eq %"struct.paint_preview::LinkData"* %71, %67
  br i1 %73, label %74, label %69

74:                                               ; preds = %69, %62
  %75 = icmp eq i64 %65, 0
  br i1 %75, label %78, label %76

76:                                               ; preds = %74
  %77 = inttoptr i64 %65 to i8*
  tail call void @_ZdlPv(i8* %77) #13
  br label %78

78:                                               ; preds = %74, %76
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc5RTreeI4GURLE6BranchIS3_EENS_9allocatorIS6_EEE7reserveEm(%"class.std::__1::vector.45"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.cc::RTree<GURL>::Branch"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.45"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 144
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"struct.cc::RTree<GURL>::Branch"*
  br i1 %10, label %12, label %65

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"struct.cc::RTree<GURL>::Branch"** %13 to i64*
  %15 = icmp ugt i64 %1, 128102389400760775
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #14
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 144
  %21 = mul i64 %1, 144
  %22 = tail call i8* @_Znwm(i64 %21) #13
  %23 = bitcast i8* %22 to %"struct.cc::RTree<GURL>::Branch"*
  %24 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %23, i64 %20
  %25 = ptrtoint %"struct.cc::RTree<GURL>::Branch"* %24 to i64
  %26 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %23, i64 %1
  %27 = ptrtoint %"struct.cc::RTree<GURL>::Branch"* %26 to i64
  %28 = inttoptr i64 %18 to %"struct.cc::RTree<GURL>::Branch"*
  %29 = icmp eq %"struct.cc::RTree<GURL>::Branch"* %28, %11
  br i1 %29, label %50, label %30

30:                                               ; preds = %17, %30
  %31 = phi %"struct.cc::RTree<GURL>::Branch"* [ %33, %30 ], [ %24, %17 ]
  %32 = phi %"struct.cc::RTree<GURL>::Branch"* [ %34, %30 ], [ %28, %17 ]
  %33 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %31, i64 -1
  %34 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %32, i64 -1
  %35 = bitcast %"struct.cc::RTree<GURL>::Branch"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"struct.cc::RTree<GURL>::Branch"* %33 to i64*
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %31, i64 -1, i32 1
  %39 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %32, i64 -1, i32 1
  tail call void @_ZN4GURLC1EOS_(%class.GURL* %38, %class.GURL* dereferenceable(120) %39) #12
  %40 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %31, i64 -1, i32 2
  %41 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %32, i64 -1, i32 2
  %42 = bitcast %"class.gfx::Rect"* %40 to i8*
  %43 = bitcast %"class.gfx::Rect"* %41 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 16, i1 false) #12
  %44 = icmp eq %"struct.cc::RTree<GURL>::Branch"* %34, %11
  br i1 %44, label %45, label %30

45:                                               ; preds = %30
  %46 = ptrtoint %"struct.cc::RTree<GURL>::Branch"* %33 to i64
  %47 = load i64, i64* %6, align 8
  %48 = load %"struct.cc::RTree<GURL>::Branch"*, %"struct.cc::RTree<GURL>::Branch"** %13, align 8
  %49 = inttoptr i64 %47 to %"struct.cc::RTree<GURL>::Branch"*
  br label %50

50:                                               ; preds = %17, %45
  %51 = phi %"struct.cc::RTree<GURL>::Branch"* [ %49, %45 ], [ %28, %17 ]
  %52 = phi %"struct.cc::RTree<GURL>::Branch"* [ %48, %45 ], [ %11, %17 ]
  %53 = phi i64 [ %46, %45 ], [ %25, %17 ]
  %54 = phi i64 [ %47, %45 ], [ %18, %17 ]
  store i64 %53, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %55 = icmp eq %"struct.cc::RTree<GURL>::Branch"* %52, %51
  br i1 %55, label %61, label %56

56:                                               ; preds = %50, %56
  %57 = phi %"struct.cc::RTree<GURL>::Branch"* [ %58, %56 ], [ %52, %50 ]
  %58 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %57, i64 -1
  %59 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %57, i64 -1, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %59) #12
  %60 = icmp eq %"struct.cc::RTree<GURL>::Branch"* %58, %51
  br i1 %60, label %61, label %56

61:                                               ; preds = %56, %50
  %62 = icmp eq i64 %54, 0
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = inttoptr i64 %54 to i8*
  tail call void @_ZdlPv(i8* %64) #13
  br label %65

65:                                               ; preds = %63, %61, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc5RTreeI4GURLE4NodeIS3_EENS_9allocatorIS6_EEE7reserveEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__split_buffer.55", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"struct.cc::RTree<GURL>::Node"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 1592
  %11 = icmp ult i64 %10, %1
  %12 = inttoptr i64 %8 to %"struct.cc::RTree<GURL>::Node"*
  br i1 %11, label %13, label %90

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2
  %15 = bitcast %"struct.std::__1::__split_buffer.55"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"struct.std::__1::__split_buffer.55", %"struct.std::__1::__split_buffer.55"* %3, i64 0, i32 1
  %17 = getelementptr inbounds %"struct.std::__1::__split_buffer.55", %"struct.std::__1::__split_buffer.55"* %3, i64 0, i32 2
  %18 = getelementptr inbounds %"struct.std::__1::__split_buffer.55", %"struct.std::__1::__split_buffer.55"* %3, i64 0, i32 3, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::__1::__split_buffer.55", %"struct.std::__1::__split_buffer.55"* %3, i64 0, i32 3, i32 1, i32 0
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %21 = bitcast %"struct.cc::RTree<GURL>::Node"** %20 to i64*
  %22 = bitcast %"struct.std::__1::__split_buffer.55"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  %23 = load i64, i64* %21, align 8
  store %"struct.cc::RTree<GURL>::Node"* null, %"struct.cc::RTree<GURL>::Node"** %18, align 8
  %24 = bitcast %"class.std::__1::allocator.7"** %19 to %"class.std::__1::__compressed_pair.4"**
  store %"class.std::__1::__compressed_pair.4"* %14, %"class.std::__1::__compressed_pair.4"** %24, align 8
  %25 = icmp ugt i64 %1, 11587150800068813
  %26 = inttoptr i64 %23 to %"struct.cc::RTree<GURL>::Node"*
  br i1 %25, label %27, label %28

27:                                               ; preds = %13
  tail call void @abort() #14
  unreachable

28:                                               ; preds = %13
  %29 = sub i64 %23, %8
  %30 = sdiv exact i64 %29, 1592
  %31 = mul i64 %1, 1592
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %"struct.cc::RTree<GURL>::Node"*
  %34 = bitcast %"struct.std::__1::__split_buffer.55"* %3 to i8**
  store i8* %32, i8** %34, align 8
  %35 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %33, i64 %30
  store %"struct.cc::RTree<GURL>::Node"* %35, %"struct.cc::RTree<GURL>::Node"** %17, align 8
  store %"struct.cc::RTree<GURL>::Node"* %35, %"struct.cc::RTree<GURL>::Node"** %16, align 8
  %36 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %33, i64 %1
  store %"struct.cc::RTree<GURL>::Node"* %36, %"struct.cc::RTree<GURL>::Node"** %18, align 8
  %37 = icmp eq %"struct.cc::RTree<GURL>::Node"* %26, %12
  %38 = ptrtoint %"struct.cc::RTree<GURL>::Node"* %35 to i64
  br i1 %37, label %39, label %43

39:                                               ; preds = %28
  %40 = ptrtoint %"struct.cc::RTree<GURL>::Node"* %36 to i64
  %41 = bitcast %"struct.cc::RTree<GURL>::Node"** %17 to i64*
  %42 = bitcast %"struct.cc::RTree<GURL>::Node"** %18 to i64*
  br label %79

43:                                               ; preds = %28, %66
  %44 = phi %"struct.cc::RTree<GURL>::Node"* [ %68, %66 ], [ %35, %28 ]
  %45 = phi %"struct.cc::RTree<GURL>::Node"* [ %47, %66 ], [ %26, %28 ]
  %46 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %44, i64 -1
  %47 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %45, i64 -1
  %48 = bitcast %"struct.cc::RTree<GURL>::Node"* %47 to i32*
  %49 = bitcast %"struct.cc::RTree<GURL>::Node"* %46 to i32*
  %50 = load i32, i32* %48, align 8
  store i32 %50, i32* %49, align 8
  br label %51

51:                                               ; preds = %51, %43
  %52 = phi i64 [ 0, %43 ], [ %64, %51 ]
  %53 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %44, i64 -1, i32 2, i64 %52
  %54 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %45, i64 -1, i32 2, i64 %52
  %55 = bitcast %"struct.cc::RTree<GURL>::Branch"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"struct.cc::RTree<GURL>::Branch"* %53 to i64*
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %44, i64 -1, i32 2, i64 %52, i32 1
  %59 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %45, i64 -1, i32 2, i64 %52, i32 1
  tail call void @_ZN4GURLC1EOS_(%class.GURL* %58, %class.GURL* dereferenceable(120) %59) #12
  %60 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %44, i64 -1, i32 2, i64 %52, i32 2
  %61 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %45, i64 -1, i32 2, i64 %52, i32 2
  %62 = bitcast %"class.gfx::Rect"* %60 to i8*
  %63 = bitcast %"class.gfx::Rect"* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %63, i64 16, i1 false) #12
  %64 = add nuw nsw i64 %52, 1
  %65 = icmp eq i64 %64, 11
  br i1 %65, label %66, label %51

66:                                               ; preds = %51
  %67 = load %"struct.cc::RTree<GURL>::Node"*, %"struct.cc::RTree<GURL>::Node"** %16, align 8
  %68 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %67, i64 -1
  store %"struct.cc::RTree<GURL>::Node"* %68, %"struct.cc::RTree<GURL>::Node"** %16, align 8
  %69 = icmp eq %"struct.cc::RTree<GURL>::Node"* %47, %12
  br i1 %69, label %70, label %43

70:                                               ; preds = %66
  %71 = ptrtoint %"struct.cc::RTree<GURL>::Node"* %68 to i64
  %72 = load i64, i64* %7, align 8
  %73 = load i64, i64* %21, align 8
  %74 = bitcast %"struct.cc::RTree<GURL>::Node"** %17 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = load i64, i64* %5, align 8
  %77 = bitcast %"struct.cc::RTree<GURL>::Node"** %18 to i64*
  %78 = load i64, i64* %77, align 8
  br label %79

79:                                               ; preds = %39, %70
  %80 = phi i64* [ %42, %39 ], [ %77, %70 ]
  %81 = phi i64* [ %41, %39 ], [ %74, %70 ]
  %82 = phi i64 [ %40, %39 ], [ %78, %70 ]
  %83 = phi i64 [ %6, %39 ], [ %76, %70 ]
  %84 = phi i64 [ %38, %39 ], [ %75, %70 ]
  %85 = phi i64 [ %23, %39 ], [ %73, %70 ]
  %86 = phi i64 [ %38, %39 ], [ %71, %70 ]
  %87 = phi i64 [ %23, %39 ], [ %72, %70 ]
  %88 = bitcast %"struct.cc::RTree<GURL>::Node"** %16 to i64*
  store i64 %86, i64* %7, align 8
  store i64 %87, i64* %88, align 8
  store i64 %84, i64* %21, align 8
  store i64 %85, i64* %81, align 8
  store i64 %82, i64* %5, align 8
  store i64 %83, i64* %80, align 8
  %89 = bitcast %"struct.std::__1::__split_buffer.55"* %3 to i64*
  store i64 %87, i64* %89, align 8
  call void @_ZNSt3__114__split_bufferIN2cc5RTreeI4GURLE4NodeIS3_EERNS_9allocatorIS6_EEED2Ev(%"struct.std::__1::__split_buffer.55"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #12
  br label %90

90:                                               ; preds = %79, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2cc5RTreeI4GURLE14BuildRecursiveEPNSt3__16vectorINS2_6BranchIS1_EENS3_9allocatorIS6_EEEEi(%"struct.cc::RTree<GURL>::Branch"* noalias sret, %"class.cc::RTree"*, %"class.std::__1::vector.45"*, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca i32, align 4
  %6 = alloca %"struct.cc::RTree<GURL>::Branch", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %2, i64 0, i32 0, i32 1
  %8 = bitcast %"struct.cc::RTree<GURL>::Branch"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.45"* %2 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = icmp eq i64 %12, 144
  %14 = inttoptr i64 %11 to %"struct.cc::RTree<GURL>::Branch"*
  br i1 %13, label %15, label %25

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"struct.cc::RTree<GURL>::Branch"* %0 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %0, i64 0, i32 1
  %20 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %14, i64 0, i32 1
  tail call void @_ZN4GURLC1EOS_(%class.GURL* %19, %class.GURL* dereferenceable(120) %20) #12
  %21 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %0, i64 0, i32 2
  %22 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %14, i64 0, i32 2
  %23 = bitcast %"class.gfx::Rect"* %21 to i8*
  %24 = bitcast %"class.gfx::Rect"* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false) #12
  br label %252

25:                                               ; preds = %4
  %26 = sdiv exact i64 %12, 144
  %27 = urem i64 %26, 11
  %28 = trunc i64 %27 to i32
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %34, label %30

30:                                               ; preds = %25
  %31 = icmp ugt i32 %28, 5
  %32 = sub nsw i32 6, %28
  %33 = select i1 %31, i32 0, i32 %32
  br label %34

34:                                               ; preds = %30, %25
  %35 = phi i32 [ 0, %25 ], [ %33, %30 ]
  %36 = icmp eq i64 %12, 0
  br i1 %36, label %234, label %37

37:                                               ; preds = %34
  %38 = bitcast i32* %5 to i8*
  %39 = getelementptr inbounds %"class.cc::RTree", %"class.cc::RTree"* %1, i64 0, i32 2, i32 0, i32 1
  %40 = getelementptr inbounds %"class.cc::RTree", %"class.cc::RTree"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %41 = getelementptr inbounds %"class.cc::RTree", %"class.cc::RTree"* %1, i64 0, i32 2
  %42 = trunc i32 %3 to i16
  %43 = bitcast %"struct.cc::RTree<GURL>::Node"** %39 to i64*
  %44 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %2, i64 0, i32 0, i32 0
  %45 = bitcast %"struct.cc::RTree<GURL>::Branch"* %6 to i8*
  %46 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %6, i64 0, i32 1
  %47 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %6, i64 0, i32 2
  %48 = bitcast %"class.gfx::Rect"* %47 to i8*
  %49 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %6, i64 0, i32 0
  %50 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %47, i64 0, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %6, i64 0, i32 2, i32 0, i32 1
  %52 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %6, i64 0, i32 2, i32 1, i32 0
  %53 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %6, i64 0, i32 2, i32 1, i32 1
  %54 = getelementptr inbounds %"class.cc::RTree", %"class.cc::RTree"* %1, i64 0, i32 3
  %55 = bitcast %"struct.cc::RTree<GURL>::Branch"* %6 to i64*
  br label %56

56:                                               ; preds = %37, %121
  %57 = phi i64 [ 0, %37 ], [ %173, %121 ]
  %58 = phi i64 [ 0, %37 ], [ %127, %121 ]
  %59 = phi i32 [ %35, %37 ], [ %68, %121 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %67, label %61

61:                                               ; preds = %56
  %62 = icmp slt i32 %59, 6
  br i1 %62, label %63, label %65

63:                                               ; preds = %61
  %64 = sub nsw i32 11, %59
  br label %67

65:                                               ; preds = %61
  %66 = add nsw i32 %59, -5
  br label %67

67:                                               ; preds = %56, %63, %65
  %68 = phi i32 [ 0, %63 ], [ %66, %65 ], [ 0, %56 ]
  %69 = phi i32 [ %64, %63 ], [ 6, %65 ], [ 11, %56 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38)
  store i32 %3, i32* %5, align 4
  %70 = load %"struct.cc::RTree<GURL>::Node"*, %"struct.cc::RTree<GURL>::Node"** %39, align 8
  %71 = load %"struct.cc::RTree<GURL>::Node"*, %"struct.cc::RTree<GURL>::Node"** %40, align 8
  %72 = icmp ult %"struct.cc::RTree<GURL>::Node"* %70, %71
  br i1 %72, label %73, label %76

73:                                               ; preds = %67
  call void @_ZN2cc5RTreeI4GURLE4NodeIS1_EC2Et(%"struct.cc::RTree<GURL>::Node"* %70, i16 zeroext %42) #12
  %74 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %70, i64 1
  %75 = ptrtoint %"struct.cc::RTree<GURL>::Node"* %74 to i64
  store i64 %75, i64* %43, align 8
  br label %78

76:                                               ; preds = %67
  call void @_ZNSt3__16vectorIN2cc5RTreeI4GURLE4NodeIS3_EENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJRiEEEvDpOT_(%"class.std::__1::vector"* %41, i32* nonnull dereferenceable(4) %5) #12
  %77 = load %"struct.cc::RTree<GURL>::Node"*, %"struct.cc::RTree<GURL>::Node"** %39, align 8
  br label %78

78:                                               ; preds = %73, %76
  %79 = phi %"struct.cc::RTree<GURL>::Node"* [ %74, %73 ], [ %77, %76 ]
  %80 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %79, i64 -1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38)
  %81 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %80, i64 0, i32 0
  store i16 1, i16* %81, align 8
  %82 = load %"struct.cc::RTree<GURL>::Branch"*, %"struct.cc::RTree<GURL>::Branch"** %44, align 8
  %83 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %82, i64 %58
  %84 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %79, i64 -1, i32 2, i64 0
  %85 = bitcast %"struct.cc::RTree<GURL>::Branch"* %83 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"struct.cc::RTree<GURL>::Branch"* %84 to i64*
  store i64 %86, i64* %87, align 8
  %88 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %79, i64 -1, i32 2, i64 0, i32 1
  %89 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %82, i64 %58, i32 1
  %90 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %88, %class.GURL* dereferenceable(120) %89) #12
  %91 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %79, i64 -1, i32 2, i64 0, i32 2
  %92 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %82, i64 %58, i32 2
  %93 = bitcast %"class.gfx::Rect"* %91 to i8*
  %94 = bitcast %"class.gfx::Rect"* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 16, i1 false) #12
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %45) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 144, i1 false)
  call void @_ZN4GURLC1Ev(%class.GURL* %46) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false) #12
  %95 = load %"struct.cc::RTree<GURL>::Branch"*, %"struct.cc::RTree<GURL>::Branch"** %44, align 8
  %96 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %95, i64 %58, i32 2
  %97 = bitcast %"class.gfx::Rect"* %96 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 4 %97, i64 16, i1 false)
  store %"struct.cc::RTree<GURL>::Node"* %80, %"struct.cc::RTree<GURL>::Node"** %49, align 8
  %98 = load i32, i32* %50, align 8
  %99 = load i32, i32* %51, align 4
  %100 = load i32, i32* %52, align 8
  %101 = add nsw i32 %100, %98
  %102 = load i32, i32* %53, align 4
  %103 = add nsw i32 %102, %99
  %104 = add nuw i64 %58, 1
  %105 = icmp sgt i32 %69, 1
  %106 = ptrtoint %"struct.cc::RTree<GURL>::Node"* %80 to i64
  br i1 %105, label %107, label %121

107:                                              ; preds = %78
  %108 = ptrtoint %"struct.cc::RTree<GURL>::Branch"* %95 to i64
  %109 = zext i32 %69 to i64
  %110 = load i64, i64* %8, align 8
  %111 = sub i64 %110, %108
  %112 = sdiv exact i64 %111, 144
  %113 = icmp ult i64 %104, %112
  br i1 %113, label %179, label %114

114:                                              ; preds = %222, %179, %107
  %115 = phi i32 [ %103, %107 ], [ %206, %179 ], [ %206, %222 ]
  %116 = phi i32 [ %101, %107 ], [ %201, %179 ], [ %201, %222 ]
  %117 = phi i32 [ %99, %107 ], [ %196, %179 ], [ %196, %222 ]
  %118 = phi i32 [ %98, %107 ], [ %192, %179 ], [ %192, %222 ]
  %119 = phi i64 [ %104, %107 ], [ %220, %179 ], [ %220, %222 ]
  %120 = load i64, i64* %55, align 8
  br label %121

121:                                              ; preds = %114, %78
  %122 = phi i64 [ %106, %78 ], [ %120, %114 ]
  %123 = phi i32 [ %103, %78 ], [ %115, %114 ]
  %124 = phi i32 [ %101, %78 ], [ %116, %114 ]
  %125 = phi i32 [ %99, %78 ], [ %117, %114 ]
  %126 = phi i32 [ %98, %78 ], [ %118, %114 ]
  %127 = phi i64 [ %104, %78 ], [ %119, %114 ]
  %128 = icmp sgt i32 %126, -1
  %129 = select i1 %128, i32 -2147483648, i32 2147483647
  %130 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %124, i32 %126) #12
  %131 = extractvalue { i32, i1 } %130, 1
  %132 = extractvalue { i32, i1 } %130, 0
  %133 = select i1 %131, i32 %129, i32 %132, !prof !9
  %134 = icmp sgt i32 %125, -1
  %135 = select i1 %134, i32 -2147483648, i32 2147483647
  %136 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %123, i32 %125) #12
  %137 = extractvalue { i32, i1 } %136, 1
  %138 = extractvalue { i32, i1 } %136, 0
  %139 = select i1 %137, i32 %135, i32 %138, !prof !9
  store i32 %126, i32* %50, align 8
  store i32 %125, i32* %51, align 4
  %140 = icmp sgt i32 %126, 0
  %141 = icmp sgt i32 %133, 0
  %142 = and i1 %140, %141
  %143 = sub nuw nsw i32 2147483647, %126
  %144 = icmp ult i32 %143, %133
  %145 = and i1 %144, %142
  %146 = select i1 %145, i32 %143, i32 %133
  %147 = icmp sgt i32 %146, 0
  %148 = select i1 %147, i32 %146, i32 0
  store i32 %148, i32* %52, align 8
  %149 = icmp sgt i32 %125, 0
  %150 = icmp sgt i32 %139, 0
  %151 = and i1 %149, %150
  %152 = sub nuw nsw i32 2147483647, %125
  %153 = icmp ult i32 %152, %139
  %154 = and i1 %153, %151
  %155 = select i1 %154, i32 %152, i32 %139
  %156 = icmp sgt i32 %155, 0
  %157 = select i1 %156, i32 %155, i32 0
  store i32 %157, i32* %53, align 4
  %158 = add nsw i32 %148, %126
  %159 = icmp eq i32 %158, %124
  %160 = add nsw i32 %157, %125
  %161 = icmp eq i32 %160, %123
  %162 = and i1 %161, %159
  %163 = zext i1 %162 to i8
  %164 = load i8, i8* %54, align 8, !range !8
  %165 = and i8 %164, %163
  store i8 %165, i8* %54, align 8
  %166 = load %"struct.cc::RTree<GURL>::Branch"*, %"struct.cc::RTree<GURL>::Branch"** %44, align 8
  %167 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %166, i64 %57
  %168 = bitcast %"struct.cc::RTree<GURL>::Branch"* %167 to i64*
  store i64 %122, i64* %168, align 8
  %169 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %166, i64 %57, i32 1
  %170 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %169, %class.GURL* dereferenceable(120) %46) #12
  %171 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %166, i64 %57, i32 2
  %172 = bitcast %"class.gfx::Rect"* %171 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %172, i8* align 8 %48, i64 16, i1 false) #12
  %173 = add i64 %57, 1
  call void @_ZN4GURLD1Ev(%class.GURL* %46) #12
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %45) #12
  %174 = load i64, i64* %8, align 8
  %175 = load i64, i64* %10, align 8
  %176 = sub i64 %174, %175
  %177 = sdiv exact i64 %176, 144
  %178 = icmp ult i64 %127, %177
  br i1 %178, label %56, label %229

179:                                              ; preds = %107, %222
  %180 = phi i32 [ %206, %222 ], [ %103, %107 ]
  %181 = phi i32 [ %201, %222 ], [ %101, %107 ]
  %182 = phi i32 [ %196, %222 ], [ %99, %107 ]
  %183 = phi i32 [ %192, %222 ], [ %98, %107 ]
  %184 = phi i64 [ %220, %222 ], [ %104, %107 ]
  %185 = phi i64 [ %219, %222 ], [ 1, %107 ]
  %186 = phi %"struct.cc::RTree<GURL>::Branch"* [ %224, %222 ], [ %95, %107 ]
  %187 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %186, i64 %184
  %188 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %186, i64 %184, i32 2
  %189 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %188, i64 0, i32 0, i32 0
  %190 = load i32, i32* %189, align 4
  %191 = icmp slt i32 %190, %183
  %192 = select i1 %191, i32 %190, i32 %183
  %193 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %186, i64 %184, i32 2, i32 0, i32 1
  %194 = load i32, i32* %193, align 4
  %195 = icmp slt i32 %194, %182
  %196 = select i1 %195, i32 %194, i32 %182
  %197 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %186, i64 %184, i32 2, i32 1, i32 0
  %198 = load i32, i32* %197, align 4
  %199 = add nsw i32 %198, %190
  %200 = icmp slt i32 %181, %199
  %201 = select i1 %200, i32 %199, i32 %181
  %202 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %186, i64 %184, i32 2, i32 1, i32 1
  %203 = load i32, i32* %202, align 4
  %204 = add nsw i32 %203, %194
  %205 = icmp slt i32 %180, %204
  %206 = select i1 %205, i32 %204, i32 %180
  %207 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %79, i64 -1, i32 2, i64 %185
  %208 = bitcast %"struct.cc::RTree<GURL>::Branch"* %187 to i64*
  %209 = load i64, i64* %208, align 8
  %210 = bitcast %"struct.cc::RTree<GURL>::Branch"* %207 to i64*
  store i64 %209, i64* %210, align 8
  %211 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %79, i64 -1, i32 2, i64 %185, i32 1
  %212 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %186, i64 %184, i32 1
  %213 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %211, %class.GURL* dereferenceable(120) %212) #12
  %214 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %79, i64 -1, i32 2, i64 %185, i32 2
  %215 = bitcast %"class.gfx::Rect"* %214 to i8*
  %216 = bitcast %"class.gfx::Rect"* %188 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %215, i8* align 8 %216, i64 16, i1 false) #12
  %217 = load i16, i16* %81, align 8
  %218 = add i16 %217, 1
  store i16 %218, i16* %81, align 8
  %219 = add nuw nsw i64 %185, 1
  %220 = add nuw i64 %184, 1
  %221 = icmp eq i64 %219, %109
  br i1 %221, label %114, label %222

222:                                              ; preds = %179
  %223 = load i64, i64* %10, align 8
  %224 = inttoptr i64 %223 to %"struct.cc::RTree<GURL>::Branch"*
  %225 = load i64, i64* %8, align 8
  %226 = sub i64 %225, %223
  %227 = sdiv exact i64 %226, 144
  %228 = icmp ult i64 %220, %227
  br i1 %228, label %179, label %114

229:                                              ; preds = %121
  %230 = inttoptr i64 %175 to %"struct.cc::RTree<GURL>::Branch"*
  %231 = icmp ugt i64 %173, %177
  br i1 %231, label %232, label %234

232:                                              ; preds = %229
  %233 = sub i64 %173, %177
  call void @_ZNSt3__16vectorIN2cc5RTreeI4GURLE6BranchIS3_EENS_9allocatorIS6_EEE8__appendEm(%"class.std::__1::vector.45"* %2, i64 %233) #12
  br label %250

234:                                              ; preds = %34, %229
  %235 = phi i64 [ %174, %229 ], [ %9, %34 ]
  %236 = phi i64 [ %177, %229 ], [ 0, %34 ]
  %237 = phi i64 [ %173, %229 ], [ 0, %34 ]
  %238 = phi %"struct.cc::RTree<GURL>::Branch"* [ %230, %229 ], [ %14, %34 ]
  %239 = inttoptr i64 %235 to %"struct.cc::RTree<GURL>::Branch"*
  %240 = icmp ult i64 %237, %236
  br i1 %240, label %241, label %250

241:                                              ; preds = %234
  %242 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %238, i64 %237
  %243 = icmp eq %"struct.cc::RTree<GURL>::Branch"* %242, %239
  br i1 %243, label %249, label %244

244:                                              ; preds = %241, %244
  %245 = phi %"struct.cc::RTree<GURL>::Branch"* [ %246, %244 ], [ %239, %241 ]
  %246 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %245, i64 -1
  %247 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %245, i64 -1, i32 1
  call void @_ZN4GURLD1Ev(%class.GURL* %247) #12
  %248 = icmp eq %"struct.cc::RTree<GURL>::Branch"* %246, %242
  br i1 %248, label %249, label %244

249:                                              ; preds = %244, %241
  store %"struct.cc::RTree<GURL>::Branch"* %242, %"struct.cc::RTree<GURL>::Branch"** %7, align 8
  br label %250

250:                                              ; preds = %232, %234, %249
  %251 = add nsw i32 %3, 1
  call void @_ZN2cc5RTreeI4GURLE14BuildRecursiveEPNSt3__16vectorINS2_6BranchIS1_EENS3_9allocatorIS6_EEEEi(%"struct.cc::RTree<GURL>::Branch"* sret %0, %"class.cc::RTree"* %1, %"class.std::__1::vector.45"* %2, i32 %251)
  br label %252

252:                                              ; preds = %250, %15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc5RTreeI4GURLE6BranchIS3_EENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJS3_RKN3gfx4RectEEEEvDpOT_(%"class.std::__1::vector.45"*, %class.GURL* dereferenceable(120), %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #8 comdat align 2 {
  %4 = alloca %class.GURL, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"struct.cc::RTree<GURL>::Branch"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.45"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = sdiv exact i64 %10, 144
  %12 = add nsw i64 %11, 1
  %13 = icmp ugt i64 %12, 128102389400760775
  br i1 %13, label %14, label %16

14:                                               ; preds = %3
  %15 = bitcast %"class.std::__1::vector.45"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #14
  unreachable

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %18 = bitcast %"struct.cc::RTree<GURL>::Branch"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %19, %9
  %21 = sdiv exact i64 %20, 144
  %22 = icmp ult i64 %21, 64051194700380387
  br i1 %22, label %23, label %28

23:                                               ; preds = %16
  %24 = shl nsw i64 %21, 1
  %25 = icmp ult i64 %24, %12
  %26 = select i1 %25, i64 %12, i64 %24
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %16, %23
  %29 = phi i64 [ %26, %23 ], [ 128102389400760775, %16 ]
  %30 = mul i64 %29, 144
  %31 = tail call i8* @_Znwm(i64 %30) #13
  %32 = bitcast i8* %31 to %"struct.cc::RTree<GURL>::Branch"*
  br label %33

33:                                               ; preds = %23, %28
  %34 = phi i64 [ %29, %28 ], [ 0, %23 ]
  %35 = phi %"struct.cc::RTree<GURL>::Branch"* [ %32, %28 ], [ null, %23 ]
  %36 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %35, i64 %11
  %37 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %35, i64 %34
  %38 = ptrtoint %"struct.cc::RTree<GURL>::Branch"* %37 to i64
  %39 = bitcast %class.GURL* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %39) #12
  call void @_ZN4GURLC1EOS_(%class.GURL* nonnull %4, %class.GURL* dereferenceable(120) %1) #12
  %40 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %35, i64 %11, i32 1
  call void @_ZN4GURLC1EOS_(%class.GURL* %40, %class.GURL* nonnull dereferenceable(120) %4) #12
  %41 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %35, i64 %11, i32 2
  %42 = bitcast %"class.gfx::Rect"* %41 to i8*
  %43 = bitcast %"class.gfx::Rect"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 4 %43, i64 16, i1 false) #12
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %39) #12
  %44 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %36, i64 1
  %45 = ptrtoint %"struct.cc::RTree<GURL>::Branch"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %0, i64 0, i32 0, i32 0
  %47 = load %"struct.cc::RTree<GURL>::Branch"*, %"struct.cc::RTree<GURL>::Branch"** %46, align 8
  %48 = load %"struct.cc::RTree<GURL>::Branch"*, %"struct.cc::RTree<GURL>::Branch"** %5, align 8
  %49 = icmp eq %"struct.cc::RTree<GURL>::Branch"* %48, %47
  br i1 %49, label %50, label %52

50:                                               ; preds = %33
  %51 = ptrtoint %"struct.cc::RTree<GURL>::Branch"* %47 to i64
  br label %70

52:                                               ; preds = %33, %52
  %53 = phi %"struct.cc::RTree<GURL>::Branch"* [ %55, %52 ], [ %36, %33 ]
  %54 = phi %"struct.cc::RTree<GURL>::Branch"* [ %56, %52 ], [ %48, %33 ]
  %55 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %53, i64 -1
  %56 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %54, i64 -1
  %57 = bitcast %"struct.cc::RTree<GURL>::Branch"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"struct.cc::RTree<GURL>::Branch"* %55 to i64*
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %53, i64 -1, i32 1
  %61 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %54, i64 -1, i32 1
  call void @_ZN4GURLC1EOS_(%class.GURL* %60, %class.GURL* dereferenceable(120) %61) #12
  %62 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %53, i64 -1, i32 2
  %63 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %54, i64 -1, i32 2
  %64 = bitcast %"class.gfx::Rect"* %62 to i8*
  %65 = bitcast %"class.gfx::Rect"* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 16, i1 false) #12
  %66 = icmp eq %"struct.cc::RTree<GURL>::Branch"* %56, %47
  br i1 %66, label %67, label %52

67:                                               ; preds = %52
  %68 = load i64, i64* %8, align 8
  %69 = load %"struct.cc::RTree<GURL>::Branch"*, %"struct.cc::RTree<GURL>::Branch"** %5, align 8
  br label %70

70:                                               ; preds = %50, %67
  %71 = phi %"struct.cc::RTree<GURL>::Branch"* [ %47, %50 ], [ %69, %67 ]
  %72 = phi %"struct.cc::RTree<GURL>::Branch"* [ %36, %50 ], [ %55, %67 ]
  %73 = phi i64 [ %51, %50 ], [ %68, %67 ]
  %74 = ptrtoint %"struct.cc::RTree<GURL>::Branch"* %72 to i64
  store i64 %74, i64* %8, align 8
  store i64 %45, i64* %6, align 8
  store i64 %38, i64* %18, align 8
  %75 = inttoptr i64 %73 to %"struct.cc::RTree<GURL>::Branch"*
  %76 = icmp eq %"struct.cc::RTree<GURL>::Branch"* %71, %75
  br i1 %76, label %82, label %77

77:                                               ; preds = %70, %77
  %78 = phi %"struct.cc::RTree<GURL>::Branch"* [ %79, %77 ], [ %71, %70 ]
  %79 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %78, i64 -1
  %80 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %78, i64 -1, i32 1
  call void @_ZN4GURLD1Ev(%class.GURL* %80) #12
  %81 = icmp eq %"struct.cc::RTree<GURL>::Branch"* %79, %75
  br i1 %81, label %82, label %77

82:                                               ; preds = %77, %70
  %83 = icmp eq i64 %73, 0
  br i1 %83, label %86, label %84

84:                                               ; preds = %82
  %85 = inttoptr i64 %73 to i8*
  call void @_ZdlPv(i8* %85) #13
  br label %86

86:                                               ; preds = %82, %84
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN2cc5RTreeI4GURLE4NodeIS3_EERNS_9allocatorIS6_EEED2Ev(%"struct.std::__1::__split_buffer.55"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__split_buffer.55", %"struct.std::__1::__split_buffer.55"* %0, i64 0, i32 1
  %3 = load %"struct.cc::RTree<GURL>::Node"*, %"struct.cc::RTree<GURL>::Node"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer.55", %"struct.std::__1::__split_buffer.55"* %0, i64 0, i32 2
  %5 = load %"struct.cc::RTree<GURL>::Node"*, %"struct.cc::RTree<GURL>::Node"** %4, align 8
  %6 = icmp eq %"struct.cc::RTree<GURL>::Node"* %5, %3
  br i1 %6, label %23, label %7

7:                                                ; preds = %1, %7
  %8 = phi %"struct.cc::RTree<GURL>::Node"* [ %21, %7 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %8, i64 -1
  store %"struct.cc::RTree<GURL>::Node"* %9, %"struct.cc::RTree<GURL>::Node"** %4, align 8
  %10 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %8, i64 -1, i32 2, i64 10, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %10) #12
  %11 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %8, i64 -1, i32 2, i64 9, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %11) #12
  %12 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %8, i64 -1, i32 2, i64 8, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %12) #12
  %13 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %8, i64 -1, i32 2, i64 7, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %13) #12
  %14 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %8, i64 -1, i32 2, i64 6, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %14) #12
  %15 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %8, i64 -1, i32 2, i64 5, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %15) #12
  %16 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %8, i64 -1, i32 2, i64 4, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %16) #12
  %17 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %8, i64 -1, i32 2, i64 3, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %17) #12
  %18 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %8, i64 -1, i32 2, i64 2, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %18) #12
  %19 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %8, i64 -1, i32 2, i64 1, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %19) #12
  %20 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %8, i64 -1, i32 2, i64 0, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %20) #12
  %21 = load %"struct.cc::RTree<GURL>::Node"*, %"struct.cc::RTree<GURL>::Node"** %4, align 8
  %22 = icmp eq %"struct.cc::RTree<GURL>::Node"* %21, %3
  br i1 %22, label %23, label %7

23:                                               ; preds = %7, %1
  %24 = getelementptr inbounds %"struct.std::__1::__split_buffer.55", %"struct.std::__1::__split_buffer.55"* %0, i64 0, i32 0
  %25 = load %"struct.cc::RTree<GURL>::Node"*, %"struct.cc::RTree<GURL>::Node"** %24, align 8
  %26 = icmp eq %"struct.cc::RTree<GURL>::Node"* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  %28 = bitcast %"struct.cc::RTree<GURL>::Node"* %25 to i8*
  tail call void @_ZdlPv(i8* %28) #13
  br label %29

29:                                               ; preds = %23, %27
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc5RTreeI4GURLE4NodeIS3_EENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJRiEEEvDpOT_(%"class.std::__1::vector"*, i32* dereferenceable(4)) local_unnamed_addr #8 comdat align 2 {
  %3 = alloca %"struct.std::__1::__split_buffer.55", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2
  %5 = bitcast %"struct.std::__1::__split_buffer.55"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.55", %"struct.std::__1::__split_buffer.55"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.std::__1::__split_buffer.55", %"struct.std::__1::__split_buffer.55"* %3, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.std::__1::__split_buffer.55", %"struct.std::__1::__split_buffer.55"* %3, i64 0, i32 2
  %9 = getelementptr inbounds %"struct.std::__1::__split_buffer.55", %"struct.std::__1::__split_buffer.55"* %3, i64 0, i32 3, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.55", %"struct.std::__1::__split_buffer.55"* %3, i64 0, i32 3, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %12 = bitcast %"struct.cc::RTree<GURL>::Node"** %11 to i64*
  %13 = bitcast %"struct.std::__1::__split_buffer.55"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 40, i1 false)
  %14 = load i64, i64* %12, align 8
  %15 = bitcast %"class.std::__1::vector"* %0 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = sdiv exact i64 %17, 1592
  %19 = add nsw i64 %18, 1
  %20 = icmp ugt i64 %19, 11587150800068813
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %22) #14
  unreachable

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast %"struct.cc::RTree<GURL>::Node"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %26, %16
  %28 = sdiv exact i64 %27, 1592
  %29 = icmp ult i64 %28, 5793575400034406
  br i1 %29, label %32, label %30

30:                                               ; preds = %23
  store %"struct.cc::RTree<GURL>::Node"* null, %"struct.cc::RTree<GURL>::Node"** %9, align 8
  %31 = bitcast %"class.std::__1::allocator.7"** %10 to %"class.std::__1::__compressed_pair.4"**
  store %"class.std::__1::__compressed_pair.4"* %4, %"class.std::__1::__compressed_pair.4"** %31, align 8
  br label %38

32:                                               ; preds = %23
  %33 = shl nsw i64 %28, 1
  %34 = icmp ult i64 %33, %19
  %35 = select i1 %34, i64 %19, i64 %33
  store %"struct.cc::RTree<GURL>::Node"* null, %"struct.cc::RTree<GURL>::Node"** %9, align 8
  %36 = bitcast %"class.std::__1::allocator.7"** %10 to %"class.std::__1::__compressed_pair.4"**
  store %"class.std::__1::__compressed_pair.4"* %4, %"class.std::__1::__compressed_pair.4"** %36, align 8
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %32, %30
  %39 = phi i64 [ 11587150800068813, %30 ], [ %35, %32 ]
  %40 = mul i64 %39, 1592
  %41 = tail call i8* @_Znwm(i64 %40) #13
  %42 = bitcast i8* %41 to %"struct.cc::RTree<GURL>::Node"*
  br label %43

43:                                               ; preds = %32, %38
  %44 = phi i64 [ %39, %38 ], [ 0, %32 ]
  %45 = phi %"struct.cc::RTree<GURL>::Node"* [ %42, %38 ], [ null, %32 ]
  store %"struct.cc::RTree<GURL>::Node"* %45, %"struct.cc::RTree<GURL>::Node"** %6, align 8
  %46 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %45, i64 %18
  store %"struct.cc::RTree<GURL>::Node"* %46, %"struct.cc::RTree<GURL>::Node"** %7, align 8
  %47 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %45, i64 %44
  store %"struct.cc::RTree<GURL>::Node"* %47, %"struct.cc::RTree<GURL>::Node"** %9, align 8
  %48 = load i32, i32* %1, align 4
  %49 = trunc i32 %48 to i16
  tail call void @_ZN2cc5RTreeI4GURLE4NodeIS1_EC2Et(%"struct.cc::RTree<GURL>::Node"* %46, i16 zeroext %49) #12
  %50 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %46, i64 1
  store %"struct.cc::RTree<GURL>::Node"* %50, %"struct.cc::RTree<GURL>::Node"** %8, align 8
  %51 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %52 = load %"struct.cc::RTree<GURL>::Node"*, %"struct.cc::RTree<GURL>::Node"** %51, align 8
  %53 = load %"struct.cc::RTree<GURL>::Node"*, %"struct.cc::RTree<GURL>::Node"** %11, align 8
  %54 = icmp eq %"struct.cc::RTree<GURL>::Node"* %53, %52
  br i1 %54, label %55, label %61

55:                                               ; preds = %43
  %56 = insertelement <2 x %"struct.cc::RTree<GURL>::Node"*> undef, %"struct.cc::RTree<GURL>::Node"* %50, i32 0
  %57 = insertelement <2 x %"struct.cc::RTree<GURL>::Node"*> %56, %"struct.cc::RTree<GURL>::Node"* %47, i32 1
  %58 = ptrtoint <2 x %"struct.cc::RTree<GURL>::Node"*> %57 to <2 x i64>
  %59 = ptrtoint %"struct.cc::RTree<GURL>::Node"* %53 to i64
  %60 = ptrtoint %"struct.cc::RTree<GURL>::Node"* %52 to i64
  br label %93

61:                                               ; preds = %43, %84
  %62 = phi %"struct.cc::RTree<GURL>::Node"* [ %86, %84 ], [ %46, %43 ]
  %63 = phi %"struct.cc::RTree<GURL>::Node"* [ %65, %84 ], [ %53, %43 ]
  %64 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %62, i64 -1
  %65 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %63, i64 -1
  %66 = bitcast %"struct.cc::RTree<GURL>::Node"* %65 to i32*
  %67 = bitcast %"struct.cc::RTree<GURL>::Node"* %64 to i32*
  %68 = load i32, i32* %66, align 8
  store i32 %68, i32* %67, align 8
  br label %69

69:                                               ; preds = %69, %61
  %70 = phi i64 [ 0, %61 ], [ %82, %69 ]
  %71 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %62, i64 -1, i32 2, i64 %70
  %72 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %63, i64 -1, i32 2, i64 %70
  %73 = bitcast %"struct.cc::RTree<GURL>::Branch"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"struct.cc::RTree<GURL>::Branch"* %71 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %62, i64 -1, i32 2, i64 %70, i32 1
  %77 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %63, i64 -1, i32 2, i64 %70, i32 1
  tail call void @_ZN4GURLC1EOS_(%class.GURL* %76, %class.GURL* dereferenceable(120) %77) #12
  %78 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %62, i64 -1, i32 2, i64 %70, i32 2
  %79 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %63, i64 -1, i32 2, i64 %70, i32 2
  %80 = bitcast %"class.gfx::Rect"* %78 to i8*
  %81 = bitcast %"class.gfx::Rect"* %79 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 16, i1 false) #12
  %82 = add nuw nsw i64 %70, 1
  %83 = icmp eq i64 %82, 11
  br i1 %83, label %84, label %69

84:                                               ; preds = %69
  %85 = load %"struct.cc::RTree<GURL>::Node"*, %"struct.cc::RTree<GURL>::Node"** %7, align 8
  %86 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %85, i64 -1
  store %"struct.cc::RTree<GURL>::Node"* %86, %"struct.cc::RTree<GURL>::Node"** %7, align 8
  %87 = icmp eq %"struct.cc::RTree<GURL>::Node"* %65, %52
  br i1 %87, label %88, label %61

88:                                               ; preds = %84
  %89 = load i64, i64* %15, align 8
  %90 = load i64, i64* %12, align 8
  %91 = bitcast %"struct.cc::RTree<GURL>::Node"** %8 to <2 x i64>*
  %92 = load <2 x i64>, <2 x i64>* %91, align 8
  br label %93

93:                                               ; preds = %55, %88
  %94 = phi i64 [ %59, %55 ], [ %90, %88 ]
  %95 = phi %"struct.cc::RTree<GURL>::Node"* [ %46, %55 ], [ %86, %88 ]
  %96 = phi i64 [ %60, %55 ], [ %89, %88 ]
  %97 = phi <2 x i64> [ %58, %55 ], [ %92, %88 ]
  %98 = bitcast %"struct.cc::RTree<GURL>::Node"** %8 to i64*
  %99 = bitcast %"struct.cc::RTree<GURL>::Node"** %9 to i64*
  %100 = ptrtoint %"struct.cc::RTree<GURL>::Node"* %95 to i64
  %101 = bitcast %"struct.cc::RTree<GURL>::Node"** %7 to i64*
  store i64 %100, i64* %15, align 8
  store i64 %96, i64* %101, align 8
  store i64 %94, i64* %98, align 8
  %102 = load i64, i64* %25, align 8
  %103 = bitcast %"struct.cc::RTree<GURL>::Node"** %11 to <2 x i64>*
  store <2 x i64> %97, <2 x i64>* %103, align 8
  store i64 %102, i64* %99, align 8
  %104 = bitcast %"struct.std::__1::__split_buffer.55"* %3 to i64*
  store i64 %96, i64* %104, align 8
  call void @_ZNSt3__114__split_bufferIN2cc5RTreeI4GURLE4NodeIS3_EERNS_9allocatorIS6_EEED2Ev(%"struct.std::__1::__split_buffer.55"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2cc5RTreeI4GURLE4NodeIS1_EC2Et(%"struct.cc::RTree<GURL>::Node"*, i16 zeroext) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %0, i64 0, i32 0
  store i16 0, i16* %3, align 8
  %4 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %0, i64 0, i32 1
  store i16 %1, i16* %4, align 2
  %5 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %0, i64 0, i32 2, i64 0, i32 1
  tail call void @_ZN4GURLC1Ev(%class.GURL* %5) #12
  %6 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %0, i64 0, i32 2, i64 0, i32 2
  %7 = bitcast %"class.gfx::Rect"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 16, i1 false) #12
  %8 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %0, i64 0, i32 2, i64 1, i32 1
  tail call void @_ZN4GURLC1Ev(%class.GURL* %8) #12
  %9 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %0, i64 0, i32 2, i64 1, i32 2
  %10 = bitcast %"class.gfx::Rect"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 16, i1 false) #12
  %11 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %0, i64 0, i32 2, i64 2, i32 1
  tail call void @_ZN4GURLC1Ev(%class.GURL* %11) #12
  %12 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %0, i64 0, i32 2, i64 2, i32 2
  %13 = bitcast %"class.gfx::Rect"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 16, i1 false) #12
  %14 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %0, i64 0, i32 2, i64 3, i32 1
  tail call void @_ZN4GURLC1Ev(%class.GURL* %14) #12
  %15 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %0, i64 0, i32 2, i64 3, i32 2
  %16 = bitcast %"class.gfx::Rect"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %16, i8 0, i64 16, i1 false) #12
  %17 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %0, i64 0, i32 2, i64 4, i32 1
  tail call void @_ZN4GURLC1Ev(%class.GURL* %17) #12
  %18 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %0, i64 0, i32 2, i64 4, i32 2
  %19 = bitcast %"class.gfx::Rect"* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 16, i1 false) #12
  %20 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %0, i64 0, i32 2, i64 5, i32 1
  tail call void @_ZN4GURLC1Ev(%class.GURL* %20) #12
  %21 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %0, i64 0, i32 2, i64 5, i32 2
  %22 = bitcast %"class.gfx::Rect"* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %22, i8 0, i64 16, i1 false) #12
  %23 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %0, i64 0, i32 2, i64 6, i32 1
  tail call void @_ZN4GURLC1Ev(%class.GURL* %23) #12
  %24 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %0, i64 0, i32 2, i64 6, i32 2
  %25 = bitcast %"class.gfx::Rect"* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %25, i8 0, i64 16, i1 false) #12
  %26 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %0, i64 0, i32 2, i64 7, i32 1
  tail call void @_ZN4GURLC1Ev(%class.GURL* %26) #12
  %27 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %0, i64 0, i32 2, i64 7, i32 2
  %28 = bitcast %"class.gfx::Rect"* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %28, i8 0, i64 16, i1 false) #12
  %29 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %0, i64 0, i32 2, i64 8, i32 1
  tail call void @_ZN4GURLC1Ev(%class.GURL* %29) #12
  %30 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %0, i64 0, i32 2, i64 8, i32 2
  %31 = bitcast %"class.gfx::Rect"* %30 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %31, i8 0, i64 16, i1 false) #12
  %32 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %0, i64 0, i32 2, i64 9, i32 1
  tail call void @_ZN4GURLC1Ev(%class.GURL* %32) #12
  %33 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %0, i64 0, i32 2, i64 9, i32 2
  %34 = bitcast %"class.gfx::Rect"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %34, i8 0, i64 16, i1 false) #12
  %35 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %0, i64 0, i32 2, i64 10, i32 1
  tail call void @_ZN4GURLC1Ev(%class.GURL* %35) #12
  %36 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %0, i64 0, i32 2, i64 10, i32 2
  %37 = bitcast %"class.gfx::Rect"* %36 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %37, i8 0, i64 16, i1 false) #12
  ret void
}

; Function Attrs: nounwind
declare dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare double @log(double) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare double @pow(double, double) local_unnamed_addr #10

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc5RTreeI4GURLE6BranchIS3_EENS_9allocatorIS6_EEE8__appendEm(%"class.std::__1::vector.45"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.cc::RTree<GURL>::Branch"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.cc::RTree<GURL>::Branch"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 144
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %28, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.cc::RTree<GURL>::Branch"*
  %14 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %13, i64 %1
  %15 = icmp eq i64 %1, 0
  br i1 %15, label %26, label %18

16:                                               ; preds = %18
  %17 = ptrtoint %"struct.cc::RTree<GURL>::Branch"* %14 to i64
  br label %26

18:                                               ; preds = %12, %18
  %19 = phi %"struct.cc::RTree<GURL>::Branch"* [ %24, %18 ], [ %13, %12 ]
  %20 = bitcast %"struct.cc::RTree<GURL>::Branch"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 144, i1 false) #12
  %21 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %19, i64 0, i32 1
  tail call void @_ZN4GURLC1Ev(%class.GURL* %21) #12
  %22 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %19, i64 0, i32 2
  %23 = bitcast %"class.gfx::Rect"* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %23, i8 0, i64 16, i1 false) #12
  %24 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %19, i64 1
  %25 = icmp eq %"struct.cc::RTree<GURL>::Branch"* %24, %14
  br i1 %25, label %16, label %18

26:                                               ; preds = %12, %16
  %27 = phi i64 [ %17, %16 ], [ %8, %12 ]
  store i64 %27, i64* %7, align 8
  br label %111

28:                                               ; preds = %2
  %29 = bitcast %"class.std::__1::vector.45"* %0 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %8, %30
  %32 = sdiv exact i64 %31, 144
  %33 = add i64 %32, %1
  %34 = icmp ugt i64 %33, 128102389400760775
  br i1 %34, label %35, label %37

35:                                               ; preds = %28
  %36 = bitcast %"class.std::__1::vector.45"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %36) #14
  unreachable

37:                                               ; preds = %28
  %38 = sub i64 %5, %30
  %39 = sdiv exact i64 %38, 144
  %40 = icmp ult i64 %39, 64051194700380387
  br i1 %40, label %41, label %46

41:                                               ; preds = %37
  %42 = shl nsw i64 %39, 1
  %43 = icmp ult i64 %42, %33
  %44 = select i1 %43, i64 %33, i64 %42
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %37, %41
  %47 = phi i64 [ %44, %41 ], [ 128102389400760775, %37 ]
  %48 = mul i64 %47, 144
  %49 = tail call i8* @_Znwm(i64 %48) #13
  %50 = bitcast i8* %49 to %"struct.cc::RTree<GURL>::Branch"*
  br label %51

51:                                               ; preds = %41, %46
  %52 = phi i64 [ %47, %46 ], [ 0, %41 ]
  %53 = phi %"struct.cc::RTree<GURL>::Branch"* [ %50, %46 ], [ null, %41 ]
  %54 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %53, i64 %32
  %55 = ptrtoint %"struct.cc::RTree<GURL>::Branch"* %54 to i64
  %56 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %53, i64 %52
  %57 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %54, i64 %1
  br label %58

58:                                               ; preds = %51, %58
  %59 = phi %"struct.cc::RTree<GURL>::Branch"* [ %65, %58 ], [ %54, %51 ]
  %60 = phi i64 [ %66, %58 ], [ %55, %51 ]
  %61 = inttoptr i64 %60 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 144, i1 false) #12
  %62 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %59, i64 0, i32 1
  tail call void @_ZN4GURLC1Ev(%class.GURL* %62) #12
  %63 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %59, i64 0, i32 2
  %64 = bitcast %"class.gfx::Rect"* %63 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %64, i8 0, i64 16, i1 false) #12
  %65 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %59, i64 1
  %66 = ptrtoint %"struct.cc::RTree<GURL>::Branch"* %65 to i64
  %67 = icmp eq %"struct.cc::RTree<GURL>::Branch"* %57, %65
  br i1 %67, label %68, label %58

68:                                               ; preds = %58
  %69 = ptrtoint %"struct.cc::RTree<GURL>::Branch"* %56 to i64
  %70 = ptrtoint %"struct.cc::RTree<GURL>::Branch"* %57 to i64
  %71 = getelementptr inbounds %"class.std::__1::vector.45", %"class.std::__1::vector.45"* %0, i64 0, i32 0, i32 0
  %72 = load %"struct.cc::RTree<GURL>::Branch"*, %"struct.cc::RTree<GURL>::Branch"** %71, align 8
  %73 = load %"struct.cc::RTree<GURL>::Branch"*, %"struct.cc::RTree<GURL>::Branch"** %6, align 8
  %74 = icmp eq %"struct.cc::RTree<GURL>::Branch"* %73, %72
  br i1 %74, label %75, label %77

75:                                               ; preds = %68
  %76 = ptrtoint %"struct.cc::RTree<GURL>::Branch"* %72 to i64
  br label %96

77:                                               ; preds = %68, %77
  %78 = phi %"struct.cc::RTree<GURL>::Branch"* [ %80, %77 ], [ %54, %68 ]
  %79 = phi %"struct.cc::RTree<GURL>::Branch"* [ %81, %77 ], [ %73, %68 ]
  %80 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %78, i64 -1
  %81 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %79, i64 -1
  %82 = bitcast %"struct.cc::RTree<GURL>::Branch"* %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"struct.cc::RTree<GURL>::Branch"* %80 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %78, i64 -1, i32 1
  %86 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %79, i64 -1, i32 1
  tail call void @_ZN4GURLC1EOS_(%class.GURL* %85, %class.GURL* dereferenceable(120) %86) #12
  %87 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %78, i64 -1, i32 2
  %88 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %79, i64 -1, i32 2
  %89 = bitcast %"class.gfx::Rect"* %87 to i8*
  %90 = bitcast %"class.gfx::Rect"* %88 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 16, i1 false) #12
  %91 = icmp eq %"struct.cc::RTree<GURL>::Branch"* %81, %72
  br i1 %91, label %92, label %77

92:                                               ; preds = %77
  %93 = ptrtoint %"struct.cc::RTree<GURL>::Branch"* %80 to i64
  %94 = load i64, i64* %29, align 8
  %95 = load %"struct.cc::RTree<GURL>::Branch"*, %"struct.cc::RTree<GURL>::Branch"** %6, align 8
  br label %96

96:                                               ; preds = %75, %92
  %97 = phi %"struct.cc::RTree<GURL>::Branch"* [ %72, %75 ], [ %95, %92 ]
  %98 = phi i64 [ %55, %75 ], [ %93, %92 ]
  %99 = phi i64 [ %76, %75 ], [ %94, %92 ]
  store i64 %98, i64* %29, align 8
  store i64 %70, i64* %7, align 8
  store i64 %69, i64* %4, align 8
  %100 = inttoptr i64 %99 to %"struct.cc::RTree<GURL>::Branch"*
  %101 = icmp eq %"struct.cc::RTree<GURL>::Branch"* %97, %100
  br i1 %101, label %107, label %102

102:                                              ; preds = %96, %102
  %103 = phi %"struct.cc::RTree<GURL>::Branch"* [ %104, %102 ], [ %97, %96 ]
  %104 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %103, i64 -1
  %105 = getelementptr inbounds %"struct.cc::RTree<GURL>::Branch", %"struct.cc::RTree<GURL>::Branch"* %103, i64 -1, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %105) #12
  %106 = icmp eq %"struct.cc::RTree<GURL>::Branch"* %104, %100
  br i1 %106, label %107, label %102

107:                                              ; preds = %102, %96
  %108 = icmp eq i64 %99, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = inttoptr i64 %99 to i8*
  tail call void @_ZdlPv(i8* %110) #13
  br label %111

111:                                              ; preds = %109, %107, %26
  ret void
}

declare zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK2cc5RTreeI4GURLE19SearchRefsRecursiveEPNS2_4NodeIS1_EERKN3gfx4RectEPNSt3__16vectorIPKS1_NSA_9allocatorISD_EEEE(%"class.cc::RTree"*, %"struct.cc::RTree<GURL>::Node"*, %"class.gfx::Rect"* dereferenceable(16), %"class.std::__1::vector.34"*) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %1, i64 0, i32 0
  %6 = load i16, i16* %5, align 8
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %16, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %3, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast %class.GURL*** %10 to i64*
  %13 = bitcast %"class.std::__1::vector.34"* %3 to i64*
  %14 = bitcast %class.GURL*** %11 to i64*
  %15 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %3, i64 0, i32 0, i32 0
  br label %17

16:                                               ; preds = %91, %4
  ret void

17:                                               ; preds = %8, %91
  %18 = phi i64 [ 0, %8 ], [ %92, %91 ]
  %19 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %1, i64 0, i32 2, i64 %18, i32 2
  %20 = tail call zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"* %2, %"class.gfx::Rect"* dereferenceable(16) %19) #12
  br i1 %20, label %21, label %91

21:                                               ; preds = %17
  %22 = load i16, i16* %9, align 2
  %23 = icmp eq i16 %22, 0
  br i1 %23, label %24, label %88

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %1, i64 0, i32 2, i64 %18, i32 1
  %26 = ptrtoint %class.GURL* %25 to i64
  %27 = load %class.GURL**, %class.GURL*** %10, align 8
  %28 = load %class.GURL**, %class.GURL*** %11, align 8
  %29 = icmp ult %class.GURL** %27, %28
  %30 = ptrtoint %class.GURL** %28 to i64
  br i1 %29, label %31, label %35

31:                                               ; preds = %24
  %32 = bitcast %class.GURL** %27 to i64*
  store i64 %26, i64* %32, align 8
  %33 = getelementptr inbounds %class.GURL*, %class.GURL** %27, i64 1
  %34 = ptrtoint %class.GURL** %33 to i64
  store i64 %34, i64* %12, align 8
  br label %91

35:                                               ; preds = %24
  %36 = ptrtoint %class.GURL** %27 to i64
  %37 = load i64, i64* %13, align 8
  %38 = sub i64 %36, %37
  %39 = ashr exact i64 %38, 3
  %40 = add nsw i64 %39, 1
  %41 = icmp ugt i64 %40, 2305843009213693951
  br i1 %41, label %42, label %44

42:                                               ; preds = %35
  %43 = bitcast %"class.std::__1::vector.34"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %43) #14
  unreachable

44:                                               ; preds = %35
  %45 = sub i64 %30, %37
  %46 = ashr exact i64 %45, 3
  %47 = icmp ult i64 %46, 1152921504606846975
  br i1 %47, label %48, label %56

48:                                               ; preds = %44
  %49 = ashr exact i64 %45, 2
  %50 = icmp ult i64 %49, %40
  %51 = select i1 %50, i64 %40, i64 %49
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %61, label %53

53:                                               ; preds = %48
  %54 = icmp ugt i64 %51, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %53
  tail call void @abort() #14
  unreachable

56:                                               ; preds = %53, %44
  %57 = phi i64 [ %51, %53 ], [ 2305843009213693951, %44 ]
  %58 = shl i64 %57, 3
  %59 = tail call i8* @_Znwm(i64 %58) #13
  %60 = bitcast i8* %59 to %class.GURL**
  br label %61

61:                                               ; preds = %56, %48
  %62 = phi i64 [ %57, %56 ], [ 0, %48 ]
  %63 = phi %class.GURL** [ %60, %56 ], [ null, %48 ]
  %64 = getelementptr inbounds %class.GURL*, %class.GURL** %63, i64 %39
  %65 = getelementptr inbounds %class.GURL*, %class.GURL** %63, i64 %62
  %66 = ptrtoint %class.GURL** %65 to i64
  %67 = bitcast %class.GURL** %64 to i64*
  store i64 %26, i64* %67, align 8
  %68 = getelementptr inbounds %class.GURL*, %class.GURL** %64, i64 1
  %69 = ptrtoint %class.GURL** %68 to i64
  %70 = load %class.GURL**, %class.GURL*** %15, align 8
  %71 = load i64, i64* %12, align 8
  %72 = ptrtoint %class.GURL** %70 to i64
  %73 = sub i64 %71, %72
  %74 = ashr exact i64 %73, 3
  %75 = sub nsw i64 0, %74
  %76 = getelementptr inbounds %class.GURL*, %class.GURL** %64, i64 %75
  %77 = ptrtoint %class.GURL** %76 to i64
  %78 = icmp sgt i64 %73, 0
  br i1 %78, label %79, label %83

79:                                               ; preds = %61
  %80 = bitcast %class.GURL** %76 to i8*
  %81 = bitcast %class.GURL** %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 %73, i1 false) #12
  %82 = load %class.GURL**, %class.GURL*** %15, align 8
  br label %83

83:                                               ; preds = %79, %61
  %84 = phi %class.GURL** [ %70, %61 ], [ %82, %79 ]
  store i64 %77, i64* %13, align 8
  store i64 %69, i64* %12, align 8
  store i64 %66, i64* %14, align 8
  %85 = icmp eq %class.GURL** %84, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %83
  %87 = bitcast %class.GURL** %84 to i8*
  tail call void @_ZdlPv(i8* %87) #13
  br label %91

88:                                               ; preds = %21
  %89 = getelementptr inbounds %"struct.cc::RTree<GURL>::Node", %"struct.cc::RTree<GURL>::Node"* %1, i64 0, i32 2, i64 %18, i32 0
  %90 = load %"struct.cc::RTree<GURL>::Node"*, %"struct.cc::RTree<GURL>::Node"** %89, align 8
  tail call void @_ZNK2cc5RTreeI4GURLE19SearchRefsRecursiveEPNS2_4NodeIS1_EERKN3gfx4RectEPNSt3__16vectorIPKS1_NSA_9allocatorISD_EEEE(%"class.cc::RTree"* %0, %"struct.cc::RTree<GURL>::Node"* %90, %"class.gfx::Rect"* dereferenceable(16) %2, %"class.std::__1::vector.34"* %3)
  br label %91

91:                                               ; preds = %86, %83, %31, %17, %88
  %92 = add nuw nsw i64 %18, 1
  %93 = load i16, i16* %5, align 8
  %94 = zext i16 %93 to i64
  %95 = icmp ult i64 %92, %94
  br i1 %95, label %17, label %16
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN13paint_preview12_GLOBAL__N_110ToLinkDataERKNS_13LinkDataProtoE: argument 0"}
!4 = distinct !{!4, !"_ZN13paint_preview12_GLOBAL__N_110ToLinkDataERKNS_13LinkDataProtoE"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN13paint_preview12_GLOBAL__N_110ToLinkDataERKNS_13LinkDataProtoE: argument 0"}
!7 = distinct !{!7, !"_ZN13paint_preview12_GLOBAL__N_110ToLinkDataERKNS_13LinkDataProtoE"}
!8 = !{i8 0, i8 2}
!9 = !{!"branch_weights", i32 1, i32 2000}
