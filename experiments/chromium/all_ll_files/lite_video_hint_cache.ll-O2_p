; ModuleID = '../../chrome/browser/lite_video/lite_video_hint_cache.cc'
source_filename = "../../chrome/browser/lite_video/lite_video_hint_cache.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.lite_video::LiteVideoHintCache" = type { i32 (...)**, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.0" }
%"union.absl::variant_internal::DestructibleUnionImpl.0" = type { %"union.absl::variant_internal::DestructibleUnionImpl.1" }
%"union.absl::variant_internal::DestructibleUnionImpl.1" = type { %"union.absl::variant_internal::DestructibleUnionImpl.2" }
%"union.absl::variant_internal::DestructibleUnionImpl.2" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.4 }
%union.anon.4 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.32" = type { %"class.absl::optional_internal::optional_data.33" }
%"class.absl::optional_internal::optional_data.33" = type { %"class.absl::optional_internal::optional_data_base.34" }
%"class.absl::optional_internal::optional_data_base.34" = type { %"class.absl::optional_internal::optional_data_dtor_base.35" }
%"class.absl::optional_internal::optional_data_dtor_base.35" = type { i8, %union.anon.36 }
%union.anon.36 = type { %"class.lite_video::LiteVideoHint" }
%"class.lite_video::LiteVideoHint" = type { i32, %"class.base::TimeDelta", i32, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %class.GURL* }
%"class.std::__1::allocator" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZTVN10lite_video18LiteVideoHintCacheE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.lite_video::LiteVideoHintCache"*)* @_ZN10lite_video18LiteVideoHintCacheD2Ev to i8*), i8* bitcast (void (%"class.lite_video::LiteVideoHintCache"*)* @_ZN10lite_video18LiteVideoHintCacheD0Ev to i8*), i8* bitcast (void (%"class.absl::optional.32"*, %"class.lite_video::LiteVideoHintCache"*, %class.GURL*)* @_ZNK10lite_video18LiteVideoHintCache23GetHintForNavigationURLERK4GURL to i8*)] }, align 8

@_ZN10lite_video18LiteVideoHintCacheC1Ev = hidden unnamed_addr alias void (%"class.lite_video::LiteVideoHintCache"*), void (%"class.lite_video::LiteVideoHintCache"*)* @_ZN10lite_video18LiteVideoHintCacheC2Ev
@_ZN10lite_video18LiteVideoHintCacheD1Ev = hidden unnamed_addr alias void (%"class.lite_video::LiteVideoHintCache"*), void (%"class.lite_video::LiteVideoHintCache"*)* @_ZN10lite_video18LiteVideoHintCacheD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10lite_video18LiteVideoHintCacheC2Ev(%"class.lite_video::LiteVideoHintCache"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.lite_video::LiteVideoHintCache", %"class.lite_video::LiteVideoHintCache"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN10lite_video18LiteVideoHintCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.lite_video::LiteVideoHintCache", %"class.lite_video::LiteVideoHintCache"* %0, i64 0, i32 1
  tail call void @_ZN10lite_video8features37GetLiteVideoOriginHintsFromFieldTrialEv(%"class.absl::optional"* sret %3) #5
  ret void
}

declare void @_ZN10lite_video8features37GetLiteVideoOriginHintsFromFieldTrialEv(%"class.absl::optional"* sret) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10lite_video18LiteVideoHintCacheD2Ev(%"class.lite_video::LiteVideoHintCache"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.lite_video::LiteVideoHintCache", %"class.lite_video::LiteVideoHintCache"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN10lite_video18LiteVideoHintCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.lite_video::LiteVideoHintCache", %"class.lite_video::LiteVideoHintCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.lite_video::LiteVideoHintCache", %"class.lite_video::LiteVideoHintCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %7) #5
  store i8 0, i8* %3, align 8
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10lite_video18LiteVideoHintCacheD0Ev(%"class.lite_video::LiteVideoHintCache"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.lite_video::LiteVideoHintCache", %"class.lite_video::LiteVideoHintCache"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN10lite_video18LiteVideoHintCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.lite_video::LiteVideoHintCache", %"class.lite_video::LiteVideoHintCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.lite_video::LiteVideoHintCache", %"class.lite_video::LiteVideoHintCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %7) #5
  br label %8

8:                                                ; preds = %1, %6
  %9 = bitcast %"class.lite_video::LiteVideoHintCache"* %0 to i8*
  tail call void @_ZdlPv(i8* %9) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10lite_video18LiteVideoHintCache23GetHintForNavigationURLERK4GURL(%"class.absl::optional.32"* noalias nocapture sret, %"class.lite_video::LiteVideoHintCache"*, %class.GURL* dereferenceable(120)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::allocator", align 1
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.lite_video::LiteVideoHint", align 8
  %7 = getelementptr inbounds %"class.lite_video::LiteVideoHintCache", %"class.lite_video::LiteVideoHintCache"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.lite_video::LiteVideoHintCache", %"class.lite_video::LiteVideoHintCache"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.lite_video::LiteVideoHintCache", %"class.lite_video::LiteVideoHintCache"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = trunc i64 %13 to i8
  %15 = icmp eq i8 %14, 6
  br i1 %15, label %20, label %16

16:                                               ; preds = %3, %10
  %17 = getelementptr inbounds %"class.absl::optional.32", %"class.absl::optional.32"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %17, align 8
  %18 = getelementptr inbounds %"class.absl::optional.32", %"class.absl::optional.32"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast %union.anon.36* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 32, i1 false) #5
  br label %74

20:                                               ; preds = %10
  %21 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #5
  %22 = getelementptr inbounds %class.GURL, %class.GURL* %2, i64 0, i32 2, i32 3, i32 1
  %23 = load i32, i32* %22, align 4, !noalias !3
  %24 = icmp slt i32 %23, 1
  br i1 %24, label %25, label %27

25:                                               ; preds = %20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 24, i1 false) #5, !alias.scope !3
  %26 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %41

27:                                               ; preds = %20
  %28 = getelementptr inbounds %class.GURL, %class.GURL* %2, i64 0, i32 0
  %29 = getelementptr inbounds %class.GURL, %class.GURL* %2, i64 0, i32 2, i32 3, i32 0
  %30 = load i32, i32* %29, align 4, !noalias !3
  %31 = sext i32 %30 to i64
  %32 = sext i32 %23 to i64
  %33 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %33) #5, !noalias !3
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %5, %"class.std::__1::basic_string"* dereferenceable(24) %28, i64 %31, i64 %32, %"class.std::__1::allocator"* nonnull dereferenceable(1) %4) #5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %33) #5, !noalias !3
  %34 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  br label %41

41:                                               ; preds = %25, %27
  %42 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %26, %25 ], [ %34, %27 ]
  %43 = phi i64 [ 0, %25 ], [ %40, %27 ]
  %44 = phi i8* [ null, %25 ], [ %38, %27 ]
  %45 = phi i8 [ 0, %25 ], [ %36, %27 ]
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %47 = icmp slt i8 %45, 0
  %48 = select i1 %47, i8* %44, i8* %21
  %49 = zext i8 %45 to i64
  %50 = select i1 %47, i64 %43, i64 %49
  %51 = call i64 @_ZNK4base5Value10FindIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %11, i8* %48, i64 %50) #5
  %52 = trunc i64 %51 to i8
  %53 = lshr i64 %51, 32
  %54 = trunc i64 %53 to i32
  %55 = load i8, i8* %46, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %41
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %59) #6
  br label %60

60:                                               ; preds = %41, %57
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #5
  %61 = icmp eq i8 %52, 0
  br i1 %61, label %62, label %66

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.absl::optional.32", %"class.absl::optional.32"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %63, align 8
  %64 = getelementptr inbounds %"class.absl::optional.32", %"class.absl::optional.32"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %65 = bitcast %union.anon.36* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 32, i1 false) #5
  br label %74

66:                                               ; preds = %60
  %67 = bitcast %"class.lite_video::LiteVideoHint"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %67) #5
  %68 = call i64 @_ZN10lite_video8features33LiteVideoTargetDownlinkRTTLatencyEv() #5
  %69 = call i32 @_ZN10lite_video8features40LiteVideoKilobytesToBufferBeforeThrottleEv() #5
  %70 = call i64 @_ZN10lite_video8features27LiteVideoMaxThrottlingDelayEv() #5
  call void @_ZN10lite_video13LiteVideoHintC1EiN4base9TimeDeltaEiS2_(%"class.lite_video::LiteVideoHint"* nonnull %6, i32 %54, i64 %68, i32 %69, i64 %70) #5
  %71 = getelementptr inbounds %"class.absl::optional.32", %"class.absl::optional.32"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %71, align 8
  %72 = getelementptr inbounds %"class.absl::optional.32", %"class.absl::optional.32"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %73 = bitcast %"class.lite_video::LiteVideoHint"* %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* nonnull align 8 %67, i64 32, i1 false) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %67) #5
  br label %74

74:                                               ; preds = %62, %66, %16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare i64 @_ZNK4base5Value10FindIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare i64 @_ZN10lite_video8features33LiteVideoTargetDownlinkRTTLatencyEv() local_unnamed_addr #1

declare i32 @_ZN10lite_video8features40LiteVideoKilobytesToBufferBeforeThrottleEv() local_unnamed_addr #1

declare i64 @_ZN10lite_video8features27LiteVideoMaxThrottlingDelayEv() local_unnamed_addr #1

declare void @_ZN10lite_video13LiteVideoHintC1EiN4base9TimeDeltaEiS2_(%"class.lite_video::LiteVideoHint"*, i32, i64, i32, i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!5 = distinct !{!5, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!6 = distinct !{!6, !7, !"_ZNK4GURL4hostEv: argument 0"}
!7 = distinct !{!7, !"_ZNK4GURL4hostEv"}
