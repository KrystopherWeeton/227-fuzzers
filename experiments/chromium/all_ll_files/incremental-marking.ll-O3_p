; ModuleID = '../../v8/src/heap/incremental-marking.cc'
source_filename = "../../v8/src/heap/incremental-marking.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::atomic.1190" = type { %"struct.std::__1::__atomic_base.1191" }
%"struct.std::__1::__atomic_base.1191" = type { %"struct.std::__1::__atomic_base.1192" }
%"struct.std::__1::__atomic_base.1192" = type { %"struct.std::__1::__cxx_atomic_impl.1193" }
%"struct.std::__1::__cxx_atomic_impl.1193" = type { %"struct.std::__1::__cxx_atomic_base_impl.1194" }
%"struct.std::__1::__cxx_atomic_base_impl.1194" = type { i32 }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.526" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.128", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.20", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.135", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.150", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.154", %"class.std::__1::vector.154", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.169", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.300", %"class.std::__1::unique_ptr.306", %"class.std::__1::unique_ptr.312", %"class.std::__1::unique_ptr.351", %"class.std::__1::unique_ptr.357", %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.393", %"class.std::__1::unique_ptr.403", %"class.std::__1::unique_ptr.409", %"class.std::__1::unique_ptr.409", %"class.std::__1::unique_ptr.415", %"class.std::__1::unique_ptr.421", %"class.std::__1::unique_ptr.421", %"class.std::__1::unique_ptr.427", %"class.std::__1::unique_ptr.433", %"class.std::__1::shared_ptr.463", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.486", %"class.std::__1::unique_ptr.512", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.518", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.533", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.322", i8, [7 x i8], %"class.std::__1::unordered_map.539", %"class.std::__1::unordered_map.565", %"class.std::__1::unordered_map.539", %"class.std::__1::unordered_map.589", %"class.std::__1::vector.617", i8, %"class.std::__1::unique_ptr.624", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.15", %"struct.std::__1::atomic.15", %"struct.std::__1::atomic.15" }
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.711", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.717", %"class.std::__1::unique_ptr.738", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.748", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.869", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.882", void (i32, %"class.v8::SharedArrayBuffer"*, i64, i64, double, %"class.v8::Isolate::AtomicsWaitWakeHandle"*, i8*)*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.892", void (%"class.v8::Context"*, %"class.v8::Module"*, %"class.v8::Object"*)*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.904", %"struct.std::__1::atomic.141", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.979", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.1022"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1034", i32, i8, i8, i32, i32, %"class.std::__1::vector.1040", %"class.std::__1::vector.1040", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1047", i64, %"class.std::__1::unordered_map.1048", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.526", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.149", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1100", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1114", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, %"class.v8::Value"* (%"class.v8::Context"*, %"class.v8::Value"*, %"class.v8::Array"*)*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1148", %"class.std::__1::vector.1152", %"class.std::__1::vector.1152", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.706", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.706" = type { %"struct.std::__1::__atomic_base.707" }
%"struct.std::__1::__atomic_base.707" = type { %"struct.std::__1::__cxx_atomic_impl.708" }
%"struct.std::__1::__cxx_atomic_impl.708" = type { %"struct.std::__1::__cxx_atomic_base_impl.709" }
%"struct.std::__1::__cxx_atomic_base_impl.709" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type { %"class.v8::internal::Isolate"*, i64, %"class.v8::internal::ExternalCallbackScope"* }
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.711" = type { %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.717" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.128", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.718", %"class.std::__1::unique_ptr.732" }
%"class.std::__1::unique_ptr.718" = type { %"class.std::__1::__compressed_pair.719" }
%"class.std::__1::__compressed_pair.719" = type { %"struct.std::__1::__compressed_pair_elem.720" }
%"struct.std::__1::__compressed_pair_elem.720" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.721" }
%"class.std::__1::vector.721" = type { %"class.std::__1::__vector_base.722" }
%"class.std::__1::__vector_base.722" = type { %"class.std::__1::unique_ptr.723"*, %"class.std::__1::unique_ptr.723"*, %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::unique_ptr.723" = type { %"class.std::__1::__compressed_pair.1185" }
%"class.std::__1::__compressed_pair.1185" = type { %"struct.std::__1::__compressed_pair_elem.1186" }
%"struct.std::__1::__compressed_pair_elem.1186" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.std::__1::unique_ptr.723"* }
%"class.std::__1::unique_ptr.732" = type { %"class.std::__1::__compressed_pair.733" }
%"class.std::__1::__compressed_pair.733" = type { %"struct.std::__1::__compressed_pair_elem.734" }
%"struct.std::__1::__compressed_pair_elem.734" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.741", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.741" = type { %"struct.std::__1::__atomic_base.742" }
%"struct.std::__1::__atomic_base.742" = type { %"struct.std::__1::__cxx_atomic_impl.743" }
%"struct.std::__1::__cxx_atomic_impl.743" = type { %"struct.std::__1::__cxx_atomic_base_impl.744" }
%"struct.std::__1::__cxx_atomic_base_impl.744" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::CompilationCacheScript", %"class.v8::internal::CompilationCacheEval", %"class.v8::internal::CompilationCacheEval", %"class.v8::internal::CompilationCacheRegExp", [4 x %"class.v8::internal::CompilationSubCache"*], i8, [7 x i8] }>
%"class.v8::internal::CompilationCacheScript" = type { %"class.v8::internal::CompilationSubCache" }
%"class.v8::internal::CompilationSubCache" = type { i32 (...)**, %"class.v8::internal::Isolate"*, i32, [2 x %"class.v8::internal::Object"] }
%"class.v8::internal::CompilationCacheEval" = type { %"class.v8::internal::CompilationSubCache" }
%"class.v8::internal::CompilationCacheRegExp" = type { %"class.v8::internal::CompilationSubCache" }
%"class.std::__1::shared_ptr.748" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.749", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.749" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.750", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.750" = type { %"class.std::__1::__vector_base.751" }
%"class.std::__1::__vector_base.751" = type { %"class.std::__1::unique_ptr.752"*, %"class.std::__1::unique_ptr.752"*, %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::unique_ptr.752" = type opaque
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.std::__1::unique_ptr.752"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon.758 }
%union.anon.758 = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.759", %"class.std::__1::unique_ptr.765", %"struct.std::__1::atomic.141", %"class.std::__1::unique_ptr.771", %"class.std::__1::unique_ptr.777", %"class.std::__1::unique_ptr.783", %"class.std::__1::unique_ptr.789", %"class.std::__1::unique_ptr.795", %"class.std::__1::set.801", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.759" = type { %"class.std::__1::__compressed_pair.760" }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.771" = type { %"class.std::__1::__compressed_pair.772" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.777" = type { %"class.std::__1::__compressed_pair.778" }
%"class.std::__1::__compressed_pair.778" = type { %"struct.std::__1::__compressed_pair_elem.779" }
%"struct.std::__1::__compressed_pair_elem.779" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.783" = type { %"class.std::__1::__compressed_pair.784" }
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem.785" }
%"struct.std::__1::__compressed_pair_elem.785" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.789" = type { %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.791" }
%"struct.std::__1::__compressed_pair_elem.791" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.795" = type { %"class.std::__1::__compressed_pair.796" }
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.801" = type { %"class.std::__1::__tree.802" }
%"class.std::__1::__tree.802" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.803", %"class.std::__1::__compressed_pair.807" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.807" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.810" }
%"class.v8::internal::TaggedImpl.810" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.809" }
%"class.v8::internal::TaggedImpl.809" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.676", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.676" = type { %"class.std::__1::__compressed_pair.677" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.678" }
%"struct.std::__1::__compressed_pair_elem.678" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.811", %"class.v8::internal::DetachableVector.812", %"class.v8::internal::DetachableVector.811", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.812" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.811" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr.670", %"class.std::__1::unique_ptr.464" }
%"class.std::__1::unique_ptr.670" = type { %"class.std::__1::__compressed_pair.671" }
%"class.std::__1::__compressed_pair.671" = type { %"struct.std::__1::__compressed_pair_elem.672" }
%"struct.std::__1::__compressed_pair_elem.672" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.467", %"class.std::__1::set.475" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.467" = type { %"class.std::__1::__tree.468" }
%"class.std::__1::__tree.468" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.469", %"class.std::__1::__compressed_pair.473" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.475" = type { %"class.std::__1::__tree.476" }
%"class.std::__1::__tree.476" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.469", %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.813", %"class.std::__1::vector.819", %"class.std::__1::unique_ptr.826", %"class.std::__1::vector.833", %"class.std::__1::unique_ptr.840", i64, %"class.std::__1::vector.846", %"class.std::__1::vector.854", %"class.std::__1::vector.862", i8, i8, i32 }
%"class.std::__1::unique_ptr.813" = type { %"class.std::__1::__compressed_pair.814" }
%"class.std::__1::__compressed_pair.814" = type { %"struct.std::__1::__compressed_pair_elem.815" }
%"struct.std::__1::__compressed_pair_elem.815" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.819" = type { %"class.std::__1::__vector_base.820" }
%"class.std::__1::__vector_base.820" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.821" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.821" = type { %"struct.std::__1::__compressed_pair_elem.822" }
%"struct.std::__1::__compressed_pair_elem.822" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.826" = type { %"class.std::__1::__compressed_pair.827" }
%"class.std::__1::__compressed_pair.827" = type { %"struct.std::__1::__compressed_pair_elem.828" }
%"struct.std::__1::__compressed_pair_elem.828" = type { %"class.v8::internal::GlobalHandles::NodeSpace.829"* }
%"class.v8::internal::GlobalHandles::NodeSpace.829" = type opaque
%"class.std::__1::vector.833" = type { %"class.std::__1::__vector_base.834" }
%"class.std::__1::__vector_base.834" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.835" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.835" = type { %"struct.std::__1::__compressed_pair_elem.836" }
%"struct.std::__1::__compressed_pair_elem.836" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.840" = type { %"class.std::__1::__compressed_pair.841" }
%"class.std::__1::__compressed_pair.841" = type { %"struct.std::__1::__compressed_pair_elem.842" }
%"struct.std::__1::__compressed_pair_elem.842" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.846" = type { %"class.std::__1::__vector_base.847" }
%"class.std::__1::__vector_base.847" = type { %"struct.std::__1::pair.848"*, %"struct.std::__1::pair.848"*, %"class.std::__1::__compressed_pair.849" }
%"struct.std::__1::pair.848" = type opaque
%"class.std::__1::__compressed_pair.849" = type { %"struct.std::__1::__compressed_pair_elem.850" }
%"struct.std::__1::__compressed_pair_elem.850" = type { %"struct.std::__1::pair.848"* }
%"class.std::__1::vector.854" = type { %"class.std::__1::__vector_base.855" }
%"class.std::__1::__vector_base.855" = type { %"struct.std::__1::pair.856"*, %"struct.std::__1::pair.856"*, %"class.std::__1::__compressed_pair.857" }
%"struct.std::__1::pair.856" = type opaque
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.858" }
%"struct.std::__1::__compressed_pair_elem.858" = type { %"struct.std::__1::pair.856"* }
%"class.std::__1::vector.862" = type { %"class.std::__1::__vector_base.863" }
%"class.std::__1::__vector_base.863" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.864" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.864" = type { %"struct.std::__1::__compressed_pair_elem.865" }
%"struct.std::__1::__compressed_pair_elem.865" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.682", %"class.std::__1::vector.869" }
%"class.std::__1::vector.682" = type { %"class.std::__1::__vector_base.683" }
%"class.std::__1::__vector_base.683" = type { i64**, i64**, %"class.std::__1::__compressed_pair.684" }
%"class.std::__1::__compressed_pair.684" = type { %"struct.std::__1::__compressed_pair_elem.685" }
%"struct.std::__1::__compressed_pair_elem.685" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.876" }
%"class.std::__1::unique_ptr.876" = type { %"class.std::__1::__compressed_pair.877" }
%"class.std::__1::__compressed_pair.877" = type { %"struct.std::__1::__compressed_pair_elem.878" }
%"struct.std::__1::__compressed_pair_elem.878" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.869" = type { %"class.std::__1::__vector_base.870" }
%"class.std::__1::__vector_base.870" = type { i32*, i32*, %"class.std::__1::__compressed_pair.871" }
%"class.std::__1::__compressed_pair.871" = type { %"struct.std::__1::__compressed_pair_elem.872" }
%"struct.std::__1::__compressed_pair_elem.872" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.882" = type { %"struct.std::__1::__atomic_base.883" }
%"struct.std::__1::__atomic_base.883" = type { %"struct.std::__1::__cxx_atomic_impl.884" }
%"struct.std::__1::__cxx_atomic_impl.884" = type { %"struct.std::__1::__cxx_atomic_base_impl.885" }
%"struct.std::__1::__cxx_atomic_base_impl.885" = type { i32 }
%"class.v8::SharedArrayBuffer" = type { i8 }
%"class.v8::Isolate::AtomicsWaitWakeHandle" = type { i8 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.892" = type { %"struct.std::__1::__atomic_base.893" }
%"struct.std::__1::__atomic_base.893" = type { %"struct.std::__1::__cxx_atomic_impl.894" }
%"struct.std::__1::__cxx_atomic_impl.894" = type { %"struct.std::__1::__cxx_atomic_base_impl.895" }
%"struct.std::__1::__cxx_atomic_base_impl.895" = type { i32 }
%"class.v8::Context" = type { i8 }
%"class.v8::Module" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.897" }
%"class.std::__1::__compressed_pair.897" = type { %"struct.std::__1::__compressed_pair_elem.898" }
%"struct.std::__1::__compressed_pair_elem.898" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.899 }
%union.anon.899 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.904" = type { %"class.std::__1::__hash_table.905" }
%"class.std::__1::__hash_table.905" = type <{ %"class.std::__1::unique_ptr.906", %"class.std::__1::__compressed_pair.916", %"class.std::__1::__compressed_pair.921", %"class.std::__1::__compressed_pair.924", [4 x i8] }>
%"class.std::__1::unique_ptr.906" = type { %"class.std::__1::__compressed_pair.907" }
%"class.std::__1::__compressed_pair.907" = type { %"struct.std::__1::__compressed_pair_elem.908", %"struct.std::__1::__compressed_pair_elem.910" }
%"struct.std::__1::__compressed_pair_elem.908" = type { %"struct.std::__1::__hash_node_base.909"** }
%"struct.std::__1::__hash_node_base.909" = type { %"struct.std::__1::__hash_node_base.909"* }
%"struct.std::__1::__compressed_pair_elem.910" = type { %"class.std::__1::__bucket_list_deallocator.911" }
%"class.std::__1::__bucket_list_deallocator.911" = type { %"class.std::__1::__compressed_pair.912" }
%"class.std::__1::__compressed_pair.912" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.916" = type { %"struct.std::__1::__compressed_pair_elem.917" }
%"struct.std::__1::__compressed_pair_elem.917" = type { %"struct.std::__1::__hash_node_base.909" }
%"class.std::__1::__compressed_pair.921" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.924" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::atomic.141" = type { %"struct.std::__1::__atomic_base.142" }
%"struct.std::__1::__atomic_base.142" = type { %"struct.std::__1::__cxx_atomic_impl.143" }
%"struct.std::__1::__cxx_atomic_impl.143" = type { %"struct.std::__1::__cxx_atomic_base_impl.144" }
%"struct.std::__1::__cxx_atomic_base_impl.144" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.930", %"class.v8::internal::Handle.936", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.937", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.930" = type { %"class.std::__1::__compressed_pair.931" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.932" }
%"struct.std::__1::__compressed_pair_elem.932" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.936" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.937" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.938", %"class.std::__1::vector.944", %"class.std::__1::unique_ptr.952", %"class.std::__1::unique_ptr.958", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.964", %"class.std::__1::vector.970", %"struct.std::__1::pair.978" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.938" = type { %"class.std::__1::__compressed_pair.939" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.940" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.944" = type { %"class.std::__1::__vector_base.945" }
%"class.std::__1::__vector_base.945" = type { %"class.std::__1::unique_ptr.946"*, %"class.std::__1::unique_ptr.946"*, %"class.std::__1::__compressed_pair.947" }
%"class.std::__1::unique_ptr.946" = type opaque
%"class.std::__1::__compressed_pair.947" = type { %"struct.std::__1::__compressed_pair_elem.948" }
%"struct.std::__1::__compressed_pair_elem.948" = type { %"class.std::__1::unique_ptr.946"* }
%"class.std::__1::unique_ptr.952" = type { %"class.std::__1::__compressed_pair.953" }
%"class.std::__1::__compressed_pair.953" = type { %"struct.std::__1::__compressed_pair_elem.954" }
%"struct.std::__1::__compressed_pair_elem.954" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.958" = type { %"class.std::__1::__compressed_pair.959" }
%"class.std::__1::__compressed_pair.959" = type { %"struct.std::__1::__compressed_pair_elem.960" }
%"struct.std::__1::__compressed_pair_elem.960" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.964" = type { %"class.std::__1::__compressed_pair.965" }
%"class.std::__1::__compressed_pair.965" = type { %"struct.std::__1::__compressed_pair_elem.966" }
%"struct.std::__1::__compressed_pair_elem.966" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.970" = type { %"class.std::__1::__vector_base.971" }
%"class.std::__1::__vector_base.971" = type { %"struct.std::__1::pair.972"*, %"struct.std::__1::pair.972"*, %"class.std::__1::__compressed_pair.973" }
%"struct.std::__1::pair.972" = type opaque
%"class.std::__1::__compressed_pair.973" = type { %"struct.std::__1::__compressed_pair_elem.974" }
%"struct.std::__1::__compressed_pair_elem.974" = type { %"struct.std::__1::pair.972"* }
%"struct.std::__1::pair.978" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.710"*, i16, i8*)*, i8* }
%"class.v8::Local.710" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.979" = type { %"class.std::__1::__compressed_pair.980" }
%"class.std::__1::__compressed_pair.980" = type { %"struct.std::__1::__compressed_pair_elem.981" }
%"struct.std::__1::__compressed_pair_elem.981" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.982", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.982" = type { %"class.std::__1::__hash_table.983" }
%"class.std::__1::__hash_table.983" = type <{ %"class.std::__1::unique_ptr.984", %"class.std::__1::__compressed_pair.994", %"class.std::__1::__compressed_pair.999", %"class.std::__1::__compressed_pair.1003", [4 x i8] }>
%"class.std::__1::unique_ptr.984" = type { %"class.std::__1::__compressed_pair.985" }
%"class.std::__1::__compressed_pair.985" = type { %"struct.std::__1::__compressed_pair_elem.986", %"struct.std::__1::__compressed_pair_elem.988" }
%"struct.std::__1::__compressed_pair_elem.986" = type { %"struct.std::__1::__hash_node_base.987"** }
%"struct.std::__1::__hash_node_base.987" = type { %"struct.std::__1::__hash_node_base.987"* }
%"struct.std::__1::__compressed_pair_elem.988" = type { %"class.std::__1::__bucket_list_deallocator.989" }
%"class.std::__1::__bucket_list_deallocator.989" = type { %"class.std::__1::__compressed_pair.990" }
%"class.std::__1::__compressed_pair.990" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"struct.std::__1::__hash_node_base.987" }
%"class.std::__1::__compressed_pair.999" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1003" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.1017" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.1011"**, %"struct.std::__1::pair.1011"**, %"struct.std::__1::pair.1011"**, %"class.std::__1::__compressed_pair.1012" }
%"struct.std::__1::pair.1011" = type opaque
%"class.std::__1::__compressed_pair.1012" = type { %"struct.std::__1::__compressed_pair_elem.1013" }
%"struct.std::__1::__compressed_pair_elem.1013" = type { %"struct.std::__1::pair.1011"** }
%"class.std::__1::__compressed_pair.1017" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::String" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.1022" = type { %"class.std::__1::__vector_base.1023" }
%"class.std::__1::__vector_base.1023" = type { %"class.v8::internal::Handle.1024"*, %"class.v8::internal::Handle.1024"*, %"class.std::__1::__compressed_pair.1025" }
%"class.v8::internal::Handle.1024" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1025" = type { %"struct.std::__1::__compressed_pair_elem.1026" }
%"struct.std::__1::__compressed_pair_elem.1026" = type { %"class.v8::internal::Handle.1024"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type { %"class.v8::MicrotaskQueue", i64, i64, i64, i64*, i64, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::MicrotaskQueue"*, i32, i32, i32, i8, %"class.std::__1::vector.1030" }
%"class.v8::MicrotaskQueue" = type { i32 (...)** }
%"class.std::__1::vector.1030" = type { %"class.std::__1::__vector_base.1031" }
%"class.std::__1::__vector_base.1031" = type { %"struct.std::__1::pair.1011"*, %"struct.std::__1::pair.1011"*, %"class.std::__1::__compressed_pair.1032" }
%"class.std::__1::__compressed_pair.1032" = type { %"struct.std::__1::__compressed_pair_elem.1033" }
%"struct.std::__1::__compressed_pair_elem.1033" = type { %"struct.std::__1::pair.1011"* }
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.887", i32, %"class.v8::Local.710" }
%"class.v8::Local.887" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1034" = type { %"class.std::__1::__compressed_pair.1035" }
%"class.std::__1::__compressed_pair.1035" = type { %"struct.std::__1::__compressed_pair_elem.1036" }
%"struct.std::__1::__compressed_pair_elem.1036" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.682", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1040" = type { %"class.std::__1::__vector_base.1041" }
%"class.std::__1::__vector_base.1041" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1042" }
%"class.std::__1::__compressed_pair.1042" = type { %"struct.std::__1::__compressed_pair_elem.1043" }
%"struct.std::__1::__compressed_pair_elem.1043" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1047" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1048" = type { %"class.std::__1::__hash_table.1049" }
%"class.std::__1::__hash_table.1049" = type <{ %"class.std::__1::unique_ptr.1050", %"class.std::__1::__compressed_pair.1060", %"class.std::__1::__compressed_pair.1065", %"class.std::__1::__compressed_pair.1068", [4 x i8] }>
%"class.std::__1::unique_ptr.1050" = type { %"class.std::__1::__compressed_pair.1051" }
%"class.std::__1::__compressed_pair.1051" = type { %"struct.std::__1::__compressed_pair_elem.1052", %"struct.std::__1::__compressed_pair_elem.1054" }
%"struct.std::__1::__compressed_pair_elem.1052" = type { %"struct.std::__1::__hash_node_base.1053"** }
%"struct.std::__1::__hash_node_base.1053" = type { %"struct.std::__1::__hash_node_base.1053"* }
%"struct.std::__1::__compressed_pair_elem.1054" = type { %"class.std::__1::__bucket_list_deallocator.1055" }
%"class.std::__1::__bucket_list_deallocator.1055" = type { %"class.std::__1::__compressed_pair.1056" }
%"class.std::__1::__compressed_pair.1056" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1060" = type { %"struct.std::__1::__compressed_pair_elem.1061" }
%"struct.std::__1::__compressed_pair_elem.1061" = type { %"struct.std::__1::__hash_node_base.1053" }
%"class.std::__1::__compressed_pair.1065" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1068" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.149" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1072", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1097", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1098", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1072" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.521, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.521 = type { i64 }
%"class.std::__1::weak_ptr.1097" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.149" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1098" = type { %"class.v8::PersistentBase.1099" }
%"class.v8::PersistentBase.1099" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1073", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1073" = type { %"class.std::__1::__hash_table.1074" }
%"class.std::__1::__hash_table.1074" = type <{ %"class.std::__1::unique_ptr.1075", %"class.std::__1::__compressed_pair.1085", %"class.std::__1::__compressed_pair.1090", %"class.std::__1::__compressed_pair.1093", [4 x i8] }>
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077", %"struct.std::__1::__compressed_pair_elem.1079" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"struct.std::__1::__hash_node_base.1078"** }
%"struct.std::__1::__hash_node_base.1078" = type { %"struct.std::__1::__hash_node_base.1078"* }
%"struct.std::__1::__compressed_pair_elem.1079" = type { %"class.std::__1::__bucket_list_deallocator.1080" }
%"class.std::__1::__bucket_list_deallocator.1080" = type { %"class.std::__1::__compressed_pair.1081" }
%"class.std::__1::__compressed_pair.1081" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1085" = type { %"struct.std::__1::__compressed_pair_elem.1086" }
%"struct.std::__1::__compressed_pair_elem.1086" = type { %"struct.std::__1::__hash_node_base.1078" }
%"class.std::__1::__compressed_pair.1090" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1093" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1100" = type { %"class.std::__1::__compressed_pair.1101" }
%"class.std::__1::__compressed_pair.1101" = type { %"struct.std::__1::__compressed_pair_elem.1102" }
%"struct.std::__1::__compressed_pair_elem.1102" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1105", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.663", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.667", %"class.std::__1::unique_ptr.692", %"class.std::__1::unique_ptr.433", %"class.std::__1::vector.698", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.663" = type { %"struct.std::__1::__atomic_base.664" }
%"struct.std::__1::__atomic_base.664" = type { %"struct.std::__1::__cxx_atomic_impl.665" }
%"struct.std::__1::__cxx_atomic_impl.665" = type { %"struct.std::__1::__cxx_atomic_base_impl.666" }
%"struct.std::__1::__cxx_atomic_base_impl.666" = type { i32 }
%"class.std::__1::unique_ptr.667" = type { %"class.std::__1::__compressed_pair.668" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.669" }
%"struct.std::__1::__compressed_pair_elem.669" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.682" }
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.698" = type { %"class.std::__1::__vector_base.699" }
%"class.std::__1::__vector_base.699" = type { %"struct.std::__1::pair.700"*, %"struct.std::__1::pair.700"*, %"class.std::__1::__compressed_pair.701" }
%"struct.std::__1::pair.700" = type opaque
%"class.std::__1::__compressed_pair.701" = type { %"struct.std::__1::__compressed_pair_elem.702" }
%"struct.std::__1::__compressed_pair_elem.702" = type { %"struct.std::__1::pair.700"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.88" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.29", %"class.std::__1::vector.29", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.31" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.36" }
%"class.std::__1::__hash_table.36" = type <{ %"class.std::__1::unique_ptr.37", %"class.std::__1::__compressed_pair.47", %"class.std::__1::__compressed_pair.52", %"class.std::__1::__compressed_pair.54", [4 x i8] }>
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39", %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.std::__1::__hash_node_base.40"** }
%"struct.std::__1::__hash_node_base.40" = type { %"struct.std::__1::__hash_node_base.40"* }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.std::__1::__bucket_list_deallocator.42" }
%"class.std::__1::__bucket_list_deallocator.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.40" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.15", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.77", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.15", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.15", %"struct.std::__1::atomic.59", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.59" = type { %"struct.std::__1::__atomic_base.60" }
%"struct.std::__1::__atomic_base.60" = type { %"struct.std::__1::__cxx_atomic_impl.61" }
%"struct.std::__1::__cxx_atomic_impl.61" = type { %"struct.std::__1::__cxx_atomic_base_impl.62" }
%"struct.std::__1::__cxx_atomic_base_impl.62" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.63" }
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.65" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.70", %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::atomic.77" = type { %"struct.std::__1::__atomic_base.78" }
%"struct.std::__1::__atomic_base.78" = type { %"struct.std::__1::__cxx_atomic_impl.79" }
%"struct.std::__1::__cxx_atomic_impl.79" = type { %"struct.std::__1::__cxx_atomic_base_impl.80" }
%"struct.std::__1::__cxx_atomic_base_impl.80" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.81", i8, [7 x i8] }>
%"class.std::__1::vector.81" = type { %"class.std::__1::__vector_base.82" }
%"class.std::__1::__vector_base.82" = type { i64*, i64*, %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1105" = type { %"class.std::__1::__compressed_pair.1106" }
%"class.std::__1::__compressed_pair.1106" = type { %"struct.std::__1::__compressed_pair_elem.1107" }
%"struct.std::__1::__compressed_pair_elem.1107" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1114" = type { %"class.std::__1::__compressed_pair.1115" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.1116" }
%"struct.std::__1::__compressed_pair_elem.1116" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.888", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.888" = type { %"class.v8::Context"* }
%"class.v8::Array" = type { i8 }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1122" }
%"class.std::__1::unordered_map.1122" = type { %"class.std::__1::__hash_table.1123" }
%"class.std::__1::__hash_table.1123" = type <{ %"class.std::__1::unique_ptr.1124", %"class.std::__1::__compressed_pair.1134", %"class.std::__1::__compressed_pair.1139", %"class.std::__1::__compressed_pair.1142", [4 x i8] }>
%"class.std::__1::unique_ptr.1124" = type { %"class.std::__1::__compressed_pair.1125" }
%"class.std::__1::__compressed_pair.1125" = type { %"struct.std::__1::__compressed_pair_elem.1126", %"struct.std::__1::__compressed_pair_elem.1128" }
%"struct.std::__1::__compressed_pair_elem.1126" = type { %"struct.std::__1::__hash_node_base.1127"** }
%"struct.std::__1::__hash_node_base.1127" = type { %"struct.std::__1::__hash_node_base.1127"* }
%"struct.std::__1::__compressed_pair_elem.1128" = type { %"class.std::__1::__bucket_list_deallocator.1129" }
%"class.std::__1::__bucket_list_deallocator.1129" = type { %"class.std::__1::__compressed_pair.1130" }
%"class.std::__1::__compressed_pair.1130" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1134" = type { %"struct.std::__1::__compressed_pair_elem.1135" }
%"struct.std::__1::__compressed_pair_elem.1135" = type { %"struct.std::__1::__hash_node_base.1127" }
%"class.std::__1::__compressed_pair.1139" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1142" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::atomic.1148" = type { %"struct.std::__1::__atomic_base.1149" }
%"struct.std::__1::__atomic_base.1149" = type { %"struct.std::__1::__cxx_atomic_impl.1150" }
%"struct.std::__1::__cxx_atomic_impl.1150" = type { %"struct.std::__1::__cxx_atomic_base_impl.1151" }
%"struct.std::__1::__cxx_atomic_base_impl.1151" = type { %"class.std::__1::vector.1152"* }
%"class.std::__1::vector.1152" = type { %"class.std::__1::__vector_base.1153" }
%"class.std::__1::__vector_base.1153" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1154" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1154" = type { %"struct.std::__1::__compressed_pair_elem.1155" }
%"struct.std::__1::__compressed_pair_elem.1155" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.24" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.92" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { %"struct.std::__1::pair.94"*, %"struct.std::__1::pair.94"*, %"class.std::__1::__compressed_pair.95" }
%"struct.std::__1::pair.94" = type { i32, i64 }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"struct.std::__1::pair.94"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic", i32, %"struct.std::__1::atomic", %"class.v8::base::Mutex", %"struct.std::__1::atomic" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.100" }
%"class.std::__1::unordered_map.100" = type { %"class.std::__1::__hash_table.101" }
%"class.std::__1::__hash_table.101" = type <{ %"class.std::__1::unique_ptr.102", %"class.std::__1::__compressed_pair.112", %"class.std::__1::__compressed_pair.117", %"class.std::__1::__compressed_pair.122", [4 x i8] }>
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104", %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.105"** }
%"struct.std::__1::__hash_node_base.105" = type { %"struct.std::__1::__hash_node_base.105"* }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.std::__1::__bucket_list_deallocator.107" }
%"class.std::__1::__bucket_list_deallocator.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.std::__1::__hash_node_base.105" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.141", %"struct.std::__1::atomic.145", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.145" = type { %"struct.std::__1::__atomic_base.146" }
%"struct.std::__1::__atomic_base.146" = type { %"struct.std::__1::__cxx_atomic_impl.147" }
%"struct.std::__1::__cxx_atomic_impl.147" = type { %"struct.std::__1::__cxx_atomic_base_impl.148" }
%"struct.std::__1::__cxx_atomic_base_impl.148" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.150" = type { %"struct.std::__1::__atomic_base.151" }
%"struct.std::__1::__atomic_base.151" = type { %"struct.std::__1::__cxx_atomic_impl.152" }
%"struct.std::__1::__cxx_atomic_impl.152" = type { %"struct.std::__1::__cxx_atomic_base_impl.153" }
%"struct.std::__1::__cxx_atomic_base_impl.153" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.154" = type { %"class.std::__1::__vector_base.155" }
%"class.std::__1::__vector_base.155" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.156" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::GCTracer::Event", %"class.v8::internal::GCTracer::Event", i64, double, double, double, double, double, [10 x %"struct.v8::internal::GCTracer::IncrementalMarkingInfos"], double, i64, i64, i64, double, i64, i64, i64, double, i32, double, double, double, double, %"class.v8::base::RingBuffer", %"class.v8::base::RingBuffer", %"class.v8::base::RingBuffer", %"class.v8::base::RingBuffer", %"class.v8::base::RingBuffer", %"class.v8::base::RingBuffer", %"class.v8::base::RingBuffer", %"class.v8::base::RingBuffer", %"class.v8::base::RingBuffer.165", %"class.v8::base::Mutex", [124 x %"struct.v8::internal::GCTracer::BackgroundCounter"] }
%"class.v8::internal::GCTracer::Event" = type { i32, i32, i8*, double, double, i8, i64, i64, i64, i64, i64, i64, i64, i64, i64, double, [124 x double], [10 x %"struct.v8::internal::GCTracer::IncrementalMarkingInfos"] }
%"struct.v8::internal::GCTracer::IncrementalMarkingInfos" = type <{ double, double, i32, [4 x i8] }>
%"class.v8::base::RingBuffer" = type { [10 x %"struct.std::__1::pair.164"], i32, i32 }
%"struct.std::__1::pair.164" = type { i64, double }
%"class.v8::base::RingBuffer.165" = type { [10 x double], i32, i32 }
%"struct.v8::internal::GCTracer::BackgroundCounter" = type { double }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.217", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.271", %"class.std::__1::vector.271", %"class.std::__1::vector.271", %"class.std::__1::vector.278", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.172", %"class.std::__1::vector.173", %"class.std::__1::vector.180", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.172" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, [16 x %"class.v8::internal::HeapObject"] }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.175" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.180" = type { %"class.std::__1::__vector_base.181" }
%"class.std::__1::__vector_base.181" = type { %"class.std::__1::unique_ptr.182"*, %"class.std::__1::unique_ptr.182"*, %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::unique_ptr.182" = type opaque
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.std::__1::unique_ptr.182"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, [64 x %"class.v8::internal::HeapObject"] }
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.188", %"class.v8::internal::Worklist.190", %"class.v8::internal::Worklist.190", %"class.v8::internal::Worklist.190", %"class.v8::internal::Worklist.192", %"class.v8::internal::Worklist.194", %"class.v8::internal::Worklist.196", %"class.v8::internal::Worklist.198", %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.202" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, i64, [64 x %"class.v8::internal::TransitionArray"] }
%"class.v8::internal::TransitionArray" = type { %"class.v8::internal::WeakFixedArray" }
%"class.v8::internal::WeakFixedArray" = type { %"class.v8::internal::TorqueGeneratedWeakFixedArray" }
%"class.v8::internal::TorqueGeneratedWeakFixedArray" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.188" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.190" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.192" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.194" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.196" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.198" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.200" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.202" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.204", i8, i64 }
%"class.std::__1::vector.204" = type { %"class.std::__1::__vector_base.205" }
%"class.std::__1::__vector_base.205" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.220" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.172"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.220" = type { %"class.std::__1::__hash_table.221" }
%"class.std::__1::__hash_table.221" = type <{ %"class.std::__1::unique_ptr.222", %"class.std::__1::__compressed_pair.232", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.240", [4 x i8] }>
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224", %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"struct.std::__1::__hash_node_base.225"** }
%"struct.std::__1::__hash_node_base.225" = type { %"struct.std::__1::__hash_node_base.225"* }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.std::__1::__bucket_list_deallocator.227" }
%"class.std::__1::__bucket_list_deallocator.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::__hash_node_base.225" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.247" }
%"class.std::__1::unordered_map.247" = type { %"class.std::__1::__hash_table.248" }
%"class.std::__1::__hash_table.248" = type <{ %"class.std::__1::unique_ptr.249", %"class.std::__1::__compressed_pair.259", %"class.std::__1::__compressed_pair.264", %"class.std::__1::__compressed_pair.267", [4 x i8] }>
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251", %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"struct.std::__1::__hash_node_base.252"** }
%"struct.std::__1::__hash_node_base.252" = type { %"struct.std::__1::__hash_node_base.252"* }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.std::__1::__bucket_list_deallocator.254" }
%"class.std::__1::__bucket_list_deallocator.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base.252" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::vector.271" = type { %"class.std::__1::__vector_base.272" }
%"class.std::__1::__vector_base.272" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.278" = type { %"class.std::__1::__vector_base.279" }
%"class.std::__1::__vector_base.279" = type { %"struct.std::__1::pair.280"*, %"struct.std::__1::pair.280"*, %"class.std::__1::__compressed_pair.281" }
%"struct.std::__1::pair.280" = type opaque
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"struct.std::__1::pair.280"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.286", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.271"], [3 x %"class.std::__1::vector.271"], i8, %"struct.std::__1::atomic.141", [6 x i8], %"class.std::__1::vector.271", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.296"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.271", %"class.std::__1::vector.271", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.296" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::HeapObject, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::HeapObject, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::HeapObject, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::HeapObject, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::HeapObject, 64>::Segment" = type { %"class.v8::internal::Worklist<v8::internal::HeapObject, 64>::Segment"*, i64, [64 x %"class.v8::internal::HeapObject"] }
%"class.v8::internal::Worklist<v8::internal::HeapObject, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.322", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.315"], %"class.std::__1::unique_ptr.286" }
%"class.std::__1::vector.315" = type { %"class.std::__1::__vector_base.316" }
%"class.std::__1::__vector_base.316" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.630", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.634", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.639" }
%"struct.std::__1::atomic.630" = type { %"struct.std::__1::__atomic_base.631" }
%"struct.std::__1::__atomic_base.631" = type { %"struct.std::__1::__cxx_atomic_impl.632" }
%"struct.std::__1::__cxx_atomic_impl.632" = type { %"struct.std::__1::__cxx_atomic_base_impl.633" }
%"struct.std::__1::__cxx_atomic_base_impl.633" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.634" = type { %"struct.std::__1::__atomic_base.635" }
%"struct.std::__1::__atomic_base.635" = type { %"struct.std::__1::__cxx_atomic_impl.636" }
%"struct.std::__1::__cxx_atomic_impl.636" = type { %"struct.std::__1::__cxx_atomic_base_impl.637" }
%"struct.std::__1::__cxx_atomic_base_impl.637" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.639" = type { %"class.std::__1::__hash_table.640" }
%"class.std::__1::__hash_table.640" = type <{ %"class.std::__1::unique_ptr.641", %"class.std::__1::__compressed_pair.651", %"class.std::__1::__compressed_pair.656", %"class.std::__1::__compressed_pair.659", [4 x i8] }>
%"class.std::__1::unique_ptr.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643", %"struct.std::__1::__compressed_pair_elem.645" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"struct.std::__1::__hash_node_base.644"** }
%"struct.std::__1::__hash_node_base.644" = type { %"struct.std::__1::__hash_node_base.644"* }
%"struct.std::__1::__compressed_pair_elem.645" = type { %"class.std::__1::__bucket_list_deallocator.646" }
%"class.std::__1::__bucket_list_deallocator.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.651" = type { %"struct.std::__1::__compressed_pair_elem.652" }
%"struct.std::__1::__compressed_pair_elem.652" = type { %"struct.std::__1::__hash_node_base.644" }
%"class.std::__1::__compressed_pair.656" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.659" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.286", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic", %"struct.std::__1::atomic.141", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.360", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.360" = type { %"class.std::__1::__hash_table.361" }
%"class.std::__1::__hash_table.361" = type <{ %"class.std::__1::unique_ptr.362", %"class.std::__1::__compressed_pair.372", %"class.std::__1::__compressed_pair.377", %"class.std::__1::__compressed_pair.380", [4 x i8] }>
%"class.std::__1::unique_ptr.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364", %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"struct.std::__1::__hash_node_base.365"** }
%"struct.std::__1::__hash_node_base.365" = type { %"struct.std::__1::__hash_node_base.365"* }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"class.std::__1::__bucket_list_deallocator.367" }
%"class.std::__1::__bucket_list_deallocator.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %"struct.std::__1::__hash_node_base.365" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.387" = type { %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type { i8 }
%"class.std::__1::unique_ptr.393" = type { %"class.std::__1::__compressed_pair.394" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.395" }
%"struct.std::__1::__compressed_pair_elem.395" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.396" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type { %"class.v8::internal::Heap"*, [1199 x i64], [1199 x i64], [1199 x i64], [1199 x i64], [1199 x i64], [1199 x [16 x i64]], [1199 x [16 x i64]], i64, i64, i64, i64, i64, i64 }
%"class.std::__1::unique_ptr.415" = type { %"class.std::__1::__compressed_pair.416" }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.417" }
%"struct.std::__1::__compressed_pair_elem.417" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.421" = type { %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.427" = type { %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::EmbedderHeapTracer"*, %"class.v8::internal::DefaultEmbedderRootsHandler", i32, i8, [3 x i8], %"struct.v8::internal::LocalEmbedderHeapTracer::RemoteStatistics", %"struct.v8::WrapperDescriptor", [4 x i8] }>
%"class.v8::EmbedderHeapTracer" = type { i32 (...)**, %"class.v8::Isolate"* }
%"class.v8::internal::DefaultEmbedderRootsHandler" = type { %"class.v8::EmbedderRootsHandler", %"class.v8::EmbedderHeapTracer"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.v8::internal::LocalEmbedderHeapTracer::RemoteStatistics" = type { i64, i64, i64 }
%"struct.v8::WrapperDescriptor" = type <{ i32, i32, i16, [2 x i8] }>
%"class.std::__1::unique_ptr.433" = type { %"class.std::__1::__compressed_pair.434" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.435" }
%"struct.std::__1::__compressed_pair_elem.435" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::IncrementalMarking"*, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.v8::internal::MajorMarkingState", [7 x i8], %"class.std::__1::unordered_map.436", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unordered_map.436" = type { %"class.std::__1::__hash_table.437" }
%"class.std::__1::__hash_table.437" = type <{ %"class.std::__1::unique_ptr.438", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.456", [4 x i8] }>
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440", %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::__hash_node_base.441"** }
%"struct.std::__1::__hash_node_base.441" = type { %"struct.std::__1::__hash_node_base.441"* }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.std::__1::__bucket_list_deallocator.443" }
%"class.std::__1::__bucket_list_deallocator.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::__hash_node_base.441" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::shared_ptr.463" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.482", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.464", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.482" = type { %"struct.std::__1::__atomic_base.483" }
%"struct.std::__1::__atomic_base.483" = type { %"struct.std::__1::__cxx_atomic_impl.484" }
%"struct.std::__1::__cxx_atomic_impl.484" = type { %"struct.std::__1::__cxx_atomic_base_impl.485" }
%"struct.std::__1::__cxx_atomic_base_impl.485" = type { i8* }
%"class.v8::CppHeap" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.486" = type { %"class.std::__1::__hash_table.487" }
%"class.std::__1::__hash_table.487" = type <{ %"class.std::__1::unique_ptr.488", %"class.std::__1::__compressed_pair.498", %"class.std::__1::__compressed_pair.503", %"class.std::__1::__compressed_pair.506", [4 x i8] }>
%"class.std::__1::unique_ptr.488" = type { %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.490", %"struct.std::__1::__compressed_pair_elem.492" }
%"struct.std::__1::__compressed_pair_elem.490" = type { %"struct.std::__1::__hash_node_base.491"** }
%"struct.std::__1::__hash_node_base.491" = type { %"struct.std::__1::__hash_node_base.491"* }
%"struct.std::__1::__compressed_pair_elem.492" = type { %"class.std::__1::__bucket_list_deallocator.493" }
%"class.std::__1::__bucket_list_deallocator.493" = type { %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.499" }
%"struct.std::__1::__compressed_pair_elem.499" = type { %"struct.std::__1::__hash_node_base.491" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.512" = type { %"class.std::__1::__compressed_pair.513" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.514" }
%"struct.std::__1::__compressed_pair_elem.514" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.518" = type { %"class.std::__1::__compressed_pair.519" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type <{ %"class.v8::internal::GlobalSafepoint::Barrier", %"class.v8::internal::Heap"*, %"class.v8::base::Mutex", %"class.v8::internal::LocalHeap"*, i32, [4 x i8] }>
%"class.v8::internal::GlobalSafepoint::Barrier" = type { %"class.v8::base::Mutex", %"class.v8::base::ConditionVariable", %"class.v8::base::ConditionVariable", i8, i32 }
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.526", %"class.std::__1::vector.526" }
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.322" = type { %"class.std::__1::__hash_table.323" }
%"class.std::__1::__hash_table.323" = type <{ %"class.std::__1::unique_ptr.324", %"class.std::__1::__compressed_pair.334", %"class.std::__1::__compressed_pair.339", %"class.std::__1::__compressed_pair.343", [4 x i8] }>
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326", %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"struct.std::__1::__hash_node_base.327"** }
%"struct.std::__1::__hash_node_base.327" = type { %"struct.std::__1::__hash_node_base.327"* }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.std::__1::__bucket_list_deallocator.329" }
%"class.std::__1::__bucket_list_deallocator.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"struct.std::__1::__hash_node_base.327" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.565" = type { %"class.std::__1::__hash_table.566" }
%"class.std::__1::__hash_table.566" = type <{ %"class.std::__1::unique_ptr.567", %"class.std::__1::__compressed_pair.577", %"class.std::__1::__compressed_pair.582", %"class.std::__1::__compressed_pair.585", [4 x i8] }>
%"class.std::__1::unique_ptr.567" = type { %"class.std::__1::__compressed_pair.568" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.569", %"struct.std::__1::__compressed_pair_elem.571" }
%"struct.std::__1::__compressed_pair_elem.569" = type { %"struct.std::__1::__hash_node_base.570"** }
%"struct.std::__1::__hash_node_base.570" = type { %"struct.std::__1::__hash_node_base.570"* }
%"struct.std::__1::__compressed_pair_elem.571" = type { %"class.std::__1::__bucket_list_deallocator.572" }
%"class.std::__1::__bucket_list_deallocator.572" = type { %"class.std::__1::__compressed_pair.573" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.578" }
%"struct.std::__1::__compressed_pair_elem.578" = type { %"struct.std::__1::__hash_node_base.570" }
%"class.std::__1::__compressed_pair.582" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.585" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.539" = type { %"class.std::__1::__hash_table.540" }
%"class.std::__1::__hash_table.540" = type <{ %"class.std::__1::unique_ptr.541", %"class.std::__1::__compressed_pair.551", %"class.std::__1::__compressed_pair.556", %"class.std::__1::__compressed_pair.559", [4 x i8] }>
%"class.std::__1::unique_ptr.541" = type { %"class.std::__1::__compressed_pair.542" }
%"class.std::__1::__compressed_pair.542" = type { %"struct.std::__1::__compressed_pair_elem.543", %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.543" = type { %"struct.std::__1::__hash_node_base.544"** }
%"struct.std::__1::__hash_node_base.544" = type { %"struct.std::__1::__hash_node_base.544"* }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"class.std::__1::__bucket_list_deallocator.546" }
%"class.std::__1::__bucket_list_deallocator.546" = type { %"class.std::__1::__compressed_pair.547" }
%"class.std::__1::__compressed_pair.547" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.552" }
%"struct.std::__1::__compressed_pair_elem.552" = type { %"struct.std::__1::__hash_node_base.544" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.589" = type { %"class.std::__1::__hash_table.590" }
%"class.std::__1::__hash_table.590" = type <{ %"class.std::__1::unique_ptr.591", %"class.std::__1::__compressed_pair.601", %"class.std::__1::__compressed_pair.606", %"class.std::__1::__compressed_pair.611", [4 x i8] }>
%"class.std::__1::unique_ptr.591" = type { %"class.std::__1::__compressed_pair.592" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593", %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"struct.std::__1::__hash_node_base.594"** }
%"struct.std::__1::__hash_node_base.594" = type { %"struct.std::__1::__hash_node_base.594"* }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.std::__1::__bucket_list_deallocator.596" }
%"class.std::__1::__bucket_list_deallocator.596" = type { %"class.std::__1::__compressed_pair.597" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"struct.std::__1::__hash_node_base.594" }
%"class.std::__1::__compressed_pair.606" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.611" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::vector.617" = type { %"class.std::__1::__vector_base.618" }
%"class.std::__1::__vector_base.618" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.619" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.620" }
%"struct.std::__1::__compressed_pair_elem.620" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic", i64, %"struct.std::__1::atomic" }
%"class.std::__1::vector.128" = type { %"class.std::__1::__vector_base.129" }
%"class.std::__1::__vector_base.129" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.130" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.526" = type { %"class.std::__1::__vector_base.527" }
%"class.std::__1::__vector_base.527" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.528" }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.529" }
%"struct.std::__1::__compressed_pair_elem.529" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::RuntimeCallTimerScope" = type { %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer" }
%"class.v8::internal::RuntimeCallTimer" = type { %"class.v8::internal::RuntimeCallCounter"*, %"class.v8::base::AtomicValue", %"class.v8::base::TimeTicks", %"class.v8::base::TimeDelta" }
%"class.std::__1::unique_ptr.1200" = type { %"class.std::__1::__compressed_pair.1201" }
%"class.std::__1::__compressed_pair.1201" = type { %"struct.std::__1::__compressed_pair_elem.1202" }
%"struct.std::__1::__compressed_pair_elem.1202" = type { %"class.v8::ConvertableToTraceFormat"* }
%"class.v8::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.v8::internal::tracing::ScopedTracer" = type { %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data" }
%"struct.v8::internal::tracing::ScopedTracer::Data" = type { i8*, i8*, i64 }
%"class.v8::internal::GCTracer::Scope" = type { %"class.v8::internal::GCTracer"*, i32, i32, double, %"class.v8::internal::RuntimeCallTimer", %"class.v8::internal::RuntimeCallStats"*, %"class.v8::base::Optional.1159" }
%"class.v8::base::Optional.1159" = type { %"class.v8::base::internal::OptionalBase.1160" }
%"class.v8::base::internal::OptionalBase.1160" = type { %"struct.v8::base::internal::OptionalStorage.1161" }
%"struct.v8::base::internal::OptionalStorage.1161" = type { %"struct.v8::base::internal::OptionalStorageBase.1162" }
%"struct.v8::base::internal::OptionalStorageBase.1162" = type { i8, %union.anon.1163 }
%union.anon.1163 = type { %"class.v8::internal::WorkerThreadRuntimeCallStatsScope" }
%"class.v8::internal::WorkerThreadRuntimeCallStatsScope" = type { %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::TracingController" = type { i32 (...)** }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::tuple.1207" = type { i8 }
%"class.v8::internal::IncrementalMarkingRootMarkingVisitor" = type { %"class.v8::internal::RootVisitor", %"class.v8::internal::Heap"* }
%"class.v8::internal::RootVisitor" = type { i32 (...)** }
%"class.std::__1::vector.1166" = type { %"class.std::__1::__vector_base.1167" }
%"class.std::__1::__vector_base.1167" = type { %"class.v8::internal::WeakArrayList"*, %"class.v8::internal::WeakArrayList"*, %"class.std::__1::__compressed_pair.1168" }
%"class.v8::internal::WeakArrayList" = type { %"class.v8::internal::TorqueGeneratedWeakArrayList" }
%"class.v8::internal::TorqueGeneratedWeakArrayList" = type { %"class.v8::internal::HeapObject" }
%"class.std::__1::__compressed_pair.1168" = type { %"struct.std::__1::__compressed_pair_elem.1169" }
%"struct.std::__1::__compressed_pair_elem.1169" = type { %"class.v8::internal::WeakArrayList"* }
%"class.v8::internal::LocalEmbedderHeapTracer::ProcessingScope" = type { %"class.v8::internal::LocalEmbedderHeapTracer"*, %"struct.v8::WrapperDescriptor", %"class.std::__1::vector.1175" }
%"class.std::__1::vector.1175" = type { %"class.std::__1::__vector_base.1176" }
%"class.std::__1::__vector_base.1176" = type { %"struct.std::__1::pair.1177"*, %"struct.std::__1::pair.1177"*, %"class.std::__1::__compressed_pair.1178" }
%"struct.std::__1::pair.1177" = type { i8*, i8* }
%"class.std::__1::__compressed_pair.1178" = type { %"struct.std::__1::__compressed_pair_elem.1179" }
%"struct.std::__1::__compressed_pair_elem.1179" = type { %"struct.std::__1::pair.1177"* }
%"class.v8::internal::SpaceIterator" = type <{ i32 (...)**, %"class.v8::internal::Heap"*, i32, [4 x i8] }>
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base.644", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.1183" }
%"struct.std::__1::pair.1183" = type { %"class.v8::internal::MemoryChunk"*, i64 }

$_ZN2v88internal11RootVisitorD2Ev = comdat any

$_ZN2v88internal18AllocationObserverD2Ev = comdat any

$_ZN2v88internal18IncrementalMarking8ObserverD0Ev = comdat any

$_ZN2v88internal18AllocationObserver15GetNextStepSizeEv = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkElEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkElEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkElEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZN2v88internal36IncrementalMarkingRootMarkingVisitorD0Ev = comdat any

$_ZN2v88internal36IncrementalMarkingRootMarkingVisitor17VisitRootPointersENS0_4RootEPKcNS0_14FullObjectSlotES5_ = comdat any

$_ZN2v88internal36IncrementalMarkingRootMarkingVisitor16VisitRootPointerENS0_4RootEPKcNS0_14FullObjectSlotE = comdat any

$_ZN2v88internal11RootVisitor17VisitRootPointersENS0_4RootEPKcNS0_27OffHeapCompressedObjectSlotES5_ = comdat any

$_ZN2v88internal11RootVisitor11SynchronizeENS0_22VisitorSynchronization7SyncTagE = comdat any

$_ZN2v88internal36IncrementalMarkingRootMarkingVisitor19MarkObjectByPointerENS0_14FullObjectSlotE = comdat any

$_ZTVN2v88internal36IncrementalMarkingRootMarkingVisitorE = comdat any

@_ZZN2v88internal18IncrementalMarking40MarkBlackAndVisitObjectDueToLayoutChangeENS0_10HeapObjectEE27trace_event_unique_atomic61 = internal global i64 0, align 8
@.str = private unnamed_addr constant [3 x i8] c"v8\00", align 1
@.str.1 = private unnamed_addr constant [36 x i8] c"V8.GCIncrementalMarkingLayoutChange\00", align 1
@_ZZN2v88internal18IncrementalMarking40MarkBlackAndVisitObjectDueToLayoutChangeENS0_10HeapObjectEE27trace_event_unique_atomic62 = internal global i64 0, align 8
@.str.2 = private unnamed_addr constant [44 x i8] c"devtools.timeline,disabled-by-default-v8.gc\00", align 1
@_ZN2v88internal24FLAG_incremental_markingE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal30FLAG_trace_incremental_markingE = external local_unnamed_addr global i8, align 1
@.str.3 = private unnamed_addr constant [109 x i8] c"[IncrementalMarking] Start (%s): (size/limit/slack) v8: %zuMB / %zuMB / %zuMB global: %zuMB / %zuMB / %zuMB\0A\00", align 1
@_ZZN2v88internal18IncrementalMarking5StartENS0_23GarbageCollectionReasonEE28trace_event_unique_atomic192 = internal global i64 0, align 8
@.str.4 = private unnamed_addr constant [29 x i8] c"V8.GCIncrementalMarkingStart\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"epoch\00", align 1
@_ZZN2v88internal18IncrementalMarking5StartENS0_23GarbageCollectionReasonEE28trace_event_unique_atomic194 = internal global i64 0, align 8
@.str.6 = private unnamed_addr constant [49 x i8] c"[IncrementalMarking] Start delayed - serializer\0A\00", align 1
@.str.7 = private unnamed_addr constant [36 x i8] c"[IncrementalMarking] Start marking\0A\00", align 1
@_ZN2v88internal18FLAG_never_compactE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal23FLAG_concurrent_markingE = external local_unnamed_addr global i8, align 1
@.str.8 = private unnamed_addr constant [30 x i8] c"[IncrementalMarking] Running\0A\00", align 1
@_ZZN2v88internal18IncrementalMarking12StartMarkingEvE28trace_event_unique_atomic259 = internal global i64 0, align 8
@.str.9 = private unnamed_addr constant [47 x i8] c"[IncrementalMarking] Black allocation started\0A\00", align 1
@.str.10 = private unnamed_addr constant [46 x i8] c"[IncrementalMarking] Black allocation paused\0A\00", align 1
@.str.11 = private unnamed_addr constant [48 x i8] c"[IncrementalMarking] Black allocation finished\0A\00", align 1
@_ZN2v88internal25FLAG_retain_maps_for_n_gcE = external local_unnamed_addr global i32, align 4
@_ZN2v88internal25FLAG_track_retaining_pathE = external local_unnamed_addr global i8, align 1
@_ZZN2v88internal18IncrementalMarking21FinalizeIncrementallyEvE28trace_event_unique_atomic397 = internal global i64 0, align 8
@.str.12 = private unnamed_addr constant [60 x i8] c"[IncrementalMarking] Finalize incrementally spent %.1f ms.\0A\00", align 1
@_ZZN2v88internal18IncrementalMarking12EmbedderStepEdPdE28trace_event_unique_atomic526 = internal global i64 0, align 8
@.str.13 = private unnamed_addr constant [28 x i8] c"[IncrementalMarking] Hurry\0A\00", align 1
@.str.14 = private unnamed_addr constant [53 x i8] c"[IncrementalMarking] Complete (hurry), spent %d ms.\0A\00", align 1
@.str.15 = private unnamed_addr constant [80 x i8] c"[IncrementalMarking] Stopping: old generation %dMB, limit %dMB, overshoot %dMB\0A\00", align 1
@.str.16 = private unnamed_addr constant [70 x i8] c"[IncrementalMarking] requesting finalization of incremental marking.\0A\00", align 1
@.str.17 = private unnamed_addr constant [98 x i8] c"[IncrementalMarking] Not delaying marking completion. time to task: %fms allowed overshoot: %fms\0A\00", align 1
@.str.18 = private unnamed_addr constant [94 x i8] c"[IncrementalMarking] Delaying GC via stack guard. time to task: %fms allowed overshoot: %fms\0A\00", align 1
@.str.19 = private unnamed_addr constant [67 x i8] c"[IncrementalMarking] Delaying GC via stack guard. time left: %fms\0A\00", align 1
@.str.20 = private unnamed_addr constant [41 x i8] c"[IncrementalMarking] Complete (normal).\0A\00", align 1
@_ZN2v88internal33FLAG_incremental_marking_wrappersE = external local_unnamed_addr global i8, align 1
@.str.21 = private unnamed_addr constant [46 x i8] c"[IncrementalMarking] Fast-forwarded schedule\0A\00", align 1
@.str.22 = private unnamed_addr constant [73 x i8] c"[IncrementalMarking] Scheduled %zuKB to mark based on time delta %.1fms\0A\00", align 1
@_ZZN2v88internal18IncrementalMarking19AdvanceWithDeadlineEdNS1_16CompletionActionENS0_10StepOriginEE28trace_event_unique_atomic781 = internal global i64 0, align 8
@.str.23 = private unnamed_addr constant [24 x i8] c"V8.GCIncrementalMarking\00", align 1
@_ZZN2v88internal18IncrementalMarking19AdvanceWithDeadlineEdNS1_16CompletionActionENS0_10StepOriginEE28trace_event_unique_atomic783 = internal global i64 0, align 8
@.str.24 = private unnamed_addr constant [101 x i8] c"[IncrementalMarking] Scheduled %zuKB to mark based on allocation (progress=%zuKB, allocation=%zuKB)\0A\00", align 1
@.str.25 = private unnamed_addr constant [57 x i8] c"[IncrementalMarking] Marked %zuKB on background threads\0A\00", align 1
@.str.26 = private unnamed_addr constant [54 x i8] c"[IncrementalMarking] Marker is %zuKB behind schedule\0A\00", align 1
@.str.27 = private unnamed_addr constant [56 x i8] c"[IncrementalMarking] Marker is %zuKB ahead of schedule\0A\00", align 1
@_ZZN2v88internal18IncrementalMarking19AdvanceOnAllocationEvE28trace_event_unique_atomic886 = internal global i64 0, align 8
@_ZZN2v88internal18IncrementalMarking19AdvanceOnAllocationEvE28trace_event_unique_atomic888 = internal global i64 0, align 8
@.str.28 = private unnamed_addr constant [45 x i8] c"[IncrementalMarking] Marking speed %.fKB/ms\0A\00", align 1
@.str.29 = private unnamed_addr constant [79 x i8] c"[IncrementalMarking] Step %s V8: %zuKB (%zuKB), embedder: %fms (%fms) in %.1f\0A\00", align 1
@.str.30 = private unnamed_addr constant [6 x i8] c"in v8\00", align 1
@.str.31 = private unnamed_addr constant [8 x i8] c"in task\00", align 1
@_ZTVN2v88internal18IncrementalMarking8ObserverE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::AllocationObserver"*)* @_ZN2v88internal18AllocationObserverD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::IncrementalMarking::Observer"*)* @_ZN2v88internal18IncrementalMarking8ObserverD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::IncrementalMarking::Observer"*, i32, i64, i64)* @_ZN2v88internal18IncrementalMarking8Observer4StepEimm to i8*), i8* bitcast (i64 (%"class.v8::internal::AllocationObserver"*)* @_ZN2v88internal18AllocationObserver15GetNextStepSizeEv to i8*)] }, align 8
@_ZN2v88internal12TracingFlags13runtime_statsE = external local_unnamed_addr global %"struct.std::__1::atomic.1190", align 4
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZTVN2v88internal36IncrementalMarkingRootMarkingVisitorE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::RootVisitor"*)* @_ZN2v88internal11RootVisitorD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::IncrementalMarkingRootMarkingVisitor"*)* @_ZN2v88internal36IncrementalMarkingRootMarkingVisitorD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::IncrementalMarkingRootMarkingVisitor"*, i32, i8*, i64, i64)* @_ZN2v88internal36IncrementalMarkingRootMarkingVisitor17VisitRootPointersENS0_4RootEPKcNS0_14FullObjectSlotES5_ to i8*), i8* bitcast (void (%"class.v8::internal::IncrementalMarkingRootMarkingVisitor"*, i32, i8*, i64)* @_ZN2v88internal36IncrementalMarkingRootMarkingVisitor16VisitRootPointerENS0_4RootEPKcNS0_14FullObjectSlotE to i8*), i8* bitcast (void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)* @_ZN2v88internal11RootVisitor17VisitRootPointersENS0_4RootEPKcNS0_27OffHeapCompressedObjectSlotES5_ to i8*), i8* bitcast (void (%"class.v8::internal::RootVisitor"*, i32)* @_ZN2v88internal11RootVisitor11SynchronizeENS0_22VisitorSynchronization7SyncTagE to i8*)] }, comdat, align 8
@.str.33 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = external local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"*, align 8

@_ZN2v88internal18IncrementalMarkingC1EPNS0_4HeapEPNS0_11WeakObjectsE = hidden unnamed_addr alias void (%"class.v8::internal::IncrementalMarking"*, %"class.v8::internal::Heap"*, %"class.v8::internal::WeakObjects"*), void (%"class.v8::internal::IncrementalMarking"*, %"class.v8::internal::Heap"*, %"class.v8::internal::WeakObjects"*)* @_ZN2v88internal18IncrementalMarkingC2EPNS0_4HeapEPNS0_11WeakObjectsE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18IncrementalMarking8Observer4StepEimm(%"class.v8::internal::IncrementalMarking::Observer"* nocapture readonly, i32, i64, i64) unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = getelementptr inbounds %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer"* %0, i64 0, i32 1
  %7 = bitcast %"class.v8::internal::IncrementalMarking"** %6 to i64**
  %8 = load i64*, i64** %7, align 8
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, -41416
  %11 = inttoptr i64 %10 to %"class.v8::internal::Isolate"*
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 9, i32 22
  %13 = load i32, i32* %12, align 8
  store i32 1, i32* %12, align 8
  %14 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 40, i1 false) #13
  %15 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1190", %"struct.std::__1::atomic.1190"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %23, label %17, !prof !2

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %19 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 14, i32 0
  %21 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %21, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %22, %"class.v8::internal::RuntimeCallStats"** %18, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %22, %"class.v8::internal::RuntimeCallTimer"* %19, i32 155) #13
  br label %23

23:                                               ; preds = %4, %17
  %24 = load %"class.v8::internal::IncrementalMarking"*, %"class.v8::internal::IncrementalMarking"** %6, align 8
  call void @_ZN2v88internal18IncrementalMarking19AdvanceOnAllocationEv(%"class.v8::internal::IncrementalMarking"* %24)
  %25 = load %"class.v8::internal::IncrementalMarking"*, %"class.v8::internal::IncrementalMarking"** %6, align 8
  call void @_ZN2v88internal18IncrementalMarking20EnsureBlackAllocatedEmm(%"class.v8::internal::IncrementalMarking"* %25, i64 %2, i64 %3)
  %26 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %27 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %26, align 8
  %28 = icmp eq %"class.v8::internal::RuntimeCallStats"* %27, null
  br i1 %28, label %31, label %29, !prof !2

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %27, %"class.v8::internal::RuntimeCallTimer"* %30) #13
  br label %31

31:                                               ; preds = %23, %29
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #13
  store i32 %13, i32* %12, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18IncrementalMarking19AdvanceOnAllocationEv(%"class.v8::internal::IncrementalMarking"*) local_unnamed_addr #0 align 2 {
  %2 = alloca [2 x %"class.std::__1::unique_ptr.1200"], align 16
  %3 = alloca i8*, align 8
  %4 = alloca i8, align 1
  %5 = alloca i64, align 8
  %6 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %7 = alloca %"class.v8::internal::GCTracer::Scope", align 8
  %8 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %9 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 0
  %10 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %10, i64 0, i32 42, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = icmp ne i32 %12, 0
  %14 = load i8, i8* @_ZN2v88internal24FLAG_incremental_markingE, align 1
  %15 = icmp eq i8 %14, 0
  %16 = or i1 %13, %15
  br i1 %16, label %195, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i8, i8* %18 seq_cst, align 1
  %20 = icmp eq i8 %19, 1
  br i1 %20, label %21, label %195

21:                                               ; preds = %17
  %22 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %9, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %22, i64 0, i32 20, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i64, i64* %23 seq_cst, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %195

26:                                               ; preds = %21
  %27 = bitcast %"class.v8::internal::IncrementalMarking"* %0 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, -41416
  %30 = inttoptr i64 %29 to %"class.v8::internal::Isolate"*
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 14, i32 0
  %32 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %32, i64 0, i32 57
  %34 = bitcast %"class.v8::internal::HistogramTimer"* %33 to %"class.v8::internal::TimedHistogram"*
  %35 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %32, i64 0, i32 57, i32 1
  %36 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %32, i64 0, i32 57, i32 0, i32 0, i32 5
  %37 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %37, i64 0, i32 759
  %39 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %38, align 8
  tail call void @_ZN2v88internal14TimedHistogram5StartEPNS_4base12ElapsedTimerEPNS0_7IsolateE(%"class.v8::internal::TimedHistogram"* %34, %"class.v8::base::ElapsedTimer"* %35, %"class.v8::internal::Isolate"* %39) #13
  %40 = load atomic i64, i64* @_ZZN2v88internal18IncrementalMarking19AdvanceOnAllocationEvE28trace_event_unique_atomic886 monotonic, align 8
  %41 = inttoptr i64 %40 to i8*
  %42 = icmp eq i64 %40, 0
  br i1 %42, label %43, label %51

43:                                               ; preds = %26
  %44 = tail call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %45 = bitcast %"class.v8::TracingController"* %44 to i8* (%"class.v8::TracingController"*, i8*)***
  %46 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %45, align 8
  %47 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %46, i64 2
  %48 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %47, align 8
  %49 = tail call i8* %48(%"class.v8::TracingController"* %44, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0)) #13
  %50 = ptrtoint i8* %49 to i64
  store atomic volatile i64 %50, i64* @_ZZN2v88internal18IncrementalMarking19AdvanceOnAllocationEvE28trace_event_unique_atomic886 monotonic, align 8
  br label %51

51:                                               ; preds = %26, %43
  %52 = phi i8* [ %41, %26 ], [ %49, %43 ]
  %53 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %53) #13
  %54 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %54, align 8
  %55 = load atomic i8, i8* %52 monotonic, align 1
  %56 = and i8 %55, 5
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %89, label %58

58:                                               ; preds = %51
  %59 = bitcast [2 x %"class.std::__1::unique_ptr.1200"]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #13
  %60 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1200"], [2 x %"class.std::__1::unique_ptr.1200"]* %2, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %59, i8 0, i64 16, i1 false) #13
  %61 = tail call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %62 = bitcast %"class.v8::TracingController"* %61 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)***
  %63 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)*** %62, align 8
  %64 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)** %63, i64 3
  %65 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)** %64, align 8
  %66 = call i64 %65(%"class.v8::TracingController"* %61, i8 signext 88, i8* %52, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.23, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1200"* nonnull %60, i32 0) #13
  %67 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1200"], [2 x %"class.std::__1::unique_ptr.1200"]* %2, i64 0, i64 1, i32 0, i32 0, i32 0
  %68 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %67, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %67, align 8
  %69 = icmp eq %"class.v8::ConvertableToTraceFormat"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %58
  %71 = bitcast %"class.v8::ConvertableToTraceFormat"* %68 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %72 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %72, i64 1
  %74 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %73, align 8
  call void %74(%"class.v8::ConvertableToTraceFormat"* nonnull %68) #13
  br label %75

75:                                               ; preds = %70, %58
  %76 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1200"], [2 x %"class.std::__1::unique_ptr.1200"]* %2, i64 0, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %76, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %76, align 16
  %78 = icmp eq %"class.v8::ConvertableToTraceFormat"* %77, null
  br i1 %78, label %84, label %79

79:                                               ; preds = %75
  %80 = bitcast %"class.v8::ConvertableToTraceFormat"* %77 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %81 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %81, i64 1
  %83 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %82, align 8
  call void %83(%"class.v8::ConvertableToTraceFormat"* nonnull %77) #13
  br label %84

84:                                               ; preds = %75, %79
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #13
  %85 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1
  %86 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %85, i64 0, i32 0
  store i8* %52, i8** %86, align 8
  %87 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.23, i64 0, i64 0), i8** %87, align 8
  %88 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  store i64 %66, i64* %88, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %85, %"struct.v8::internal::tracing::ScopedTracer::Data"** %54, align 8
  br label %89

89:                                               ; preds = %51, %84
  %90 = bitcast %"class.v8::internal::GCTracer::Scope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %90) #13
  %91 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %9, align 8
  %92 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %91, i64 0, i32 80, i32 0, i32 0, i32 0
  %93 = load %"class.v8::internal::GCTracer"*, %"class.v8::internal::GCTracer"** %92, align 8
  call void @_ZN2v88internal8GCTracer5ScopeC1EPS1_NS2_7ScopeIdENS0_10ThreadKindE(%"class.v8::internal::GCTracer::Scope"* nonnull %7, %"class.v8::internal::GCTracer"* %93, i32 0, i32 0) #13
  %94 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %9, align 8
  %95 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %94, i64 0, i32 80, i32 0, i32 0, i32 0
  %96 = load %"class.v8::internal::GCTracer"*, %"class.v8::internal::GCTracer"** %95, align 8
  %97 = call i32 @_ZN2v88internal8GCTracer12CurrentEpochENS1_5Scope7ScopeIdE(%"class.v8::internal::GCTracer"* %96, i32 0) #13
  %98 = load atomic i64, i64* @_ZZN2v88internal18IncrementalMarking19AdvanceOnAllocationEvE28trace_event_unique_atomic888 monotonic, align 8
  %99 = inttoptr i64 %98 to i8*
  %100 = icmp eq i64 %98, 0
  br i1 %100, label %101, label %109

101:                                              ; preds = %89
  %102 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %103 = bitcast %"class.v8::TracingController"* %102 to i8* (%"class.v8::TracingController"*, i8*)***
  %104 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %103, align 8
  %105 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %104, i64 2
  %106 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %105, align 8
  %107 = call i8* %106(%"class.v8::TracingController"* %102, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0)) #13
  %108 = ptrtoint i8* %107 to i64
  store atomic volatile i64 %108, i64* @_ZZN2v88internal18IncrementalMarking19AdvanceOnAllocationEvE28trace_event_unique_atomic888 monotonic, align 8
  br label %109

109:                                              ; preds = %89, %101
  %110 = phi i8* [ %99, %89 ], [ %107, %101 ]
  %111 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %111) #13
  %112 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %112, align 8
  %113 = load atomic i8, i8* %110 monotonic, align 1
  %114 = and i8 %113, 5
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %152, label %116

116:                                              ; preds = %109
  %117 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 0) #13
  %118 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i8** %3, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #13
  %119 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #13
  store i8 2, i8* %4, align 1
  %120 = zext i32 %97 to i64
  store i64 %120, i64* %5, align 8
  %121 = bitcast [2 x %"class.std::__1::unique_ptr.1200"]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %121) #13
  %122 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1200"], [2 x %"class.std::__1::unique_ptr.1200"]* %2, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %121, i8 0, i64 16, i1 false) #13
  %123 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %124 = bitcast %"class.v8::TracingController"* %123 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)***
  %125 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)*** %124, align 8
  %126 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)** %125, i64 3
  %127 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)** %126, align 8
  %128 = call i64 %127(%"class.v8::TracingController"* %123, i8 signext 88, i8* %110, i8* %117, i8* null, i64 0, i64 0, i32 1, i8** nonnull %3, i8* nonnull %4, i64* nonnull %5, %"class.std::__1::unique_ptr.1200"* nonnull %122, i32 0) #13
  %129 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1200"], [2 x %"class.std::__1::unique_ptr.1200"]* %2, i64 0, i64 1, i32 0, i32 0, i32 0
  %130 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %129, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %129, align 8
  %131 = icmp eq %"class.v8::ConvertableToTraceFormat"* %130, null
  br i1 %131, label %137, label %132

132:                                              ; preds = %116
  %133 = bitcast %"class.v8::ConvertableToTraceFormat"* %130 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %134 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %133, align 8
  %135 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %134, i64 1
  %136 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %135, align 8
  call void %136(%"class.v8::ConvertableToTraceFormat"* nonnull %130) #13
  br label %137

137:                                              ; preds = %132, %116
  %138 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1200"], [2 x %"class.std::__1::unique_ptr.1200"]* %2, i64 0, i64 0, i32 0, i32 0, i32 0
  %139 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %138, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %138, align 16
  %140 = icmp eq %"class.v8::ConvertableToTraceFormat"* %139, null
  br i1 %140, label %146, label %141

141:                                              ; preds = %137
  %142 = bitcast %"class.v8::ConvertableToTraceFormat"* %139 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %143 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %142, align 8
  %144 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %143, i64 1
  %145 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %144, align 8
  call void %145(%"class.v8::ConvertableToTraceFormat"* nonnull %139) #13
  br label %146

146:                                              ; preds = %137, %141
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %121) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118)
  %147 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 0) #13
  %148 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1
  %149 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %148, i64 0, i32 0
  store i8* %110, i8** %149, align 8
  %150 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 1
  store i8* %147, i8** %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 2
  store i64 %128, i64* %151, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %148, %"struct.v8::internal::tracing::ScopedTracer::Data"** %112, align 8
  br label %152

152:                                              ; preds = %109, %146
  call void @_ZN2v88internal18IncrementalMarking36ScheduleBytesToMarkBasedOnAllocationEv(%"class.v8::internal::IncrementalMarking"* %0)
  %153 = call i32 @_ZN2v88internal18IncrementalMarking4StepEdNS1_16CompletionActionENS0_10StepOriginE(%"class.v8::internal::IncrementalMarking"* %0, double 5.000000e+00, i32 0, i32 0)
  %154 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %112, align 8
  %155 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %154, null
  br i1 %155, label %172, label %156

156:                                              ; preds = %152
  %157 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 0
  %158 = load i8*, i8** %157, align 8
  %159 = load atomic i8, i8* %158 monotonic, align 1
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %172, label %161

161:                                              ; preds = %156
  %162 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %163 = load i8*, i8** %157, align 8
  %164 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 1
  %165 = load i8*, i8** %164, align 8
  %166 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 2
  %167 = load i64, i64* %166, align 8
  %168 = bitcast %"class.v8::TracingController"* %162 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %169 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %168, align 8
  %170 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %169, i64 5
  %171 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %170, align 8
  call void %171(%"class.v8::TracingController"* %162, i8* %163, i8* %165, i64 %167) #13
  br label %172

172:                                              ; preds = %152, %156, %161
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %111) #13
  call void @_ZN2v88internal8GCTracer5ScopeD1Ev(%"class.v8::internal::GCTracer::Scope"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %90) #13
  %173 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %54, align 8
  %174 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %173, null
  br i1 %174, label %191, label %175

175:                                              ; preds = %172
  %176 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 0
  %177 = load i8*, i8** %176, align 8
  %178 = load atomic i8, i8* %177 monotonic, align 1
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %191, label %180

180:                                              ; preds = %175
  %181 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %182 = load i8*, i8** %176, align 8
  %183 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  %184 = load i8*, i8** %183, align 8
  %185 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  %186 = load i64, i64* %185, align 8
  %187 = bitcast %"class.v8::TracingController"* %181 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %188 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %187, align 8
  %189 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %188, i64 5
  %190 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %189, align 8
  call void %190(%"class.v8::TracingController"* %181, i8* %182, i8* %184, i64 %186) #13
  br label %191

191:                                              ; preds = %172, %175, %180
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %53) #13
  %192 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %36, align 8
  %193 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %192, i64 0, i32 759
  %194 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %193, align 8
  call void @_ZN2v88internal14TimedHistogram4StopEPNS_4base12ElapsedTimerEPNS0_7IsolateE(%"class.v8::internal::TimedHistogram"* %34, %"class.v8::base::ElapsedTimer"* %35, %"class.v8::internal::Isolate"* %194) #13
  br label %195

195:                                              ; preds = %21, %1, %17, %191
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18IncrementalMarking20EnsureBlackAllocatedEmm(%"class.v8::internal::IncrementalMarking"* nocapture readonly, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::HeapObject", align 8
  %5 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 14
  %6 = load i8, i8* %5, align 1, !range !3
  %7 = icmp ne i8 %6, 0
  %8 = icmp ne i64 %1, 0
  %9 = and i1 %8, %7
  br i1 %9, label %10, label %93

10:                                               ; preds = %3
  %11 = add i64 %1, 1
  %12 = and i64 %11, -262144
  %13 = or i64 %12, 272
  %14 = sub i64 %11, %12
  %15 = trunc i64 %14 to i32
  %16 = lshr i32 %15, 2
  %17 = and i32 %16, 31
  %18 = shl i32 1, %17
  %19 = inttoptr i64 %13 to i32*
  %20 = lshr i64 %14, 7
  %21 = and i64 %20, 33554431
  %22 = getelementptr inbounds i32, i32* %19, i64 %21
  %23 = load atomic i32, i32* %22 acquire, align 4
  %24 = and i32 %23, %18
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %93

26:                                               ; preds = %10
  %27 = inttoptr i64 %12 to %"class.v8::internal::BasicMemoryChunk"*
  %28 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %27, i64 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = and i64 %29, 24
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %93

32:                                               ; preds = %26
  %33 = tail call zeroext i1 @_ZN2v88internal4Heap13IsLargeObjectENS0_10HeapObjectE(i64 %11) #13
  br i1 %33, label %34, label %89

34:                                               ; preds = %32
  %35 = load atomic i32, i32* %22 monotonic, align 4
  br label %36

36:                                               ; preds = %40, %34
  %37 = phi i32 [ %35, %34 ], [ %43, %40 ]
  %38 = and i32 %37, %18
  %39 = icmp eq i32 %38, %18
  br i1 %39, label %93, label %40

40:                                               ; preds = %36
  %41 = or i32 %37, %18
  %42 = cmpxchg volatile i32* %22, i32 %37, i32 %41 release monotonic
  %43 = extractvalue { i32, i1 } %42, 0
  %44 = extractvalue { i32, i1 } %42, 1
  br i1 %44, label %45, label %36

45:                                               ; preds = %40
  %46 = bitcast %"class.v8::internal::HeapObject"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #13
  %47 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %4, i64 0, i32 0, i32 0, i32 0
  store i64 %11, i64* %47, align 8
  %48 = sub i64 %1, %12
  %49 = trunc i64 %48 to i32
  %50 = lshr i32 %49, 2
  %51 = and i32 %50, 31
  %52 = shl i32 1, %51
  %53 = lshr i64 %48, 7
  %54 = and i64 %53, 33554431
  %55 = getelementptr inbounds i32, i32* %19, i64 %54
  %56 = load atomic i32, i32* %55 acquire, align 4
  %57 = and i32 %56, %52
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %88, label %59

59:                                               ; preds = %45
  %60 = shl i32 %52, 1
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds i32, i32* %55, i64 1
  %63 = select i1 %61, i32 1, i32 %60
  %64 = select i1 %61, i32* %62, i32* %55
  %65 = load atomic i32, i32* %64 monotonic, align 4
  br label %66

66:                                               ; preds = %70, %59
  %67 = phi i32 [ %65, %59 ], [ %73, %70 ]
  %68 = and i32 %67, %63
  %69 = icmp eq i32 %68, %63
  br i1 %69, label %88, label %70

70:                                               ; preds = %66
  %71 = or i32 %67, %63
  %72 = cmpxchg volatile i32* %64, i32 %67, i32 %71 release monotonic
  %73 = extractvalue { i32, i1 } %72, 0
  %74 = extractvalue { i32, i1 } %72, 1
  br i1 %74, label %75, label %66

75:                                               ; preds = %70
  %76 = inttoptr i64 %12 to %"class.v8::internal::MemoryChunk"*
  %77 = load i64, i64* %47, align 8
  %78 = and i64 %77, -4294967296
  %79 = add i64 %77, -1
  %80 = inttoptr i64 %79 to i32*
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = zext i32 %81 to i64
  %83 = or i64 %78, %82
  %84 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %4, i64 %83) #13
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %76, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw add i64* %86, i64 %85 monotonic
  br label %88

88:                                               ; preds = %66, %75, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #13
  br label %93

89:                                               ; preds = %32
  %90 = and i64 %1, -262144
  %91 = inttoptr i64 %90 to %"class.v8::internal::Page"*
  %92 = add i64 %2, %1
  tail call void @_ZN2v88internal4Page15CreateBlackAreaEmm(%"class.v8::internal::Page"* %91, i64 %1, i64 %92) #13
  br label %93

93:                                               ; preds = %36, %26, %88, %10, %89, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18IncrementalMarkingC2EPNS0_4HeapEPNS0_11WeakObjectsE(%"class.v8::internal::IncrementalMarking"*, %"class.v8::internal::Heap"*, %"class.v8::internal::WeakObjects"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 0
  store %"class.v8::internal::Heap"* %1, %"class.v8::internal::Heap"** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %1, i64 0, i32 81, i32 0, i32 0, i32 0
  %7 = bitcast %"class.v8::internal::MarkCompactCollector"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.v8::internal::MarkCompactCollector"** %5 to i64*
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 2
  store %"class.v8::internal::WeakObjects"* %2, %"class.v8::internal::WeakObjects"** %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 12
  %13 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 17, i32 0
  %14 = bitcast double* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 64, i1 false)
  %15 = bitcast i8* %12 to i32*
  store i32 0, i32* %15, align 1
  tail call void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"* %13) #13
  %16 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 17, i32 1
  store double 0.000000e+00, double* %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 17, i32 2
  store i8 0, i8* %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 17, i32 3
  store i8 0, i8* %18, align 1
  %19 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 19, i32 0, i32 0
  %21 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 19, i32 0, i32 1
  store i64 65536, i64* %21, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal18IncrementalMarking8ObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 19, i32 1
  store %"class.v8::internal::IncrementalMarking"* %0, %"class.v8::internal::IncrementalMarking"** %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 20, i32 0, i32 0
  %24 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 20, i32 0, i32 1
  store i64 262144, i64* %24, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal18IncrementalMarking8ObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 20, i32 1
  store %"class.v8::internal::IncrementalMarking"* %0, %"class.v8::internal::IncrementalMarking"** %25, align 8
  %26 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 24
  tail call void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"* %26) #13
  %27 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 25
  %28 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 25, i32 0, i32 3
  %29 = bitcast %"class.std::__1::__compressed_pair.659"* %28 to i32*
  %30 = bitcast %"class.std::__1::unordered_map.639"* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %29, align 4
  %31 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  store atomic i8 0, i8* %31 seq_cst, align 1
  %32 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %4, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %32, i64 0, i32 111
  store i8 0, i8* %33, align 8
  ret void
}

declare void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18IncrementalMarking40MarkBlackAndVisitObjectDueToLayoutChangeENS0_10HeapObjectE(%"class.v8::internal::IncrementalMarking"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca [2 x %"class.std::__1::unique_ptr.1200"], align 16
  %4 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %5 = alloca %"class.v8::internal::GCTracer::Scope", align 8
  %6 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %7 = load atomic i64, i64* @_ZZN2v88internal18IncrementalMarking40MarkBlackAndVisitObjectDueToLayoutChangeENS0_10HeapObjectEE27trace_event_unique_atomic61 monotonic, align 8
  %8 = inttoptr i64 %7 to i8*
  %9 = icmp eq i64 %7, 0
  br i1 %9, label %10, label %18

10:                                               ; preds = %2
  %11 = tail call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %12 = bitcast %"class.v8::TracingController"* %11 to i8* (%"class.v8::TracingController"*, i8*)***
  %13 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %12, align 8
  %14 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %13, i64 2
  %15 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %14, align 8
  %16 = tail call i8* %15(%"class.v8::TracingController"* %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0)) #13
  %17 = ptrtoint i8* %16 to i64
  store atomic volatile i64 %17, i64* @_ZZN2v88internal18IncrementalMarking40MarkBlackAndVisitObjectDueToLayoutChangeENS0_10HeapObjectEE27trace_event_unique_atomic61 monotonic, align 8
  br label %18

18:                                               ; preds = %2, %10
  %19 = phi i8* [ %8, %2 ], [ %16, %10 ]
  %20 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #13
  %21 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %4, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %21, align 8
  %22 = load atomic i8, i8* %19 monotonic, align 1
  %23 = and i8 %22, 5
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %56, label %25

25:                                               ; preds = %18
  %26 = bitcast [2 x %"class.std::__1::unique_ptr.1200"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #13
  %27 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1200"], [2 x %"class.std::__1::unique_ptr.1200"]* %3, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %26, i8 0, i64 16, i1 false) #13
  %28 = tail call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %29 = bitcast %"class.v8::TracingController"* %28 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)***
  %30 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)*** %29, align 8
  %31 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)** %30, i64 3
  %32 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)** %31, align 8
  %33 = call i64 %32(%"class.v8::TracingController"* %28, i8 signext 88, i8* %19, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1200"* nonnull %27, i32 0) #13
  %34 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1200"], [2 x %"class.std::__1::unique_ptr.1200"]* %3, i64 0, i64 1, i32 0, i32 0, i32 0
  %35 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %34, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %34, align 8
  %36 = icmp eq %"class.v8::ConvertableToTraceFormat"* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %25
  %38 = bitcast %"class.v8::ConvertableToTraceFormat"* %35 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %39 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %39, i64 1
  %41 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %40, align 8
  call void %41(%"class.v8::ConvertableToTraceFormat"* nonnull %35) #13
  br label %42

42:                                               ; preds = %37, %25
  %43 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1200"], [2 x %"class.std::__1::unique_ptr.1200"]* %3, i64 0, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %43, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %43, align 16
  %45 = icmp eq %"class.v8::ConvertableToTraceFormat"* %44, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %42
  %47 = bitcast %"class.v8::ConvertableToTraceFormat"* %44 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %48 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %48, i64 1
  %50 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %49, align 8
  call void %50(%"class.v8::ConvertableToTraceFormat"* nonnull %44) #13
  br label %51

51:                                               ; preds = %42, %46
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #13
  %52 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %4, i64 0, i32 1
  %53 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %52, i64 0, i32 0
  store i8* %19, i8** %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %4, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i8** %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %4, i64 0, i32 1, i32 2
  store i64 %33, i64* %55, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %52, %"struct.v8::internal::tracing::ScopedTracer::Data"** %21, align 8
  br label %56

56:                                               ; preds = %18, %51
  %57 = bitcast %"class.v8::internal::GCTracer::Scope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %57) #13
  %58 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 0
  %59 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %59, i64 0, i32 80, i32 0, i32 0, i32 0
  %61 = load %"class.v8::internal::GCTracer"*, %"class.v8::internal::GCTracer"** %60, align 8
  call void @_ZN2v88internal8GCTracer5ScopeC1EPS1_NS2_7ScopeIdENS0_10ThreadKindE(%"class.v8::internal::GCTracer::Scope"* nonnull %5, %"class.v8::internal::GCTracer"* %61, i32 7, i32 0) #13
  %62 = load atomic i64, i64* @_ZZN2v88internal18IncrementalMarking40MarkBlackAndVisitObjectDueToLayoutChangeENS0_10HeapObjectEE27trace_event_unique_atomic62 monotonic, align 8
  %63 = inttoptr i64 %62 to i8*
  %64 = icmp eq i64 %62, 0
  br i1 %64, label %65, label %73

65:                                               ; preds = %56
  %66 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %67 = bitcast %"class.v8::TracingController"* %66 to i8* (%"class.v8::TracingController"*, i8*)***
  %68 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %67, align 8
  %69 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %68, i64 2
  %70 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %69, align 8
  %71 = call i8* %70(%"class.v8::TracingController"* %66, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0)) #13
  %72 = ptrtoint i8* %71 to i64
  store atomic volatile i64 %72, i64* @_ZZN2v88internal18IncrementalMarking40MarkBlackAndVisitObjectDueToLayoutChangeENS0_10HeapObjectEE27trace_event_unique_atomic62 monotonic, align 8
  br label %73

73:                                               ; preds = %56, %65
  %74 = phi i8* [ %63, %56 ], [ %71, %65 ]
  %75 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %75) #13
  %76 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %76, align 8
  %77 = load atomic i8, i8* %74 monotonic, align 1
  %78 = and i8 %77, 5
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %113, label %80

80:                                               ; preds = %73
  %81 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 7) #13
  %82 = bitcast [2 x %"class.std::__1::unique_ptr.1200"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %82) #13
  %83 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1200"], [2 x %"class.std::__1::unique_ptr.1200"]* %3, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %82, i8 0, i64 16, i1 false) #13
  %84 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %85 = bitcast %"class.v8::TracingController"* %84 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)***
  %86 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)*** %85, align 8
  %87 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)** %86, i64 3
  %88 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)** %87, align 8
  %89 = call i64 %88(%"class.v8::TracingController"* %84, i8 signext 88, i8* %74, i8* %81, i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1200"* nonnull %83, i32 0) #13
  %90 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1200"], [2 x %"class.std::__1::unique_ptr.1200"]* %3, i64 0, i64 1, i32 0, i32 0, i32 0
  %91 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %90, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %90, align 8
  %92 = icmp eq %"class.v8::ConvertableToTraceFormat"* %91, null
  br i1 %92, label %98, label %93

93:                                               ; preds = %80
  %94 = bitcast %"class.v8::ConvertableToTraceFormat"* %91 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %95 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %95, i64 1
  %97 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %96, align 8
  call void %97(%"class.v8::ConvertableToTraceFormat"* nonnull %91) #13
  br label %98

98:                                               ; preds = %93, %80
  %99 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1200"], [2 x %"class.std::__1::unique_ptr.1200"]* %3, i64 0, i64 0, i32 0, i32 0, i32 0
  %100 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %99, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %99, align 16
  %101 = icmp eq %"class.v8::ConvertableToTraceFormat"* %100, null
  br i1 %101, label %107, label %102

102:                                              ; preds = %98
  %103 = bitcast %"class.v8::ConvertableToTraceFormat"* %100 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %104 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %103, align 8
  %105 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %104, i64 1
  %106 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %105, align 8
  call void %106(%"class.v8::ConvertableToTraceFormat"* nonnull %100) #13
  br label %107

107:                                              ; preds = %98, %102
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %82) #13
  %108 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 7) #13
  %109 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1
  %110 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %109, i64 0, i32 0
  store i8* %74, i8** %110, align 8
  %111 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  store i8* %108, i8** %111, align 8
  %112 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  store i64 %89, i64* %112, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %109, %"struct.v8::internal::tracing::ScopedTracer::Data"** %76, align 8
  br label %113

113:                                              ; preds = %73, %107
  %114 = and i64 %1, -262144
  %115 = or i64 %114, 272
  %116 = sub i64 %1, %114
  %117 = trunc i64 %116 to i32
  %118 = lshr i32 %117, 2
  %119 = and i32 %118, 31
  %120 = shl i32 1, %119
  %121 = inttoptr i64 %115 to i32*
  %122 = lshr i64 %116, 7
  %123 = and i64 %122, 33554431
  %124 = getelementptr inbounds i32, i32* %121, i64 %123
  %125 = load atomic i32, i32* %124 monotonic, align 4
  br label %126

126:                                              ; preds = %130, %113
  %127 = phi i32 [ %125, %113 ], [ %133, %130 ]
  %128 = and i32 %127, %120
  %129 = icmp eq i32 %128, %120
  br i1 %129, label %135, label %130

130:                                              ; preds = %126
  %131 = or i32 %127, %120
  %132 = cmpxchg volatile i32* %124, i32 %127, i32 %131 release monotonic
  %133 = extractvalue { i32, i1 } %132, 0
  %134 = extractvalue { i32, i1 } %132, 1
  br i1 %134, label %135, label %126

135:                                              ; preds = %126, %130
  %136 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 1
  %137 = load %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::MarkCompactCollector"** %136, align 8
  call void @_ZN2v88internal20MarkCompactCollector11VisitObjectENS0_10HeapObjectE(%"class.v8::internal::MarkCompactCollector"* %137, i64 %1) #13
  %138 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %76, align 8
  %139 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %138, null
  br i1 %139, label %156, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 0
  %142 = load i8*, i8** %141, align 8
  %143 = load atomic i8, i8* %142 monotonic, align 1
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %156, label %145

145:                                              ; preds = %140
  %146 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %147 = load i8*, i8** %141, align 8
  %148 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  %149 = load i8*, i8** %148, align 8
  %150 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.v8::TracingController"* %146 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %153 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %152, align 8
  %154 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %153, i64 5
  %155 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %154, align 8
  call void %155(%"class.v8::TracingController"* %146, i8* %147, i8* %149, i64 %151) #13
  br label %156

156:                                              ; preds = %135, %140, %145
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %75) #13
  call void @_ZN2v88internal8GCTracer5ScopeD1Ev(%"class.v8::internal::GCTracer::Scope"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %57) #13
  %157 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %21, align 8
  %158 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %157, null
  br i1 %158, label %175, label %159

159:                                              ; preds = %156
  %160 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %4, i64 0, i32 1, i32 0
  %161 = load i8*, i8** %160, align 8
  %162 = load atomic i8, i8* %161 monotonic, align 1
  %163 = icmp eq i8 %162, 0
  br i1 %163, label %175, label %164

164:                                              ; preds = %159
  %165 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %166 = load i8*, i8** %160, align 8
  %167 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %4, i64 0, i32 1, i32 1
  %168 = load i8*, i8** %167, align 8
  %169 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %4, i64 0, i32 1, i32 2
  %170 = load i64, i64* %169, align 8
  %171 = bitcast %"class.v8::TracingController"* %165 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %172 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %171, align 8
  %173 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %172, i64 5
  %174 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %173, align 8
  call void %174(%"class.v8::TracingController"* %165, i8* %166, i8* %168, i64 %170) #13
  br label %175

175:                                              ; preds = %156, %159, %164
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #13
  ret void
}

declare %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() local_unnamed_addr #2

declare void @_ZN2v88internal8GCTracer5ScopeC1EPS1_NS2_7ScopeIdENS0_10ThreadKindE(%"class.v8::internal::GCTracer::Scope"*, %"class.v8::internal::GCTracer"*, i32, i32) unnamed_addr #2

declare i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32) local_unnamed_addr #2

declare void @_ZN2v88internal20MarkCompactCollector11VisitObjectENS0_10HeapObjectE(%"class.v8::internal::MarkCompactCollector"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88internal8GCTracer5ScopeD1Ev(%"class.v8::internal::GCTracer::Scope"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18IncrementalMarking19MarkBlackBackgroundENS0_10HeapObjectEi(%"class.v8::internal::IncrementalMarking"*, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple.1207", align 1
  %6 = alloca %"class.v8::internal::MemoryChunk"*, align 8
  %7 = and i64 %1, -262144
  %8 = or i64 %7, 272
  %9 = sub i64 %1, %7
  %10 = trunc i64 %9 to i32
  %11 = lshr i32 %10, 2
  %12 = and i32 %11, 31
  %13 = shl i32 1, %12
  %14 = inttoptr i64 %8 to i32*
  %15 = lshr i64 %9, 7
  %16 = and i64 %15, 33554431
  %17 = getelementptr inbounds i32, i32* %14, i64 %16
  %18 = load atomic i32, i32* %17 monotonic, align 4
  br label %19

19:                                               ; preds = %23, %3
  %20 = phi i32 [ %18, %3 ], [ %26, %23 ]
  %21 = and i32 %20, %13
  %22 = icmp eq i32 %21, %13
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = or i32 %20, %13
  %25 = cmpxchg volatile i32* %17, i32 %20, i32 %24 release monotonic
  %26 = extractvalue { i32, i1 } %25, 0
  %27 = extractvalue { i32, i1 } %25, 1
  br i1 %27, label %28, label %19

28:                                               ; preds = %23, %19
  %29 = shl i32 %13, 1
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds i32, i32* %17, i64 1
  %32 = select i1 %30, i32 1, i32 %29
  %33 = select i1 %30, i32* %31, i32* %17
  %34 = load atomic i32, i32* %33 monotonic, align 4
  br label %35

35:                                               ; preds = %39, %28
  %36 = phi i32 [ %34, %28 ], [ %42, %39 ]
  %37 = and i32 %36, %32
  %38 = icmp eq i32 %37, %32
  br i1 %38, label %44, label %39

39:                                               ; preds = %35
  %40 = or i32 %36, %32
  %41 = cmpxchg volatile i32* %33, i32 %36, i32 %40 release monotonic
  %42 = extractvalue { i32, i1 } %41, 0
  %43 = extractvalue { i32, i1 } %41, 1
  br i1 %43, label %44, label %35

44:                                               ; preds = %35, %39
  %45 = inttoptr i64 %7 to %"class.v8::internal::MemoryChunk"*
  %46 = sext i32 %2 to i64
  %47 = bitcast %"class.v8::internal::MemoryChunk"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47)
  store %"class.v8::internal::MemoryChunk"* %45, %"class.v8::internal::MemoryChunk"** %6, align 8
  %48 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 24
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %48) #13
  %49 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 25, i32 0
  %50 = bitcast %"class.std::__1::tuple"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #13
  %51 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::MemoryChunk"** %6, %"class.v8::internal::MemoryChunk"*** %51, align 8
  %52 = getelementptr inbounds %"class.std::__1::tuple.1207", %"class.std::__1::tuple.1207"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %52) #13
  %53 = call { %"struct.std::__1::__hash_node_base.644"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkElEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.640"* %49, %"class.v8::internal::MemoryChunk"** nonnull dereferenceable(8) %6, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.1207"* nonnull dereferenceable(1) %5) #13
  %54 = extractvalue { %"struct.std::__1::__hash_node_base.644"*, i8 } %53, 0
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644", %"struct.std::__1::__hash_node_base.644"* %54, i64 3
  %56 = bitcast %"struct.std::__1::__hash_node_base.644"* %55 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %52) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #13
  %57 = load i64, i64* %56, align 8
  %58 = add nsw i64 %57, %46
  store i64 %58, i64* %56, align 8
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %48) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18IncrementalMarking18NotifyLeftTrimmingENS0_10HeapObjectES2_(%"class.v8::internal::IncrementalMarking"* nocapture readonly, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = and i64 %2, -262144
  %5 = or i64 %4, 272
  %6 = sub i64 %2, %4
  %7 = trunc i64 %6 to i32
  %8 = lshr i32 %7, 2
  %9 = and i32 %8, 31
  %10 = shl i32 1, %9
  %11 = inttoptr i64 %5 to i32*
  %12 = lshr i64 %6, 7
  %13 = and i64 %12, 33554431
  %14 = getelementptr inbounds i32, i32* %11, i64 %13
  %15 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 14
  %16 = load i8, i8* %15, align 1, !range !3
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %31, label %18

18:                                               ; preds = %3
  %19 = load atomic i32, i32* %14 acquire, align 4
  %20 = and i32 %19, %10
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %31, label %22

22:                                               ; preds = %18
  %23 = shl i32 %10, 1
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds i32, i32* %14, i64 1
  %26 = select i1 %24, i32 1, i32 %23
  %27 = select i1 %24, i32* %25, i32* %14
  %28 = load atomic i32, i32* %27 acquire, align 4
  %29 = and i32 %28, %26
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %78

31:                                               ; preds = %22, %3, %18
  tail call void @_ZN2v88internal18IncrementalMarking40MarkBlackAndVisitObjectDueToLayoutChangeENS0_10HeapObjectE(%"class.v8::internal::IncrementalMarking"* %0, i64 %1)
  %32 = add i64 %1, 3
  %33 = add i64 %2, -1
  %34 = icmp eq i64 %32, %33
  br i1 %34, label %35, label %51

35:                                               ; preds = %31
  %36 = shl i32 %10, 1
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds i32, i32* %14, i64 1
  %39 = select i1 %37, i32 1, i32 %36
  %40 = select i1 %37, i32* %38, i32* %14
  %41 = load atomic i32, i32* %40 monotonic, align 4
  br label %42

42:                                               ; preds = %46, %35
  %43 = phi i32 [ %41, %35 ], [ %49, %46 ]
  %44 = and i32 %43, %39
  %45 = icmp eq i32 %44, %39
  br i1 %45, label %78, label %46

46:                                               ; preds = %42
  %47 = or i32 %43, %39
  %48 = cmpxchg volatile i32* %40, i32 %43, i32 %47 release monotonic
  %49 = extractvalue { i32, i1 } %48, 0
  %50 = extractvalue { i32, i1 } %48, 1
  br i1 %50, label %78, label %42

51:                                               ; preds = %31
  %52 = load atomic i32, i32* %14 monotonic, align 4
  br label %53

53:                                               ; preds = %57, %51
  %54 = phi i32 [ %52, %51 ], [ %60, %57 ]
  %55 = and i32 %54, %10
  %56 = icmp eq i32 %55, %10
  br i1 %56, label %78, label %57

57:                                               ; preds = %53
  %58 = or i32 %54, %10
  %59 = cmpxchg volatile i32* %14, i32 %54, i32 %58 release monotonic
  %60 = extractvalue { i32, i1 } %59, 0
  %61 = extractvalue { i32, i1 } %59, 1
  br i1 %61, label %62, label %53

62:                                               ; preds = %57
  %63 = shl i32 %10, 1
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds i32, i32* %14, i64 1
  %66 = select i1 %64, i32 1, i32 %63
  %67 = select i1 %64, i32* %65, i32* %14
  %68 = load atomic i32, i32* %67 monotonic, align 4
  br label %69

69:                                               ; preds = %73, %62
  %70 = phi i32 [ %68, %62 ], [ %76, %73 ]
  %71 = and i32 %70, %66
  %72 = icmp eq i32 %71, %66
  br i1 %72, label %78, label %73

73:                                               ; preds = %69
  %74 = or i32 %70, %66
  %75 = cmpxchg volatile i32* %67, i32 %70, i32 %74 release monotonic
  %76 = extractvalue { i32, i1 } %75, 0
  %77 = extractvalue { i32, i1 } %75, 1
  br i1 %77, label %78, label %69

78:                                               ; preds = %53, %73, %69, %46, %42, %22
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal18IncrementalMarking12WasActivatedEv(%"class.v8::internal::IncrementalMarking"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 13
  %3 = load i8, i8* %2, align 2, !range !3
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal18IncrementalMarking14CanBeActivatedEv(%"class.v8::internal::IncrementalMarking"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = load i8, i8* @_ZN2v88internal24FLAG_incremental_markingE, align 1, !range !3
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %24, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %6, i64 0, i32 42, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %24

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %6, i64 0, i32 123
  %12 = load i8, i8* %11, align 4, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %24, label %14

14:                                               ; preds = %10
  %15 = ptrtoint %"class.v8::internal::Heap"* %6 to i64
  %16 = add i64 %15, -41416
  %17 = inttoptr i64 %16 to %"class.v8::internal::Isolate"*
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 61
  %19 = load i8, i8* %18, align 1, !range !3
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %14
  %22 = tail call zeroext i1 @_ZN2v88internal4Heap8IsSharedEv(%"class.v8::internal::Heap"* %6) #13
  %23 = xor i1 %22, true
  br label %24

24:                                               ; preds = %14, %10, %1, %21, %4
  %25 = phi i1 [ false, %14 ], [ false, %10 ], [ false, %4 ], [ false, %1 ], [ %23, %21 ]
  ret i1 %25
}

declare zeroext i1 @_ZN2v88internal4Heap8IsSharedEv(%"class.v8::internal::Heap"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal18IncrementalMarking27IsBelowActivationThresholdsEv(%"class.v8::internal::IncrementalMarking"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %2, align 8
  %4 = tail call i64 @_ZN2v88internal4Heap26OldGenerationSizeOfObjectsEv(%"class.v8::internal::Heap"* %3) #13
  %5 = icmp ult i64 %4, 8388609
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %2, align 8
  %8 = tail call i64 @_ZN2v88internal4Heap19GlobalSizeOfObjectsEv(%"class.v8::internal::Heap"* %7) #13
  %9 = icmp ult i64 %8, 16777217
  br label %10

10:                                               ; preds = %6, %1
  %11 = phi i1 [ false, %1 ], [ %9, %6 ]
  ret i1 %11
}

declare i64 @_ZN2v88internal4Heap26OldGenerationSizeOfObjectsEv(%"class.v8::internal::Heap"*) local_unnamed_addr #2

declare i64 @_ZN2v88internal4Heap19GlobalSizeOfObjectsEv(%"class.v8::internal::Heap"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18IncrementalMarking5StartENS0_23GarbageCollectionReasonE(%"class.v8::internal::IncrementalMarking"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca i8, align 1
  %5 = alloca i64, align 8
  %6 = alloca [2 x %"class.std::__1::unique_ptr.1200"], align 16
  %7 = alloca i8*, align 8
  %8 = alloca i8, align 1
  %9 = alloca i64, align 8
  %10 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %11 = alloca %"class.v8::internal::GCTracer::Scope", align 8
  %12 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %13 = load i8, i8* @_ZN2v88internal30FLAG_trace_incremental_markingE, align 1, !range !3
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %36, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 0
  %17 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %16, align 8
  %18 = tail call i64 @_ZN2v88internal4Heap26OldGenerationSizeOfObjectsEv(%"class.v8::internal::Heap"* %17) #13
  %19 = lshr i64 %18, 20
  %20 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %16, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %20, i64 0, i32 56, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i64, i64* %21 monotonic, align 8
  %23 = lshr i64 %22, 20
  %24 = tail call i64 @_ZN2v88internal4Heap19GlobalSizeOfObjectsEv(%"class.v8::internal::Heap"* %20) #13
  %25 = lshr i64 %24, 20
  %26 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %16, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %26, i64 0, i32 57
  %28 = load i64, i64* %27, align 8
  %29 = lshr i64 %28, 20
  %30 = ptrtoint %"class.v8::internal::Heap"* %26 to i64
  %31 = add i64 %30, -41416
  %32 = inttoptr i64 %31 to %"class.v8::internal::Isolate"*
  %33 = tail call i8* @_ZN2v88internal4Heap31GarbageCollectionReasonToStringENS0_23GarbageCollectionReasonE(i32 %1) #13
  %34 = tail call i64 @llvm.usub.sat.i64(i64 %23, i64 %19)
  %35 = tail call i64 @llvm.usub.sat.i64(i64 %29, i64 %25)
  tail call void (%"class.v8::internal::Isolate"*, i8*, ...) @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"* %32, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @.str.3, i64 0, i64 0), i8* %33, i64 %19, i64 %23, i64 %34, i64 %25, i64 %29, i64 %35) #13
  br label %36

36:                                               ; preds = %2, %15
  %37 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 0
  %38 = bitcast %"class.v8::internal::IncrementalMarking"* %0 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, -41416
  %41 = inttoptr i64 %40 to %"class.v8::internal::Isolate"*
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %41, i64 0, i32 14, i32 0
  %43 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %43, i64 0, i32 7
  tail call void @_ZN2v88internal9Histogram9AddSampleEi(%"class.v8::internal::Histogram"* %44, i32 %1) #13
  %45 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %43, i64 0, i32 58
  %46 = bitcast %"class.v8::internal::HistogramTimer"* %45 to %"class.v8::internal::TimedHistogram"*
  %47 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %43, i64 0, i32 58, i32 1
  %48 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %43, i64 0, i32 58, i32 0, i32 0, i32 5
  %49 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %49, i64 0, i32 759
  %51 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %50, align 8
  tail call void @_ZN2v88internal14TimedHistogram5StartEPNS_4base12ElapsedTimerEPNS0_7IsolateE(%"class.v8::internal::TimedHistogram"* %46, %"class.v8::base::ElapsedTimer"* %47, %"class.v8::internal::Isolate"* %51) #13
  %52 = load atomic i64, i64* @_ZZN2v88internal18IncrementalMarking5StartENS0_23GarbageCollectionReasonEE28trace_event_unique_atomic192 monotonic, align 8
  %53 = inttoptr i64 %52 to i8*
  %54 = icmp eq i64 %52, 0
  br i1 %54, label %55, label %63

55:                                               ; preds = %36
  %56 = tail call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %57 = bitcast %"class.v8::TracingController"* %56 to i8* (%"class.v8::TracingController"*, i8*)***
  %58 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %57, align 8
  %59 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %58, i64 2
  %60 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %59, align 8
  %61 = tail call i8* %60(%"class.v8::TracingController"* %56, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0)) #13
  %62 = ptrtoint i8* %61 to i64
  store atomic volatile i64 %62, i64* @_ZZN2v88internal18IncrementalMarking5StartENS0_23GarbageCollectionReasonEE28trace_event_unique_atomic192 monotonic, align 8
  br label %63

63:                                               ; preds = %36, %55
  %64 = phi i8* [ %53, %36 ], [ %61, %55 ]
  %65 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #13
  %66 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %10, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %66, align 8
  %67 = load atomic i8, i8* %64 monotonic, align 1
  %68 = and i8 %67, 5
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %107, label %70

70:                                               ; preds = %63
  %71 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %37, align 8
  %72 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %71, i64 0, i32 142
  %73 = load i32, i32* %72, align 4
  %74 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i8** %3, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #13
  %75 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #13
  store i8 2, i8* %4, align 1
  %76 = zext i32 %73 to i64
  store i64 %76, i64* %5, align 8
  %77 = bitcast [2 x %"class.std::__1::unique_ptr.1200"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %77) #13
  %78 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1200"], [2 x %"class.std::__1::unique_ptr.1200"]* %6, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %77, i8 0, i64 16, i1 false) #13
  %79 = tail call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %80 = bitcast %"class.v8::TracingController"* %79 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)***
  %81 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)*** %80, align 8
  %82 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)** %81, i64 3
  %83 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)** %82, align 8
  %84 = call i64 %83(%"class.v8::TracingController"* %79, i8 signext 88, i8* %64, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0), i8* null, i64 0, i64 0, i32 1, i8** nonnull %3, i8* nonnull %4, i64* nonnull %5, %"class.std::__1::unique_ptr.1200"* nonnull %78, i32 0) #13
  %85 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1200"], [2 x %"class.std::__1::unique_ptr.1200"]* %6, i64 0, i64 1, i32 0, i32 0, i32 0
  %86 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %85, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %85, align 8
  %87 = icmp eq %"class.v8::ConvertableToTraceFormat"* %86, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %70
  %89 = bitcast %"class.v8::ConvertableToTraceFormat"* %86 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %90 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %90, i64 1
  %92 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %91, align 8
  call void %92(%"class.v8::ConvertableToTraceFormat"* nonnull %86) #13
  br label %93

93:                                               ; preds = %88, %70
  %94 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1200"], [2 x %"class.std::__1::unique_ptr.1200"]* %6, i64 0, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %94, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %94, align 16
  %96 = icmp eq %"class.v8::ConvertableToTraceFormat"* %95, null
  br i1 %96, label %102, label %97

97:                                               ; preds = %93
  %98 = bitcast %"class.v8::ConvertableToTraceFormat"* %95 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %99 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %98, align 8
  %100 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %99, i64 1
  %101 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %100, align 8
  call void %101(%"class.v8::ConvertableToTraceFormat"* nonnull %95) #13
  br label %102

102:                                              ; preds = %93, %97
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74)
  %103 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %10, i64 0, i32 1
  %104 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %103, i64 0, i32 0
  store i8* %64, i8** %104, align 8
  %105 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %10, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0), i8** %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %10, i64 0, i32 1, i32 2
  store i64 %84, i64* %106, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %103, %"struct.v8::internal::tracing::ScopedTracer::Data"** %66, align 8
  br label %107

107:                                              ; preds = %63, %102
  %108 = bitcast %"class.v8::internal::GCTracer::Scope"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %108) #13
  %109 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %37, align 8
  %110 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %109, i64 0, i32 80, i32 0, i32 0, i32 0
  %111 = load %"class.v8::internal::GCTracer"*, %"class.v8::internal::GCTracer"** %110, align 8
  call void @_ZN2v88internal8GCTracer5ScopeC1EPS1_NS2_7ScopeIdENS0_10ThreadKindE(%"class.v8::internal::GCTracer::Scope"* nonnull %11, %"class.v8::internal::GCTracer"* %111, i32 8, i32 0) #13
  %112 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %37, align 8
  %113 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %112, i64 0, i32 80, i32 0, i32 0, i32 0
  %114 = load %"class.v8::internal::GCTracer"*, %"class.v8::internal::GCTracer"** %113, align 8
  %115 = call i32 @_ZN2v88internal8GCTracer12CurrentEpochENS1_5Scope7ScopeIdE(%"class.v8::internal::GCTracer"* %114, i32 8) #13
  %116 = load atomic i64, i64* @_ZZN2v88internal18IncrementalMarking5StartENS0_23GarbageCollectionReasonEE28trace_event_unique_atomic194 monotonic, align 8
  %117 = inttoptr i64 %116 to i8*
  %118 = icmp eq i64 %116, 0
  br i1 %118, label %119, label %127

119:                                              ; preds = %107
  %120 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %121 = bitcast %"class.v8::TracingController"* %120 to i8* (%"class.v8::TracingController"*, i8*)***
  %122 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %121, align 8
  %123 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %122, i64 2
  %124 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %123, align 8
  %125 = call i8* %124(%"class.v8::TracingController"* %120, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0)) #13
  %126 = ptrtoint i8* %125 to i64
  store atomic volatile i64 %126, i64* @_ZZN2v88internal18IncrementalMarking5StartENS0_23GarbageCollectionReasonEE28trace_event_unique_atomic194 monotonic, align 8
  br label %127

127:                                              ; preds = %107, %119
  %128 = phi i8* [ %117, %107 ], [ %125, %119 ]
  %129 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %129) #13
  %130 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %12, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %130, align 8
  %131 = load atomic i8, i8* %128 monotonic, align 1
  %132 = and i8 %131, 5
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %170, label %134

134:                                              ; preds = %127
  %135 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 8) #13
  %136 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i8** %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #13
  %137 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %137) #13
  store i8 2, i8* %8, align 1
  %138 = zext i32 %115 to i64
  store i64 %138, i64* %9, align 8
  %139 = bitcast [2 x %"class.std::__1::unique_ptr.1200"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %139) #13
  %140 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1200"], [2 x %"class.std::__1::unique_ptr.1200"]* %6, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %139, i8 0, i64 16, i1 false) #13
  %141 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %142 = bitcast %"class.v8::TracingController"* %141 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)***
  %143 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)*** %142, align 8
  %144 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)** %143, i64 3
  %145 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)** %144, align 8
  %146 = call i64 %145(%"class.v8::TracingController"* %141, i8 signext 88, i8* %128, i8* %135, i8* null, i64 0, i64 0, i32 1, i8** nonnull %7, i8* nonnull %8, i64* nonnull %9, %"class.std::__1::unique_ptr.1200"* nonnull %140, i32 0) #13
  %147 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1200"], [2 x %"class.std::__1::unique_ptr.1200"]* %6, i64 0, i64 1, i32 0, i32 0, i32 0
  %148 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %147, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %147, align 8
  %149 = icmp eq %"class.v8::ConvertableToTraceFormat"* %148, null
  br i1 %149, label %155, label %150

150:                                              ; preds = %134
  %151 = bitcast %"class.v8::ConvertableToTraceFormat"* %148 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %152 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %151, align 8
  %153 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %152, i64 1
  %154 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %153, align 8
  call void %154(%"class.v8::ConvertableToTraceFormat"* nonnull %148) #13
  br label %155

155:                                              ; preds = %150, %134
  %156 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1200"], [2 x %"class.std::__1::unique_ptr.1200"]* %6, i64 0, i64 0, i32 0, i32 0, i32 0
  %157 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %156, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %156, align 16
  %158 = icmp eq %"class.v8::ConvertableToTraceFormat"* %157, null
  br i1 %158, label %164, label %159

159:                                              ; preds = %155
  %160 = bitcast %"class.v8::ConvertableToTraceFormat"* %157 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %161 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %160, align 8
  %162 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %161, i64 1
  %163 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %162, align 8
  call void %163(%"class.v8::ConvertableToTraceFormat"* nonnull %157) #13
  br label %164

164:                                              ; preds = %155, %159
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %139) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %137) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136)
  %165 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 8) #13
  %166 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %12, i64 0, i32 1
  %167 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %166, i64 0, i32 0
  store i8* %128, i8** %167, align 8
  %168 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %12, i64 0, i32 1, i32 1
  store i8* %165, i8** %168, align 8
  %169 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %12, i64 0, i32 1, i32 2
  store i64 %146, i64* %169, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %166, %"struct.v8::internal::tracing::ScopedTracer::Data"** %130, align 8
  br label %170

170:                                              ; preds = %127, %164
  %171 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %37, align 8
  %172 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %171, i64 0, i32 80, i32 0, i32 0, i32 0
  %173 = load %"class.v8::internal::GCTracer"*, %"class.v8::internal::GCTracer"** %172, align 8
  call void @_ZN2v88internal8GCTracer29NotifyIncrementalMarkingStartEv(%"class.v8::internal::GCTracer"* %173) #13
  %174 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %37, align 8
  %175 = call double @_ZNK2v88internal4Heap31MonotonicallyIncreasingTimeInMsEv(%"class.v8::internal::Heap"* %174) #13
  %176 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 3
  store double %175, double* %176, align 8
  %177 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 4
  store double 0.000000e+00, double* %177, align 8
  %178 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %37, align 8
  %179 = call i64 @_ZN2v88internal4Heap26OldGenerationSizeOfObjectsEv(%"class.v8::internal::Heap"* %178) #13
  %180 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 5
  store i64 %179, i64* %180, align 8
  %181 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %37, align 8
  %182 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %181, i64 0, i32 105
  %183 = load i64, i64* %182, align 8
  %184 = call i64 @_ZN2v88internal4Heap26OldGenerationSizeOfObjectsEv(%"class.v8::internal::Heap"* %181) #13
  %185 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %181, i64 0, i32 106
  %186 = load i64, i64* %185, align 8
  %187 = call i64 @llvm.usub.sat.i64(i64 %184, i64 %186) #13
  %188 = add i64 %187, %183
  %189 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 6
  store i64 %188, i64* %189, align 8
  %190 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 7
  %191 = bitcast double* %176 to i64*
  %192 = bitcast i64* %190 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %192, i8 0, i64 16, i1 false)
  %193 = load i64, i64* %191, align 8
  %194 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 9
  %195 = bitcast double* %194 to i64*
  store i64 %193, i64* %195, align 8
  %196 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 10
  store i64 0, i64* %196, align 8
  %197 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 13
  store i8 1, i8* %197, align 2
  call void @_ZN2v88internal18IncrementalMarking12StartMarkingEv(%"class.v8::internal::IncrementalMarking"* %0)
  %198 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %37, align 8
  %199 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 20, i32 0
  %200 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 19, i32 0
  call void @_ZN2v88internal4Heap33AddAllocationObserversToAllSpacesEPNS0_18AllocationObserverES3_(%"class.v8::internal::Heap"* %198, %"class.v8::internal::AllocationObserver"* %199, %"class.v8::internal::AllocationObserver"* %200) #13
  %201 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 17
  %202 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %37, align 8
  call void @_ZN2v88internal21IncrementalMarkingJob5StartEPNS0_4HeapE(%"class.v8::internal::IncrementalMarkingJob"* %201, %"class.v8::internal::Heap"* %202) #13
  %203 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %130, align 8
  %204 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %203, null
  br i1 %204, label %221, label %205

205:                                              ; preds = %170
  %206 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %12, i64 0, i32 1, i32 0
  %207 = load i8*, i8** %206, align 8
  %208 = load atomic i8, i8* %207 monotonic, align 1
  %209 = icmp eq i8 %208, 0
  br i1 %209, label %221, label %210

210:                                              ; preds = %205
  %211 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %212 = load i8*, i8** %206, align 8
  %213 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %12, i64 0, i32 1, i32 1
  %214 = load i8*, i8** %213, align 8
  %215 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %12, i64 0, i32 1, i32 2
  %216 = load i64, i64* %215, align 8
  %217 = bitcast %"class.v8::TracingController"* %211 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %218 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %217, align 8
  %219 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %218, i64 5
  %220 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %219, align 8
  call void %220(%"class.v8::TracingController"* %211, i8* %212, i8* %214, i64 %216) #13
  br label %221

221:                                              ; preds = %170, %205, %210
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %129) #13
  call void @_ZN2v88internal8GCTracer5ScopeD1Ev(%"class.v8::internal::GCTracer::Scope"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %108) #13
  %222 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %66, align 8
  %223 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %222, null
  br i1 %223, label %240, label %224

224:                                              ; preds = %221
  %225 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %10, i64 0, i32 1, i32 0
  %226 = load i8*, i8** %225, align 8
  %227 = load atomic i8, i8* %226 monotonic, align 1
  %228 = icmp eq i8 %227, 0
  br i1 %228, label %240, label %229

229:                                              ; preds = %224
  %230 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %231 = load i8*, i8** %225, align 8
  %232 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %10, i64 0, i32 1, i32 1
  %233 = load i8*, i8** %232, align 8
  %234 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %10, i64 0, i32 1, i32 2
  %235 = load i64, i64* %234, align 8
  %236 = bitcast %"class.v8::TracingController"* %230 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %237 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %236, align 8
  %238 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %237, i64 5
  %239 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %238, align 8
  call void %239(%"class.v8::TracingController"* %230, i8* %231, i8* %233, i64 %235) #13
  br label %240

240:                                              ; preds = %221, %224, %229
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #13
  %241 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %48, align 8
  %242 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %241, i64 0, i32 759
  %243 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %242, align 8
  call void @_ZN2v88internal14TimedHistogram4StopEPNS_4base12ElapsedTimerEPNS0_7IsolateE(%"class.v8::internal::TimedHistogram"* %46, %"class.v8::base::ElapsedTimer"* %47, %"class.v8::internal::Isolate"* %243) #13
  ret void
}

declare void @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"*, i8*, ...) local_unnamed_addr #2

declare i8* @_ZN2v88internal4Heap31GarbageCollectionReasonToStringENS0_23GarbageCollectionReasonE(i32) local_unnamed_addr #2

declare void @_ZN2v88internal9Histogram9AddSampleEi(%"class.v8::internal::Histogram"*, i32) local_unnamed_addr #2

declare i32 @_ZN2v88internal8GCTracer12CurrentEpochENS1_5Scope7ScopeIdE(%"class.v8::internal::GCTracer"*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal8GCTracer29NotifyIncrementalMarkingStartEv(%"class.v8::internal::GCTracer"*) local_unnamed_addr #2

declare double @_ZNK2v88internal4Heap31MonotonicallyIncreasingTimeInMsEv(%"class.v8::internal::Heap"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18IncrementalMarking12StartMarkingEv(%"class.v8::internal::IncrementalMarking"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::IncrementalMarkingRootMarkingVisitor", align 8
  %3 = alloca [2 x %"class.std::__1::unique_ptr.1200"], align 16
  %4 = alloca %"class.v8::internal::GCTracer::Scope", align 8
  %5 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %6 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 0
  %7 = bitcast %"class.v8::internal::IncrementalMarking"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, -41416
  %10 = inttoptr i64 %9 to %"class.v8::internal::Isolate"*
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 61
  %12 = load i8, i8* %11, align 1, !range !3
  %13 = icmp eq i8 %12, 0
  %14 = load i8, i8* @_ZN2v88internal30FLAG_trace_incremental_markingE, align 1, !range !3
  %15 = icmp ne i8 %14, 0
  br i1 %13, label %18, label %16

16:                                               ; preds = %1
  br i1 %15, label %17, label %184

17:                                               ; preds = %16
  tail call void (%"class.v8::internal::Isolate"*, i8*, ...) @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"* %10, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.6, i64 0, i64 0)) #13
  br label %184

18:                                               ; preds = %1
  %19 = inttoptr i64 %8 to %"class.v8::internal::Heap"*
  br i1 %15, label %20, label %22

20:                                               ; preds = %18
  tail call void (%"class.v8::internal::Isolate"*, i8*, ...) @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"* %10, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7, i64 0, i64 0)) #13
  %21 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %6, align 8
  br label %22

22:                                               ; preds = %20, %18
  %23 = phi %"class.v8::internal::Heap"* [ %21, %20 ], [ %19, %18 ]
  tail call void @_ZN2v88internal4Heap41InvokeIncrementalMarkingPrologueCallbacksEv(%"class.v8::internal::Heap"* %23) #13
  %24 = load i8, i8* @_ZN2v88internal18FLAG_never_compactE, align 1, !range !3
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %31

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 1
  %28 = load %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::MarkCompactCollector"** %27, align 8
  %29 = tail call zeroext i1 @_ZN2v88internal20MarkCompactCollector15StartCompactionEv(%"class.v8::internal::MarkCompactCollector"* %28) #13
  %30 = zext i1 %29 to i8
  br label %31

31:                                               ; preds = %22, %26
  %32 = phi i8 [ 0, %22 ], [ %30, %26 ]
  %33 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 12
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 1
  %35 = load %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::MarkCompactCollector"** %34, align 8
  tail call void @_ZN2v88internal20MarkCompactCollector12StartMarkingEv(%"class.v8::internal::MarkCompactCollector"* %35) #13
  %36 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  store atomic i8 1, i8* %36 seq_cst, align 1
  %37 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %6, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %37, i64 0, i32 111
  store i8 1, i8* %38, align 8
  %39 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %6, align 8
  %40 = load i8, i8* %33, align 1, !range !3
  %41 = icmp ne i8 %40, 0
  tail call void @_ZN2v88internal14MarkingBarrier11ActivateAllEPNS0_4HeapEb(%"class.v8::internal::Heap"* %39, i1 zeroext %41) #13
  %42 = load i64, i64* %7, align 8
  %43 = add i64 %42, -41416
  %44 = inttoptr i64 %43 to %"class.v8::internal::Isolate"*
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %44, i64 0, i32 13
  %46 = load %"class.v8::internal::CompilationCache"*, %"class.v8::internal::CompilationCache"** %45, align 8
  tail call void @_ZN2v88internal16CompilationCache19MarkCompactPrologueEv(%"class.v8::internal::CompilationCache"* %46) #13
  %47 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 14
  store i8 1, i8* %47, align 1
  %48 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %6, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %48, i64 0, i32 25
  %50 = load %"class.v8::internal::OldSpace"*, %"class.v8::internal::OldSpace"** %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::OldSpace", %"class.v8::internal::OldSpace"* %50, i64 0, i32 0
  tail call void @_ZN2v88internal10PagedSpace29MarkLinearAllocationAreaBlackEv(%"class.v8::internal::PagedSpace"* %51) #13
  %52 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %6, align 8
  %53 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %52, i64 0, i32 27
  %54 = load %"class.v8::internal::MapSpace"*, %"class.v8::internal::MapSpace"** %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::MapSpace", %"class.v8::internal::MapSpace"* %54, i64 0, i32 0
  tail call void @_ZN2v88internal10PagedSpace29MarkLinearAllocationAreaBlackEv(%"class.v8::internal::PagedSpace"* %55) #13
  %56 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %6, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %56, i64 0, i32 26
  %58 = load %"class.v8::internal::CodeSpace"*, %"class.v8::internal::CodeSpace"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::CodeSpace", %"class.v8::internal::CodeSpace"* %58, i64 0, i32 0
  tail call void @_ZN2v88internal10PagedSpace29MarkLinearAllocationAreaBlackEv(%"class.v8::internal::PagedSpace"* %59) #13
  %60 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %6, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %60, i64 0, i32 117, i32 0, i32 0, i32 0
  %62 = load %"class.v8::internal::GlobalSafepoint"*, %"class.v8::internal::GlobalSafepoint"** %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::GlobalSafepoint", %"class.v8::internal::GlobalSafepoint"* %62, i64 0, i32 3
  %64 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %63, align 8
  %65 = icmp eq %"class.v8::internal::LocalHeap"* %64, null
  br i1 %65, label %71, label %66

66:                                               ; preds = %31, %66
  %67 = phi %"class.v8::internal::LocalHeap"* [ %69, %66 ], [ %64, %31 ]
  tail call void @_ZN2v88internal9LocalHeap29MarkLinearAllocationAreaBlackEv(%"class.v8::internal::LocalHeap"* nonnull %67) #13
  %68 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %67, i64 0, i32 6
  %69 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %68, align 8
  %70 = icmp eq %"class.v8::internal::LocalHeap"* %69, null
  br i1 %70, label %71, label %66

71:                                               ; preds = %66, %31
  %72 = load i8, i8* @_ZN2v88internal30FLAG_trace_incremental_markingE, align 1, !range !3
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %71
  %75 = load i64, i64* %7, align 8
  %76 = add i64 %75, -41416
  %77 = inttoptr i64 %76 to %"class.v8::internal::Isolate"*
  tail call void (%"class.v8::internal::Isolate"*, i8*, ...) @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"* %77, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.9, i64 0, i64 0)) #13
  br label %78

78:                                               ; preds = %71, %74
  %79 = bitcast %"class.v8::internal::IncrementalMarkingRootMarkingVisitor"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #13
  %80 = getelementptr inbounds %"class.v8::internal::IncrementalMarkingRootMarkingVisitor", %"class.v8::internal::IncrementalMarkingRootMarkingVisitor"* %2, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal36IncrementalMarkingRootMarkingVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %80, align 8
  %81 = getelementptr inbounds %"class.v8::internal::IncrementalMarkingRootMarkingVisitor", %"class.v8::internal::IncrementalMarkingRootMarkingVisitor"* %2, i64 0, i32 1
  %82 = load i64, i64* %7, align 8
  %83 = bitcast %"class.v8::internal::Heap"** %81 to i64*
  store i64 %82, i64* %83, align 8
  %84 = inttoptr i64 %82 to %"class.v8::internal::Heap"*
  %85 = getelementptr inbounds %"class.v8::internal::IncrementalMarkingRootMarkingVisitor", %"class.v8::internal::IncrementalMarkingRootMarkingVisitor"* %2, i64 0, i32 0
  call void @_ZN2v88internal4Heap12IterateRootsEPNS0_11RootVisitorENS_4base7EnumSetINS0_8SkipRootEiEE(%"class.v8::internal::Heap"* %84, %"class.v8::internal::RootVisitor"* nonnull %85, i32 88) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #13
  %86 = load i8, i8* @_ZN2v88internal23FLAG_concurrent_markingE, align 1, !range !3
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %96, label %88

88:                                               ; preds = %78
  %89 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %6, align 8
  %90 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %89, i64 0, i32 42, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = icmp eq i32 %91, 4
  br i1 %92, label %96, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %89, i64 0, i32 87, i32 0, i32 0, i32 0
  %95 = load %"class.v8::internal::ConcurrentMarking"*, %"class.v8::internal::ConcurrentMarking"** %94, align 8
  call void @_ZN2v88internal17ConcurrentMarking11ScheduleJobENS_12TaskPriorityE(%"class.v8::internal::ConcurrentMarking"* %95, i8 zeroext 1) #13
  br label %96

96:                                               ; preds = %78, %93, %88
  %97 = load i8, i8* @_ZN2v88internal30FLAG_trace_incremental_markingE, align 1, !range !3
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = load i64, i64* %7, align 8
  %101 = add i64 %100, -41416
  %102 = inttoptr i64 %101 to %"class.v8::internal::Isolate"*
  call void (%"class.v8::internal::Isolate"*, i8*, ...) @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"* %102, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.8, i64 0, i64 0)) #13
  br label %103

103:                                              ; preds = %96, %99
  %104 = bitcast %"class.v8::internal::GCTracer::Scope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %104) #13
  %105 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %6, align 8
  %106 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %105, i64 0, i32 80, i32 0, i32 0, i32 0
  %107 = load %"class.v8::internal::GCTracer"*, %"class.v8::internal::GCTracer"** %106, align 8
  call void @_ZN2v88internal8GCTracer5ScopeC1EPS1_NS2_7ScopeIdENS0_10ThreadKindE(%"class.v8::internal::GCTracer::Scope"* nonnull %4, %"class.v8::internal::GCTracer"* %107, i32 1, i32 0) #13
  %108 = load atomic i64, i64* @_ZZN2v88internal18IncrementalMarking12StartMarkingEvE28trace_event_unique_atomic259 monotonic, align 8
  %109 = inttoptr i64 %108 to i8*
  %110 = icmp eq i64 %108, 0
  br i1 %110, label %111, label %119

111:                                              ; preds = %103
  %112 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %113 = bitcast %"class.v8::TracingController"* %112 to i8* (%"class.v8::TracingController"*, i8*)***
  %114 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %113, align 8
  %115 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %114, i64 2
  %116 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %115, align 8
  %117 = call i8* %116(%"class.v8::TracingController"* %112, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0)) #13
  %118 = ptrtoint i8* %117 to i64
  store atomic volatile i64 %118, i64* @_ZZN2v88internal18IncrementalMarking12StartMarkingEvE28trace_event_unique_atomic259 monotonic, align 8
  br label %119

119:                                              ; preds = %103, %111
  %120 = phi i8* [ %109, %103 ], [ %117, %111 ]
  %121 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %121) #13
  %122 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %5, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %122, align 8
  %123 = load atomic i8, i8* %120 monotonic, align 1
  %124 = and i8 %123, 5
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %159, label %126

126:                                              ; preds = %119
  %127 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 1) #13
  %128 = bitcast [2 x %"class.std::__1::unique_ptr.1200"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %128) #13
  %129 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1200"], [2 x %"class.std::__1::unique_ptr.1200"]* %3, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %128, i8 0, i64 16, i1 false) #13
  %130 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %131 = bitcast %"class.v8::TracingController"* %130 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)***
  %132 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)*** %131, align 8
  %133 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)** %132, i64 3
  %134 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)** %133, align 8
  %135 = call i64 %134(%"class.v8::TracingController"* %130, i8 signext 88, i8* %120, i8* %127, i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1200"* nonnull %129, i32 0) #13
  %136 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1200"], [2 x %"class.std::__1::unique_ptr.1200"]* %3, i64 0, i64 1, i32 0, i32 0, i32 0
  %137 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %136, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %136, align 8
  %138 = icmp eq %"class.v8::ConvertableToTraceFormat"* %137, null
  br i1 %138, label %144, label %139

139:                                              ; preds = %126
  %140 = bitcast %"class.v8::ConvertableToTraceFormat"* %137 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %141 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %140, align 8
  %142 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %141, i64 1
  %143 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %142, align 8
  call void %143(%"class.v8::ConvertableToTraceFormat"* nonnull %137) #13
  br label %144

144:                                              ; preds = %139, %126
  %145 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1200"], [2 x %"class.std::__1::unique_ptr.1200"]* %3, i64 0, i64 0, i32 0, i32 0, i32 0
  %146 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %145, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %145, align 16
  %147 = icmp eq %"class.v8::ConvertableToTraceFormat"* %146, null
  br i1 %147, label %153, label %148

148:                                              ; preds = %144
  %149 = bitcast %"class.v8::ConvertableToTraceFormat"* %146 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %150 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %149, align 8
  %151 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %150, i64 1
  %152 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %151, align 8
  call void %152(%"class.v8::ConvertableToTraceFormat"* nonnull %146) #13
  br label %153

153:                                              ; preds = %144, %148
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %128) #13
  %154 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 1) #13
  %155 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %5, i64 0, i32 1
  %156 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %155, i64 0, i32 0
  store i8* %120, i8** %156, align 8
  %157 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %5, i64 0, i32 1, i32 1
  store i8* %154, i8** %157, align 8
  %158 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %5, i64 0, i32 1, i32 2
  store i64 %135, i64* %158, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %155, %"struct.v8::internal::tracing::ScopedTracer::Data"** %122, align 8
  br label %159

159:                                              ; preds = %119, %153
  %160 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %6, align 8
  %161 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %160, i64 0, i32 96, i32 0, i32 0, i32 0
  %162 = load %"class.v8::internal::LocalEmbedderHeapTracer"*, %"class.v8::internal::LocalEmbedderHeapTracer"** %161, align 8
  %163 = call i64 @_ZNK2v88internal4Heap25flags_for_embedder_tracerEv(%"class.v8::internal::Heap"* %160) #13
  call void @_ZN2v88internal23LocalEmbedderHeapTracer13TracePrologueENS_18EmbedderHeapTracer10TraceFlagsE(%"class.v8::internal::LocalEmbedderHeapTracer"* %162, i64 %163) #13
  %164 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %122, align 8
  %165 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %164, null
  br i1 %165, label %182, label %166

166:                                              ; preds = %159
  %167 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %5, i64 0, i32 1, i32 0
  %168 = load i8*, i8** %167, align 8
  %169 = load atomic i8, i8* %168 monotonic, align 1
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %182, label %171

171:                                              ; preds = %166
  %172 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %173 = load i8*, i8** %167, align 8
  %174 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %5, i64 0, i32 1, i32 1
  %175 = load i8*, i8** %174, align 8
  %176 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %5, i64 0, i32 1, i32 2
  %177 = load i64, i64* %176, align 8
  %178 = bitcast %"class.v8::TracingController"* %172 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %179 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %178, align 8
  %180 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %179, i64 5
  %181 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %180, align 8
  call void %181(%"class.v8::TracingController"* %172, i8* %173, i8* %175, i64 %177) #13
  br label %182

182:                                              ; preds = %159, %166, %171
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %121) #13
  call void @_ZN2v88internal8GCTracer5ScopeD1Ev(%"class.v8::internal::GCTracer::Scope"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %104) #13
  %183 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %6, align 8
  call void @_ZN2v88internal4Heap41InvokeIncrementalMarkingEpilogueCallbacksEv(%"class.v8::internal::Heap"* %183) #13
  br label %184

184:                                              ; preds = %16, %17, %182
  ret void
}

declare void @_ZN2v88internal4Heap33AddAllocationObserversToAllSpacesEPNS0_18AllocationObserverES3_(%"class.v8::internal::Heap"*, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::AllocationObserver"*) local_unnamed_addr #2

declare void @_ZN2v88internal21IncrementalMarkingJob5StartEPNS0_4HeapE(%"class.v8::internal::IncrementalMarkingJob"*, %"class.v8::internal::Heap"*) local_unnamed_addr #2

declare void @_ZN2v88internal4Heap41InvokeIncrementalMarkingPrologueCallbacksEv(%"class.v8::internal::Heap"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal20MarkCompactCollector15StartCompactionEv(%"class.v8::internal::MarkCompactCollector"*) local_unnamed_addr #2

declare void @_ZN2v88internal20MarkCompactCollector12StartMarkingEv(%"class.v8::internal::MarkCompactCollector"*) local_unnamed_addr #2

declare void @_ZN2v88internal14MarkingBarrier11ActivateAllEPNS0_4HeapEb(%"class.v8::internal::Heap"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN2v88internal16CompilationCache19MarkCompactPrologueEv(%"class.v8::internal::CompilationCache"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18IncrementalMarking20StartBlackAllocationEv(%"class.v8::internal::IncrementalMarking"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 14
  store i8 1, i8* %2, align 1
  %3 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %4, i64 0, i32 25
  %6 = load %"class.v8::internal::OldSpace"*, %"class.v8::internal::OldSpace"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::OldSpace", %"class.v8::internal::OldSpace"* %6, i64 0, i32 0
  tail call void @_ZN2v88internal10PagedSpace29MarkLinearAllocationAreaBlackEv(%"class.v8::internal::PagedSpace"* %7) #13
  %8 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %3, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %8, i64 0, i32 27
  %10 = load %"class.v8::internal::MapSpace"*, %"class.v8::internal::MapSpace"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::MapSpace", %"class.v8::internal::MapSpace"* %10, i64 0, i32 0
  tail call void @_ZN2v88internal10PagedSpace29MarkLinearAllocationAreaBlackEv(%"class.v8::internal::PagedSpace"* %11) #13
  %12 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %3, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %12, i64 0, i32 26
  %14 = load %"class.v8::internal::CodeSpace"*, %"class.v8::internal::CodeSpace"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::CodeSpace", %"class.v8::internal::CodeSpace"* %14, i64 0, i32 0
  tail call void @_ZN2v88internal10PagedSpace29MarkLinearAllocationAreaBlackEv(%"class.v8::internal::PagedSpace"* %15) #13
  %16 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %3, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %16, i64 0, i32 117, i32 0, i32 0, i32 0
  %18 = load %"class.v8::internal::GlobalSafepoint"*, %"class.v8::internal::GlobalSafepoint"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::GlobalSafepoint", %"class.v8::internal::GlobalSafepoint"* %18, i64 0, i32 3
  %20 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %19, align 8
  %21 = icmp eq %"class.v8::internal::LocalHeap"* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %1, %22
  %23 = phi %"class.v8::internal::LocalHeap"* [ %25, %22 ], [ %20, %1 ]
  tail call void @_ZN2v88internal9LocalHeap29MarkLinearAllocationAreaBlackEv(%"class.v8::internal::LocalHeap"* nonnull %23) #13
  %24 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %23, i64 0, i32 6
  %25 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %24, align 8
  %26 = icmp eq %"class.v8::internal::LocalHeap"* %25, null
  br i1 %26, label %27, label %22

27:                                               ; preds = %22, %1
  %28 = load i8, i8* @_ZN2v88internal30FLAG_trace_incremental_markingE, align 1, !range !3
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %27
  %31 = bitcast %"class.v8::internal::IncrementalMarking"* %0 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, -41416
  %34 = inttoptr i64 %33 to %"class.v8::internal::Isolate"*
  tail call void (%"class.v8::internal::Isolate"*, i8*, ...) @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"* %34, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.9, i64 0, i64 0)) #13
  br label %35

35:                                               ; preds = %27, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18IncrementalMarking9MarkRootsEv(%"class.v8::internal::IncrementalMarking"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::IncrementalMarkingRootMarkingVisitor", align 8
  %3 = bitcast %"class.v8::internal::IncrementalMarkingRootMarkingVisitor"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #13
  %4 = getelementptr inbounds %"class.v8::internal::IncrementalMarkingRootMarkingVisitor", %"class.v8::internal::IncrementalMarkingRootMarkingVisitor"* %2, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal36IncrementalMarkingRootMarkingVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::IncrementalMarkingRootMarkingVisitor", %"class.v8::internal::IncrementalMarkingRootMarkingVisitor"* %2, i64 0, i32 1
  %6 = bitcast %"class.v8::internal::IncrementalMarking"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.v8::internal::Heap"** %5 to i64*
  store i64 %7, i64* %8, align 8
  %9 = inttoptr i64 %7 to %"class.v8::internal::Heap"*
  %10 = getelementptr inbounds %"class.v8::internal::IncrementalMarkingRootMarkingVisitor", %"class.v8::internal::IncrementalMarkingRootMarkingVisitor"* %2, i64 0, i32 0
  call void @_ZN2v88internal4Heap12IterateRootsEPNS0_11RootVisitorENS_4base7EnumSetINS0_8SkipRootEiEE(%"class.v8::internal::Heap"* %9, %"class.v8::internal::RootVisitor"* nonnull %10, i32 88) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #13
  ret void
}

declare void @_ZN2v88internal17ConcurrentMarking11ScheduleJobENS_12TaskPriorityE(%"class.v8::internal::ConcurrentMarking"*, i8 zeroext) local_unnamed_addr #2

declare void @_ZN2v88internal23LocalEmbedderHeapTracer13TracePrologueENS_18EmbedderHeapTracer10TraceFlagsE(%"class.v8::internal::LocalEmbedderHeapTracer"*, i64) local_unnamed_addr #2

declare i64 @_ZNK2v88internal4Heap25flags_for_embedder_tracerEv(%"class.v8::internal::Heap"*) local_unnamed_addr #2

declare void @_ZN2v88internal4Heap41InvokeIncrementalMarkingEpilogueCallbacksEv(%"class.v8::internal::Heap"*) local_unnamed_addr #2

declare void @_ZN2v88internal10PagedSpace29MarkLinearAllocationAreaBlackEv(%"class.v8::internal::PagedSpace"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18IncrementalMarking20PauseBlackAllocationEv(%"class.v8::internal::IncrementalMarking"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %3, i64 0, i32 25
  %5 = load %"class.v8::internal::OldSpace"*, %"class.v8::internal::OldSpace"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::OldSpace", %"class.v8::internal::OldSpace"* %5, i64 0, i32 0
  tail call void @_ZN2v88internal10PagedSpace26UnmarkLinearAllocationAreaEv(%"class.v8::internal::PagedSpace"* %6) #13
  %7 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %2, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %7, i64 0, i32 27
  %9 = load %"class.v8::internal::MapSpace"*, %"class.v8::internal::MapSpace"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::MapSpace", %"class.v8::internal::MapSpace"* %9, i64 0, i32 0
  tail call void @_ZN2v88internal10PagedSpace26UnmarkLinearAllocationAreaEv(%"class.v8::internal::PagedSpace"* %10) #13
  %11 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %2, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %11, i64 0, i32 26
  %13 = load %"class.v8::internal::CodeSpace"*, %"class.v8::internal::CodeSpace"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::CodeSpace", %"class.v8::internal::CodeSpace"* %13, i64 0, i32 0
  tail call void @_ZN2v88internal10PagedSpace26UnmarkLinearAllocationAreaEv(%"class.v8::internal::PagedSpace"* %14) #13
  %15 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %2, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %15, i64 0, i32 117, i32 0, i32 0, i32 0
  %17 = load %"class.v8::internal::GlobalSafepoint"*, %"class.v8::internal::GlobalSafepoint"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::GlobalSafepoint", %"class.v8::internal::GlobalSafepoint"* %17, i64 0, i32 3
  %19 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %18, align 8
  %20 = icmp eq %"class.v8::internal::LocalHeap"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %1, %21
  %22 = phi %"class.v8::internal::LocalHeap"* [ %24, %21 ], [ %19, %1 ]
  tail call void @_ZN2v88internal9LocalHeap26UnmarkLinearAllocationAreaEv(%"class.v8::internal::LocalHeap"* nonnull %22) #13
  %23 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %22, i64 0, i32 6
  %24 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %23, align 8
  %25 = icmp eq %"class.v8::internal::LocalHeap"* %24, null
  br i1 %25, label %26, label %21

26:                                               ; preds = %21, %1
  %27 = load i8, i8* @_ZN2v88internal30FLAG_trace_incremental_markingE, align 1, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %34, label %29

29:                                               ; preds = %26
  %30 = bitcast %"class.v8::internal::IncrementalMarking"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, -41416
  %33 = inttoptr i64 %32 to %"class.v8::internal::Isolate"*
  tail call void (%"class.v8::internal::Isolate"*, i8*, ...) @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"* %33, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.10, i64 0, i64 0)) #13
  br label %34

34:                                               ; preds = %26, %29
  %35 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 14
  store i8 0, i8* %35, align 1
  ret void
}

declare void @_ZN2v88internal10PagedSpace26UnmarkLinearAllocationAreaEv(%"class.v8::internal::PagedSpace"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18IncrementalMarking21FinishBlackAllocationEv(%"class.v8::internal::IncrementalMarking"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 14
  %3 = load i8, i8* %2, align 1, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  store i8 0, i8* %2, align 1
  %6 = load i8, i8* @_ZN2v88internal30FLAG_trace_incremental_markingE, align 1, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %5
  %9 = bitcast %"class.v8::internal::IncrementalMarking"* %0 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, -41416
  %12 = inttoptr i64 %11 to %"class.v8::internal::Isolate"*
  tail call void (%"class.v8::internal::Isolate"*, i8*, ...) @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"* %12, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.11, i64 0, i64 0)) #13
  br label %13

13:                                               ; preds = %5, %1, %8
  ret void
}

declare zeroext i1 @_ZN2v88internal4Heap13IsLargeObjectENS0_10HeapObjectE(i64) local_unnamed_addr #2

declare void @_ZN2v88internal4Page15CreateBlackAreaEmm(%"class.v8::internal::Page"*, i64, i64) local_unnamed_addr #2

declare void @_ZN2v88internal4Heap12IterateRootsEPNS0_11RootVisitorENS_4base7EnumSetINS0_8SkipRootEiEE(%"class.v8::internal::Heap"*, %"class.v8::internal::RootVisitor"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11RootVisitorD2Ev(%"class.v8::internal::RootVisitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal18IncrementalMarking15ShouldRetainMapENS0_3MapEi(%"class.v8::internal::IncrementalMarking"* nocapture readnone, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %103, label %5

5:                                                ; preds = %3
  %6 = and i64 %1, -4294967296
  %7 = add i64 %1, 19
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = and i64 %10, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %84, label %14

14:                                               ; preds = %5
  %15 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %16 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %15, null
  %17 = and i64 %1, -262144
  %18 = or i64 %17, 16
  %19 = inttoptr i64 %18 to i64*
  br i1 %16, label %49, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %15, i64 0, i32 0, i32 1
  %22 = load i8, i8* %21, align 8, !range !3
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %15, i64 0, i32 1, i64 10
  %26 = load i64, i64* %25, align 8
  %27 = trunc i64 %26 to i32
  br label %70

28:                                               ; preds = %20
  %29 = load i64, i64* %19, align 16
  %30 = add i64 %29, -41416
  %31 = inttoptr i64 %30 to %"class.v8::internal::Isolate"*
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %31, i64 0, i32 0, i32 7, i32 0, i64 10
  %33 = load i64, i64* %32, align 8
  %34 = trunc i64 %33 to i32
  br label %35

35:                                               ; preds = %41, %28
  %36 = phi i64 [ %46, %41 ], [ %11, %28 ]
  %37 = add i64 %36, -1
  %38 = inttoptr i64 %37 to i32*
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = icmp eq i32 %39, %34
  br i1 %40, label %41, label %84

41:                                               ; preds = %35
  %42 = add i64 %36, 19
  %43 = inttoptr i64 %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %6, %45
  %47 = and i64 %45, 1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %84, label %35

49:                                               ; preds = %14
  %50 = load i64, i64* %19, align 16
  %51 = add i64 %50, -41416
  %52 = inttoptr i64 %51 to %"class.v8::internal::Isolate"*
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %52, i64 0, i32 0, i32 7, i32 0, i64 10
  %54 = load i64, i64* %53, align 8
  %55 = trunc i64 %54 to i32
  br label %56

56:                                               ; preds = %62, %49
  %57 = phi i64 [ %67, %62 ], [ %11, %49 ]
  %58 = add i64 %57, -1
  %59 = inttoptr i64 %58 to i32*
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = icmp eq i32 %60, %55
  br i1 %61, label %62, label %84

62:                                               ; preds = %56
  %63 = add i64 %57, 19
  %64 = inttoptr i64 %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i64
  %67 = or i64 %6, %66
  %68 = and i64 %66, 1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %84, label %56

70:                                               ; preds = %76, %24
  %71 = phi i64 [ %81, %76 ], [ %11, %24 ]
  %72 = add i64 %71, -1
  %73 = inttoptr i64 %72 to i32*
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = icmp eq i32 %74, %27
  br i1 %75, label %76, label %84

76:                                               ; preds = %70
  %77 = add i64 %71, 19
  %78 = inttoptr i64 %77 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i64
  %81 = or i64 %6, %80
  %82 = and i64 %80, 1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %70

84:                                               ; preds = %70, %76, %35, %41, %56, %62, %5
  %85 = phi i64 [ %11, %5 ], [ %67, %62 ], [ %57, %56 ], [ %36, %35 ], [ %46, %41 ], [ %71, %70 ], [ %81, %76 ]
  %86 = and i64 %85, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %103, label %88

88:                                               ; preds = %84
  %89 = and i64 %85, -262144
  %90 = or i64 %89, 272
  %91 = sub i64 %85, %89
  %92 = trunc i64 %91 to i32
  %93 = lshr i32 %92, 2
  %94 = and i32 %93, 31
  %95 = shl i32 1, %94
  %96 = inttoptr i64 %90 to i32*
  %97 = lshr i64 %91, 7
  %98 = and i64 %97, 33554431
  %99 = getelementptr inbounds i32, i32* %96, i64 %98
  %100 = load atomic i32, i32* %99 acquire, align 4
  %101 = and i32 %100, %95
  %102 = icmp ne i32 %101, 0
  br label %103

103:                                              ; preds = %84, %88, %3
  %104 = phi i1 [ false, %3 ], [ false, %84 ], [ %102, %88 ]
  ret i1 %104
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18IncrementalMarking10RetainMapsEv(%"class.v8::internal::IncrementalMarking"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.1166", align 8
  %3 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %4, i64 0, i32 115
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 1
  %8 = icmp ne i32 %7, 0
  %9 = load i32, i32* @_ZN2v88internal25FLAG_retain_maps_for_n_gcE, align 4
  %10 = icmp eq i32 %9, 0
  %11 = or i1 %8, %10
  %12 = bitcast %"class.std::__1::vector.1166"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #13
  call void @_ZN2v88internal4Heap19FindAllRetainedMapsEv(%"class.std::__1::vector.1166"* nonnull sret %2, %"class.v8::internal::Heap"* %4) #13
  %13 = getelementptr inbounds %"class.std::__1::vector.1166", %"class.std::__1::vector.1166"* %2, i64 0, i32 0, i32 0
  %14 = load %"class.v8::internal::WeakArrayList"*, %"class.v8::internal::WeakArrayList"** %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.1166", %"class.std::__1::vector.1166"* %2, i64 0, i32 0, i32 1
  %16 = load %"class.v8::internal::WeakArrayList"*, %"class.v8::internal::WeakArrayList"** %15, align 8
  %17 = icmp eq %"class.v8::internal::WeakArrayList"* %14, %16
  br i1 %17, label %22, label %18

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 1
  br label %30

20:                                               ; preds = %43
  %21 = load %"class.v8::internal::WeakArrayList"*, %"class.v8::internal::WeakArrayList"** %13, align 8
  br label %22

22:                                               ; preds = %20, %1
  %23 = phi %"class.v8::internal::WeakArrayList"* [ %21, %20 ], [ %14, %1 ]
  %24 = icmp eq %"class.v8::internal::WeakArrayList"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %22
  %26 = ptrtoint %"class.v8::internal::WeakArrayList"* %23 to i64
  %27 = bitcast %"class.v8::internal::WeakArrayList"** %15 to i64*
  store i64 %26, i64* %27, align 8
  %28 = bitcast %"class.v8::internal::WeakArrayList"* %23 to i8*
  call void @_ZdlPv(i8* %28) #14
  br label %29

29:                                               ; preds = %22, %25
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #13
  ret void

30:                                               ; preds = %18, %43
  %31 = phi %"class.v8::internal::WeakArrayList"* [ %14, %18 ], [ %44, %43 ]
  %32 = getelementptr inbounds %"class.v8::internal::WeakArrayList", %"class.v8::internal::WeakArrayList"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 7
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = icmp sgt i32 %36, 1
  br i1 %37, label %38, label %43

38:                                               ; preds = %30
  %39 = lshr i32 %36, 1
  %40 = and i64 %33, -4294967296
  %41 = add i64 %33, 11
  %42 = zext i32 %39 to i64
  br label %46

43:                                               ; preds = %180, %30
  %44 = getelementptr inbounds %"class.v8::internal::WeakArrayList", %"class.v8::internal::WeakArrayList"* %31, i64 1
  %45 = icmp eq %"class.v8::internal::WeakArrayList"* %44, %16
  br i1 %45, label %20, label %30

46:                                               ; preds = %38, %180
  %47 = phi i64 [ 0, %38 ], [ %181, %180 ]
  %48 = shl i64 %47, 34
  %49 = ashr exact i64 %48, 32
  %50 = add i64 %41, %49
  %51 = inttoptr i64 %50 to i32*
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = zext i32 %52 to i64
  %54 = and i64 %53, 3
  %55 = icmp eq i64 %54, 3
  %56 = icmp ne i32 %52, 3
  %57 = and i1 %56, %55
  br i1 %57, label %58, label %180

58:                                               ; preds = %46
  %59 = and i64 %53, 4294967293
  %60 = or i64 %59, %40
  %61 = trunc i64 %47 to i32
  %62 = shl i32 %61, 2
  %63 = or i32 %62, 4
  %64 = sext i32 %63 to i64
  %65 = add i64 %41, %64
  %66 = inttoptr i64 %65 to i32*
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = ashr i32 %67, 1
  br i1 %11, label %173, label %69

69:                                               ; preds = %58
  %70 = and i64 %60, -262144
  %71 = or i64 %70, 272
  %72 = sub i64 %60, %70
  %73 = trunc i64 %72 to i32
  %74 = lshr i32 %73, 2
  %75 = and i32 %74, 31
  %76 = shl i32 1, %75
  %77 = inttoptr i64 %71 to i32*
  %78 = lshr i64 %72, 7
  %79 = and i64 %78, 33554431
  %80 = getelementptr inbounds i32, i32* %77, i64 %79
  %81 = load atomic i32, i32* %80 acquire, align 4
  %82 = and i32 %81, %76
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %173

84:                                               ; preds = %69
  %85 = call zeroext i1 @_ZN2v88internal18IncrementalMarking15ShouldRetainMapENS0_3MapEi(%"class.v8::internal::IncrementalMarking"* %0, i64 %60, i32 %68)
  br i1 %85, label %86, label %146

86:                                               ; preds = %84
  %87 = load atomic i32, i32* %80 monotonic, align 4
  br label %88

88:                                               ; preds = %92, %86
  %89 = phi i32 [ %87, %86 ], [ %95, %92 ]
  %90 = and i32 %89, %76
  %91 = icmp eq i32 %90, %76
  br i1 %91, label %141, label %92

92:                                               ; preds = %88
  %93 = or i32 %89, %76
  %94 = cmpxchg volatile i32* %80, i32 %89, i32 %93 release monotonic
  %95 = extractvalue { i32, i1 } %94, 0
  %96 = extractvalue { i32, i1 } %94, 1
  br i1 %96, label %97, label %88

97:                                               ; preds = %92
  %98 = load %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::MarkCompactCollector"** %19, align 8
  %99 = getelementptr inbounds %"class.v8::internal::MarkCompactCollector", %"class.v8::internal::MarkCompactCollector"* %98, i64 0, i32 14, i32 0, i32 0, i32 0
  %100 = load %"class.v8::internal::MarkingWorklists::Local"*, %"class.v8::internal::MarkingWorklists::Local"** %99, align 8
  %101 = getelementptr inbounds %"class.v8::internal::MarkingWorklists::Local", %"class.v8::internal::MarkingWorklists::Local"* %100, i64 0, i32 2, i32 1
  %102 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %101, align 8
  %103 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %102, i64 0, i32 1
  %104 = load i16, i16* %103, align 2
  %105 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %102, i64 0, i32 0
  %106 = load i16, i16* %105, align 2
  %107 = icmp eq i16 %104, %106
  %108 = bitcast %"class.heap::base::internal::SegmentBase"* %102 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*
  br i1 %107, label %109, label %134, !prof !4

109:                                              ; preds = %97
  %110 = call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #13
  %111 = icmp eq %"class.heap::base::internal::SegmentBase"* %102, %110
  br i1 %111, label %126, label %112

112:                                              ; preds = %109
  %113 = getelementptr inbounds %"class.v8::internal::MarkingWorklists::Local", %"class.v8::internal::MarkingWorklists::Local"* %100, i64 0, i32 2, i32 0
  %114 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %113, align 8
  %115 = bitcast %"class.heap::base::internal::SegmentBase"** %101 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"**
  %116 = load %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %115, align 8
  %117 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %114, i64 0, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %117) #13
  %118 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %114, i64 0, i32 1
  %119 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %116, i64 0, i32 1
  %122 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %121 to i64*
  store i64 %120, i64* %122, align 8
  %123 = ptrtoint %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %116 to i64
  store atomic i64 %123, i64* %119 monotonic, align 8
  %124 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %114, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = atomicrmw add i64* %124, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %117) #13
  br label %126

126:                                              ; preds = %112, %109
  %127 = call i8* @_Znwm(i64 528) #14
  %128 = bitcast i8* %127 to i16*
  store i16 64, i16* %128, align 2
  %129 = getelementptr inbounds i8, i8* %127, i64 2
  %130 = bitcast i8* %129 to i16*
  store i16 0, i16* %130, align 2
  %131 = getelementptr inbounds i8, i8* %127, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %131, i8 0, i64 520, i1 false) #13
  %132 = bitcast %"class.heap::base::internal::SegmentBase"** %101 to i8**
  store i8* %127, i8** %132, align 8
  %133 = bitcast i8* %127 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*
  br label %134

134:                                              ; preds = %126, %97
  %135 = phi %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* [ %133, %126 ], [ %108, %97 ]
  %136 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %135, i64 0, i32 0, i32 1
  %137 = load i16, i16* %136, align 2
  %138 = add i16 %137, 1
  store i16 %138, i16* %136, align 2
  %139 = zext i16 %137 to i64
  %140 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %135, i64 0, i32 2, i64 %139, i32 0, i32 0, i32 0
  store i64 %60, i64* %140, align 8
  br label %141

141:                                              ; preds = %88, %134
  %142 = load i8, i8* @_ZN2v88internal25FLAG_track_retaining_pathE, align 1, !range !3
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %146, label %144, !prof !2

144:                                              ; preds = %141
  %145 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %3, align 8
  call void @_ZN2v88internal4Heap16AddRetainingRootENS0_4RootENS0_10HeapObjectE(%"class.v8::internal::Heap"* %145, i32 23, i64 %60) #13
  br label %146

146:                                              ; preds = %141, %144, %84
  %147 = add i64 %60, 15
  %148 = inttoptr i64 %147 to i32*
  %149 = load i32, i32* %148, align 4
  %150 = zext i32 %149 to i64
  %151 = or i64 %40, %150
  %152 = icmp sgt i32 %67, 1
  %153 = and i64 %150, 1
  %154 = icmp ne i64 %153, 0
  %155 = and i1 %152, %154
  br i1 %155, label %156, label %180

156:                                              ; preds = %146
  %157 = and i64 %151, -262144
  %158 = or i64 %157, 272
  %159 = sub i64 %151, %157
  %160 = trunc i64 %159 to i32
  %161 = lshr i32 %160, 2
  %162 = and i32 %161, 31
  %163 = shl i32 1, %162
  %164 = inttoptr i64 %158 to i32*
  %165 = lshr i64 %159, 7
  %166 = and i64 %165, 33554431
  %167 = getelementptr inbounds i32, i32* %164, i64 %166
  %168 = load atomic i32, i32* %167 acquire, align 4
  %169 = and i32 %168, %163
  %170 = icmp eq i32 %169, 0
  %171 = zext i1 %170 to i32
  %172 = sub nsw i32 %68, %171
  br label %175

173:                                              ; preds = %69, %58
  %174 = load i32, i32* @_ZN2v88internal25FLAG_retain_maps_for_n_gcE, align 4
  br label %175

175:                                              ; preds = %156, %173
  %176 = phi i32 [ %174, %173 ], [ %172, %156 ]
  %177 = icmp eq i32 %176, %68
  br i1 %177, label %180, label %178

178:                                              ; preds = %175
  %179 = shl i32 %176, 1
  store atomic volatile i32 %179, i32* %66 monotonic, align 4
  br label %180

180:                                              ; preds = %146, %178, %175, %46
  %181 = add nuw nsw i64 %47, 2
  %182 = icmp ult i64 %181, %42
  br i1 %182, label %46, label %43
}

declare void @_ZN2v88internal4Heap19FindAllRetainedMapsEv(%"class.std::__1::vector.1166"* sret, %"class.v8::internal::Heap"*) local_unnamed_addr #2

declare void @_ZN2v88internal4Heap16AddRetainingRootENS0_4RootENS0_10HeapObjectE(%"class.v8::internal::Heap"*, i32, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18IncrementalMarking21FinalizeIncrementallyEv(%"class.v8::internal::IncrementalMarking"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca [2 x %"class.std::__1::unique_ptr.1200"], align 16
  %3 = alloca %"class.v8::internal::IncrementalMarkingRootMarkingVisitor", align 8
  %4 = alloca %"class.v8::internal::GCTracer::Scope", align 8
  %5 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %6 = bitcast %"class.v8::internal::GCTracer::Scope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 0
  %8 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %8, i64 0, i32 80, i32 0, i32 0, i32 0
  %10 = load %"class.v8::internal::GCTracer"*, %"class.v8::internal::GCTracer"** %9, align 8
  call void @_ZN2v88internal8GCTracer5ScopeC1EPS1_NS2_7ScopeIdENS0_10ThreadKindE(%"class.v8::internal::GCTracer::Scope"* nonnull %4, %"class.v8::internal::GCTracer"* %10, i32 6, i32 0) #13
  %11 = load atomic i64, i64* @_ZZN2v88internal18IncrementalMarking21FinalizeIncrementallyEvE28trace_event_unique_atomic397 monotonic, align 8
  %12 = inttoptr i64 %11 to i8*
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %14, label %22

14:                                               ; preds = %1
  %15 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %16 = bitcast %"class.v8::TracingController"* %15 to i8* (%"class.v8::TracingController"*, i8*)***
  %17 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %16, align 8
  %18 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %17, i64 2
  %19 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %18, align 8
  %20 = call i8* %19(%"class.v8::TracingController"* %15, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0)) #13
  %21 = ptrtoint i8* %20 to i64
  store atomic volatile i64 %21, i64* @_ZZN2v88internal18IncrementalMarking21FinalizeIncrementallyEvE28trace_event_unique_atomic397 monotonic, align 8
  br label %22

22:                                               ; preds = %1, %14
  %23 = phi i8* [ %12, %1 ], [ %20, %14 ]
  %24 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #13
  %25 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %5, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %25, align 8
  %26 = load atomic i8, i8* %23 monotonic, align 1
  %27 = and i8 %26, 5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %62, label %29

29:                                               ; preds = %22
  %30 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 6) #13
  %31 = bitcast [2 x %"class.std::__1::unique_ptr.1200"]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #13
  %32 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1200"], [2 x %"class.std::__1::unique_ptr.1200"]* %2, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %31, i8 0, i64 16, i1 false) #13
  %33 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %34 = bitcast %"class.v8::TracingController"* %33 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)***
  %35 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)*** %34, align 8
  %36 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)** %35, i64 3
  %37 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)** %36, align 8
  %38 = call i64 %37(%"class.v8::TracingController"* %33, i8 signext 88, i8* %23, i8* %30, i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1200"* nonnull %32, i32 0) #13
  %39 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1200"], [2 x %"class.std::__1::unique_ptr.1200"]* %2, i64 0, i64 1, i32 0, i32 0, i32 0
  %40 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %39, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %39, align 8
  %41 = icmp eq %"class.v8::ConvertableToTraceFormat"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %29
  %43 = bitcast %"class.v8::ConvertableToTraceFormat"* %40 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %44 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %44, i64 1
  %46 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %45, align 8
  call void %46(%"class.v8::ConvertableToTraceFormat"* nonnull %40) #13
  br label %47

47:                                               ; preds = %42, %29
  %48 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1200"], [2 x %"class.std::__1::unique_ptr.1200"]* %2, i64 0, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %48, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %48, align 16
  %50 = icmp eq %"class.v8::ConvertableToTraceFormat"* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = bitcast %"class.v8::ConvertableToTraceFormat"* %49 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %53 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %53, i64 1
  %55 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %54, align 8
  call void %55(%"class.v8::ConvertableToTraceFormat"* nonnull %49) #13
  br label %56

56:                                               ; preds = %47, %51
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #13
  %57 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 6) #13
  %58 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %5, i64 0, i32 1
  %59 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %58, i64 0, i32 0
  store i8* %23, i8** %59, align 8
  %60 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %5, i64 0, i32 1, i32 1
  store i8* %57, i8** %60, align 8
  %61 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %5, i64 0, i32 1, i32 2
  store i64 %38, i64* %61, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %58, %"struct.v8::internal::tracing::ScopedTracer::Data"** %25, align 8
  br label %62

62:                                               ; preds = %22, %56
  %63 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %7, align 8
  %64 = call double @_ZNK2v88internal4Heap31MonotonicallyIncreasingTimeInMsEv(%"class.v8::internal::Heap"* %63) #13
  %65 = bitcast %"class.v8::internal::IncrementalMarkingRootMarkingVisitor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65) #13
  %66 = getelementptr inbounds %"class.v8::internal::IncrementalMarkingRootMarkingVisitor", %"class.v8::internal::IncrementalMarkingRootMarkingVisitor"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal36IncrementalMarkingRootMarkingVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::IncrementalMarkingRootMarkingVisitor", %"class.v8::internal::IncrementalMarkingRootMarkingVisitor"* %3, i64 0, i32 1
  %68 = bitcast %"class.v8::internal::IncrementalMarking"* %0 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.v8::internal::Heap"** %67 to i64*
  store i64 %69, i64* %70, align 8
  %71 = inttoptr i64 %69 to %"class.v8::internal::Heap"*
  %72 = getelementptr inbounds %"class.v8::internal::IncrementalMarkingRootMarkingVisitor", %"class.v8::internal::IncrementalMarkingRootMarkingVisitor"* %3, i64 0, i32 0
  call void @_ZN2v88internal4Heap12IterateRootsEPNS0_11RootVisitorENS_4base7EnumSetINS0_8SkipRootEiEE(%"class.v8::internal::Heap"* %71, %"class.v8::internal::RootVisitor"* nonnull %72, i32 88) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65) #13
  call void @_ZN2v88internal18IncrementalMarking10RetainMapsEv(%"class.v8::internal::IncrementalMarking"* %0)
  %73 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %7, align 8
  call void @_ZN2v88internal14MarkingBarrier10PublishAllEPNS0_4HeapE(%"class.v8::internal::Heap"* %73) #13
  %74 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 15
  store i8 1, i8* %74, align 4
  %75 = load i8, i8* @_ZN2v88internal30FLAG_trace_incremental_markingE, align 1, !range !3
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %84, label %77

77:                                               ; preds = %62
  %78 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %7, align 8
  %79 = call double @_ZNK2v88internal4Heap31MonotonicallyIncreasingTimeInMsEv(%"class.v8::internal::Heap"* %78) #13
  %80 = fsub double %79, %64
  %81 = load i64, i64* %68, align 8
  %82 = add i64 %81, -41416
  %83 = inttoptr i64 %82 to %"class.v8::internal::Isolate"*
  call void (%"class.v8::internal::Isolate"*, i8*, ...) @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"* %83, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.12, i64 0, i64 0), double %80) #13
  br label %84

84:                                               ; preds = %62, %77
  %85 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %25, align 8
  %86 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %85, null
  br i1 %86, label %103, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %5, i64 0, i32 1, i32 0
  %89 = load i8*, i8** %88, align 8
  %90 = load atomic i8, i8* %89 monotonic, align 1
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %103, label %92

92:                                               ; preds = %87
  %93 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %94 = load i8*, i8** %88, align 8
  %95 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %5, i64 0, i32 1, i32 1
  %96 = load i8*, i8** %95, align 8
  %97 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %5, i64 0, i32 1, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.v8::TracingController"* %93 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %100 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %100, i64 5
  %102 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %101, align 8
  call void %102(%"class.v8::TracingController"* %93, i8* %94, i8* %96, i64 %98) #13
  br label %103

103:                                              ; preds = %84, %87, %92
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #13
  call void @_ZN2v88internal8GCTracer5ScopeD1Ev(%"class.v8::internal::GCTracer::Scope"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %6) #13
  ret void
}

declare void @_ZN2v88internal14MarkingBarrier10PublishAllEPNS0_4HeapE(%"class.v8::internal::Heap"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18IncrementalMarking34UpdateMarkingWorklistAfterScavengeEv(%"class.v8::internal::IncrementalMarking"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i8, i8* %2 seq_cst, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %156, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 0
  %7 = bitcast %"class.v8::internal::IncrementalMarking"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, -41416
  %10 = inttoptr i64 %9 to %"class.v8::internal::Isolate"*
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 1
  %14 = load %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::MarkCompactCollector"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::MarkCompactCollector", %"class.v8::internal::MarkCompactCollector"* %14, i64 0, i32 14, i32 0, i32 0, i32 0
  %16 = load %"class.v8::internal::MarkingWorklists::Local"*, %"class.v8::internal::MarkingWorklists::Local"** %15, align 8
  tail call void @_ZN2v88internal16MarkingWorklists5Local7PublishEv(%"class.v8::internal::MarkingWorklists::Local"* %16) #13
  %17 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %6, align 8
  tail call void @_ZN2v88internal14MarkingBarrier10PublishAllEPNS0_4HeapE(%"class.v8::internal::Heap"* %17) #13
  %18 = load %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::MarkCompactCollector"** %13, align 8
  %19 = getelementptr inbounds %"class.v8::internal::MarkCompactCollector", %"class.v8::internal::MarkCompactCollector"* %18, i64 0, i32 10, i32 0
  tail call fastcc void @"_ZN4heap4base8WorklistIN2v88internal10HeapObjectELt64EE6UpdateIZNS3_18IncrementalMarking34UpdateMarkingWorklistAfterScavengeEvE3$_2EEvT_"(%"class.heap::base::Worklist"* %19, i64 %12) #13
  %20 = getelementptr inbounds %"class.v8::internal::MarkCompactCollector", %"class.v8::internal::MarkCompactCollector"* %18, i64 0, i32 10, i32 1
  tail call fastcc void @"_ZN4heap4base8WorklistIN2v88internal10HeapObjectELt64EE6UpdateIZNS3_18IncrementalMarking34UpdateMarkingWorklistAfterScavengeEvE3$_2EEvT_"(%"class.heap::base::Worklist"* %20, i64 %12) #13
  %21 = getelementptr inbounds %"class.v8::internal::MarkCompactCollector", %"class.v8::internal::MarkCompactCollector"* %18, i64 0, i32 10, i32 2, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %21) #13
  %22 = getelementptr inbounds %"class.v8::internal::MarkCompactCollector", %"class.v8::internal::MarkCompactCollector"* %18, i64 0, i32 10, i32 2, i32 1
  %23 = load %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"** %22, align 8
  %24 = icmp eq %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* %23, null
  br i1 %24, label %133, label %25

25:                                               ; preds = %5
  %26 = trunc i64 %12 to i32
  br label %27

27:                                               ; preds = %128, %25
  %28 = phi %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* [ %23, %25 ], [ %130, %128 ]
  %29 = phi %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* [ null, %25 ], [ %131, %128 ]
  %30 = phi i64 [ 0, %25 ], [ %129, %128 ]
  %31 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* %28 to i8*
  %32 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* %28, i64 0, i32 0, i32 1
  %33 = load i16, i16* %32, align 2
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %27
  store i16 0, i16* %32, align 2
  br label %115

36:                                               ; preds = %27, %106
  %37 = phi i64 [ %107, %106 ], [ 0, %27 ]
  %38 = phi i64 [ %108, %106 ], [ 0, %27 ]
  %39 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* %28, i64 0, i32 2, i64 %38, i32 0, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = and i64 %40, -262144
  %42 = inttoptr i64 %41 to %"class.v8::internal::BasicMemoryChunk"*
  %43 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %42, i64 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = and i64 %44, 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %58, label %47

47:                                               ; preds = %36
  %48 = add i64 %40, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = zext i32 %50 to i64
  %52 = and i64 %51, 3
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %106

54:                                               ; preds = %47
  %55 = and i64 %40, -4294967296
  %56 = or i64 %55, %51
  %57 = add i64 %56, 1
  br label %102

58:                                               ; preds = %36
  %59 = and i64 %44, 16
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %76, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %42, i64 2, i32 7
  %63 = bitcast %"struct.std::__1::atomic.15"* %62 to i32**
  %64 = load i32*, i32** %63, align 8
  %65 = sub i64 %40, %41
  %66 = trunc i64 %65 to i32
  %67 = lshr i32 %66, 2
  %68 = and i32 %67, 31
  %69 = shl i32 1, %68
  %70 = lshr i64 %65, 7
  %71 = and i64 %70, 33554431
  %72 = getelementptr inbounds i32, i32* %64, i64 %71
  %73 = load atomic i32, i32* %72 acquire, align 4
  %74 = and i32 %73, %69
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %106, label %102

76:                                               ; preds = %58
  %77 = inttoptr i64 %41 to %"class.v8::internal::Page"*
  %78 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %77, i64 0, i32 0, i32 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = and i64 %79, 131072
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %97, label %82

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %42, i64 2, i32 7
  %84 = bitcast %"struct.std::__1::atomic.15"* %83 to i32**
  %85 = load i32*, i32** %84, align 8
  %86 = sub i64 %40, %41
  %87 = trunc i64 %86 to i32
  %88 = lshr i32 %87, 2
  %89 = and i32 %88, 31
  %90 = shl i32 1, %89
  %91 = lshr i64 %86, 7
  %92 = and i64 %91, 33554431
  %93 = getelementptr inbounds i32, i32* %85, i64 %92
  %94 = load atomic i32, i32* %93 acquire, align 4
  %95 = and i32 %94, %90
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %106, label %102

97:                                               ; preds = %76
  %98 = add i64 %40, -1
  %99 = inttoptr i64 %98 to i32*
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = icmp eq i32 %100, %26
  br i1 %101, label %106, label %102

102:                                              ; preds = %97, %82, %61, %54
  %103 = phi i64 [ %57, %54 ], [ %40, %61 ], [ %40, %82 ], [ %40, %97 ]
  %104 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* %28, i64 0, i32 2, i64 %37, i32 0, i32 0, i32 0
  store i64 %103, i64* %104, align 8
  %105 = add i64 %37, 1
  br label %106

106:                                              ; preds = %102, %97, %82, %61, %47
  %107 = phi i64 [ %105, %102 ], [ %37, %47 ], [ %37, %61 ], [ %37, %82 ], [ %37, %97 ]
  %108 = add nuw nsw i64 %38, 1
  %109 = load i16, i16* %32, align 2
  %110 = zext i16 %109 to i64
  %111 = icmp ult i64 %108, %110
  br i1 %111, label %36, label %112

112:                                              ; preds = %106
  %113 = trunc i64 %107 to i16
  store i16 %113, i16* %32, align 2
  %114 = icmp eq i16 %113, 0
  br i1 %114, label %115, label %125

115:                                              ; preds = %112, %35
  %116 = add i64 %30, 1
  %117 = icmp eq %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* %29, null
  %118 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* %28, i64 0, i32 1
  %119 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"** %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* %29, i64 0, i32 1
  %122 = select i1 %117, %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"** %22, %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"** %121
  %123 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"** %122 to i64*
  store i64 %120, i64* %123, align 8
  %124 = load %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"** %118, align 8
  tail call void @_ZdlPv(i8* %31) #14
  br label %128

125:                                              ; preds = %112
  %126 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* %28, i64 0, i32 1
  %127 = load %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"** %126, align 8
  br label %128

128:                                              ; preds = %125, %115
  %129 = phi i64 [ %116, %115 ], [ %30, %125 ]
  %130 = phi %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* [ %124, %115 ], [ %127, %125 ]
  %131 = phi %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* [ %29, %115 ], [ %28, %125 ]
  %132 = icmp eq %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* %130, null
  br i1 %132, label %133, label %27

133:                                              ; preds = %128, %5
  %134 = phi i64 [ 0, %5 ], [ %129, %128 ]
  %135 = getelementptr inbounds %"class.v8::internal::MarkCompactCollector", %"class.v8::internal::MarkCompactCollector"* %18, i64 0, i32 10, i32 2, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = atomicrmw sub i64* %135, i64 %134 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %21) #13
  %137 = getelementptr inbounds %"class.v8::internal::MarkCompactCollector", %"class.v8::internal::MarkCompactCollector"* %18, i64 0, i32 10, i32 5
  tail call fastcc void @"_ZN4heap4base8WorklistIN2v88internal10HeapObjectELt64EE6UpdateIZNS3_18IncrementalMarking34UpdateMarkingWorklistAfterScavengeEvE3$_2EEvT_"(%"class.heap::base::Worklist"* %137, i64 %12) #13
  %138 = getelementptr inbounds %"class.v8::internal::MarkCompactCollector", %"class.v8::internal::MarkCompactCollector"* %18, i64 0, i32 10, i32 3, i32 0, i32 0
  %139 = load %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"** %138, align 8
  %140 = getelementptr inbounds %"class.v8::internal::MarkCompactCollector", %"class.v8::internal::MarkCompactCollector"* %18, i64 0, i32 10, i32 3, i32 0, i32 1
  %141 = load %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"** %140, align 8
  %142 = icmp eq %"struct.v8::internal::ContextWorklistPair"* %139, %141
  br i1 %142, label %153, label %143

143:                                              ; preds = %133, %150
  %144 = phi %"struct.v8::internal::ContextWorklistPair"* [ %151, %150 ], [ %139, %133 ]
  %145 = getelementptr inbounds %"struct.v8::internal::ContextWorklistPair", %"struct.v8::internal::ContextWorklistPair"* %144, i64 0, i32 0
  %146 = load i64, i64* %145, align 8
  switch i64 %146, label %147 [
    i64 0, label %150
    i64 8, label %150
  ]

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"struct.v8::internal::ContextWorklistPair", %"struct.v8::internal::ContextWorklistPair"* %144, i64 0, i32 1
  %149 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %148, align 8
  tail call fastcc void @"_ZN4heap4base8WorklistIN2v88internal10HeapObjectELt64EE6UpdateIZNS3_18IncrementalMarking34UpdateMarkingWorklistAfterScavengeEvE3$_2EEvT_"(%"class.heap::base::Worklist"* %149, i64 %12) #13
  br label %150

150:                                              ; preds = %147, %143, %143
  %151 = getelementptr inbounds %"struct.v8::internal::ContextWorklistPair", %"struct.v8::internal::ContextWorklistPair"* %144, i64 1
  %152 = icmp eq %"struct.v8::internal::ContextWorklistPair"* %151, %141
  br i1 %152, label %153, label %143

153:                                              ; preds = %150, %133
  %154 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 2
  %155 = load %"class.v8::internal::WeakObjects"*, %"class.v8::internal::WeakObjects"** %154, align 8
  tail call void @_ZN2v88internal11WeakObjects19UpdateAfterScavengeEv(%"class.v8::internal::WeakObjects"* %155) #13
  br label %156

156:                                              ; preds = %1, %153
  ret void
}

declare void @_ZN2v88internal16MarkingWorklists5Local7PublishEv(%"class.v8::internal::MarkingWorklists::Local"*) local_unnamed_addr #2

declare void @_ZN2v88internal11WeakObjects19UpdateAfterScavengeEv(%"class.v8::internal::WeakObjects"*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal18IncrementalMarking30UpdateMarkedBytesAfterScavengeEm(%"class.v8::internal::IncrementalMarking"* nocapture, i64) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i8, i8* %3 seq_cst, align 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 7
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %1
  %10 = select i1 %9, i64 %1, i64 %8
  %11 = sub i64 %8, %10
  store i64 %11, i64* %7, align 8
  br label %12

12:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18IncrementalMarking27ProcessBlackAllocatedObjectENS0_10HeapObjectE(%"class.v8::internal::IncrementalMarking"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i8, i8* %3 seq_cst, align 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %33, label %6

6:                                                ; preds = %2
  %7 = and i64 %1, -262144
  %8 = or i64 %7, 272
  %9 = sub i64 %1, %7
  %10 = trunc i64 %9 to i32
  %11 = lshr i32 %10, 2
  %12 = and i32 %11, 31
  %13 = shl i32 1, %12
  %14 = inttoptr i64 %8 to i32*
  %15 = lshr i64 %9, 7
  %16 = and i64 %15, 33554431
  %17 = getelementptr inbounds i32, i32* %14, i64 %16
  %18 = load atomic i32, i32* %17 acquire, align 4
  %19 = and i32 %18, %13
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %33, label %21

21:                                               ; preds = %6
  %22 = shl i32 %13, 1
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds i32, i32* %17, i64 1
  %25 = select i1 %23, i32 1, i32 %22
  %26 = select i1 %23, i32* %24, i32* %17
  %27 = load atomic i32, i32* %26 acquire, align 4
  %28 = and i32 %27, %25
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 1
  %32 = load %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::MarkCompactCollector"** %31, align 8
  tail call void @_ZN2v88internal20MarkCompactCollector13RevisitObjectENS0_10HeapObjectE(%"class.v8::internal::MarkCompactCollector"* %32, i64 %1) #13
  br label %33

33:                                               ; preds = %21, %2, %6, %30
  ret void
}

declare void @_ZN2v88internal20MarkCompactCollector13RevisitObjectENS0_10HeapObjectE(%"class.v8::internal::MarkCompactCollector"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal18IncrementalMarking12EmbedderStepEdPd(%"class.v8::internal::IncrementalMarking"* nocapture readonly, double, double* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1200"], align 16
  %5 = alloca %"class.v8::internal::GCTracer::Scope", align 8
  %6 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %7 = alloca %"class.v8::internal::LocalEmbedderHeapTracer::ProcessingScope", align 8
  %8 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i8, i8* %8 seq_cst, align 1
  %10 = icmp ne i8 %9, 1
  %11 = load i8, i8* @_ZN2v88internal33FLAG_incremental_marking_wrappersE, align 1
  %12 = icmp eq i8 %11, 0
  %13 = or i1 %10, %12
  br i1 %13, label %22, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 0
  %16 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %16, i64 0, i32 96, i32 0, i32 0, i32 0
  %18 = load %"class.v8::internal::LocalEmbedderHeapTracer"*, %"class.v8::internal::LocalEmbedderHeapTracer"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::LocalEmbedderHeapTracer", %"class.v8::internal::LocalEmbedderHeapTracer"* %18, i64 0, i32 1
  %20 = load %"class.v8::EmbedderHeapTracer"*, %"class.v8::EmbedderHeapTracer"** %19, align 8
  %21 = icmp eq %"class.v8::EmbedderHeapTracer"* %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %14, %3
  store double 0.000000e+00, double* %2, align 8
  br label %186

23:                                               ; preds = %14
  %24 = bitcast %"class.v8::internal::GCTracer::Scope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %24) #13
  %25 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %16, i64 0, i32 80, i32 0, i32 0, i32 0
  %26 = load %"class.v8::internal::GCTracer"*, %"class.v8::internal::GCTracer"** %25, align 8
  call void @_ZN2v88internal8GCTracer5ScopeC1EPS1_NS2_7ScopeIdENS0_10ThreadKindE(%"class.v8::internal::GCTracer::Scope"* nonnull %5, %"class.v8::internal::GCTracer"* %26, i32 2, i32 0) #13
  %27 = load atomic i64, i64* @_ZZN2v88internal18IncrementalMarking12EmbedderStepEdPdE28trace_event_unique_atomic526 monotonic, align 8
  %28 = inttoptr i64 %27 to i8*
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %30, label %38

30:                                               ; preds = %23
  %31 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %32 = bitcast %"class.v8::TracingController"* %31 to i8* (%"class.v8::TracingController"*, i8*)***
  %33 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %32, align 8
  %34 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %33, i64 2
  %35 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %34, align 8
  %36 = call i8* %35(%"class.v8::TracingController"* %31, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0)) #13
  %37 = ptrtoint i8* %36 to i64
  store atomic volatile i64 %37, i64* @_ZZN2v88internal18IncrementalMarking12EmbedderStepEdPdE28trace_event_unique_atomic526 monotonic, align 8
  br label %38

38:                                               ; preds = %23, %30
  %39 = phi i8* [ %28, %23 ], [ %36, %30 ]
  %40 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %40) #13
  %41 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %41, align 8
  %42 = load atomic i8, i8* %39 monotonic, align 1
  %43 = and i8 %42, 5
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %78, label %45

45:                                               ; preds = %38
  %46 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 2) #13
  %47 = bitcast [2 x %"class.std::__1::unique_ptr.1200"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #13
  %48 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1200"], [2 x %"class.std::__1::unique_ptr.1200"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %47, i8 0, i64 16, i1 false) #13
  %49 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %50 = bitcast %"class.v8::TracingController"* %49 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)***
  %51 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)*** %50, align 8
  %52 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)** %51, i64 3
  %53 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)** %52, align 8
  %54 = call i64 %53(%"class.v8::TracingController"* %49, i8 signext 88, i8* %39, i8* %46, i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1200"* nonnull %48, i32 0) #13
  %55 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1200"], [2 x %"class.std::__1::unique_ptr.1200"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %56 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %55, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %55, align 8
  %57 = icmp eq %"class.v8::ConvertableToTraceFormat"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %45
  %59 = bitcast %"class.v8::ConvertableToTraceFormat"* %56 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %60 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %60, i64 1
  %62 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %61, align 8
  call void %62(%"class.v8::ConvertableToTraceFormat"* nonnull %56) #13
  br label %63

63:                                               ; preds = %58, %45
  %64 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1200"], [2 x %"class.std::__1::unique_ptr.1200"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %64, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %64, align 16
  %66 = icmp eq %"class.v8::ConvertableToTraceFormat"* %65, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %63
  %68 = bitcast %"class.v8::ConvertableToTraceFormat"* %65 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %69 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %69, i64 1
  %71 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %70, align 8
  call void %71(%"class.v8::ConvertableToTraceFormat"* nonnull %65) #13
  br label %72

72:                                               ; preds = %63, %67
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #13
  %73 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 2) #13
  %74 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1
  %75 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %74, i64 0, i32 0
  store i8* %39, i8** %75, align 8
  %76 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  store i8* %73, i8** %76, align 8
  %77 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  store i64 %54, i64* %77, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %74, %"struct.v8::internal::tracing::ScopedTracer::Data"** %41, align 8
  br label %78

78:                                               ; preds = %38, %72
  %79 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %15, align 8
  %80 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %79, i64 0, i32 96, i32 0, i32 0, i32 0
  %81 = load %"class.v8::internal::LocalEmbedderHeapTracer"*, %"class.v8::internal::LocalEmbedderHeapTracer"** %80, align 8
  %82 = call double @_ZNK2v88internal4Heap31MonotonicallyIncreasingTimeInMsEv(%"class.v8::internal::Heap"* %79) #13
  %83 = fadd double %82, %1
  %84 = bitcast %"class.v8::internal::LocalEmbedderHeapTracer::ProcessingScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %84) #13
  call void @_ZN2v88internal23LocalEmbedderHeapTracer15ProcessingScopeC1EPS1_(%"class.v8::internal::LocalEmbedderHeapTracer::ProcessingScope"* nonnull %7, %"class.v8::internal::LocalEmbedderHeapTracer"* %81) #13
  %85 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 1
  br label %86

86:                                               ; preds = %151, %78
  %87 = phi i64 [ 0, %78 ], [ %152, %151 ]
  %88 = load %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::MarkCompactCollector"** %85, align 8
  %89 = getelementptr inbounds %"class.v8::internal::MarkCompactCollector", %"class.v8::internal::MarkCompactCollector"* %88, i64 0, i32 14, i32 0, i32 0, i32 0
  %90 = load %"class.v8::internal::MarkingWorklists::Local"*, %"class.v8::internal::MarkingWorklists::Local"** %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::MarkingWorklists::Local", %"class.v8::internal::MarkingWorklists::Local"* %90, i64 0, i32 1, i32 2
  %92 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %91, align 8
  %93 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %92, i64 0, i32 1
  %94 = load i16, i16* %93, align 2
  %95 = icmp eq i16 %94, 0
  %96 = ptrtoint %"class.heap::base::internal::SegmentBase"* %92 to i64
  %97 = bitcast %"class.heap::base::internal::SegmentBase"* %92 to %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*
  br i1 %95, label %98, label %137

98:                                               ; preds = %86
  %99 = getelementptr inbounds %"class.v8::internal::MarkingWorklists::Local", %"class.v8::internal::MarkingWorklists::Local"* %90, i64 0, i32 1, i32 1
  %100 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %99, align 8
  %101 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %100, i64 0, i32 1
  %102 = load i16, i16* %101, align 2
  %103 = icmp eq i16 %102, 0
  br i1 %103, label %109, label %104

104:                                              ; preds = %98
  %105 = ptrtoint %"class.heap::base::internal::SegmentBase"* %100 to i64
  %106 = bitcast %"class.heap::base::internal::SegmentBase"** %99 to i64*
  %107 = bitcast %"class.heap::base::internal::SegmentBase"** %91 to i64*
  store i64 %96, i64* %106, align 8
  store i64 %105, i64* %107, align 8
  %108 = bitcast %"class.heap::base::internal::SegmentBase"* %100 to %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*
  br label %137

109:                                              ; preds = %98
  %110 = getelementptr inbounds %"class.v8::internal::MarkingWorklists::Local", %"class.v8::internal::MarkingWorklists::Local"* %90, i64 0, i32 1, i32 0
  %111 = load %"class.heap::base::Worklist.172"*, %"class.heap::base::Worklist.172"** %110, align 8
  %112 = getelementptr inbounds %"class.heap::base::Worklist.172", %"class.heap::base::Worklist.172"* %111, i64 0, i32 1
  %113 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"** %112 to i64*
  %114 = load atomic i64, i64* %113 monotonic, align 8
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %153, label %116

116:                                              ; preds = %109
  %117 = getelementptr inbounds %"class.heap::base::Worklist.172", %"class.heap::base::Worklist.172"* %111, i64 0, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %117) #13
  %118 = load %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"** %112, align 8
  %119 = icmp eq %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* %118, null
  br i1 %119, label %120, label %121

120:                                              ; preds = %116
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %117) #13
  br label %153

121:                                              ; preds = %116
  %122 = ptrtoint %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* %118 to i64
  %123 = getelementptr inbounds %"class.heap::base::Worklist.172", %"class.heap::base::Worklist.172"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = atomicrmw sub i64* %123, i64 1 monotonic
  %125 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* %118, i64 0, i32 1
  %126 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"** %125 to i64*
  %127 = load i64, i64* %126, align 8
  store atomic i64 %127, i64* %113 monotonic, align 8
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %117) #13
  %128 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %91, align 8
  %129 = call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #13
  %130 = icmp eq %"class.heap::base::internal::SegmentBase"* %129, %128
  %131 = icmp eq %"class.heap::base::internal::SegmentBase"* %128, null
  %132 = or i1 %131, %130
  br i1 %132, label %135, label %133

133:                                              ; preds = %121
  %134 = bitcast %"class.heap::base::internal::SegmentBase"* %128 to i8*
  call void @_ZdlPv(i8* %134) #14
  br label %135

135:                                              ; preds = %133, %121
  %136 = bitcast %"class.heap::base::internal::SegmentBase"** %91 to i64*
  store i64 %122, i64* %136, align 8
  br label %137

137:                                              ; preds = %135, %104, %86
  %138 = phi %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* [ %118, %135 ], [ %108, %104 ], [ %97, %86 ]
  %139 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* %138, i64 0, i32 0, i32 1
  %140 = load i16, i16* %139, align 2
  %141 = add i16 %140, -1
  store i16 %141, i16* %139, align 2
  %142 = zext i16 %141 to i64
  %143 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"* %138, i64 0, i32 2, i64 %142, i32 0, i32 0, i32 0
  %144 = load i64, i64* %143, align 8
  call void @_ZN2v88internal23LocalEmbedderHeapTracer15ProcessingScope20TracePossibleWrapperENS0_8JSObjectE(%"class.v8::internal::LocalEmbedderHeapTracer::ProcessingScope"* nonnull %7, i64 %144) #13
  %145 = add i64 %87, 1
  %146 = icmp eq i64 %145, 500
  br i1 %146, label %147, label %151

147:                                              ; preds = %137
  %148 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %15, align 8
  %149 = call double @_ZNK2v88internal4Heap31MonotonicallyIncreasingTimeInMsEv(%"class.v8::internal::Heap"* %148) #13
  %150 = fcmp ugt double %83, %149
  br i1 %150, label %151, label %153

151:                                              ; preds = %147, %137
  %152 = phi i64 [ %145, %137 ], [ 0, %147 ]
  br label %86

153:                                              ; preds = %109, %147, %120
  %154 = phi i1 [ true, %120 ], [ true, %109 ], [ false, %147 ]
  call void @_ZN2v88internal23LocalEmbedderHeapTracer15ProcessingScopeD1Ev(%"class.v8::internal::LocalEmbedderHeapTracer::ProcessingScope"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %84) #13
  %155 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %15, align 8
  %156 = call double @_ZNK2v88internal4Heap31MonotonicallyIncreasingTimeInMsEv(%"class.v8::internal::Heap"* %155) #13
  %157 = fsub double %83, %156
  %158 = call zeroext i1 @_ZN2v88internal23LocalEmbedderHeapTracer5TraceEd(%"class.v8::internal::LocalEmbedderHeapTracer"* %81, double %157) #13
  %159 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %15, align 8
  %160 = call double @_ZNK2v88internal4Heap31MonotonicallyIncreasingTimeInMsEv(%"class.v8::internal::Heap"* %159) #13
  %161 = zext i1 %154 to i8
  %162 = getelementptr inbounds %"class.v8::internal::LocalEmbedderHeapTracer", %"class.v8::internal::LocalEmbedderHeapTracer"* %81, i64 0, i32 4
  store i8 %161, i8* %162, align 4
  %163 = fsub double %160, %82
  store double %163, double* %2, align 8
  %164 = and i1 %154, %158
  %165 = xor i1 %164, true
  %166 = zext i1 %165 to i32
  %167 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %41, align 8
  %168 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %167, null
  br i1 %168, label %185, label %169

169:                                              ; preds = %153
  %170 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 0
  %171 = load i8*, i8** %170, align 8
  %172 = load atomic i8, i8* %171 monotonic, align 1
  %173 = icmp eq i8 %172, 0
  br i1 %173, label %185, label %174

174:                                              ; preds = %169
  %175 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %176 = load i8*, i8** %170, align 8
  %177 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  %178 = load i8*, i8** %177, align 8
  %179 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  %180 = load i64, i64* %179, align 8
  %181 = bitcast %"class.v8::TracingController"* %175 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %182 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %181, align 8
  %183 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %182, i64 5
  %184 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %183, align 8
  call void %184(%"class.v8::TracingController"* %175, i8* %176, i8* %178, i64 %180) #13
  br label %185

185:                                              ; preds = %153, %169, %174
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %40) #13
  call void @_ZN2v88internal8GCTracer5ScopeD1Ev(%"class.v8::internal::GCTracer::Scope"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %24) #13
  br label %186

186:                                              ; preds = %185, %22
  %187 = phi i32 [ %166, %185 ], [ 0, %22 ]
  ret i32 %187
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal18IncrementalMarking20ShouldDoEmbedderStepEv(%"class.v8::internal::IncrementalMarking"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i8, i8* %2 seq_cst, align 1
  %4 = icmp ne i8 %3, 1
  %5 = load i8, i8* @_ZN2v88internal33FLAG_incremental_marking_wrappersE, align 1
  %6 = icmp eq i8 %5, 0
  %7 = or i1 %4, %6
  br i1 %7, label %16, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 0
  %10 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %10, i64 0, i32 96, i32 0, i32 0, i32 0
  %12 = load %"class.v8::internal::LocalEmbedderHeapTracer"*, %"class.v8::internal::LocalEmbedderHeapTracer"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::LocalEmbedderHeapTracer", %"class.v8::internal::LocalEmbedderHeapTracer"* %12, i64 0, i32 1
  %14 = load %"class.v8::EmbedderHeapTracer"*, %"class.v8::EmbedderHeapTracer"** %13, align 8
  %15 = icmp ne %"class.v8::EmbedderHeapTracer"* %14, null
  br label %16

16:                                               ; preds = %1, %8
  %17 = phi i1 [ false, %1 ], [ %15, %8 ]
  ret i1 %17
}

declare void @_ZN2v88internal23LocalEmbedderHeapTracer15ProcessingScopeC1EPS1_(%"class.v8::internal::LocalEmbedderHeapTracer::ProcessingScope"*, %"class.v8::internal::LocalEmbedderHeapTracer"*) unnamed_addr #2

declare void @_ZN2v88internal23LocalEmbedderHeapTracer15ProcessingScope20TracePossibleWrapperENS0_8JSObjectE(%"class.v8::internal::LocalEmbedderHeapTracer::ProcessingScope"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88internal23LocalEmbedderHeapTracer15ProcessingScopeD1Ev(%"class.v8::internal::LocalEmbedderHeapTracer::ProcessingScope"*) unnamed_addr #3

declare zeroext i1 @_ZN2v88internal23LocalEmbedderHeapTracer5TraceEd(%"class.v8::internal::LocalEmbedderHeapTracer"*, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18IncrementalMarking5HurryEv(%"class.v8::internal::IncrementalMarking"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 1
  %3 = load %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::MarkCompactCollector"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::MarkCompactCollector", %"class.v8::internal::MarkCompactCollector"* %3, i64 0, i32 14, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::MarkingWorklists::Local"*, %"class.v8::internal::MarkingWorklists::Local"** %4, align 8
  %6 = tail call zeroext i1 @_ZN2v88internal16MarkingWorklists5Local7IsEmptyEv(%"class.v8::internal::MarkingWorklists::Local"* %5) #13
  br i1 %6, label %43, label %7

7:                                                ; preds = %1
  %8 = load i8, i8* @_ZN2v88internal30FLAG_trace_incremental_markingE, align 1, !range !3
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %21, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 0
  %12 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %11, align 8
  %13 = tail call double @_ZNK2v88internal4Heap31MonotonicallyIncreasingTimeInMsEv(%"class.v8::internal::Heap"* %12) #13
  %14 = load i8, i8* @_ZN2v88internal30FLAG_trace_incremental_markingE, align 1, !range !3
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.v8::internal::IncrementalMarking"* %0 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, -41416
  %20 = inttoptr i64 %19 to %"class.v8::internal::Isolate"*
  tail call void (%"class.v8::internal::Isolate"*, i8*, ...) @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"* %20, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0)) #13
  br label %21

21:                                               ; preds = %10, %7, %16
  %22 = phi double [ %13, %16 ], [ %13, %10 ], [ 0.000000e+00, %7 ]
  %23 = load %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::MarkCompactCollector"** %2, align 8
  %24 = tail call i64 @_ZN2v88internal20MarkCompactCollector22ProcessMarkingWorklistILNS1_29MarkingWorklistProcessingModeE0EEEmm(%"class.v8::internal::MarkCompactCollector"* %23, i64 0) #13
  %25 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %25 seq_cst, align 1
  %26 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 0
  %27 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %27, i64 0, i32 111
  store i8 1, i8* %28, align 8
  %29 = load i8, i8* @_ZN2v88internal30FLAG_trace_incremental_markingE, align 1, !range !3
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %43, label %31

31:                                               ; preds = %21
  %32 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %26, align 8
  %33 = tail call double @_ZNK2v88internal4Heap31MonotonicallyIncreasingTimeInMsEv(%"class.v8::internal::Heap"* %32) #13
  %34 = load i8, i8* @_ZN2v88internal30FLAG_trace_incremental_markingE, align 1, !range !3
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %43, label %36

36:                                               ; preds = %31
  %37 = fsub double %33, %22
  %38 = bitcast %"class.v8::internal::IncrementalMarking"* %0 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, -41416
  %41 = inttoptr i64 %40 to %"class.v8::internal::Isolate"*
  %42 = fptosi double %37 to i32
  tail call void (%"class.v8::internal::Isolate"*, i8*, ...) @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"* %41, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.14, i64 0, i64 0), i32 %42) #13
  br label %43

43:                                               ; preds = %21, %31, %36, %1
  ret void
}

declare zeroext i1 @_ZN2v88internal16MarkingWorklists5Local7IsEmptyEv(%"class.v8::internal::MarkingWorklists::Local"*) local_unnamed_addr #2

declare i64 @_ZN2v88internal20MarkCompactCollector22ProcessMarkingWorklistILNS1_29MarkingWorklistProcessingModeE0EEEmm(%"class.v8::internal::MarkCompactCollector"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18IncrementalMarking4StopEv(%"class.v8::internal::IncrementalMarking"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::SpaceIterator", align 8
  %3 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i8, i8* %3 seq_cst, align 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %140, label %6

6:                                                ; preds = %1
  %7 = load i8, i8* @_ZN2v88internal30FLAG_trace_incremental_markingE, align 1, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %26, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 0
  %11 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %10, align 8
  %12 = tail call i64 @_ZN2v88internal4Heap26OldGenerationSizeOfObjectsEv(%"class.v8::internal::Heap"* %11) #13
  %13 = lshr i64 %12, 20
  %14 = trunc i64 %13 to i32
  %15 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %10, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %15, i64 0, i32 56, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = lshr i64 %17, 20
  %19 = trunc i64 %18 to i32
  %20 = ptrtoint %"class.v8::internal::Heap"* %15 to i64
  %21 = add i64 %20, -41416
  %22 = inttoptr i64 %21 to %"class.v8::internal::Isolate"*
  %23 = sub nsw i32 %14, %19
  %24 = icmp sgt i32 %23, 0
  %25 = select i1 %24, i32 %23, i32 0
  tail call void (%"class.v8::internal::Isolate"*, i8*, ...) @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"* %22, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.15, i64 0, i64 0), i32 %14, i32 %19, i32 %25) #13
  br label %26

26:                                               ; preds = %6, %9
  %27 = bitcast %"class.v8::internal::SpaceIterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #13
  %28 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 0
  %29 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %28, align 8
  call void @_ZN2v88internal13SpaceIteratorC1EPNS0_4HeapE(%"class.v8::internal::SpaceIterator"* nonnull %2, %"class.v8::internal::Heap"* %29) #13
  %30 = call zeroext i1 @_ZN2v88internal13SpaceIterator7HasNextEv(%"class.v8::internal::SpaceIterator"* nonnull %2) #13
  br i1 %30, label %31, label %47

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 20, i32 0
  %33 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 19, i32 0
  br label %34

34:                                               ; preds = %31, %34
  %35 = call %"class.v8::internal::Space"* @_ZN2v88internal13SpaceIterator4NextEv(%"class.v8::internal::SpaceIterator"* nonnull %2) #13
  %36 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %28, align 8
  %37 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %36, i64 0, i32 24
  %38 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %38, i64 0, i32 0, i32 0
  %40 = icmp eq %"class.v8::internal::Space"* %35, %39
  %41 = bitcast %"class.v8::internal::Space"* %35 to void (%"class.v8::internal::Space"*, %"class.v8::internal::AllocationObserver"*)***
  %42 = load void (%"class.v8::internal::Space"*, %"class.v8::internal::AllocationObserver"*)**, void (%"class.v8::internal::Space"*, %"class.v8::internal::AllocationObserver"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.v8::internal::Space"*, %"class.v8::internal::AllocationObserver"*)*, void (%"class.v8::internal::Space"*, %"class.v8::internal::AllocationObserver"*)** %42, i64 7
  %44 = load void (%"class.v8::internal::Space"*, %"class.v8::internal::AllocationObserver"*)*, void (%"class.v8::internal::Space"*, %"class.v8::internal::AllocationObserver"*)** %43, align 8
  %45 = select i1 %40, %"class.v8::internal::AllocationObserver"* %33, %"class.v8::internal::AllocationObserver"* %32
  call void %44(%"class.v8::internal::Space"* %35, %"class.v8::internal::AllocationObserver"* %45) #13
  %46 = call zeroext i1 @_ZN2v88internal13SpaceIterator7HasNextEv(%"class.v8::internal::SpaceIterator"* nonnull %2) #13
  br i1 %46, label %34, label %47

47:                                               ; preds = %34, %26
  %48 = bitcast %"class.v8::internal::IncrementalMarking"* %0 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, -41416
  %51 = inttoptr i64 %50 to %"class.v8::internal::Isolate"*
  %52 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %51, i64 0, i32 0, i32 6
  call void @_ZN2v88internal10StackGuard14ClearInterruptENS1_13InterruptFlagE(%"class.v8::internal::StackGuard"* %52, i32 2) #13
  store atomic i8 0, i8* %3 seq_cst, align 1
  %53 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %28, align 8
  %54 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %53, i64 0, i32 111
  store i8 0, i8* %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 12
  store i8 0, i8* %55, align 1
  %56 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 14
  %57 = load i8, i8* %56, align 1, !range !3
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %66, label %59

59:                                               ; preds = %47
  store i8 0, i8* %56, align 1
  %60 = load i8, i8* @_ZN2v88internal30FLAG_trace_incremental_markingE, align 1, !range !3
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %66, label %62

62:                                               ; preds = %59
  %63 = load i64, i64* %48, align 8
  %64 = add i64 %63, -41416
  %65 = inttoptr i64 %64 to %"class.v8::internal::Isolate"*
  call void (%"class.v8::internal::Isolate"*, i8*, ...) @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"* %65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.11, i64 0, i64 0)) #13
  br label %66

66:                                               ; preds = %47, %59, %62
  %67 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 25, i32 0, i32 1, i32 0, i32 0, i32 0
  %68 = bitcast %"struct.std::__1::__hash_node_base.644"** %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %125

71:                                               ; preds = %136, %66
  %72 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 25, i32 0, i32 2, i32 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %124, label %75

75:                                               ; preds = %71
  %76 = load %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %67, align 8
  %77 = icmp eq %"struct.std::__1::__hash_node_base.644"* %76, null
  br i1 %77, label %84, label %78

78:                                               ; preds = %75, %78
  %79 = phi %"struct.std::__1::__hash_node_base.644"* [ %81, %78 ], [ %76, %75 ]
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644", %"struct.std::__1::__hash_node_base.644"* %79, i64 0, i32 0
  %81 = load %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %80, align 8
  %82 = bitcast %"struct.std::__1::__hash_node_base.644"* %79 to i8*
  call void @_ZdlPv(i8* %82) #14
  %83 = icmp eq %"struct.std::__1::__hash_node_base.644"* %81, null
  br i1 %83, label %84, label %78

84:                                               ; preds = %78, %75
  store %"struct.std::__1::__hash_node_base.644"* null, %"struct.std::__1::__hash_node_base.644"** %67, align 8
  %85 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 25, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %86 = load i64, i64* %85, align 8
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %106, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = add i64 %86, -1
  %91 = and i64 %86, 3
  %92 = icmp ult i64 %90, 3
  br i1 %92, label %95, label %93

93:                                               ; preds = %88
  %94 = sub i64 %86, %91
  br label %107

95:                                               ; preds = %107, %88
  %96 = phi i64 [ 0, %88 ], [ %121, %107 ]
  %97 = icmp eq i64 %91, 0
  br i1 %97, label %106, label %98

98:                                               ; preds = %95, %98
  %99 = phi i64 [ %103, %98 ], [ %96, %95 ]
  %100 = phi i64 [ %104, %98 ], [ %91, %95 ]
  %101 = load %"struct.std::__1::__hash_node_base.644"**, %"struct.std::__1::__hash_node_base.644"*** %89, align 8
  %102 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %101, i64 %99
  store %"struct.std::__1::__hash_node_base.644"* null, %"struct.std::__1::__hash_node_base.644"** %102, align 8
  %103 = add nuw i64 %99, 1
  %104 = add i64 %100, -1
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %106, label %98, !llvm.loop !5

106:                                              ; preds = %95, %98, %84
  store i64 0, i64* %72, align 8
  br label %124

107:                                              ; preds = %107, %93
  %108 = phi i64 [ 0, %93 ], [ %121, %107 ]
  %109 = phi i64 [ %94, %93 ], [ %122, %107 ]
  %110 = load %"struct.std::__1::__hash_node_base.644"**, %"struct.std::__1::__hash_node_base.644"*** %89, align 8
  %111 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %110, i64 %108
  store %"struct.std::__1::__hash_node_base.644"* null, %"struct.std::__1::__hash_node_base.644"** %111, align 8
  %112 = or i64 %108, 1
  %113 = load %"struct.std::__1::__hash_node_base.644"**, %"struct.std::__1::__hash_node_base.644"*** %89, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %113, i64 %112
  store %"struct.std::__1::__hash_node_base.644"* null, %"struct.std::__1::__hash_node_base.644"** %114, align 8
  %115 = or i64 %108, 2
  %116 = load %"struct.std::__1::__hash_node_base.644"**, %"struct.std::__1::__hash_node_base.644"*** %89, align 8
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %116, i64 %115
  store %"struct.std::__1::__hash_node_base.644"* null, %"struct.std::__1::__hash_node_base.644"** %117, align 8
  %118 = or i64 %108, 3
  %119 = load %"struct.std::__1::__hash_node_base.644"**, %"struct.std::__1::__hash_node_base.644"*** %89, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %119, i64 %118
  store %"struct.std::__1::__hash_node_base.644"* null, %"struct.std::__1::__hash_node_base.644"** %120, align 8
  %121 = add nuw i64 %108, 4
  %122 = add i64 %109, -4
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %95, label %107

124:                                              ; preds = %71, %106
  call void @_ZN2v88internal13SpaceIteratorD1Ev(%"class.v8::internal::SpaceIterator"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #13
  br label %140

125:                                              ; preds = %66, %136
  %126 = phi i64 [ %138, %136 ], [ %69, %66 ]
  %127 = inttoptr i64 %126 to %"struct.std::__1::__hash_node"*
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %127, i64 0, i32 2, i32 0, i32 1
  %129 = load i64, i64* %128, align 8
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %136, label %131

131:                                              ; preds = %125
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %127, i64 0, i32 2, i32 0, i32 0
  %133 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %132, align 8
  %134 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %133, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = atomicrmw add i64* %134, i64 %129 monotonic
  br label %136

136:                                              ; preds = %125, %131
  %137 = inttoptr i64 %126 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %71, label %125

140:                                              ; preds = %1, %124
  ret void
}

declare void @_ZN2v88internal13SpaceIteratorC1EPNS0_4HeapE(%"class.v8::internal::SpaceIterator"*, %"class.v8::internal::Heap"*) unnamed_addr #2

declare zeroext i1 @_ZN2v88internal13SpaceIterator7HasNextEv(%"class.v8::internal::SpaceIterator"*) local_unnamed_addr #2

declare %"class.v8::internal::Space"* @_ZN2v88internal13SpaceIterator4NextEv(%"class.v8::internal::SpaceIterator"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88internal13SpaceIteratorD1Ev(%"class.v8::internal::SpaceIterator"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18IncrementalMarking8FinalizeEv(%"class.v8::internal::IncrementalMarking"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal18IncrementalMarking5HurryEv(%"class.v8::internal::IncrementalMarking"* %0)
  tail call void @_ZN2v88internal18IncrementalMarking4StopEv(%"class.v8::internal::IncrementalMarking"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18IncrementalMarking15FinalizeMarkingENS1_16CompletionActionE(%"class.v8::internal::IncrementalMarking"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = load i8, i8* @_ZN2v88internal30FLAG_trace_incremental_markingE, align 1, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.v8::internal::IncrementalMarking"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -41416
  %9 = inttoptr i64 %8 to %"class.v8::internal::Isolate"*
  tail call void (%"class.v8::internal::Isolate"*, i8*, ...) @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"* %9, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.16, i64 0, i64 0)) #13
  br label %10

10:                                               ; preds = %2, %5
  %11 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  store atomic i32 2, i32* %11 seq_cst, align 4
  %12 = icmp eq i32 %1, 0
  br i1 %12, label %13, label %19

13:                                               ; preds = %10
  %14 = bitcast %"class.v8::internal::IncrementalMarking"* %0 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, -41416
  %17 = inttoptr i64 %16 to %"class.v8::internal::Isolate"*
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %17, i64 0, i32 0, i32 6
  tail call void @_ZN2v88internal10StackGuard16RequestInterruptENS1_13InterruptFlagE(%"class.v8::internal::StackGuard"* %18, i32 2) #13
  br label %19

19:                                               ; preds = %13, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK2v88internal18IncrementalMarking24CurrentTimeToMarkingTaskEv(%"class.v8::internal::IncrementalMarking"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %3, i64 0, i32 80, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::GCTracer"*, %"class.v8::internal::GCTracer"** %4, align 8
  %6 = tail call double @_ZNK2v88internal8GCTracer35AverageTimeToIncrementalMarkingTaskEv(%"class.v8::internal::GCTracer"* %5) #13
  %7 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 17
  %8 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %2, align 8
  %9 = tail call double @_ZNK2v88internal21IncrementalMarkingJob17CurrentTimeToTaskEPNS0_4HeapE(%"class.v8::internal::IncrementalMarkingJob"* %7, %"class.v8::internal::Heap"* %8) #13
  %10 = fcmp oeq double %6, 0.000000e+00
  %11 = fcmp olt double %6, %9
  %12 = select i1 %11, double %9, double %6
  %13 = select i1 %10, double 0.000000e+00, double %12
  ret double %13
}

declare double @_ZNK2v88internal8GCTracer35AverageTimeToIncrementalMarkingTaskEv(%"class.v8::internal::GCTracer"*) local_unnamed_addr #2

declare double @_ZNK2v88internal21IncrementalMarkingJob17CurrentTimeToTaskEPNS0_4HeapE(%"class.v8::internal::IncrementalMarkingJob"*, %"class.v8::internal::Heap"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18IncrementalMarking15MarkingCompleteENS1_16CompletionActionE(%"class.v8::internal::IncrementalMarking"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %67

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 4
  %6 = load double, double* %5, align 8
  %7 = fcmp oeq double %6, 0.000000e+00
  br i1 %7, label %8, label %51

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 0
  %10 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %9, align 8
  %11 = tail call double @_ZNK2v88internal4Heap31MonotonicallyIncreasingTimeInMsEv(%"class.v8::internal::Heap"* %10) #13
  %12 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 3
  %13 = load double, double* %12, align 8
  %14 = fsub double %11, %13
  %15 = fmul double %14, 1.000000e-01
  %16 = fcmp ogt double %15, 5.000000e+01
  %17 = select i1 %16, double %15, double 5.000000e+01
  %18 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %9, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %18, i64 0, i32 80, i32 0, i32 0, i32 0
  %20 = load %"class.v8::internal::GCTracer"*, %"class.v8::internal::GCTracer"** %19, align 8
  %21 = tail call double @_ZNK2v88internal8GCTracer35AverageTimeToIncrementalMarkingTaskEv(%"class.v8::internal::GCTracer"* %20) #13
  %22 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 17
  %23 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %9, align 8
  %24 = tail call double @_ZNK2v88internal21IncrementalMarkingJob17CurrentTimeToTaskEPNS0_4HeapE(%"class.v8::internal::IncrementalMarkingJob"* %22, %"class.v8::internal::Heap"* %23) #13
  %25 = fcmp oeq double %21, 0.000000e+00
  %26 = fcmp olt double %21, %24
  %27 = select i1 %26, double %24, double %21
  %28 = select i1 %25, double 0.000000e+00, double %27
  %29 = fcmp oeq double %28, 0.000000e+00
  %30 = fcmp ogt double %28, %17
  %31 = or i1 %29, %30
  br i1 %31, label %32, label %40

32:                                               ; preds = %8
  %33 = load i8, i8* @_ZN2v88internal30FLAG_trace_incremental_markingE, align 1, !range !3
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %51, label %35

35:                                               ; preds = %32
  %36 = bitcast %"class.v8::internal::IncrementalMarking"* %0 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %37, -41416
  %39 = inttoptr i64 %38 to %"class.v8::internal::Isolate"*
  tail call void (%"class.v8::internal::Isolate"*, i8*, ...) @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"* %39, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @.str.17, i64 0, i64 0), double %28, double %17) #13
  br label %51

40:                                               ; preds = %8
  %41 = fadd double %11, %17
  store double %41, double* %5, align 8
  %42 = load i8, i8* @_ZN2v88internal30FLAG_trace_incremental_markingE, align 1, !range !3
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %49, label %44

44:                                               ; preds = %40
  %45 = bitcast %"class.v8::internal::IncrementalMarking"* %0 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, -41416
  %48 = inttoptr i64 %47 to %"class.v8::internal::Isolate"*
  tail call void (%"class.v8::internal::Isolate"*, i8*, ...) @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"* %48, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.18, i64 0, i64 0), double %28, double %17) #13
  br label %49

49:                                               ; preds = %40, %44
  %50 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %9, align 8
  tail call void @_ZN2v88internal21IncrementalMarkingJob12ScheduleTaskEPNS0_4HeapENS1_8TaskTypeE(%"class.v8::internal::IncrementalMarkingJob"* %22, %"class.v8::internal::Heap"* %50, i32 0) #13
  br label %87

51:                                               ; preds = %32, %35, %4
  %52 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 0
  %53 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %52, align 8
  %54 = tail call double @_ZNK2v88internal4Heap31MonotonicallyIncreasingTimeInMsEv(%"class.v8::internal::Heap"* %53) #13
  %55 = load double, double* %5, align 8
  %56 = fcmp olt double %54, %55
  br i1 %56, label %57, label %67

57:                                               ; preds = %51
  %58 = load i8, i8* @_ZN2v88internal30FLAG_trace_incremental_markingE, align 1, !range !3
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %87, label %60

60:                                               ; preds = %57
  %61 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %52, align 8
  %62 = ptrtoint %"class.v8::internal::Heap"* %61 to i64
  %63 = add i64 %62, -41416
  %64 = inttoptr i64 %63 to %"class.v8::internal::Isolate"*
  %65 = tail call double @_ZNK2v88internal4Heap31MonotonicallyIncreasingTimeInMsEv(%"class.v8::internal::Heap"* %61) #13
  %66 = fsub double %55, %65
  tail call void (%"class.v8::internal::Isolate"*, i8*, ...) @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"* %64, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.19, i64 0, i64 0), double %66) #13
  br label %87

67:                                               ; preds = %51, %2
  %68 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %68 seq_cst, align 1
  %69 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 0
  %70 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %70, i64 0, i32 111
  store i8 1, i8* %71, align 8
  %72 = load i8, i8* @_ZN2v88internal30FLAG_trace_incremental_markingE, align 1, !range !3
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %79, label %74

74:                                               ; preds = %67
  %75 = bitcast %"class.v8::internal::IncrementalMarking"* %0 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = add i64 %76, -41416
  %78 = inttoptr i64 %77 to %"class.v8::internal::Isolate"*
  tail call void (%"class.v8::internal::Isolate"*, i8*, ...) @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"* %78, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.20, i64 0, i64 0)) #13
  br label %79

79:                                               ; preds = %67, %74
  %80 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  store atomic i32 1, i32* %80 seq_cst, align 4
  br i1 %3, label %81, label %87

81:                                               ; preds = %79
  %82 = bitcast %"class.v8::internal::IncrementalMarking"* %0 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, -41416
  %85 = inttoptr i64 %84 to %"class.v8::internal::Isolate"*
  %86 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %85, i64 0, i32 0, i32 6
  tail call void @_ZN2v88internal10StackGuard16RequestInterruptENS1_13InterruptFlagE(%"class.v8::internal::StackGuard"* %86, i32 2) #13
  br label %87

87:                                               ; preds = %79, %81, %60, %57, %49
  ret void
}

declare void @_ZN2v88internal21IncrementalMarkingJob12ScheduleTaskEPNS0_4HeapENS1_8TaskTypeE(%"class.v8::internal::IncrementalMarkingJob"*, %"class.v8::internal::Heap"*, i32) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal18IncrementalMarking8EpilogueEv(%"class.v8::internal::IncrementalMarking"* nocapture) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 13
  store i8 0, i8* %2, align 2
  %3 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 15
  store i8 0, i8* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18IncrementalMarking19FastForwardScheduleEv(%"class.v8::internal::IncrementalMarking"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 8
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 7
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %3, %5
  br i1 %6, label %7, label %15

7:                                                ; preds = %1
  store i64 %5, i64* %2, align 8
  %8 = load i8, i8* @_ZN2v88internal30FLAG_trace_incremental_markingE, align 1, !range !3
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %7
  %11 = bitcast %"class.v8::internal::IncrementalMarking"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, -41416
  %14 = inttoptr i64 %13 to %"class.v8::internal::Isolate"*
  tail call void (%"class.v8::internal::Isolate"*, i8*, ...) @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"* %14, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.21, i64 0, i64 0)) #13
  br label %15

15:                                               ; preds = %7, %10, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18IncrementalMarking40FastForwardScheduleIfCloseToFinalizationEv(%"class.v8::internal::IncrementalMarking"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 7
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 5
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 2
  %7 = mul nuw i64 %6, 3
  %8 = icmp ugt i64 %3, %7
  br i1 %8, label %9, label %21

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 8
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %11, %3
  br i1 %12, label %13, label %21

13:                                               ; preds = %9
  store i64 %3, i64* %10, align 8
  %14 = load i8, i8* @_ZN2v88internal30FLAG_trace_incremental_markingE, align 1, !range !3
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %13
  %17 = bitcast %"class.v8::internal::IncrementalMarking"* %0 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, -41416
  %20 = inttoptr i64 %19 to %"class.v8::internal::Isolate"*
  tail call void (%"class.v8::internal::Isolate"*, i8*, ...) @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"* %20, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.21, i64 0, i64 0)) #13
  br label %21

21:                                               ; preds = %16, %13, %9, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18IncrementalMarking30ScheduleBytesToMarkBasedOnTimeEd(%"class.v8::internal::IncrementalMarking"* nocapture, double) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 9
  %4 = load double, double* %3, align 8
  %5 = fadd double %4, 1.000000e+01
  %6 = fcmp ogt double %5, %1
  br i1 %6, label %30, label %7

7:                                                ; preds = %2
  %8 = fsub double %1, %4
  %9 = fcmp ogt double %8, 5.000000e+02
  %10 = select i1 %9, double 5.000000e+02, double %8
  store double %1, double* %3, align 8
  %11 = fdiv double %10, 5.000000e+02
  %12 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 5
  %13 = load i64, i64* %12, align 8
  %14 = uitofp i64 %13 to double
  %15 = fmul double %11, %14
  %16 = fptoui double %15 to i64
  %17 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 8
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, %16
  %20 = icmp ult i64 %19, %18
  %21 = select i1 %20, i64 -1, i64 %19
  store i64 %21, i64* %17, align 8
  %22 = load i8, i8* @_ZN2v88internal30FLAG_trace_incremental_markingE, align 1, !range !3
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %30, label %24

24:                                               ; preds = %7
  %25 = bitcast %"class.v8::internal::IncrementalMarking"* %0 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, -41416
  %28 = inttoptr i64 %27 to %"class.v8::internal::Isolate"*
  %29 = lshr i64 %16, 10
  tail call void (%"class.v8::internal::Isolate"*, i8*, ...) @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"* %28, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.22, i64 0, i64 0), i64 %29, double %10) #13
  br label %30

30:                                               ; preds = %24, %7, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal18IncrementalMarking23AddScheduledBytesToMarkEm(%"class.v8::internal::IncrementalMarking"* nocapture, i64) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 8
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %1
  %6 = icmp ult i64 %5, %4
  %7 = select i1 %6, i64 -1, i64 %5
  store i64 %7, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal18IncrementalMarking19AdvanceWithDeadlineEdNS1_16CompletionActionENS0_10StepOriginE(%"class.v8::internal::IncrementalMarking"*, double, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca i8*, align 8
  %6 = alloca i8, align 1
  %7 = alloca i64, align 8
  %8 = alloca [2 x %"class.std::__1::unique_ptr.1200"], align 16
  %9 = alloca i8*, align 8
  %10 = alloca i8, align 1
  %11 = alloca i64, align 8
  %12 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %13 = alloca %"class.v8::internal::GCTracer::Scope", align 8
  %14 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %15 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 0
  %16 = bitcast %"class.v8::internal::IncrementalMarking"* %0 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, -41416
  %19 = inttoptr i64 %18 to %"class.v8::internal::Isolate"*
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %19, i64 0, i32 14, i32 0
  %21 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %21, i64 0, i32 57
  %23 = bitcast %"class.v8::internal::HistogramTimer"* %22 to %"class.v8::internal::TimedHistogram"*
  %24 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %21, i64 0, i32 57, i32 1
  %25 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %21, i64 0, i32 57, i32 0, i32 0, i32 5
  %26 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %26, i64 0, i32 759
  %28 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %27, align 8
  tail call void @_ZN2v88internal14TimedHistogram5StartEPNS_4base12ElapsedTimerEPNS0_7IsolateE(%"class.v8::internal::TimedHistogram"* %23, %"class.v8::base::ElapsedTimer"* %24, %"class.v8::internal::Isolate"* %28) #13
  %29 = load atomic i64, i64* @_ZZN2v88internal18IncrementalMarking19AdvanceWithDeadlineEdNS1_16CompletionActionENS0_10StepOriginEE28trace_event_unique_atomic781 monotonic, align 8
  %30 = inttoptr i64 %29 to i8*
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %32, label %40

32:                                               ; preds = %4
  %33 = tail call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %34 = bitcast %"class.v8::TracingController"* %33 to i8* (%"class.v8::TracingController"*, i8*)***
  %35 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %34, align 8
  %36 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %35, i64 2
  %37 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %36, align 8
  %38 = tail call i8* %37(%"class.v8::TracingController"* %33, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0)) #13
  %39 = ptrtoint i8* %38 to i64
  store atomic volatile i64 %39, i64* @_ZZN2v88internal18IncrementalMarking19AdvanceWithDeadlineEdNS1_16CompletionActionENS0_10StepOriginEE28trace_event_unique_atomic781 monotonic, align 8
  br label %40

40:                                               ; preds = %4, %32
  %41 = phi i8* [ %30, %4 ], [ %38, %32 ]
  %42 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #13
  %43 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %12, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %43, align 8
  %44 = load atomic i8, i8* %41 monotonic, align 1
  %45 = and i8 %44, 5
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %84, label %47

47:                                               ; preds = %40
  %48 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %15, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %48, i64 0, i32 142
  %50 = load i32, i32* %49, align 4
  %51 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i8** %9, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #13
  %52 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #13
  store i8 2, i8* %10, align 1
  %53 = zext i32 %50 to i64
  store i64 %53, i64* %11, align 8
  %54 = bitcast [2 x %"class.std::__1::unique_ptr.1200"]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #13
  %55 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1200"], [2 x %"class.std::__1::unique_ptr.1200"]* %8, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %54, i8 0, i64 16, i1 false) #13
  %56 = tail call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %57 = bitcast %"class.v8::TracingController"* %56 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)***
  %58 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)*** %57, align 8
  %59 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)** %58, i64 3
  %60 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)** %59, align 8
  %61 = call i64 %60(%"class.v8::TracingController"* %56, i8 signext 88, i8* %41, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.23, i64 0, i64 0), i8* null, i64 0, i64 0, i32 1, i8** nonnull %9, i8* nonnull %10, i64* nonnull %11, %"class.std::__1::unique_ptr.1200"* nonnull %55, i32 0) #13
  %62 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1200"], [2 x %"class.std::__1::unique_ptr.1200"]* %8, i64 0, i64 1, i32 0, i32 0, i32 0
  %63 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %62, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %62, align 8
  %64 = icmp eq %"class.v8::ConvertableToTraceFormat"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %47
  %66 = bitcast %"class.v8::ConvertableToTraceFormat"* %63 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %67 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %67, i64 1
  %69 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %68, align 8
  call void %69(%"class.v8::ConvertableToTraceFormat"* nonnull %63) #13
  br label %70

70:                                               ; preds = %65, %47
  %71 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1200"], [2 x %"class.std::__1::unique_ptr.1200"]* %8, i64 0, i64 0, i32 0, i32 0, i32 0
  %72 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %71, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %71, align 16
  %73 = icmp eq %"class.v8::ConvertableToTraceFormat"* %72, null
  br i1 %73, label %79, label %74

74:                                               ; preds = %70
  %75 = bitcast %"class.v8::ConvertableToTraceFormat"* %72 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %76 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %76, i64 1
  %78 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %77, align 8
  call void %78(%"class.v8::ConvertableToTraceFormat"* nonnull %72) #13
  br label %79

79:                                               ; preds = %70, %74
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51)
  %80 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %12, i64 0, i32 1
  %81 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %80, i64 0, i32 0
  store i8* %41, i8** %81, align 8
  %82 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %12, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.23, i64 0, i64 0), i8** %82, align 8
  %83 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %12, i64 0, i32 1, i32 2
  store i64 %61, i64* %83, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %80, %"struct.v8::internal::tracing::ScopedTracer::Data"** %43, align 8
  br label %84

84:                                               ; preds = %40, %79
  %85 = bitcast %"class.v8::internal::GCTracer::Scope"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %85) #13
  %86 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %15, align 8
  %87 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %86, i64 0, i32 80, i32 0, i32 0, i32 0
  %88 = load %"class.v8::internal::GCTracer"*, %"class.v8::internal::GCTracer"** %87, align 8
  call void @_ZN2v88internal8GCTracer5ScopeC1EPS1_NS2_7ScopeIdENS0_10ThreadKindE(%"class.v8::internal::GCTracer::Scope"* nonnull %13, %"class.v8::internal::GCTracer"* %88, i32 0, i32 0) #13
  %89 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %15, align 8
  %90 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %89, i64 0, i32 80, i32 0, i32 0, i32 0
  %91 = load %"class.v8::internal::GCTracer"*, %"class.v8::internal::GCTracer"** %90, align 8
  %92 = call i32 @_ZN2v88internal8GCTracer12CurrentEpochENS1_5Scope7ScopeIdE(%"class.v8::internal::GCTracer"* %91, i32 0) #13
  %93 = load atomic i64, i64* @_ZZN2v88internal18IncrementalMarking19AdvanceWithDeadlineEdNS1_16CompletionActionENS0_10StepOriginEE28trace_event_unique_atomic783 monotonic, align 8
  %94 = inttoptr i64 %93 to i8*
  %95 = icmp eq i64 %93, 0
  br i1 %95, label %96, label %104

96:                                               ; preds = %84
  %97 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %98 = bitcast %"class.v8::TracingController"* %97 to i8* (%"class.v8::TracingController"*, i8*)***
  %99 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %98, align 8
  %100 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %99, i64 2
  %101 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %100, align 8
  %102 = call i8* %101(%"class.v8::TracingController"* %97, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0)) #13
  %103 = ptrtoint i8* %102 to i64
  store atomic volatile i64 %103, i64* @_ZZN2v88internal18IncrementalMarking19AdvanceWithDeadlineEdNS1_16CompletionActionENS0_10StepOriginEE28trace_event_unique_atomic783 monotonic, align 8
  br label %104

104:                                              ; preds = %84, %96
  %105 = phi i8* [ %94, %84 ], [ %102, %96 ]
  %106 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %106) #13
  %107 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %14, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %107, align 8
  %108 = load atomic i8, i8* %105 monotonic, align 1
  %109 = and i8 %108, 5
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %147, label %111

111:                                              ; preds = %104
  %112 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 0) #13
  %113 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %113)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i8** %5, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #13
  %114 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114) #13
  store i8 2, i8* %6, align 1
  %115 = zext i32 %92 to i64
  store i64 %115, i64* %7, align 8
  %116 = bitcast [2 x %"class.std::__1::unique_ptr.1200"]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %116) #13
  %117 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1200"], [2 x %"class.std::__1::unique_ptr.1200"]* %8, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %116, i8 0, i64 16, i1 false) #13
  %118 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %119 = bitcast %"class.v8::TracingController"* %118 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)***
  %120 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)*** %119, align 8
  %121 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)** %120, i64 3
  %122 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1200"*, i32)** %121, align 8
  %123 = call i64 %122(%"class.v8::TracingController"* %118, i8 signext 88, i8* %105, i8* %112, i8* null, i64 0, i64 0, i32 1, i8** nonnull %5, i8* nonnull %6, i64* nonnull %7, %"class.std::__1::unique_ptr.1200"* nonnull %117, i32 0) #13
  %124 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1200"], [2 x %"class.std::__1::unique_ptr.1200"]* %8, i64 0, i64 1, i32 0, i32 0, i32 0
  %125 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %124, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %124, align 8
  %126 = icmp eq %"class.v8::ConvertableToTraceFormat"* %125, null
  br i1 %126, label %132, label %127

127:                                              ; preds = %111
  %128 = bitcast %"class.v8::ConvertableToTraceFormat"* %125 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %129 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %128, align 8
  %130 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %129, i64 1
  %131 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %130, align 8
  call void %131(%"class.v8::ConvertableToTraceFormat"* nonnull %125) #13
  br label %132

132:                                              ; preds = %127, %111
  %133 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1200"], [2 x %"class.std::__1::unique_ptr.1200"]* %8, i64 0, i64 0, i32 0, i32 0, i32 0
  %134 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %133, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %133, align 16
  %135 = icmp eq %"class.v8::ConvertableToTraceFormat"* %134, null
  br i1 %135, label %141, label %136

136:                                              ; preds = %132
  %137 = bitcast %"class.v8::ConvertableToTraceFormat"* %134 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %138 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %137, align 8
  %139 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %138, i64 1
  %140 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %139, align 8
  call void %140(%"class.v8::ConvertableToTraceFormat"* nonnull %134) #13
  br label %141

141:                                              ; preds = %132, %136
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %116) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113)
  %142 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 0) #13
  %143 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %14, i64 0, i32 1
  %144 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %143, i64 0, i32 0
  store i8* %105, i8** %144, align 8
  %145 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %14, i64 0, i32 1, i32 1
  store i8* %142, i8** %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %14, i64 0, i32 1, i32 2
  store i64 %123, i64* %146, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %143, %"struct.v8::internal::tracing::ScopedTracer::Data"** %107, align 8
  br label %147

147:                                              ; preds = %104, %141
  %148 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %15, align 8
  %149 = call double @_ZNK2v88internal4Heap31MonotonicallyIncreasingTimeInMsEv(%"class.v8::internal::Heap"* %148) #13
  %150 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 9
  %151 = load double, double* %150, align 8
  %152 = fadd double %151, 1.000000e+01
  %153 = fcmp ogt double %152, %149
  br i1 %153, label %176, label %154

154:                                              ; preds = %147
  %155 = fsub double %149, %151
  %156 = fcmp ogt double %155, 5.000000e+02
  %157 = select i1 %156, double 5.000000e+02, double %155
  store double %149, double* %150, align 8
  %158 = fdiv double %157, 5.000000e+02
  %159 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 5
  %160 = load i64, i64* %159, align 8
  %161 = uitofp i64 %160 to double
  %162 = fmul double %158, %161
  %163 = fptoui double %162 to i64
  %164 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 8
  %165 = load i64, i64* %164, align 8
  %166 = add i64 %165, %163
  %167 = icmp ult i64 %166, %165
  %168 = select i1 %167, i64 -1, i64 %166
  store i64 %168, i64* %164, align 8
  %169 = load i8, i8* @_ZN2v88internal30FLAG_trace_incremental_markingE, align 1, !range !3
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %176, label %171

171:                                              ; preds = %154
  %172 = load i64, i64* %16, align 8
  %173 = add i64 %172, -41416
  %174 = inttoptr i64 %173 to %"class.v8::internal::Isolate"*
  %175 = lshr i64 %163, 10
  call void (%"class.v8::internal::Isolate"*, i8*, ...) @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"* %174, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.22, i64 0, i64 0), i64 %175, double %157) #13
  br label %176

176:                                              ; preds = %147, %154, %171
  %177 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 7
  %178 = load i64, i64* %177, align 8
  %179 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 5
  %180 = load i64, i64* %179, align 8
  %181 = lshr i64 %180, 2
  %182 = mul nuw i64 %181, 3
  %183 = icmp ugt i64 %178, %182
  br i1 %183, label %184, label %195

184:                                              ; preds = %176
  %185 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 8
  %186 = load i64, i64* %185, align 8
  %187 = icmp ult i64 %186, %178
  br i1 %187, label %188, label %195

188:                                              ; preds = %184
  store i64 %178, i64* %185, align 8
  %189 = load i8, i8* @_ZN2v88internal30FLAG_trace_incremental_markingE, align 1, !range !3
  %190 = icmp eq i8 %189, 0
  br i1 %190, label %195, label %191

191:                                              ; preds = %188
  %192 = load i64, i64* %16, align 8
  %193 = add i64 %192, -41416
  %194 = inttoptr i64 %193 to %"class.v8::internal::Isolate"*
  call void (%"class.v8::internal::Isolate"*, i8*, ...) @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"* %194, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.21, i64 0, i64 0)) #13
  br label %195

195:                                              ; preds = %176, %184, %188, %191
  %196 = call i32 @_ZN2v88internal18IncrementalMarking4StepEdNS1_16CompletionActionENS0_10StepOriginE(%"class.v8::internal::IncrementalMarking"* %0, double 1.000000e+00, i32 %2, i32 %3)
  %197 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %107, align 8
  %198 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %197, null
  br i1 %198, label %215, label %199

199:                                              ; preds = %195
  %200 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %14, i64 0, i32 1, i32 0
  %201 = load i8*, i8** %200, align 8
  %202 = load atomic i8, i8* %201 monotonic, align 1
  %203 = icmp eq i8 %202, 0
  br i1 %203, label %215, label %204

204:                                              ; preds = %199
  %205 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %206 = load i8*, i8** %200, align 8
  %207 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %14, i64 0, i32 1, i32 1
  %208 = load i8*, i8** %207, align 8
  %209 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %14, i64 0, i32 1, i32 2
  %210 = load i64, i64* %209, align 8
  %211 = bitcast %"class.v8::TracingController"* %205 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %212 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %211, align 8
  %213 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %212, i64 5
  %214 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %213, align 8
  call void %214(%"class.v8::TracingController"* %205, i8* %206, i8* %208, i64 %210) #13
  br label %215

215:                                              ; preds = %195, %199, %204
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %106) #13
  call void @_ZN2v88internal8GCTracer5ScopeD1Ev(%"class.v8::internal::GCTracer::Scope"* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %85) #13
  %216 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %43, align 8
  %217 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %216, null
  br i1 %217, label %234, label %218

218:                                              ; preds = %215
  %219 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %12, i64 0, i32 1, i32 0
  %220 = load i8*, i8** %219, align 8
  %221 = load atomic i8, i8* %220 monotonic, align 1
  %222 = icmp eq i8 %221, 0
  br i1 %222, label %234, label %223

223:                                              ; preds = %218
  %224 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %225 = load i8*, i8** %219, align 8
  %226 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %12, i64 0, i32 1, i32 1
  %227 = load i8*, i8** %226, align 8
  %228 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %12, i64 0, i32 1, i32 2
  %229 = load i64, i64* %228, align 8
  %230 = bitcast %"class.v8::TracingController"* %224 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %231 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %230, align 8
  %232 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %231, i64 5
  %233 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %232, align 8
  call void %233(%"class.v8::TracingController"* %224, i8* %225, i8* %227, i64 %229) #13
  br label %234

234:                                              ; preds = %215, %218, %223
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #13
  %235 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %25, align 8
  %236 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %235, i64 0, i32 759
  %237 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %236, align 8
  call void @_ZN2v88internal14TimedHistogram4StopEPNS_4base12ElapsedTimerEPNS0_7IsolateE(%"class.v8::internal::TimedHistogram"* %23, %"class.v8::base::ElapsedTimer"* %24, %"class.v8::internal::Isolate"* %237) #13
  ret i32 %196
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal18IncrementalMarking4StepEdNS1_16CompletionActionENS0_10StepOriginE(%"class.v8::internal::IncrementalMarking"*, double, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca double, align 8
  %6 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 0
  %7 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %6, align 8
  %8 = tail call double @_ZNK2v88internal4Heap31MonotonicallyIncreasingTimeInMsEv(%"class.v8::internal::Heap"* %7) #13
  %9 = bitcast double* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  store double 0.000000e+00, double* %5, align 8
  %10 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i8, i8* %10 seq_cst, align 1
  %12 = icmp eq i8 %11, 1
  br i1 %12, label %13, label %121

13:                                               ; preds = %4
  %14 = load i8, i8* @_ZN2v88internal23FLAG_concurrent_markingE, align 1, !range !3
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 1
  %18 = load %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::MarkCompactCollector"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::MarkCompactCollector", %"class.v8::internal::MarkCompactCollector"* %18, i64 0, i32 14, i32 0, i32 0, i32 0
  %20 = load %"class.v8::internal::MarkingWorklists::Local"*, %"class.v8::internal::MarkingWorklists::Local"** %19, align 8
  tail call void @_ZN2v88internal16MarkingWorklists5Local11MergeOnHoldEv(%"class.v8::internal::MarkingWorklists::Local"* %20) #13
  br label %21

21:                                               ; preds = %13, %16
  %22 = load i8, i8* @_ZN2v88internal30FLAG_trace_incremental_markingE, align 1, !range !3
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %32, label %24

24:                                               ; preds = %21
  %25 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %6, align 8
  %26 = ptrtoint %"class.v8::internal::Heap"* %25 to i64
  %27 = add i64 %26, -41416
  %28 = inttoptr i64 %27 to %"class.v8::internal::Isolate"*
  %29 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %25, i64 0, i32 80, i32 0, i32 0, i32 0
  %30 = load %"class.v8::internal::GCTracer"*, %"class.v8::internal::GCTracer"** %29, align 8
  %31 = tail call double @_ZNK2v88internal8GCTracer44IncrementalMarkingSpeedInBytesPerMillisecondEv(%"class.v8::internal::GCTracer"* %30) #13
  tail call void (%"class.v8::internal::Isolate"*, i8*, ...) @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"* %28, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.28, i64 0, i64 0), double %31) #13
  br label %32

32:                                               ; preds = %21, %24
  %33 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %6, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %33, i64 0, i32 80, i32 0, i32 0, i32 0
  %35 = load %"class.v8::internal::GCTracer"*, %"class.v8::internal::GCTracer"** %34, align 8
  %36 = tail call double @_ZNK2v88internal8GCTracer44IncrementalMarkingSpeedInBytesPerMillisecondEv(%"class.v8::internal::GCTracer"* %35) #13
  %37 = tail call i64 @_ZN2v88internal17GCIdleTimeHandler23EstimateMarkingStepSizeEdd(double %1, double %36) #13
  %38 = tail call i64 @_ZN2v88internal18IncrementalMarking22ComputeStepSizeInBytesENS0_10StepOriginE(%"class.v8::internal::IncrementalMarking"* %0, i32 %3)
  %39 = icmp ult i64 %37, %38
  %40 = select i1 %39, i64 %37, i64 %38
  %41 = icmp ugt i64 %40, 65536
  %42 = select i1 %41, i64 %40, i64 65536
  %43 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 1
  %44 = load %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::MarkCompactCollector"** %43, align 8
  %45 = call i64 @_ZN2v88internal20MarkCompactCollector22ProcessMarkingWorklistILNS1_29MarkingWorklistProcessingModeE0EEEmm(%"class.v8::internal::MarkCompactCollector"* %44, i64 %42) #13
  %46 = load %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::MarkCompactCollector"** %43, align 8
  %47 = getelementptr inbounds %"class.v8::internal::MarkCompactCollector", %"class.v8::internal::MarkCompactCollector"* %46, i64 0, i32 14, i32 0, i32 0, i32 0
  %48 = load %"class.v8::internal::MarkingWorklists::Local"*, %"class.v8::internal::MarkingWorklists::Local"** %47, align 8
  %49 = call zeroext i1 @_ZN2v88internal16MarkingWorklists5Local7IsEmptyEv(%"class.v8::internal::MarkingWorklists::Local"* %48) #13
  %50 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %6, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %50, i64 0, i32 96, i32 0, i32 0, i32 0
  %52 = load %"class.v8::internal::LocalEmbedderHeapTracer"*, %"class.v8::internal::LocalEmbedderHeapTracer"** %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::LocalEmbedderHeapTracer", %"class.v8::internal::LocalEmbedderHeapTracer"* %52, i64 0, i32 1
  %54 = load %"class.v8::EmbedderHeapTracer"*, %"class.v8::EmbedderHeapTracer"** %53, align 8
  %55 = icmp eq %"class.v8::EmbedderHeapTracer"* %54, null
  br i1 %55, label %63, label %56

56:                                               ; preds = %32
  %57 = uitofp i64 %42 to double
  %58 = fdiv double %57, %36
  %59 = fcmp olt double %58, %1
  %60 = select i1 %59, double %58, double %1
  %61 = call i32 @_ZN2v88internal18IncrementalMarking12EmbedderStepEdPd(%"class.v8::internal::IncrementalMarking"* %0, double %60, double* nonnull %5)
  %62 = icmp ne i32 %61, 1
  br label %63

63:                                               ; preds = %32, %56
  %64 = phi double [ %60, %56 ], [ 0.000000e+00, %32 ]
  %65 = phi i1 [ %62, %56 ], [ true, %32 ]
  %66 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 7
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, %45
  store i64 %68, i64* %66, align 8
  %69 = and i1 %49, %65
  br i1 %69, label %70, label %108

70:                                               ; preds = %63
  %71 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 15
  %72 = load i8, i8* %71, align 4, !range !3
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %74, label %107

74:                                               ; preds = %70
  %75 = load i8, i8* @_ZN2v88internal30FLAG_trace_incremental_markingE, align 1, !range !3
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %82, label %77

77:                                               ; preds = %74
  %78 = bitcast %"class.v8::internal::IncrementalMarking"* %0 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, -41416
  %81 = inttoptr i64 %80 to %"class.v8::internal::Isolate"*
  call void (%"class.v8::internal::Isolate"*, i8*, ...) @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"* %81, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.16, i64 0, i64 0)) #13
  br label %82

82:                                               ; preds = %77, %74
  %83 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  store atomic i32 2, i32* %83 seq_cst, align 4
  %84 = icmp eq i32 %2, 0
  br i1 %84, label %85, label %91

85:                                               ; preds = %82
  %86 = bitcast %"class.v8::internal::IncrementalMarking"* %0 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = add i64 %87, -41416
  %89 = inttoptr i64 %88 to %"class.v8::internal::Isolate"*
  %90 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %89, i64 0, i32 0, i32 6
  call void @_ZN2v88internal10StackGuard16RequestInterruptENS1_13InterruptFlagE(%"class.v8::internal::StackGuard"* %90, i32 2) #13
  br label %91

91:                                               ; preds = %82, %85
  %92 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 8
  %93 = load i64, i64* %92, align 8
  %94 = load i64, i64* %66, align 8
  %95 = icmp ult i64 %93, %94
  br i1 %95, label %96, label %104

96:                                               ; preds = %91
  store i64 %94, i64* %92, align 8
  %97 = load i8, i8* @_ZN2v88internal30FLAG_trace_incremental_markingE, align 1, !range !3
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %104, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.v8::internal::IncrementalMarking"* %0 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = add i64 %101, -41416
  %103 = inttoptr i64 %102 to %"class.v8::internal::Isolate"*
  call void (%"class.v8::internal::Isolate"*, i8*, ...) @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"* %103, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.21, i64 0, i64 0)) #13
  br label %104

104:                                              ; preds = %91, %96, %99
  %105 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 17
  %106 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %6, align 8
  call void @_ZN2v88internal21IncrementalMarkingJob5StartEPNS0_4HeapE(%"class.v8::internal::IncrementalMarkingJob"* %105, %"class.v8::internal::Heap"* %106) #13
  br label %108

107:                                              ; preds = %70
  call void @_ZN2v88internal18IncrementalMarking15MarkingCompleteENS1_16CompletionActionE(%"class.v8::internal::IncrementalMarking"* %0, i32 %2)
  br label %108

108:                                              ; preds = %104, %107, %63
  %109 = phi i32 [ 2, %107 ], [ 2, %104 ], [ 1, %63 ]
  %110 = load i8, i8* @_ZN2v88internal23FLAG_concurrent_markingE, align 1, !range !3
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %119, label %112

112:                                              ; preds = %108
  %113 = load %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::MarkCompactCollector"** %43, align 8
  %114 = getelementptr inbounds %"class.v8::internal::MarkCompactCollector", %"class.v8::internal::MarkCompactCollector"* %113, i64 0, i32 14, i32 0, i32 0, i32 0
  %115 = load %"class.v8::internal::MarkingWorklists::Local"*, %"class.v8::internal::MarkingWorklists::Local"** %114, align 8
  call void @_ZN2v88internal16MarkingWorklists5Local9ShareWorkEv(%"class.v8::internal::MarkingWorklists::Local"* %115) #13
  %116 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %6, align 8
  %117 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %116, i64 0, i32 87, i32 0, i32 0, i32 0
  %118 = load %"class.v8::internal::ConcurrentMarking"*, %"class.v8::internal::ConcurrentMarking"** %117, align 8
  call void @_ZN2v88internal17ConcurrentMarking21RescheduleJobIfNeededENS_12TaskPriorityE(%"class.v8::internal::ConcurrentMarking"* %118, i8 zeroext 1) #13
  br label %119

119:                                              ; preds = %108, %112
  %120 = lshr i64 %42, 10
  br label %121

121:                                              ; preds = %119, %4
  %122 = phi double [ %64, %119 ], [ 0.000000e+00, %4 ]
  %123 = phi i64 [ %45, %119 ], [ 0, %4 ]
  %124 = phi i64 [ %120, %119 ], [ 0, %4 ]
  %125 = phi i32 [ %109, %119 ], [ 1, %4 ]
  %126 = load atomic i8, i8* %10 seq_cst, align 1
  %127 = icmp eq i8 %126, 1
  br i1 %127, label %128, label %137

128:                                              ; preds = %121
  %129 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %6, align 8
  %130 = call double @_ZNK2v88internal4Heap31MonotonicallyIncreasingTimeInMsEv(%"class.v8::internal::Heap"* %129) #13
  %131 = fsub double %130, %8
  %132 = load double, double* %5, align 8
  %133 = fsub double %131, %132
  %134 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %6, align 8
  %135 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %134, i64 0, i32 80, i32 0, i32 0, i32 0
  %136 = load %"class.v8::internal::GCTracer"*, %"class.v8::internal::GCTracer"** %135, align 8
  call void @_ZN2v88internal8GCTracer25AddIncrementalMarkingStepEdm(%"class.v8::internal::GCTracer"* %136, double %133, i64 %123) #13
  br label %137

137:                                              ; preds = %128, %121
  %138 = load i8, i8* @_ZN2v88internal30FLAG_trace_incremental_markingE, align 1, !range !3
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %151, label %140

140:                                              ; preds = %137
  %141 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %6, align 8
  %142 = ptrtoint %"class.v8::internal::Heap"* %141 to i64
  %143 = add i64 %142, -41416
  %144 = inttoptr i64 %143 to %"class.v8::internal::Isolate"*
  %145 = icmp eq i32 %3, 0
  %146 = select i1 %145, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.31, i64 0, i64 0)
  %147 = lshr i64 %123, 10
  %148 = load double, double* %5, align 8
  %149 = call double @_ZNK2v88internal4Heap31MonotonicallyIncreasingTimeInMsEv(%"class.v8::internal::Heap"* %141) #13
  %150 = fsub double %149, %8
  call void (%"class.v8::internal::Isolate"*, i8*, ...) @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"* %144, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.29, i64 0, i64 0), i8* %146, i64 %147, i64 %124, double %148, double %122, double %150) #13
  br label %151

151:                                              ; preds = %137, %140
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  ret i32 %125
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal18IncrementalMarking31StepSizeToKeepUpWithAllocationsEv(%"class.v8::internal::IncrementalMarking"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %3, i64 0, i32 105
  %5 = load i64, i64* %4, align 8
  %6 = tail call i64 @_ZN2v88internal4Heap26OldGenerationSizeOfObjectsEv(%"class.v8::internal::Heap"* %3) #13
  %7 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %3, i64 0, i32 106
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.usub.sat.i64(i64 %6, i64 %8) #13
  %10 = add i64 %9, %5
  %11 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 6
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  store i64 %10, i64* %11, align 8
  ret i64 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal18IncrementalMarking22StepSizeToMakeProgressEv(%"class.v8::internal::IncrementalMarking"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %3, i64 0, i32 24
  %5 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %5, i64 0, i32 4, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 18
  %9 = tail call i64 @_ZN2v88internal17MemoryChunkLayout27AllocatableMemoryInDataPageEv() #13
  %10 = mul i64 %8, %9
  %11 = add i64 %10, 67108864
  %12 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %2, align 8
  %13 = tail call zeroext i1 @_ZN2v88internal4Heap22CanExpandOldGenerationEm(%"class.v8::internal::Heap"* %12, i64 %11) #13
  br i1 %13, label %18, label %14

14:                                               ; preds = %1
  %15 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %2, align 8
  %16 = tail call i64 @_ZN2v88internal4Heap26OldGenerationSizeOfObjectsEv(%"class.v8::internal::Heap"* %15) #13
  %17 = lshr i64 %16, 5
  br label %26

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 5
  %20 = load i64, i64* %19, align 8
  %21 = lshr i64 %20, 8
  %22 = icmp ult i64 %20, 16777216
  %23 = select i1 %22, i64 65536, i64 %21
  %24 = icmp ult i64 %23, 262144
  %25 = select i1 %24, i64 %23, i64 262144
  br label %26

26:                                               ; preds = %18, %14
  %27 = phi i64 [ %25, %18 ], [ %17, %14 ]
  ret i64 %27
}

declare zeroext i1 @_ZN2v88internal4Heap22CanExpandOldGenerationEm(%"class.v8::internal::Heap"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18IncrementalMarking36ScheduleBytesToMarkBasedOnAllocationEv(%"class.v8::internal::IncrementalMarking"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %3, i64 0, i32 24
  %5 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %5, i64 0, i32 4, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 18
  %9 = tail call i64 @_ZN2v88internal17MemoryChunkLayout27AllocatableMemoryInDataPageEv() #13
  %10 = mul i64 %8, %9
  %11 = add i64 %10, 67108864
  %12 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %2, align 8
  %13 = tail call zeroext i1 @_ZN2v88internal4Heap22CanExpandOldGenerationEm(%"class.v8::internal::Heap"* %12, i64 %11) #13
  br i1 %13, label %18, label %14

14:                                               ; preds = %1
  %15 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %2, align 8
  %16 = tail call i64 @_ZN2v88internal4Heap26OldGenerationSizeOfObjectsEv(%"class.v8::internal::Heap"* %15) #13
  %17 = lshr i64 %16, 5
  br label %26

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 5
  %20 = load i64, i64* %19, align 8
  %21 = lshr i64 %20, 8
  %22 = icmp ult i64 %20, 16777216
  %23 = select i1 %22, i64 65536, i64 %21
  %24 = icmp ult i64 %23, 262144
  %25 = select i1 %24, i64 %23, i64 262144
  br label %26

26:                                               ; preds = %14, %18
  %27 = phi i64 [ %25, %18 ], [ %17, %14 ]
  %28 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %2, align 8
  %29 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %28, i64 0, i32 105
  %30 = load i64, i64* %29, align 8
  %31 = tail call i64 @_ZN2v88internal4Heap26OldGenerationSizeOfObjectsEv(%"class.v8::internal::Heap"* %28) #13
  %32 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %28, i64 0, i32 106
  %33 = load i64, i64* %32, align 8
  %34 = tail call i64 @llvm.usub.sat.i64(i64 %31, i64 %33) #13
  %35 = add i64 %34, %30
  %36 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 6
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %35, %37
  store i64 %35, i64* %36, align 8
  %39 = add i64 %38, %27
  %40 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 8
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %39, %41
  %43 = icmp ult i64 %42, %41
  %44 = select i1 %43, i64 -1, i64 %42
  store i64 %44, i64* %40, align 8
  %45 = load i8, i8* @_ZN2v88internal30FLAG_trace_incremental_markingE, align 1, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %26
  %48 = bitcast %"class.v8::internal::IncrementalMarking"* %0 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, -41416
  %51 = inttoptr i64 %50 to %"class.v8::internal::Isolate"*
  %52 = lshr i64 %39, 10
  %53 = lshr i64 %27, 10
  %54 = lshr i64 %38, 10
  tail call void (%"class.v8::internal::Isolate"*, i8*, ...) @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"* %51, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.24, i64 0, i64 0), i64 %52, i64 %53, i64 %54) #13
  br label %55

55:                                               ; preds = %26, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18IncrementalMarking28FetchBytesMarkedConcurrentlyEv(%"class.v8::internal::IncrementalMarking"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = load i8, i8* @_ZN2v88internal23FLAG_concurrent_markingE, align 1, !range !3
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %30, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %6, i64 0, i32 87, i32 0, i32 0, i32 0
  %8 = load %"class.v8::internal::ConcurrentMarking"*, %"class.v8::internal::ConcurrentMarking"** %7, align 8
  %9 = tail call i64 @_ZN2v88internal17ConcurrentMarking16TotalMarkedBytesEv(%"class.v8::internal::ConcurrentMarking"* %8) #13
  %10 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 10
  %11 = load i64, i64* %10, align 8
  %12 = icmp ugt i64 %9, %11
  br i1 %12, label %13, label %18

13:                                               ; preds = %4
  %14 = sub i64 %9, %11
  %15 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 7
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %14, %16
  store i64 %17, i64* %15, align 8
  store i64 %9, i64* %10, align 8
  br label %18

18:                                               ; preds = %13, %4
  %19 = load i8, i8* @_ZN2v88internal30FLAG_trace_incremental_markingE, align 1, !range !3
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %30, label %21

21:                                               ; preds = %18
  %22 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %5, align 8
  %23 = ptrtoint %"class.v8::internal::Heap"* %22 to i64
  %24 = add i64 %23, -41416
  %25 = inttoptr i64 %24 to %"class.v8::internal::Isolate"*
  %26 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %22, i64 0, i32 87, i32 0, i32 0, i32 0
  %27 = load %"class.v8::internal::ConcurrentMarking"*, %"class.v8::internal::ConcurrentMarking"** %26, align 8
  %28 = tail call i64 @_ZN2v88internal17ConcurrentMarking16TotalMarkedBytesEv(%"class.v8::internal::ConcurrentMarking"* %27) #13
  %29 = lshr i64 %28, 10
  tail call void (%"class.v8::internal::Isolate"*, i8*, ...) @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"* %25, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.25, i64 0, i64 0), i64 %29) #13
  br label %30

30:                                               ; preds = %21, %18, %1
  ret void
}

declare i64 @_ZN2v88internal17ConcurrentMarking16TotalMarkedBytesEv(%"class.v8::internal::ConcurrentMarking"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal18IncrementalMarking22ComputeStepSizeInBytesENS0_10StepOriginE(%"class.v8::internal::IncrementalMarking"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = load i8, i8* @_ZN2v88internal23FLAG_concurrent_markingE, align 1, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %31, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 0
  %7 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %7, i64 0, i32 87, i32 0, i32 0, i32 0
  %9 = load %"class.v8::internal::ConcurrentMarking"*, %"class.v8::internal::ConcurrentMarking"** %8, align 8
  %10 = tail call i64 @_ZN2v88internal17ConcurrentMarking16TotalMarkedBytesEv(%"class.v8::internal::ConcurrentMarking"* %9) #13
  %11 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 10
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %19

14:                                               ; preds = %5
  %15 = sub i64 %10, %12
  %16 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 7
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %15, %17
  store i64 %18, i64* %16, align 8
  store i64 %10, i64* %11, align 8
  br label %19

19:                                               ; preds = %14, %5
  %20 = load i8, i8* @_ZN2v88internal30FLAG_trace_incremental_markingE, align 1, !range !3
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %50, label %22

22:                                               ; preds = %19
  %23 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %6, align 8
  %24 = ptrtoint %"class.v8::internal::Heap"* %23 to i64
  %25 = add i64 %24, -41416
  %26 = inttoptr i64 %25 to %"class.v8::internal::Isolate"*
  %27 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %23, i64 0, i32 87, i32 0, i32 0, i32 0
  %28 = load %"class.v8::internal::ConcurrentMarking"*, %"class.v8::internal::ConcurrentMarking"** %27, align 8
  %29 = tail call i64 @_ZN2v88internal17ConcurrentMarking16TotalMarkedBytesEv(%"class.v8::internal::ConcurrentMarking"* %28) #13
  %30 = lshr i64 %29, 10
  tail call void (%"class.v8::internal::Isolate"*, i8*, ...) @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"* %26, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.25, i64 0, i64 0), i64 %30) #13
  br label %31

31:                                               ; preds = %2, %22
  %32 = load i8, i8* @_ZN2v88internal30FLAG_trace_incremental_markingE, align 1
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %50, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 8
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 7
  %38 = load i64, i64* %37, align 8
  %39 = icmp ugt i64 %36, %38
  %40 = bitcast %"class.v8::internal::IncrementalMarking"* %0 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %41, -41416
  %43 = inttoptr i64 %42 to %"class.v8::internal::Isolate"*
  br i1 %39, label %44, label %47

44:                                               ; preds = %34
  %45 = sub i64 %36, %38
  %46 = lshr i64 %45, 10
  tail call void (%"class.v8::internal::Isolate"*, i8*, ...) @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"* %43, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.26, i64 0, i64 0), i64 %46) #13
  br label %50

47:                                               ; preds = %34
  %48 = sub i64 %38, %36
  %49 = lshr i64 %48, 10
  tail call void (%"class.v8::internal::Isolate"*, i8*, ...) @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"* %43, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.27, i64 0, i64 0), i64 %49) #13
  br label %50

50:                                               ; preds = %19, %31, %44, %47
  %51 = icmp eq i32 %1, 0
  %52 = select i1 %51, i64 1048576, i64 0
  %53 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 7
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %54, %52
  %56 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %0, i64 0, i32 8
  %57 = load i64, i64* %56, align 8
  %58 = call i64 @llvm.usub.sat.i64(i64 %57, i64 %55)
  ret i64 %58
}

declare void @_ZN2v88internal16MarkingWorklists5Local11MergeOnHoldEv(%"class.v8::internal::MarkingWorklists::Local"*) local_unnamed_addr #2

declare double @_ZNK2v88internal8GCTracer44IncrementalMarkingSpeedInBytesPerMillisecondEv(%"class.v8::internal::GCTracer"*) local_unnamed_addr #2

declare i64 @_ZN2v88internal17GCIdleTimeHandler23EstimateMarkingStepSizeEdd(double, double) local_unnamed_addr #2

declare void @_ZN2v88internal16MarkingWorklists5Local9ShareWorkEv(%"class.v8::internal::MarkingWorklists::Local"*) local_unnamed_addr #2

declare void @_ZN2v88internal17ConcurrentMarking21RescheduleJobIfNeededENS_12TaskPriorityE(%"class.v8::internal::ConcurrentMarking"*, i8 zeroext) local_unnamed_addr #2

declare void @_ZN2v88internal8GCTracer25AddIncrementalMarkingStepEdm(%"class.v8::internal::GCTracer"*, double, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal18AllocationObserverD2Ev(%"class.v8::internal::AllocationObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal18IncrementalMarking8ObserverD0Ev(%"class.v8::internal::IncrementalMarking::Observer"*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %"class.v8::internal::IncrementalMarking::Observer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal18AllocationObserver15GetNextStepSizeEv(%"class.v8::internal::AllocationObserver"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::AllocationObserver", %"class.v8::internal::AllocationObserver"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

declare void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*) local_unnamed_addr #2

declare void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.644"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkElEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.640"*, %"class.v8::internal::MemoryChunk"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.1207"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.v8::internal::MemoryChunk"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.640", %"class.std::__1::__hash_table.640"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.v8::internal::MemoryChunk"*
  br i1 %23, label %84, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #13, !range !7
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.640", %"class.std::__1::__hash_table.640"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.644"**, %"struct.std::__1::__hash_node_base.644"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.644"* %40, null
  br i1 %41, label %84, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br i1 %27, label %44, label %66

44:                                               ; preds = %42, %61
  %45 = phi %"struct.std::__1::__hash_node_base.644"* [ %47, %61 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644", %"struct.std::__1::__hash_node_base.644"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.644"* %47, null
  br i1 %48, label %84, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644", %"struct.std::__1::__hash_node_base.644"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.644"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %61, label %54

54:                                               ; preds = %49
  %55 = icmp ult i64 %52, %22
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %52, %22
  br label %58

58:                                               ; preds = %56, %54
  %59 = phi i64 [ %57, %56 ], [ %52, %54 ]
  %60 = icmp eq i64 %59, %36
  br i1 %60, label %61, label %84

61:                                               ; preds = %58, %49
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644", %"struct.std::__1::__hash_node_base.644"* %47, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.644"* %62 to %"class.v8::internal::MemoryChunk"**
  %64 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %63, align 8
  %65 = icmp eq %"class.v8::internal::MemoryChunk"* %64, %24
  br i1 %65, label %175, label %44

66:                                               ; preds = %42, %79
  %67 = phi %"struct.std::__1::__hash_node_base.644"* [ %69, %79 ], [ %40, %42 ]
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644", %"struct.std::__1::__hash_node_base.644"* %67, i64 0, i32 0
  %69 = load %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %68, align 8
  %70 = icmp eq %"struct.std::__1::__hash_node_base.644"* %69, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644", %"struct.std::__1::__hash_node_base.644"* %69, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base.644"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = icmp eq i64 %74, %20
  %76 = and i64 %74, %43
  %77 = icmp eq i64 %76, %36
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %84

79:                                               ; preds = %71
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644", %"struct.std::__1::__hash_node_base.644"* %69, i64 2
  %81 = bitcast %"struct.std::__1::__hash_node_base.644"* %80 to %"class.v8::internal::MemoryChunk"**
  %82 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %81, align 8
  %83 = icmp eq %"class.v8::internal::MemoryChunk"* %82, %24
  br i1 %83, label %175, label %66

84:                                               ; preds = %71, %66, %58, %44, %35, %5
  %85 = phi i64 [ %36, %35 ], [ undef, %5 ], [ %36, %44 ], [ %36, %58 ], [ %36, %66 ], [ %36, %71 ]
  %86 = tail call i8* @_Znwm(i64 32) #14, !noalias !8
  %87 = getelementptr inbounds i8, i8* %86, i64 16
  %88 = bitcast %"class.std::__1::tuple"* %3 to i64**
  %89 = load i64*, i64** %88, align 8, !noalias !8
  %90 = load i64, i64* %89, align 8, !noalias !8
  %91 = bitcast i8* %87 to i64*
  store i64 %90, i64* %91, align 8, !noalias !8
  %92 = getelementptr inbounds i8, i8* %86, i64 24
  %93 = bitcast i8* %92 to i64*
  store i64 0, i64* %93, align 8, !noalias !8
  %94 = getelementptr inbounds i8, i8* %86, i64 8
  %95 = bitcast i8* %94 to i64*
  store i64 %20, i64* %95, align 8, !noalias !8
  %96 = bitcast i8* %86 to %"struct.std::__1::__hash_node_base.644"**
  store %"struct.std::__1::__hash_node_base.644"* null, %"struct.std::__1::__hash_node_base.644"** %96, align 8, !noalias !8
  %97 = getelementptr inbounds %"class.std::__1::__hash_table.640", %"class.std::__1::__hash_table.640"* %0, i64 0, i32 2, i32 0, i32 0
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  %100 = uitofp i64 %99 to float
  %101 = uitofp i64 %22 to float
  %102 = getelementptr inbounds %"class.std::__1::__hash_table.640", %"class.std::__1::__hash_table.640"* %0, i64 0, i32 3, i32 0, i32 0
  %103 = load float, float* %102, align 4
  %104 = fmul float %103, %101
  %105 = fcmp olt float %104, %100
  %106 = or i1 %23, %105
  br i1 %106, label %107, label %130

107:                                              ; preds = %84
  %108 = shl i64 %22, 1
  %109 = icmp ult i64 %22, 3
  %110 = tail call i64 @llvm.ctpop.i64(i64 %22) #13, !range !7
  %111 = icmp ugt i64 %110, 1
  %112 = or i1 %109, %111
  %113 = zext i1 %112 to i64
  %114 = or i64 %108, %113
  %115 = fdiv float %100, %103
  %116 = tail call float @llvm.ceil.f32(float %115) #13
  %117 = fptoui float %116 to i64
  %118 = icmp ult i64 %114, %117
  %119 = select i1 %118, i64 %117, i64 %114
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkElEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.640"* %0, i64 %119)
  %120 = load i64, i64* %21, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %120) #13, !range !7
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %107
  %124 = add i64 %120, -1
  %125 = and i64 %124, %20
  br label %130

126:                                              ; preds = %107
  %127 = icmp ult i64 %20, %120
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %20, %120
  br label %130

130:                                              ; preds = %128, %126, %123, %84
  %131 = phi i64 [ %22, %84 ], [ %120, %123 ], [ %120, %126 ], [ %120, %128 ]
  %132 = phi i64 [ %85, %84 ], [ %125, %123 ], [ %20, %126 ], [ %129, %128 ]
  %133 = getelementptr inbounds %"class.std::__1::__hash_table.640", %"class.std::__1::__hash_table.640"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %134 = load %"struct.std::__1::__hash_node_base.644"**, %"struct.std::__1::__hash_node_base.644"*** %133, align 8
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %134, i64 %132
  %136 = load %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.644"* %136, null
  br i1 %137, label %138, label %164

138:                                              ; preds = %130
  %139 = getelementptr inbounds %"class.std::__1::__hash_table.640", %"class.std::__1::__hash_table.640"* %0, i64 0, i32 1, i32 0, i32 0
  %140 = bitcast %"struct.std::__1::__hash_node_base.644"* %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast i8* %86 to i64*
  store i64 %141, i64* %142, align 8
  %143 = bitcast %"struct.std::__1::__hash_node_base.644"* %139 to i8**
  store i8* %86, i8** %143, align 8
  store %"struct.std::__1::__hash_node_base.644"* %139, %"struct.std::__1::__hash_node_base.644"** %135, align 8
  %144 = load %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %96, align 8
  %145 = icmp eq %"struct.std::__1::__hash_node_base.644"* %144, null
  br i1 %145, label %171, label %146

146:                                              ; preds = %138
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644", %"struct.std::__1::__hash_node_base.644"* %144, i64 1
  %148 = bitcast %"struct.std::__1::__hash_node_base.644"* %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = tail call i64 @llvm.ctpop.i64(i64 %131) #13, !range !7
  %151 = icmp ugt i64 %150, 1
  br i1 %151, label %155, label %152

152:                                              ; preds = %146
  %153 = add i64 %131, -1
  %154 = and i64 %149, %153
  br label %159

155:                                              ; preds = %146
  %156 = icmp ult i64 %149, %131
  br i1 %156, label %159, label %157

157:                                              ; preds = %155
  %158 = urem i64 %149, %131
  br label %159

159:                                              ; preds = %152, %155, %157
  %160 = phi i64 [ %154, %152 ], [ %158, %157 ], [ %149, %155 ]
  %161 = load %"struct.std::__1::__hash_node_base.644"**, %"struct.std::__1::__hash_node_base.644"*** %133, align 8
  %162 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %161, i64 %160
  %163 = bitcast %"struct.std::__1::__hash_node_base.644"** %162 to i8**
  br label %169

164:                                              ; preds = %130
  %165 = bitcast %"struct.std::__1::__hash_node_base.644"* %136 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast i8* %86 to i64*
  store i64 %166, i64* %167, align 8
  %168 = bitcast %"struct.std::__1::__hash_node_base.644"* %136 to i8**
  br label %169

169:                                              ; preds = %159, %164
  %170 = phi i8** [ %168, %164 ], [ %163, %159 ]
  store i8* %86, i8** %170, align 8
  br label %171

171:                                              ; preds = %169, %138
  %172 = bitcast i8* %86 to %"struct.std::__1::__hash_node_base.644"*
  %173 = load i64, i64* %97, align 8
  %174 = add i64 %173, 1
  store i64 %174, i64* %97, align 8
  br label %175

175:                                              ; preds = %79, %61, %171
  %176 = phi i8 [ 1, %171 ], [ 0, %61 ], [ 0, %79 ]
  %177 = phi %"struct.std::__1::__hash_node_base.644"* [ %172, %171 ], [ %47, %61 ], [ %69, %79 ]
  %178 = insertvalue { %"struct.std::__1::__hash_node_base.644"*, i8 } undef, %"struct.std::__1::__hash_node_base.644"* %177, 0
  %179 = insertvalue { %"struct.std::__1::__hash_node_base.644"*, i8 } %178, i8 %176, 1
  ret { %"struct.std::__1::__hash_node_base.644"*, i8 } %179
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkElEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.640"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !7
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.640", %"class.std::__1::__hash_table.640"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkElEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.640"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !7
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.640", %"class.std::__1::__hash_table.640"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.640", %"class.std::__1::__hash_table.640"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !7
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkElEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.640"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkElEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.640"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.640", %"class.std::__1::__hash_table.640"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %179, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #15
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #14
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.640", %"class.std::__1::__hash_table.640"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.644"**, %"struct.std::__1::__hash_node_base.644"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.640"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.644"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.644"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.646", %"class.std::__1::__bucket_list_deallocator.646"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.644"**, %"struct.std::__1::__hash_node_base.644"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.644"* null, %"struct.std::__1::__hash_node_base.644"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !11

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.640", %"class.std::__1::__hash_table.640"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644", %"struct.std::__1::__hash_node_base.644"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.644"* %38, null
  br i1 %39, label %187, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.644"**, %"struct.std::__1::__hash_node_base.644"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.644"* null, %"struct.std::__1::__hash_node_base.644"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.644"**, %"struct.std::__1::__hash_node_base.644"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.644"* null, %"struct.std::__1::__hash_node_base.644"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.644"**, %"struct.std::__1::__hash_node_base.644"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.644"* null, %"struct.std::__1::__hash_node_base.644"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.644"**, %"struct.std::__1::__hash_node_base.644"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.644"* null, %"struct.std::__1::__hash_node_base.644"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644", %"struct.std::__1::__hash_node_base.644"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.644"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !7
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.644"**, %"struct.std::__1::__hash_node_base.644"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.644"* %36, %"struct.std::__1::__hash_node_base.644"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644", %"struct.std::__1::__hash_node_base.644"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.644"* %75, null
  br i1 %76, label %187, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %131

79:                                               ; preds = %77, %122
  %80 = phi %"struct.std::__1::__hash_node_base.644"* [ %126, %122 ], [ %75, %77 ]
  %81 = phi i64 [ %124, %122 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base.644"* [ %123, %122 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644", %"struct.std::__1::__hash_node_base.644"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.644"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %122, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base.644"**, %"struct.std::__1::__hash_node_base.644"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.644"* %95, null
  br i1 %96, label %121, label %128

97:                                               ; preds = %128, %102
  %98 = phi %"struct.std::__1::__hash_node_base.644"* [ %100, %102 ], [ %80, %128 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644", %"struct.std::__1::__hash_node_base.644"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.644"* %100, null
  br i1 %101, label %108, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644", %"struct.std::__1::__hash_node_base.644"* %100, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base.644"* %103 to %"class.v8::internal::MemoryChunk"**
  %105 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %130, align 8
  %106 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %104, align 8
  %107 = icmp eq %"class.v8::internal::MemoryChunk"* %105, %106
  br i1 %107, label %97, label %108

108:                                              ; preds = %102, %97
  %109 = ptrtoint %"struct.std::__1::__hash_node_base.644"* %100 to i64
  %110 = bitcast %"struct.std::__1::__hash_node_base.644"* %98 to i64*
  %111 = bitcast %"struct.std::__1::__hash_node_base.644"* %82 to i64*
  store i64 %109, i64* %111, align 8
  %112 = load %"struct.std::__1::__hash_node_base.644"**, %"struct.std::__1::__hash_node_base.644"*** %11, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %112, i64 %90
  %114 = bitcast %"struct.std::__1::__hash_node_base.644"** %113 to i64**
  %115 = load i64*, i64** %114, align 8
  %116 = load i64, i64* %115, align 8
  store i64 %116, i64* %110, align 8
  %117 = load %"struct.std::__1::__hash_node_base.644"**, %"struct.std::__1::__hash_node_base.644"*** %11, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %117, i64 %90
  %119 = load %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644", %"struct.std::__1::__hash_node_base.644"* %119, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.644"* %80, %"struct.std::__1::__hash_node_base.644"** %120, align 8
  br label %122

121:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base.644"* %82, %"struct.std::__1::__hash_node_base.644"** %94, align 8
  br label %122

122:                                              ; preds = %121, %108, %89
  %123 = phi %"struct.std::__1::__hash_node_base.644"* [ %80, %121 ], [ %82, %108 ], [ %80, %89 ]
  %124 = phi i64 [ %90, %121 ], [ %81, %108 ], [ %81, %89 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644", %"struct.std::__1::__hash_node_base.644"* %123, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base.644"* %126, null
  br i1 %127, label %187, label %79

128:                                              ; preds = %92
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644", %"struct.std::__1::__hash_node_base.644"* %80, i64 2
  %130 = bitcast %"struct.std::__1::__hash_node_base.644"* %129 to %"class.v8::internal::MemoryChunk"**
  br label %97

131:                                              ; preds = %77, %173
  %132 = phi %"struct.std::__1::__hash_node_base.644"* [ %177, %173 ], [ %75, %77 ]
  %133 = phi i64 [ %175, %173 ], [ %71, %77 ]
  %134 = phi %"struct.std::__1::__hash_node_base.644"* [ %174, %173 ], [ %38, %77 ]
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644", %"struct.std::__1::__hash_node_base.644"* %132, i64 1
  %136 = bitcast %"struct.std::__1::__hash_node_base.644"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, %78
  %139 = icmp eq i64 %138, %133
  br i1 %139, label %173, label %140

140:                                              ; preds = %131
  %141 = load %"struct.std::__1::__hash_node_base.644"**, %"struct.std::__1::__hash_node_base.644"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %141, i64 %138
  %143 = load %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base.644"* %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644", %"struct.std::__1::__hash_node_base.644"* %132, i64 2
  %147 = bitcast %"struct.std::__1::__hash_node_base.644"* %146 to %"class.v8::internal::MemoryChunk"**
  br label %149

148:                                              ; preds = %140
  store %"struct.std::__1::__hash_node_base.644"* %134, %"struct.std::__1::__hash_node_base.644"** %142, align 8
  br label %173

149:                                              ; preds = %145, %154
  %150 = phi %"struct.std::__1::__hash_node_base.644"* [ %152, %154 ], [ %132, %145 ]
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644", %"struct.std::__1::__hash_node_base.644"* %150, i64 0, i32 0
  %152 = load %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %151, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base.644"* %152, null
  br i1 %153, label %160, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644", %"struct.std::__1::__hash_node_base.644"* %152, i64 2
  %156 = bitcast %"struct.std::__1::__hash_node_base.644"* %155 to %"class.v8::internal::MemoryChunk"**
  %157 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %147, align 8
  %158 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %156, align 8
  %159 = icmp eq %"class.v8::internal::MemoryChunk"* %157, %158
  br i1 %159, label %149, label %160

160:                                              ; preds = %149, %154
  %161 = ptrtoint %"struct.std::__1::__hash_node_base.644"* %152 to i64
  %162 = bitcast %"struct.std::__1::__hash_node_base.644"* %150 to i64*
  %163 = bitcast %"struct.std::__1::__hash_node_base.644"* %134 to i64*
  store i64 %161, i64* %163, align 8
  %164 = load %"struct.std::__1::__hash_node_base.644"**, %"struct.std::__1::__hash_node_base.644"*** %11, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %164, i64 %138
  %166 = bitcast %"struct.std::__1::__hash_node_base.644"** %165 to i64**
  %167 = load i64*, i64** %166, align 8
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %162, align 8
  %169 = load %"struct.std::__1::__hash_node_base.644"**, %"struct.std::__1::__hash_node_base.644"*** %11, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %169, i64 %138
  %171 = load %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %170, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644", %"struct.std::__1::__hash_node_base.644"* %171, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.644"* %132, %"struct.std::__1::__hash_node_base.644"** %172, align 8
  br label %173

173:                                              ; preds = %131, %160, %148
  %174 = phi %"struct.std::__1::__hash_node_base.644"* [ %132, %148 ], [ %134, %160 ], [ %132, %131 ]
  %175 = phi i64 [ %138, %148 ], [ %133, %160 ], [ %133, %131 ]
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base.644", %"struct.std::__1::__hash_node_base.644"* %174, i64 0, i32 0
  %177 = load %"struct.std::__1::__hash_node_base.644"*, %"struct.std::__1::__hash_node_base.644"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base.644"* %177, null
  br i1 %178, label %187, label %131

179:                                              ; preds = %2
  %180 = getelementptr inbounds %"class.std::__1::__hash_table.640", %"class.std::__1::__hash_table.640"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base.644"**, %"struct.std::__1::__hash_node_base.644"*** %180, align 8
  store %"struct.std::__1::__hash_node_base.644"** null, %"struct.std::__1::__hash_node_base.644"*** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base.644"** %181, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %179
  %184 = bitcast %"struct.std::__1::__hash_node_base.644"** %181 to i8*
  tail call void @_ZdlPv(i8* %184) #14
  br label %185

185:                                              ; preds = %179, %183
  %186 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.646", %"class.std::__1::__bucket_list_deallocator.646"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %186, align 8
  br label %187

187:                                              ; preds = %173, %122, %70, %35, %185
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #11

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #11

declare void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #2

declare void @_ZN2v88internal14TimedHistogram5StartEPNS_4base12ElapsedTimerEPNS0_7IsolateE(%"class.v8::internal::TimedHistogram"*, %"class.v8::base::ElapsedTimer"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare void @_ZN2v88internal14TimedHistogram4StopEPNS_4base12ElapsedTimerEPNS0_7IsolateE(%"class.v8::internal::TimedHistogram"*, %"class.v8::base::ElapsedTimer"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal36IncrementalMarkingRootMarkingVisitorD0Ev(%"class.v8::internal::IncrementalMarkingRootMarkingVisitor"*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %"class.v8::internal::IncrementalMarkingRootMarkingVisitor"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal36IncrementalMarkingRootMarkingVisitor17VisitRootPointersENS0_4RootEPKcNS0_14FullObjectSlotES5_(%"class.v8::internal::IncrementalMarkingRootMarkingVisitor"*, i32, i8*, i64, i64) unnamed_addr #0 comdat align 2 {
  %6 = icmp ult i64 %3, %4
  br i1 %6, label %8, label %7

7:                                                ; preds = %8, %5
  ret void

8:                                                ; preds = %5, %8
  %9 = phi i64 [ %10, %8 ], [ %3, %5 ]
  tail call void @_ZN2v88internal36IncrementalMarkingRootMarkingVisitor19MarkObjectByPointerENS0_14FullObjectSlotE(%"class.v8::internal::IncrementalMarkingRootMarkingVisitor"* %0, i64 %9)
  %10 = add i64 %9, 8
  %11 = icmp ult i64 %10, %4
  br i1 %11, label %8, label %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal36IncrementalMarkingRootMarkingVisitor16VisitRootPointerENS0_4RootEPKcNS0_14FullObjectSlotE(%"class.v8::internal::IncrementalMarkingRootMarkingVisitor"*, i32, i8*, i64) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN2v88internal36IncrementalMarkingRootMarkingVisitor19MarkObjectByPointerENS0_14FullObjectSlotE(%"class.v8::internal::IncrementalMarkingRootMarkingVisitor"* %0, i64 %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11RootVisitor17VisitRootPointersENS0_4RootEPKcNS0_27OffHeapCompressedObjectSlotES5_(%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.33, i64 0, i64 0)) #15
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11RootVisitor11SynchronizeENS0_22VisitorSynchronization7SyncTagE(%"class.v8::internal::RootVisitor"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal36IncrementalMarkingRootMarkingVisitor19MarkObjectByPointerENS0_14FullObjectSlotE(%"class.v8::internal::IncrementalMarkingRootMarkingVisitor"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = inttoptr i64 %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %84, label %7

7:                                                ; preds = %2
  %8 = and i64 %4, -262144
  %9 = inttoptr i64 %8 to %"class.v8::internal::BasicMemoryChunk"*
  %10 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %9, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, 8388608
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %84

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.v8::internal::IncrementalMarkingRootMarkingVisitor", %"class.v8::internal::IncrementalMarkingRootMarkingVisitor"* %0, i64 0, i32 1
  %16 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %16, i64 0, i32 86, i32 0, i32 0, i32 0
  %18 = load %"class.v8::internal::IncrementalMarking"*, %"class.v8::internal::IncrementalMarking"** %17, align 8
  %19 = or i64 %8, 272
  %20 = sub i64 %4, %8
  %21 = trunc i64 %20 to i32
  %22 = lshr i32 %21, 2
  %23 = and i32 %22, 31
  %24 = shl i32 1, %23
  %25 = inttoptr i64 %19 to i32*
  %26 = lshr i64 %20, 7
  %27 = and i64 %26, 33554431
  %28 = getelementptr inbounds i32, i32* %25, i64 %27
  %29 = load atomic i32, i32* %28 monotonic, align 4
  br label %30

30:                                               ; preds = %34, %14
  %31 = phi i32 [ %29, %14 ], [ %37, %34 ]
  %32 = and i32 %31, %24
  %33 = icmp eq i32 %32, %24
  br i1 %33, label %84, label %34

34:                                               ; preds = %30
  %35 = or i32 %31, %24
  %36 = cmpxchg volatile i32* %28, i32 %31, i32 %35 release monotonic
  %37 = extractvalue { i32, i1 } %36, 0
  %38 = extractvalue { i32, i1 } %36, 1
  br i1 %38, label %39, label %30

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %18, i64 0, i32 1
  %41 = load %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::MarkCompactCollector"** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::MarkCompactCollector", %"class.v8::internal::MarkCompactCollector"* %41, i64 0, i32 14, i32 0, i32 0, i32 0
  %43 = load %"class.v8::internal::MarkingWorklists::Local"*, %"class.v8::internal::MarkingWorklists::Local"** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::MarkingWorklists::Local", %"class.v8::internal::MarkingWorklists::Local"* %43, i64 0, i32 2, i32 1
  %45 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %44, align 8
  %46 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %45, i64 0, i32 1
  %47 = load i16, i16* %46, align 2
  %48 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %45, i64 0, i32 0
  %49 = load i16, i16* %48, align 2
  %50 = icmp eq i16 %47, %49
  %51 = bitcast %"class.heap::base::internal::SegmentBase"* %45 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*
  br i1 %50, label %52, label %77, !prof !4

52:                                               ; preds = %39
  %53 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #13
  %54 = icmp eq %"class.heap::base::internal::SegmentBase"* %45, %53
  br i1 %54, label %69, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.v8::internal::MarkingWorklists::Local", %"class.v8::internal::MarkingWorklists::Local"* %43, i64 0, i32 2, i32 0
  %57 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %56, align 8
  %58 = bitcast %"class.heap::base::internal::SegmentBase"** %44 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"**
  %59 = load %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %58, align 8
  %60 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %57, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %60) #13
  %61 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %57, i64 0, i32 1
  %62 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %59, i64 0, i32 1
  %65 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %64 to i64*
  store i64 %63, i64* %65, align 8
  %66 = ptrtoint %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %59 to i64
  store atomic i64 %66, i64* %62 monotonic, align 8
  %67 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = atomicrmw add i64* %67, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %60) #13
  br label %69

69:                                               ; preds = %55, %52
  %70 = tail call i8* @_Znwm(i64 528) #14
  %71 = bitcast i8* %70 to i16*
  store i16 64, i16* %71, align 2
  %72 = getelementptr inbounds i8, i8* %70, i64 2
  %73 = bitcast i8* %72 to i16*
  store i16 0, i16* %73, align 2
  %74 = getelementptr inbounds i8, i8* %70, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 520, i1 false) #13
  %75 = bitcast %"class.heap::base::internal::SegmentBase"** %44 to i8**
  store i8* %70, i8** %75, align 8
  %76 = bitcast i8* %70 to %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*
  br label %77

77:                                               ; preds = %69, %39
  %78 = phi %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* [ %76, %69 ], [ %51, %39 ]
  %79 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %78, i64 0, i32 0, i32 1
  %80 = load i16, i16* %79, align 2
  %81 = add i16 %80, 1
  store i16 %81, i16* %79, align 2
  %82 = zext i16 %80 to i64
  %83 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %78, i64 0, i32 2, i64 %82, i32 0, i32 0, i32 0
  store i64 %4, i64* %83, align 8
  br label %84

84:                                               ; preds = %30, %7, %2, %77
  ret void
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #12

declare %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2v88internal10StackGuard14ClearInterruptENS1_13InterruptFlagE(%"class.v8::internal::StackGuard"*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal10StackGuard16RequestInterruptENS1_13InterruptFlagE(%"class.v8::internal::StackGuard"*, i32) local_unnamed_addr #2

declare i64 @_ZN2v88internal17MemoryChunkLayout27AllocatableMemoryInDataPageEv() local_unnamed_addr #2

declare void @_ZN2v88internal9LocalHeap29MarkLinearAllocationAreaBlackEv(%"class.v8::internal::LocalHeap"*) local_unnamed_addr #2

declare void @_ZN2v88internal9LocalHeap26UnmarkLinearAllocationAreaEv(%"class.v8::internal::LocalHeap"*) local_unnamed_addr #2

declare i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZN4heap4base8WorklistIN2v88internal10HeapObjectELt64EE6UpdateIZNS3_18IncrementalMarking34UpdateMarkingWorklistAfterScavengeEvE3$_2EEvT_"(%"class.heap::base::Worklist"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %0, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %3) #13
  %4 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %0, i64 0, i32 1
  %5 = load %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %4, align 8
  %6 = icmp eq %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %5, null
  br i1 %6, label %115, label %7

7:                                                ; preds = %2
  %8 = trunc i64 %1 to i32
  br label %9

9:                                                ; preds = %7, %110
  %10 = phi %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* [ %5, %7 ], [ %112, %110 ]
  %11 = phi %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* [ null, %7 ], [ %113, %110 ]
  %12 = phi i64 [ 0, %7 ], [ %111, %110 ]
  %13 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %10 to i8*
  %14 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %10, i64 0, i32 0, i32 1
  %15 = load i16, i16* %14, align 2
  %16 = icmp eq i16 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %9
  store i16 0, i16* %14, align 2
  br label %97

18:                                               ; preds = %9, %88
  %19 = phi i64 [ %89, %88 ], [ 0, %9 ]
  %20 = phi i64 [ %90, %88 ], [ 0, %9 ]
  %21 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %10, i64 0, i32 2, i64 %20, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, -262144
  %24 = inttoptr i64 %23 to %"class.v8::internal::BasicMemoryChunk"*
  %25 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %24, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = and i64 %26, 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %40, label %29

29:                                               ; preds = %18
  %30 = add i64 %22, -1
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = zext i32 %32 to i64
  %34 = and i64 %33, 3
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %88

36:                                               ; preds = %29
  %37 = and i64 %22, -4294967296
  %38 = or i64 %37, %33
  %39 = add i64 %38, 1
  br label %84

40:                                               ; preds = %18
  %41 = and i64 %26, 16
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %58, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %24, i64 2, i32 7
  %45 = bitcast %"struct.std::__1::atomic.15"* %44 to i32**
  %46 = load i32*, i32** %45, align 8
  %47 = sub i64 %22, %23
  %48 = trunc i64 %47 to i32
  %49 = lshr i32 %48, 2
  %50 = and i32 %49, 31
  %51 = shl i32 1, %50
  %52 = lshr i64 %47, 7
  %53 = and i64 %52, 33554431
  %54 = getelementptr inbounds i32, i32* %46, i64 %53
  %55 = load atomic i32, i32* %54 acquire, align 4
  %56 = and i32 %55, %51
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %88, label %84

58:                                               ; preds = %40
  %59 = inttoptr i64 %23 to %"class.v8::internal::Page"*
  %60 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %59, i64 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = and i64 %61, 131072
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %79, label %64

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %24, i64 2, i32 7
  %66 = bitcast %"struct.std::__1::atomic.15"* %65 to i32**
  %67 = load i32*, i32** %66, align 8
  %68 = sub i64 %22, %23
  %69 = trunc i64 %68 to i32
  %70 = lshr i32 %69, 2
  %71 = and i32 %70, 31
  %72 = shl i32 1, %71
  %73 = lshr i64 %68, 7
  %74 = and i64 %73, 33554431
  %75 = getelementptr inbounds i32, i32* %67, i64 %74
  %76 = load atomic i32, i32* %75 acquire, align 4
  %77 = and i32 %76, %72
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %88, label %84

79:                                               ; preds = %58
  %80 = add i64 %22, -1
  %81 = inttoptr i64 %80 to i32*
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = icmp eq i32 %82, %8
  br i1 %83, label %88, label %84

84:                                               ; preds = %79, %64, %43, %36
  %85 = phi i64 [ %39, %36 ], [ %22, %43 ], [ %22, %64 ], [ %22, %79 ]
  %86 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %10, i64 0, i32 2, i64 %19, i32 0, i32 0, i32 0
  store i64 %85, i64* %86, align 8
  %87 = add i64 %19, 1
  br label %88

88:                                               ; preds = %84, %79, %64, %43, %29
  %89 = phi i64 [ %87, %84 ], [ %19, %29 ], [ %19, %43 ], [ %19, %64 ], [ %19, %79 ]
  %90 = add nuw nsw i64 %20, 1
  %91 = load i16, i16* %14, align 2
  %92 = zext i16 %91 to i64
  %93 = icmp ult i64 %90, %92
  br i1 %93, label %18, label %94

94:                                               ; preds = %88
  %95 = trunc i64 %89 to i16
  store i16 %95, i16* %14, align 2
  %96 = icmp eq i16 %95, 0
  br i1 %96, label %97, label %107

97:                                               ; preds = %17, %94
  %98 = add i64 %12, 1
  %99 = icmp eq %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %11, null
  %100 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %10, i64 0, i32 1
  %101 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %11, i64 0, i32 1
  %104 = select i1 %99, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %4, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %103
  %105 = bitcast %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %104 to i64*
  store i64 %102, i64* %105, align 8
  %106 = load %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %100, align 8
  tail call void @_ZdlPv(i8* %13) #14
  br label %110

107:                                              ; preds = %94
  %108 = getelementptr inbounds %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %10, i64 0, i32 1
  %109 = load %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"** %108, align 8
  br label %110

110:                                              ; preds = %107, %97
  %111 = phi i64 [ %98, %97 ], [ %12, %107 ]
  %112 = phi %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* [ %106, %97 ], [ %109, %107 ]
  %113 = phi %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* [ %11, %97 ], [ %10, %107 ]
  %114 = icmp eq %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"* %112, null
  br i1 %114, label %115, label %9

115:                                              ; preds = %110, %2
  %116 = phi i64 [ 0, %2 ], [ %111, %110 ]
  %117 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = atomicrmw sub i64* %117, i64 %116 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %3) #13
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #11

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.usub.sat.i64(i64, i64) #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = !{i64 0, i64 65}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkElEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN2v88internal11MemoryChunkElEENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_"}
!11 = distinct !{!11, !6}
