; ModuleID = '../../sandbox/policy/linux/bpf_broker_policy_linux.cc'
source_filename = "../../sandbox/policy/linux/bpf_broker_policy_linux.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%"class.sandbox::policy::BrokerProcessPolicy" = type { %"class.sandbox::policy::BPFBasePolicy", %"class.std::__1::bitset" }
%"class.sandbox::policy::BPFBasePolicy" = type { %"class.sandbox::bpf_dsl::Policy", %"class.std::__1::unique_ptr" }
%"class.sandbox::bpf_dsl::Policy" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.sandbox::BaselinePolicy"* }
%"class.sandbox::BaselinePolicy" = type { %"class.sandbox::bpf_dsl::Policy", i32, i32 }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.sandbox::bpf_dsl::internal::ResultExprImpl" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }

@_ZTVN7sandbox6policy19BrokerProcessPolicyE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sandbox::policy::BrokerProcessPolicy"*)* @_ZN7sandbox6policy19BrokerProcessPolicyD2Ev to i8*), i8* bitcast (void (%"class.sandbox::policy::BrokerProcessPolicy"*)* @_ZN7sandbox6policy19BrokerProcessPolicyD0Ev to i8*), i8* bitcast ({ %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } (%"class.sandbox::policy::BrokerProcessPolicy"*, i32)* @_ZNK7sandbox6policy19BrokerProcessPolicy15EvaluateSyscallEi to i8*), i8* bitcast ({ %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } (%"class.sandbox::policy::BPFBasePolicy"*)* @_ZNK7sandbox6policy13BPFBasePolicy14InvalidSyscallEv to i8*)] }, align 8

@_ZN7sandbox6policy19BrokerProcessPolicyC1ERKNSt3__16bitsetILm10EEE = hidden unnamed_addr alias void (%"class.sandbox::policy::BrokerProcessPolicy"*, %"class.std::__1::bitset"*), void (%"class.sandbox::policy::BrokerProcessPolicy"*, %"class.std::__1::bitset"*)* @_ZN7sandbox6policy19BrokerProcessPolicyC2ERKNSt3__16bitsetILm10EEE
@_ZN7sandbox6policy19BrokerProcessPolicyD1Ev = hidden unnamed_addr alias void (%"class.sandbox::policy::BrokerProcessPolicy"*), void (%"class.sandbox::policy::BrokerProcessPolicy"*)* @_ZN7sandbox6policy19BrokerProcessPolicyD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7sandbox6policy19BrokerProcessPolicyC2ERKNSt3__16bitsetILm10EEE(%"class.sandbox::policy::BrokerProcessPolicy"*, %"class.std::__1::bitset"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sandbox::policy::BrokerProcessPolicy", %"class.sandbox::policy::BrokerProcessPolicy"* %0, i64 0, i32 0
  tail call void @_ZN7sandbox6policy13BPFBasePolicyC2Ev(%"class.sandbox::policy::BPFBasePolicy"* %3) #4
  %4 = getelementptr inbounds %"class.sandbox::policy::BrokerProcessPolicy", %"class.sandbox::policy::BrokerProcessPolicy"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7sandbox6policy19BrokerProcessPolicyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.std::__1::bitset", %"class.std::__1::bitset"* %1, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.sandbox::policy::BrokerProcessPolicy", %"class.sandbox::policy::BrokerProcessPolicy"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load i64, i64* %5, align 8
  store i64 %7, i64* %6, align 8
  ret void
}

declare void @_ZN7sandbox6policy13BPFBasePolicyC2Ev(%"class.sandbox::policy::BPFBasePolicy"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7sandbox6policy13BPFBasePolicyD2Ev(%"class.sandbox::policy::BPFBasePolicy"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7sandbox6policy19BrokerProcessPolicyD2Ev(%"class.sandbox::policy::BrokerProcessPolicy"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sandbox::policy::BrokerProcessPolicy", %"class.sandbox::policy::BrokerProcessPolicy"* %0, i64 0, i32 0
  tail call void @_ZN7sandbox6policy13BPFBasePolicyD2Ev(%"class.sandbox::policy::BPFBasePolicy"* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7sandbox6policy19BrokerProcessPolicyD0Ev(%"class.sandbox::policy::BrokerProcessPolicy"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sandbox::policy::BrokerProcessPolicy", %"class.sandbox::policy::BrokerProcessPolicy"* %0, i64 0, i32 0
  tail call void @_ZN7sandbox6policy13BPFBasePolicyD2Ev(%"class.sandbox::policy::BPFBasePolicy"* %2) #4
  %3 = bitcast %"class.sandbox::policy::BrokerProcessPolicy"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZNK7sandbox6policy19BrokerProcessPolicy15EvaluateSyscallEi(%"class.sandbox::policy::BrokerProcessPolicy"*, i32) unnamed_addr #0 align 2 {
  switch i32 %1, label %115 [
    i32 21, label %3
    i32 269, label %10
    i32 83, label %17
    i32 258, label %24
    i32 2, label %31
    i32 257, label %38
    i32 82, label %45
    i32 264, label %52
    i32 4, label %59
    i32 6, label %66
    i32 262, label %73
    i32 89, label %80
    i32 267, label %87
    i32 84, label %94
    i32 87, label %101
    i32 263, label %108
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.sandbox::policy::BrokerProcessPolicy", %"class.sandbox::policy::BrokerProcessPolicy"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 2
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %115, label %8

8:                                                ; preds = %3
  %9 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllowEv() #4
  br label %118

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.sandbox::policy::BrokerProcessPolicy", %"class.sandbox::policy::BrokerProcessPolicy"* %0, i64 0, i32 1, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = and i64 %12, 2
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %115, label %15

15:                                               ; preds = %10
  %16 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllowEv() #4
  br label %118

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.sandbox::policy::BrokerProcessPolicy", %"class.sandbox::policy::BrokerProcessPolicy"* %0, i64 0, i32 1, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = and i64 %19, 4
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %115, label %22

22:                                               ; preds = %17
  %23 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllowEv() #4
  br label %118

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.sandbox::policy::BrokerProcessPolicy", %"class.sandbox::policy::BrokerProcessPolicy"* %0, i64 0, i32 1, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = and i64 %26, 4
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %115, label %29

29:                                               ; preds = %24
  %30 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllowEv() #4
  br label %118

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.sandbox::policy::BrokerProcessPolicy", %"class.sandbox::policy::BrokerProcessPolicy"* %0, i64 0, i32 1, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = and i64 %33, 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %115, label %36

36:                                               ; preds = %31
  %37 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllowEv() #4
  br label %118

38:                                               ; preds = %2
  %39 = getelementptr inbounds %"class.sandbox::policy::BrokerProcessPolicy", %"class.sandbox::policy::BrokerProcessPolicy"* %0, i64 0, i32 1, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = and i64 %40, 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %115, label %43

43:                                               ; preds = %38
  %44 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllowEv() #4
  br label %118

45:                                               ; preds = %2
  %46 = getelementptr inbounds %"class.sandbox::policy::BrokerProcessPolicy", %"class.sandbox::policy::BrokerProcessPolicy"* %0, i64 0, i32 1, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = and i64 %47, 32
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %115, label %50

50:                                               ; preds = %45
  %51 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllowEv() #4
  br label %118

52:                                               ; preds = %2
  %53 = getelementptr inbounds %"class.sandbox::policy::BrokerProcessPolicy", %"class.sandbox::policy::BrokerProcessPolicy"* %0, i64 0, i32 1, i32 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = and i64 %54, 32
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %115, label %57

57:                                               ; preds = %52
  %58 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllowEv() #4
  br label %118

59:                                               ; preds = %2
  %60 = getelementptr inbounds %"class.sandbox::policy::BrokerProcessPolicy", %"class.sandbox::policy::BrokerProcessPolicy"* %0, i64 0, i32 1, i32 0, i32 0
  %61 = load i64, i64* %60, align 8
  %62 = trunc i64 %61 to i8
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %115

64:                                               ; preds = %59
  %65 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllowEv() #4
  br label %118

66:                                               ; preds = %2
  %67 = getelementptr inbounds %"class.sandbox::policy::BrokerProcessPolicy", %"class.sandbox::policy::BrokerProcessPolicy"* %0, i64 0, i32 1, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = trunc i64 %68 to i8
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %115

71:                                               ; preds = %66
  %72 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllowEv() #4
  br label %118

73:                                               ; preds = %2
  %74 = getelementptr inbounds %"class.sandbox::policy::BrokerProcessPolicy", %"class.sandbox::policy::BrokerProcessPolicy"* %0, i64 0, i32 1, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = trunc i64 %75 to i8
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %115

78:                                               ; preds = %73
  %79 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllowEv() #4
  br label %118

80:                                               ; preds = %2
  %81 = getelementptr inbounds %"class.sandbox::policy::BrokerProcessPolicy", %"class.sandbox::policy::BrokerProcessPolicy"* %0, i64 0, i32 1, i32 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = and i64 %82, 16
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %115, label %85

85:                                               ; preds = %80
  %86 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllowEv() #4
  br label %118

87:                                               ; preds = %2
  %88 = getelementptr inbounds %"class.sandbox::policy::BrokerProcessPolicy", %"class.sandbox::policy::BrokerProcessPolicy"* %0, i64 0, i32 1, i32 0, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = and i64 %89, 16
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %115, label %92

92:                                               ; preds = %87
  %93 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllowEv() #4
  br label %118

94:                                               ; preds = %2
  %95 = getelementptr inbounds %"class.sandbox::policy::BrokerProcessPolicy", %"class.sandbox::policy::BrokerProcessPolicy"* %0, i64 0, i32 1, i32 0, i32 0
  %96 = load i64, i64* %95, align 8
  %97 = and i64 %96, 64
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %115, label %99

99:                                               ; preds = %94
  %100 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllowEv() #4
  br label %118

101:                                              ; preds = %2
  %102 = getelementptr inbounds %"class.sandbox::policy::BrokerProcessPolicy", %"class.sandbox::policy::BrokerProcessPolicy"* %0, i64 0, i32 1, i32 0, i32 0
  %103 = load i64, i64* %102, align 8
  %104 = and i64 %103, 520
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %115, label %106

106:                                              ; preds = %101
  %107 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllowEv() #4
  br label %118

108:                                              ; preds = %2
  %109 = getelementptr inbounds %"class.sandbox::policy::BrokerProcessPolicy", %"class.sandbox::policy::BrokerProcessPolicy"* %0, i64 0, i32 1, i32 0, i32 0
  %110 = load i64, i64* %109, align 8
  %111 = and i64 %110, 520
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %115, label %113

113:                                              ; preds = %108
  %114 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllowEv() #4
  br label %118

115:                                              ; preds = %3, %10, %17, %24, %31, %38, %45, %52, %80, %87, %94, %101, %108, %2, %73, %66, %59
  %116 = getelementptr inbounds %"class.sandbox::policy::BrokerProcessPolicy", %"class.sandbox::policy::BrokerProcessPolicy"* %0, i64 0, i32 0
  %117 = tail call { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZNK7sandbox6policy13BPFBasePolicy15EvaluateSyscallEi(%"class.sandbox::policy::BPFBasePolicy"* %116, i32 %1) #4
  br label %118

118:                                              ; preds = %115, %113, %106, %99, %92, %85, %78, %71, %64, %57, %50, %43, %36, %29, %22, %15, %8
  %119 = phi { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } [ %117, %115 ], [ %114, %113 ], [ %107, %106 ], [ %100, %99 ], [ %93, %92 ], [ %86, %85 ], [ %79, %78 ], [ %72, %71 ], [ %65, %64 ], [ %58, %57 ], [ %51, %50 ], [ %44, %43 ], [ %37, %36 ], [ %30, %29 ], [ %23, %22 ], [ %16, %15 ], [ %9, %8 ]
  ret { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } %119
}

declare { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZN7sandbox7bpf_dsl5AllowEv() local_unnamed_addr #1

declare { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZNK7sandbox6policy13BPFBasePolicy15EvaluateSyscallEi(%"class.sandbox::policy::BPFBasePolicy"*, i32) unnamed_addr #1

declare { %"class.sandbox::bpf_dsl::internal::ResultExprImpl"*, %"class.std::__1::__shared_weak_count"* } @_ZNK7sandbox6policy13BPFBasePolicy14InvalidSyscallEv(%"class.sandbox::policy::BPFBasePolicy"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
