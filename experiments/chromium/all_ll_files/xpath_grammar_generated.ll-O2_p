; ModuleID = '../../third_party/blink/renderer/core/xml/xpath_grammar_generated.cc'
source_filename = "../../third_party/blink/renderer/core/xml/xpath_grammar_generated.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.xpathyy::YyParser::by_kind" = type { i32 }
%"class.xpathyy::YyParser::semantic_type" = type { %union.anon }
%union.anon = type { x86_fp80 }
%"struct.xpathyy::YyParser::by_state" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.147", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.163", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.181", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.188", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.128", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.46" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i64 }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.blink::Worklist.57"* }
%"class.blink::Worklist.57" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.46" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::Worklist.64"* }
%"class.blink::Worklist.64" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.46" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::Worklist.71"* }
%"class.blink::Worklist.71" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.46" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.blink::Worklist.78"* }
%"class.blink::Worklist.78" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.46" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.blink::Worklist.85"* }
%"class.blink::Worklist.85" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.46" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::Worklist.92"* }
%"class.blink::Worklist.92" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.46" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::Worklist.99"* }
%"class.blink::Worklist.99" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.46" }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.106", %"class.std::__1::__compressed_pair.115", %"class.std::__1::__compressed_pair.120", %"class.std::__1::__compressed_pair.122", [4 x i8] }>
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108", %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { i64 }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { float }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.131", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.140" }
%"class.WTF::Vector.140" = type { %"class.WTF::VectorBuffer.141" }
%"class.WTF::VectorBuffer.141" = type { %"class.WTF::VectorBufferBase.142" }
%"class.WTF::VectorBufferBase.142" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.155" }
%"class.WTF::VectorBuffer.155" = type { %"class.WTF::VectorBufferBase.156" }
%"class.WTF::VectorBufferBase.156" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.169" }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.57"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.64"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.71"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.78"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.85"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.192", i64 }
%"class.std::__1::vector.192" = type { %"class.std::__1::__vector_base.193" }
%"class.std::__1::__vector_base.193" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.194" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.187 }
%class.scoped_refptr.187 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.188" = type { %"struct.std::__1::__atomic_base.189" }
%"struct.std::__1::__atomic_base.189" = type { %"struct.std::__1::__cxx_atomic_impl.190" }
%"struct.std::__1::__cxx_atomic_impl.190" = type { %"struct.std::__1::__cxx_atomic_base_impl.191" }
%"struct.std::__1::__cxx_atomic_base_impl.191" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::xpath::Parser" = type { %"class.blink::xpath::Expression"*, i8, i32, %"class.WTF::String", i32, %"class.blink::XPathNSResolver"* }
%"class.blink::xpath::Expression" = type <{ %"class.blink::xpath::ParseNode", %"class.blink::HeapVector", i8, i8, i8, [5 x i8] }>
%"class.blink::xpath::ParseNode" = type { i32 (...)** }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::xpath::Expression"* }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::XPathNSResolver" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.304" }
%"struct.std::__1::atomic.304" = type { %"struct.std::__1::__atomic_base.305" }
%"struct.std::__1::__atomic_base.305" = type { %"struct.std::__1::__atomic_base.306" }
%"struct.std::__1::__atomic_base.306" = type { %"struct.std::__1::__cxx_atomic_impl.307" }
%"struct.std::__1::__cxx_atomic_impl.307" = type { %"struct.std::__1::__cxx_atomic_base_impl.308" }
%"struct.std::__1::__cxx_atomic_base_impl.308" = type { i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.xpathyy::YyParser" = type { i32 (...)**, %"class.xpathyy::YyParser::stack", %"class.blink::xpath::Parser"* }
%"class.xpathyy::YyParser::stack" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.xpathyy::YyParser::stack_symbol_type"*, %"struct.xpathyy::YyParser::stack_symbol_type"*, %"class.std::__1::__compressed_pair" }
%"struct.xpathyy::YyParser::stack_symbol_type" = type { %"struct.xpathyy::YyParser::basic_symbol" }
%"struct.xpathyy::YyParser::basic_symbol" = type { %"struct.xpathyy::YyParser::by_state", %"class.xpathyy::YyParser::semantic_type" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.xpathyy::YyParser::stack_symbol_type"* }
%"struct.xpathyy::YyParser::syntax_error" = type { %"class.std::runtime_error" }
%"class.std::runtime_error" = type { %"class.std::exception", %"class.std::__1::__libcpp_refstring" }
%"class.std::exception" = type { i32 (...)** }
%"class.std::__1::__libcpp_refstring" = type { i8* }
%"struct.xpathyy::YyParser::symbol_type" = type { %"struct.xpathyy::YyParser::basic_symbol.12" }
%"struct.xpathyy::YyParser::basic_symbol.12" = type { %"struct.xpathyy::YyParser::by_kind", %"class.xpathyy::YyParser::semantic_type" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.8 }
%union.anon.8 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.199" = type { %"class.blink::PersistentBase.200" }
%"class.blink::PersistentBase.200" = type { %"class.blink::HeapVector.201"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.201" = type { %"class.WTF::Vector.204" }
%"class.WTF::Vector.204" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"class.blink::Member.207"*, i32, i32 }
%"class.blink::Member.207" = type { %"class.blink::MemberBase.208" }
%"class.blink::MemberBase.208" = type { %"class.blink::xpath::Predicate"* }
%"class.blink::xpath::Predicate" = type { %"class.blink::Member" }
%"class.blink::Persistent.212" = type { %"class.blink::PersistentBase.213" }
%"class.blink::PersistentBase.213" = type { %"class.blink::xpath::Expression"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.214" = type { %"class.blink::PersistentBase.215" }
%"class.blink::PersistentBase.215" = type { %"class.blink::xpath::LocationPath"*, %"class.blink::PersistentNodePtr" }
%"class.blink::xpath::LocationPath" = type <{ %"class.blink::xpath::Expression.base", [5 x i8], %"class.blink::HeapVector.216", i8, [7 x i8] }>
%"class.blink::xpath::Expression.base" = type <{ %"class.blink::xpath::ParseNode", %"class.blink::HeapVector", i8, i8, i8 }>
%"class.blink::HeapVector.216" = type { %"class.WTF::Vector.219" }
%"class.WTF::Vector.219" = type { %"class.WTF::VectorBuffer.220" }
%"class.WTF::VectorBuffer.220" = type { %"class.WTF::VectorBufferBase.221" }
%"class.WTF::VectorBufferBase.221" = type { %"class.blink::Member.222"*, i32, i32 }
%"class.blink::Member.222" = type opaque
%"class.blink::Persistent.224" = type { %"class.blink::PersistentBase.225" }
%"class.blink::PersistentBase.225" = type { %"class.blink::xpath::Step::NodeTest"*, %"class.blink::PersistentNodePtr" }
%"class.blink::xpath::Step::NodeTest" = type { i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::HeapVector.201" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Persistent.228" = type { %"class.blink::PersistentBase.229" }
%"class.blink::PersistentBase.229" = type { %"class.blink::xpath::Step"*, %"class.blink::PersistentNodePtr" }
%"class.blink::xpath::Step" = type { %"class.blink::xpath::ParseNode", i32, %"class.blink::Member.230", %"class.blink::HeapVector.201" }
%"class.blink::Member.230" = type { %"class.blink::MemberBase.231" }
%"class.blink::MemberBase.231" = type { %"class.blink::xpath::Step::NodeTest"* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::xpath::VariableReference" = type { %"class.blink::xpath::Expression.base", %"class.WTF::String" }
%"class.blink::xpath::StringExpression" = type { %"class.blink::xpath::Expression.base", %"class.blink::xpath::Value" }
%"class.blink::xpath::Value" = type { i32, i8, double, %"class.blink::Member.232" }
%"class.blink::Member.232" = type { %"class.blink::MemberBase.233" }
%"class.blink::MemberBase.233" = type { %"class.blink::xpath::ValueData"* }
%"class.blink::xpath::ValueData" = type { %"class.WTF::String", %"class.blink::Member.236" }
%"class.blink::Member.236" = type { %"class.blink::MemberBase.237" }
%"class.blink::MemberBase.237" = type { %"class.blink::xpath::NodeSet"* }
%"class.blink::xpath::NodeSet" = type { i8, i8, %"class.blink::HeapVector.240" }
%"class.blink::HeapVector.240" = type { %"class.WTF::Vector.243" }
%"class.WTF::Vector.243" = type { %"class.WTF::VectorBuffer.244" }
%"class.WTF::VectorBuffer.244" = type { %"class.WTF::VectorBufferBase.245" }
%"class.WTF::VectorBufferBase.245" = type { %"class.blink::Member.246"*, i32, i32 }
%"class.blink::Member.246" = type { %"class.blink::MemberBase.247" }
%"class.blink::MemberBase.247" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.246", %"class.blink::Member.249", %"class.blink::Member.246", %"class.blink::Member.246", %"class.blink::Member.251" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.249" = type { %"class.blink::MemberBase.250" }
%"class.blink::MemberBase.250" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.255", %"class.blink::Member.257", %"class.blink::Member.249", %"class.blink::Member.259", %"class.blink::Member.259", %"class.blink::Member.279", %"class.blink::Member.281", %"class.blink::Member.283", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.288", %"class.blink::HeapVector.290" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.255" = type { %"class.blink::MemberBase.256" }
%"class.blink::MemberBase.256" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type opaque
%"class.blink::Member.257" = type { %"class.blink::MemberBase.258" }
%"class.blink::MemberBase.258" = type { %"class.blink::Document"* }
%"class.blink::Document" = type opaque
%"class.blink::Member.259" = type { %"class.blink::MemberBase.260" }
%"class.blink::MemberBase.260" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.266" }
%"class.blink::Member.266" = type { %"class.blink::MemberBase.267" }
%"class.blink::MemberBase.267" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.270", i32, %"class.blink::HeapVector.272" }
%"class.blink::Member.270" = type { %"class.blink::MemberBase.271" }
%"class.blink::MemberBase.271" = type { %"class.blink::Element"* }
%"class.blink::Element" = type opaque
%"class.blink::HeapVector.272" = type { %"class.WTF::Vector.275" }
%"class.WTF::Vector.275" = type { %"class.WTF::VectorBuffer.276" }
%"class.WTF::VectorBuffer.276" = type { %"class.WTF::VectorBufferBase.277" }
%"class.WTF::VectorBufferBase.277" = type { %"class.blink::Member.270"*, i32, i32 }
%"class.blink::Member.279" = type { %"class.blink::MemberBase.280" }
%"class.blink::MemberBase.280" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.281" = type { %"class.blink::MemberBase.282" }
%"class.blink::MemberBase.282" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.283" = type { %"class.blink::MemberBase.284" }
%"class.blink::MemberBase.284" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.285" }
%"class.blink::Member.285" = type { %"class.blink::MemberBase.286" }
%"class.blink::MemberBase.286" = type { %"class.blink::HeapHashMap.287"* }
%"class.blink::HeapHashMap.287" = type opaque
%"class.blink::Member.288" = type { %"class.blink::MemberBase.289" }
%"class.blink::MemberBase.289" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.290" = type { %"class.WTF::Vector.293" }
%"class.WTF::Vector.293" = type { %"class.WTF::VectorBuffer.294" }
%"class.WTF::VectorBuffer.294" = type { %"class.WTF::VectorBufferBase.295" }
%"class.WTF::VectorBufferBase.295" = type { %"class.blink::Member.296"*, i32, i32 }
%"class.blink::Member.296" = type opaque
%"class.blink::Member.251" = type { %"class.blink::MemberBase.252" }
%"class.blink::MemberBase.252" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::xpath::Number" = type { %"class.blink::xpath::Expression.base", %"class.blink::xpath::Value" }
%"class.blink::xpath::Function" = type { %"class.blink::xpath::Expression.base", %"class.WTF::String" }
%"class.blink::xpath::Path" = type { %"class.blink::xpath::Expression.base", %"class.blink::Member", %"class.blink::Member.298" }
%"class.blink::Member.298" = type { %"class.blink::MemberBase.299" }
%"class.blink::MemberBase.299" = type { %"class.blink::xpath::LocationPath"* }
%"class.blink::xpath::Filter" = type { %"class.blink::xpath::Expression.base", %"class.blink::Member", %"class.blink::HeapVector.201" }
%"class.blink::xpath::LogicalOp" = type { %"class.blink::xpath::Expression.base", i32 }
%"class.blink::xpath::EqTestOp" = type { %"class.blink::xpath::Expression.base", i32 }
%"class.blink::xpath::NumericOp" = type { %"class.blink::xpath::Expression.base", i32 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.blink::HeapVectorBacking.341" = type { i8 }

$_ZN7xpathyy8YyParser13semantic_type4moveIN5blink10PersistentINS3_10HeapVectorINS3_6MemberINS3_5xpath10ExpressionEEELj0EEEEEEEvOS1_ = comdat any

$_ZN7xpathyy8YyParser13semantic_type4moveIN5blink10PersistentINS3_10HeapVectorINS3_6MemberINS3_5xpath9PredicateEEELj0EEEEEEEvOS1_ = comdat any

$_ZN7xpathyy8YyParser13semantic_type4moveIN5blink10PersistentINS3_5xpath10ExpressionEEEEEvOS1_ = comdat any

$_ZN7xpathyy8YyParser13semantic_type4moveIN5blink10PersistentINS3_5xpath12LocationPathEEEEEvOS1_ = comdat any

$_ZN7xpathyy8YyParser13semantic_type4moveIN5blink10PersistentINS3_5xpath4Step8NodeTestEEEEEvOS1_ = comdat any

$_ZN7xpathyy8YyParser13semantic_type4moveIN5blink10PersistentINS3_5xpath4StepEEEEEvOS1_ = comdat any

$_ZN7xpathyy8YyParser12basic_symbolINS0_7by_kindEE5clearEv = comdat any

$_ZN7xpathyy8YyParser12basic_symbolINS0_8by_stateEE5clearEv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_5xpath10ExpressionEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_5xpath10ExpressionEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_10HeapVectorINS_6MemberINS_5xpath10ExpressionEEELj0EEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKSA_15TracePersistentEPNS_7VisitorEEEE10TrampolineESC_PKv = comdat any

$_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_5xpath10ExpressionEEELj0EEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_10HeapVectorINS_6MemberINS_5xpath9PredicateEEELj0EEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKSA_15TracePersistentEPNS_7VisitorEEEE10TrampolineESC_PKv = comdat any

$_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_5xpath9PredicateEEELj0EEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_5xpath9PredicateEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_5xpath12LocationPathELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv = comdat any

$_ZN5blink10TraceTraitINS_5xpath12LocationPathEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_5xpath4Step8NodeTestELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS7_15TracePersistentEPNS_7VisitorEEEE10TrampolineES9_PKv = comdat any

$_ZN5blink10TraceTraitINS_5xpath4Step8NodeTestEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_5xpath4StepELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv = comdat any

$_ZN5blink10TraceTraitINS_5xpath4StepEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN7xpathyy8YyParser12basic_symbolINS0_8by_stateEE4moveERS3_ = comdat any

$_ZNSt3__16vectorIN7xpathyy8YyParser17stack_symbol_typeENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

$_ZN5blink14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_ = comdat any

$_ZN5blink14PersistentBaseINS_5xpath12LocationPathELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_5xpath9ParseNodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_5xpath9ParseNodeEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_5xpath9ParseNodeEE7GetNameEPKv = comdat any

$_ZN5blink14PersistentBaseINS_5xpath4StepELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_5xpath4Step8NodeTestEEEPhm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_5xpath4Step8NodeTestEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_5xpath4Step8NodeTestEE7GetNameEPKv = comdat any

$_ZN5blink14PersistentBaseINS_5xpath4Step8NodeTestELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS3_ = comdat any

$_ZN5blink14PersistentBaseINS_10HeapVectorINS_6MemberINS_5xpath9PredicateEEELj0EEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS6_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_5xpath9PredicateEEELj0EEEEEPhm = comdat any

$_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_5xpath9PredicateEEELj0EEEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_5xpath9PredicateEEEPhm = comdat any

$_ZN5blink9NameTraitINS_5xpath9PredicateEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_5xpath9PredicateEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_5xpath9PredicateEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_5xpath9PredicateEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_5xpath9PredicateEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_5xpath10ExpressionEEELj0EEEEEPhm = comdat any

$_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_5xpath10ExpressionEEELj0EEEE7GetNameEPKv = comdat any

$_ZN5blink14PersistentBaseINS_10HeapVectorINS_6MemberINS_5xpath10ExpressionEEELj0EEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS6_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRNS1_10PersistentIS4_EEEEvOT_ = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_5xpath9ParseNodeEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_5xpath9ParseNodeEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_5xpath4Step8NodeTestEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_5xpath4Step8NodeTestEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_5xpath9PredicateEEELj0EEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_5xpath9PredicateEEELj0EEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_5xpath9PredicateEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_5xpath9PredicateEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_5xpath10ExpressionEEELj0EEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_5xpath10ExpressionEEELj0EEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN7xpathyy8YyParserE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.xpathyy::YyParser"*)* @_ZN7xpathyy8YyParserD2Ev to i8*), i8* bitcast (void (%"class.xpathyy::YyParser"*)* @_ZN7xpathyy8YyParserD0Ev to i8*), i8* bitcast (i32 (%"class.xpathyy::YyParser"*)* @_ZN7xpathyy8YyParser5parseEv to i8*), i8* bitcast (void (%"class.xpathyy::YyParser"*, %"class.std::__1::basic_string"*)* @_ZN7xpathyy8YyParser5errorERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE to i8*)] }, align 8
@__const._ZN7xpathyy8YyParser5parseEv.yyla = private unnamed_addr constant { { %"struct.xpathyy::YyParser::by_kind", [12 x i8], %"class.xpathyy::YyParser::semantic_type" } } { { %"struct.xpathyy::YyParser::by_kind", [12 x i8], %"class.xpathyy::YyParser::semantic_type" } { %"struct.xpathyy::YyParser::by_kind" { i32 -1431655766 }, [12 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA", %"class.xpathyy::YyParser::semantic_type" { %union.anon { x86_fp80 0xKFFFFFFFFFFFFFFFFFFFF } } } }, align 16
@.str = private unnamed_addr constant [9 x i8] c"Shifting\00", align 1
@__const._ZN7xpathyy8YyParser5parseEv.yylhs = private unnamed_addr constant { { %"struct.xpathyy::YyParser::by_state", [15 x i8], %"class.xpathyy::YyParser::semantic_type" } } { { %"struct.xpathyy::YyParser::by_state", [15 x i8], %"class.xpathyy::YyParser::semantic_type" } { %"struct.xpathyy::YyParser::by_state" { i8 -86 }, [15 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA", %"class.xpathyy::YyParser::semantic_type" { %union.anon { x86_fp80 0xKFFFFFFFFFFFFFFFFFFFF } } } }, align 16
@.str.1 = private unnamed_addr constant [5 x i8] c"node\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"text\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"comment\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"syntax error\00", align 1
@_ZN7xpathyy8YyParser12yypact_ninf_E = hidden local_unnamed_addr constant i8 -44, align 1
@_ZN7xpathyy8YyParser13yytable_ninf_E = hidden local_unnamed_addr constant i8 -1, align 1
@_ZN7xpathyy8YyParser7yypact_E = hidden local_unnamed_addr constant [94 x i8] c"MM\D4\F7\FC\12\D4\D4\D4\D4\D4\13\FE\D4M\D4$\D4\D4\0D\D4\0B\13\FE\D4\13\D4\15\D4\11\22&,.\141\D4\D4\19\FD;M\D4\13\D4\0D\1D\D4\FE\FE\13\13\D4\0D\13_\FE\FEMMMMMMM\D4\1E\D4\D4\D4\00\D4\1F\D4\D4\D4\D4\D4\D4\D4\0D\0D&,.\1411\D4\D4\D4M\D4\D4", align 16
@_ZN7xpathyy8YyParser9yydefact_E = hidden local_unnamed_addr constant [94 x i8] c"\00\00\10\00\00\00\1F\1D \1C\1A\15\05\11\00\1B\00)\04\03\08\00\15\00\0F-!<'*\02/1357:=\00\00\00\00\0C\16\17\06\00\01\00\00\15\15\0B\07.\00\00\00\00\00\00\00\00\00\00\12\00\13\22&\00$\00\18\1E\09\0A\0E\0D(+,024689;\14#\00\19%", align 16
@_ZN7xpathyy8YyParser8yypgoto_E = hidden local_unnamed_addr constant [27 x i8] c"\D4\02\D4\D4\F5\D5\D4#\EE!\DC\F0\D4\D4\D4\D4\E0\D4\05\D4\D4\03\08\FB\01\E9\FF", align 16
@_ZN7xpathyy8YyParser10yydefgoto_E = hidden local_unnamed_addr constant [27 x i8] c"\FFE\11\12\13\14\15\16*+,\17\18\19\1AFG\1B\1C\1D\1E\1F !\22#$", align 16
@_ZN7xpathyy8YyParser8yytable_E = hidden local_unnamed_addr constant [123 x i8] c"%-\1014KLI\02\03\04B59&\09.\0BI'\0DC\03\04Z\0F>?[12\0AMN0\0A/18VW(:H)PQ;<A7=@JYT3\5C6]ORUX11\01S\00\02\03\04\05\06\07\08\09\0A\0B\00\0C\0D\0ED\01\00\0F\02\03\04\05\06\07\08\09\0A\0B\00\0C\0D\0E\00\00\00\0F\02\03\04\05\06\07\08\09\0A\0B\00\0C\0D\0E\00\00\00\0F", align 16
@_ZN7xpathyy8YyParser8yycheck_E = hidden local_unnamed_addr constant [123 x i8] c"\01\0C\00\13\1601+\0A\0B\0C\0E\17\1D\17\11\0E\136\17\16\18\0B\0C\18\1B\06\07\1C-\13\1223\15\12\005\15>?\17\08)\1989\09\04\18\1D\05\03\18\18<\15\1A\19[7:=@PQ\07;\FF\0A\0B\0C\0D\0E\0F\10\11\12\13\FF\15\16\17\18\07\FF\1B\0A\0B\0C\0D\0E\0F\10\11\12\13\FF\15\16\17\FF\FF\FF\1B\0A\0B\0C\0D\0E\0F\10\11\12\13\FF\15\16\17\FF\FF\FF\1B", align 16
@_ZN7xpathyy8YyParser7yystos_E = hidden local_unnamed_addr constant [94 x i8] c"\00\07\0A\0B\0C\0D\0E\0F\10\11\12\13\15\16\17\1B\1F !\22#$%)*+,/0123456788\17\17\17\19&'(\22\1F\00\15)\13%&\22'\1D\15)\08\09\04\05\06\07\03\18\0E\18\18\1F-.\1F(\18##&&0\22\223456778\18\18\1C\1A.", align 16
@_ZN7xpathyy8YyParser5yyr1_E = hidden local_unnamed_addr constant [62 x i8] c"\00\1E\1F  !!!\22\22\22#####$$%%%&&''()**+++++,,--.//000011223344556667788", align 16
@_ZN7xpathyy8YyParser5yyr2_E = hidden local_unnamed_addr constant [62 x i8] c"\00\02\01\01\01\01\02\02\01\03\03\02\02\03\03\01\01\01\03\03\04\00\01\01\02\03\01\01\01\01\03\01\01\01\03\04\01\03\01\01\03\01\01\03\03\01\02\01\03\01\03\01\03\01\03\01\03\03\01\03\01\02", align 16
@_ZZN7xpathyy8YyParser12yytranslate_EiE15translate_table = internal unnamed_addr constant [276 x i8] calign 16
@_ZTVN7xpathyy8YyParser12syntax_errorE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.xpathyy::YyParser::syntax_error"*)* @_ZN7xpathyy8YyParser12syntax_errorD2Ev to i8*), i8* bitcast (void (%"struct.xpathyy::YyParser::syntax_error"*)* @_ZN7xpathyy8YyParser12syntax_errorD0Ev to i8*), i8* bitcast (i8* (%"class.std::runtime_error"*)* @_ZNKSt13runtime_error4whatEv to i8*)] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN5blink5xpath6Parser15current_parser_E = external local_unnamed_addr global %"class.blink::xpath::Parser"*, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.18 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.19 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.20 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.21 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.22 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.23 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@.str.24 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.25 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.26 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_5xpath10ExpressionEEENS_12VectorTraitsIS6_EEEEEEPKcv = private unnamed_addr constant [175 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::xpath::Expression>, WTF::VectorTraits<blink::Member<blink::xpath::Expression> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5xpath9ParseNodeEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::xpath::ParseNode]\00", align 1
@_ZZN5blink11GCInfoTraitINS_5xpath9ParseNodeEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_5xpath9ParseNodeEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_5xpath9ParseNodeEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_5xpath9ParseNodeEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_5xpath9ParseNodeEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5xpath4Step8NodeTestEEEPKcv = private unnamed_addr constant [76 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::xpath::Step::NodeTest]\00", align 1
@_ZZN5blink11GCInfoTraitINS_5xpath4Step8NodeTestEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_5xpath4Step8NodeTestEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_5xpath4Step8NodeTestEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_5xpath4Step8NodeTestEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_5xpath4Step8NodeTestEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10HeapVectorINS1_6MemberINS1_5xpath9PredicateEEELj0EEEEEPKcv = private unnamed_addr constant [108 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVector<blink::Member<blink::xpath::Predicate>, 0>]\00", align 1
@_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_5xpath9PredicateEEELj0EEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_5xpath9PredicateEEELj0EEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_5xpath9PredicateEEELj0EEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_5xpath9PredicateEEELj0EEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5xpath9PredicateEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::xpath::Predicate]\00", align 1
@_ZZN5blink11GCInfoTraitINS_5xpath9PredicateEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_5xpath9PredicateEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_5xpath9PredicateEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_5xpath9PredicateEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_5xpath9PredicateEEENS_12VectorTraitsIS6_EEEEEEPKcv = private unnamed_addr constant [173 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::xpath::Predicate>, WTF::VectorTraits<blink::Member<blink::xpath::Predicate> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10HeapVectorINS1_6MemberINS1_5xpath10ExpressionEEELj0EEEEEPKcv = private unnamed_addr constant [109 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVector<blink::Member<blink::xpath::Expression>, 0>]\00", align 1
@_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_5xpath10ExpressionEEELj0EEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_5xpath10ExpressionEEELj0EEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_5xpath10ExpressionEEELj0EEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_5xpath10ExpressionEEELj0EEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink5xpath5UnionE = external unnamed_addr constant { [7 x i8*] }, align 8
@_ZTVN5blink5xpath8NegativeE = external unnamed_addr constant { [7 x i8*] }, align 8

@_ZN7xpathyy8YyParserC1EPN5blink5xpath6ParserE = hidden unnamed_addr alias void (%"class.xpathyy::YyParser"*, %"class.blink::xpath::Parser"*), void (%"class.xpathyy::YyParser"*, %"class.blink::xpath::Parser"*)* @_ZN7xpathyy8YyParserC2EPN5blink5xpath6ParserE
@_ZN7xpathyy8YyParserD1Ev = hidden unnamed_addr alias void (%"class.xpathyy::YyParser"*), void (%"class.xpathyy::YyParser"*)* @_ZN7xpathyy8YyParserD2Ev
@_ZN7xpathyy8YyParser12syntax_errorD1Ev = hidden unnamed_addr alias void (%"struct.xpathyy::YyParser::syntax_error"*), void (%"struct.xpathyy::YyParser::syntax_error"*)* @_ZN7xpathyy8YyParser12syntax_errorD2Ev
@_ZN7xpathyy8YyParser7by_kindC1Ev = hidden unnamed_addr alias void (%"struct.xpathyy::YyParser::by_kind"*), void (%"struct.xpathyy::YyParser::by_kind"*)* @_ZN7xpathyy8YyParser7by_kindC2Ev
@_ZN7xpathyy8YyParser7by_kindC1EOS1_ = hidden unnamed_addr alias void (%"struct.xpathyy::YyParser::by_kind"*, %"struct.xpathyy::YyParser::by_kind"*), void (%"struct.xpathyy::YyParser::by_kind"*, %"struct.xpathyy::YyParser::by_kind"*)* @_ZN7xpathyy8YyParser7by_kindC2EOS1_
@_ZN7xpathyy8YyParser7by_kindC1ERKS1_ = hidden unnamed_addr alias void (%"struct.xpathyy::YyParser::by_kind"*, %"struct.xpathyy::YyParser::by_kind"*), void (%"struct.xpathyy::YyParser::by_kind"*, %"struct.xpathyy::YyParser::by_kind"*)* @_ZN7xpathyy8YyParser7by_kindC2ERKS1_
@_ZN7xpathyy8YyParser7by_kindC1ENS0_5token15token_kind_typeE = hidden unnamed_addr alias void (%"struct.xpathyy::YyParser::by_kind"*, i32), void (%"struct.xpathyy::YyParser::by_kind"*, i32)* @_ZN7xpathyy8YyParser7by_kindC2ENS0_5token15token_kind_typeE
@_ZN7xpathyy8YyParser8by_stateC1Ev = hidden unnamed_addr alias void (%"struct.xpathyy::YyParser::by_state"*), void (%"struct.xpathyy::YyParser::by_state"*)* @_ZN7xpathyy8YyParser8by_stateC2Ev
@_ZN7xpathyy8YyParser8by_stateC1ERKS1_ = hidden unnamed_addr alias void (%"struct.xpathyy::YyParser::by_state"*, %"struct.xpathyy::YyParser::by_state"*), void (%"struct.xpathyy::YyParser::by_state"*, %"struct.xpathyy::YyParser::by_state"*)* @_ZN7xpathyy8YyParser8by_stateC2ERKS1_
@_ZN7xpathyy8YyParser8by_stateC1Ea = hidden unnamed_addr alias void (%"struct.xpathyy::YyParser::by_state"*, i8), void (%"struct.xpathyy::YyParser::by_state"*, i8)* @_ZN7xpathyy8YyParser8by_stateC2Ea
@_ZN7xpathyy8YyParser17stack_symbol_typeC1Ev = hidden unnamed_addr alias void (%"struct.xpathyy::YyParser::stack_symbol_type"*), void (%"struct.xpathyy::YyParser::stack_symbol_type"*)* @_ZN7xpathyy8YyParser17stack_symbol_typeC2Ev
@_ZN7xpathyy8YyParser17stack_symbol_typeC1EOS1_ = hidden unnamed_addr alias void (%"struct.xpathyy::YyParser::stack_symbol_type"*, %"struct.xpathyy::YyParser::stack_symbol_type"*), void (%"struct.xpathyy::YyParser::stack_symbol_type"*, %"struct.xpathyy::YyParser::stack_symbol_type"*)* @_ZN7xpathyy8YyParser17stack_symbol_typeC2EOS1_
@_ZN7xpathyy8YyParser17stack_symbol_typeC1EaONS0_11symbol_typeE = hidden unnamed_addr alias void (%"struct.xpathyy::YyParser::stack_symbol_type"*, i8, %"struct.xpathyy::YyParser::symbol_type"*), void (%"struct.xpathyy::YyParser::stack_symbol_type"*, i8, %"struct.xpathyy::YyParser::symbol_type"*)* @_ZN7xpathyy8YyParser17stack_symbol_typeC2EaONS0_11symbol_typeE

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7xpathyy8YyParser5errorERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.xpathyy::YyParser"* nocapture, %"class.std::__1::basic_string"* nocapture dereferenceable(24)) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7xpathyy8YyParserC2EPN5blink5xpath6ParserE(%"class.xpathyy::YyParser"* nocapture, %"class.blink::xpath::Parser"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.xpathyy::YyParser", %"class.xpathyy::YyParser"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7xpathyy8YyParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.xpathyy::YyParser", %"class.xpathyy::YyParser"* %0, i64 0, i32 1
  %5 = tail call i8* @_Znwm(i64 6400) #17
  %6 = bitcast i8* %5 to %"struct.xpathyy::YyParser::stack_symbol_type"*
  %7 = getelementptr inbounds %"class.xpathyy::YyParser", %"class.xpathyy::YyParser"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.xpathyy::YyParser::stack_symbol_type"** %7 to i8**
  store i8* %5, i8** %8, align 8
  %9 = bitcast %"class.xpathyy::YyParser::stack"* %4 to i8**
  store i8* %5, i8** %9, align 8
  %10 = getelementptr inbounds i8, i8* %5, i64 6400
  %11 = bitcast i8* %10 to %"struct.xpathyy::YyParser::stack_symbol_type"*
  %12 = getelementptr inbounds %"class.xpathyy::YyParser", %"class.xpathyy::YyParser"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"struct.xpathyy::YyParser::stack_symbol_type"** %12 to i8**
  store i8* %10, i8** %13, align 8
  br label %14

14:                                               ; preds = %14, %2
  %15 = phi %"struct.xpathyy::YyParser::stack_symbol_type"* [ %6, %2 ], [ %46, %14 ]
  %16 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %15, i64 0, i32 0, i32 0, i32 0
  store i8 0, i8* %16, align 1
  %17 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %15, i64 0, i32 0, i32 1
  %18 = bitcast %"class.xpathyy::YyParser::semantic_type"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 16 %18, i8 0, i64 16, i1 false) #18
  %19 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %15, i64 1, i32 0, i32 0, i32 0
  store i8 0, i8* %19, align 1
  %20 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %15, i64 1, i32 0, i32 1
  %21 = bitcast %"class.xpathyy::YyParser::semantic_type"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 16 %21, i8 0, i64 16, i1 false) #18
  %22 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %15, i64 2, i32 0, i32 0, i32 0
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %15, i64 2, i32 0, i32 1
  %24 = bitcast %"class.xpathyy::YyParser::semantic_type"* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 16 %24, i8 0, i64 16, i1 false) #18
  %25 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %15, i64 3, i32 0, i32 0, i32 0
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %15, i64 3, i32 0, i32 1
  %27 = bitcast %"class.xpathyy::YyParser::semantic_type"* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 16 %27, i8 0, i64 16, i1 false) #18
  %28 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %15, i64 4, i32 0, i32 0, i32 0
  store i8 0, i8* %28, align 1
  %29 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %15, i64 4, i32 0, i32 1
  %30 = bitcast %"class.xpathyy::YyParser::semantic_type"* %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 16 %30, i8 0, i64 16, i1 false) #18
  %31 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %15, i64 5, i32 0, i32 0, i32 0
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %15, i64 5, i32 0, i32 1
  %33 = bitcast %"class.xpathyy::YyParser::semantic_type"* %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 16 %33, i8 0, i64 16, i1 false) #18
  %34 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %15, i64 6, i32 0, i32 0, i32 0
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %15, i64 6, i32 0, i32 1
  %36 = bitcast %"class.xpathyy::YyParser::semantic_type"* %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 16 %36, i8 0, i64 16, i1 false) #18
  %37 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %15, i64 7, i32 0, i32 0, i32 0
  store i8 0, i8* %37, align 1
  %38 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %15, i64 7, i32 0, i32 1
  %39 = bitcast %"class.xpathyy::YyParser::semantic_type"* %38 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 16 %39, i8 0, i64 16, i1 false) #18
  %40 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %15, i64 8, i32 0, i32 0, i32 0
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %15, i64 8, i32 0, i32 1
  %42 = bitcast %"class.xpathyy::YyParser::semantic_type"* %41 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 16 %42, i8 0, i64 16, i1 false) #18
  %43 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %15, i64 9, i32 0, i32 0, i32 0
  store i8 0, i8* %43, align 1
  %44 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %15, i64 9, i32 0, i32 1
  %45 = bitcast %"class.xpathyy::YyParser::semantic_type"* %44 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 16 %45, i8 0, i64 16, i1 false) #18
  %46 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %15, i64 10
  %47 = icmp eq %"struct.xpathyy::YyParser::stack_symbol_type"* %46, %11
  br i1 %47, label %48, label %14

48:                                               ; preds = %14
  %49 = bitcast %"struct.xpathyy::YyParser::stack_symbol_type"** %7 to i64*
  %50 = ptrtoint i8* %10 to i64
  store i64 %50, i64* %49, align 8
  %51 = getelementptr inbounds %"class.xpathyy::YyParser", %"class.xpathyy::YyParser"* %0, i64 0, i32 2
  store %"class.blink::xpath::Parser"* %1, %"class.blink::xpath::Parser"** %51, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7xpathyy8YyParserD2Ev(%"class.xpathyy::YyParser"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.xpathyy::YyParser", %"class.xpathyy::YyParser"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7xpathyy8YyParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.xpathyy::YyParser", %"class.xpathyy::YyParser"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.xpathyy::YyParser::stack_symbol_type"*, %"struct.xpathyy::YyParser::stack_symbol_type"** %3, align 8
  %5 = icmp eq %"struct.xpathyy::YyParser::stack_symbol_type"* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.xpathyy::YyParser", %"class.xpathyy::YyParser"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %8 = load %"struct.xpathyy::YyParser::stack_symbol_type"*, %"struct.xpathyy::YyParser::stack_symbol_type"** %7, align 8
  %9 = icmp eq %"struct.xpathyy::YyParser::stack_symbol_type"* %8, %4
  br i1 %9, label %17, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"struct.xpathyy::YyParser::stack_symbol_type"* [ %12, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %11, i64 -1
  %13 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %12, i64 0, i32 0
  tail call void @_ZN7xpathyy8YyParser12basic_symbolINS0_8by_stateEE5clearEv(%"struct.xpathyy::YyParser::basic_symbol"* %13) #18
  %14 = icmp eq %"struct.xpathyy::YyParser::stack_symbol_type"* %12, %4
  br i1 %14, label %15, label %10

15:                                               ; preds = %10
  %16 = load %"struct.xpathyy::YyParser::stack_symbol_type"*, %"struct.xpathyy::YyParser::stack_symbol_type"** %3, align 8
  br label %17

17:                                               ; preds = %15, %6
  %18 = phi %"struct.xpathyy::YyParser::stack_symbol_type"* [ %16, %15 ], [ %4, %6 ]
  store %"struct.xpathyy::YyParser::stack_symbol_type"* %4, %"struct.xpathyy::YyParser::stack_symbol_type"** %7, align 8
  %19 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %18, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %19) #17
  br label %20

20:                                               ; preds = %1, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7xpathyy8YyParserD0Ev(%"class.xpathyy::YyParser"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.xpathyy::YyParser", %"class.xpathyy::YyParser"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN7xpathyy8YyParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.xpathyy::YyParser", %"class.xpathyy::YyParser"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.xpathyy::YyParser::stack_symbol_type"*, %"struct.xpathyy::YyParser::stack_symbol_type"** %3, align 8
  %5 = icmp eq %"struct.xpathyy::YyParser::stack_symbol_type"* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.xpathyy::YyParser", %"class.xpathyy::YyParser"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %8 = load %"struct.xpathyy::YyParser::stack_symbol_type"*, %"struct.xpathyy::YyParser::stack_symbol_type"** %7, align 8
  %9 = icmp eq %"struct.xpathyy::YyParser::stack_symbol_type"* %8, %4
  br i1 %9, label %17, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"struct.xpathyy::YyParser::stack_symbol_type"* [ %12, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %11, i64 -1
  %13 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %12, i64 0, i32 0
  tail call void @_ZN7xpathyy8YyParser12basic_symbolINS0_8by_stateEE5clearEv(%"struct.xpathyy::YyParser::basic_symbol"* %13) #18
  %14 = icmp eq %"struct.xpathyy::YyParser::stack_symbol_type"* %12, %4
  br i1 %14, label %15, label %10

15:                                               ; preds = %10
  %16 = load %"struct.xpathyy::YyParser::stack_symbol_type"*, %"struct.xpathyy::YyParser::stack_symbol_type"** %3, align 8
  br label %17

17:                                               ; preds = %15, %6
  %18 = phi %"struct.xpathyy::YyParser::stack_symbol_type"* [ %16, %15 ], [ %4, %6 ]
  store %"struct.xpathyy::YyParser::stack_symbol_type"* %4, %"struct.xpathyy::YyParser::stack_symbol_type"** %7, align 8
  %19 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %18, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %19) #17
  br label %20

20:                                               ; preds = %1, %17
  %21 = bitcast %"class.xpathyy::YyParser"* %0 to i8*
  tail call void @_ZdlPv(i8* %21) #17
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt13runtime_errorD2Ev(%"class.std::runtime_error"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7xpathyy8YyParser12syntax_errorD2Ev(%"struct.xpathyy::YyParser::syntax_error"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.xpathyy::YyParser::syntax_error", %"struct.xpathyy::YyParser::syntax_error"* %0, i64 0, i32 0
  tail call void @_ZNSt13runtime_errorD2Ev(%"class.std::runtime_error"* %2) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7xpathyy8YyParser12syntax_errorD0Ev(%"struct.xpathyy::YyParser::syntax_error"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.xpathyy::YyParser::syntax_error", %"struct.xpathyy::YyParser::syntax_error"* %0, i64 0, i32 0
  tail call void @_ZNSt13runtime_errorD2Ev(%"class.std::runtime_error"* %2) #18
  %3 = bitcast %"struct.xpathyy::YyParser::syntax_error"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #17
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7xpathyy8YyParser7by_kindC2Ev(%"struct.xpathyy::YyParser::by_kind"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"struct.xpathyy::YyParser::by_kind", %"struct.xpathyy::YyParser::by_kind"* %0, i64 0, i32 0
  store i32 -2, i32* %2, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN7xpathyy8YyParser7by_kindC2EOS1_(%"struct.xpathyy::YyParser::by_kind"* nocapture, %"struct.xpathyy::YyParser::by_kind"* nocapture dereferenceable(4)) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"struct.xpathyy::YyParser::by_kind", %"struct.xpathyy::YyParser::by_kind"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.xpathyy::YyParser::by_kind", %"struct.xpathyy::YyParser::by_kind"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %3, align 4
  store i32 -2, i32* %4, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7xpathyy8YyParser7by_kind5clearEv(%"struct.xpathyy::YyParser::by_kind"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"struct.xpathyy::YyParser::by_kind", %"struct.xpathyy::YyParser::by_kind"* %0, i64 0, i32 0
  store i32 -2, i32* %2, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN7xpathyy8YyParser7by_kindC2ERKS1_(%"struct.xpathyy::YyParser::by_kind"* nocapture, %"struct.xpathyy::YyParser::by_kind"* nocapture readonly dereferenceable(4)) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"struct.xpathyy::YyParser::by_kind", %"struct.xpathyy::YyParser::by_kind"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.xpathyy::YyParser::by_kind", %"struct.xpathyy::YyParser::by_kind"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  store i32 %5, i32* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7xpathyy8YyParser7by_kindC2ENS0_5token15token_kind_typeE(%"struct.xpathyy::YyParser::by_kind"* nocapture, i32) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.xpathyy::YyParser::by_kind", %"struct.xpathyy::YyParser::by_kind"* %0, i64 0, i32 0
  %4 = icmp slt i32 %1, 1
  br i1 %4, label %12, label %5

5:                                                ; preds = %2
  %6 = icmp slt i32 %1, 276
  br i1 %6, label %7, label %12

7:                                                ; preds = %5
  %8 = sext i32 %1 to i64
  %9 = getelementptr inbounds [276 x i8], [276 x i8]* @_ZZN7xpathyy8YyParser12yytranslate_EiE15translate_table, i64 0, i64 %8
  %10 = load i8, i8* %9, align 1
  %11 = sext i8 %10 to i32
  br label %12

12:                                               ; preds = %2, %5, %7
  %13 = phi i32 [ %11, %7 ], [ 0, %2 ], [ 2, %5 ]
  store i32 %13, i32* %3, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN7xpathyy8YyParser12yytranslate_Ei(i32) local_unnamed_addr #0 align 2 {
  %2 = icmp slt i32 %0, 1
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = icmp slt i32 %0, 276
  br i1 %4, label %5, label %10

5:                                                ; preds = %3
  %6 = sext i32 %0 to i64
  %7 = getelementptr inbounds [276 x i8], [276 x i8]* @_ZZN7xpathyy8YyParser12yytranslate_EiE15translate_table, i64 0, i64 %6
  %8 = load i8, i8* %7, align 1
  %9 = sext i8 %8 to i32
  br label %10

10:                                               ; preds = %3, %1, %5
  %11 = phi i32 [ %9, %5 ], [ 0, %1 ], [ 2, %3 ]
  ret i32 %11
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN7xpathyy8YyParser7by_kind4moveERS1_(%"struct.xpathyy::YyParser::by_kind"* nocapture, %"struct.xpathyy::YyParser::by_kind"* nocapture dereferenceable(4)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"struct.xpathyy::YyParser::by_kind", %"struct.xpathyy::YyParser::by_kind"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.xpathyy::YyParser::by_kind", %"struct.xpathyy::YyParser::by_kind"* %0, i64 0, i32 0
  store i32 %4, i32* %5, align 4
  store i32 -2, i32* %3, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK7xpathyy8YyParser7by_kind4kindEv(%"struct.xpathyy::YyParser::by_kind"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"struct.xpathyy::YyParser::by_kind", %"struct.xpathyy::YyParser::by_kind"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK7xpathyy8YyParser7by_kind8type_getEv(%"struct.xpathyy::YyParser::by_kind"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"struct.xpathyy::YyParser::by_kind", %"struct.xpathyy::YyParser::by_kind"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7xpathyy8YyParser8by_stateC2Ev(%"struct.xpathyy::YyParser::by_state"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"struct.xpathyy::YyParser::by_state", %"struct.xpathyy::YyParser::by_state"* %0, i64 0, i32 0
  store i8 0, i8* %2, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN7xpathyy8YyParser8by_stateC2ERKS1_(%"struct.xpathyy::YyParser::by_state"* nocapture, %"struct.xpathyy::YyParser::by_state"* nocapture readonly dereferenceable(1)) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"struct.xpathyy::YyParser::by_state", %"struct.xpathyy::YyParser::by_state"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.xpathyy::YyParser::by_state", %"struct.xpathyy::YyParser::by_state"* %1, i64 0, i32 0
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %3, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7xpathyy8YyParser8by_state5clearEv(%"struct.xpathyy::YyParser::by_state"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"struct.xpathyy::YyParser::by_state", %"struct.xpathyy::YyParser::by_state"* %0, i64 0, i32 0
  store i8 0, i8* %2, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN7xpathyy8YyParser8by_state4moveERS1_(%"struct.xpathyy::YyParser::by_state"* nocapture, %"struct.xpathyy::YyParser::by_state"* nocapture dereferenceable(1)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"struct.xpathyy::YyParser::by_state", %"struct.xpathyy::YyParser::by_state"* %1, i64 0, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = getelementptr inbounds %"struct.xpathyy::YyParser::by_state", %"struct.xpathyy::YyParser::by_state"* %0, i64 0, i32 0
  store i8 %4, i8* %5, align 1
  store i8 0, i8* %3, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7xpathyy8YyParser8by_stateC2Ea(%"struct.xpathyy::YyParser::by_state"* nocapture, i8 signext) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.xpathyy::YyParser::by_state", %"struct.xpathyy::YyParser::by_state"* %0, i64 0, i32 0
  store i8 %1, i8* %3, align 1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK7xpathyy8YyParser8by_state4kindEv(%"struct.xpathyy::YyParser::by_state"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"struct.xpathyy::YyParser::by_state", %"struct.xpathyy::YyParser::by_state"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = sext i8 %3 to i64
  %7 = getelementptr inbounds [94 x i8], [94 x i8]* @_ZN7xpathyy8YyParser7yystos_E, i64 0, i64 %6
  %8 = load i8, i8* %7, align 1
  %9 = sext i8 %8 to i32
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi i32 [ %9, %5 ], [ -2, %1 ]
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7xpathyy8YyParser17stack_symbol_typeC2Ev(%"struct.xpathyy::YyParser::stack_symbol_type"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %0, i64 0, i32 0, i32 0, i32 0
  store i8 0, i8* %2, align 1
  %3 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.xpathyy::YyParser::semantic_type"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 16 %4, i8 0, i64 16, i1 false) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7xpathyy8YyParser17stack_symbol_typeC2EOS1_(%"struct.xpathyy::YyParser::stack_symbol_type"*, %"struct.xpathyy::YyParser::stack_symbol_type"* dereferenceable(32)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %0, i64 0, i32 0, i32 0, i32 0
  store i8 %4, i8* %5, align 1
  %6 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.xpathyy::YyParser::semantic_type"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 16 %7, i8 0, i64 16, i1 false) #18
  %8 = load i8, i8* %3, align 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %48, label %10

10:                                               ; preds = %2
  %11 = sext i8 %8 to i64
  %12 = getelementptr inbounds [94 x i8], [94 x i8]* @_ZN7xpathyy8YyParser7yystos_E, i64 0, i64 %11
  %13 = load i8, i8* %12, align 1
  %14 = sext i8 %13 to i32
  switch i32 %14, label %48 [
    i32 11, label %15
    i32 12, label %15
    i32 13, label %15
    i32 14, label %15
    i32 15, label %15
    i32 16, label %15
    i32 19, label %15
    i32 45, label %21
    i32 38, label %23
    i32 39, label %23
    i32 31, label %25
    i32 40, label %25
    i32 43, label %25
    i32 44, label %25
    i32 46, label %25
    i32 47, label %25
    i32 48, label %25
    i32 49, label %25
    i32 50, label %25
    i32 51, label %25
    i32 52, label %25
    i32 53, label %25
    i32 54, label %25
    i32 55, label %25
    i32 56, label %25
    i32 32, label %27
    i32 33, label %27
    i32 34, label %27
    i32 37, label %29
    i32 35, label %31
    i32 41, label %31
    i32 42, label %31
    i32 4, label %33
    i32 5, label %33
    i32 3, label %38
    i32 10, label %43
    i32 36, label %43
  ]

15:                                               ; preds = %10, %10, %10, %10, %10, %10, %10
  %16 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %1, i64 0, i32 0, i32 1
  %17 = bitcast %"class.xpathyy::YyParser::semantic_type"* %16 to %"class.WTF::StringImpl"**
  %18 = bitcast %"class.xpathyy::YyParser::semantic_type"* %16 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.xpathyy::YyParser::semantic_type"* %6 to i64*
  store i64 %19, i64* %20, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %17, align 8
  br label %48

21:                                               ; preds = %10
  %22 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %1, i64 0, i32 0, i32 1
  tail call void @_ZN7xpathyy8YyParser13semantic_type4moveIN5blink10PersistentINS3_10HeapVectorINS3_6MemberINS3_5xpath10ExpressionEEELj0EEEEEEEvOS1_(%"class.xpathyy::YyParser::semantic_type"* %6, %"class.xpathyy::YyParser::semantic_type"* dereferenceable(16) %22)
  br label %48

23:                                               ; preds = %10, %10
  %24 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %1, i64 0, i32 0, i32 1
  tail call void @_ZN7xpathyy8YyParser13semantic_type4moveIN5blink10PersistentINS3_10HeapVectorINS3_6MemberINS3_5xpath9PredicateEEELj0EEEEEEEvOS1_(%"class.xpathyy::YyParser::semantic_type"* %6, %"class.xpathyy::YyParser::semantic_type"* dereferenceable(16) %24)
  br label %48

25:                                               ; preds = %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10, %10
  %26 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %1, i64 0, i32 0, i32 1
  tail call void @_ZN7xpathyy8YyParser13semantic_type4moveIN5blink10PersistentINS3_5xpath10ExpressionEEEEEvOS1_(%"class.xpathyy::YyParser::semantic_type"* %6, %"class.xpathyy::YyParser::semantic_type"* dereferenceable(16) %26)
  br label %48

27:                                               ; preds = %10, %10, %10
  %28 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %1, i64 0, i32 0, i32 1
  tail call void @_ZN7xpathyy8YyParser13semantic_type4moveIN5blink10PersistentINS3_5xpath12LocationPathEEEEEvOS1_(%"class.xpathyy::YyParser::semantic_type"* %6, %"class.xpathyy::YyParser::semantic_type"* dereferenceable(16) %28)
  br label %48

29:                                               ; preds = %10
  %30 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %1, i64 0, i32 0, i32 1
  tail call void @_ZN7xpathyy8YyParser13semantic_type4moveIN5blink10PersistentINS3_5xpath4Step8NodeTestEEEEEvOS1_(%"class.xpathyy::YyParser::semantic_type"* %6, %"class.xpathyy::YyParser::semantic_type"* dereferenceable(16) %30)
  br label %48

31:                                               ; preds = %10, %10, %10
  %32 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %1, i64 0, i32 0, i32 1
  tail call void @_ZN7xpathyy8YyParser13semantic_type4moveIN5blink10PersistentINS3_5xpath4StepEEEEEvOS1_(%"class.xpathyy::YyParser::semantic_type"* %6, %"class.xpathyy::YyParser::semantic_type"* dereferenceable(16) %32)
  br label %48

33:                                               ; preds = %10, %10
  %34 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %1, i64 0, i32 0, i32 1
  %35 = bitcast %"class.xpathyy::YyParser::semantic_type"* %34 to i32*
  %36 = bitcast %"class.xpathyy::YyParser::semantic_type"* %6 to i32*
  %37 = load i32, i32* %35, align 4
  store i32 %37, i32* %36, align 4
  br label %48

38:                                               ; preds = %10
  %39 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %1, i64 0, i32 0, i32 1
  %40 = bitcast %"class.xpathyy::YyParser::semantic_type"* %39 to i32*
  %41 = bitcast %"class.xpathyy::YyParser::semantic_type"* %6 to i32*
  %42 = load i32, i32* %40, align 4
  store i32 %42, i32* %41, align 4
  br label %48

43:                                               ; preds = %10, %10
  %44 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %1, i64 0, i32 0, i32 1
  %45 = bitcast %"class.xpathyy::YyParser::semantic_type"* %44 to i32*
  %46 = bitcast %"class.xpathyy::YyParser::semantic_type"* %6 to i32*
  %47 = load i32, i32* %45, align 4
  store i32 %47, i32* %46, align 4
  br label %48

48:                                               ; preds = %2, %10, %43, %38, %33, %31, %29, %27, %25, %23, %21, %15
  store i8 0, i8* %3, align 16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7xpathyy8YyParser13semantic_type4moveIN5blink10PersistentINS3_10HeapVectorINS3_6MemberINS3_5xpath10ExpressionEEELj0EEEEEEEvOS1_(%"class.xpathyy::YyParser::semantic_type"*, %"class.xpathyy::YyParser::semantic_type"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %3 = bitcast %"class.xpathyy::YyParser::semantic_type"* %0 to %"class.blink::Persistent"*
  %4 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.xpathyy::YyParser::semantic_type"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %3, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %7, align 8
  switch i64 %5, label %8 [
    i64 0, label %34
    i64 -1, label %34
  ]

8:                                                ; preds = %2
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #18
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !2

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #18
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %21, align 8
  %23 = icmp eq %"class.blink::PersistentNode"* %22, null
  br i1 %23, label %24, label %27, !prof !2

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %25) #18
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %21, align 8
  br label %27

27:                                               ; preds = %24, %15
  %28 = phi %"class.blink::PersistentNode"* [ %26, %24 ], [ %22, %15 ]
  %29 = bitcast %"class.blink::PersistentNode"* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  store i64 %30, i64* %31, align 8
  %32 = bitcast %"class.blink::PersistentNode"* %28 to %"class.xpathyy::YyParser::semantic_type"**
  store %"class.xpathyy::YyParser::semantic_type"* %0, %"class.xpathyy::YyParser::semantic_type"** %32, align 8
  %33 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %28, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_10HeapVectorINS_6MemberINS_5xpath10ExpressionEEELj0EEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKSA_15TracePersistentEPNS_7VisitorEEEE10TrampolineESC_PKv, void (%"class.blink::Visitor"*, i8*)** %33, align 8
  store %"class.blink::PersistentNode"* %28, %"class.blink::PersistentNode"** %7, align 8
  br label %34

34:                                               ; preds = %2, %2, %27
  %35 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1 to %"class.blink::PersistentBase"*
  %36 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %35, i64 0, i32 1, i32 0
  %37 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %38 = icmp eq %"class.blink::PersistentNode"* %37, null
  br i1 %38, label %58, label %39

39:                                               ; preds = %34
  %40 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %41 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %40, i64 0, i32 1
  %42 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %41) #18
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %46, !prof !2

44:                                               ; preds = %39
  %45 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %41, i8* %45) #18
  br label %46

46:                                               ; preds = %44, %39
  %47 = phi i8* [ %45, %44 ], [ %42, %39 ]
  %48 = bitcast i8* %47 to %"class.blink::ThreadState"**
  %49 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %50, align 8
  %52 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %53 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %51, i64 0, i32 0, i32 0
  %54 = bitcast %"class.blink::PersistentRegion"* %51 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.blink::PersistentNode"* %52 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %52, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %57, align 8
  store %"class.blink::PersistentNode"* %52, %"class.blink::PersistentNode"** %53, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %36, align 8
  br label %58

58:                                               ; preds = %34, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7xpathyy8YyParser13semantic_type4moveIN5blink10PersistentINS3_10HeapVectorINS3_6MemberINS3_5xpath9PredicateEEELj0EEEEEEEvOS1_(%"class.xpathyy::YyParser::semantic_type"*, %"class.xpathyy::YyParser::semantic_type"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %3 = bitcast %"class.xpathyy::YyParser::semantic_type"* %0 to %"class.blink::Persistent.199"*
  %4 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.xpathyy::YyParser::semantic_type"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.blink::Persistent.199", %"class.blink::Persistent.199"* %3, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %7, align 8
  switch i64 %5, label %8 [
    i64 0, label %34
    i64 -1, label %34
  ]

8:                                                ; preds = %2
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #18
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !2

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #18
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %21, align 8
  %23 = icmp eq %"class.blink::PersistentNode"* %22, null
  br i1 %23, label %24, label %27, !prof !2

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %25) #18
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %21, align 8
  br label %27

27:                                               ; preds = %24, %15
  %28 = phi %"class.blink::PersistentNode"* [ %26, %24 ], [ %22, %15 ]
  %29 = bitcast %"class.blink::PersistentNode"* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  store i64 %30, i64* %31, align 8
  %32 = bitcast %"class.blink::PersistentNode"* %28 to %"class.xpathyy::YyParser::semantic_type"**
  store %"class.xpathyy::YyParser::semantic_type"* %0, %"class.xpathyy::YyParser::semantic_type"** %32, align 8
  %33 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %28, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_10HeapVectorINS_6MemberINS_5xpath9PredicateEEELj0EEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKSA_15TracePersistentEPNS_7VisitorEEEE10TrampolineESC_PKv, void (%"class.blink::Visitor"*, i8*)** %33, align 8
  store %"class.blink::PersistentNode"* %28, %"class.blink::PersistentNode"** %7, align 8
  br label %34

34:                                               ; preds = %2, %2, %27
  %35 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1 to %"class.blink::PersistentBase.200"*
  %36 = getelementptr inbounds %"class.blink::PersistentBase.200", %"class.blink::PersistentBase.200"* %35, i64 0, i32 1, i32 0
  %37 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %38 = icmp eq %"class.blink::PersistentNode"* %37, null
  br i1 %38, label %58, label %39

39:                                               ; preds = %34
  %40 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %41 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %40, i64 0, i32 1
  %42 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %41) #18
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %46, !prof !2

44:                                               ; preds = %39
  %45 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %41, i8* %45) #18
  br label %46

46:                                               ; preds = %44, %39
  %47 = phi i8* [ %45, %44 ], [ %42, %39 ]
  %48 = bitcast i8* %47 to %"class.blink::ThreadState"**
  %49 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %50, align 8
  %52 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %53 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %51, i64 0, i32 0, i32 0
  %54 = bitcast %"class.blink::PersistentRegion"* %51 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.blink::PersistentNode"* %52 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %52, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %57, align 8
  store %"class.blink::PersistentNode"* %52, %"class.blink::PersistentNode"** %53, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %36, align 8
  br label %58

58:                                               ; preds = %34, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7xpathyy8YyParser13semantic_type4moveIN5blink10PersistentINS3_5xpath10ExpressionEEEEEvOS1_(%"class.xpathyy::YyParser::semantic_type"*, %"class.xpathyy::YyParser::semantic_type"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %3 = bitcast %"class.xpathyy::YyParser::semantic_type"* %0 to %"class.blink::Persistent.212"*
  %4 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.xpathyy::YyParser::semantic_type"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.blink::Persistent.212", %"class.blink::Persistent.212"* %3, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %7, align 8
  switch i64 %5, label %8 [
    i64 0, label %34
    i64 -1, label %34
  ]

8:                                                ; preds = %2
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #18
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !2

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #18
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %21, align 8
  %23 = icmp eq %"class.blink::PersistentNode"* %22, null
  br i1 %23, label %24, label %27, !prof !2

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %25) #18
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %21, align 8
  br label %27

27:                                               ; preds = %24, %15
  %28 = phi %"class.blink::PersistentNode"* [ %26, %24 ], [ %22, %15 ]
  %29 = bitcast %"class.blink::PersistentNode"* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  store i64 %30, i64* %31, align 8
  %32 = bitcast %"class.blink::PersistentNode"* %28 to %"class.xpathyy::YyParser::semantic_type"**
  store %"class.xpathyy::YyParser::semantic_type"* %0, %"class.xpathyy::YyParser::semantic_type"** %32, align 8
  %33 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %28, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %33, align 8
  store %"class.blink::PersistentNode"* %28, %"class.blink::PersistentNode"** %7, align 8
  br label %34

34:                                               ; preds = %2, %2, %27
  %35 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1 to %"class.blink::PersistentBase.213"*
  %36 = getelementptr inbounds %"class.blink::PersistentBase.213", %"class.blink::PersistentBase.213"* %35, i64 0, i32 1, i32 0
  %37 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %38 = icmp eq %"class.blink::PersistentNode"* %37, null
  br i1 %38, label %58, label %39

39:                                               ; preds = %34
  %40 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %41 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %40, i64 0, i32 1
  %42 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %41) #18
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %46, !prof !2

44:                                               ; preds = %39
  %45 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %41, i8* %45) #18
  br label %46

46:                                               ; preds = %44, %39
  %47 = phi i8* [ %45, %44 ], [ %42, %39 ]
  %48 = bitcast i8* %47 to %"class.blink::ThreadState"**
  %49 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %50, align 8
  %52 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %53 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %51, i64 0, i32 0, i32 0
  %54 = bitcast %"class.blink::PersistentRegion"* %51 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.blink::PersistentNode"* %52 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %52, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %57, align 8
  store %"class.blink::PersistentNode"* %52, %"class.blink::PersistentNode"** %53, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %36, align 8
  br label %58

58:                                               ; preds = %34, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7xpathyy8YyParser13semantic_type4moveIN5blink10PersistentINS3_5xpath12LocationPathEEEEEvOS1_(%"class.xpathyy::YyParser::semantic_type"*, %"class.xpathyy::YyParser::semantic_type"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %3 = bitcast %"class.xpathyy::YyParser::semantic_type"* %0 to %"class.blink::Persistent.214"*
  %4 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.xpathyy::YyParser::semantic_type"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.blink::Persistent.214", %"class.blink::Persistent.214"* %3, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %7, align 8
  switch i64 %5, label %8 [
    i64 0, label %34
    i64 -1, label %34
  ]

8:                                                ; preds = %2
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #18
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !2

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #18
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %21, align 8
  %23 = icmp eq %"class.blink::PersistentNode"* %22, null
  br i1 %23, label %24, label %27, !prof !2

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %25) #18
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %21, align 8
  br label %27

27:                                               ; preds = %24, %15
  %28 = phi %"class.blink::PersistentNode"* [ %26, %24 ], [ %22, %15 ]
  %29 = bitcast %"class.blink::PersistentNode"* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  store i64 %30, i64* %31, align 8
  %32 = bitcast %"class.blink::PersistentNode"* %28 to %"class.xpathyy::YyParser::semantic_type"**
  store %"class.xpathyy::YyParser::semantic_type"* %0, %"class.xpathyy::YyParser::semantic_type"** %32, align 8
  %33 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %28, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_5xpath12LocationPathELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %33, align 8
  store %"class.blink::PersistentNode"* %28, %"class.blink::PersistentNode"** %7, align 8
  br label %34

34:                                               ; preds = %2, %2, %27
  %35 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1 to %"class.blink::PersistentBase.215"*
  %36 = getelementptr inbounds %"class.blink::PersistentBase.215", %"class.blink::PersistentBase.215"* %35, i64 0, i32 1, i32 0
  %37 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %38 = icmp eq %"class.blink::PersistentNode"* %37, null
  br i1 %38, label %58, label %39

39:                                               ; preds = %34
  %40 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %41 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %40, i64 0, i32 1
  %42 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %41) #18
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %46, !prof !2

44:                                               ; preds = %39
  %45 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %41, i8* %45) #18
  br label %46

46:                                               ; preds = %44, %39
  %47 = phi i8* [ %45, %44 ], [ %42, %39 ]
  %48 = bitcast i8* %47 to %"class.blink::ThreadState"**
  %49 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %50, align 8
  %52 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %53 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %51, i64 0, i32 0, i32 0
  %54 = bitcast %"class.blink::PersistentRegion"* %51 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.blink::PersistentNode"* %52 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %52, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %57, align 8
  store %"class.blink::PersistentNode"* %52, %"class.blink::PersistentNode"** %53, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %36, align 8
  br label %58

58:                                               ; preds = %34, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7xpathyy8YyParser13semantic_type4moveIN5blink10PersistentINS3_5xpath4Step8NodeTestEEEEEvOS1_(%"class.xpathyy::YyParser::semantic_type"*, %"class.xpathyy::YyParser::semantic_type"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %3 = bitcast %"class.xpathyy::YyParser::semantic_type"* %0 to %"class.blink::Persistent.224"*
  %4 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.xpathyy::YyParser::semantic_type"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.blink::Persistent.224", %"class.blink::Persistent.224"* %3, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %7, align 8
  switch i64 %5, label %8 [
    i64 0, label %34
    i64 -1, label %34
  ]

8:                                                ; preds = %2
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #18
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !2

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #18
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %21, align 8
  %23 = icmp eq %"class.blink::PersistentNode"* %22, null
  br i1 %23, label %24, label %27, !prof !2

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %25) #18
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %21, align 8
  br label %27

27:                                               ; preds = %24, %15
  %28 = phi %"class.blink::PersistentNode"* [ %26, %24 ], [ %22, %15 ]
  %29 = bitcast %"class.blink::PersistentNode"* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  store i64 %30, i64* %31, align 8
  %32 = bitcast %"class.blink::PersistentNode"* %28 to %"class.xpathyy::YyParser::semantic_type"**
  store %"class.xpathyy::YyParser::semantic_type"* %0, %"class.xpathyy::YyParser::semantic_type"** %32, align 8
  %33 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %28, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_5xpath4Step8NodeTestELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS7_15TracePersistentEPNS_7VisitorEEEE10TrampolineES9_PKv, void (%"class.blink::Visitor"*, i8*)** %33, align 8
  store %"class.blink::PersistentNode"* %28, %"class.blink::PersistentNode"** %7, align 8
  br label %34

34:                                               ; preds = %2, %2, %27
  %35 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1 to %"class.blink::PersistentBase.225"*
  %36 = getelementptr inbounds %"class.blink::PersistentBase.225", %"class.blink::PersistentBase.225"* %35, i64 0, i32 1, i32 0
  %37 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %38 = icmp eq %"class.blink::PersistentNode"* %37, null
  br i1 %38, label %58, label %39

39:                                               ; preds = %34
  %40 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %41 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %40, i64 0, i32 1
  %42 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %41) #18
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %46, !prof !2

44:                                               ; preds = %39
  %45 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %41, i8* %45) #18
  br label %46

46:                                               ; preds = %44, %39
  %47 = phi i8* [ %45, %44 ], [ %42, %39 ]
  %48 = bitcast i8* %47 to %"class.blink::ThreadState"**
  %49 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %50, align 8
  %52 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %53 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %51, i64 0, i32 0, i32 0
  %54 = bitcast %"class.blink::PersistentRegion"* %51 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.blink::PersistentNode"* %52 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %52, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %57, align 8
  store %"class.blink::PersistentNode"* %52, %"class.blink::PersistentNode"** %53, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %36, align 8
  br label %58

58:                                               ; preds = %34, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7xpathyy8YyParser13semantic_type4moveIN5blink10PersistentINS3_5xpath4StepEEEEEvOS1_(%"class.xpathyy::YyParser::semantic_type"*, %"class.xpathyy::YyParser::semantic_type"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %3 = bitcast %"class.xpathyy::YyParser::semantic_type"* %0 to %"class.blink::Persistent.228"*
  %4 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.xpathyy::YyParser::semantic_type"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.blink::Persistent.228", %"class.blink::Persistent.228"* %3, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %7, align 8
  switch i64 %5, label %8 [
    i64 0, label %34
    i64 -1, label %34
  ]

8:                                                ; preds = %2
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #18
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !2

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #18
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %21, align 8
  %23 = icmp eq %"class.blink::PersistentNode"* %22, null
  br i1 %23, label %24, label %27, !prof !2

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %25) #18
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %21, align 8
  br label %27

27:                                               ; preds = %24, %15
  %28 = phi %"class.blink::PersistentNode"* [ %26, %24 ], [ %22, %15 ]
  %29 = bitcast %"class.blink::PersistentNode"* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  store i64 %30, i64* %31, align 8
  %32 = bitcast %"class.blink::PersistentNode"* %28 to %"class.xpathyy::YyParser::semantic_type"**
  store %"class.xpathyy::YyParser::semantic_type"* %0, %"class.xpathyy::YyParser::semantic_type"** %32, align 8
  %33 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %28, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_5xpath4StepELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %33, align 8
  store %"class.blink::PersistentNode"* %28, %"class.blink::PersistentNode"** %7, align 8
  br label %34

34:                                               ; preds = %2, %2, %27
  %35 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1 to %"class.blink::PersistentBase.229"*
  %36 = getelementptr inbounds %"class.blink::PersistentBase.229", %"class.blink::PersistentBase.229"* %35, i64 0, i32 1, i32 0
  %37 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %38 = icmp eq %"class.blink::PersistentNode"* %37, null
  br i1 %38, label %58, label %39

39:                                               ; preds = %34
  %40 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %41 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %40, i64 0, i32 1
  %42 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %41) #18
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %46, !prof !2

44:                                               ; preds = %39
  %45 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %41, i8* %45) #18
  br label %46

46:                                               ; preds = %44, %39
  %47 = phi i8* [ %45, %44 ], [ %42, %39 ]
  %48 = bitcast i8* %47 to %"class.blink::ThreadState"**
  %49 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %50, align 8
  %52 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %53 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %51, i64 0, i32 0, i32 0
  %54 = bitcast %"class.blink::PersistentRegion"* %51 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.blink::PersistentNode"* %52 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %52, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %57, align 8
  store %"class.blink::PersistentNode"* %52, %"class.blink::PersistentNode"** %53, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %36, align 8
  br label %58

58:                                               ; preds = %34, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7xpathyy8YyParser17stack_symbol_typeC2EaONS0_11symbol_typeE(%"struct.xpathyy::YyParser::stack_symbol_type"*, i8 signext, %"struct.xpathyy::YyParser::symbol_type"* dereferenceable(32)) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %0, i64 0, i32 0, i32 0, i32 0
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.xpathyy::YyParser::semantic_type"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 16 %6, i8 0, i64 16, i1 false) #18
  %7 = getelementptr inbounds %"struct.xpathyy::YyParser::symbol_type", %"struct.xpathyy::YyParser::symbol_type"* %2, i64 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  switch i32 %8, label %42 [
    i32 11, label %9
    i32 12, label %9
    i32 13, label %9
    i32 14, label %9
    i32 15, label %9
    i32 16, label %9
    i32 19, label %9
    i32 45, label %15
    i32 38, label %17
    i32 39, label %17
    i32 31, label %19
    i32 40, label %19
    i32 43, label %19
    i32 44, label %19
    i32 46, label %19
    i32 47, label %19
    i32 48, label %19
    i32 49, label %19
    i32 50, label %19
    i32 51, label %19
    i32 52, label %19
    i32 53, label %19
    i32 54, label %19
    i32 55, label %19
    i32 56, label %19
    i32 32, label %21
    i32 33, label %21
    i32 34, label %21
    i32 37, label %23
    i32 35, label %25
    i32 41, label %25
    i32 42, label %25
    i32 4, label %27
    i32 5, label %27
    i32 3, label %32
    i32 10, label %37
    i32 36, label %37
  ]

9:                                                ; preds = %3, %3, %3, %3, %3, %3, %3
  %10 = getelementptr inbounds %"struct.xpathyy::YyParser::symbol_type", %"struct.xpathyy::YyParser::symbol_type"* %2, i64 0, i32 0, i32 1
  %11 = bitcast %"class.xpathyy::YyParser::semantic_type"* %10 to %"class.WTF::StringImpl"**
  %12 = bitcast %"class.xpathyy::YyParser::semantic_type"* %10 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.xpathyy::YyParser::semantic_type"* %5 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %11, align 8
  br label %42

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"struct.xpathyy::YyParser::symbol_type", %"struct.xpathyy::YyParser::symbol_type"* %2, i64 0, i32 0, i32 1
  tail call void @_ZN7xpathyy8YyParser13semantic_type4moveIN5blink10PersistentINS3_10HeapVectorINS3_6MemberINS3_5xpath10ExpressionEEELj0EEEEEEEvOS1_(%"class.xpathyy::YyParser::semantic_type"* %5, %"class.xpathyy::YyParser::semantic_type"* dereferenceable(16) %16)
  br label %42

17:                                               ; preds = %3, %3
  %18 = getelementptr inbounds %"struct.xpathyy::YyParser::symbol_type", %"struct.xpathyy::YyParser::symbol_type"* %2, i64 0, i32 0, i32 1
  tail call void @_ZN7xpathyy8YyParser13semantic_type4moveIN5blink10PersistentINS3_10HeapVectorINS3_6MemberINS3_5xpath9PredicateEEELj0EEEEEEEvOS1_(%"class.xpathyy::YyParser::semantic_type"* %5, %"class.xpathyy::YyParser::semantic_type"* dereferenceable(16) %18)
  br label %42

19:                                               ; preds = %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3
  %20 = getelementptr inbounds %"struct.xpathyy::YyParser::symbol_type", %"struct.xpathyy::YyParser::symbol_type"* %2, i64 0, i32 0, i32 1
  tail call void @_ZN7xpathyy8YyParser13semantic_type4moveIN5blink10PersistentINS3_5xpath10ExpressionEEEEEvOS1_(%"class.xpathyy::YyParser::semantic_type"* %5, %"class.xpathyy::YyParser::semantic_type"* dereferenceable(16) %20)
  br label %42

21:                                               ; preds = %3, %3, %3
  %22 = getelementptr inbounds %"struct.xpathyy::YyParser::symbol_type", %"struct.xpathyy::YyParser::symbol_type"* %2, i64 0, i32 0, i32 1
  tail call void @_ZN7xpathyy8YyParser13semantic_type4moveIN5blink10PersistentINS3_5xpath12LocationPathEEEEEvOS1_(%"class.xpathyy::YyParser::semantic_type"* %5, %"class.xpathyy::YyParser::semantic_type"* dereferenceable(16) %22)
  br label %42

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"struct.xpathyy::YyParser::symbol_type", %"struct.xpathyy::YyParser::symbol_type"* %2, i64 0, i32 0, i32 1
  tail call void @_ZN7xpathyy8YyParser13semantic_type4moveIN5blink10PersistentINS3_5xpath4Step8NodeTestEEEEEvOS1_(%"class.xpathyy::YyParser::semantic_type"* %5, %"class.xpathyy::YyParser::semantic_type"* dereferenceable(16) %24)
  br label %42

25:                                               ; preds = %3, %3, %3
  %26 = getelementptr inbounds %"struct.xpathyy::YyParser::symbol_type", %"struct.xpathyy::YyParser::symbol_type"* %2, i64 0, i32 0, i32 1
  tail call void @_ZN7xpathyy8YyParser13semantic_type4moveIN5blink10PersistentINS3_5xpath4StepEEEEEvOS1_(%"class.xpathyy::YyParser::semantic_type"* %5, %"class.xpathyy::YyParser::semantic_type"* dereferenceable(16) %26)
  br label %42

27:                                               ; preds = %3, %3
  %28 = getelementptr inbounds %"struct.xpathyy::YyParser::symbol_type", %"struct.xpathyy::YyParser::symbol_type"* %2, i64 0, i32 0, i32 1
  %29 = bitcast %"class.xpathyy::YyParser::semantic_type"* %28 to i32*
  %30 = bitcast %"class.xpathyy::YyParser::semantic_type"* %5 to i32*
  %31 = load i32, i32* %29, align 4
  store i32 %31, i32* %30, align 4
  br label %42

32:                                               ; preds = %3
  %33 = getelementptr inbounds %"struct.xpathyy::YyParser::symbol_type", %"struct.xpathyy::YyParser::symbol_type"* %2, i64 0, i32 0, i32 1
  %34 = bitcast %"class.xpathyy::YyParser::semantic_type"* %33 to i32*
  %35 = bitcast %"class.xpathyy::YyParser::semantic_type"* %5 to i32*
  %36 = load i32, i32* %34, align 4
  store i32 %36, i32* %35, align 4
  br label %42

37:                                               ; preds = %3, %3
  %38 = getelementptr inbounds %"struct.xpathyy::YyParser::symbol_type", %"struct.xpathyy::YyParser::symbol_type"* %2, i64 0, i32 0, i32 1
  %39 = bitcast %"class.xpathyy::YyParser::semantic_type"* %38 to i32*
  %40 = bitcast %"class.xpathyy::YyParser::semantic_type"* %5 to i32*
  %41 = load i32, i32* %39, align 4
  store i32 %41, i32* %40, align 4
  br label %42

42:                                               ; preds = %3, %37, %32, %27, %25, %23, %21, %19, %17, %15, %9
  store i32 -2, i32* %7, align 16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7xpathyy8YyParser7yypush_EPKcONS0_17stack_symbol_typeE(%"class.xpathyy::YyParser"*, i8* readnone, %"struct.xpathyy::YyParser::stack_symbol_type"* dereferenceable(32)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"struct.xpathyy::YyParser::stack_symbol_type", align 16
  %5 = getelementptr inbounds %"class.xpathyy::YyParser", %"class.xpathyy::YyParser"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %4, i64 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #18
  store i8 0, i8* %6, align 16
  %7 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %4, i64 0, i32 0, i32 1
  %8 = bitcast %"class.xpathyy::YyParser::semantic_type"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %8, i8 0, i64 16, i1 false) #18
  %9 = getelementptr inbounds %"class.xpathyy::YyParser", %"class.xpathyy::YyParser"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %10 = load %"struct.xpathyy::YyParser::stack_symbol_type"*, %"struct.xpathyy::YyParser::stack_symbol_type"** %9, align 8
  %11 = getelementptr inbounds %"class.xpathyy::YyParser", %"class.xpathyy::YyParser"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = load %"struct.xpathyy::YyParser::stack_symbol_type"*, %"struct.xpathyy::YyParser::stack_symbol_type"** %11, align 8
  %13 = icmp ult %"struct.xpathyy::YyParser::stack_symbol_type"* %10, %12
  br i1 %13, label %14, label %18

14:                                               ; preds = %3
  call void @_ZN7xpathyy8YyParser17stack_symbol_typeC2EOS1_(%"struct.xpathyy::YyParser::stack_symbol_type"* %10, %"struct.xpathyy::YyParser::stack_symbol_type"* nonnull dereferenceable(32) %4) #18
  %15 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %10, i64 1
  %16 = ptrtoint %"struct.xpathyy::YyParser::stack_symbol_type"* %15 to i64
  %17 = bitcast %"struct.xpathyy::YyParser::stack_symbol_type"** %9 to i64*
  store i64 %16, i64* %17, align 8
  br label %21

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.xpathyy::YyParser::stack", %"class.xpathyy::YyParser::stack"* %5, i64 0, i32 0
  call void @_ZNSt3__16vectorIN7xpathyy8YyParser17stack_symbol_typeENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %19, %"struct.xpathyy::YyParser::stack_symbol_type"* nonnull dereferenceable(32) %4) #18
  %20 = bitcast %"struct.xpathyy::YyParser::stack_symbol_type"** %9 to i64*
  br label %21

21:                                               ; preds = %14, %18
  %22 = phi i64* [ %17, %14 ], [ %20, %18 ]
  %23 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %4, i64 0, i32 0
  call void @_ZN7xpathyy8YyParser12basic_symbolINS0_8by_stateEE5clearEv(%"struct.xpathyy::YyParser::basic_symbol"* nonnull %23) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #18
  %24 = load i64, i64* %22, align 8
  %25 = bitcast %"class.xpathyy::YyParser::stack"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %24, %26
  %28 = ashr exact i64 %27, 5
  %29 = add nsw i64 %28, -1
  %30 = inttoptr i64 %26 to %"struct.xpathyy::YyParser::stack_symbol_type"*
  %31 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %30, i64 %29, i32 0
  %32 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %2, i64 0, i32 0
  call void @_ZN7xpathyy8YyParser12basic_symbolINS0_8by_stateEE4moveERS3_(%"struct.xpathyy::YyParser::basic_symbol"* %31, %"struct.xpathyy::YyParser::basic_symbol"* dereferenceable(32) %32) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7xpathyy8YyParser7yypush_EPKcaONS0_11symbol_typeE(%"class.xpathyy::YyParser"*, i8* nocapture readnone, i8 signext, %"struct.xpathyy::YyParser::symbol_type"* dereferenceable(32)) local_unnamed_addr #1 align 2 {
  %5 = alloca %"struct.xpathyy::YyParser::stack_symbol_type", align 16
  %6 = alloca %"struct.xpathyy::YyParser::stack_symbol_type", align 16
  %7 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %6, i64 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #18
  call void @_ZN7xpathyy8YyParser17stack_symbol_typeC2EaONS0_11symbol_typeE(%"struct.xpathyy::YyParser::stack_symbol_type"* nonnull %6, i8 signext %2, %"struct.xpathyy::YyParser::symbol_type"* dereferenceable(32) %3)
  %8 = getelementptr inbounds %"class.xpathyy::YyParser", %"class.xpathyy::YyParser"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %5, i64 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #18
  store i8 0, i8* %9, align 16
  %10 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %5, i64 0, i32 0, i32 1
  %11 = bitcast %"class.xpathyy::YyParser::semantic_type"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %11, i8 0, i64 16, i1 false) #18
  %12 = getelementptr inbounds %"class.xpathyy::YyParser", %"class.xpathyy::YyParser"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %13 = load %"struct.xpathyy::YyParser::stack_symbol_type"*, %"struct.xpathyy::YyParser::stack_symbol_type"** %12, align 8
  %14 = getelementptr inbounds %"class.xpathyy::YyParser", %"class.xpathyy::YyParser"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %15 = load %"struct.xpathyy::YyParser::stack_symbol_type"*, %"struct.xpathyy::YyParser::stack_symbol_type"** %14, align 8
  %16 = icmp ult %"struct.xpathyy::YyParser::stack_symbol_type"* %13, %15
  br i1 %16, label %17, label %21

17:                                               ; preds = %4
  call void @_ZN7xpathyy8YyParser17stack_symbol_typeC2EOS1_(%"struct.xpathyy::YyParser::stack_symbol_type"* %13, %"struct.xpathyy::YyParser::stack_symbol_type"* nonnull dereferenceable(32) %5) #18
  %18 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %13, i64 1
  %19 = ptrtoint %"struct.xpathyy::YyParser::stack_symbol_type"* %18 to i64
  %20 = bitcast %"struct.xpathyy::YyParser::stack_symbol_type"** %12 to i64*
  store i64 %19, i64* %20, align 8
  br label %24

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.xpathyy::YyParser::stack", %"class.xpathyy::YyParser::stack"* %8, i64 0, i32 0
  call void @_ZNSt3__16vectorIN7xpathyy8YyParser17stack_symbol_typeENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %22, %"struct.xpathyy::YyParser::stack_symbol_type"* nonnull dereferenceable(32) %5) #18
  %23 = bitcast %"struct.xpathyy::YyParser::stack_symbol_type"** %12 to i64*
  br label %24

24:                                               ; preds = %17, %21
  %25 = phi i64* [ %20, %17 ], [ %23, %21 ]
  %26 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %5, i64 0, i32 0
  call void @_ZN7xpathyy8YyParser12basic_symbolINS0_8by_stateEE5clearEv(%"struct.xpathyy::YyParser::basic_symbol"* nonnull %26) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #18
  %27 = load i64, i64* %25, align 8
  %28 = bitcast %"class.xpathyy::YyParser::stack"* %8 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %27, %29
  %31 = ashr exact i64 %30, 5
  %32 = add nsw i64 %31, -1
  %33 = inttoptr i64 %29 to %"struct.xpathyy::YyParser::stack_symbol_type"*
  %34 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %33, i64 %32, i32 0
  %35 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %6, i64 0, i32 0
  call void @_ZN7xpathyy8YyParser12basic_symbolINS0_8by_stateEE4moveERS3_(%"struct.xpathyy::YyParser::basic_symbol"* %34, %"struct.xpathyy::YyParser::basic_symbol"* nonnull dereferenceable(32) %35) #18
  call void @_ZN7xpathyy8YyParser12basic_symbolINS0_8by_stateEE5clearEv(%"struct.xpathyy::YyParser::basic_symbol"* nonnull %35) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #18
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7xpathyy8YyParser6yypop_Ei(%"class.xpathyy::YyParser"* nocapture, i32) local_unnamed_addr #1 align 2 {
  %3 = icmp sgt i32 %1, 0
  br i1 %3, label %4, label %15

4:                                                ; preds = %2
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.xpathyy::YyParser", %"class.xpathyy::YyParser"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %7 = load %"struct.xpathyy::YyParser::stack_symbol_type"*, %"struct.xpathyy::YyParser::stack_symbol_type"** %6, align 8
  br label %8

8:                                                ; preds = %8, %4
  %9 = phi %"struct.xpathyy::YyParser::stack_symbol_type"* [ %7, %4 ], [ %11, %8 ]
  %10 = phi i64 [ %5, %4 ], [ %13, %8 ]
  %11 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %9, i64 -1
  %12 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %11, i64 0, i32 0
  tail call void @_ZN7xpathyy8YyParser12basic_symbolINS0_8by_stateEE5clearEv(%"struct.xpathyy::YyParser::basic_symbol"* %12) #18
  store %"struct.xpathyy::YyParser::stack_symbol_type"* %11, %"struct.xpathyy::YyParser::stack_symbol_type"** %6, align 8
  %13 = add nsw i64 %10, -1
  %14 = icmp sgt i64 %13, 0
  br i1 %14, label %8, label %15

15:                                               ; preds = %8, %2
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden signext i8 @_ZN7xpathyy8YyParser17yy_lr_goto_state_Eai(i8 signext, i32) local_unnamed_addr #0 align 2 {
  %3 = add nsw i32 %1, -30
  %4 = sext i32 %3 to i64
  %5 = getelementptr inbounds [27 x i8], [27 x i8]* @_ZN7xpathyy8YyParser8yypgoto_E, i64 0, i64 %4
  %6 = load i8, i8* %5, align 1
  %7 = sext i8 %6 to i32
  %8 = sext i8 %0 to i32
  %9 = add nsw i32 %7, %8
  %10 = icmp ult i32 %9, 123
  br i1 %10, label %11, label %18

11:                                               ; preds = %2
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds [123 x i8], [123 x i8]* @_ZN7xpathyy8YyParser8yycheck_E, i64 0, i64 %12
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, %0
  br i1 %15, label %16, label %18

16:                                               ; preds = %11
  %17 = getelementptr inbounds [123 x i8], [123 x i8]* @_ZN7xpathyy8YyParser8yytable_E, i64 0, i64 %12
  br label %20

18:                                               ; preds = %11, %2
  %19 = getelementptr inbounds [27 x i8], [27 x i8]* @_ZN7xpathyy8YyParser10yydefgoto_E, i64 0, i64 %4
  br label %20

20:                                               ; preds = %18, %16
  %21 = phi i8* [ %17, %16 ], [ %19, %18 ]
  %22 = load i8, i8* %21, align 1
  ret i8 %22
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN7xpathyy8YyParser25yy_pact_value_is_default_Ei(i32) local_unnamed_addr #0 align 2 {
  %2 = icmp eq i32 %0, -44
  ret i1 %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN7xpathyy8YyParser24yy_table_value_is_error_Ei(i32) local_unnamed_addr #0 align 2 {
  %2 = icmp eq i32 %0, -1
  ret i1 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7xpathyy8YyParserclEv(%"class.xpathyy::YyParser"*) local_unnamed_addr #1 align 2 {
  %2 = bitcast %"class.xpathyy::YyParser"* %0 to i32 (%"class.xpathyy::YyParser"*)***
  %3 = load i32 (%"class.xpathyy::YyParser"*)**, i32 (%"class.xpathyy::YyParser"*)*** %2, align 8
  %4 = getelementptr inbounds i32 (%"class.xpathyy::YyParser"*)*, i32 (%"class.xpathyy::YyParser"*)** %3, i64 2
  %5 = load i32 (%"class.xpathyy::YyParser"*)*, i32 (%"class.xpathyy::YyParser"*)** %4, align 8
  %6 = tail call i32 %5(%"class.xpathyy::YyParser"* %0) #18
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7xpathyy8YyParser5parseEv(%"class.xpathyy::YyParser"*) unnamed_addr #1 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.blink::xpath::Expression"*, align 8
  %9 = alloca %"class.blink::xpath::Expression"*, align 8
  %10 = alloca %"class.blink::xpath::Expression"*, align 8
  %11 = alloca %"struct.xpathyy::YyParser::stack_symbol_type", align 16
  %12 = alloca %"struct.xpathyy::YyParser::symbol_type", align 16
  %13 = alloca %"struct.xpathyy::YyParser::stack_symbol_type", align 16
  %14 = alloca %"class.WTF::AtomicString", align 8
  %15 = alloca %"class.WTF::AtomicString", align 8
  %16 = alloca %"class.blink::xpath::Step::NodeTest", align 8
  %17 = alloca %"class.blink::xpath::Step::NodeTest", align 8
  %18 = alloca %"class.WTF::AtomicString", align 8
  %19 = alloca %"class.WTF::AtomicString", align 8
  %20 = alloca %"class.blink::xpath::Step::NodeTest", align 8
  %21 = alloca %"class.blink::xpath::Step::NodeTest", align 8
  %22 = alloca %"class.blink::xpath::Predicate"*, align 8
  %23 = alloca %"class.blink::xpath::Predicate"*, align 8
  %24 = alloca %"class.blink::xpath::Step::NodeTest", align 8
  %25 = alloca %"class.blink::xpath::Step::NodeTest", align 8
  %26 = alloca %"class.blink::xpath::Step::NodeTest", align 8
  %27 = alloca %"class.std::__1::basic_string", align 8
  %28 = bitcast %"struct.xpathyy::YyParser::symbol_type"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %28, i8* align 16 bitcast ({ { %"struct.xpathyy::YyParser::by_kind", [12 x i8], %"class.xpathyy::YyParser::semantic_type" } }* @__const._ZN7xpathyy8YyParser5parseEv.yyla to i8*), i64 16, i1 false)
  %29 = getelementptr inbounds %"struct.xpathyy::YyParser::symbol_type", %"struct.xpathyy::YyParser::symbol_type"* %12, i64 0, i32 0, i32 0, i32 0
  store i32 -2, i32* %29, align 16
  %30 = getelementptr inbounds %"struct.xpathyy::YyParser::symbol_type", %"struct.xpathyy::YyParser::symbol_type"* %12, i64 0, i32 0, i32 1
  %31 = bitcast %"class.xpathyy::YyParser::semantic_type"* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %31, i8 0, i64 16, i1 false) #18
  %32 = getelementptr inbounds %"class.xpathyy::YyParser", %"class.xpathyy::YyParser"* %0, i64 0, i32 1
  %33 = getelementptr inbounds %"class.xpathyy::YyParser::stack", %"class.xpathyy::YyParser::stack"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = load %"struct.xpathyy::YyParser::stack_symbol_type"*, %"struct.xpathyy::YyParser::stack_symbol_type"** %33, align 8
  %35 = getelementptr inbounds %"class.xpathyy::YyParser", %"class.xpathyy::YyParser"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %36 = load %"struct.xpathyy::YyParser::stack_symbol_type"*, %"struct.xpathyy::YyParser::stack_symbol_type"** %35, align 8
  %37 = icmp eq %"struct.xpathyy::YyParser::stack_symbol_type"* %36, %34
  br i1 %37, label %43, label %38

38:                                               ; preds = %1, %38
  %39 = phi %"struct.xpathyy::YyParser::stack_symbol_type"* [ %40, %38 ], [ %36, %1 ]
  %40 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %39, i64 -1
  %41 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %40, i64 0, i32 0
  tail call void @_ZN7xpathyy8YyParser12basic_symbolINS0_8by_stateEE5clearEv(%"struct.xpathyy::YyParser::basic_symbol"* %41) #18
  %42 = icmp eq %"struct.xpathyy::YyParser::stack_symbol_type"* %40, %34
  br i1 %42, label %43, label %38

43:                                               ; preds = %38, %1
  store %"struct.xpathyy::YyParser::stack_symbol_type"* %34, %"struct.xpathyy::YyParser::stack_symbol_type"** %35, align 8
  call void @_ZN7xpathyy8YyParser7yypush_EPKcaONS0_11symbol_typeE(%"class.xpathyy::YyParser"* %0, i8* null, i8 signext 0, %"struct.xpathyy::YyParser::symbol_type"* nonnull dereferenceable(32) %12)
  %44 = bitcast %"struct.xpathyy::YyParser::stack_symbol_type"** %35 to i64*
  %45 = bitcast %"class.xpathyy::YyParser::stack"* %32 to i64*
  %46 = getelementptr inbounds %"struct.xpathyy::YyParser::symbol_type", %"struct.xpathyy::YyParser::symbol_type"* %12, i64 0, i32 0
  %47 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = getelementptr inbounds i8, i8* %47, i64 12
  %52 = bitcast %"class.xpathyy::YyParser"* %0 to void (%"class.xpathyy::YyParser"*, %"class.std::__1::basic_string"*)***
  %53 = getelementptr inbounds %"class.xpathyy::YyParser", %"class.xpathyy::YyParser"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %54 = getelementptr inbounds %"class.xpathyy::YyParser::stack", %"class.xpathyy::YyParser::stack"* %32, i64 0, i32 0
  %55 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %13, i64 0, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %13, i64 0, i32 0, i32 1
  %57 = bitcast %"class.xpathyy::YyParser::semantic_type"* %56 to i8*
  %58 = bitcast %"class.xpathyy::YyParser::semantic_type"* %56 to i32*
  %59 = bitcast %"class.xpathyy::YyParser::semantic_type"* %56 to %"class.WTF::StringImpl"**
  %60 = bitcast %"class.xpathyy::YyParser::semantic_type"* %56 to %"class.blink::PersistentBase.213"*
  %61 = bitcast %"class.xpathyy::YyParser::semantic_type"* %56 to %"class.blink::xpath::Expression"**
  %62 = bitcast %"class.blink::xpath::Expression"** %10 to i8*
  %63 = bitcast %"class.blink::xpath::Expression"** %8 to i8*
  %64 = bitcast %"class.blink::xpath::Expression"** %9 to i8*
  %65 = bitcast %"class.xpathyy::YyParser::semantic_type"* %56 to %"class.blink::PersistentBase"*
  %66 = bitcast %"class.xpathyy::YyParser::semantic_type"* %56 to %"class.blink::HeapVector"**
  %67 = bitcast %"class.blink::xpath::Step::NodeTest"* %26 to i8*
  %68 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %26, i64 0, i32 0
  %69 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %26, i64 0, i32 1, i32 0, i32 0, i32 0
  %70 = bitcast %"class.WTF::StringImpl"** %69 to i8*
  %71 = bitcast %"class.xpathyy::YyParser::semantic_type"* %56 to %"class.blink::PersistentBase.229"*
  %72 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %26, i64 0, i32 2, i32 0, i32 0, i32 0
  %73 = bitcast %"class.blink::xpath::Step::NodeTest"* %25 to i8*
  %74 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %25, i64 0, i32 0
  %75 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %25, i64 0, i32 1, i32 0, i32 0, i32 0
  %76 = bitcast %"class.WTF::StringImpl"** %75 to i8*
  %77 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %25, i64 0, i32 2, i32 0, i32 0, i32 0
  %78 = bitcast %"class.blink::xpath::Step::NodeTest"* %24 to i8*
  %79 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %24, i64 0, i32 0
  %80 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %24, i64 0, i32 1, i32 0, i32 0, i32 0
  %81 = bitcast %"class.WTF::StringImpl"** %80 to i8*
  %82 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %24, i64 0, i32 2, i32 0, i32 0, i32 0
  %83 = bitcast %"class.xpathyy::YyParser::semantic_type"* %56 to %"class.blink::PersistentBase.200"*
  %84 = bitcast %"class.xpathyy::YyParser::semantic_type"* %56 to %"class.blink::HeapVector.201"**
  %85 = bitcast %"class.blink::xpath::Predicate"** %23 to i8*
  %86 = bitcast %"class.blink::xpath::Predicate"** %23 to i8**
  %87 = bitcast %"class.blink::xpath::Predicate"** %22 to i8*
  %88 = bitcast %"class.blink::xpath::Predicate"** %22 to i8**
  %89 = bitcast %"class.xpathyy::YyParser::semantic_type"* %56 to %"class.blink::PersistentBase.225"*
  %90 = bitcast %"class.WTF::StringView"* %4 to i8*
  %91 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %92 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %93 = bitcast i8** %92 to %"class.WTF::StringImpl"**
  %94 = bitcast %"class.WTF::StringView"* %4 to i64*
  %95 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %96 = bitcast %"class.WTF::StringView"* %5 to i8*
  %97 = bitcast %"class.WTF::StringView"* %5 to i64*
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %99 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %100 = bitcast %"class.WTF::StringView"* %2 to i8*
  %101 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  %102 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %103 = bitcast i8** %102 to %"class.WTF::StringImpl"**
  %104 = bitcast %"class.WTF::StringView"* %2 to i64*
  %105 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  %106 = bitcast %"class.WTF::StringView"* %3 to i8*
  %107 = bitcast %"class.WTF::StringView"* %3 to i64*
  %108 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %109 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %110 = bitcast %"class.WTF::StringView"* %6 to i8*
  %111 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  %112 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %113 = bitcast i8** %112 to %"class.WTF::StringImpl"**
  %114 = bitcast %"class.WTF::StringView"* %6 to i64*
  %115 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  %116 = bitcast %"class.WTF::StringView"* %7 to i8*
  %117 = bitcast %"class.WTF::StringView"* %7 to i64*
  %118 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %119 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  %120 = bitcast %"class.WTF::AtomicString"* %18 to i8*
  %121 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %18, i64 0, i32 0, i32 0, i32 0
  %122 = bitcast %"class.WTF::AtomicString"* %19 to i8*
  %123 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %19, i64 0, i32 0, i32 0, i32 0
  %124 = getelementptr inbounds %"class.xpathyy::YyParser", %"class.xpathyy::YyParser"* %0, i64 0, i32 2
  %125 = bitcast %"class.blink::xpath::Step::NodeTest"* %20 to i8*
  %126 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %20, i64 0, i32 0
  %127 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %20, i64 0, i32 1, i32 0, i32 0, i32 0
  %128 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %20, i64 0, i32 2, i32 0, i32 0, i32 0
  %129 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %20, i64 0, i32 3
  %130 = bitcast %"class.blink::HeapVector.201"* %129 to i8*
  %131 = bitcast %"class.blink::xpath::Step::NodeTest"* %21 to i8*
  %132 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %21, i64 0, i32 0
  %133 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %21, i64 0, i32 1, i32 0, i32 0, i32 0
  %134 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %21, i64 0, i32 2, i32 0, i32 0, i32 0
  %135 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %21, i64 0, i32 3
  %136 = bitcast %"class.blink::HeapVector.201"* %135 to i8*
  %137 = bitcast %"class.WTF::AtomicString"* %14 to i8*
  %138 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %14, i64 0, i32 0, i32 0, i32 0
  %139 = bitcast %"class.WTF::AtomicString"* %15 to i8*
  %140 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %15, i64 0, i32 0, i32 0, i32 0
  %141 = bitcast %"class.blink::xpath::Step::NodeTest"* %16 to i8*
  %142 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %16, i64 0, i32 0
  %143 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %16, i64 0, i32 1, i32 0, i32 0, i32 0
  %144 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %16, i64 0, i32 2, i32 0, i32 0, i32 0
  %145 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %16, i64 0, i32 3
  %146 = bitcast %"class.blink::HeapVector.201"* %145 to i8*
  %147 = bitcast %"class.blink::xpath::Step::NodeTest"* %17 to i8*
  %148 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %17, i64 0, i32 0
  %149 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %17, i64 0, i32 1, i32 0, i32 0, i32 0
  %150 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %17, i64 0, i32 2, i32 0, i32 0, i32 0
  %151 = getelementptr inbounds %"class.blink::xpath::Step::NodeTest", %"class.blink::xpath::Step::NodeTest"* %17, i64 0, i32 3
  %152 = bitcast %"class.blink::HeapVector.201"* %151 to i8*
  %153 = bitcast %"class.xpathyy::YyParser::semantic_type"* %56 to %"class.blink::PersistentBase.215"*
  %154 = bitcast %"class.xpathyy::YyParser::semantic_type"* %56 to %"class.blink::xpath::LocationPath"**
  %155 = bitcast %"class.blink::xpath::Parser"** %124 to i64**
  %156 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %11, i64 0, i32 0, i32 0, i32 0
  %157 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %11, i64 0, i32 0, i32 1
  %158 = bitcast %"class.xpathyy::YyParser::semantic_type"* %157 to i8*
  %159 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %11, i64 0, i32 0
  %160 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %13, i64 0, i32 0
  br label %161

161:                                              ; preds = %1884, %43
  %162 = phi i32 [ %1885, %1884 ], [ 0, %43 ]
  %163 = phi i32 [ %175, %1884 ], [ 0, %43 ]
  %164 = load i64, i64* %44, align 8
  %165 = load i64, i64* %45, align 8
  %166 = sub i64 %164, %165
  %167 = ashr exact i64 %166, 5
  %168 = add nsw i64 %167, -1
  %169 = inttoptr i64 %165 to %"struct.xpathyy::YyParser::stack_symbol_type"*
  %170 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %169, i64 %168, i32 0, i32 0, i32 0
  %171 = load i8, i8* %170, align 16
  %172 = icmp eq i8 %171, 47
  br i1 %172, label %1916, label %173

173:                                              ; preds = %161, %222
  %174 = phi i8 [ %233, %222 ], [ %171, %161 ]
  %175 = phi i32 [ %225, %222 ], [ %163, %161 ]
  %176 = sext i8 %174 to i64
  %177 = getelementptr inbounds [94 x i8], [94 x i8]* @_ZN7xpathyy8YyParser7yypact_E, i64 0, i64 %176
  %178 = load i8, i8* %177, align 1
  %179 = sext i8 %178 to i32
  %180 = icmp eq i8 %178, -44
  br i1 %180, label %235, label %181

181:                                              ; preds = %173
  %182 = load i32, i32* %29, align 16
  %183 = icmp eq i32 %182, -2
  br i1 %183, label %184, label %197

184:                                              ; preds = %181
  %185 = load %"class.blink::xpath::Parser"*, %"class.blink::xpath::Parser"** @_ZN5blink5xpath6Parser15current_parser_E, align 8
  %186 = call i32 @_ZN5blink5xpath6Parser3LexEPv(%"class.blink::xpath::Parser"* %185, i8* %31) #18
  %187 = icmp slt i32 %186, 1
  br i1 %187, label %195, label %188

188:                                              ; preds = %184
  %189 = icmp slt i32 %186, 276
  br i1 %189, label %190, label %195

190:                                              ; preds = %188
  %191 = sext i32 %186 to i64
  %192 = getelementptr inbounds [276 x i8], [276 x i8]* @_ZZN7xpathyy8YyParser12yytranslate_EiE15translate_table, i64 0, i64 %191
  %193 = load i8, i8* %192, align 1
  %194 = sext i8 %193 to i32
  br label %195

195:                                              ; preds = %184, %188, %190
  %196 = phi i32 [ %194, %190 ], [ 0, %184 ], [ 2, %188 ]
  store i32 %196, i32* %29, align 16
  br label %197

197:                                              ; preds = %195, %181
  %198 = phi i32 [ %196, %195 ], [ %182, %181 ]
  %199 = icmp eq i32 %198, 1
  br i1 %199, label %200, label %201

200:                                              ; preds = %197
  store i32 2, i32* %29, align 16
  br label %1901

201:                                              ; preds = %197
  %202 = add nsw i32 %198, %179
  %203 = icmp ugt i32 %202, 122
  br i1 %203, label %235, label %204

204:                                              ; preds = %201
  %205 = sext i32 %202 to i64
  %206 = getelementptr inbounds [123 x i8], [123 x i8]* @_ZN7xpathyy8YyParser8yycheck_E, i64 0, i64 %205
  %207 = load i8, i8* %206, align 1
  %208 = sext i8 %207 to i32
  %209 = icmp eq i32 %198, %208
  br i1 %209, label %210, label %235

210:                                              ; preds = %204
  %211 = getelementptr inbounds [123 x i8], [123 x i8]* @_ZN7xpathyy8YyParser8yytable_E, i64 0, i64 %205
  %212 = load i8, i8* %211, align 1
  %213 = icmp slt i8 %212, 1
  br i1 %213, label %214, label %222

214:                                              ; preds = %210
  %215 = sext i8 %212 to i32
  %216 = sub nsw i32 0, %215
  %217 = load i64, i64* %44, align 8
  %218 = load i64, i64* %45, align 8
  %219 = sub i64 %217, %218
  %220 = ashr exact i64 %219, 5
  %221 = inttoptr i64 %218 to %"struct.xpathyy::YyParser::stack_symbol_type"*
  br label %250

222:                                              ; preds = %210
  %223 = icmp eq i32 %175, 0
  %224 = add nsw i32 %175, -1
  %225 = select i1 %223, i32 0, i32 %224
  call void @_ZN7xpathyy8YyParser7yypush_EPKcaONS0_11symbol_typeE(%"class.xpathyy::YyParser"* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8 signext %212, %"struct.xpathyy::YyParser::symbol_type"* nonnull dereferenceable(32) %12)
  %226 = load i64, i64* %44, align 8
  %227 = load i64, i64* %45, align 8
  %228 = sub i64 %226, %227
  %229 = ashr exact i64 %228, 5
  %230 = add nsw i64 %229, -1
  %231 = inttoptr i64 %227 to %"struct.xpathyy::YyParser::stack_symbol_type"*
  %232 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %231, i64 %230, i32 0, i32 0, i32 0
  %233 = load i8, i8* %232, align 16
  %234 = icmp eq i8 %233, 47
  br i1 %234, label %1916, label %173

235:                                              ; preds = %204, %201, %173
  %236 = load i64, i64* %44, align 8
  %237 = load i64, i64* %45, align 8
  %238 = sub i64 %236, %237
  %239 = ashr exact i64 %238, 5
  %240 = add nsw i64 %239, -1
  %241 = inttoptr i64 %237 to %"struct.xpathyy::YyParser::stack_symbol_type"*
  %242 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %241, i64 %240, i32 0, i32 0, i32 0
  %243 = load i8, i8* %242, align 16
  %244 = sext i8 %243 to i64
  %245 = getelementptr inbounds [94 x i8], [94 x i8]* @_ZN7xpathyy8YyParser9yydefact_E, i64 0, i64 %244
  %246 = load i8, i8* %245, align 1
  %247 = icmp eq i8 %246, 0
  br i1 %247, label %1887, label %248

248:                                              ; preds = %235
  %249 = sext i8 %246 to i32
  br label %250

250:                                              ; preds = %248, %214
  %251 = phi %"struct.xpathyy::YyParser::stack_symbol_type"* [ %241, %248 ], [ %221, %214 ]
  %252 = phi i64 [ %239, %248 ], [ %220, %214 ]
  %253 = phi i32 [ %249, %248 ], [ %216, %214 ]
  %254 = sext i32 %253 to i64
  %255 = getelementptr inbounds [62 x i8], [62 x i8]* @_ZN7xpathyy8YyParser5yyr2_E, i64 0, i64 %254
  %256 = load i8, i8* %255, align 1
  %257 = sext i8 %256 to i32
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %55) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %55, i8* align 16 getelementptr inbounds ({ { %"struct.xpathyy::YyParser::by_state", [15 x i8], %"class.xpathyy::YyParser::semantic_type" } }, { { %"struct.xpathyy::YyParser::by_state", [15 x i8], %"class.xpathyy::YyParser::semantic_type" } }* @__const._ZN7xpathyy8YyParser5parseEv.yylhs, i64 0, i32 0, i32 0, i32 0), i64 16, i1 false)
  store i8 0, i8* %55, align 16
  call void @llvm.memset.p0i8.i64(i8* align 16 %57, i8 0, i64 16, i1 false) #18
  %258 = xor i8 %256, -1
  %259 = sext i8 %258 to i64
  %260 = add nsw i64 %252, %259
  %261 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %260, i32 0, i32 0, i32 0
  %262 = load i8, i8* %261, align 16
  %263 = getelementptr inbounds [62 x i8], [62 x i8]* @_ZN7xpathyy8YyParser5yyr1_E, i64 0, i64 %254
  %264 = load i8, i8* %263, align 1
  %265 = sext i8 %264 to i32
  %266 = add nsw i32 %265, -30
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds [27 x i8], [27 x i8]* @_ZN7xpathyy8YyParser8yypgoto_E, i64 0, i64 %267
  %269 = load i8, i8* %268, align 1
  %270 = sext i8 %269 to i32
  %271 = sext i8 %262 to i32
  %272 = add nsw i32 %270, %271
  %273 = icmp ult i32 %272, 123
  br i1 %273, label %274, label %281

274:                                              ; preds = %250
  %275 = sext i32 %272 to i64
  %276 = getelementptr inbounds [123 x i8], [123 x i8]* @_ZN7xpathyy8YyParser8yycheck_E, i64 0, i64 %275
  %277 = load i8, i8* %276, align 1
  %278 = icmp eq i8 %277, %262
  br i1 %278, label %279, label %281

279:                                              ; preds = %274
  %280 = getelementptr inbounds [123 x i8], [123 x i8]* @_ZN7xpathyy8YyParser8yytable_E, i64 0, i64 %275
  br label %283

281:                                              ; preds = %274, %250
  %282 = getelementptr inbounds [27 x i8], [27 x i8]* @_ZN7xpathyy8YyParser10yydefgoto_E, i64 0, i64 %267
  br label %283

283:                                              ; preds = %279, %281
  %284 = phi i8* [ %280, %279 ], [ %282, %281 ]
  %285 = load i8, i8* %284, align 1
  store i8 %285, i8* %55, align 16
  switch i32 %265, label %296 [
    i32 11, label %286
    i32 12, label %286
    i32 13, label %286
    i32 14, label %286
    i32 15, label %286
    i32 16, label %286
    i32 19, label %286
    i32 45, label %287
    i32 38, label %288
    i32 39, label %288
    i32 31, label %289
    i32 40, label %289
    i32 43, label %289
    i32 44, label %289
    i32 46, label %289
    i32 47, label %289
    i32 48, label %289
    i32 49, label %289
    i32 50, label %289
    i32 51, label %289
    i32 52, label %289
    i32 53, label %289
    i32 54, label %289
    i32 55, label %289
    i32 56, label %289
    i32 32, label %290
    i32 33, label %290
    i32 34, label %290
    i32 37, label %291
    i32 35, label %292
    i32 41, label %292
    i32 42, label %292
    i32 4, label %293
    i32 5, label %293
    i32 3, label %294
    i32 10, label %295
    i32 36, label %295
  ]

286:                                              ; preds = %283, %283, %283, %283, %283, %283, %283
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %59, align 16
  br label %296

287:                                              ; preds = %283
  call void @llvm.memset.p0i8.i64(i8* align 16 %57, i8 0, i64 16, i1 false) #18
  br label %296

288:                                              ; preds = %283, %283
  call void @llvm.memset.p0i8.i64(i8* align 16 %57, i8 0, i64 16, i1 false) #18
  br label %296

289:                                              ; preds = %283, %283, %283, %283, %283, %283, %283, %283, %283, %283, %283, %283, %283, %283, %283
  call void @llvm.memset.p0i8.i64(i8* align 16 %57, i8 0, i64 16, i1 false) #18
  br label %296

290:                                              ; preds = %283, %283, %283
  call void @llvm.memset.p0i8.i64(i8* align 16 %57, i8 0, i64 16, i1 false) #18
  br label %296

291:                                              ; preds = %283
  call void @llvm.memset.p0i8.i64(i8* align 16 %57, i8 0, i64 16, i1 false) #18
  br label %296

292:                                              ; preds = %283, %283, %283
  call void @llvm.memset.p0i8.i64(i8* align 16 %57, i8 0, i64 16, i1 false) #18
  br label %296

293:                                              ; preds = %283, %283
  store i32 0, i32* %58, align 16
  br label %296

294:                                              ; preds = %283
  store i32 0, i32* %58, align 16
  br label %296

295:                                              ; preds = %283, %283
  store i32 0, i32* %58, align 16
  br label %296

296:                                              ; preds = %283, %295, %294, %293, %292, %291, %290, %289, %288, %287, %286
  switch i32 %253, label %1855 [
    i32 2, label %297
    i32 3, label %312
    i32 4, label %320
    i32 5, label %328
    i32 6, label %335
    i32 7, label %340
    i32 8, label %355
    i32 9, label %372
    i32 10, label %387
    i32 11, label %412
    i32 12, label %434
    i32 13, label %656
    i32 14, label %682
    i32 15, label %909
    i32 16, label %914
    i32 17, label %919
    i32 18, label %920
    i32 19, label %1008
    i32 20, label %1017
    i32 21, label %1072
    i32 22, label %1073
    i32 23, label %1078
    i32 24, label %1123
    i32 25, label %1166
    i32 26, label %1171
    i32 27, label %1210
    i32 28, label %1249
    i32 29, label %1288
    i32 30, label %1299
    i32 31, label %1304
    i32 32, label %1315
    i32 33, label %1327
    i32 34, label %1332
    i32 35, label %1340
    i32 36, label %1352
    i32 37, label %1391
    i32 38, label %1428
    i32 39, label %1433
    i32 40, label %1438
    i32 41, label %1542
    i32 42, label %1547
    i32 43, label %1552
    i32 44, label %1579
    i32 45, label %1619
    i32 46, label %1624
    i32 47, label %1640
    i32 48, label %1645
    i32 49, label %1661
    i32 50, label %1666
    i32 51, label %1682
    i32 52, label %1687
    i32 53, label %1707
    i32 54, label %1712
    i32 55, label %1732
    i32 56, label %1737
    i32 57, label %1753
    i32 58, label %1769
    i32 59, label %1774
    i32 60, label %1794
    i32 61, label %1799
  ]

297:                                              ; preds = %296
  %298 = add nsw i64 %252, -1
  %299 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %298, i32 0, i32 1
  %300 = bitcast %"class.xpathyy::YyParser::semantic_type"* %299 to i64*
  %301 = load i64, i64* %300, align 8
  %302 = load i64*, i64** %155, align 8
  store i64 %301, i64* %302, align 8
  %303 = load i64, i64* %44, align 8
  %304 = load i64, i64* %45, align 8
  %305 = sub i64 %303, %304
  %306 = ashr exact i64 %305, 5
  %307 = add nsw i64 %306, -1
  %308 = inttoptr i64 %304 to %"struct.xpathyy::YyParser::stack_symbol_type"*
  %309 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %308, i64 %307, i32 0, i32 1
  %310 = bitcast %"class.xpathyy::YyParser::semantic_type"* %309 to %"class.blink::xpath::Expression"**
  %311 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %310, align 8
  call void @_ZN5blink14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.213"* %60, %"class.blink::xpath::Expression"* %311) #18
  br label %1856

312:                                              ; preds = %296
  %313 = add nsw i64 %252, -1
  %314 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %313, i32 0, i32 1
  %315 = bitcast %"class.xpathyy::YyParser::semantic_type"* %314 to %"class.blink::xpath::LocationPath"**
  %316 = load %"class.blink::xpath::LocationPath"*, %"class.blink::xpath::LocationPath"** %315, align 8
  call void @_ZN5blink14PersistentBaseINS_5xpath12LocationPathELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.215"* %153, %"class.blink::xpath::LocationPath"* %316) #18
  %317 = load %"class.blink::xpath::LocationPath"*, %"class.blink::xpath::LocationPath"** %154, align 16
  %318 = getelementptr inbounds %"class.blink::xpath::LocationPath", %"class.blink::xpath::LocationPath"* %317, i64 0, i32 3
  store i8 0, i8* %318, align 8
  %319 = getelementptr inbounds %"class.blink::xpath::LocationPath", %"class.blink::xpath::LocationPath"* %317, i64 0, i32 0, i32 2
  store i8 1, i8* %319, align 8
  br label %1856

320:                                              ; preds = %296
  %321 = add nsw i64 %252, -1
  %322 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %321, i32 0, i32 1
  %323 = bitcast %"class.xpathyy::YyParser::semantic_type"* %322 to %"class.blink::xpath::LocationPath"**
  %324 = load %"class.blink::xpath::LocationPath"*, %"class.blink::xpath::LocationPath"** %323, align 8
  call void @_ZN5blink14PersistentBaseINS_5xpath12LocationPathELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.215"* %153, %"class.blink::xpath::LocationPath"* %324) #18
  %325 = load %"class.blink::xpath::LocationPath"*, %"class.blink::xpath::LocationPath"** %154, align 16
  %326 = getelementptr inbounds %"class.blink::xpath::LocationPath", %"class.blink::xpath::LocationPath"* %325, i64 0, i32 3
  store i8 1, i8* %326, align 8
  %327 = getelementptr inbounds %"class.blink::xpath::LocationPath", %"class.blink::xpath::LocationPath"* %325, i64 0, i32 0, i32 2
  store i8 0, i8* %327, align 8
  br label %1856

328:                                              ; preds = %296
  %329 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 56) #18
  %330 = bitcast i8* %329 to %"class.blink::xpath::LocationPath"*
  call void @_ZN5blink5xpath12LocationPathC1Ev(%"class.blink::xpath::LocationPath"* %330) #18
  %331 = getelementptr inbounds i8, i8* %329, i64 -4
  %332 = bitcast i8* %331 to i16*
  %333 = load atomic i16, i16* %332 monotonic, align 2
  %334 = or i16 %333, 1
  store atomic i16 %334, i16* %332 release, align 2
  call void @_ZN5blink14PersistentBaseINS_5xpath12LocationPathELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.215"* %153, %"class.blink::xpath::LocationPath"* %330) #18
  br label %1856

335:                                              ; preds = %296
  %336 = add nsw i64 %252, -1
  %337 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %336, i32 0, i32 1
  %338 = bitcast %"class.xpathyy::YyParser::semantic_type"* %337 to %"class.blink::xpath::LocationPath"**
  %339 = load %"class.blink::xpath::LocationPath"*, %"class.blink::xpath::LocationPath"** %338, align 8
  call void @_ZN5blink14PersistentBaseINS_5xpath12LocationPathELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.215"* %153, %"class.blink::xpath::LocationPath"* %339) #18
  br label %1856

340:                                              ; preds = %296
  %341 = add nsw i64 %252, -1
  %342 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %341, i32 0, i32 1
  %343 = bitcast %"class.xpathyy::YyParser::semantic_type"* %342 to %"class.blink::xpath::LocationPath"**
  %344 = load %"class.blink::xpath::LocationPath"*, %"class.blink::xpath::LocationPath"** %343, align 8
  call void @_ZN5blink14PersistentBaseINS_5xpath12LocationPathELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.215"* %153, %"class.blink::xpath::LocationPath"* %344) #18
  %345 = load %"class.blink::xpath::LocationPath"*, %"class.blink::xpath::LocationPath"** %154, align 16
  %346 = load i64, i64* %44, align 8
  %347 = load i64, i64* %45, align 8
  %348 = sub i64 %346, %347
  %349 = ashr exact i64 %348, 5
  %350 = add nsw i64 %349, -2
  %351 = inttoptr i64 %347 to %"struct.xpathyy::YyParser::stack_symbol_type"*
  %352 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %351, i64 %350, i32 0, i32 1
  %353 = bitcast %"class.xpathyy::YyParser::semantic_type"* %352 to %"class.blink::xpath::Step"**
  %354 = load %"class.blink::xpath::Step"*, %"class.blink::xpath::Step"** %353, align 8
  call void @_ZN5blink5xpath12LocationPath15InsertFirstStepEPNS0_4StepE(%"class.blink::xpath::LocationPath"* %345, %"class.blink::xpath::Step"* %354) #18
  br label %1856

355:                                              ; preds = %296
  %356 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 56) #18
  %357 = bitcast i8* %356 to %"class.blink::xpath::LocationPath"*
  call void @_ZN5blink5xpath12LocationPathC1Ev(%"class.blink::xpath::LocationPath"* %357) #18
  %358 = getelementptr inbounds i8, i8* %356, i64 -4
  %359 = bitcast i8* %358 to i16*
  %360 = load atomic i16, i16* %359 monotonic, align 2
  %361 = or i16 %360, 1
  store atomic i16 %361, i16* %359 release, align 2
  call void @_ZN5blink14PersistentBaseINS_5xpath12LocationPathELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.215"* %153, %"class.blink::xpath::LocationPath"* %357) #18
  %362 = load %"class.blink::xpath::LocationPath"*, %"class.blink::xpath::LocationPath"** %154, align 16
  %363 = load i64, i64* %44, align 8
  %364 = load i64, i64* %45, align 8
  %365 = sub i64 %363, %364
  %366 = ashr exact i64 %365, 5
  %367 = add nsw i64 %366, -1
  %368 = inttoptr i64 %364 to %"struct.xpathyy::YyParser::stack_symbol_type"*
  %369 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %368, i64 %367, i32 0, i32 1
  %370 = bitcast %"class.xpathyy::YyParser::semantic_type"* %369 to %"class.blink::xpath::Step"**
  %371 = load %"class.blink::xpath::Step"*, %"class.blink::xpath::Step"** %370, align 8
  call void @_ZN5blink5xpath12LocationPath10AppendStepEPNS0_4StepE(%"class.blink::xpath::LocationPath"* %362, %"class.blink::xpath::Step"* %371) #18
  br label %1856

372:                                              ; preds = %296
  %373 = add nsw i64 %252, -3
  %374 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %373, i32 0, i32 1
  %375 = bitcast %"class.xpathyy::YyParser::semantic_type"* %374 to %"class.blink::xpath::LocationPath"**
  %376 = load %"class.blink::xpath::LocationPath"*, %"class.blink::xpath::LocationPath"** %375, align 8
  call void @_ZN5blink14PersistentBaseINS_5xpath12LocationPathELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.215"* %153, %"class.blink::xpath::LocationPath"* %376) #18
  %377 = load %"class.blink::xpath::LocationPath"*, %"class.blink::xpath::LocationPath"** %154, align 16
  %378 = load i64, i64* %44, align 8
  %379 = load i64, i64* %45, align 8
  %380 = sub i64 %378, %379
  %381 = ashr exact i64 %380, 5
  %382 = add nsw i64 %381, -1
  %383 = inttoptr i64 %379 to %"struct.xpathyy::YyParser::stack_symbol_type"*
  %384 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %383, i64 %382, i32 0, i32 1
  %385 = bitcast %"class.xpathyy::YyParser::semantic_type"* %384 to %"class.blink::xpath::Step"**
  %386 = load %"class.blink::xpath::Step"*, %"class.blink::xpath::Step"** %385, align 8
  call void @_ZN5blink5xpath12LocationPath10AppendStepEPNS0_4StepE(%"class.blink::xpath::LocationPath"* %377, %"class.blink::xpath::Step"* %386) #18
  br label %1856

387:                                              ; preds = %296
  %388 = add nsw i64 %252, -3
  %389 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %388, i32 0, i32 1
  %390 = bitcast %"class.xpathyy::YyParser::semantic_type"* %389 to %"class.blink::xpath::LocationPath"**
  %391 = load %"class.blink::xpath::LocationPath"*, %"class.blink::xpath::LocationPath"** %390, align 8
  call void @_ZN5blink14PersistentBaseINS_5xpath12LocationPathELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.215"* %153, %"class.blink::xpath::LocationPath"* %391) #18
  %392 = load %"class.blink::xpath::LocationPath"*, %"class.blink::xpath::LocationPath"** %154, align 16
  %393 = load i64, i64* %44, align 8
  %394 = load i64, i64* %45, align 8
  %395 = sub i64 %393, %394
  %396 = ashr exact i64 %395, 5
  %397 = add nsw i64 %396, -2
  %398 = inttoptr i64 %394 to %"struct.xpathyy::YyParser::stack_symbol_type"*
  %399 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %398, i64 %397, i32 0, i32 1
  %400 = bitcast %"class.xpathyy::YyParser::semantic_type"* %399 to %"class.blink::xpath::Step"**
  %401 = load %"class.blink::xpath::Step"*, %"class.blink::xpath::Step"** %400, align 8
  call void @_ZN5blink5xpath12LocationPath10AppendStepEPNS0_4StepE(%"class.blink::xpath::LocationPath"* %392, %"class.blink::xpath::Step"* %401) #18
  %402 = load %"class.blink::xpath::LocationPath"*, %"class.blink::xpath::LocationPath"** %154, align 16
  %403 = load i64, i64* %44, align 8
  %404 = load i64, i64* %45, align 8
  %405 = sub i64 %403, %404
  %406 = ashr exact i64 %405, 5
  %407 = add nsw i64 %406, -1
  %408 = inttoptr i64 %404 to %"struct.xpathyy::YyParser::stack_symbol_type"*
  %409 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %408, i64 %407, i32 0, i32 1
  %410 = bitcast %"class.xpathyy::YyParser::semantic_type"* %409 to %"class.blink::xpath::Step"**
  %411 = load %"class.blink::xpath::Step"*, %"class.blink::xpath::Step"** %410, align 8
  call void @_ZN5blink5xpath12LocationPath10AppendStepEPNS0_4StepE(%"class.blink::xpath::LocationPath"* %402, %"class.blink::xpath::Step"* %411) #18
  br label %1856

412:                                              ; preds = %296
  %413 = add nsw i64 %252, -1
  %414 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %413, i32 0, i32 1
  %415 = bitcast %"class.xpathyy::YyParser::semantic_type"* %414 to %"class.blink::HeapVector.201"**
  %416 = load %"class.blink::HeapVector.201"*, %"class.blink::HeapVector.201"** %415, align 8
  %417 = icmp eq %"class.blink::HeapVector.201"* %416, null
  %418 = add nsw i64 %252, -2
  %419 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %418, i32 0, i32 1
  %420 = bitcast %"class.xpathyy::YyParser::semantic_type"* %419 to %"class.blink::xpath::Step::NodeTest"**
  %421 = load %"class.blink::xpath::Step::NodeTest"*, %"class.blink::xpath::Step::NodeTest"** %420, align 8
  %422 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #18
  %423 = bitcast i8* %422 to %"class.blink::xpath::Step"*
  br i1 %417, label %429, label %424

424:                                              ; preds = %412
  call void @_ZN5blink5xpath4StepC1ENS1_4AxisERKNS1_8NodeTestERNS_10HeapVectorINS_6MemberINS0_9PredicateEEELj0EEE(%"class.blink::xpath::Step"* %423, i32 3, %"class.blink::xpath::Step::NodeTest"* dereferenceable(40) %421, %"class.blink::HeapVector.201"* nonnull dereferenceable(16) %416) #18
  %425 = getelementptr inbounds i8, i8* %422, i64 -4
  %426 = bitcast i8* %425 to i16*
  %427 = load atomic i16, i16* %426 monotonic, align 2
  %428 = or i16 %427, 1
  store atomic i16 %428, i16* %426 release, align 2
  call void @_ZN5blink14PersistentBaseINS_5xpath4StepELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.229"* %71, %"class.blink::xpath::Step"* %423) #18
  br label %1856

429:                                              ; preds = %412
  call void @_ZN5blink5xpath4StepC1ENS1_4AxisERKNS1_8NodeTestE(%"class.blink::xpath::Step"* %423, i32 3, %"class.blink::xpath::Step::NodeTest"* dereferenceable(40) %421) #18
  %430 = getelementptr inbounds i8, i8* %422, i64 -4
  %431 = bitcast i8* %430 to i16*
  %432 = load atomic i16, i16* %431 monotonic, align 2
  %433 = or i16 %432, 1
  store atomic i16 %433, i16* %431 release, align 2
  call void @_ZN5blink14PersistentBaseINS_5xpath4StepELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.229"* %71, %"class.blink::xpath::Step"* %423) #18
  br label %1856

434:                                              ; preds = %296
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %137) #18
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %138, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %139) #18
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %140, align 8
  %435 = load %"class.blink::xpath::Parser"*, %"class.blink::xpath::Parser"** %124, align 8
  %436 = add nsw i64 %252, -2
  %437 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %436, i32 0, i32 1
  %438 = bitcast %"class.xpathyy::YyParser::semantic_type"* %437 to %"class.WTF::String"*
  %439 = call zeroext i1 @_ZN5blink5xpath6Parser11ExpandQNameERKN3WTF6StringERNS2_12AtomicStringES7_(%"class.blink::xpath::Parser"* %435, %"class.WTF::String"* dereferenceable(8) %438, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %14, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %15) #18
  br i1 %439, label %443, label %440

440:                                              ; preds = %434
  %441 = load %"class.blink::xpath::Parser"*, %"class.blink::xpath::Parser"** %124, align 8
  %442 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %441, i64 0, i32 1
  store i8 1, i8* %442, align 8
  br label %621

443:                                              ; preds = %434
  %444 = load i64, i64* %44, align 8
  %445 = load i64, i64* %45, align 8
  %446 = sub i64 %444, %445
  %447 = ashr exact i64 %446, 5
  %448 = add nsw i64 %447, -1
  %449 = inttoptr i64 %445 to %"struct.xpathyy::YyParser::stack_symbol_type"*
  %450 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %449, i64 %448, i32 0, i32 1
  %451 = bitcast %"class.xpathyy::YyParser::semantic_type"* %450 to %"class.blink::HeapVector.201"**
  %452 = load %"class.blink::HeapVector.201"*, %"class.blink::HeapVector.201"** %451, align 8
  %453 = icmp eq %"class.blink::HeapVector.201"* %452, null
  br i1 %453, label %542, label %454

454:                                              ; preds = %443
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %141) #18
  store i32 4, i32* %142, align 8
  %455 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  store %"class.WTF::StringImpl"* %455, %"class.WTF::StringImpl"** %143, align 8
  %456 = icmp eq %"class.WTF::StringImpl"* %455, null
  br i1 %456, label %474, label %457

457:                                              ; preds = %454
  %458 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %455, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %459 = load atomic i32, i32* %458 monotonic, align 4
  %460 = and i32 %459, 2
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %462, label %474

462:                                              ; preds = %457
  %463 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %455, i64 0, i32 0
  %464 = load i32, i32* %463, align 4
  %465 = zext i32 %464 to i33
  %466 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %465, i33 1) #18
  %467 = extractvalue { i33, i1 } %466, 1
  %468 = extractvalue { i33, i1 } %466, 0
  %469 = icmp slt i33 %468, 0
  %470 = or i1 %467, %469
  br i1 %470, label %471, label %472, !prof !2

471:                                              ; preds = %462
  call void @llvm.trap() #18
  unreachable

472:                                              ; preds = %462
  %473 = trunc i33 %468 to i32
  store i32 %473, i32* %463, align 4
  br label %474

474:                                              ; preds = %472, %457, %454
  %475 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  store %"class.WTF::StringImpl"* %475, %"class.WTF::StringImpl"** %144, align 8
  %476 = icmp eq %"class.WTF::StringImpl"* %475, null
  br i1 %476, label %494, label %477

477:                                              ; preds = %474
  %478 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %475, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %479 = load atomic i32, i32* %478 monotonic, align 4
  %480 = and i32 %479, 2
  %481 = icmp eq i32 %480, 0
  br i1 %481, label %482, label %494

482:                                              ; preds = %477
  %483 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %475, i64 0, i32 0
  %484 = load i32, i32* %483, align 4
  %485 = zext i32 %484 to i33
  %486 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %485, i33 1) #18
  %487 = extractvalue { i33, i1 } %486, 1
  %488 = extractvalue { i33, i1 } %486, 0
  %489 = icmp slt i33 %488, 0
  %490 = or i1 %487, %489
  br i1 %490, label %491, label %492, !prof !2

491:                                              ; preds = %482
  call void @llvm.trap() #18
  unreachable

492:                                              ; preds = %482
  %493 = trunc i33 %488 to i32
  store i32 %493, i32* %483, align 4
  br label %494

494:                                              ; preds = %474, %477, %492
  call void @llvm.memset.p0i8.i64(i8* align 8 %146, i8 0, i64 16, i1 false) #18
  %495 = load i64, i64* %44, align 8
  %496 = load i64, i64* %45, align 8
  %497 = sub i64 %495, %496
  %498 = ashr exact i64 %497, 5
  %499 = add nsw i64 %498, -1
  %500 = inttoptr i64 %496 to %"struct.xpathyy::YyParser::stack_symbol_type"*
  %501 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %500, i64 %499, i32 0, i32 1
  %502 = bitcast %"class.xpathyy::YyParser::semantic_type"* %501 to %"class.blink::HeapVector.201"**
  %503 = load %"class.blink::HeapVector.201"*, %"class.blink::HeapVector.201"** %502, align 8
  %504 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #18
  %505 = bitcast i8* %504 to %"class.blink::xpath::Step"*
  call void @_ZN5blink5xpath4StepC1ENS1_4AxisERKNS1_8NodeTestERNS_10HeapVectorINS_6MemberINS0_9PredicateEEELj0EEE(%"class.blink::xpath::Step"* %505, i32 3, %"class.blink::xpath::Step::NodeTest"* nonnull dereferenceable(40) %16, %"class.blink::HeapVector.201"* dereferenceable(16) %503) #18
  %506 = getelementptr inbounds i8, i8* %504, i64 -4
  %507 = bitcast i8* %506 to i16*
  %508 = load atomic i16, i16* %507 monotonic, align 2
  %509 = or i16 %508, 1
  store atomic i16 %509, i16* %507 release, align 2
  call void @_ZN5blink14PersistentBaseINS_5xpath4StepELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.229"* %71, %"class.blink::xpath::Step"* %505) #18
  %510 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %511 = icmp eq %"class.WTF::StringImpl"* %510, null
  br i1 %511, label %525, label %512

512:                                              ; preds = %494
  %513 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %510, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %514 = load atomic i32, i32* %513 monotonic, align 4
  %515 = and i32 %514, 2
  %516 = icmp eq i32 %515, 0
  %517 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %510, i64 0, i32 0
  %518 = load i32, i32* %517, align 4
  br i1 %516, label %519, label %521

519:                                              ; preds = %512
  %520 = add i32 %518, -1
  store i32 %520, i32* %517, align 4
  br label %521

521:                                              ; preds = %519, %512
  %522 = phi i32 [ %520, %519 ], [ %518, %512 ]
  %523 = icmp eq i32 %522, 0
  br i1 %523, label %524, label %525

524:                                              ; preds = %521
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %510) #18
  br label %525

525:                                              ; preds = %524, %521, %494
  %526 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %143, align 8
  %527 = icmp eq %"class.WTF::StringImpl"* %526, null
  br i1 %527, label %541, label %528

528:                                              ; preds = %525
  %529 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %526, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %530 = load atomic i32, i32* %529 monotonic, align 4
  %531 = and i32 %530, 2
  %532 = icmp eq i32 %531, 0
  %533 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %526, i64 0, i32 0
  %534 = load i32, i32* %533, align 4
  br i1 %532, label %535, label %537

535:                                              ; preds = %528
  %536 = add i32 %534, -1
  store i32 %536, i32* %533, align 4
  br label %537

537:                                              ; preds = %535, %528
  %538 = phi i32 [ %536, %535 ], [ %534, %528 ]
  %539 = icmp eq i32 %538, 0
  br i1 %539, label %540, label %541

540:                                              ; preds = %537
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %526) #18
  br label %541

541:                                              ; preds = %525, %537, %540
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %141) #18
  br label %621

542:                                              ; preds = %443
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %147) #18
  store i32 4, i32* %148, align 8
  %543 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  store %"class.WTF::StringImpl"* %543, %"class.WTF::StringImpl"** %149, align 8
  %544 = icmp eq %"class.WTF::StringImpl"* %543, null
  br i1 %544, label %562, label %545

545:                                              ; preds = %542
  %546 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %543, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %547 = load atomic i32, i32* %546 monotonic, align 4
  %548 = and i32 %547, 2
  %549 = icmp eq i32 %548, 0
  br i1 %549, label %550, label %562

550:                                              ; preds = %545
  %551 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %543, i64 0, i32 0
  %552 = load i32, i32* %551, align 4
  %553 = zext i32 %552 to i33
  %554 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %553, i33 1) #18
  %555 = extractvalue { i33, i1 } %554, 1
  %556 = extractvalue { i33, i1 } %554, 0
  %557 = icmp slt i33 %556, 0
  %558 = or i1 %555, %557
  br i1 %558, label %559, label %560, !prof !2

559:                                              ; preds = %550
  call void @llvm.trap() #18
  unreachable

560:                                              ; preds = %550
  %561 = trunc i33 %556 to i32
  store i32 %561, i32* %551, align 4
  br label %562

562:                                              ; preds = %560, %545, %542
  %563 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  store %"class.WTF::StringImpl"* %563, %"class.WTF::StringImpl"** %150, align 8
  %564 = icmp eq %"class.WTF::StringImpl"* %563, null
  br i1 %564, label %582, label %565

565:                                              ; preds = %562
  %566 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %563, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %567 = load atomic i32, i32* %566 monotonic, align 4
  %568 = and i32 %567, 2
  %569 = icmp eq i32 %568, 0
  br i1 %569, label %570, label %582

570:                                              ; preds = %565
  %571 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %563, i64 0, i32 0
  %572 = load i32, i32* %571, align 4
  %573 = zext i32 %572 to i33
  %574 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %573, i33 1) #18
  %575 = extractvalue { i33, i1 } %574, 1
  %576 = extractvalue { i33, i1 } %574, 0
  %577 = icmp slt i33 %576, 0
  %578 = or i1 %575, %577
  br i1 %578, label %579, label %580, !prof !2

579:                                              ; preds = %570
  call void @llvm.trap() #18
  unreachable

580:                                              ; preds = %570
  %581 = trunc i33 %576 to i32
  store i32 %581, i32* %571, align 4
  br label %582

582:                                              ; preds = %562, %565, %580
  call void @llvm.memset.p0i8.i64(i8* align 8 %152, i8 0, i64 16, i1 false) #18
  %583 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #18
  %584 = bitcast i8* %583 to %"class.blink::xpath::Step"*
  call void @_ZN5blink5xpath4StepC1ENS1_4AxisERKNS1_8NodeTestE(%"class.blink::xpath::Step"* %584, i32 3, %"class.blink::xpath::Step::NodeTest"* nonnull dereferenceable(40) %17) #18
  %585 = getelementptr inbounds i8, i8* %583, i64 -4
  %586 = bitcast i8* %585 to i16*
  %587 = load atomic i16, i16* %586 monotonic, align 2
  %588 = or i16 %587, 1
  store atomic i16 %588, i16* %586 release, align 2
  call void @_ZN5blink14PersistentBaseINS_5xpath4StepELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.229"* %71, %"class.blink::xpath::Step"* %584) #18
  %589 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %590 = icmp eq %"class.WTF::StringImpl"* %589, null
  br i1 %590, label %604, label %591

591:                                              ; preds = %582
  %592 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %589, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %593 = load atomic i32, i32* %592 monotonic, align 4
  %594 = and i32 %593, 2
  %595 = icmp eq i32 %594, 0
  %596 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %589, i64 0, i32 0
  %597 = load i32, i32* %596, align 4
  br i1 %595, label %598, label %600

598:                                              ; preds = %591
  %599 = add i32 %597, -1
  store i32 %599, i32* %596, align 4
  br label %600

600:                                              ; preds = %598, %591
  %601 = phi i32 [ %599, %598 ], [ %597, %591 ]
  %602 = icmp eq i32 %601, 0
  br i1 %602, label %603, label %604

603:                                              ; preds = %600
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %589) #18
  br label %604

604:                                              ; preds = %603, %600, %582
  %605 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %149, align 8
  %606 = icmp eq %"class.WTF::StringImpl"* %605, null
  br i1 %606, label %620, label %607

607:                                              ; preds = %604
  %608 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %605, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %609 = load atomic i32, i32* %608 monotonic, align 4
  %610 = and i32 %609, 2
  %611 = icmp eq i32 %610, 0
  %612 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %605, i64 0, i32 0
  %613 = load i32, i32* %612, align 4
  br i1 %611, label %614, label %616

614:                                              ; preds = %607
  %615 = add i32 %613, -1
  store i32 %615, i32* %612, align 4
  br label %616

616:                                              ; preds = %614, %607
  %617 = phi i32 [ %615, %614 ], [ %613, %607 ]
  %618 = icmp eq i32 %617, 0
  br i1 %618, label %619, label %620

619:                                              ; preds = %616
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %605) #18
  br label %620

620:                                              ; preds = %604, %616, %619
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %147) #18
  br label %621

621:                                              ; preds = %541, %620, %440
  %622 = phi i32 [ 11, %440 ], [ 0, %620 ], [ 0, %541 ]
  %623 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %624 = icmp eq %"class.WTF::StringImpl"* %623, null
  br i1 %624, label %638, label %625

625:                                              ; preds = %621
  %626 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %623, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %627 = load atomic i32, i32* %626 monotonic, align 4
  %628 = and i32 %627, 2
  %629 = icmp eq i32 %628, 0
  %630 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %623, i64 0, i32 0
  %631 = load i32, i32* %630, align 4
  br i1 %629, label %632, label %634

632:                                              ; preds = %625
  %633 = add i32 %631, -1
  store i32 %633, i32* %630, align 4
  br label %634

634:                                              ; preds = %632, %625
  %635 = phi i32 [ %633, %632 ], [ %631, %625 ]
  %636 = icmp eq i32 %635, 0
  br i1 %636, label %637, label %638

637:                                              ; preds = %634
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %623) #18
  br label %638

638:                                              ; preds = %621, %634, %637
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %139) #18
  %639 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  %640 = icmp eq %"class.WTF::StringImpl"* %639, null
  br i1 %640, label %654, label %641

641:                                              ; preds = %638
  %642 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %639, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %643 = load atomic i32, i32* %642 monotonic, align 4
  %644 = and i32 %643, 2
  %645 = icmp eq i32 %644, 0
  %646 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %639, i64 0, i32 0
  %647 = load i32, i32* %646, align 4
  br i1 %645, label %648, label %650

648:                                              ; preds = %641
  %649 = add i32 %647, -1
  store i32 %649, i32* %646, align 4
  br label %650

650:                                              ; preds = %648, %641
  %651 = phi i32 [ %649, %648 ], [ %647, %641 ]
  %652 = icmp eq i32 %651, 0
  br i1 %652, label %653, label %654

653:                                              ; preds = %650
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %639) #18
  br label %654

654:                                              ; preds = %638, %650, %653
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %137) #18
  %655 = icmp eq i32 %622, 0
  br i1 %655, label %1856, label %1884

656:                                              ; preds = %296
  %657 = add nsw i64 %252, -1
  %658 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %657, i32 0, i32 1
  %659 = bitcast %"class.xpathyy::YyParser::semantic_type"* %658 to %"class.blink::HeapVector.201"**
  %660 = load %"class.blink::HeapVector.201"*, %"class.blink::HeapVector.201"** %659, align 8
  %661 = icmp eq %"class.blink::HeapVector.201"* %660, null
  %662 = add nsw i64 %252, -3
  %663 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %662, i32 0, i32 1
  %664 = bitcast %"class.xpathyy::YyParser::semantic_type"* %663 to i32*
  %665 = add nsw i64 %252, -2
  %666 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %665, i32 0, i32 1
  %667 = bitcast %"class.xpathyy::YyParser::semantic_type"* %666 to %"class.blink::xpath::Step::NodeTest"**
  %668 = load %"class.blink::xpath::Step::NodeTest"*, %"class.blink::xpath::Step::NodeTest"** %667, align 8
  %669 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #18
  %670 = bitcast i8* %669 to %"class.blink::xpath::Step"*
  %671 = load i32, i32* %664, align 4
  br i1 %661, label %677, label %672

672:                                              ; preds = %656
  call void @_ZN5blink5xpath4StepC1ENS1_4AxisERKNS1_8NodeTestERNS_10HeapVectorINS_6MemberINS0_9PredicateEEELj0EEE(%"class.blink::xpath::Step"* %670, i32 %671, %"class.blink::xpath::Step::NodeTest"* dereferenceable(40) %668, %"class.blink::HeapVector.201"* nonnull dereferenceable(16) %660) #18
  %673 = getelementptr inbounds i8, i8* %669, i64 -4
  %674 = bitcast i8* %673 to i16*
  %675 = load atomic i16, i16* %674 monotonic, align 2
  %676 = or i16 %675, 1
  store atomic i16 %676, i16* %674 release, align 2
  call void @_ZN5blink14PersistentBaseINS_5xpath4StepELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.229"* %71, %"class.blink::xpath::Step"* %670) #18
  br label %1856

677:                                              ; preds = %656
  call void @_ZN5blink5xpath4StepC1ENS1_4AxisERKNS1_8NodeTestE(%"class.blink::xpath::Step"* %670, i32 %671, %"class.blink::xpath::Step::NodeTest"* dereferenceable(40) %668) #18
  %678 = getelementptr inbounds i8, i8* %669, i64 -4
  %679 = bitcast i8* %678 to i16*
  %680 = load atomic i16, i16* %679 monotonic, align 2
  %681 = or i16 %680, 1
  store atomic i16 %681, i16* %679 release, align 2
  call void @_ZN5blink14PersistentBaseINS_5xpath4StepELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.229"* %71, %"class.blink::xpath::Step"* %670) #18
  br label %1856

682:                                              ; preds = %296
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #18
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %121, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #18
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %123, align 8
  %683 = load %"class.blink::xpath::Parser"*, %"class.blink::xpath::Parser"** %124, align 8
  %684 = add nsw i64 %252, -2
  %685 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %684, i32 0, i32 1
  %686 = bitcast %"class.xpathyy::YyParser::semantic_type"* %685 to %"class.WTF::String"*
  %687 = call zeroext i1 @_ZN5blink5xpath6Parser11ExpandQNameERKN3WTF6StringERNS2_12AtomicStringES7_(%"class.blink::xpath::Parser"* %683, %"class.WTF::String"* dereferenceable(8) %686, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %18, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %19) #18
  br i1 %687, label %691, label %688

688:                                              ; preds = %682
  %689 = load %"class.blink::xpath::Parser"*, %"class.blink::xpath::Parser"** %124, align 8
  %690 = getelementptr inbounds %"class.blink::xpath::Parser", %"class.blink::xpath::Parser"* %689, i64 0, i32 1
  store i8 1, i8* %690, align 8
  br label %874

691:                                              ; preds = %682
  %692 = load i64, i64* %44, align 8
  %693 = load i64, i64* %45, align 8
  %694 = sub i64 %692, %693
  %695 = ashr exact i64 %694, 5
  %696 = add nsw i64 %695, -1
  %697 = inttoptr i64 %693 to %"struct.xpathyy::YyParser::stack_symbol_type"*
  %698 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %697, i64 %696, i32 0, i32 1
  %699 = bitcast %"class.xpathyy::YyParser::semantic_type"* %698 to %"class.blink::HeapVector.201"**
  %700 = load %"class.blink::HeapVector.201"*, %"class.blink::HeapVector.201"** %699, align 8
  %701 = icmp eq %"class.blink::HeapVector.201"* %700, null
  %702 = add nsw i64 %695, -3
  %703 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %697, i64 %702, i32 0, i32 1
  %704 = bitcast %"class.xpathyy::YyParser::semantic_type"* %703 to i32*
  br i1 %701, label %794, label %705

705:                                              ; preds = %691
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %125) #18
  store i32 4, i32* %126, align 8
  %706 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  store %"class.WTF::StringImpl"* %706, %"class.WTF::StringImpl"** %127, align 8
  %707 = icmp eq %"class.WTF::StringImpl"* %706, null
  br i1 %707, label %725, label %708

708:                                              ; preds = %705
  %709 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %706, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %710 = load atomic i32, i32* %709 monotonic, align 4
  %711 = and i32 %710, 2
  %712 = icmp eq i32 %711, 0
  br i1 %712, label %713, label %725

713:                                              ; preds = %708
  %714 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %706, i64 0, i32 0
  %715 = load i32, i32* %714, align 4
  %716 = zext i32 %715 to i33
  %717 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %716, i33 1) #18
  %718 = extractvalue { i33, i1 } %717, 1
  %719 = extractvalue { i33, i1 } %717, 0
  %720 = icmp slt i33 %719, 0
  %721 = or i1 %718, %720
  br i1 %721, label %722, label %723, !prof !2

722:                                              ; preds = %713
  call void @llvm.trap() #18
  unreachable

723:                                              ; preds = %713
  %724 = trunc i33 %719 to i32
  store i32 %724, i32* %714, align 4
  br label %725

725:                                              ; preds = %723, %708, %705
  %726 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  store %"class.WTF::StringImpl"* %726, %"class.WTF::StringImpl"** %128, align 8
  %727 = icmp eq %"class.WTF::StringImpl"* %726, null
  br i1 %727, label %745, label %728

728:                                              ; preds = %725
  %729 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %726, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %730 = load atomic i32, i32* %729 monotonic, align 4
  %731 = and i32 %730, 2
  %732 = icmp eq i32 %731, 0
  br i1 %732, label %733, label %745

733:                                              ; preds = %728
  %734 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %726, i64 0, i32 0
  %735 = load i32, i32* %734, align 4
  %736 = zext i32 %735 to i33
  %737 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %736, i33 1) #18
  %738 = extractvalue { i33, i1 } %737, 1
  %739 = extractvalue { i33, i1 } %737, 0
  %740 = icmp slt i33 %739, 0
  %741 = or i1 %738, %740
  br i1 %741, label %742, label %743, !prof !2

742:                                              ; preds = %733
  call void @llvm.trap() #18
  unreachable

743:                                              ; preds = %733
  %744 = trunc i33 %739 to i32
  store i32 %744, i32* %734, align 4
  br label %745

745:                                              ; preds = %725, %728, %743
  call void @llvm.memset.p0i8.i64(i8* align 8 %130, i8 0, i64 16, i1 false) #18
  %746 = load i64, i64* %44, align 8
  %747 = load i64, i64* %45, align 8
  %748 = sub i64 %746, %747
  %749 = ashr exact i64 %748, 5
  %750 = add nsw i64 %749, -1
  %751 = inttoptr i64 %747 to %"struct.xpathyy::YyParser::stack_symbol_type"*
  %752 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %751, i64 %750, i32 0, i32 1
  %753 = bitcast %"class.xpathyy::YyParser::semantic_type"* %752 to %"class.blink::HeapVector.201"**
  %754 = load %"class.blink::HeapVector.201"*, %"class.blink::HeapVector.201"** %753, align 8
  %755 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #18
  %756 = bitcast i8* %755 to %"class.blink::xpath::Step"*
  %757 = load i32, i32* %704, align 4
  call void @_ZN5blink5xpath4StepC1ENS1_4AxisERKNS1_8NodeTestERNS_10HeapVectorINS_6MemberINS0_9PredicateEEELj0EEE(%"class.blink::xpath::Step"* %756, i32 %757, %"class.blink::xpath::Step::NodeTest"* nonnull dereferenceable(40) %20, %"class.blink::HeapVector.201"* dereferenceable(16) %754) #18
  %758 = getelementptr inbounds i8, i8* %755, i64 -4
  %759 = bitcast i8* %758 to i16*
  %760 = load atomic i16, i16* %759 monotonic, align 2
  %761 = or i16 %760, 1
  store atomic i16 %761, i16* %759 release, align 2
  call void @_ZN5blink14PersistentBaseINS_5xpath4StepELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.229"* %71, %"class.blink::xpath::Step"* %756) #18
  %762 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %763 = icmp eq %"class.WTF::StringImpl"* %762, null
  br i1 %763, label %777, label %764

764:                                              ; preds = %745
  %765 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %762, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %766 = load atomic i32, i32* %765 monotonic, align 4
  %767 = and i32 %766, 2
  %768 = icmp eq i32 %767, 0
  %769 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %762, i64 0, i32 0
  %770 = load i32, i32* %769, align 4
  br i1 %768, label %771, label %773

771:                                              ; preds = %764
  %772 = add i32 %770, -1
  store i32 %772, i32* %769, align 4
  br label %773

773:                                              ; preds = %771, %764
  %774 = phi i32 [ %772, %771 ], [ %770, %764 ]
  %775 = icmp eq i32 %774, 0
  br i1 %775, label %776, label %777

776:                                              ; preds = %773
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %762) #18
  br label %777

777:                                              ; preds = %776, %773, %745
  %778 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %779 = icmp eq %"class.WTF::StringImpl"* %778, null
  br i1 %779, label %793, label %780

780:                                              ; preds = %777
  %781 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %778, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %782 = load atomic i32, i32* %781 monotonic, align 4
  %783 = and i32 %782, 2
  %784 = icmp eq i32 %783, 0
  %785 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %778, i64 0, i32 0
  %786 = load i32, i32* %785, align 4
  br i1 %784, label %787, label %789

787:                                              ; preds = %780
  %788 = add i32 %786, -1
  store i32 %788, i32* %785, align 4
  br label %789

789:                                              ; preds = %787, %780
  %790 = phi i32 [ %788, %787 ], [ %786, %780 ]
  %791 = icmp eq i32 %790, 0
  br i1 %791, label %792, label %793

792:                                              ; preds = %789
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %778) #18
  br label %793

793:                                              ; preds = %777, %789, %792
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %125) #18
  br label %874

794:                                              ; preds = %691
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %131) #18
  store i32 4, i32* %132, align 8
  %795 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  store %"class.WTF::StringImpl"* %795, %"class.WTF::StringImpl"** %133, align 8
  %796 = icmp eq %"class.WTF::StringImpl"* %795, null
  br i1 %796, label %814, label %797

797:                                              ; preds = %794
  %798 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %795, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %799 = load atomic i32, i32* %798 monotonic, align 4
  %800 = and i32 %799, 2
  %801 = icmp eq i32 %800, 0
  br i1 %801, label %802, label %814

802:                                              ; preds = %797
  %803 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %795, i64 0, i32 0
  %804 = load i32, i32* %803, align 4
  %805 = zext i32 %804 to i33
  %806 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %805, i33 1) #18
  %807 = extractvalue { i33, i1 } %806, 1
  %808 = extractvalue { i33, i1 } %806, 0
  %809 = icmp slt i33 %808, 0
  %810 = or i1 %807, %809
  br i1 %810, label %811, label %812, !prof !2

811:                                              ; preds = %802
  call void @llvm.trap() #18
  unreachable

812:                                              ; preds = %802
  %813 = trunc i33 %808 to i32
  store i32 %813, i32* %803, align 4
  br label %814

814:                                              ; preds = %812, %797, %794
  %815 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  store %"class.WTF::StringImpl"* %815, %"class.WTF::StringImpl"** %134, align 8
  %816 = icmp eq %"class.WTF::StringImpl"* %815, null
  br i1 %816, label %834, label %817

817:                                              ; preds = %814
  %818 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %815, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %819 = load atomic i32, i32* %818 monotonic, align 4
  %820 = and i32 %819, 2
  %821 = icmp eq i32 %820, 0
  br i1 %821, label %822, label %834

822:                                              ; preds = %817
  %823 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %815, i64 0, i32 0
  %824 = load i32, i32* %823, align 4
  %825 = zext i32 %824 to i33
  %826 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %825, i33 1) #18
  %827 = extractvalue { i33, i1 } %826, 1
  %828 = extractvalue { i33, i1 } %826, 0
  %829 = icmp slt i33 %828, 0
  %830 = or i1 %827, %829
  br i1 %830, label %831, label %832, !prof !2

831:                                              ; preds = %822
  call void @llvm.trap() #18
  unreachable

832:                                              ; preds = %822
  %833 = trunc i33 %828 to i32
  store i32 %833, i32* %823, align 4
  br label %834

834:                                              ; preds = %814, %817, %832
  call void @llvm.memset.p0i8.i64(i8* align 8 %136, i8 0, i64 16, i1 false) #18
  %835 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #18
  %836 = bitcast i8* %835 to %"class.blink::xpath::Step"*
  %837 = load i32, i32* %704, align 4
  call void @_ZN5blink5xpath4StepC1ENS1_4AxisERKNS1_8NodeTestE(%"class.blink::xpath::Step"* %836, i32 %837, %"class.blink::xpath::Step::NodeTest"* nonnull dereferenceable(40) %21) #18
  %838 = getelementptr inbounds i8, i8* %835, i64 -4
  %839 = bitcast i8* %838 to i16*
  %840 = load atomic i16, i16* %839 monotonic, align 2
  %841 = or i16 %840, 1
  store atomic i16 %841, i16* %839 release, align 2
  call void @_ZN5blink14PersistentBaseINS_5xpath4StepELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.229"* %71, %"class.blink::xpath::Step"* %836) #18
  %842 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  %843 = icmp eq %"class.WTF::StringImpl"* %842, null
  br i1 %843, label %857, label %844

844:                                              ; preds = %834
  %845 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %842, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %846 = load atomic i32, i32* %845 monotonic, align 4
  %847 = and i32 %846, 2
  %848 = icmp eq i32 %847, 0
  %849 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %842, i64 0, i32 0
  %850 = load i32, i32* %849, align 4
  br i1 %848, label %851, label %853

851:                                              ; preds = %844
  %852 = add i32 %850, -1
  store i32 %852, i32* %849, align 4
  br label %853

853:                                              ; preds = %851, %844
  %854 = phi i32 [ %852, %851 ], [ %850, %844 ]
  %855 = icmp eq i32 %854, 0
  br i1 %855, label %856, label %857

856:                                              ; preds = %853
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %842) #18
  br label %857

857:                                              ; preds = %856, %853, %834
  %858 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %133, align 8
  %859 = icmp eq %"class.WTF::StringImpl"* %858, null
  br i1 %859, label %873, label %860

860:                                              ; preds = %857
  %861 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %858, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %862 = load atomic i32, i32* %861 monotonic, align 4
  %863 = and i32 %862, 2
  %864 = icmp eq i32 %863, 0
  %865 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %858, i64 0, i32 0
  %866 = load i32, i32* %865, align 4
  br i1 %864, label %867, label %869

867:                                              ; preds = %860
  %868 = add i32 %866, -1
  store i32 %868, i32* %865, align 4
  br label %869

869:                                              ; preds = %867, %860
  %870 = phi i32 [ %868, %867 ], [ %866, %860 ]
  %871 = icmp eq i32 %870, 0
  br i1 %871, label %872, label %873

872:                                              ; preds = %869
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %858) #18
  br label %873

873:                                              ; preds = %857, %869, %872
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %131) #18
  br label %874

874:                                              ; preds = %793, %873, %688
  %875 = phi i32 [ 11, %688 ], [ 0, %873 ], [ 0, %793 ]
  %876 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %877 = icmp eq %"class.WTF::StringImpl"* %876, null
  br i1 %877, label %891, label %878

878:                                              ; preds = %874
  %879 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %876, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %880 = load atomic i32, i32* %879 monotonic, align 4
  %881 = and i32 %880, 2
  %882 = icmp eq i32 %881, 0
  %883 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %876, i64 0, i32 0
  %884 = load i32, i32* %883, align 4
  br i1 %882, label %885, label %887

885:                                              ; preds = %878
  %886 = add i32 %884, -1
  store i32 %886, i32* %883, align 4
  br label %887

887:                                              ; preds = %885, %878
  %888 = phi i32 [ %886, %885 ], [ %884, %878 ]
  %889 = icmp eq i32 %888, 0
  br i1 %889, label %890, label %891

890:                                              ; preds = %887
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %876) #18
  br label %891

891:                                              ; preds = %874, %887, %890
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #18
  %892 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %893 = icmp eq %"class.WTF::StringImpl"* %892, null
  br i1 %893, label %907, label %894

894:                                              ; preds = %891
  %895 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %892, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %896 = load atomic i32, i32* %895 monotonic, align 4
  %897 = and i32 %896, 2
  %898 = icmp eq i32 %897, 0
  %899 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %892, i64 0, i32 0
  %900 = load i32, i32* %899, align 4
  br i1 %898, label %901, label %903

901:                                              ; preds = %894
  %902 = add i32 %900, -1
  store i32 %902, i32* %899, align 4
  br label %903

903:                                              ; preds = %901, %894
  %904 = phi i32 [ %902, %901 ], [ %900, %894 ]
  %905 = icmp eq i32 %904, 0
  br i1 %905, label %906, label %907

906:                                              ; preds = %903
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %892) #18
  br label %907

907:                                              ; preds = %891, %903, %906
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #18
  %908 = icmp eq i32 %875, 0
  br i1 %908, label %1856, label %1884

909:                                              ; preds = %296
  %910 = add nsw i64 %252, -1
  %911 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %910, i32 0, i32 1
  %912 = bitcast %"class.xpathyy::YyParser::semantic_type"* %911 to %"class.blink::xpath::Step"**
  %913 = load %"class.blink::xpath::Step"*, %"class.blink::xpath::Step"** %912, align 8
  call void @_ZN5blink14PersistentBaseINS_5xpath4StepELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.229"* %71, %"class.blink::xpath::Step"* %913) #18
  br label %1856

914:                                              ; preds = %296
  %915 = add nsw i64 %252, -1
  %916 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %915, i32 0, i32 1
  %917 = bitcast %"class.xpathyy::YyParser::semantic_type"* %916 to i32*
  %918 = load i32, i32* %917, align 4
  store i32 %918, i32* %58, align 16
  br label %1856

919:                                              ; preds = %296
  store i32 2, i32* %58, align 16
  br label %1856

920:                                              ; preds = %296
  %921 = add nsw i64 %252, -3
  %922 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %921, i32 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #18
  %923 = bitcast %"class.xpathyy::YyParser::semantic_type"* %922 to %"class.WTF::StringImpl"**
  %924 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %923, align 8
  %925 = icmp eq %"class.WTF::StringImpl"* %924, null
  br i1 %925, label %926, label %928

926:                                              ; preds = %920
  store i8* null, i8** %92, align 8
  %927 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %927, i64* %94, align 8
  br label %933

928:                                              ; preds = %920
  store %"class.WTF::StringImpl"* %924, %"class.WTF::StringImpl"** %91, align 8
  %929 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %924, i64 0, i32 1
  %930 = load i32, i32* %929, align 4
  %931 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %924, i64 1
  store %"class.WTF::StringImpl"* %931, %"class.WTF::StringImpl"** %93, align 8
  %932 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %933

933:                                              ; preds = %928, %926
  %934 = phi i64 [ %932, %928 ], [ %927, %926 ]
  %935 = phi i32 [ %930, %928 ], [ 0, %926 ]
  store i32 %935, i32* %95, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %96) #18
  store i64 %934, i64* %97, align 8
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8** %98, align 8
  store i32 4, i32* %99, align 8
  %936 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %96) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #18
  br i1 %936, label %937, label %946

937:                                              ; preds = %933
  %938 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath4Step8NodeTestEEEPhm(i64 40) #18
  %939 = bitcast i8* %938 to %"class.blink::xpath::Step::NodeTest"*
  %940 = bitcast i8* %938 to i32*
  store i32 3, i32* %940, align 8
  %941 = getelementptr inbounds i8, i8* %938, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %941, i8 0, i64 32, i1 false) #18
  %942 = getelementptr inbounds i8, i8* %938, i64 -4
  %943 = bitcast i8* %942 to i16*
  %944 = load atomic i16, i16* %943 monotonic, align 2
  %945 = or i16 %944, 1
  store atomic i16 %945, i16* %943 release, align 2
  call void @_ZN5blink14PersistentBaseINS_5xpath4Step8NodeTestELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS3_(%"class.blink::PersistentBase.225"* %89, %"class.blink::xpath::Step::NodeTest"* %939) #18
  br label %1856

946:                                              ; preds = %933
  %947 = load i64, i64* %44, align 8
  %948 = load i64, i64* %45, align 8
  %949 = sub i64 %947, %948
  %950 = ashr exact i64 %949, 5
  %951 = add nsw i64 %950, -3
  %952 = inttoptr i64 %948 to %"struct.xpathyy::YyParser::stack_symbol_type"*
  %953 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %952, i64 %951, i32 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #18
  %954 = bitcast %"class.xpathyy::YyParser::semantic_type"* %953 to %"class.WTF::StringImpl"**
  %955 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %954, align 8
  %956 = icmp eq %"class.WTF::StringImpl"* %955, null
  br i1 %956, label %957, label %959

957:                                              ; preds = %946
  store i8* null, i8** %102, align 8
  %958 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %958, i64* %104, align 8
  br label %964

959:                                              ; preds = %946
  store %"class.WTF::StringImpl"* %955, %"class.WTF::StringImpl"** %101, align 8
  %960 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %955, i64 0, i32 1
  %961 = load i32, i32* %960, align 4
  %962 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %955, i64 1
  store %"class.WTF::StringImpl"* %962, %"class.WTF::StringImpl"** %103, align 8
  %963 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %964

964:                                              ; preds = %959, %957
  %965 = phi i64 [ %963, %959 ], [ %958, %957 ]
  %966 = phi i32 [ %961, %959 ], [ 0, %957 ]
  store i32 %966, i32* %105, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %106) #18
  store i64 %965, i64* %107, align 8
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8** %108, align 8
  store i32 4, i32* %109, align 8
  %967 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %106) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %100) #18
  br i1 %967, label %968, label %977

968:                                              ; preds = %964
  %969 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath4Step8NodeTestEEEPhm(i64 40) #18
  %970 = bitcast i8* %969 to %"class.blink::xpath::Step::NodeTest"*
  %971 = bitcast i8* %969 to i32*
  store i32 0, i32* %971, align 8
  %972 = getelementptr inbounds i8, i8* %969, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %972, i8 0, i64 32, i1 false) #18
  %973 = getelementptr inbounds i8, i8* %969, i64 -4
  %974 = bitcast i8* %973 to i16*
  %975 = load atomic i16, i16* %974 monotonic, align 2
  %976 = or i16 %975, 1
  store atomic i16 %976, i16* %974 release, align 2
  call void @_ZN5blink14PersistentBaseINS_5xpath4Step8NodeTestELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS3_(%"class.blink::PersistentBase.225"* %89, %"class.blink::xpath::Step::NodeTest"* %970) #18
  br label %1856

977:                                              ; preds = %964
  %978 = load i64, i64* %44, align 8
  %979 = load i64, i64* %45, align 8
  %980 = sub i64 %978, %979
  %981 = ashr exact i64 %980, 5
  %982 = add nsw i64 %981, -3
  %983 = inttoptr i64 %979 to %"struct.xpathyy::YyParser::stack_symbol_type"*
  %984 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %983, i64 %982, i32 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %110) #18
  %985 = bitcast %"class.xpathyy::YyParser::semantic_type"* %984 to %"class.WTF::StringImpl"**
  %986 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %985, align 8
  %987 = icmp eq %"class.WTF::StringImpl"* %986, null
  br i1 %987, label %988, label %990

988:                                              ; preds = %977
  store i8* null, i8** %112, align 8
  %989 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %989, i64* %114, align 8
  br label %995

990:                                              ; preds = %977
  store %"class.WTF::StringImpl"* %986, %"class.WTF::StringImpl"** %111, align 8
  %991 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %986, i64 0, i32 1
  %992 = load i32, i32* %991, align 4
  %993 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %986, i64 1
  store %"class.WTF::StringImpl"* %993, %"class.WTF::StringImpl"** %113, align 8
  %994 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %995

995:                                              ; preds = %990, %988
  %996 = phi i64 [ %994, %990 ], [ %989, %988 ]
  %997 = phi i32 [ %992, %990 ], [ 0, %988 ]
  store i32 %997, i32* %115, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %116) #18
  store i64 %996, i64* %117, align 8
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i8** %118, align 8
  store i32 7, i32* %119, align 8
  %998 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %116) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110) #18
  br i1 %998, label %999, label %1856

999:                                              ; preds = %995
  %1000 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath4Step8NodeTestEEEPhm(i64 40) #18
  %1001 = bitcast i8* %1000 to %"class.blink::xpath::Step::NodeTest"*
  %1002 = bitcast i8* %1000 to i32*
  store i32 1, i32* %1002, align 8
  %1003 = getelementptr inbounds i8, i8* %1000, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1003, i8 0, i64 32, i1 false) #18
  %1004 = getelementptr inbounds i8, i8* %1000, i64 -4
  %1005 = bitcast i8* %1004 to i16*
  %1006 = load atomic i16, i16* %1005 monotonic, align 2
  %1007 = or i16 %1006, 1
  store atomic i16 %1007, i16* %1005 release, align 2
  call void @_ZN5blink14PersistentBaseINS_5xpath4Step8NodeTestELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS3_(%"class.blink::PersistentBase.225"* %89, %"class.blink::xpath::Step::NodeTest"* %1001) #18
  br label %1856

1008:                                             ; preds = %296
  %1009 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath4Step8NodeTestEEEPhm(i64 40) #18
  %1010 = bitcast i8* %1009 to %"class.blink::xpath::Step::NodeTest"*
  %1011 = bitcast i8* %1009 to i32*
  store i32 2, i32* %1011, align 8
  %1012 = getelementptr inbounds i8, i8* %1009, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1012, i8 0, i64 32, i1 false) #18
  %1013 = getelementptr inbounds i8, i8* %1009, i64 -4
  %1014 = bitcast i8* %1013 to i16*
  %1015 = load atomic i16, i16* %1014 monotonic, align 2
  %1016 = or i16 %1015, 1
  store atomic i16 %1016, i16* %1014 release, align 2
  call void @_ZN5blink14PersistentBaseINS_5xpath4Step8NodeTestELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS3_(%"class.blink::PersistentBase.225"* %89, %"class.blink::xpath::Step::NodeTest"* %1010) #18
  br label %1856

1017:                                             ; preds = %296
  %1018 = add nsw i64 %252, -2
  %1019 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1018, i32 0, i32 1
  %1020 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1019 to %"class.WTF::String"*
  %1021 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* %1020) #18
  %1022 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath4Step8NodeTestEEEPhm(i64 40) #18
  %1023 = bitcast i8* %1022 to %"class.blink::xpath::Step::NodeTest"*
  %1024 = bitcast i8* %1022 to i32*
  store i32 2, i32* %1024, align 8
  %1025 = getelementptr inbounds i8, i8* %1022, i64 8
  %1026 = icmp eq %"class.WTF::StringImpl"* %1021, null
  br i1 %1026, label %1050, label %1027

1027:                                             ; preds = %1017
  %1028 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1021, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1029 = load atomic i32, i32* %1028 acquire, align 4
  %1030 = and i32 %1029, 4
  %1031 = icmp eq i32 %1030, 0
  br i1 %1031, label %1048, label %1032

1032:                                             ; preds = %1027
  %1033 = load atomic i32, i32* %1028 monotonic, align 4
  %1034 = and i32 %1033, 2
  %1035 = icmp eq i32 %1034, 0
  br i1 %1035, label %1036, label %1050

1036:                                             ; preds = %1032
  %1037 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1021, i64 0, i32 0
  %1038 = load i32, i32* %1037, align 4
  %1039 = zext i32 %1038 to i33
  %1040 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1039, i33 1) #18
  %1041 = extractvalue { i33, i1 } %1040, 1
  %1042 = extractvalue { i33, i1 } %1040, 0
  %1043 = icmp slt i33 %1042, 0
  %1044 = or i1 %1041, %1043
  br i1 %1044, label %1045, label %1046, !prof !2

1045:                                             ; preds = %1036
  call void @llvm.trap() #18
  unreachable

1046:                                             ; preds = %1036
  %1047 = trunc i33 %1042 to i32
  store i32 %1047, i32* %1037, align 4
  br label %1050

1048:                                             ; preds = %1027
  %1049 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %1021) #18
  br label %1050

1050:                                             ; preds = %1017, %1032, %1046, %1048
  %1051 = phi %"class.WTF::StringImpl"* [ %1049, %1048 ], [ %1021, %1032 ], [ %1021, %1046 ], [ null, %1017 ]
  %1052 = ptrtoint %"class.WTF::StringImpl"* %1051 to i64
  %1053 = bitcast i8* %1025 to i64*
  store i64 %1052, i64* %1053, align 8
  %1054 = getelementptr inbounds i8, i8* %1022, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %1054, i8 0, i64 24, i1 false) #18
  %1055 = getelementptr inbounds i8, i8* %1022, i64 -4
  %1056 = bitcast i8* %1055 to i16*
  %1057 = load atomic i16, i16* %1056 monotonic, align 2
  %1058 = or i16 %1057, 1
  store atomic i16 %1058, i16* %1056 release, align 2
  call void @_ZN5blink14PersistentBaseINS_5xpath4Step8NodeTestELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS3_(%"class.blink::PersistentBase.225"* %89, %"class.blink::xpath::Step::NodeTest"* %1023) #18
  br i1 %1026, label %1856, label %1059

1059:                                             ; preds = %1050
  %1060 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1021, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1061 = load atomic i32, i32* %1060 monotonic, align 4
  %1062 = and i32 %1061, 2
  %1063 = icmp eq i32 %1062, 0
  %1064 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1021, i64 0, i32 0
  %1065 = load i32, i32* %1064, align 4
  br i1 %1063, label %1066, label %1068

1066:                                             ; preds = %1059
  %1067 = add i32 %1065, -1
  store i32 %1067, i32* %1064, align 4
  br label %1068

1068:                                             ; preds = %1066, %1059
  %1069 = phi i32 [ %1067, %1066 ], [ %1065, %1059 ]
  %1070 = icmp eq i32 %1069, 0
  br i1 %1070, label %1071, label %1856

1071:                                             ; preds = %1068
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1021) #18
  br label %1856

1072:                                             ; preds = %296
  store %"class.blink::HeapVector.201"* null, %"class.blink::HeapVector.201"** %84, align 16
  br label %1866

1073:                                             ; preds = %296
  %1074 = add nsw i64 %252, -1
  %1075 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1074, i32 0, i32 1
  %1076 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1075 to %"class.blink::HeapVector.201"**
  %1077 = load %"class.blink::HeapVector.201"*, %"class.blink::HeapVector.201"** %1076, align 8
  call void @_ZN5blink14PersistentBaseINS_10HeapVectorINS_6MemberINS_5xpath9PredicateEEELj0EEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS6_(%"class.blink::PersistentBase.200"* %83, %"class.blink::HeapVector.201"* %1077) #18
  br label %1856

1078:                                             ; preds = %296
  %1079 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_5xpath9PredicateEEELj0EEEEEPhm(i64 16) #18
  %1080 = bitcast i8* %1079 to %"class.blink::HeapVector.201"*
  %1081 = getelementptr inbounds i8, i8* %1079, i64 -4
  %1082 = bitcast i8* %1081 to i16*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1079, i8 0, i64 16, i1 false) #18
  %1083 = load atomic i16, i16* %1082 monotonic, align 2
  %1084 = or i16 %1083, 1
  store atomic i16 %1084, i16* %1082 release, align 2
  call void @_ZN5blink14PersistentBaseINS_10HeapVectorINS_6MemberINS_5xpath9PredicateEEELj0EEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS6_(%"class.blink::PersistentBase.200"* %83, %"class.blink::HeapVector.201"* %1080) #18
  %1085 = load %"class.blink::HeapVector.201"*, %"class.blink::HeapVector.201"** %84, align 16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #18
  %1086 = load i64, i64* %44, align 8
  %1087 = load i64, i64* %45, align 8
  %1088 = sub i64 %1086, %1087
  %1089 = ashr exact i64 %1088, 5
  %1090 = add nsw i64 %1089, -1
  %1091 = inttoptr i64 %1087 to %"struct.xpathyy::YyParser::stack_symbol_type"*
  %1092 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %1091, i64 %1090, i32 0, i32 1
  %1093 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9PredicateEEEPhm(i64 8) #18
  %1094 = bitcast i8* %1093 to %"class.blink::xpath::Predicate"*
  %1095 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1092 to %"class.blink::xpath::Expression"**
  %1096 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1095, align 8
  call void @_ZN5blink5xpath9PredicateC1EPNS0_10ExpressionE(%"class.blink::xpath::Predicate"* %1094, %"class.blink::xpath::Expression"* %1096) #18
  %1097 = getelementptr inbounds i8, i8* %1093, i64 -4
  %1098 = bitcast i8* %1097 to i16*
  %1099 = load atomic i16, i16* %1098 monotonic, align 2
  %1100 = or i16 %1099, 1
  store atomic i16 %1100, i16* %1098 release, align 2
  store i8* %1093, i8** %88, align 8
  %1101 = getelementptr inbounds %"class.blink::HeapVector.201", %"class.blink::HeapVector.201"* %1085, i64 0, i32 0, i32 0, i32 0, i32 2
  %1102 = load i32, i32* %1101, align 4
  %1103 = getelementptr inbounds %"class.blink::HeapVector.201", %"class.blink::HeapVector.201"* %1085, i64 0, i32 0, i32 0, i32 0, i32 1
  %1104 = load i32, i32* %1103, align 8
  %1105 = icmp eq i32 %1102, %1104
  br i1 %1105, label %1120, label %1106, !prof !2

1106:                                             ; preds = %1078
  %1107 = ptrtoint i8* %1093 to i64
  %1108 = getelementptr inbounds %"class.blink::HeapVector.201", %"class.blink::HeapVector.201"* %1085, i64 0, i32 0, i32 0, i32 0, i32 0
  %1109 = load %"class.blink::Member.207"*, %"class.blink::Member.207"** %1108, align 8
  %1110 = zext i32 %1102 to i64
  %1111 = getelementptr inbounds %"class.blink::Member.207", %"class.blink::Member.207"* %1109, i64 %1110
  %1112 = bitcast %"class.blink::Member.207"* %1111 to i64*
  store atomic i64 %1107, i64* %1112 monotonic, align 8
  %1113 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1114 = icmp eq i32 %1113, 0
  br i1 %1114, label %1117, label %1115

1115:                                             ; preds = %1106
  %1116 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1093) #18
  br label %1117

1117:                                             ; preds = %1115, %1106
  %1118 = load i32, i32* %1101, align 4
  %1119 = add i32 %1118, 1
  store i32 %1119, i32* %1101, align 4
  br label %1122

1120:                                             ; preds = %1078
  %1121 = getelementptr inbounds %"class.blink::HeapVector.201", %"class.blink::HeapVector.201"* %1085, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath9PredicateEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS4_EEvOT_(%"class.WTF::Vector.204"* %1121, %"class.blink::xpath::Predicate"** nonnull dereferenceable(8) %22) #18
  br label %1122

1122:                                             ; preds = %1117, %1120
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #18
  br label %1856

1123:                                             ; preds = %296
  %1124 = add nsw i64 %252, -2
  %1125 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1124, i32 0, i32 1
  %1126 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1125 to %"class.blink::HeapVector.201"**
  %1127 = load %"class.blink::HeapVector.201"*, %"class.blink::HeapVector.201"** %1126, align 8
  call void @_ZN5blink14PersistentBaseINS_10HeapVectorINS_6MemberINS_5xpath9PredicateEEELj0EEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS6_(%"class.blink::PersistentBase.200"* %83, %"class.blink::HeapVector.201"* %1127) #18
  %1128 = load %"class.blink::HeapVector.201"*, %"class.blink::HeapVector.201"** %84, align 16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #18
  %1129 = load i64, i64* %44, align 8
  %1130 = load i64, i64* %45, align 8
  %1131 = sub i64 %1129, %1130
  %1132 = ashr exact i64 %1131, 5
  %1133 = add nsw i64 %1132, -1
  %1134 = inttoptr i64 %1130 to %"struct.xpathyy::YyParser::stack_symbol_type"*
  %1135 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %1134, i64 %1133, i32 0, i32 1
  %1136 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9PredicateEEEPhm(i64 8) #18
  %1137 = bitcast i8* %1136 to %"class.blink::xpath::Predicate"*
  %1138 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1135 to %"class.blink::xpath::Expression"**
  %1139 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1138, align 8
  call void @_ZN5blink5xpath9PredicateC1EPNS0_10ExpressionE(%"class.blink::xpath::Predicate"* %1137, %"class.blink::xpath::Expression"* %1139) #18
  %1140 = getelementptr inbounds i8, i8* %1136, i64 -4
  %1141 = bitcast i8* %1140 to i16*
  %1142 = load atomic i16, i16* %1141 monotonic, align 2
  %1143 = or i16 %1142, 1
  store atomic i16 %1143, i16* %1141 release, align 2
  store i8* %1136, i8** %86, align 8
  %1144 = getelementptr inbounds %"class.blink::HeapVector.201", %"class.blink::HeapVector.201"* %1128, i64 0, i32 0, i32 0, i32 0, i32 2
  %1145 = load i32, i32* %1144, align 4
  %1146 = getelementptr inbounds %"class.blink::HeapVector.201", %"class.blink::HeapVector.201"* %1128, i64 0, i32 0, i32 0, i32 0, i32 1
  %1147 = load i32, i32* %1146, align 8
  %1148 = icmp eq i32 %1145, %1147
  br i1 %1148, label %1163, label %1149, !prof !2

1149:                                             ; preds = %1123
  %1150 = ptrtoint i8* %1136 to i64
  %1151 = getelementptr inbounds %"class.blink::HeapVector.201", %"class.blink::HeapVector.201"* %1128, i64 0, i32 0, i32 0, i32 0, i32 0
  %1152 = load %"class.blink::Member.207"*, %"class.blink::Member.207"** %1151, align 8
  %1153 = zext i32 %1145 to i64
  %1154 = getelementptr inbounds %"class.blink::Member.207", %"class.blink::Member.207"* %1152, i64 %1153
  %1155 = bitcast %"class.blink::Member.207"* %1154 to i64*
  store atomic i64 %1150, i64* %1155 monotonic, align 8
  %1156 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1157 = icmp eq i32 %1156, 0
  br i1 %1157, label %1160, label %1158

1158:                                             ; preds = %1149
  %1159 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1136) #18
  br label %1160

1160:                                             ; preds = %1158, %1149
  %1161 = load i32, i32* %1144, align 4
  %1162 = add i32 %1161, 1
  store i32 %1162, i32* %1144, align 4
  br label %1165

1163:                                             ; preds = %1123
  %1164 = getelementptr inbounds %"class.blink::HeapVector.201", %"class.blink::HeapVector.201"* %1128, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath9PredicateEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS4_EEvOT_(%"class.WTF::Vector.204"* %1164, %"class.blink::xpath::Predicate"** nonnull dereferenceable(8) %23) #18
  br label %1165

1165:                                             ; preds = %1160, %1163
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #18
  br label %1856

1166:                                             ; preds = %296
  %1167 = add nsw i64 %252, -2
  %1168 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1167, i32 0, i32 1
  %1169 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1168 to %"class.blink::xpath::Expression"**
  %1170 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1169, align 8
  call void @_ZN5blink14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.213"* %60, %"class.blink::xpath::Expression"* %1170) #18
  br label %1856

1171:                                             ; preds = %296
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %78) #18
  store i32 3, i32* %79, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 32, i1 false) #18
  %1172 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #18
  %1173 = bitcast i8* %1172 to %"class.blink::xpath::Step"*
  call void @_ZN5blink5xpath4StepC1ENS1_4AxisERKNS1_8NodeTestE(%"class.blink::xpath::Step"* %1173, i32 5, %"class.blink::xpath::Step::NodeTest"* nonnull dereferenceable(40) %24) #18
  %1174 = getelementptr inbounds i8, i8* %1172, i64 -4
  %1175 = bitcast i8* %1174 to i16*
  %1176 = load atomic i16, i16* %1175 monotonic, align 2
  %1177 = or i16 %1176, 1
  store atomic i16 %1177, i16* %1175 release, align 2
  call void @_ZN5blink14PersistentBaseINS_5xpath4StepELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.229"* %71, %"class.blink::xpath::Step"* %1173) #18
  %1178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %1179 = icmp eq %"class.WTF::StringImpl"* %1178, null
  br i1 %1179, label %1193, label %1180

1180:                                             ; preds = %1171
  %1181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1178, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1182 = load atomic i32, i32* %1181 monotonic, align 4
  %1183 = and i32 %1182, 2
  %1184 = icmp eq i32 %1183, 0
  %1185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1178, i64 0, i32 0
  %1186 = load i32, i32* %1185, align 4
  br i1 %1184, label %1187, label %1189

1187:                                             ; preds = %1180
  %1188 = add i32 %1186, -1
  store i32 %1188, i32* %1185, align 4
  br label %1189

1189:                                             ; preds = %1187, %1180
  %1190 = phi i32 [ %1188, %1187 ], [ %1186, %1180 ]
  %1191 = icmp eq i32 %1190, 0
  br i1 %1191, label %1192, label %1193

1192:                                             ; preds = %1189
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1178) #18
  br label %1193

1193:                                             ; preds = %1192, %1189, %1171
  %1194 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %1195 = icmp eq %"class.WTF::StringImpl"* %1194, null
  br i1 %1195, label %1209, label %1196

1196:                                             ; preds = %1193
  %1197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1194, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1198 = load atomic i32, i32* %1197 monotonic, align 4
  %1199 = and i32 %1198, 2
  %1200 = icmp eq i32 %1199, 0
  %1201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1194, i64 0, i32 0
  %1202 = load i32, i32* %1201, align 4
  br i1 %1200, label %1203, label %1205

1203:                                             ; preds = %1196
  %1204 = add i32 %1202, -1
  store i32 %1204, i32* %1201, align 4
  br label %1205

1205:                                             ; preds = %1203, %1196
  %1206 = phi i32 [ %1204, %1203 ], [ %1202, %1196 ]
  %1207 = icmp eq i32 %1206, 0
  br i1 %1207, label %1208, label %1209

1208:                                             ; preds = %1205
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1194) #18
  br label %1209

1209:                                             ; preds = %1193, %1205, %1208
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %78) #18
  br label %1856

1210:                                             ; preds = %296
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %73) #18
  store i32 3, i32* %74, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 32, i1 false) #18
  %1211 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #18
  %1212 = bitcast i8* %1211 to %"class.blink::xpath::Step"*
  call void @_ZN5blink5xpath4StepC1ENS1_4AxisERKNS1_8NodeTestE(%"class.blink::xpath::Step"* %1212, i32 12, %"class.blink::xpath::Step::NodeTest"* nonnull dereferenceable(40) %25) #18
  %1213 = getelementptr inbounds i8, i8* %1211, i64 -4
  %1214 = bitcast i8* %1213 to i16*
  %1215 = load atomic i16, i16* %1214 monotonic, align 2
  %1216 = or i16 %1215, 1
  store atomic i16 %1216, i16* %1214 release, align 2
  call void @_ZN5blink14PersistentBaseINS_5xpath4StepELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.229"* %71, %"class.blink::xpath::Step"* %1212) #18
  %1217 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %1218 = icmp eq %"class.WTF::StringImpl"* %1217, null
  br i1 %1218, label %1232, label %1219

1219:                                             ; preds = %1210
  %1220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1217, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1221 = load atomic i32, i32* %1220 monotonic, align 4
  %1222 = and i32 %1221, 2
  %1223 = icmp eq i32 %1222, 0
  %1224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1217, i64 0, i32 0
  %1225 = load i32, i32* %1224, align 4
  br i1 %1223, label %1226, label %1228

1226:                                             ; preds = %1219
  %1227 = add i32 %1225, -1
  store i32 %1227, i32* %1224, align 4
  br label %1228

1228:                                             ; preds = %1226, %1219
  %1229 = phi i32 [ %1227, %1226 ], [ %1225, %1219 ]
  %1230 = icmp eq i32 %1229, 0
  br i1 %1230, label %1231, label %1232

1231:                                             ; preds = %1228
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1217) #18
  br label %1232

1232:                                             ; preds = %1231, %1228, %1210
  %1233 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %1234 = icmp eq %"class.WTF::StringImpl"* %1233, null
  br i1 %1234, label %1248, label %1235

1235:                                             ; preds = %1232
  %1236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1233, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1237 = load atomic i32, i32* %1236 monotonic, align 4
  %1238 = and i32 %1237, 2
  %1239 = icmp eq i32 %1238, 0
  %1240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1233, i64 0, i32 0
  %1241 = load i32, i32* %1240, align 4
  br i1 %1239, label %1242, label %1244

1242:                                             ; preds = %1235
  %1243 = add i32 %1241, -1
  store i32 %1243, i32* %1240, align 4
  br label %1244

1244:                                             ; preds = %1242, %1235
  %1245 = phi i32 [ %1243, %1242 ], [ %1241, %1235 ]
  %1246 = icmp eq i32 %1245, 0
  br i1 %1246, label %1247, label %1248

1247:                                             ; preds = %1244
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1233) #18
  br label %1248

1248:                                             ; preds = %1232, %1244, %1247
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %73) #18
  br label %1856

1249:                                             ; preds = %296
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %67) #18
  store i32 3, i32* %68, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 32, i1 false) #18
  %1250 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #18
  %1251 = bitcast i8* %1250 to %"class.blink::xpath::Step"*
  call void @_ZN5blink5xpath4StepC1ENS1_4AxisERKNS1_8NodeTestE(%"class.blink::xpath::Step"* %1251, i32 9, %"class.blink::xpath::Step::NodeTest"* nonnull dereferenceable(40) %26) #18
  %1252 = getelementptr inbounds i8, i8* %1250, i64 -4
  %1253 = bitcast i8* %1252 to i16*
  %1254 = load atomic i16, i16* %1253 monotonic, align 2
  %1255 = or i16 %1254, 1
  store atomic i16 %1255, i16* %1253 release, align 2
  call void @_ZN5blink14PersistentBaseINS_5xpath4StepELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.229"* %71, %"class.blink::xpath::Step"* %1251) #18
  %1256 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %1257 = icmp eq %"class.WTF::StringImpl"* %1256, null
  br i1 %1257, label %1271, label %1258

1258:                                             ; preds = %1249
  %1259 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1256, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1260 = load atomic i32, i32* %1259 monotonic, align 4
  %1261 = and i32 %1260, 2
  %1262 = icmp eq i32 %1261, 0
  %1263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1256, i64 0, i32 0
  %1264 = load i32, i32* %1263, align 4
  br i1 %1262, label %1265, label %1267

1265:                                             ; preds = %1258
  %1266 = add i32 %1264, -1
  store i32 %1266, i32* %1263, align 4
  br label %1267

1267:                                             ; preds = %1265, %1258
  %1268 = phi i32 [ %1266, %1265 ], [ %1264, %1258 ]
  %1269 = icmp eq i32 %1268, 0
  br i1 %1269, label %1270, label %1271

1270:                                             ; preds = %1267
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1256) #18
  br label %1271

1271:                                             ; preds = %1270, %1267, %1249
  %1272 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %1273 = icmp eq %"class.WTF::StringImpl"* %1272, null
  br i1 %1273, label %1287, label %1274

1274:                                             ; preds = %1271
  %1275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1272, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1276 = load atomic i32, i32* %1275 monotonic, align 4
  %1277 = and i32 %1276, 2
  %1278 = icmp eq i32 %1277, 0
  %1279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1272, i64 0, i32 0
  %1280 = load i32, i32* %1279, align 4
  br i1 %1278, label %1281, label %1283

1281:                                             ; preds = %1274
  %1282 = add i32 %1280, -1
  store i32 %1282, i32* %1279, align 4
  br label %1283

1283:                                             ; preds = %1281, %1274
  %1284 = phi i32 [ %1282, %1281 ], [ %1280, %1274 ]
  %1285 = icmp eq i32 %1284, 0
  br i1 %1285, label %1286, label %1287

1286:                                             ; preds = %1283
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1272) #18
  br label %1287

1287:                                             ; preds = %1271, %1283, %1286
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %67) #18
  br label %1856

1288:                                             ; preds = %296
  %1289 = add nsw i64 %252, -1
  %1290 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1289, i32 0, i32 1
  %1291 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1290 to %"class.WTF::String"*
  %1292 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #18
  %1293 = bitcast i8* %1292 to %"class.blink::xpath::VariableReference"*
  call void @_ZN5blink5xpath17VariableReferenceC1ERKN3WTF6StringE(%"class.blink::xpath::VariableReference"* %1293, %"class.WTF::String"* dereferenceable(8) %1291) #18
  %1294 = getelementptr inbounds i8, i8* %1292, i64 -4
  %1295 = bitcast i8* %1294 to i16*
  %1296 = load atomic i16, i16* %1295 monotonic, align 2
  %1297 = or i16 %1296, 1
  store atomic i16 %1297, i16* %1295 release, align 2
  %1298 = bitcast i8* %1292 to %"class.blink::xpath::Expression"*
  call void @_ZN5blink14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.213"* %60, %"class.blink::xpath::Expression"* %1298) #18
  br label %1856

1299:                                             ; preds = %296
  %1300 = add nsw i64 %252, -2
  %1301 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1300, i32 0, i32 1
  %1302 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1301 to %"class.blink::xpath::Expression"**
  %1303 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1302, align 8
  call void @_ZN5blink14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.213"* %60, %"class.blink::xpath::Expression"* %1303) #18
  br label %1856

1304:                                             ; preds = %296
  %1305 = add nsw i64 %252, -1
  %1306 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1305, i32 0, i32 1
  %1307 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1306 to %"class.WTF::String"*
  %1308 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 56) #18
  %1309 = bitcast i8* %1308 to %"class.blink::xpath::StringExpression"*
  call void @_ZN5blink5xpath16StringExpressionC1ERKN3WTF6StringE(%"class.blink::xpath::StringExpression"* %1309, %"class.WTF::String"* dereferenceable(8) %1307) #18
  %1310 = getelementptr inbounds i8, i8* %1308, i64 -4
  %1311 = bitcast i8* %1310 to i16*
  %1312 = load atomic i16, i16* %1311 monotonic, align 2
  %1313 = or i16 %1312, 1
  store atomic i16 %1313, i16* %1311 release, align 2
  %1314 = bitcast i8* %1308 to %"class.blink::xpath::Expression"*
  call void @_ZN5blink14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.213"* %60, %"class.blink::xpath::Expression"* %1314) #18
  br label %1856

1315:                                             ; preds = %296
  %1316 = add nsw i64 %252, -1
  %1317 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1316, i32 0, i32 1
  %1318 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1317 to %"class.WTF::String"*
  %1319 = call double @_ZNK3WTF6String8ToDoubleEPb(%"class.WTF::String"* %1318, i8* null) #18
  %1320 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 56) #18
  %1321 = bitcast i8* %1320 to %"class.blink::xpath::Number"*
  call void @_ZN5blink5xpath6NumberC1Ed(%"class.blink::xpath::Number"* %1321, double %1319) #18
  %1322 = getelementptr inbounds i8, i8* %1320, i64 -4
  %1323 = bitcast i8* %1322 to i16*
  %1324 = load atomic i16, i16* %1323 monotonic, align 2
  %1325 = or i16 %1324, 1
  store atomic i16 %1325, i16* %1323 release, align 2
  %1326 = bitcast i8* %1320 to %"class.blink::xpath::Expression"*
  call void @_ZN5blink14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.213"* %60, %"class.blink::xpath::Expression"* %1326) #18
  br label %1856

1327:                                             ; preds = %296
  %1328 = add nsw i64 %252, -1
  %1329 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1328, i32 0, i32 1
  %1330 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1329 to %"class.blink::xpath::Expression"**
  %1331 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1330, align 8
  call void @_ZN5blink14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.213"* %60, %"class.blink::xpath::Expression"* %1331) #18
  br label %1856

1332:                                             ; preds = %296
  %1333 = add nsw i64 %252, -3
  %1334 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1333, i32 0, i32 1
  %1335 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1334 to %"class.WTF::String"*
  %1336 = call %"class.blink::xpath::Function"* @_ZN5blink5xpath14CreateFunctionERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %1335) #18
  %1337 = bitcast %"class.blink::xpath::Function"* %1336 to %"class.blink::xpath::Expression"*
  call void @_ZN5blink14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.213"* %60, %"class.blink::xpath::Expression"* %1337) #18
  %1338 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %61, align 16
  %1339 = icmp eq %"class.blink::xpath::Expression"* %1338, null
  br i1 %1339, label %1882, label %1856

1340:                                             ; preds = %296
  %1341 = add nsw i64 %252, -4
  %1342 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1341, i32 0, i32 1
  %1343 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1342 to %"class.WTF::String"*
  %1344 = add nsw i64 %252, -2
  %1345 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1344, i32 0, i32 1
  %1346 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1345 to %"class.blink::HeapVector"**
  %1347 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %1346, align 8
  %1348 = call %"class.blink::xpath::Function"* @_ZN5blink5xpath14CreateFunctionERKN3WTF6StringERNS_10HeapVectorINS_6MemberINS0_10ExpressionEEELj0EEE(%"class.WTF::String"* dereferenceable(8) %1343, %"class.blink::HeapVector"* dereferenceable(16) %1347) #18
  %1349 = bitcast %"class.blink::xpath::Function"* %1348 to %"class.blink::xpath::Expression"*
  call void @_ZN5blink14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.213"* %60, %"class.blink::xpath::Expression"* %1349) #18
  %1350 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %61, align 16
  %1351 = icmp eq %"class.blink::xpath::Expression"* %1350, null
  br i1 %1351, label %1882, label %1856

1352:                                             ; preds = %296
  %1353 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_5xpath10ExpressionEEELj0EEEEEPhm(i64 16) #18
  %1354 = bitcast i8* %1353 to %"class.blink::HeapVector"*
  %1355 = getelementptr inbounds i8, i8* %1353, i64 -4
  %1356 = bitcast i8* %1355 to i16*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1353, i8 0, i64 16, i1 false) #18
  %1357 = load atomic i16, i16* %1356 monotonic, align 2
  %1358 = or i16 %1357, 1
  store atomic i16 %1358, i16* %1356 release, align 2
  call void @_ZN5blink14PersistentBaseINS_10HeapVectorINS_6MemberINS_5xpath10ExpressionEEELj0EEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS6_(%"class.blink::PersistentBase"* %65, %"class.blink::HeapVector"* %1354) #18
  %1359 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %66, align 16
  %1360 = load i64, i64* %44, align 8
  %1361 = load i64, i64* %45, align 8
  %1362 = sub i64 %1360, %1361
  %1363 = ashr exact i64 %1362, 5
  %1364 = add nsw i64 %1363, -1
  %1365 = inttoptr i64 %1361 to %"struct.xpathyy::YyParser::stack_symbol_type"*
  %1366 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %1365, i64 %1364, i32 0, i32 1
  %1367 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1359, i64 0, i32 0, i32 0, i32 0, i32 2
  %1368 = load i32, i32* %1367, align 4
  %1369 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1359, i64 0, i32 0, i32 0, i32 0, i32 1
  %1370 = load i32, i32* %1369, align 8
  %1371 = icmp eq i32 %1368, %1370
  br i1 %1371, label %1388, label %1372, !prof !2

1372:                                             ; preds = %1352
  %1373 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1359, i64 0, i32 0, i32 0, i32 0, i32 0
  %1374 = load %"class.blink::Member"*, %"class.blink::Member"** %1373, align 8
  %1375 = zext i32 %1368 to i64
  %1376 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1374, i64 %1375
  %1377 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1366 to i64*
  %1378 = load i64, i64* %1377, align 8
  %1379 = bitcast %"class.blink::Member"* %1376 to i64*
  store atomic i64 %1378, i64* %1379 monotonic, align 8
  %1380 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1381 = icmp eq i32 %1380, 0
  br i1 %1381, label %1385, label %1382

1382:                                             ; preds = %1372
  %1383 = inttoptr i64 %1378 to i8*
  %1384 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1383) #18
  br label %1385

1385:                                             ; preds = %1382, %1372
  %1386 = load i32, i32* %1367, align 4
  %1387 = add i32 %1386, 1
  store i32 %1387, i32* %1367, align 4
  br label %1856

1388:                                             ; preds = %1352
  %1389 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1366 to %"class.blink::Persistent.212"*
  %1390 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1359, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRNS1_10PersistentIS4_EEEEvOT_(%"class.WTF::Vector"* %1390, %"class.blink::Persistent.212"* dereferenceable(16) %1389) #18
  br label %1856

1391:                                             ; preds = %296
  %1392 = add nsw i64 %252, -3
  %1393 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1392, i32 0, i32 1
  %1394 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1393 to %"class.blink::HeapVector"**
  %1395 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %1394, align 8
  call void @_ZN5blink14PersistentBaseINS_10HeapVectorINS_6MemberINS_5xpath10ExpressionEEELj0EEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS6_(%"class.blink::PersistentBase"* %65, %"class.blink::HeapVector"* %1395) #18
  %1396 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %66, align 16
  %1397 = load i64, i64* %44, align 8
  %1398 = load i64, i64* %45, align 8
  %1399 = sub i64 %1397, %1398
  %1400 = ashr exact i64 %1399, 5
  %1401 = add nsw i64 %1400, -1
  %1402 = inttoptr i64 %1398 to %"struct.xpathyy::YyParser::stack_symbol_type"*
  %1403 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %1402, i64 %1401, i32 0, i32 1
  %1404 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1396, i64 0, i32 0, i32 0, i32 0, i32 2
  %1405 = load i32, i32* %1404, align 4
  %1406 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1396, i64 0, i32 0, i32 0, i32 0, i32 1
  %1407 = load i32, i32* %1406, align 8
  %1408 = icmp eq i32 %1405, %1407
  br i1 %1408, label %1425, label %1409, !prof !2

1409:                                             ; preds = %1391
  %1410 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1396, i64 0, i32 0, i32 0, i32 0, i32 0
  %1411 = load %"class.blink::Member"*, %"class.blink::Member"** %1410, align 8
  %1412 = zext i32 %1405 to i64
  %1413 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1411, i64 %1412
  %1414 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1403 to i64*
  %1415 = load i64, i64* %1414, align 8
  %1416 = bitcast %"class.blink::Member"* %1413 to i64*
  store atomic i64 %1415, i64* %1416 monotonic, align 8
  %1417 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1418 = icmp eq i32 %1417, 0
  br i1 %1418, label %1422, label %1419

1419:                                             ; preds = %1409
  %1420 = inttoptr i64 %1415 to i8*
  %1421 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1420) #18
  br label %1422

1422:                                             ; preds = %1419, %1409
  %1423 = load i32, i32* %1404, align 4
  %1424 = add i32 %1423, 1
  store i32 %1424, i32* %1404, align 4
  br label %1856

1425:                                             ; preds = %1391
  %1426 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1403 to %"class.blink::Persistent.212"*
  %1427 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1396, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRNS1_10PersistentIS4_EEEEvOT_(%"class.WTF::Vector"* %1427, %"class.blink::Persistent.212"* dereferenceable(16) %1426) #18
  br label %1856

1428:                                             ; preds = %296
  %1429 = add nsw i64 %252, -1
  %1430 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1429, i32 0, i32 1
  %1431 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1430 to %"class.blink::xpath::Expression"**
  %1432 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1431, align 8
  call void @_ZN5blink14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.213"* %60, %"class.blink::xpath::Expression"* %1432) #18
  br label %1856

1433:                                             ; preds = %296
  %1434 = add nsw i64 %252, -1
  %1435 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1434, i32 0, i32 1
  %1436 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1435 to %"class.blink::xpath::Expression"**
  %1437 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1436, align 8
  call void @_ZN5blink14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.213"* %60, %"class.blink::xpath::Expression"* %1437) #18
  br label %1856

1438:                                             ; preds = %296
  %1439 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 32) #18
  call void @llvm.memset.p0i8.i64(i8* align 8 %1439, i8 0, i64 32, i1 false) #18
  %1440 = bitcast i8* %1439 to %"class.blink::xpath::Expression"*
  call void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"* %1440) #18
  %1441 = bitcast i8* %1439 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath5UnionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1441, align 8
  %1442 = getelementptr inbounds i8, i8* %1439, i64 -4
  %1443 = bitcast i8* %1442 to i16*
  %1444 = load atomic i16, i16* %1443 monotonic, align 2
  %1445 = or i16 %1444, 1
  store atomic i16 %1445, i16* %1443 release, align 2
  call void @_ZN5blink14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.213"* %60, %"class.blink::xpath::Expression"* %1440) #18
  %1446 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %61, align 16
  %1447 = load i64, i64* %44, align 8
  %1448 = load i64, i64* %45, align 8
  %1449 = sub i64 %1447, %1448
  %1450 = ashr exact i64 %1449, 5
  %1451 = add nsw i64 %1450, -3
  %1452 = inttoptr i64 %1448 to %"struct.xpathyy::YyParser::stack_symbol_type"*
  %1453 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %1452, i64 %1451, i32 0, i32 1
  %1454 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1453 to %"class.blink::xpath::Expression"**
  %1455 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1454, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63)
  store %"class.blink::xpath::Expression"* %1455, %"class.blink::xpath::Expression"** %8, align 8
  %1456 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %1455, i64 0, i32 2
  %1457 = load i8, i8* %1456, align 8, !range !3
  %1458 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %1446, i64 0, i32 2
  %1459 = load i8, i8* %1458, align 8, !range !3
  %1460 = or i8 %1459, %1457
  store i8 %1460, i8* %1458, align 8
  %1461 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %1455, i64 0, i32 3
  %1462 = load i8, i8* %1461, align 1, !range !3
  %1463 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %1446, i64 0, i32 3
  %1464 = load i8, i8* %1463, align 1, !range !3
  %1465 = or i8 %1464, %1462
  store i8 %1465, i8* %1463, align 1
  %1466 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %1455, i64 0, i32 4
  %1467 = load i8, i8* %1466, align 2, !range !3
  %1468 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %1446, i64 0, i32 4
  %1469 = load i8, i8* %1468, align 2, !range !3
  %1470 = or i8 %1469, %1467
  store i8 %1470, i8* %1468, align 2
  %1471 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %1446, i64 0, i32 1, i32 0
  %1472 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %1446, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %1473 = load i32, i32* %1472, align 4
  %1474 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %1446, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %1475 = load i32, i32* %1474, align 8
  %1476 = icmp eq i32 %1473, %1475
  br i1 %1476, label %1492, label %1477, !prof !2

1477:                                             ; preds = %1438
  %1478 = ptrtoint %"class.blink::xpath::Expression"* %1455 to i64
  %1479 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1471, i64 0, i32 0, i32 0, i32 0
  %1480 = load %"class.blink::Member"*, %"class.blink::Member"** %1479, align 8
  %1481 = zext i32 %1473 to i64
  %1482 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1480, i64 %1481
  %1483 = bitcast %"class.blink::Member"* %1482 to i64*
  store atomic i64 %1478, i64* %1483 monotonic, align 8
  %1484 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1485 = icmp eq i32 %1484, 0
  br i1 %1485, label %1489, label %1486

1486:                                             ; preds = %1477
  %1487 = bitcast %"class.blink::xpath::Expression"* %1455 to i8*
  %1488 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1487) #18
  br label %1489

1489:                                             ; preds = %1486, %1477
  %1490 = load i32, i32* %1472, align 4
  %1491 = add i32 %1490, 1
  store i32 %1491, i32* %1472, align 4
  br label %1493

1492:                                             ; preds = %1438
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS4_EEvOT_(%"class.WTF::Vector"* %1471, %"class.blink::xpath::Expression"** nonnull dereferenceable(8) %8) #18
  br label %1493

1493:                                             ; preds = %1489, %1492
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63)
  %1494 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %61, align 16
  %1495 = load i64, i64* %44, align 8
  %1496 = load i64, i64* %45, align 8
  %1497 = sub i64 %1495, %1496
  %1498 = ashr exact i64 %1497, 5
  %1499 = add nsw i64 %1498, -1
  %1500 = inttoptr i64 %1496 to %"struct.xpathyy::YyParser::stack_symbol_type"*
  %1501 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %1500, i64 %1499, i32 0, i32 1
  %1502 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1501 to %"class.blink::xpath::Expression"**
  %1503 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1502, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64)
  store %"class.blink::xpath::Expression"* %1503, %"class.blink::xpath::Expression"** %9, align 8
  %1504 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %1503, i64 0, i32 2
  %1505 = load i8, i8* %1504, align 8, !range !3
  %1506 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %1494, i64 0, i32 2
  %1507 = load i8, i8* %1506, align 8, !range !3
  %1508 = or i8 %1507, %1505
  store i8 %1508, i8* %1506, align 8
  %1509 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %1503, i64 0, i32 3
  %1510 = load i8, i8* %1509, align 1, !range !3
  %1511 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %1494, i64 0, i32 3
  %1512 = load i8, i8* %1511, align 1, !range !3
  %1513 = or i8 %1512, %1510
  store i8 %1513, i8* %1511, align 1
  %1514 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %1503, i64 0, i32 4
  %1515 = load i8, i8* %1514, align 2, !range !3
  %1516 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %1494, i64 0, i32 4
  %1517 = load i8, i8* %1516, align 2, !range !3
  %1518 = or i8 %1517, %1515
  store i8 %1518, i8* %1516, align 2
  %1519 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %1494, i64 0, i32 1, i32 0
  %1520 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %1494, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %1521 = load i32, i32* %1520, align 4
  %1522 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %1494, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %1523 = load i32, i32* %1522, align 8
  %1524 = icmp eq i32 %1521, %1523
  br i1 %1524, label %1540, label %1525, !prof !2

1525:                                             ; preds = %1493
  %1526 = ptrtoint %"class.blink::xpath::Expression"* %1503 to i64
  %1527 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1519, i64 0, i32 0, i32 0, i32 0
  %1528 = load %"class.blink::Member"*, %"class.blink::Member"** %1527, align 8
  %1529 = zext i32 %1521 to i64
  %1530 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1528, i64 %1529
  %1531 = bitcast %"class.blink::Member"* %1530 to i64*
  store atomic i64 %1526, i64* %1531 monotonic, align 8
  %1532 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1533 = icmp eq i32 %1532, 0
  br i1 %1533, label %1537, label %1534

1534:                                             ; preds = %1525
  %1535 = bitcast %"class.blink::xpath::Expression"* %1503 to i8*
  %1536 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1535) #18
  br label %1537

1537:                                             ; preds = %1534, %1525
  %1538 = load i32, i32* %1520, align 4
  %1539 = add i32 %1538, 1
  store i32 %1539, i32* %1520, align 4
  br label %1541

1540:                                             ; preds = %1493
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS4_EEvOT_(%"class.WTF::Vector"* %1519, %"class.blink::xpath::Expression"** nonnull dereferenceable(8) %9) #18
  br label %1541

1541:                                             ; preds = %1537, %1540
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64)
  br label %1856

1542:                                             ; preds = %296
  %1543 = add nsw i64 %252, -1
  %1544 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1543, i32 0, i32 1
  %1545 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1544 to %"class.blink::xpath::Expression"**
  %1546 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1545, align 8
  call void @_ZN5blink14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.213"* %60, %"class.blink::xpath::Expression"* %1546) #18
  br label %1856

1547:                                             ; preds = %296
  %1548 = add nsw i64 %252, -1
  %1549 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1548, i32 0, i32 1
  %1550 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1549 to %"class.blink::xpath::Expression"**
  %1551 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1550, align 8
  call void @_ZN5blink14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.213"* %60, %"class.blink::xpath::Expression"* %1551) #18
  br label %1856

1552:                                             ; preds = %296
  %1553 = add nsw i64 %252, -1
  %1554 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1553, i32 0, i32 1
  %1555 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1554 to %"class.blink::xpath::LocationPath"**
  %1556 = load %"class.blink::xpath::LocationPath"*, %"class.blink::xpath::LocationPath"** %1555, align 8
  %1557 = getelementptr inbounds %"class.blink::xpath::LocationPath", %"class.blink::xpath::LocationPath"* %1556, i64 0, i32 3
  store i8 1, i8* %1557, align 8
  %1558 = getelementptr inbounds %"class.blink::xpath::LocationPath", %"class.blink::xpath::LocationPath"* %1556, i64 0, i32 0, i32 2
  store i8 0, i8* %1558, align 8
  %1559 = load i64, i64* %44, align 8
  %1560 = load i64, i64* %45, align 8
  %1561 = sub i64 %1559, %1560
  %1562 = ashr exact i64 %1561, 5
  %1563 = add nsw i64 %1562, -3
  %1564 = inttoptr i64 %1560 to %"struct.xpathyy::YyParser::stack_symbol_type"*
  %1565 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %1564, i64 %1563, i32 0, i32 1
  %1566 = add nsw i64 %1562, -1
  %1567 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %1564, i64 %1566, i32 0, i32 1
  %1568 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 48) #18
  %1569 = bitcast i8* %1568 to %"class.blink::xpath::Path"*
  %1570 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1565 to %"class.blink::xpath::Expression"**
  %1571 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1570, align 8
  %1572 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1567 to %"class.blink::xpath::LocationPath"**
  %1573 = load %"class.blink::xpath::LocationPath"*, %"class.blink::xpath::LocationPath"** %1572, align 8
  call void @_ZN5blink5xpath4PathC1EPNS0_10ExpressionEPNS0_12LocationPathE(%"class.blink::xpath::Path"* %1569, %"class.blink::xpath::Expression"* %1571, %"class.blink::xpath::LocationPath"* %1573) #18
  %1574 = getelementptr inbounds i8, i8* %1568, i64 -4
  %1575 = bitcast i8* %1574 to i16*
  %1576 = load atomic i16, i16* %1575 monotonic, align 2
  %1577 = or i16 %1576, 1
  store atomic i16 %1577, i16* %1575 release, align 2
  %1578 = bitcast i8* %1568 to %"class.blink::xpath::Expression"*
  call void @_ZN5blink14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.213"* %60, %"class.blink::xpath::Expression"* %1578) #18
  br label %1856

1579:                                             ; preds = %296
  %1580 = add nsw i64 %252, -1
  %1581 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1580, i32 0, i32 1
  %1582 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1581 to %"class.blink::xpath::LocationPath"**
  %1583 = load %"class.blink::xpath::LocationPath"*, %"class.blink::xpath::LocationPath"** %1582, align 8
  %1584 = add nsw i64 %252, -2
  %1585 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1584, i32 0, i32 1
  %1586 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1585 to %"class.blink::xpath::Step"**
  %1587 = load %"class.blink::xpath::Step"*, %"class.blink::xpath::Step"** %1586, align 8
  call void @_ZN5blink5xpath12LocationPath15InsertFirstStepEPNS0_4StepE(%"class.blink::xpath::LocationPath"* %1583, %"class.blink::xpath::Step"* %1587) #18
  %1588 = load i64, i64* %44, align 8
  %1589 = load i64, i64* %45, align 8
  %1590 = sub i64 %1588, %1589
  %1591 = ashr exact i64 %1590, 5
  %1592 = add nsw i64 %1591, -1
  %1593 = inttoptr i64 %1589 to %"struct.xpathyy::YyParser::stack_symbol_type"*
  %1594 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %1593, i64 %1592, i32 0, i32 1
  %1595 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1594 to %"class.blink::xpath::LocationPath"**
  %1596 = load %"class.blink::xpath::LocationPath"*, %"class.blink::xpath::LocationPath"** %1595, align 8
  %1597 = getelementptr inbounds %"class.blink::xpath::LocationPath", %"class.blink::xpath::LocationPath"* %1596, i64 0, i32 3
  store i8 1, i8* %1597, align 8
  %1598 = getelementptr inbounds %"class.blink::xpath::LocationPath", %"class.blink::xpath::LocationPath"* %1596, i64 0, i32 0, i32 2
  store i8 0, i8* %1598, align 8
  %1599 = load i64, i64* %44, align 8
  %1600 = load i64, i64* %45, align 8
  %1601 = sub i64 %1599, %1600
  %1602 = ashr exact i64 %1601, 5
  %1603 = add nsw i64 %1602, -3
  %1604 = inttoptr i64 %1600 to %"struct.xpathyy::YyParser::stack_symbol_type"*
  %1605 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %1604, i64 %1603, i32 0, i32 1
  %1606 = add nsw i64 %1602, -1
  %1607 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %1604, i64 %1606, i32 0, i32 1
  %1608 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 48) #18
  %1609 = bitcast i8* %1608 to %"class.blink::xpath::Path"*
  %1610 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1605 to %"class.blink::xpath::Expression"**
  %1611 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1610, align 8
  %1612 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1607 to %"class.blink::xpath::LocationPath"**
  %1613 = load %"class.blink::xpath::LocationPath"*, %"class.blink::xpath::LocationPath"** %1612, align 8
  call void @_ZN5blink5xpath4PathC1EPNS0_10ExpressionEPNS0_12LocationPathE(%"class.blink::xpath::Path"* %1609, %"class.blink::xpath::Expression"* %1611, %"class.blink::xpath::LocationPath"* %1613) #18
  %1614 = getelementptr inbounds i8, i8* %1608, i64 -4
  %1615 = bitcast i8* %1614 to i16*
  %1616 = load atomic i16, i16* %1615 monotonic, align 2
  %1617 = or i16 %1616, 1
  store atomic i16 %1617, i16* %1615 release, align 2
  %1618 = bitcast i8* %1608 to %"class.blink::xpath::Expression"*
  call void @_ZN5blink14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.213"* %60, %"class.blink::xpath::Expression"* %1618) #18
  br label %1856

1619:                                             ; preds = %296
  %1620 = add nsw i64 %252, -1
  %1621 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1620, i32 0, i32 1
  %1622 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1621 to %"class.blink::xpath::Expression"**
  %1623 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1622, align 8
  call void @_ZN5blink14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.213"* %60, %"class.blink::xpath::Expression"* %1623) #18
  br label %1856

1624:                                             ; preds = %296
  %1625 = add nsw i64 %252, -2
  %1626 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1625, i32 0, i32 1
  %1627 = add nsw i64 %252, -1
  %1628 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1627, i32 0, i32 1
  %1629 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1628 to %"class.blink::HeapVector.201"**
  %1630 = load %"class.blink::HeapVector.201"*, %"class.blink::HeapVector.201"** %1629, align 8
  %1631 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 56) #18
  %1632 = bitcast i8* %1631 to %"class.blink::xpath::Filter"*
  %1633 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1626 to %"class.blink::xpath::Expression"**
  %1634 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1633, align 8
  call void @_ZN5blink5xpath6FilterC1EPNS0_10ExpressionERNS_10HeapVectorINS_6MemberINS0_9PredicateEEELj0EEE(%"class.blink::xpath::Filter"* %1632, %"class.blink::xpath::Expression"* %1634, %"class.blink::HeapVector.201"* dereferenceable(16) %1630) #18
  %1635 = getelementptr inbounds i8, i8* %1631, i64 -4
  %1636 = bitcast i8* %1635 to i16*
  %1637 = load atomic i16, i16* %1636 monotonic, align 2
  %1638 = or i16 %1637, 1
  store atomic i16 %1638, i16* %1636 release, align 2
  %1639 = bitcast i8* %1631 to %"class.blink::xpath::Expression"*
  call void @_ZN5blink14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.213"* %60, %"class.blink::xpath::Expression"* %1639) #18
  br label %1856

1640:                                             ; preds = %296
  %1641 = add nsw i64 %252, -1
  %1642 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1641, i32 0, i32 1
  %1643 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1642 to %"class.blink::xpath::Expression"**
  %1644 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1643, align 8
  call void @_ZN5blink14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.213"* %60, %"class.blink::xpath::Expression"* %1644) #18
  br label %1856

1645:                                             ; preds = %296
  %1646 = add nsw i64 %252, -3
  %1647 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1646, i32 0, i32 1
  %1648 = add nsw i64 %252, -1
  %1649 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1648, i32 0, i32 1
  %1650 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 32) #18
  %1651 = bitcast i8* %1650 to %"class.blink::xpath::LogicalOp"*
  %1652 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1647 to %"class.blink::xpath::Expression"**
  %1653 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1652, align 8
  %1654 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1649 to %"class.blink::xpath::Expression"**
  %1655 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1654, align 8
  call void @_ZN5blink5xpath9LogicalOpC1ENS1_6OpcodeEPNS0_10ExpressionES4_(%"class.blink::xpath::LogicalOp"* %1651, i32 1, %"class.blink::xpath::Expression"* %1653, %"class.blink::xpath::Expression"* %1655) #18
  %1656 = getelementptr inbounds i8, i8* %1650, i64 -4
  %1657 = bitcast i8* %1656 to i16*
  %1658 = load atomic i16, i16* %1657 monotonic, align 2
  %1659 = or i16 %1658, 1
  store atomic i16 %1659, i16* %1657 release, align 2
  %1660 = bitcast i8* %1650 to %"class.blink::xpath::Expression"*
  call void @_ZN5blink14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.213"* %60, %"class.blink::xpath::Expression"* %1660) #18
  br label %1856

1661:                                             ; preds = %296
  %1662 = add nsw i64 %252, -1
  %1663 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1662, i32 0, i32 1
  %1664 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1663 to %"class.blink::xpath::Expression"**
  %1665 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1664, align 8
  call void @_ZN5blink14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.213"* %60, %"class.blink::xpath::Expression"* %1665) #18
  br label %1856

1666:                                             ; preds = %296
  %1667 = add nsw i64 %252, -3
  %1668 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1667, i32 0, i32 1
  %1669 = add nsw i64 %252, -1
  %1670 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1669, i32 0, i32 1
  %1671 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 32) #18
  %1672 = bitcast i8* %1671 to %"class.blink::xpath::LogicalOp"*
  %1673 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1668 to %"class.blink::xpath::Expression"**
  %1674 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1673, align 8
  %1675 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1670 to %"class.blink::xpath::Expression"**
  %1676 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1675, align 8
  call void @_ZN5blink5xpath9LogicalOpC1ENS1_6OpcodeEPNS0_10ExpressionES4_(%"class.blink::xpath::LogicalOp"* %1672, i32 0, %"class.blink::xpath::Expression"* %1674, %"class.blink::xpath::Expression"* %1676) #18
  %1677 = getelementptr inbounds i8, i8* %1671, i64 -4
  %1678 = bitcast i8* %1677 to i16*
  %1679 = load atomic i16, i16* %1678 monotonic, align 2
  %1680 = or i16 %1679, 1
  store atomic i16 %1680, i16* %1678 release, align 2
  %1681 = bitcast i8* %1671 to %"class.blink::xpath::Expression"*
  call void @_ZN5blink14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.213"* %60, %"class.blink::xpath::Expression"* %1681) #18
  br label %1856

1682:                                             ; preds = %296
  %1683 = add nsw i64 %252, -1
  %1684 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1683, i32 0, i32 1
  %1685 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1684 to %"class.blink::xpath::Expression"**
  %1686 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1685, align 8
  call void @_ZN5blink14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.213"* %60, %"class.blink::xpath::Expression"* %1686) #18
  br label %1856

1687:                                             ; preds = %296
  %1688 = add nsw i64 %252, -2
  %1689 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1688, i32 0, i32 1
  %1690 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1689 to i32*
  %1691 = add nsw i64 %252, -3
  %1692 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1691, i32 0, i32 1
  %1693 = add nsw i64 %252, -1
  %1694 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1693, i32 0, i32 1
  %1695 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 32) #18
  %1696 = bitcast i8* %1695 to %"class.blink::xpath::EqTestOp"*
  %1697 = load i32, i32* %1690, align 4
  %1698 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1692 to %"class.blink::xpath::Expression"**
  %1699 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1698, align 8
  %1700 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1694 to %"class.blink::xpath::Expression"**
  %1701 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1700, align 8
  call void @_ZN5blink5xpath8EqTestOpC1ENS1_6OpcodeEPNS0_10ExpressionES4_(%"class.blink::xpath::EqTestOp"* %1696, i32 %1697, %"class.blink::xpath::Expression"* %1699, %"class.blink::xpath::Expression"* %1701) #18
  %1702 = getelementptr inbounds i8, i8* %1695, i64 -4
  %1703 = bitcast i8* %1702 to i16*
  %1704 = load atomic i16, i16* %1703 monotonic, align 2
  %1705 = or i16 %1704, 1
  store atomic i16 %1705, i16* %1703 release, align 2
  %1706 = bitcast i8* %1695 to %"class.blink::xpath::Expression"*
  call void @_ZN5blink14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.213"* %60, %"class.blink::xpath::Expression"* %1706) #18
  br label %1856

1707:                                             ; preds = %296
  %1708 = add nsw i64 %252, -1
  %1709 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1708, i32 0, i32 1
  %1710 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1709 to %"class.blink::xpath::Expression"**
  %1711 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1710, align 8
  call void @_ZN5blink14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.213"* %60, %"class.blink::xpath::Expression"* %1711) #18
  br label %1856

1712:                                             ; preds = %296
  %1713 = add nsw i64 %252, -2
  %1714 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1713, i32 0, i32 1
  %1715 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1714 to i32*
  %1716 = add nsw i64 %252, -3
  %1717 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1716, i32 0, i32 1
  %1718 = add nsw i64 %252, -1
  %1719 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1718, i32 0, i32 1
  %1720 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 32) #18
  %1721 = bitcast i8* %1720 to %"class.blink::xpath::EqTestOp"*
  %1722 = load i32, i32* %1715, align 4
  %1723 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1717 to %"class.blink::xpath::Expression"**
  %1724 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1723, align 8
  %1725 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1719 to %"class.blink::xpath::Expression"**
  %1726 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1725, align 8
  call void @_ZN5blink5xpath8EqTestOpC1ENS1_6OpcodeEPNS0_10ExpressionES4_(%"class.blink::xpath::EqTestOp"* %1721, i32 %1722, %"class.blink::xpath::Expression"* %1724, %"class.blink::xpath::Expression"* %1726) #18
  %1727 = getelementptr inbounds i8, i8* %1720, i64 -4
  %1728 = bitcast i8* %1727 to i16*
  %1729 = load atomic i16, i16* %1728 monotonic, align 2
  %1730 = or i16 %1729, 1
  store atomic i16 %1730, i16* %1728 release, align 2
  %1731 = bitcast i8* %1720 to %"class.blink::xpath::Expression"*
  call void @_ZN5blink14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.213"* %60, %"class.blink::xpath::Expression"* %1731) #18
  br label %1856

1732:                                             ; preds = %296
  %1733 = add nsw i64 %252, -1
  %1734 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1733, i32 0, i32 1
  %1735 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1734 to %"class.blink::xpath::Expression"**
  %1736 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1735, align 8
  call void @_ZN5blink14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.213"* %60, %"class.blink::xpath::Expression"* %1736) #18
  br label %1856

1737:                                             ; preds = %296
  %1738 = add nsw i64 %252, -3
  %1739 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1738, i32 0, i32 1
  %1740 = add nsw i64 %252, -1
  %1741 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1740, i32 0, i32 1
  %1742 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 32) #18
  %1743 = bitcast i8* %1742 to %"class.blink::xpath::NumericOp"*
  %1744 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1739 to %"class.blink::xpath::Expression"**
  %1745 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1744, align 8
  %1746 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1741 to %"class.blink::xpath::Expression"**
  %1747 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1746, align 8
  call void @_ZN5blink5xpath9NumericOpC1ENS1_6OpcodeEPNS0_10ExpressionES4_(%"class.blink::xpath::NumericOp"* %1743, i32 0, %"class.blink::xpath::Expression"* %1745, %"class.blink::xpath::Expression"* %1747) #18
  %1748 = getelementptr inbounds i8, i8* %1742, i64 -4
  %1749 = bitcast i8* %1748 to i16*
  %1750 = load atomic i16, i16* %1749 monotonic, align 2
  %1751 = or i16 %1750, 1
  store atomic i16 %1751, i16* %1749 release, align 2
  %1752 = bitcast i8* %1742 to %"class.blink::xpath::Expression"*
  call void @_ZN5blink14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.213"* %60, %"class.blink::xpath::Expression"* %1752) #18
  br label %1856

1753:                                             ; preds = %296
  %1754 = add nsw i64 %252, -3
  %1755 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1754, i32 0, i32 1
  %1756 = add nsw i64 %252, -1
  %1757 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1756, i32 0, i32 1
  %1758 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 32) #18
  %1759 = bitcast i8* %1758 to %"class.blink::xpath::NumericOp"*
  %1760 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1755 to %"class.blink::xpath::Expression"**
  %1761 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1760, align 8
  %1762 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1757 to %"class.blink::xpath::Expression"**
  %1763 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1762, align 8
  call void @_ZN5blink5xpath9NumericOpC1ENS1_6OpcodeEPNS0_10ExpressionES4_(%"class.blink::xpath::NumericOp"* %1759, i32 1, %"class.blink::xpath::Expression"* %1761, %"class.blink::xpath::Expression"* %1763) #18
  %1764 = getelementptr inbounds i8, i8* %1758, i64 -4
  %1765 = bitcast i8* %1764 to i16*
  %1766 = load atomic i16, i16* %1765 monotonic, align 2
  %1767 = or i16 %1766, 1
  store atomic i16 %1767, i16* %1765 release, align 2
  %1768 = bitcast i8* %1758 to %"class.blink::xpath::Expression"*
  call void @_ZN5blink14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.213"* %60, %"class.blink::xpath::Expression"* %1768) #18
  br label %1856

1769:                                             ; preds = %296
  %1770 = add nsw i64 %252, -1
  %1771 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1770, i32 0, i32 1
  %1772 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1771 to %"class.blink::xpath::Expression"**
  %1773 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1772, align 8
  call void @_ZN5blink14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.213"* %60, %"class.blink::xpath::Expression"* %1773) #18
  br label %1856

1774:                                             ; preds = %296
  %1775 = add nsw i64 %252, -2
  %1776 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1775, i32 0, i32 1
  %1777 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1776 to i32*
  %1778 = add nsw i64 %252, -3
  %1779 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1778, i32 0, i32 1
  %1780 = add nsw i64 %252, -1
  %1781 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1780, i32 0, i32 1
  %1782 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 32) #18
  %1783 = bitcast i8* %1782 to %"class.blink::xpath::NumericOp"*
  %1784 = load i32, i32* %1777, align 4
  %1785 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1779 to %"class.blink::xpath::Expression"**
  %1786 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1785, align 8
  %1787 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1781 to %"class.blink::xpath::Expression"**
  %1788 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1787, align 8
  call void @_ZN5blink5xpath9NumericOpC1ENS1_6OpcodeEPNS0_10ExpressionES4_(%"class.blink::xpath::NumericOp"* %1783, i32 %1784, %"class.blink::xpath::Expression"* %1786, %"class.blink::xpath::Expression"* %1788) #18
  %1789 = getelementptr inbounds i8, i8* %1782, i64 -4
  %1790 = bitcast i8* %1789 to i16*
  %1791 = load atomic i16, i16* %1790 monotonic, align 2
  %1792 = or i16 %1791, 1
  store atomic i16 %1792, i16* %1790 release, align 2
  %1793 = bitcast i8* %1782 to %"class.blink::xpath::Expression"*
  call void @_ZN5blink14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.213"* %60, %"class.blink::xpath::Expression"* %1793) #18
  br label %1856

1794:                                             ; preds = %296
  %1795 = add nsw i64 %252, -1
  %1796 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %251, i64 %1795, i32 0, i32 1
  %1797 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1796 to %"class.blink::xpath::Expression"**
  %1798 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1797, align 8
  call void @_ZN5blink14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.213"* %60, %"class.blink::xpath::Expression"* %1798) #18
  br label %1856

1799:                                             ; preds = %296
  %1800 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 32) #18
  call void @llvm.memset.p0i8.i64(i8* align 8 %1800, i8 0, i64 32, i1 false) #18
  %1801 = bitcast i8* %1800 to %"class.blink::xpath::Expression"*
  call void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"* %1801) #18
  %1802 = bitcast i8* %1800 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath8NegativeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1802, align 8
  %1803 = getelementptr inbounds i8, i8* %1800, i64 -4
  %1804 = bitcast i8* %1803 to i16*
  %1805 = load atomic i16, i16* %1804 monotonic, align 2
  %1806 = or i16 %1805, 1
  store atomic i16 %1806, i16* %1804 release, align 2
  call void @_ZN5blink14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.213"* %60, %"class.blink::xpath::Expression"* %1801) #18
  %1807 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %61, align 16
  %1808 = load i64, i64* %44, align 8
  %1809 = load i64, i64* %45, align 8
  %1810 = sub i64 %1808, %1809
  %1811 = ashr exact i64 %1810, 5
  %1812 = add nsw i64 %1811, -1
  %1813 = inttoptr i64 %1809 to %"struct.xpathyy::YyParser::stack_symbol_type"*
  %1814 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %1813, i64 %1812, i32 0, i32 1
  %1815 = bitcast %"class.xpathyy::YyParser::semantic_type"* %1814 to %"class.blink::xpath::Expression"**
  %1816 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %1815, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62)
  store %"class.blink::xpath::Expression"* %1816, %"class.blink::xpath::Expression"** %10, align 8
  %1817 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %1816, i64 0, i32 2
  %1818 = load i8, i8* %1817, align 8, !range !3
  %1819 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %1807, i64 0, i32 2
  %1820 = load i8, i8* %1819, align 8, !range !3
  %1821 = or i8 %1820, %1818
  store i8 %1821, i8* %1819, align 8
  %1822 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %1816, i64 0, i32 3
  %1823 = load i8, i8* %1822, align 1, !range !3
  %1824 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %1807, i64 0, i32 3
  %1825 = load i8, i8* %1824, align 1, !range !3
  %1826 = or i8 %1825, %1823
  store i8 %1826, i8* %1824, align 1
  %1827 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %1816, i64 0, i32 4
  %1828 = load i8, i8* %1827, align 2, !range !3
  %1829 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %1807, i64 0, i32 4
  %1830 = load i8, i8* %1829, align 2, !range !3
  %1831 = or i8 %1830, %1828
  store i8 %1831, i8* %1829, align 2
  %1832 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %1807, i64 0, i32 1, i32 0
  %1833 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %1807, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %1834 = load i32, i32* %1833, align 4
  %1835 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %1807, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %1836 = load i32, i32* %1835, align 8
  %1837 = icmp eq i32 %1834, %1836
  br i1 %1837, label %1853, label %1838, !prof !2

1838:                                             ; preds = %1799
  %1839 = ptrtoint %"class.blink::xpath::Expression"* %1816 to i64
  %1840 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1832, i64 0, i32 0, i32 0, i32 0
  %1841 = load %"class.blink::Member"*, %"class.blink::Member"** %1840, align 8
  %1842 = zext i32 %1834 to i64
  %1843 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1841, i64 %1842
  %1844 = bitcast %"class.blink::Member"* %1843 to i64*
  store atomic i64 %1839, i64* %1844 monotonic, align 8
  %1845 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1846 = icmp eq i32 %1845, 0
  br i1 %1846, label %1850, label %1847

1847:                                             ; preds = %1838
  %1848 = bitcast %"class.blink::xpath::Expression"* %1816 to i8*
  %1849 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1848) #18
  br label %1850

1850:                                             ; preds = %1847, %1838
  %1851 = load i32, i32* %1833, align 4
  %1852 = add i32 %1851, 1
  store i32 %1852, i32* %1833, align 4
  br label %1854

1853:                                             ; preds = %1799
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS4_EEvOT_(%"class.WTF::Vector"* %1832, %"class.blink::xpath::Expression"** nonnull dereferenceable(8) %10) #18
  br label %1854

1854:                                             ; preds = %1850, %1853
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62)
  br label %1856

1855:                                             ; preds = %296
  switch i32 %253, label %1856 [
    i32 21, label %1866
    i32 0, label %1866
  ]

1856:                                             ; preds = %297, %312, %320, %328, %335, %340, %355, %372, %387, %909, %914, %919, %1008, %1073, %1122, %1165, %1166, %1209, %1248, %1287, %1288, %1299, %1304, %1315, %1327, %1428, %1433, %1541, %1542, %1547, %1552, %1579, %1619, %1624, %1640, %1645, %1661, %1666, %1682, %1687, %1707, %1712, %1732, %1737, %1753, %1769, %1774, %1794, %1854, %429, %424, %654, %677, %672, %907, %968, %999, %995, %937, %1050, %1068, %1071, %1385, %1388, %1422, %1425, %1340, %1332, %1855
  %1857 = sext i8 %256 to i64
  %1858 = load %"struct.xpathyy::YyParser::stack_symbol_type"*, %"struct.xpathyy::YyParser::stack_symbol_type"** %35, align 8
  br label %1859

1859:                                             ; preds = %1859, %1856
  %1860 = phi %"struct.xpathyy::YyParser::stack_symbol_type"* [ %1858, %1856 ], [ %1862, %1859 ]
  %1861 = phi i64 [ %1857, %1856 ], [ %1864, %1859 ]
  %1862 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %1860, i64 -1
  %1863 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %1862, i64 0, i32 0
  call void @_ZN7xpathyy8YyParser12basic_symbolINS0_8by_stateEE5clearEv(%"struct.xpathyy::YyParser::basic_symbol"* %1863) #18
  store %"struct.xpathyy::YyParser::stack_symbol_type"* %1862, %"struct.xpathyy::YyParser::stack_symbol_type"** %35, align 8
  %1864 = add nsw i64 %1861, -1
  %1865 = icmp sgt i64 %1864, 0
  br i1 %1865, label %1859, label %1866

1866:                                             ; preds = %1859, %1072, %1855, %1855
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %156) #18
  store i8 0, i8* %156, align 16
  call void @llvm.memset.p0i8.i64(i8* align 16 %158, i8 0, i64 16, i1 false) #18
  %1867 = load %"struct.xpathyy::YyParser::stack_symbol_type"*, %"struct.xpathyy::YyParser::stack_symbol_type"** %35, align 8
  %1868 = load %"struct.xpathyy::YyParser::stack_symbol_type"*, %"struct.xpathyy::YyParser::stack_symbol_type"** %53, align 8
  %1869 = icmp ult %"struct.xpathyy::YyParser::stack_symbol_type"* %1867, %1868
  br i1 %1869, label %1870, label %1873

1870:                                             ; preds = %1866
  call void @_ZN7xpathyy8YyParser17stack_symbol_typeC2EOS1_(%"struct.xpathyy::YyParser::stack_symbol_type"* %1867, %"struct.xpathyy::YyParser::stack_symbol_type"* nonnull dereferenceable(32) %11) #18
  %1871 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %1867, i64 1
  %1872 = ptrtoint %"struct.xpathyy::YyParser::stack_symbol_type"* %1871 to i64
  store i64 %1872, i64* %44, align 8
  br label %1874

1873:                                             ; preds = %1866
  call void @_ZNSt3__16vectorIN7xpathyy8YyParser17stack_symbol_typeENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %54, %"struct.xpathyy::YyParser::stack_symbol_type"* nonnull dereferenceable(32) %11) #18
  br label %1874

1874:                                             ; preds = %1870, %1873
  call void @_ZN7xpathyy8YyParser12basic_symbolINS0_8by_stateEE5clearEv(%"struct.xpathyy::YyParser::basic_symbol"* nonnull %159) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %156) #18
  %1875 = load i64, i64* %44, align 8
  %1876 = load i64, i64* %45, align 8
  %1877 = sub i64 %1875, %1876
  %1878 = ashr exact i64 %1877, 5
  %1879 = add nsw i64 %1878, -1
  %1880 = inttoptr i64 %1876 to %"struct.xpathyy::YyParser::stack_symbol_type"*
  %1881 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %1880, i64 %1879, i32 0
  call void @_ZN7xpathyy8YyParser12basic_symbolINS0_8by_stateEE4moveERS3_(%"struct.xpathyy::YyParser::basic_symbol"* %1881, %"struct.xpathyy::YyParser::basic_symbol"* nonnull dereferenceable(32) %160) #18
  br label %1884

1882:                                             ; preds = %1332, %1340
  %1883 = sext i8 %256 to i32
  call void @_ZN7xpathyy8YyParser12basic_symbolINS0_8by_stateEE5clearEv(%"struct.xpathyy::YyParser::basic_symbol"* nonnull %160) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %55) #18
  br label %1916

1884:                                             ; preds = %654, %907, %1874
  %1885 = phi i32 [ 0, %1874 ], [ %257, %907 ], [ %257, %654 ]
  %1886 = phi i32 [ 0, %1874 ], [ %875, %907 ], [ %622, %654 ]
  call void @_ZN7xpathyy8YyParser12basic_symbolINS0_8by_stateEE5clearEv(%"struct.xpathyy::YyParser::basic_symbol"* nonnull %160) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %55) #18
  switch i32 %1886, label %1949 [
    i32 0, label %161
    i32 11, label %1916
  ]

1887:                                             ; preds = %235
  switch i32 %175, label %1901 [
    i32 0, label %1888
    i32 3, label %1898
  ]

1888:                                             ; preds = %1887
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #18
  %1889 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1889, i8 -86, i64 24, i1 false)
  store i8 12, i8* %50, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %47, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i64 12, i1 false) #18
  store i8 0, i8* %51, align 4
  %1890 = load void (%"class.xpathyy::YyParser"*, %"class.std::__1::basic_string"*)**, void (%"class.xpathyy::YyParser"*, %"class.std::__1::basic_string"*)*** %52, align 8
  %1891 = getelementptr inbounds void (%"class.xpathyy::YyParser"*, %"class.std::__1::basic_string"*)*, void (%"class.xpathyy::YyParser"*, %"class.std::__1::basic_string"*)** %1890, i64 3
  %1892 = load void (%"class.xpathyy::YyParser"*, %"class.std::__1::basic_string"*)*, void (%"class.xpathyy::YyParser"*, %"class.std::__1::basic_string"*)** %1891, align 8
  call void %1892(%"class.xpathyy::YyParser"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %27) #18
  %1893 = load i8, i8* %50, align 1
  %1894 = icmp slt i8 %1893, 0
  br i1 %1894, label %1895, label %1897

1895:                                             ; preds = %1888
  %1896 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %1896) #17
  br label %1897

1897:                                             ; preds = %1895, %1888
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #18
  br label %1901

1898:                                             ; preds = %1887
  %1899 = load i32, i32* %29, align 16
  switch i32 %1899, label %1900 [
    i32 0, label %1916
    i32 -2, label %1901
  ]

1900:                                             ; preds = %1898
  call void @_ZN7xpathyy8YyParser12basic_symbolINS0_7by_kindEE5clearEv(%"struct.xpathyy::YyParser::basic_symbol.12"* nonnull %46)
  br label %1901

1901:                                             ; preds = %1898, %1887, %1897, %1900, %200
  %1902 = load i64, i64* %44, align 8
  %1903 = load i64, i64* %45, align 8
  %1904 = sub i64 %1902, %1903
  %1905 = icmp eq i64 %1904, 32
  br i1 %1905, label %1916, label %1906

1906:                                             ; preds = %1901
  %1907 = inttoptr i64 %1902 to %"struct.xpathyy::YyParser::stack_symbol_type"*
  br label %1908

1908:                                             ; preds = %1906, %1908
  %1909 = phi %"struct.xpathyy::YyParser::stack_symbol_type"* [ %1907, %1906 ], [ %1910, %1908 ]
  %1910 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %1909, i64 -1
  %1911 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %1910, i64 0, i32 0
  call void @_ZN7xpathyy8YyParser12basic_symbolINS0_8by_stateEE5clearEv(%"struct.xpathyy::YyParser::basic_symbol"* %1911) #18
  store %"struct.xpathyy::YyParser::stack_symbol_type"* %1910, %"struct.xpathyy::YyParser::stack_symbol_type"** %35, align 8
  %1912 = ptrtoint %"struct.xpathyy::YyParser::stack_symbol_type"* %1910 to i64
  %1913 = load i64, i64* %45, align 8
  %1914 = sub i64 %1912, %1913
  %1915 = icmp eq i64 %1914, 32
  br i1 %1915, label %1916, label %1908

1916:                                             ; preds = %1884, %161, %222, %1908, %1901, %1898, %1882
  %1917 = phi i32 [ %1883, %1882 ], [ %162, %1898 ], [ %162, %1901 ], [ %162, %1908 ], [ %162, %222 ], [ %1885, %1884 ], [ %162, %161 ]
  %1918 = phi i32 [ 1, %1882 ], [ 1, %1898 ], [ 1, %1901 ], [ 1, %1908 ], [ 0, %222 ], [ 1, %1884 ], [ 0, %161 ]
  %1919 = icmp sgt i32 %1917, 0
  br i1 %1919, label %1923, label %1920

1920:                                             ; preds = %1916
  %1921 = load i64, i64* %44, align 8
  %1922 = inttoptr i64 %1921 to %"struct.xpathyy::YyParser::stack_symbol_type"*
  br label %1935

1923:                                             ; preds = %1916
  %1924 = sext i32 %1917 to i64
  %1925 = load %"struct.xpathyy::YyParser::stack_symbol_type"*, %"struct.xpathyy::YyParser::stack_symbol_type"** %35, align 8
  br label %1926

1926:                                             ; preds = %1926, %1923
  %1927 = phi %"struct.xpathyy::YyParser::stack_symbol_type"* [ %1925, %1923 ], [ %1929, %1926 ]
  %1928 = phi i64 [ %1924, %1923 ], [ %1931, %1926 ]
  %1929 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %1927, i64 -1
  %1930 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %1929, i64 0, i32 0
  call void @_ZN7xpathyy8YyParser12basic_symbolINS0_8by_stateEE5clearEv(%"struct.xpathyy::YyParser::basic_symbol"* %1930) #18
  store %"struct.xpathyy::YyParser::stack_symbol_type"* %1929, %"struct.xpathyy::YyParser::stack_symbol_type"** %35, align 8
  %1931 = add nsw i64 %1928, -1
  %1932 = icmp sgt i64 %1931, 0
  br i1 %1932, label %1926, label %1933

1933:                                             ; preds = %1926
  %1934 = ptrtoint %"struct.xpathyy::YyParser::stack_symbol_type"* %1929 to i64
  br label %1935

1935:                                             ; preds = %1920, %1933
  %1936 = phi %"struct.xpathyy::YyParser::stack_symbol_type"* [ %1922, %1920 ], [ %1929, %1933 ]
  %1937 = phi i64 [ %1921, %1920 ], [ %1934, %1933 ]
  %1938 = load i64, i64* %45, align 8
  %1939 = sub i64 %1937, %1938
  %1940 = icmp sgt i64 %1939, 32
  br i1 %1940, label %1941, label %1949

1941:                                             ; preds = %1935, %1941
  %1942 = phi %"struct.xpathyy::YyParser::stack_symbol_type"* [ %1943, %1941 ], [ %1936, %1935 ]
  %1943 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %1942, i64 -1
  %1944 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %1943, i64 0, i32 0
  call void @_ZN7xpathyy8YyParser12basic_symbolINS0_8by_stateEE5clearEv(%"struct.xpathyy::YyParser::basic_symbol"* %1944) #18
  store %"struct.xpathyy::YyParser::stack_symbol_type"* %1943, %"struct.xpathyy::YyParser::stack_symbol_type"** %35, align 8
  %1945 = ptrtoint %"struct.xpathyy::YyParser::stack_symbol_type"* %1943 to i64
  %1946 = load i64, i64* %45, align 8
  %1947 = sub i64 %1945, %1946
  %1948 = icmp sgt i64 %1947, 32
  br i1 %1948, label %1941, label %1949

1949:                                             ; preds = %1884, %1941, %1935
  %1950 = phi i32 [ %1918, %1935 ], [ %1918, %1941 ], [ undef, %1884 ]
  call void @_ZN7xpathyy8YyParser12basic_symbolINS0_7by_kindEE5clearEv(%"struct.xpathyy::YyParser::basic_symbol.12"* nonnull %46) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #18
  ret i32 %1950
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #7

declare void @_ZN5blink5xpath12LocationPath15InsertFirstStepEPNS0_4StepE(%"class.blink::xpath::LocationPath"*, %"class.blink::xpath::Step"*) local_unnamed_addr #8

declare void @_ZN5blink5xpath12LocationPath10AppendStepEPNS0_4StepE(%"class.blink::xpath::LocationPath"*, %"class.blink::xpath::Step"*) local_unnamed_addr #8

declare zeroext i1 @_ZN5blink5xpath6Parser11ExpandQNameERKN3WTF6StringERNS2_12AtomicStringES7_(%"class.blink::xpath::Parser"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #8

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"*) local_unnamed_addr #8

declare double @_ZNK3WTF6String8ToDoubleEPb(%"class.WTF::String"*, i8*) local_unnamed_addr #8

declare %"class.blink::xpath::Function"* @_ZN5blink5xpath14CreateFunctionERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #8

declare %"class.blink::xpath::Function"* @_ZN5blink5xpath14CreateFunctionERKN3WTF6StringERNS_10HeapVectorINS_6MemberINS0_10ExpressionEEELj0EEE(%"class.WTF::String"* dereferenceable(8), %"class.blink::HeapVector"* dereferenceable(16)) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7xpathyy8YyParser12basic_symbolINS0_7by_kindEE5clearEv(%"struct.xpathyy::YyParser::basic_symbol.12"*) local_unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol.12", %"struct.xpathyy::YyParser::basic_symbol.12"* %0, i64 0, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %172 [
    i32 11, label %4
    i32 12, label %4
    i32 13, label %4
    i32 14, label %4
    i32 15, label %4
    i32 16, label %4
    i32 19, label %4
    i32 45, label %22
    i32 38, label %47
    i32 39, label %47
    i32 31, label %72
    i32 40, label %72
    i32 43, label %72
    i32 44, label %72
    i32 46, label %72
    i32 47, label %72
    i32 48, label %72
    i32 49, label %72
    i32 50, label %72
    i32 51, label %72
    i32 52, label %72
    i32 53, label %72
    i32 54, label %72
    i32 55, label %72
    i32 56, label %72
    i32 32, label %97
    i32 33, label %97
    i32 34, label %97
    i32 37, label %122
    i32 35, label %147
    i32 41, label %147
    i32 42, label %147
  ]

4:                                                ; preds = %1, %1, %1, %1, %1, %1, %1
  %5 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol.12", %"struct.xpathyy::YyParser::basic_symbol.12"* %0, i64 0, i32 1
  %6 = bitcast %"class.xpathyy::YyParser::semantic_type"* %5 to %"class.WTF::StringImpl"**
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %172, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %172

21:                                               ; preds = %18
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #18
  br label %172

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol.12", %"struct.xpathyy::YyParser::basic_symbol.12"* %0, i64 0, i32 1
  %24 = bitcast %"class.xpathyy::YyParser::semantic_type"* %23 to %"class.blink::PersistentBase"*
  %25 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %24, i64 0, i32 1, i32 0
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %27 = icmp eq %"class.blink::PersistentNode"* %26, null
  br i1 %27, label %172, label %28

28:                                               ; preds = %22
  %29 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %30 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %29, i64 0, i32 1
  %31 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %30) #18
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %35, !prof !2

33:                                               ; preds = %28
  %34 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %30, i8* %34) #18
  br label %35

35:                                               ; preds = %33, %28
  %36 = phi i8* [ %34, %33 ], [ %31, %28 ]
  %37 = bitcast i8* %36 to %"class.blink::ThreadState"**
  %38 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %39, align 8
  %41 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %42 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %40, i64 0, i32 0, i32 0
  %43 = bitcast %"class.blink::PersistentRegion"* %40 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.blink::PersistentNode"* %41 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %41, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %46, align 8
  store %"class.blink::PersistentNode"* %41, %"class.blink::PersistentNode"** %42, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %25, align 8
  br label %172

47:                                               ; preds = %1, %1
  %48 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol.12", %"struct.xpathyy::YyParser::basic_symbol.12"* %0, i64 0, i32 1
  %49 = bitcast %"class.xpathyy::YyParser::semantic_type"* %48 to %"class.blink::PersistentBase.200"*
  %50 = getelementptr inbounds %"class.blink::PersistentBase.200", %"class.blink::PersistentBase.200"* %49, i64 0, i32 1, i32 0
  %51 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %50, align 8
  %52 = icmp eq %"class.blink::PersistentNode"* %51, null
  br i1 %52, label %172, label %53

53:                                               ; preds = %47
  %54 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %55 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %54, i64 0, i32 1
  %56 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %55) #18
  %57 = icmp eq i8* %56, null
  br i1 %57, label %58, label %60, !prof !2

58:                                               ; preds = %53
  %59 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %55, i8* %59) #18
  br label %60

60:                                               ; preds = %58, %53
  %61 = phi i8* [ %59, %58 ], [ %56, %53 ]
  %62 = bitcast i8* %61 to %"class.blink::ThreadState"**
  %63 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %63, i64 0, i32 3, i32 0, i32 0, i32 0
  %65 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %64, align 8
  %66 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %50, align 8
  %67 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %65, i64 0, i32 0, i32 0
  %68 = bitcast %"class.blink::PersistentRegion"* %65 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.blink::PersistentNode"* %66 to i64*
  store i64 %69, i64* %70, align 8
  %71 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %66, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %71, align 8
  store %"class.blink::PersistentNode"* %66, %"class.blink::PersistentNode"** %67, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %50, align 8
  br label %172

72:                                               ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  %73 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol.12", %"struct.xpathyy::YyParser::basic_symbol.12"* %0, i64 0, i32 1
  %74 = bitcast %"class.xpathyy::YyParser::semantic_type"* %73 to %"class.blink::PersistentBase.213"*
  %75 = getelementptr inbounds %"class.blink::PersistentBase.213", %"class.blink::PersistentBase.213"* %74, i64 0, i32 1, i32 0
  %76 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %75, align 8
  %77 = icmp eq %"class.blink::PersistentNode"* %76, null
  br i1 %77, label %172, label %78

78:                                               ; preds = %72
  %79 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %80 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %79, i64 0, i32 1
  %81 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %80) #18
  %82 = icmp eq i8* %81, null
  br i1 %82, label %83, label %85, !prof !2

83:                                               ; preds = %78
  %84 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %80, i8* %84) #18
  br label %85

85:                                               ; preds = %83, %78
  %86 = phi i8* [ %84, %83 ], [ %81, %78 ]
  %87 = bitcast i8* %86 to %"class.blink::ThreadState"**
  %88 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %88, i64 0, i32 3, i32 0, i32 0, i32 0
  %90 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %89, align 8
  %91 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %75, align 8
  %92 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %90, i64 0, i32 0, i32 0
  %93 = bitcast %"class.blink::PersistentRegion"* %90 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.blink::PersistentNode"* %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %91, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %96, align 8
  store %"class.blink::PersistentNode"* %91, %"class.blink::PersistentNode"** %92, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %75, align 8
  br label %172

97:                                               ; preds = %1, %1, %1
  %98 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol.12", %"struct.xpathyy::YyParser::basic_symbol.12"* %0, i64 0, i32 1
  %99 = bitcast %"class.xpathyy::YyParser::semantic_type"* %98 to %"class.blink::PersistentBase.215"*
  %100 = getelementptr inbounds %"class.blink::PersistentBase.215", %"class.blink::PersistentBase.215"* %99, i64 0, i32 1, i32 0
  %101 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %100, align 8
  %102 = icmp eq %"class.blink::PersistentNode"* %101, null
  br i1 %102, label %172, label %103

103:                                              ; preds = %97
  %104 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %105 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %104, i64 0, i32 1
  %106 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %105) #18
  %107 = icmp eq i8* %106, null
  br i1 %107, label %108, label %110, !prof !2

108:                                              ; preds = %103
  %109 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %105, i8* %109) #18
  br label %110

110:                                              ; preds = %108, %103
  %111 = phi i8* [ %109, %108 ], [ %106, %103 ]
  %112 = bitcast i8* %111 to %"class.blink::ThreadState"**
  %113 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %112, align 8
  %114 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %113, i64 0, i32 3, i32 0, i32 0, i32 0
  %115 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %114, align 8
  %116 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %100, align 8
  %117 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %115, i64 0, i32 0, i32 0
  %118 = bitcast %"class.blink::PersistentRegion"* %115 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.blink::PersistentNode"* %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %116, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %121, align 8
  store %"class.blink::PersistentNode"* %116, %"class.blink::PersistentNode"** %117, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %100, align 8
  br label %172

122:                                              ; preds = %1
  %123 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol.12", %"struct.xpathyy::YyParser::basic_symbol.12"* %0, i64 0, i32 1
  %124 = bitcast %"class.xpathyy::YyParser::semantic_type"* %123 to %"class.blink::PersistentBase.225"*
  %125 = getelementptr inbounds %"class.blink::PersistentBase.225", %"class.blink::PersistentBase.225"* %124, i64 0, i32 1, i32 0
  %126 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %125, align 8
  %127 = icmp eq %"class.blink::PersistentNode"* %126, null
  br i1 %127, label %172, label %128

128:                                              ; preds = %122
  %129 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %130 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %129, i64 0, i32 1
  %131 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %130) #18
  %132 = icmp eq i8* %131, null
  br i1 %132, label %133, label %135, !prof !2

133:                                              ; preds = %128
  %134 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %130, i8* %134) #18
  br label %135

135:                                              ; preds = %133, %128
  %136 = phi i8* [ %134, %133 ], [ %131, %128 ]
  %137 = bitcast i8* %136 to %"class.blink::ThreadState"**
  %138 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %137, align 8
  %139 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %138, i64 0, i32 3, i32 0, i32 0, i32 0
  %140 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %139, align 8
  %141 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %125, align 8
  %142 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %140, i64 0, i32 0, i32 0
  %143 = bitcast %"class.blink::PersistentRegion"* %140 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.blink::PersistentNode"* %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %141, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %146, align 8
  store %"class.blink::PersistentNode"* %141, %"class.blink::PersistentNode"** %142, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %125, align 8
  br label %172

147:                                              ; preds = %1, %1, %1
  %148 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol.12", %"struct.xpathyy::YyParser::basic_symbol.12"* %0, i64 0, i32 1
  %149 = bitcast %"class.xpathyy::YyParser::semantic_type"* %148 to %"class.blink::PersistentBase.229"*
  %150 = getelementptr inbounds %"class.blink::PersistentBase.229", %"class.blink::PersistentBase.229"* %149, i64 0, i32 1, i32 0
  %151 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %150, align 8
  %152 = icmp eq %"class.blink::PersistentNode"* %151, null
  br i1 %152, label %172, label %153

153:                                              ; preds = %147
  %154 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %155 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %154, i64 0, i32 1
  %156 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %155) #18
  %157 = icmp eq i8* %156, null
  br i1 %157, label %158, label %160, !prof !2

158:                                              ; preds = %153
  %159 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %155, i8* %159) #18
  br label %160

160:                                              ; preds = %158, %153
  %161 = phi i8* [ %159, %158 ], [ %156, %153 ]
  %162 = bitcast i8* %161 to %"class.blink::ThreadState"**
  %163 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %162, align 8
  %164 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %163, i64 0, i32 3, i32 0, i32 0, i32 0
  %165 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %164, align 8
  %166 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %150, align 8
  %167 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %165, i64 0, i32 0, i32 0
  %168 = bitcast %"class.blink::PersistentRegion"* %165 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast %"class.blink::PersistentNode"* %166 to i64*
  store i64 %169, i64* %170, align 8
  %171 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %166, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %171, align 8
  store %"class.blink::PersistentNode"* %166, %"class.blink::PersistentNode"** %167, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %150, align 8
  br label %172

172:                                              ; preds = %160, %147, %135, %122, %110, %97, %85, %72, %60, %47, %35, %22, %21, %18, %4, %1
  store i32 -2, i32* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7xpathyy8YyParser5errorERKNS0_12syntax_errorE(%"class.xpathyy::YyParser"*, %"struct.xpathyy::YyParser::syntax_error"* dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #18
  %5 = getelementptr inbounds %"struct.xpathyy::YyParser::syntax_error", %"struct.xpathyy::YyParser::syntax_error"* %1, i64 0, i32 0
  %6 = bitcast %"struct.xpathyy::YyParser::syntax_error"* %1 to i8* (%"class.std::runtime_error"*)***
  %7 = load i8* (%"class.std::runtime_error"*)**, i8* (%"class.std::runtime_error"*)*** %6, align 8
  %8 = getelementptr inbounds i8* (%"class.std::runtime_error"*)*, i8* (%"class.std::runtime_error"*)** %7, i64 2
  %9 = load i8* (%"class.std::runtime_error"*)*, i8* (%"class.std::runtime_error"*)** %8, align 8
  %10 = tail call i8* %9(%"class.std::runtime_error"* %5) #18
  %11 = tail call i64 @strlen(i8* %10) #18
  %12 = icmp ugt i64 %11, -17
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %14) #19
  unreachable

15:                                               ; preds = %2
  %16 = icmp ult i64 %11, 23
  br i1 %16, label %26, label %17

17:                                               ; preds = %15
  %18 = add nuw i64 %11, 16
  %19 = and i64 %18, -16
  %20 = tail call i8* @_Znwm(i64 %19) #17
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8
  %22 = or i64 %19, -9223372036854775808
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %11, i64* %24, align 8
  %25 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %31

26:                                               ; preds = %15
  %27 = trunc i64 %11 to i8
  %28 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  store i8 %27, i8* %29, align 1
  %30 = icmp eq i64 %11, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %26, %17
  %32 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %28, %26 ], [ %25, %17 ]
  %33 = phi i8* [ %4, %26 ], [ %20, %17 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %33, i8* align 1 %10, i64 %11, i1 false) #18
  br label %34

34:                                               ; preds = %26, %31
  %35 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %28, %26 ], [ %32, %31 ]
  %36 = phi i8* [ %4, %26 ], [ %33, %31 ]
  %37 = getelementptr inbounds i8, i8* %36, i64 %11
  store i8 0, i8* %37, align 1
  %38 = bitcast %"class.xpathyy::YyParser"* %0 to void (%"class.xpathyy::YyParser"*, %"class.std::__1::basic_string"*)***
  %39 = load void (%"class.xpathyy::YyParser"*, %"class.std::__1::basic_string"*)**, void (%"class.xpathyy::YyParser"*, %"class.std::__1::basic_string"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.xpathyy::YyParser"*, %"class.std::__1::basic_string"*)*, void (%"class.xpathyy::YyParser"*, %"class.std::__1::basic_string"*)** %39, i64 3
  %41 = load void (%"class.xpathyy::YyParser"*, %"class.std::__1::basic_string"*)*, void (%"class.xpathyy::YyParser"*, %"class.std::__1::basic_string"*)** %40, align 8
  call void %41(%"class.xpathyy::YyParser"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #18
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %34
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %47) #17
  br label %48

48:                                               ; preds = %34, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #18
  ret void
}

; Function Attrs: nounwind
declare i8* @_ZNKSt13runtime_error4whatEv(%"class.std::runtime_error"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7xpathyy8YyParser12basic_symbolINS0_8by_stateEE5clearEv(%"struct.xpathyy::YyParser::basic_symbol"*) local_unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol", %"struct.xpathyy::YyParser::basic_symbol"* %0, i64 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %178, label %5

5:                                                ; preds = %1
  %6 = sext i8 %3 to i64
  %7 = getelementptr inbounds [94 x i8], [94 x i8]* @_ZN7xpathyy8YyParser7yystos_E, i64 0, i64 %6
  %8 = load i8, i8* %7, align 1
  %9 = sext i8 %8 to i32
  switch i32 %9, label %178 [
    i32 11, label %10
    i32 12, label %10
    i32 13, label %10
    i32 14, label %10
    i32 15, label %10
    i32 16, label %10
    i32 19, label %10
    i32 45, label %28
    i32 38, label %53
    i32 39, label %53
    i32 31, label %78
    i32 40, label %78
    i32 43, label %78
    i32 44, label %78
    i32 46, label %78
    i32 47, label %78
    i32 48, label %78
    i32 49, label %78
    i32 50, label %78
    i32 51, label %78
    i32 52, label %78
    i32 53, label %78
    i32 54, label %78
    i32 55, label %78
    i32 56, label %78
    i32 32, label %103
    i32 33, label %103
    i32 34, label %103
    i32 37, label %128
    i32 35, label %153
    i32 41, label %153
    i32 42, label %153
  ]

10:                                               ; preds = %5, %5, %5, %5, %5, %5, %5
  %11 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol", %"struct.xpathyy::YyParser::basic_symbol"* %0, i64 0, i32 1
  %12 = bitcast %"class.xpathyy::YyParser::semantic_type"* %11 to %"class.WTF::StringImpl"**
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %178, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %178

27:                                               ; preds = %24
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #18
  br label %178

28:                                               ; preds = %5
  %29 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol", %"struct.xpathyy::YyParser::basic_symbol"* %0, i64 0, i32 1
  %30 = bitcast %"class.xpathyy::YyParser::semantic_type"* %29 to %"class.blink::PersistentBase"*
  %31 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %30, i64 0, i32 1, i32 0
  %32 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %31, align 8
  %33 = icmp eq %"class.blink::PersistentNode"* %32, null
  br i1 %33, label %178, label %34

34:                                               ; preds = %28
  %35 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %36 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %35, i64 0, i32 1
  %37 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %36) #18
  %38 = icmp eq i8* %37, null
  br i1 %38, label %39, label %41, !prof !2

39:                                               ; preds = %34
  %40 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %36, i8* %40) #18
  br label %41

41:                                               ; preds = %39, %34
  %42 = phi i8* [ %40, %39 ], [ %37, %34 ]
  %43 = bitcast i8* %42 to %"class.blink::ThreadState"**
  %44 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %44, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %45, align 8
  %47 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %31, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %46, i64 0, i32 0, i32 0
  %49 = bitcast %"class.blink::PersistentRegion"* %46 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.blink::PersistentNode"* %47 to i64*
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %47, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %52, align 8
  store %"class.blink::PersistentNode"* %47, %"class.blink::PersistentNode"** %48, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %31, align 8
  br label %178

53:                                               ; preds = %5, %5
  %54 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol", %"struct.xpathyy::YyParser::basic_symbol"* %0, i64 0, i32 1
  %55 = bitcast %"class.xpathyy::YyParser::semantic_type"* %54 to %"class.blink::PersistentBase.200"*
  %56 = getelementptr inbounds %"class.blink::PersistentBase.200", %"class.blink::PersistentBase.200"* %55, i64 0, i32 1, i32 0
  %57 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %56, align 8
  %58 = icmp eq %"class.blink::PersistentNode"* %57, null
  br i1 %58, label %178, label %59

59:                                               ; preds = %53
  %60 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %61 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %60, i64 0, i32 1
  %62 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %61) #18
  %63 = icmp eq i8* %62, null
  br i1 %63, label %64, label %66, !prof !2

64:                                               ; preds = %59
  %65 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %61, i8* %65) #18
  br label %66

66:                                               ; preds = %64, %59
  %67 = phi i8* [ %65, %64 ], [ %62, %59 ]
  %68 = bitcast i8* %67 to %"class.blink::ThreadState"**
  %69 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %69, i64 0, i32 3, i32 0, i32 0, i32 0
  %71 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %70, align 8
  %72 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %56, align 8
  %73 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %71, i64 0, i32 0, i32 0
  %74 = bitcast %"class.blink::PersistentRegion"* %71 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::PersistentNode"* %72 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %72, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %77, align 8
  store %"class.blink::PersistentNode"* %72, %"class.blink::PersistentNode"** %73, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %56, align 8
  br label %178

78:                                               ; preds = %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5
  %79 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol", %"struct.xpathyy::YyParser::basic_symbol"* %0, i64 0, i32 1
  %80 = bitcast %"class.xpathyy::YyParser::semantic_type"* %79 to %"class.blink::PersistentBase.213"*
  %81 = getelementptr inbounds %"class.blink::PersistentBase.213", %"class.blink::PersistentBase.213"* %80, i64 0, i32 1, i32 0
  %82 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %81, align 8
  %83 = icmp eq %"class.blink::PersistentNode"* %82, null
  br i1 %83, label %178, label %84

84:                                               ; preds = %78
  %85 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %86 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %85, i64 0, i32 1
  %87 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %86) #18
  %88 = icmp eq i8* %87, null
  br i1 %88, label %89, label %91, !prof !2

89:                                               ; preds = %84
  %90 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %86, i8* %90) #18
  br label %91

91:                                               ; preds = %89, %84
  %92 = phi i8* [ %90, %89 ], [ %87, %84 ]
  %93 = bitcast i8* %92 to %"class.blink::ThreadState"**
  %94 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %94, i64 0, i32 3, i32 0, i32 0, i32 0
  %96 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %95, align 8
  %97 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %81, align 8
  %98 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %96, i64 0, i32 0, i32 0
  %99 = bitcast %"class.blink::PersistentRegion"* %96 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"class.blink::PersistentNode"* %97 to i64*
  store i64 %100, i64* %101, align 8
  %102 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %97, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %102, align 8
  store %"class.blink::PersistentNode"* %97, %"class.blink::PersistentNode"** %98, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %81, align 8
  br label %178

103:                                              ; preds = %5, %5, %5
  %104 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol", %"struct.xpathyy::YyParser::basic_symbol"* %0, i64 0, i32 1
  %105 = bitcast %"class.xpathyy::YyParser::semantic_type"* %104 to %"class.blink::PersistentBase.215"*
  %106 = getelementptr inbounds %"class.blink::PersistentBase.215", %"class.blink::PersistentBase.215"* %105, i64 0, i32 1, i32 0
  %107 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %106, align 8
  %108 = icmp eq %"class.blink::PersistentNode"* %107, null
  br i1 %108, label %178, label %109

109:                                              ; preds = %103
  %110 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %111 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %110, i64 0, i32 1
  %112 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %111) #18
  %113 = icmp eq i8* %112, null
  br i1 %113, label %114, label %116, !prof !2

114:                                              ; preds = %109
  %115 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %111, i8* %115) #18
  br label %116

116:                                              ; preds = %114, %109
  %117 = phi i8* [ %115, %114 ], [ %112, %109 ]
  %118 = bitcast i8* %117 to %"class.blink::ThreadState"**
  %119 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %118, align 8
  %120 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %119, i64 0, i32 3, i32 0, i32 0, i32 0
  %121 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %120, align 8
  %122 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %106, align 8
  %123 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %121, i64 0, i32 0, i32 0
  %124 = bitcast %"class.blink::PersistentRegion"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"class.blink::PersistentNode"* %122 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %122, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %127, align 8
  store %"class.blink::PersistentNode"* %122, %"class.blink::PersistentNode"** %123, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %106, align 8
  br label %178

128:                                              ; preds = %5
  %129 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol", %"struct.xpathyy::YyParser::basic_symbol"* %0, i64 0, i32 1
  %130 = bitcast %"class.xpathyy::YyParser::semantic_type"* %129 to %"class.blink::PersistentBase.225"*
  %131 = getelementptr inbounds %"class.blink::PersistentBase.225", %"class.blink::PersistentBase.225"* %130, i64 0, i32 1, i32 0
  %132 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %131, align 8
  %133 = icmp eq %"class.blink::PersistentNode"* %132, null
  br i1 %133, label %178, label %134

134:                                              ; preds = %128
  %135 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %136 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %135, i64 0, i32 1
  %137 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %136) #18
  %138 = icmp eq i8* %137, null
  br i1 %138, label %139, label %141, !prof !2

139:                                              ; preds = %134
  %140 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %136, i8* %140) #18
  br label %141

141:                                              ; preds = %139, %134
  %142 = phi i8* [ %140, %139 ], [ %137, %134 ]
  %143 = bitcast i8* %142 to %"class.blink::ThreadState"**
  %144 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %143, align 8
  %145 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %144, i64 0, i32 3, i32 0, i32 0, i32 0
  %146 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %145, align 8
  %147 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %131, align 8
  %148 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %146, i64 0, i32 0, i32 0
  %149 = bitcast %"class.blink::PersistentRegion"* %146 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.blink::PersistentNode"* %147 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %147, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %152, align 8
  store %"class.blink::PersistentNode"* %147, %"class.blink::PersistentNode"** %148, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %131, align 8
  br label %178

153:                                              ; preds = %5, %5, %5
  %154 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol", %"struct.xpathyy::YyParser::basic_symbol"* %0, i64 0, i32 1
  %155 = bitcast %"class.xpathyy::YyParser::semantic_type"* %154 to %"class.blink::PersistentBase.229"*
  %156 = getelementptr inbounds %"class.blink::PersistentBase.229", %"class.blink::PersistentBase.229"* %155, i64 0, i32 1, i32 0
  %157 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %156, align 8
  %158 = icmp eq %"class.blink::PersistentNode"* %157, null
  br i1 %158, label %178, label %159

159:                                              ; preds = %153
  %160 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %161 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %160, i64 0, i32 1
  %162 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %161) #18
  %163 = icmp eq i8* %162, null
  br i1 %163, label %164, label %166, !prof !2

164:                                              ; preds = %159
  %165 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %161, i8* %165) #18
  br label %166

166:                                              ; preds = %164, %159
  %167 = phi i8* [ %165, %164 ], [ %162, %159 ]
  %168 = bitcast i8* %167 to %"class.blink::ThreadState"**
  %169 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %168, align 8
  %170 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %169, i64 0, i32 3, i32 0, i32 0, i32 0
  %171 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %170, align 8
  %172 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %156, align 8
  %173 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %171, i64 0, i32 0, i32 0
  %174 = bitcast %"class.blink::PersistentRegion"* %171 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = bitcast %"class.blink::PersistentNode"* %172 to i64*
  store i64 %175, i64* %176, align 8
  %177 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %172, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %177, align 8
  store %"class.blink::PersistentNode"* %172, %"class.blink::PersistentNode"** %173, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %156, align 8
  br label %178

178:                                              ; preds = %1, %166, %153, %141, %128, %116, %103, %91, %78, %66, %53, %41, %28, %27, %24, %10, %5
  store i8 0, i8* %2, align 1
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #8

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #8

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

declare i32 @_ZN5blink5xpath6Parser3LexEPv(%"class.blink::xpath::Parser"*, i8*) local_unnamed_addr #8

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #8

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #8

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS4_EEvOT_(%"class.WTF::Vector"*, %"class.blink::xpath::Expression"** dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %14) #18
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %18
  %20 = bitcast %"class.blink::xpath::Expression"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #18
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = icmp eq %"class.blink::Member"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_5xpath10ExpressionEEEEEmm(i64 %11) #18
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %14) #18
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #18
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %26 = icmp eq %"class.blink::Member"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #18
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #18
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #18
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.19, i64 0, i64 0)) #18
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #18
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #8

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #18
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #18
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_5xpath10ExpressionEEEEEmm(i64 %14) #18
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %16) #18
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member"*, %"class.blink::Member"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #18
  %33 = bitcast %"class.WTF::Vector"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #18
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #18
  %42 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #18
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_5xpath10ExpressionEEEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #18
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #18
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.20, i64 0, i64 0), i8* %11, i8* %12) #18
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.21, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #18
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #18
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #18
  %20 = shl i64 %0, 3
  ret i64 %20
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #8

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #8

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #18
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #18
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i64 0, i64 0), i8* %11, i8* %12) #18
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.23, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #18
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #18
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #18
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #18
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #18
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #18
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([175 x i8], [175 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_5xpath10ExpressionEEENS_12VectorTraitsIS6_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #13 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #18
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #18
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #18
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #18
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i64 0, i64 0), i8* %21, i8* %22) #18
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #18
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.25, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #18
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #18
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #18
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #18
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_5xpath10ExpressionEE5TraceEPNS_7VisitorEPKv) #18
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_5xpath10ExpressionEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::xpath::Expression"*
  %4 = bitcast i8* %1 to void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)**, void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)*, void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)*, void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::xpath::Expression"* %3, %"class.blink::Visitor"* %0) #18
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #8

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #8

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #8

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #8

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #14

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #15

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #16

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_10HeapVectorINS_6MemberINS_5xpath10ExpressionEEELj0EEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKSA_15TracePersistentEPNS_7VisitorEEEE10TrampolineESC_PKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::HeapVector"**
  %5 = load %"class.blink::HeapVector"*, %"class.blink::HeapVector"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #18
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #18
  %7 = icmp eq %"class.blink::HeapVector"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::HeapVector"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_5xpath10ExpressionEEELj0EEEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #18
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #18
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_5xpath10ExpressionEEELj0EEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  %6 = bitcast i8* %1 to i8**
  %7 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %0, i8** %6) #18
  br i1 %5, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %0, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv) #18
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_10HeapVectorINS_6MemberINS_5xpath9PredicateEEELj0EEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKSA_15TracePersistentEPNS_7VisitorEEEE10TrampolineESC_PKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::HeapVector.201"**
  %5 = load %"class.blink::HeapVector.201"*, %"class.blink::HeapVector.201"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #18
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #18
  %7 = icmp eq %"class.blink::HeapVector.201"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::HeapVector.201"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_5xpath9PredicateEEELj0EEEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #18
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_5xpath9PredicateEEELj0EEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  %6 = bitcast i8* %1 to i8**
  %7 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %0, i8** %6) #18
  br i1 %5, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %0, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv) #18
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.207"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.207", %"class.blink::Member.207"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.207"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_5xpath9PredicateEE5TraceEPNS_7VisitorEPKv) #18
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_5xpath9PredicateEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::xpath::Predicate"*
  tail call void @_ZNK5blink5xpath9Predicate5TraceEPNS_7VisitorE(%"class.blink::xpath::Predicate"* %3, %"class.blink::Visitor"* %0) #18
  ret void
}

declare void @_ZNK5blink5xpath9Predicate5TraceEPNS_7VisitorE(%"class.blink::xpath::Predicate"*, %"class.blink::Visitor"*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::xpath::Expression"**
  %5 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #18
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #18
  %7 = icmp eq %"class.blink::xpath::Expression"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::xpath::Expression"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_5xpath10ExpressionEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #18
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_5xpath12LocationPathELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::xpath::LocationPath"**
  %5 = load %"class.blink::xpath::LocationPath"*, %"class.blink::xpath::LocationPath"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #18
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #18
  %7 = icmp eq %"class.blink::xpath::LocationPath"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::xpath::LocationPath"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_5xpath12LocationPathEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #18
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_5xpath12LocationPathEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::xpath::LocationPath"*
  tail call void @_ZNK5blink5xpath12LocationPath5TraceEPNS_7VisitorE(%"class.blink::xpath::LocationPath"* %3, %"class.blink::Visitor"* %0) #18
  ret void
}

declare void @_ZNK5blink5xpath12LocationPath5TraceEPNS_7VisitorE(%"class.blink::xpath::LocationPath"*, %"class.blink::Visitor"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_5xpath4Step8NodeTestELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS7_15TracePersistentEPNS_7VisitorEEEE10TrampolineES9_PKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::xpath::Step::NodeTest"**
  %5 = load %"class.blink::xpath::Step::NodeTest"*, %"class.blink::xpath::Step::NodeTest"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #18
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #18
  %7 = icmp eq %"class.blink::xpath::Step::NodeTest"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::xpath::Step::NodeTest"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_5xpath4Step8NodeTestEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #18
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_5xpath4Step8NodeTestEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 24
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  %7 = bitcast i8* %3 to i8**
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8** %7) #18
  br i1 %6, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %0, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv) #18
  br label %18

18:                                               ; preds = %2, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_5xpath4StepELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::xpath::Step"**
  %5 = load %"class.blink::xpath::Step"*, %"class.blink::xpath::Step"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #18
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #18
  %7 = icmp eq %"class.blink::xpath::Step"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::xpath::Step"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_5xpath4StepEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #18
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_5xpath4StepEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::xpath::Step"*
  tail call void @_ZNK5blink5xpath4Step5TraceEPNS_7VisitorE(%"class.blink::xpath::Step"* %3, %"class.blink::Visitor"* %0) #18
  ret void
}

declare void @_ZNK5blink5xpath4Step5TraceEPNS_7VisitorE(%"class.blink::xpath::Step"*, %"class.blink::Visitor"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7xpathyy8YyParser12basic_symbolINS0_8by_stateEE4moveERS3_(%"struct.xpathyy::YyParser::basic_symbol"*, %"struct.xpathyy::YyParser::basic_symbol"* dereferenceable(32)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol", %"struct.xpathyy::YyParser::basic_symbol"* %1, i64 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol", %"struct.xpathyy::YyParser::basic_symbol"* %0, i64 0, i32 0, i32 0
  store i8 %4, i8* %5, align 1
  store i8 0, i8* %3, align 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %56, label %8

8:                                                ; preds = %2
  %9 = sext i8 %6 to i64
  %10 = getelementptr inbounds [94 x i8], [94 x i8]* @_ZN7xpathyy8YyParser7yystos_E, i64 0, i64 %9
  %11 = load i8, i8* %10, align 1
  %12 = sext i8 %11 to i32
  switch i32 %12, label %56 [
    i32 11, label %13
    i32 12, label %13
    i32 13, label %13
    i32 14, label %13
    i32 15, label %13
    i32 16, label %13
    i32 19, label %13
    i32 45, label %20
    i32 38, label %23
    i32 39, label %23
    i32 31, label %26
    i32 40, label %26
    i32 43, label %26
    i32 44, label %26
    i32 46, label %26
    i32 47, label %26
    i32 48, label %26
    i32 49, label %26
    i32 50, label %26
    i32 51, label %26
    i32 52, label %26
    i32 53, label %26
    i32 54, label %26
    i32 55, label %26
    i32 56, label %26
    i32 32, label %29
    i32 33, label %29
    i32 34, label %29
    i32 37, label %32
    i32 35, label %35
    i32 41, label %35
    i32 42, label %35
    i32 4, label %38
    i32 5, label %38
    i32 3, label %44
    i32 10, label %50
    i32 36, label %50
  ]

13:                                               ; preds = %8, %8, %8, %8, %8, %8, %8
  %14 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol", %"struct.xpathyy::YyParser::basic_symbol"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol", %"struct.xpathyy::YyParser::basic_symbol"* %1, i64 0, i32 1
  %16 = bitcast %"class.xpathyy::YyParser::semantic_type"* %15 to %"class.WTF::StringImpl"**
  %17 = bitcast %"class.xpathyy::YyParser::semantic_type"* %15 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.xpathyy::YyParser::semantic_type"* %14 to i64*
  store i64 %18, i64* %19, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  br label %56

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol", %"struct.xpathyy::YyParser::basic_symbol"* %0, i64 0, i32 1
  %22 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol", %"struct.xpathyy::YyParser::basic_symbol"* %1, i64 0, i32 1
  tail call void @_ZN7xpathyy8YyParser13semantic_type4moveIN5blink10PersistentINS3_10HeapVectorINS3_6MemberINS3_5xpath10ExpressionEEELj0EEEEEEEvOS1_(%"class.xpathyy::YyParser::semantic_type"* %21, %"class.xpathyy::YyParser::semantic_type"* dereferenceable(16) %22)
  br label %56

23:                                               ; preds = %8, %8
  %24 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol", %"struct.xpathyy::YyParser::basic_symbol"* %0, i64 0, i32 1
  %25 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol", %"struct.xpathyy::YyParser::basic_symbol"* %1, i64 0, i32 1
  tail call void @_ZN7xpathyy8YyParser13semantic_type4moveIN5blink10PersistentINS3_10HeapVectorINS3_6MemberINS3_5xpath9PredicateEEELj0EEEEEEEvOS1_(%"class.xpathyy::YyParser::semantic_type"* %24, %"class.xpathyy::YyParser::semantic_type"* dereferenceable(16) %25)
  br label %56

26:                                               ; preds = %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8, %8
  %27 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol", %"struct.xpathyy::YyParser::basic_symbol"* %0, i64 0, i32 1
  %28 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol", %"struct.xpathyy::YyParser::basic_symbol"* %1, i64 0, i32 1
  tail call void @_ZN7xpathyy8YyParser13semantic_type4moveIN5blink10PersistentINS3_5xpath10ExpressionEEEEEvOS1_(%"class.xpathyy::YyParser::semantic_type"* %27, %"class.xpathyy::YyParser::semantic_type"* dereferenceable(16) %28)
  br label %56

29:                                               ; preds = %8, %8, %8
  %30 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol", %"struct.xpathyy::YyParser::basic_symbol"* %0, i64 0, i32 1
  %31 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol", %"struct.xpathyy::YyParser::basic_symbol"* %1, i64 0, i32 1
  tail call void @_ZN7xpathyy8YyParser13semantic_type4moveIN5blink10PersistentINS3_5xpath12LocationPathEEEEEvOS1_(%"class.xpathyy::YyParser::semantic_type"* %30, %"class.xpathyy::YyParser::semantic_type"* dereferenceable(16) %31)
  br label %56

32:                                               ; preds = %8
  %33 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol", %"struct.xpathyy::YyParser::basic_symbol"* %0, i64 0, i32 1
  %34 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol", %"struct.xpathyy::YyParser::basic_symbol"* %1, i64 0, i32 1
  tail call void @_ZN7xpathyy8YyParser13semantic_type4moveIN5blink10PersistentINS3_5xpath4Step8NodeTestEEEEEvOS1_(%"class.xpathyy::YyParser::semantic_type"* %33, %"class.xpathyy::YyParser::semantic_type"* dereferenceable(16) %34)
  br label %56

35:                                               ; preds = %8, %8, %8
  %36 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol", %"struct.xpathyy::YyParser::basic_symbol"* %0, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol", %"struct.xpathyy::YyParser::basic_symbol"* %1, i64 0, i32 1
  tail call void @_ZN7xpathyy8YyParser13semantic_type4moveIN5blink10PersistentINS3_5xpath4StepEEEEEvOS1_(%"class.xpathyy::YyParser::semantic_type"* %36, %"class.xpathyy::YyParser::semantic_type"* dereferenceable(16) %37)
  br label %56

38:                                               ; preds = %8, %8
  %39 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol", %"struct.xpathyy::YyParser::basic_symbol"* %0, i64 0, i32 1
  %40 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol", %"struct.xpathyy::YyParser::basic_symbol"* %1, i64 0, i32 1
  %41 = bitcast %"class.xpathyy::YyParser::semantic_type"* %40 to i32*
  %42 = bitcast %"class.xpathyy::YyParser::semantic_type"* %39 to i32*
  %43 = load i32, i32* %41, align 4
  store i32 %43, i32* %42, align 4
  br label %56

44:                                               ; preds = %8
  %45 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol", %"struct.xpathyy::YyParser::basic_symbol"* %0, i64 0, i32 1
  %46 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol", %"struct.xpathyy::YyParser::basic_symbol"* %1, i64 0, i32 1
  %47 = bitcast %"class.xpathyy::YyParser::semantic_type"* %46 to i32*
  %48 = bitcast %"class.xpathyy::YyParser::semantic_type"* %45 to i32*
  %49 = load i32, i32* %47, align 4
  store i32 %49, i32* %48, align 4
  br label %56

50:                                               ; preds = %8, %8
  %51 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol", %"struct.xpathyy::YyParser::basic_symbol"* %0, i64 0, i32 1
  %52 = getelementptr inbounds %"struct.xpathyy::YyParser::basic_symbol", %"struct.xpathyy::YyParser::basic_symbol"* %1, i64 0, i32 1
  %53 = bitcast %"class.xpathyy::YyParser::semantic_type"* %52 to i32*
  %54 = bitcast %"class.xpathyy::YyParser::semantic_type"* %51 to i32*
  %55 = load i32, i32* %53, align 4
  store i32 %55, i32* %54, align 4
  br label %56

56:                                               ; preds = %2, %8, %50, %44, %38, %35, %32, %29, %26, %23, %20, %13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN7xpathyy8YyParser17stack_symbol_typeENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"*, %"struct.xpathyy::YyParser::stack_symbol_type"* dereferenceable(32)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.xpathyy::YyParser::stack_symbol_type"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.xpathyy::YyParser::stack_symbol_type"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #19
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #17
  %33 = bitcast i8* %32 to %"struct.xpathyy::YyParser::stack_symbol_type"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"struct.xpathyy::YyParser::stack_symbol_type"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %36, i64 %9
  %38 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %36, i64 %35
  %39 = ptrtoint %"struct.xpathyy::YyParser::stack_symbol_type"* %38 to i64
  tail call void @_ZN7xpathyy8YyParser17stack_symbol_typeC2EOS1_(%"struct.xpathyy::YyParser::stack_symbol_type"* %37, %"struct.xpathyy::YyParser::stack_symbol_type"* dereferenceable(32) %1) #18
  %40 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %37, i64 1
  %41 = ptrtoint %"struct.xpathyy::YyParser::stack_symbol_type"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %43 = load %"struct.xpathyy::YyParser::stack_symbol_type"*, %"struct.xpathyy::YyParser::stack_symbol_type"** %42, align 8
  %44 = load %"struct.xpathyy::YyParser::stack_symbol_type"*, %"struct.xpathyy::YyParser::stack_symbol_type"** %3, align 8
  %45 = icmp eq %"struct.xpathyy::YyParser::stack_symbol_type"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"struct.xpathyy::YyParser::stack_symbol_type"* %37 to i64
  store i64 %47, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  br label %64

48:                                               ; preds = %34, %48
  %49 = phi %"struct.xpathyy::YyParser::stack_symbol_type"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"struct.xpathyy::YyParser::stack_symbol_type"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %49, i64 -1
  %52 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %50, i64 -1
  tail call void @_ZN7xpathyy8YyParser17stack_symbol_typeC2EOS1_(%"struct.xpathyy::YyParser::stack_symbol_type"* %51, %"struct.xpathyy::YyParser::stack_symbol_type"* dereferenceable(32) %52) #18
  %53 = icmp eq %"struct.xpathyy::YyParser::stack_symbol_type"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load %"struct.xpathyy::YyParser::stack_symbol_type"*, %"struct.xpathyy::YyParser::stack_symbol_type"** %42, align 8
  %56 = load %"struct.xpathyy::YyParser::stack_symbol_type"*, %"struct.xpathyy::YyParser::stack_symbol_type"** %3, align 8
  %57 = ptrtoint %"struct.xpathyy::YyParser::stack_symbol_type"* %51 to i64
  store i64 %57, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %58 = icmp eq %"struct.xpathyy::YyParser::stack_symbol_type"* %56, %55
  br i1 %58, label %64, label %59

59:                                               ; preds = %54, %59
  %60 = phi %"struct.xpathyy::YyParser::stack_symbol_type"* [ %61, %59 ], [ %56, %54 ]
  %61 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %60, i64 -1
  %62 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %61, i64 0, i32 0
  tail call void @_ZN7xpathyy8YyParser12basic_symbolINS0_8by_stateEE5clearEv(%"struct.xpathyy::YyParser::basic_symbol"* %62) #18
  %63 = icmp eq %"struct.xpathyy::YyParser::stack_symbol_type"* %61, %55
  br i1 %63, label %64, label %59

64:                                               ; preds = %59, %46, %54
  %65 = phi %"struct.xpathyy::YyParser::stack_symbol_type"* [ %43, %46 ], [ %55, %54 ], [ %55, %59 ]
  %66 = icmp eq %"struct.xpathyy::YyParser::stack_symbol_type"* %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"struct.xpathyy::YyParser::stack_symbol_type", %"struct.xpathyy::YyParser::stack_symbol_type"* %65, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %68) #17
  br label %69

69:                                               ; preds = %64, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.213"*, %"class.blink::xpath::Expression"*) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase.213", %"class.blink::PersistentBase.213"* %0, i64 0, i32 0
  store %"class.blink::xpath::Expression"* %1, %"class.blink::xpath::Expression"** %3, align 8
  %4 = ptrtoint %"class.blink::xpath::Expression"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %35
    i64 -1, label %35
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase.213", %"class.blink::PersistentBase.213"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %6, align 8
  %8 = icmp eq %"class.blink::PersistentNode"* %7, null
  br i1 %8, label %9, label %58

9:                                                ; preds = %5
  %10 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %11 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %10, i64 0, i32 1
  %12 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %11) #18
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %16, !prof !2

14:                                               ; preds = %9
  %15 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %11, i8* %15) #18
  br label %16

16:                                               ; preds = %14, %9
  %17 = phi i8* [ %15, %14 ], [ %12, %9 ]
  %18 = bitcast i8* %17 to %"class.blink::ThreadState"**
  %19 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  %24 = icmp eq %"class.blink::PersistentNode"* %23, null
  br i1 %24, label %25, label %28, !prof !2

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %26) #18
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  br label %28

28:                                               ; preds = %25, %16
  %29 = phi %"class.blink::PersistentNode"* [ %27, %25 ], [ %23, %16 ]
  %30 = bitcast %"class.blink::PersistentNode"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.blink::PersistentRegion"* %21 to i64*
  store i64 %31, i64* %32, align 8
  %33 = bitcast %"class.blink::PersistentNode"* %29 to %"class.blink::PersistentBase.213"**
  store %"class.blink::PersistentBase.213"* %0, %"class.blink::PersistentBase.213"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %29, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_5xpath10ExpressionELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %34, align 8
  store %"class.blink::PersistentNode"* %29, %"class.blink::PersistentNode"** %6, align 8
  br label %58

35:                                               ; preds = %2, %2
  %36 = getelementptr inbounds %"class.blink::PersistentBase.213", %"class.blink::PersistentBase.213"* %0, i64 0, i32 1, i32 0
  %37 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %38 = icmp eq %"class.blink::PersistentNode"* %37, null
  br i1 %38, label %58, label %39

39:                                               ; preds = %35
  %40 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %41 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %40, i64 0, i32 1
  %42 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %41) #18
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %46, !prof !2

44:                                               ; preds = %39
  %45 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %41, i8* %45) #18
  br label %46

46:                                               ; preds = %44, %39
  %47 = phi i8* [ %45, %44 ], [ %42, %39 ]
  %48 = bitcast i8* %47 to %"class.blink::ThreadState"**
  %49 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %50, align 8
  %52 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %53 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %51, i64 0, i32 0, i32 0
  %54 = bitcast %"class.blink::PersistentRegion"* %51 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.blink::PersistentNode"* %52 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %52, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %57, align 8
  store %"class.blink::PersistentNode"* %52, %"class.blink::PersistentNode"** %53, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %36, align 8
  br label %58

58:                                               ; preds = %5, %46, %35, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_5xpath12LocationPathELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.215"*, %"class.blink::xpath::LocationPath"*) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase.215", %"class.blink::PersistentBase.215"* %0, i64 0, i32 0
  store %"class.blink::xpath::LocationPath"* %1, %"class.blink::xpath::LocationPath"** %3, align 8
  %4 = ptrtoint %"class.blink::xpath::LocationPath"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %35
    i64 -1, label %35
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase.215", %"class.blink::PersistentBase.215"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %6, align 8
  %8 = icmp eq %"class.blink::PersistentNode"* %7, null
  br i1 %8, label %9, label %58

9:                                                ; preds = %5
  %10 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %11 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %10, i64 0, i32 1
  %12 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %11) #18
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %16, !prof !2

14:                                               ; preds = %9
  %15 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %11, i8* %15) #18
  br label %16

16:                                               ; preds = %14, %9
  %17 = phi i8* [ %15, %14 ], [ %12, %9 ]
  %18 = bitcast i8* %17 to %"class.blink::ThreadState"**
  %19 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  %24 = icmp eq %"class.blink::PersistentNode"* %23, null
  br i1 %24, label %25, label %28, !prof !2

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %26) #18
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  br label %28

28:                                               ; preds = %25, %16
  %29 = phi %"class.blink::PersistentNode"* [ %27, %25 ], [ %23, %16 ]
  %30 = bitcast %"class.blink::PersistentNode"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.blink::PersistentRegion"* %21 to i64*
  store i64 %31, i64* %32, align 8
  %33 = bitcast %"class.blink::PersistentNode"* %29 to %"class.blink::PersistentBase.215"**
  store %"class.blink::PersistentBase.215"* %0, %"class.blink::PersistentBase.215"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %29, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_5xpath12LocationPathELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %34, align 8
  store %"class.blink::PersistentNode"* %29, %"class.blink::PersistentNode"** %6, align 8
  br label %58

35:                                               ; preds = %2, %2
  %36 = getelementptr inbounds %"class.blink::PersistentBase.215", %"class.blink::PersistentBase.215"* %0, i64 0, i32 1, i32 0
  %37 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %38 = icmp eq %"class.blink::PersistentNode"* %37, null
  br i1 %38, label %58, label %39

39:                                               ; preds = %35
  %40 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %41 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %40, i64 0, i32 1
  %42 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %41) #18
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %46, !prof !2

44:                                               ; preds = %39
  %45 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %41, i8* %45) #18
  br label %46

46:                                               ; preds = %44, %39
  %47 = phi i8* [ %45, %44 ], [ %42, %39 ]
  %48 = bitcast i8* %47 to %"class.blink::ThreadState"**
  %49 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %50, align 8
  %52 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %53 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %51, i64 0, i32 0, i32 0
  %54 = bitcast %"class.blink::PersistentRegion"* %51 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.blink::PersistentNode"* %52 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %52, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %57, align 8
  store %"class.blink::PersistentNode"* %52, %"class.blink::PersistentNode"** %53, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %36, align 8
  br label %58

58:                                               ; preds = %5, %46, %35, %28
  ret void
}

declare void @_ZN5blink5xpath12LocationPathC1Ev(%"class.blink::xpath::LocationPath"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #18
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #18
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_5xpath9ParseNodeEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_5xpath9ParseNodeEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_5xpath9ParseNodeEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #18
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5xpath9ParseNodeEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_5xpath9ParseNodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::xpath::ParseNode"*
  %4 = bitcast i8* %1 to void (%"class.blink::xpath::ParseNode"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::xpath::ParseNode"*, %"class.blink::Visitor"*)**, void (%"class.blink::xpath::ParseNode"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::xpath::ParseNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::xpath::ParseNode"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::xpath::ParseNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::xpath::ParseNode"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::xpath::ParseNode"* %3, %"class.blink::Visitor"* %0) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_5xpath9ParseNodeEE8FinalizeEPv(i8*) #1 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::xpath::ParseNode"*
  %3 = bitcast i8* %0 to void (%"class.blink::xpath::ParseNode"*)***
  %4 = load void (%"class.blink::xpath::ParseNode"*)**, void (%"class.blink::xpath::ParseNode"*)*** %3, align 8
  %5 = load void (%"class.blink::xpath::ParseNode"*)*, void (%"class.blink::xpath::ParseNode"*)** %4, align 8
  tail call void %5(%"class.blink::xpath::ParseNode"* %2) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_5xpath9ParseNodeEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink5xpath4StepC1ENS1_4AxisERKNS1_8NodeTestERNS_10HeapVectorINS_6MemberINS0_9PredicateEEELj0EEE(%"class.blink::xpath::Step"*, i32, %"class.blink::xpath::Step::NodeTest"* dereferenceable(40), %"class.blink::HeapVector.201"* dereferenceable(16)) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_5xpath4StepELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS2_(%"class.blink::PersistentBase.229"*, %"class.blink::xpath::Step"*) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase.229", %"class.blink::PersistentBase.229"* %0, i64 0, i32 0
  store %"class.blink::xpath::Step"* %1, %"class.blink::xpath::Step"** %3, align 8
  %4 = ptrtoint %"class.blink::xpath::Step"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %35
    i64 -1, label %35
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase.229", %"class.blink::PersistentBase.229"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %6, align 8
  %8 = icmp eq %"class.blink::PersistentNode"* %7, null
  br i1 %8, label %9, label %58

9:                                                ; preds = %5
  %10 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %11 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %10, i64 0, i32 1
  %12 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %11) #18
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %16, !prof !2

14:                                               ; preds = %9
  %15 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %11, i8* %15) #18
  br label %16

16:                                               ; preds = %14, %9
  %17 = phi i8* [ %15, %14 ], [ %12, %9 ]
  %18 = bitcast i8* %17 to %"class.blink::ThreadState"**
  %19 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  %24 = icmp eq %"class.blink::PersistentNode"* %23, null
  br i1 %24, label %25, label %28, !prof !2

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %26) #18
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  br label %28

28:                                               ; preds = %25, %16
  %29 = phi %"class.blink::PersistentNode"* [ %27, %25 ], [ %23, %16 ]
  %30 = bitcast %"class.blink::PersistentNode"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.blink::PersistentRegion"* %21 to i64*
  store i64 %31, i64* %32, align 8
  %33 = bitcast %"class.blink::PersistentNode"* %29 to %"class.blink::PersistentBase.229"**
  store %"class.blink::PersistentBase.229"* %0, %"class.blink::PersistentBase.229"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %29, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_5xpath4StepELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %34, align 8
  store %"class.blink::PersistentNode"* %29, %"class.blink::PersistentNode"** %6, align 8
  br label %58

35:                                               ; preds = %2, %2
  %36 = getelementptr inbounds %"class.blink::PersistentBase.229", %"class.blink::PersistentBase.229"* %0, i64 0, i32 1, i32 0
  %37 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %38 = icmp eq %"class.blink::PersistentNode"* %37, null
  br i1 %38, label %58, label %39

39:                                               ; preds = %35
  %40 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %41 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %40, i64 0, i32 1
  %42 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %41) #18
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %46, !prof !2

44:                                               ; preds = %39
  %45 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %41, i8* %45) #18
  br label %46

46:                                               ; preds = %44, %39
  %47 = phi i8* [ %45, %44 ], [ %42, %39 ]
  %48 = bitcast i8* %47 to %"class.blink::ThreadState"**
  %49 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %50, align 8
  %52 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %53 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %51, i64 0, i32 0, i32 0
  %54 = bitcast %"class.blink::PersistentRegion"* %51 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.blink::PersistentNode"* %52 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %52, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %57, align 8
  store %"class.blink::PersistentNode"* %52, %"class.blink::PersistentNode"** %53, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %36, align 8
  br label %58

58:                                               ; preds = %5, %46, %35, %28
  ret void
}

declare void @_ZN5blink5xpath4StepC1ENS1_4AxisERKNS1_8NodeTestE(%"class.blink::xpath::Step"*, i32, %"class.blink::xpath::Step::NodeTest"* dereferenceable(40)) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath4Step8NodeTestEEEPhm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #18
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #18
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_5xpath4Step8NodeTestEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_5xpath4Step8NodeTestEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_5xpath4Step8NodeTestEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #18
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5xpath4Step8NodeTestEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_5xpath4Step8NodeTestEE8FinalizeEPv(i8*) #1 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 16
  %3 = bitcast i8* %2 to %"class.WTF::StringImpl"**
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #18
  br label %19

19:                                               ; preds = %18, %15, %1
  %20 = getelementptr inbounds i8, i8* %0, i64 8
  %21 = bitcast i8* %20 to %"class.WTF::StringImpl"**
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %33

31:                                               ; preds = %24
  %32 = add i32 %30, -1
  store i32 %32, i32* %29, align 4
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi i32 [ %32, %31 ], [ %30, %24 ]
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #18
  br label %37

37:                                               ; preds = %19, %33, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_5xpath4Step8NodeTestEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_5xpath4Step8NodeTestELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS3_(%"class.blink::PersistentBase.225"*, %"class.blink::xpath::Step::NodeTest"*) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase.225", %"class.blink::PersistentBase.225"* %0, i64 0, i32 0
  store %"class.blink::xpath::Step::NodeTest"* %1, %"class.blink::xpath::Step::NodeTest"** %3, align 8
  %4 = ptrtoint %"class.blink::xpath::Step::NodeTest"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %35
    i64 -1, label %35
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase.225", %"class.blink::PersistentBase.225"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %6, align 8
  %8 = icmp eq %"class.blink::PersistentNode"* %7, null
  br i1 %8, label %9, label %58

9:                                                ; preds = %5
  %10 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %11 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %10, i64 0, i32 1
  %12 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %11) #18
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %16, !prof !2

14:                                               ; preds = %9
  %15 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %11, i8* %15) #18
  br label %16

16:                                               ; preds = %14, %9
  %17 = phi i8* [ %15, %14 ], [ %12, %9 ]
  %18 = bitcast i8* %17 to %"class.blink::ThreadState"**
  %19 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  %24 = icmp eq %"class.blink::PersistentNode"* %23, null
  br i1 %24, label %25, label %28, !prof !2

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %26) #18
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  br label %28

28:                                               ; preds = %25, %16
  %29 = phi %"class.blink::PersistentNode"* [ %27, %25 ], [ %23, %16 ]
  %30 = bitcast %"class.blink::PersistentNode"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.blink::PersistentRegion"* %21 to i64*
  store i64 %31, i64* %32, align 8
  %33 = bitcast %"class.blink::PersistentNode"* %29 to %"class.blink::PersistentBase.225"**
  store %"class.blink::PersistentBase.225"* %0, %"class.blink::PersistentBase.225"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %29, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_5xpath4Step8NodeTestELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS7_15TracePersistentEPNS_7VisitorEEEE10TrampolineES9_PKv, void (%"class.blink::Visitor"*, i8*)** %34, align 8
  store %"class.blink::PersistentNode"* %29, %"class.blink::PersistentNode"** %6, align 8
  br label %58

35:                                               ; preds = %2, %2
  %36 = getelementptr inbounds %"class.blink::PersistentBase.225", %"class.blink::PersistentBase.225"* %0, i64 0, i32 1, i32 0
  %37 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %38 = icmp eq %"class.blink::PersistentNode"* %37, null
  br i1 %38, label %58, label %39

39:                                               ; preds = %35
  %40 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %41 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %40, i64 0, i32 1
  %42 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %41) #18
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %46, !prof !2

44:                                               ; preds = %39
  %45 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %41, i8* %45) #18
  br label %46

46:                                               ; preds = %44, %39
  %47 = phi i8* [ %45, %44 ], [ %42, %39 ]
  %48 = bitcast i8* %47 to %"class.blink::ThreadState"**
  %49 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %50, align 8
  %52 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %53 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %51, i64 0, i32 0, i32 0
  %54 = bitcast %"class.blink::PersistentRegion"* %51 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.blink::PersistentNode"* %52 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %52, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %57, align 8
  store %"class.blink::PersistentNode"* %52, %"class.blink::PersistentNode"** %53, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %36, align 8
  br label %58

58:                                               ; preds = %46, %35, %28, %5
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_10HeapVectorINS_6MemberINS_5xpath9PredicateEEELj0EEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS6_(%"class.blink::PersistentBase.200"*, %"class.blink::HeapVector.201"*) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase.200", %"class.blink::PersistentBase.200"* %0, i64 0, i32 0
  store %"class.blink::HeapVector.201"* %1, %"class.blink::HeapVector.201"** %3, align 8
  %4 = ptrtoint %"class.blink::HeapVector.201"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %35
    i64 -1, label %35
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase.200", %"class.blink::PersistentBase.200"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %6, align 8
  %8 = icmp eq %"class.blink::PersistentNode"* %7, null
  br i1 %8, label %9, label %58

9:                                                ; preds = %5
  %10 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %11 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %10, i64 0, i32 1
  %12 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %11) #18
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %16, !prof !2

14:                                               ; preds = %9
  %15 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %11, i8* %15) #18
  br label %16

16:                                               ; preds = %14, %9
  %17 = phi i8* [ %15, %14 ], [ %12, %9 ]
  %18 = bitcast i8* %17 to %"class.blink::ThreadState"**
  %19 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  %24 = icmp eq %"class.blink::PersistentNode"* %23, null
  br i1 %24, label %25, label %28, !prof !2

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %26) #18
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  br label %28

28:                                               ; preds = %25, %16
  %29 = phi %"class.blink::PersistentNode"* [ %27, %25 ], [ %23, %16 ]
  %30 = bitcast %"class.blink::PersistentNode"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.blink::PersistentRegion"* %21 to i64*
  store i64 %31, i64* %32, align 8
  %33 = bitcast %"class.blink::PersistentNode"* %29 to %"class.blink::PersistentBase.200"**
  store %"class.blink::PersistentBase.200"* %0, %"class.blink::PersistentBase.200"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %29, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_10HeapVectorINS_6MemberINS_5xpath9PredicateEEELj0EEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKSA_15TracePersistentEPNS_7VisitorEEEE10TrampolineESC_PKv, void (%"class.blink::Visitor"*, i8*)** %34, align 8
  store %"class.blink::PersistentNode"* %29, %"class.blink::PersistentNode"** %6, align 8
  br label %58

35:                                               ; preds = %2, %2
  %36 = getelementptr inbounds %"class.blink::PersistentBase.200", %"class.blink::PersistentBase.200"* %0, i64 0, i32 1, i32 0
  %37 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %38 = icmp eq %"class.blink::PersistentNode"* %37, null
  br i1 %38, label %58, label %39

39:                                               ; preds = %35
  %40 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %41 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %40, i64 0, i32 1
  %42 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %41) #18
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %46, !prof !2

44:                                               ; preds = %39
  %45 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %41, i8* %45) #18
  br label %46

46:                                               ; preds = %44, %39
  %47 = phi i8* [ %45, %44 ], [ %42, %39 ]
  %48 = bitcast i8* %47 to %"class.blink::ThreadState"**
  %49 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %50, align 8
  %52 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %53 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %51, i64 0, i32 0, i32 0
  %54 = bitcast %"class.blink::PersistentRegion"* %51 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.blink::PersistentNode"* %52 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %52, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %57, align 8
  store %"class.blink::PersistentNode"* %52, %"class.blink::PersistentNode"** %53, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %36, align 8
  br label %58

58:                                               ; preds = %5, %46, %35, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_5xpath9PredicateEEELj0EEEEEPhm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #18
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #18
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_5xpath9PredicateEEELj0EEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_5xpath9PredicateEEELj0EEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_5xpath9PredicateEEELj0EEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #18
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([108 x i8], [108 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10HeapVectorINS1_6MemberINS1_5xpath9PredicateEEELj0EEEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_5xpath9PredicateEEELj0EEEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink5xpath9PredicateC1EPNS0_10ExpressionE(%"class.blink::xpath::Predicate"*, %"class.blink::xpath::Expression"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9PredicateEEEPhm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #18
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #18
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_5xpath9PredicateEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_5xpath9PredicateEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_5xpath9PredicateEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #18
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5xpath9PredicateEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_5xpath9PredicateEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0), i8 1 }
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath9PredicateEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS4_EEvOT_(%"class.WTF::Vector.204"*, %"class.blink::xpath::Predicate"** dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.204", %"class.WTF::Vector.204"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.204", %"class.WTF::Vector.204"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath9PredicateEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.204"* %0, i32 %14) #18
  %15 = getelementptr inbounds %"class.WTF::Vector.204", %"class.WTF::Vector.204"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.207"*, %"class.blink::Member.207"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.207", %"class.blink::Member.207"* %16, i64 %18
  %20 = bitcast %"class.blink::xpath::Predicate"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.207"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #18
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath9PredicateEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.204"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.204", %"class.WTF::Vector.204"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.204", %"class.WTF::Vector.204"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.207"*, %"class.blink::Member.207"** %8, align 8
  %10 = icmp eq %"class.blink::Member.207"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_5xpath9PredicateEEEEEmm(i64 %11) #18
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.341"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %14) #18
  %16 = ptrtoint %"class.blink::HeapVectorBacking.341"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.204"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.341", %"class.blink::HeapVectorBacking.341"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #18
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.207"*, %"class.blink::Member.207"** %8, align 8
  %26 = icmp eq %"class.blink::Member.207"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.207"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #18
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #18
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #18
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.19, i64 0, i64 0)) #18
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #18
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath9PredicateEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.204"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath9PredicateEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.204"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.204"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.204", %"class.WTF::Vector.204"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.204"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.204", %"class.WTF::Vector.204"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #18
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #18
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_5xpath9PredicateEEEEEmm(i64 %14) #18
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.341"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %16) #18
  %18 = ptrtoint %"class.blink::HeapVectorBacking.341"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.204", %"class.WTF::Vector.204"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.207"*, %"class.blink::Member.207"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.204", %"class.WTF::Vector.204"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.341"* %17, null
  %23 = icmp ne %"class.blink::Member.207"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.207"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.204"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.341", %"class.blink::HeapVectorBacking.341"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #18
  %33 = bitcast %"class.WTF::Vector.204"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #18
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #18
  %42 = bitcast %"class.WTF::Vector.204"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.204", %"class.WTF::Vector.204"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.341", %"class.blink::HeapVectorBacking.341"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #18
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_5xpath9PredicateEEEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #18
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #18
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.20, i64 0, i64 0), i8* %11, i8* %12) #18
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.21, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #18
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #18
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #18
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.341"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #18
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #18
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i64 0, i64 0), i8* %11, i8* %12) #18
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.23, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #18
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #18
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #18
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.341"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.341"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #18
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #18
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #18
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([173 x i8], [173 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_5xpath9PredicateEEENS_12VectorTraitsIS6_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath9PredicateEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink5xpath17VariableReferenceC1ERKN3WTF6StringE(%"class.blink::xpath::VariableReference"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #8

declare void @_ZN5blink5xpath16StringExpressionC1ERKN3WTF6StringE(%"class.blink::xpath::StringExpression"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #8

declare void @_ZN5blink5xpath6NumberC1Ed(%"class.blink::xpath::Number"*, double) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_5xpath10ExpressionEEELj0EEEEEPhm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #18
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #18
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_5xpath10ExpressionEEELj0EEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_5xpath10ExpressionEEELj0EEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_5xpath10ExpressionEEELj0EEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #18
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10HeapVectorINS1_6MemberINS1_5xpath10ExpressionEEELj0EEEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_5xpath10ExpressionEEELj0EEEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_10HeapVectorINS_6MemberINS_5xpath10ExpressionEEELj0EEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS6_(%"class.blink::PersistentBase"*, %"class.blink::HeapVector"*) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 0
  store %"class.blink::HeapVector"* %1, %"class.blink::HeapVector"** %3, align 8
  %4 = ptrtoint %"class.blink::HeapVector"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %35
    i64 -1, label %35
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %6, align 8
  %8 = icmp eq %"class.blink::PersistentNode"* %7, null
  br i1 %8, label %9, label %58

9:                                                ; preds = %5
  %10 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %11 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %10, i64 0, i32 1
  %12 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %11) #18
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %16, !prof !2

14:                                               ; preds = %9
  %15 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %11, i8* %15) #18
  br label %16

16:                                               ; preds = %14, %9
  %17 = phi i8* [ %15, %14 ], [ %12, %9 ]
  %18 = bitcast i8* %17 to %"class.blink::ThreadState"**
  %19 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  %24 = icmp eq %"class.blink::PersistentNode"* %23, null
  br i1 %24, label %25, label %28, !prof !2

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %26) #18
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  br label %28

28:                                               ; preds = %25, %16
  %29 = phi %"class.blink::PersistentNode"* [ %27, %25 ], [ %23, %16 ]
  %30 = bitcast %"class.blink::PersistentNode"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.blink::PersistentRegion"* %21 to i64*
  store i64 %31, i64* %32, align 8
  %33 = bitcast %"class.blink::PersistentNode"* %29 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %0, %"class.blink::PersistentBase"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %29, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_10HeapVectorINS_6MemberINS_5xpath10ExpressionEEELj0EEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKSA_15TracePersistentEPNS_7VisitorEEEE10TrampolineESC_PKv, void (%"class.blink::Visitor"*, i8*)** %34, align 8
  store %"class.blink::PersistentNode"* %29, %"class.blink::PersistentNode"** %6, align 8
  br label %58

35:                                               ; preds = %2, %2
  %36 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 1, i32 0
  %37 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %38 = icmp eq %"class.blink::PersistentNode"* %37, null
  br i1 %38, label %58, label %39

39:                                               ; preds = %35
  %40 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %41 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %40, i64 0, i32 1
  %42 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %41) #18
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %46, !prof !2

44:                                               ; preds = %39
  %45 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #18
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %41, i8* %45) #18
  br label %46

46:                                               ; preds = %44, %39
  %47 = phi i8* [ %45, %44 ], [ %42, %39 ]
  %48 = bitcast i8* %47 to %"class.blink::ThreadState"**
  %49 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %50, align 8
  %52 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %53 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %51, i64 0, i32 0, i32 0
  %54 = bitcast %"class.blink::PersistentRegion"* %51 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.blink::PersistentNode"* %52 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %52, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %57, align 8
  store %"class.blink::PersistentNode"* %52, %"class.blink::PersistentNode"** %53, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %36, align 8
  br label %58

58:                                               ; preds = %5, %46, %35, %28
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRNS1_10PersistentIS4_EEEEvOT_(%"class.WTF::Vector"*, %"class.blink::Persistent.212"* dereferenceable(16)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %14) #18
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %18
  %20 = bitcast %"class.blink::Persistent.212"* %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #18
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

declare void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"*) unnamed_addr #8

declare void @_ZN5blink5xpath4PathC1EPNS0_10ExpressionEPNS0_12LocationPathE(%"class.blink::xpath::Path"*, %"class.blink::xpath::Expression"*, %"class.blink::xpath::LocationPath"*) unnamed_addr #8

declare void @_ZN5blink5xpath6FilterC1EPNS0_10ExpressionERNS_10HeapVectorINS_6MemberINS0_9PredicateEEELj0EEE(%"class.blink::xpath::Filter"*, %"class.blink::xpath::Expression"*, %"class.blink::HeapVector.201"* dereferenceable(16)) unnamed_addr #8

declare void @_ZN5blink5xpath9LogicalOpC1ENS1_6OpcodeEPNS0_10ExpressionES4_(%"class.blink::xpath::LogicalOp"*, i32, %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"*) unnamed_addr #8

declare void @_ZN5blink5xpath8EqTestOpC1ENS1_6OpcodeEPNS0_10ExpressionES4_(%"class.blink::xpath::EqTestOp"*, i32, %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"*) unnamed_addr #8

declare void @_ZN5blink5xpath9NumericOpC1ENS1_6OpcodeEPNS0_10ExpressionES4_(%"class.blink::xpath::NumericOp"*, i32, %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"*) unnamed_addr #8

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #14

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { builtin nounwind }
attributes #18 = { nounwind }
attributes #19 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
