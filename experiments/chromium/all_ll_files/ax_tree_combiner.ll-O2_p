; ModuleID = '../../ui/accessibility/ax_tree_combiner.cc'
source_filename = "../../ui/accessibility/ax_tree_combiner.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::AXNode::OwnerTree" = type { i32 (...)** }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.ui::AXLanguageDetectionManager"* }
%"class.ui::AXLanguageDetectionManager" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.112", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.112" = type { %"class.std::__1::__vector_base.113" }
%"class.std::__1::__vector_base.113" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.120" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.114" }
%"struct.std::__1::__atomic_base.114" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.115" }
%"struct.std::__1::atomic.115" = type { %"struct.std::__1::__atomic_base.116" }
%"struct.std::__1::__atomic_base.116" = type { %"struct.std::__1::__atomic_base.117" }
%"struct.std::__1::__atomic_base.117" = type { %"struct.std::__1::__cxx_atomic_impl.118" }
%"struct.std::__1::__cxx_atomic_impl.118" = type { %"struct.std::__1::__cxx_atomic_base_impl.119" }
%"struct.std::__1::__cxx_atomic_base_impl.119" = type { i8 }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::AXNode" = type { i32 (...)**, %"class.ui::AXNode::OwnerTree"*, i64, i64, i64, %"class.ui::AXNode"*, %"class.std::__1::vector.125", %"struct.ui::AXNodeData", %"struct.ui::AXHypertext", %"struct.ui::AXHypertext", %"class.std::__1::unique_ptr.152" }
%"class.std::__1::vector.125" = type { %"class.std::__1::__vector_base.126" }
%"class.std::__1::__vector_base.126" = type { %"class.ui::AXNode"**, %"class.ui::AXNode"**, %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.ui::AXNode"** }
%"struct.ui::AXNodeData" = type { i32 (...)**, i32, i32, i32, i64, %"class.std::__1::vector.4", %"class.std::__1::vector.11", %"class.std::__1::vector.19", %"class.std::__1::vector.27", %"class.std::__1::vector.35", %"class.std::__1::vector.50", %"class.std::__1::vector.58", %"class.std::__1::vector.38", %"struct.ui::AXRelativeBounds" }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.6" }
%"struct.std::__1::pair" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"struct.std::__1::pair.13"*, %"struct.std::__1::pair.13"*, %"class.std::__1::__compressed_pair.14" }
%"struct.std::__1::pair.13" = type { i32, i32 }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.std::__1::pair.13"* }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %"struct.std::__1::pair.21"*, %"struct.std::__1::pair.21"*, %"class.std::__1::__compressed_pair.22" }
%"struct.std::__1::pair.21" = type opaque
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.std::__1::pair.21"* }
%"class.std::__1::vector.27" = type { %"class.std::__1::__vector_base.28" }
%"class.std::__1::__vector_base.28" = type { %"struct.std::__1::pair.29"*, %"struct.std::__1::pair.29"*, %"class.std::__1::__compressed_pair.30" }
%"struct.std::__1::pair.29" = type opaque
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.std::__1::pair.29"* }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"struct.std::__1::pair.37"*, %"struct.std::__1::pair.37"*, %"class.std::__1::__compressed_pair.45" }
%"struct.std::__1::pair.37" = type { i32, %"class.std::__1::vector.38" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.std::__1::pair.37"* }
%"class.std::__1::vector.50" = type { %"class.std::__1::__vector_base.51" }
%"class.std::__1::__vector_base.51" = type { %"struct.std::__1::pair.52"*, %"struct.std::__1::pair.52"*, %"class.std::__1::__compressed_pair.53" }
%"struct.std::__1::pair.52" = type opaque
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"struct.std::__1::pair.52"* }
%"class.std::__1::vector.58" = type { %"class.std::__1::__vector_base.59" }
%"class.std::__1::__vector_base.59" = type { %"struct.std::__1::pair.60"*, %"struct.std::__1::pair.60"*, %"class.std::__1::__compressed_pair.61" }
%"struct.std::__1::pair.60" = type opaque
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.std::__1::pair.60"* }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { i32*, i32*, %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { i32* }
%"struct.ui::AXRelativeBounds" = type { i32 (...)**, i32, %"class.gfx::RectF", %"class.std::__1::unique_ptr" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.gfx::Transform"* }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"struct.ui::AXHypertext" = type { i8, %"class.std::__1::map.132", %"class.std::__1::basic_string.143" }
%"class.std::__1::map.132" = type { %"class.std::__1::__tree.133" }
%"class.std::__1::__tree.133" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.134", %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { i64 }
%"class.std::__1::basic_string.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.146 }
%union.anon.146 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"struct.ui::AXLanguageInfo"* }
%"struct.ui::AXLanguageInfo" = type opaque
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.158", %"class.std::__1::__compressed_pair.166", %"class.std::__1::__compressed_pair.171", %"class.std::__1::__compressed_pair.173", [4 x i8] }>
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160", %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { float }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%union.anon = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::map.176" = type { %"class.std::__1::__tree.177" }
%"class.std::__1::__tree.177" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.178", %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"class.std::__1::map.187" = type { %"class.std::__1::__tree.188" }
%"class.std::__1::__tree.188" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.189", %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"class.std::__1::map.198" = type { %"class.std::__1::__tree.199" }
%"class.std::__1::__tree.199" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.200", %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"class.std::__1::unordered_map.207" = type { %"class.std::__1::__hash_table.208" }
%"class.std::__1::__hash_table.208" = type <{ %"class.std::__1::unique_ptr.209", %"class.std::__1::__compressed_pair.219", %"class.std::__1::__compressed_pair.224", %"class.std::__1::__compressed_pair.227", [4 x i8] }>
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211", %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"struct.std::__1::__hash_node_base.212"** }
%"struct.std::__1::__hash_node_base.212" = type { %"struct.std::__1::__hash_node_base.212"* }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.std::__1::__bucket_list_deallocator.214" }
%"class.std::__1::__bucket_list_deallocator.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"struct.std::__1::__hash_node_base.212" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"class.std::__1::unordered_map.231" = type { %"class.std::__1::__hash_table.232" }
%"class.std::__1::__hash_table.232" = type <{ %"class.std::__1::unique_ptr.233", %"class.std::__1::__compressed_pair.243", %"class.std::__1::__compressed_pair.248", %"class.std::__1::__compressed_pair.251", [4 x i8] }>
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235", %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"struct.std::__1::__hash_node_base.236"** }
%"struct.std::__1::__hash_node_base.236" = type { %"struct.std::__1::__hash_node_base.236"* }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.std::__1::__bucket_list_deallocator.238" }
%"class.std::__1::__bucket_list_deallocator.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.std::__1::__hash_node_base.236" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"class.std::__1::vector.74" = type { %"class.std::__1::__vector_base.75" }
%"class.std::__1::__vector_base.75" = type { %"struct.ui::AXEventIntent"*, %"struct.ui::AXEventIntent"*, %"class.std::__1::__compressed_pair.76" }
%"struct.ui::AXEventIntent" = type { i32 (...)**, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.ui::AXEventIntent"* }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.ui::AXTreeCombiner" = type { %"class.std::__1::vector", %"class.ui::AXTreeID", i32, %"class.std::__1::map", %"class.std::__1::map.94", %"struct.ui::AXTreeUpdate" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.ui::AXTreeUpdate"*, %"struct.ui::AXTreeUpdate"*, %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.ui::AXTreeUpdate"* }
%"class.ui::AXTreeID" = type { i32, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.86", %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"class.std::__1::map.94" = type { %"class.std::__1::__tree.95" }
%"class.std::__1::__tree.95" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.96", %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.ui::AXTreeUpdate" = type { i8, [7 x i8], %"struct.ui::AXTreeData", i32, i32, %"class.std::__1::vector.2", i32, i32, %"class.std::__1::vector.74" }
%"struct.ui::AXTreeData" = type <{ i32 (...)**, %"class.ui::AXTreeID", %"class.ui::AXTreeID", %"class.ui::AXTreeID", %"class.std::__1::basic_string", i8, [3 x i8], float, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"*, %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"struct.ui::AXNodeData"* }
%"class.std::__1::__tree_node.256" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type.257" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type.257" = type { %"struct.std::__1::pair.258" }
%"struct.std::__1::pair.258" = type { %"struct.std::__1::pair.255", i32, [4 x i8] }
%"struct.std::__1::pair.255" = type <{ %"class.ui::AXTreeID", i32, [4 x i8] }>
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.105" }
%"struct.std::__1::pair.105" = type { %"class.ui::AXTreeID", %"struct.ui::AXTreeUpdate"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.ui::AXTreeID"* }
%"class.std::__1::tuple.264" = type { i8 }
%"class.ui::AXTree" = type { %"class.ui::AXNode::OwnerTree", %"class.std::__1::unique_ptr.106", %"class.base::ObserverList", %"class.ui::AXNode"*, %"class.std::__1::unordered_map", %"class.std::__1::basic_string", %"struct.ui::AXTreeData", %"class.std::__1::map.176", %"class.std::__1::map.187", %"class.std::__1::map.198", %"class.std::__1::unordered_map.207", i32, [4 x i8], %"class.std::__1::unordered_map.231", i8, i8, %"class.std::__1::vector.74" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::tuple.274" = type { %"struct.std::__1::__tuple_impl.275" }
%"struct.std::__1::__tuple_impl.275" = type { %"class.std::__1::__tuple_leaf.276" }
%"class.std::__1::__tuple_leaf.276" = type { %"struct.std::__1::pair.255"* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN2ui10AXTreeDataaSERKS0_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN2ui8AXTreeIDEPKNS2_12AXTreeUpdateEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_4pairIN2ui8AXTreeIDEiEEiEENS_19__map_value_compareIS5_S6_NS_4lessIS5_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZNSt3__16vectorIN2ui12AXTreeUpdateENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN2ui8AXTreeIDEPKNS2_12AXTreeUpdateEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSJ_IJEEEEEENS_4pairINS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_4pairIN2ui8AXTreeIDEiEEiEENS_19__map_value_compareIS5_S6_NS_4lessIS5_EELb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSI_IJEEEEEENS2_INS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16vectorIN2ui10AXNodeDataENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

@.str = private unnamed_addr constant [43 x i8] c"../../ui/accessibility/ax_tree_combiner.cc\00", align 1
@.str.1 = private unnamed_addr constant [49 x i8] c"Skipping AXTreeID because its tree ID is unknown\00", align 1
@__const._ZN2ui14AXTreeCombiner7CombineEv.tree = private unnamed_addr constant { %"class.ui::AXNode::OwnerTree", %"class.std::__1::unique_ptr.106", %"class.base::ObserverList", %"class.ui::AXNode"*, %"class.std::__1::unordered_map", %"class.std::__1::basic_string", <{ i32 (...)**, { i32, [4 x i8], { { { { i8, [7 x i8], %union.anon } } } } }, { i32, [4 x i8], { { { { i8, [7 x i8], %union.anon } } } } }, { i32, [4 x i8], { { { { i8, [7 x i8], %union.anon } } } } }, %"class.std::__1::basic_string", i8, [3 x i8], float, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>, %"class.std::__1::map.176", %"class.std::__1::map.187", %"class.std::__1::map.198", %"class.std::__1::unordered_map.207", i32, [4 x i8], %"class.std::__1::unordered_map.231", i8, i8, [6 x i8], %"class.std::__1::vector.74" } { %"class.ui::AXNode::OwnerTree" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, %"class.std::__1::unique_ptr.106" { %"class.std::__1::__compressed_pair.107" { %"struct.std::__1::__compressed_pair_elem.108" { %"class.ui::AXLanguageDetectionManager"* inttoptr (i64 -6148914691236517206 to %"class.ui::AXLanguageDetectionManager"*) } } }, %"class.base::ObserverList" <{ %"class.std::__1::vector.112" { %"class.std::__1::__vector_base.113" { %"class.base::internal::CheckedObserverAdapter"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::CheckedObserverAdapter"*), %"class.base::internal::CheckedObserverAdapter"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::CheckedObserverAdapter"*), %"class.std::__1::__compressed_pair.120" { %"struct.std::__1::__compressed_pair_elem.121" { %"class.base::internal::CheckedObserverAdapter"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::CheckedObserverAdapter"*) } } } }, %"class.base::LinkedList" { %"class.base::LinkNode" { %"class.base::internal::LinkNodeBase" { %"class.base::internal::LinkNodeBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::LinkNodeBase"*), %"class.base::internal::LinkNodeBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::LinkNodeBase"*) } } }, i64 -6148914691236517206, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, %"class.ui::AXNode"* inttoptr (i64 -6148914691236517206 to %"class.ui::AXNode"*), %"class.std::__1::unordered_map" { %"class.std::__1::__hash_table" <{ %"class.std::__1::unique_ptr.158" { %"class.std::__1::__compressed_pair.159" { %"struct.std::__1::__compressed_pair_elem.160" { %"struct.std::__1::__hash_node_base"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base"**) }, %"struct.std::__1::__compressed_pair_elem.161" { %"class.std::__1::__bucket_list_deallocator" { %"class.std::__1::__compressed_pair.162" { %"struct.std::__1::__compressed_pair_elem.92" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.166" { %"struct.std::__1::__compressed_pair_elem.167" { %"struct.std::__1::__hash_node_base" { %"struct.std::__1::__hash_node_base"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base"*) } } }, %"class.std::__1::__compressed_pair.171" { %"struct.std::__1::__compressed_pair_elem.92" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.173" { %"struct.std::__1::__compressed_pair_elem.174" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.0 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, <{ i32 (...)**, { i32, [4 x i8], { { { { i8, [7 x i8], %union.anon } } } } }, { i32, [4 x i8], { { { { i8, [7 x i8], %union.anon } } } } }, { i32, [4 x i8], { { { { i8, [7 x i8], %union.anon } } } } }, %"class.std::__1::basic_string", i8, [3 x i8], float, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, [4 x i8] }> <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), { i32, [4 x i8], { { { { i8, [7 x i8], %union.anon } } } } } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon } } } } { { { { i8, [7 x i8], %union.anon } } } { { { i8, [7 x i8], %union.anon } } { { i8, [7 x i8], %union.anon } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } } }, { i32, [4 x i8], { { { { i8, [7 x i8], %union.anon } } } } } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon } } } } { { { { i8, [7 x i8], %union.anon } } } { { { i8, [7 x i8], %union.anon } } { { i8, [7 x i8], %union.anon } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } } }, { i32, [4 x i8], { { { { i8, [7 x i8], %union.anon } } } } } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon } } } } { { { { i8, [7 x i8], %union.anon } } } { { { i8, [7 x i8], %union.anon } } { { i8, [7 x i8], %union.anon } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.0 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i8 -86, [3 x i8] c"\AA\AA\AA", float 0xFFFFFFFFE0000000, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.0 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.0 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.0 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, %"class.std::__1::map.176" { %"class.std::__1::__tree.177" { %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__compressed_pair.178" { %"struct.std::__1::__compressed_pair_elem.87" { %"class.std::__1::__tree_end_node" { %"class.std::__1::__tree_node_base"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_node_base"*) } } }, %"class.std::__1::__compressed_pair.182" { %"struct.std::__1::__compressed_pair_elem.92" { i64 -6148914691236517206 } } } }, %"class.std::__1::map.187" { %"class.std::__1::__tree.188" { %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__compressed_pair.189" { %"struct.std::__1::__compressed_pair_elem.87" { %"class.std::__1::__tree_end_node" { %"class.std::__1::__tree_node_base"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_node_base"*) } } }, %"class.std::__1::__compressed_pair.193" { %"struct.std::__1::__compressed_pair_elem.92" { i64 -6148914691236517206 } } } }, %"class.std::__1::map.198" { %"class.std::__1::__tree.199" { %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__compressed_pair.200" { %"struct.std::__1::__compressed_pair_elem.87" { %"class.std::__1::__tree_end_node" { %"class.std::__1::__tree_node_base"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_node_base"*) } } }, %"class.std::__1::__compressed_pair.204" { %"struct.std::__1::__compressed_pair_elem.92" { i64 -6148914691236517206 } } } }, %"class.std::__1::unordered_map.207" { %"class.std::__1::__hash_table.208" <{ %"class.std::__1::unique_ptr.209" { %"class.std::__1::__compressed_pair.210" { %"struct.std::__1::__compressed_pair_elem.211" { %"struct.std::__1::__hash_node_base.212"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.212"**) }, %"struct.std::__1::__compressed_pair_elem.213" { %"class.std::__1::__bucket_list_deallocator.214" { %"class.std::__1::__compressed_pair.215" { %"struct.std::__1::__compressed_pair_elem.92" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.219" { %"struct.std::__1::__compressed_pair_elem.220" { %"struct.std::__1::__hash_node_base.212" { %"struct.std::__1::__hash_node_base.212"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.212"*) } } }, %"class.std::__1::__compressed_pair.224" { %"struct.std::__1::__compressed_pair_elem.92" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.227" { %"struct.std::__1::__compressed_pair_elem.174" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unordered_map.231" { %"class.std::__1::__hash_table.232" <{ %"class.std::__1::unique_ptr.233" { %"class.std::__1::__compressed_pair.234" { %"struct.std::__1::__compressed_pair_elem.235" { %"struct.std::__1::__hash_node_base.236"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.236"**) }, %"struct.std::__1::__compressed_pair_elem.237" { %"class.std::__1::__bucket_list_deallocator.238" { %"class.std::__1::__compressed_pair.239" { %"struct.std::__1::__compressed_pair_elem.92" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.243" { %"struct.std::__1::__compressed_pair_elem.244" { %"struct.std::__1::__hash_node_base.236" { %"struct.std::__1::__hash_node_base.236"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.236"*) } } }, %"class.std::__1::__compressed_pair.248" { %"struct.std::__1::__compressed_pair_elem.92" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.251" { %"struct.std::__1::__compressed_pair_elem.174" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.std::__1::vector.74" { %"class.std::__1::__vector_base.75" { %"struct.ui::AXEventIntent"* inttoptr (i64 -6148914691236517206 to %"struct.ui::AXEventIntent"*), %"struct.ui::AXEventIntent"* inttoptr (i64 -6148914691236517206 to %"struct.ui::AXEventIntent"*), %"class.std::__1::__compressed_pair.76" { %"struct.std::__1::__compressed_pair_elem.77" { %"struct.ui::AXEventIntent"* inttoptr (i64 -6148914691236517206 to %"struct.ui::AXEventIntent"*) } } } } }, align 8
@__const._ZN2ui14AXTreeCombiner11ProcessTreeEPKNS_12AXTreeUpdateE.node = private unnamed_addr constant { i32 (...)**, i32, i32, i32, [4 x i8], i64, %"class.std::__1::vector.4", %"class.std::__1::vector.11", %"class.std::__1::vector.19", %"class.std::__1::vector.27", %"class.std::__1::vector.35", %"class.std::__1::vector.50", %"class.std::__1::vector.58", %"class.std::__1::vector.38", { i32 (...)**, i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::unique_ptr" } } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, %"class.std::__1::vector.4" { %"class.std::__1::__vector_base.5" { %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*), %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*), %"class.std::__1::__compressed_pair.6" { %"struct.std::__1::__compressed_pair_elem.7" { %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*) } } } }, %"class.std::__1::vector.11" { %"class.std::__1::__vector_base.12" { %"struct.std::__1::pair.13"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.13"*), %"struct.std::__1::pair.13"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.13"*), %"class.std::__1::__compressed_pair.14" { %"struct.std::__1::__compressed_pair_elem.15" { %"struct.std::__1::pair.13"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.13"*) } } } }, %"class.std::__1::vector.19" { %"class.std::__1::__vector_base.20" { %"struct.std::__1::pair.21"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.21"*), %"struct.std::__1::pair.21"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.21"*), %"class.std::__1::__compressed_pair.22" { %"struct.std::__1::__compressed_pair_elem.23" { %"struct.std::__1::pair.21"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.21"*) } } } }, %"class.std::__1::vector.27" { %"class.std::__1::__vector_base.28" { %"struct.std::__1::pair.29"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.29"*), %"struct.std::__1::pair.29"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.29"*), %"class.std::__1::__compressed_pair.30" { %"struct.std::__1::__compressed_pair_elem.31" { %"struct.std::__1::pair.29"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.29"*) } } } }, %"class.std::__1::vector.35" { %"class.std::__1::__vector_base.36" { %"struct.std::__1::pair.37"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.37"*), %"struct.std::__1::pair.37"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.37"*), %"class.std::__1::__compressed_pair.45" { %"struct.std::__1::__compressed_pair_elem.46" { %"struct.std::__1::pair.37"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.37"*) } } } }, %"class.std::__1::vector.50" { %"class.std::__1::__vector_base.51" { %"struct.std::__1::pair.52"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.52"*), %"struct.std::__1::pair.52"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.52"*), %"class.std::__1::__compressed_pair.53" { %"struct.std::__1::__compressed_pair_elem.54" { %"struct.std::__1::pair.52"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.52"*) } } } }, %"class.std::__1::vector.58" { %"class.std::__1::__vector_base.59" { %"struct.std::__1::pair.60"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.60"*), %"struct.std::__1::pair.60"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.60"*), %"class.std::__1::__compressed_pair.61" { %"struct.std::__1::__compressed_pair_elem.62" { %"struct.std::__1::pair.60"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.60"*) } } } }, %"class.std::__1::vector.38" { %"class.std::__1::__vector_base.39" { i32* inttoptr (i64 -6148914691236517206 to i32*), i32* inttoptr (i64 -6148914691236517206 to i32*), %"class.std::__1::__compressed_pair.40" { %"struct.std::__1::__compressed_pair_elem.41" { i32* inttoptr (i64 -6148914691236517206 to i32*) } } } }, { i32 (...)**, i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::unique_ptr" } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i32 -1431655766, %"class.gfx::RectF" { %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::SizeF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.66" { %"struct.std::__1::__compressed_pair_elem.67" { %"class.gfx::Transform"* inttoptr (i64 -6148914691236517206 to %"class.gfx::Transform"*) } } } } }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

@_ZN2ui14AXTreeCombinerC1Ev = hidden unnamed_addr alias void (%"class.ui::AXTreeCombiner"*), void (%"class.ui::AXTreeCombiner"*)* @_ZN2ui14AXTreeCombinerC2Ev
@_ZN2ui14AXTreeCombinerD1Ev = hidden unnamed_addr alias void (%"class.ui::AXTreeCombiner"*), void (%"class.ui::AXTreeCombiner"*)* @_ZN2ui14AXTreeCombinerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui14AXTreeCombinerC2Ev(%"class.ui::AXTreeCombiner"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.ui::AXTreeCombiner"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #9
  %3 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 1
  tail call void @_ZN2ui8AXTreeIDC1Ev(%"class.ui::AXTreeID"* %3) #9
  %4 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 2
  store i32 1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %7 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_node_base"** %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %6, %"class.std::__1::__tree_end_node"** %7, align 8
  %9 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %11 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 4, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_node_base"** %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %10, %"class.std::__1::__tree_end_node"** %11, align 8
  %13 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 5
  tail call void @_ZN2ui12AXTreeUpdateC1Ev(%"struct.ui::AXTreeUpdate"* %13) #9
  ret void
}

declare void @_ZN2ui8AXTreeIDC1Ev(%"class.ui::AXTreeID"*) unnamed_addr #1

declare void @_ZN2ui12AXTreeUpdateC1Ev(%"struct.ui::AXTreeUpdate"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui14AXTreeCombinerD2Ev(%"class.ui::AXTreeCombiner"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 5
  tail call void @_ZN2ui12AXTreeUpdateD1Ev(%"struct.ui::AXTreeUpdate"* %2) #9
  %3 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 4, i32 0
  %4 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.256"**
  %6 = load %"class.std::__1::__tree_node.256"*, %"class.std::__1::__tree_node.256"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_4pairIN2ui8AXTreeIDEiEEiEENS_19__map_value_compareIS5_S6_NS_4lessIS5_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.95"* %3, %"class.std::__1::__tree_node.256"* %6) #9
  %7 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 3, i32 0
  %8 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN2ui8AXTreeIDEPKNS2_12AXTreeUpdateEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree"* %7, %"class.std::__1::__tree_node"* %10) #9
  %11 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.ui::AXTreeUpdate"*, %"struct.ui::AXTreeUpdate"** %11, align 8
  %13 = icmp eq %"struct.ui::AXTreeUpdate"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 0, i32 0, i32 1
  %16 = load %"struct.ui::AXTreeUpdate"*, %"struct.ui::AXTreeUpdate"** %15, align 8
  %17 = icmp eq %"struct.ui::AXTreeUpdate"* %16, %12
  br i1 %17, label %24, label %18

18:                                               ; preds = %14, %18
  %19 = phi %"struct.ui::AXTreeUpdate"* [ %20, %18 ], [ %16, %14 ]
  %20 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %19, i64 -1
  tail call void @_ZN2ui12AXTreeUpdateD1Ev(%"struct.ui::AXTreeUpdate"* %20) #9
  %21 = icmp eq %"struct.ui::AXTreeUpdate"* %20, %12
  br i1 %21, label %22, label %18

22:                                               ; preds = %18
  %23 = load %"struct.ui::AXTreeUpdate"*, %"struct.ui::AXTreeUpdate"** %11, align 8
  br label %24

24:                                               ; preds = %22, %14
  %25 = phi %"struct.ui::AXTreeUpdate"* [ %23, %22 ], [ %12, %14 ]
  store %"struct.ui::AXTreeUpdate"* %12, %"struct.ui::AXTreeUpdate"** %15, align 8
  %26 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %25, i64 0, i32 0
  tail call void @_ZdlPv(i8* %26) #10
  br label %27

27:                                               ; preds = %1, %24
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2ui12AXTreeUpdateD1Ev(%"struct.ui::AXTreeUpdate"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui14AXTreeCombiner7AddTreeERKNS_12AXTreeUpdateEb(%"class.ui::AXTreeCombiner"*, %"struct.ui::AXTreeUpdate"* dereferenceable(320), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %1, i64 0, i32 2, i32 1
  %6 = tail call dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui15AXTreeIDUnknownEv() #9
  %7 = tail call zeroext i1 @_ZNK2ui8AXTreeIDeqERKS0_(%"class.ui::AXTreeID"* %5, %"class.ui::AXTreeID"* dereferenceable(32) %6) #9
  br i1 %7, label %8, label %15

8:                                                ; preds = %3
  %9 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 1) #9
  br i1 %9, label %10, label %31

10:                                               ; preds = %8
  %11 = bitcast %"class.logging::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %11) #9
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 21, i32 1) #9
  %12 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %4, i64 0, i32 2
  %13 = bitcast %"class.std::__1::basic_ostringstream"* %12 to %"class.std::__1::basic_ostream"*
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %13, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i64 48) #9
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %11) #9
  br label %31

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = load %"struct.ui::AXTreeUpdate"*, %"struct.ui::AXTreeUpdate"** %16, align 8
  %18 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %19 = load %"struct.ui::AXTreeUpdate"*, %"struct.ui::AXTreeUpdate"** %18, align 8
  %20 = icmp eq %"struct.ui::AXTreeUpdate"* %17, %19
  br i1 %20, label %25, label %21

21:                                               ; preds = %15
  tail call void @_ZN2ui12AXTreeUpdateC1ERKS0_(%"struct.ui::AXTreeUpdate"* %17, %"struct.ui::AXTreeUpdate"* dereferenceable(320) %1) #9
  %22 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %17, i64 1
  %23 = ptrtoint %"struct.ui::AXTreeUpdate"* %22 to i64
  %24 = bitcast %"struct.ui::AXTreeUpdate"** %16 to i64*
  store i64 %23, i64* %24, align 8
  br label %27

25:                                               ; preds = %15
  %26 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 0
  tail call void @_ZNSt3__16vectorIN2ui12AXTreeUpdateENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* %26, %"struct.ui::AXTreeUpdate"* dereferenceable(320) %1) #9
  br label %27

27:                                               ; preds = %21, %25
  br i1 %2, label %28, label %31

28:                                               ; preds = %27
  %29 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 1
  %30 = tail call dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui8AXTreeIDaSERKS0_(%"class.ui::AXTreeID"* %29, %"class.ui::AXTreeID"* dereferenceable(32) %5) #9
  br label %31

31:                                               ; preds = %10, %8, %28, %27
  ret void
}

declare zeroext i1 @_ZNK2ui8AXTreeIDeqERKS0_(%"class.ui::AXTreeID"*, %"class.ui::AXTreeID"* dereferenceable(32)) local_unnamed_addr #1

declare dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui15AXTreeIDUnknownEv() local_unnamed_addr #1

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui8AXTreeIDaSERKS0_(%"class.ui::AXTreeID"*, %"class.ui::AXTreeID"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui14AXTreeCombiner7CombineEv(%"class.ui::AXTreeCombiner"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::tuple", align 8
  %3 = alloca %"class.std::__1::tuple.264", align 1
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple.264", align 1
  %6 = alloca %"class.ui::AXTreeID", align 8
  %7 = alloca %"class.ui::AXTreeID", align 8
  %8 = alloca %"class.ui::AXTreeID", align 8
  %9 = alloca %"class.ui::AXTreeID", align 8
  %10 = alloca %"class.ui::AXTreeID", align 8
  %11 = alloca %"class.ui::AXTreeID", align 8
  %12 = alloca %"class.ui::AXTree", align 8
  %13 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 0, i32 0, i32 0
  %14 = load %"struct.ui::AXTreeUpdate"*, %"struct.ui::AXTreeUpdate"** %13, align 8
  %15 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 0, i32 0, i32 1
  %16 = load %"struct.ui::AXTreeUpdate"*, %"struct.ui::AXTreeUpdate"** %15, align 8
  %17 = icmp eq %"struct.ui::AXTreeUpdate"* %14, %16
  br i1 %17, label %58, label %18

18:                                               ; preds = %1
  %19 = bitcast %"class.ui::AXTreeID"* %6 to i8*
  %20 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %21 = bitcast %"class.std::__1::__tree_end_node"* %20 to %"class.std::__1::__tree_node"**
  %22 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 3, i32 0
  %23 = bitcast %"class.std::__1::tuple"* %2 to i8*
  %24 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::tuple.264", %"class.std::__1::tuple.264"* %3, i64 0, i32 0
  br label %26

26:                                               ; preds = %18, %50
  %27 = phi %"struct.ui::AXTreeUpdate"* [ %14, %18 ], [ %55, %50 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 32, i1 false)
  %28 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %27, i64 0, i32 2, i32 1
  call void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"* nonnull %6, %"class.ui::AXTreeID"* dereferenceable(32) %28) #9
  %29 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %21, align 8
  %30 = icmp eq %"class.std::__1::__tree_node"* %29, null
  br i1 %30, label %50, label %31

31:                                               ; preds = %26, %31
  %32 = phi %"class.std::__1::__tree_end_node"* [ %41, %31 ], [ %20, %26 ]
  %33 = phi %"class.std::__1::__tree_node"* [ %42, %31 ], [ %29, %26 ]
  %34 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %33, i64 0, i32 1, i32 0, i32 0
  %35 = call zeroext i1 @_ZNK2ui8AXTreeIDltERKS0_(%"class.ui::AXTreeID"* %34, %"class.ui::AXTreeID"* nonnull dereferenceable(32) %6) #9
  %36 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %33, i64 0, i32 0, i32 1
  %37 = bitcast %"class.std::__1::__tree_node_base"** %36 to %"class.std::__1::__tree_node"**
  %38 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %33, i64 0, i32 0, i32 0
  %39 = bitcast %"class.std::__1::__tree_node"* %33 to %"class.std::__1::__tree_node"**
  %40 = select i1 %35, %"class.std::__1::__tree_node"** %37, %"class.std::__1::__tree_node"** %39
  %41 = select i1 %35, %"class.std::__1::__tree_end_node"* %32, %"class.std::__1::__tree_end_node"* %38
  %42 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %40, align 8
  %43 = icmp eq %"class.std::__1::__tree_node"* %42, null
  br i1 %43, label %44, label %31

44:                                               ; preds = %31
  %45 = icmp eq %"class.std::__1::__tree_end_node"* %41, %20
  br i1 %45, label %50, label %46

46:                                               ; preds = %44
  %47 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 4
  %48 = bitcast %"class.std::__1::__tree_end_node"* %47 to %"class.ui::AXTreeID"*
  %49 = call zeroext i1 @_ZNK2ui8AXTreeIDltERKS0_(%"class.ui::AXTreeID"* nonnull %6, %"class.ui::AXTreeID"* dereferenceable(32) %48) #9
  br i1 %49, label %50, label %57

50:                                               ; preds = %46, %44, %26
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #9
  store %"class.ui::AXTreeID"* %28, %"class.ui::AXTreeID"** %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %25) #9
  %51 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN2ui8AXTreeIDEPKNS2_12AXTreeUpdateEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSJ_IJEEEEEENS_4pairINS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %22, %"class.ui::AXTreeID"* dereferenceable(32) %28, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.264"* nonnull dereferenceable(1) %3) #9
  %52 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %51, 0
  %53 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %52, i64 8
  %54 = bitcast %"class.std::__1::__tree_end_node"* %53 to %"struct.ui::AXTreeUpdate"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %25) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #9
  store %"struct.ui::AXTreeUpdate"* %27, %"struct.ui::AXTreeUpdate"** %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #9
  %55 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %27, i64 1
  %56 = icmp eq %"struct.ui::AXTreeUpdate"* %55, %16
  br i1 %56, label %58, label %26

57:                                               ; preds = %46
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #9
  br label %190

58:                                               ; preds = %50, %1
  %59 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 1
  %60 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"class.std::__1::__tree_node"**
  %62 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node"* %62, null
  br i1 %63, label %190, label %64

64:                                               ; preds = %58, %64
  %65 = phi %"class.std::__1::__tree_end_node"* [ %74, %64 ], [ %60, %58 ]
  %66 = phi %"class.std::__1::__tree_node"* [ %75, %64 ], [ %62, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %66, i64 0, i32 1, i32 0, i32 0
  %68 = call zeroext i1 @_ZNK2ui8AXTreeIDltERKS0_(%"class.ui::AXTreeID"* %67, %"class.ui::AXTreeID"* dereferenceable(32) %59) #9
  %69 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %66, i64 0, i32 0, i32 1
  %70 = bitcast %"class.std::__1::__tree_node_base"** %69 to %"class.std::__1::__tree_node"**
  %71 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %66, i64 0, i32 0, i32 0
  %72 = bitcast %"class.std::__1::__tree_node"* %66 to %"class.std::__1::__tree_node"**
  %73 = select i1 %68, %"class.std::__1::__tree_node"** %70, %"class.std::__1::__tree_node"** %72
  %74 = select i1 %68, %"class.std::__1::__tree_end_node"* %65, %"class.std::__1::__tree_end_node"* %71
  %75 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %73, align 8
  %76 = icmp eq %"class.std::__1::__tree_node"* %75, null
  br i1 %76, label %77, label %64

77:                                               ; preds = %64
  %78 = icmp eq %"class.std::__1::__tree_end_node"* %74, %60
  br i1 %78, label %190, label %79

79:                                               ; preds = %77
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %74, i64 4
  %81 = bitcast %"class.std::__1::__tree_end_node"* %80 to %"class.ui::AXTreeID"*
  %82 = call zeroext i1 @_ZNK2ui8AXTreeIDltERKS0_(%"class.ui::AXTreeID"* %59, %"class.ui::AXTreeID"* dereferenceable(32) %81) #9
  br i1 %82, label %190, label %83

83:                                               ; preds = %79
  %84 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %61, align 8
  %85 = icmp eq %"class.std::__1::__tree_node"* %84, null
  br i1 %85, label %105, label %86

86:                                               ; preds = %83, %86
  %87 = phi %"class.std::__1::__tree_end_node"* [ %96, %86 ], [ %60, %83 ]
  %88 = phi %"class.std::__1::__tree_node"* [ %97, %86 ], [ %84, %83 ]
  %89 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %88, i64 0, i32 1, i32 0, i32 0
  %90 = call zeroext i1 @_ZNK2ui8AXTreeIDltERKS0_(%"class.ui::AXTreeID"* %89, %"class.ui::AXTreeID"* dereferenceable(32) %59) #9
  %91 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %88, i64 0, i32 0, i32 1
  %92 = bitcast %"class.std::__1::__tree_node_base"** %91 to %"class.std::__1::__tree_node"**
  %93 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %88, i64 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::__tree_node"* %88 to %"class.std::__1::__tree_node"**
  %95 = select i1 %90, %"class.std::__1::__tree_node"** %92, %"class.std::__1::__tree_node"** %94
  %96 = select i1 %90, %"class.std::__1::__tree_end_node"* %87, %"class.std::__1::__tree_end_node"* %93
  %97 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %95, align 8
  %98 = icmp eq %"class.std::__1::__tree_node"* %97, null
  br i1 %98, label %99, label %86

99:                                               ; preds = %86
  %100 = icmp eq %"class.std::__1::__tree_end_node"* %96, %60
  br i1 %100, label %105, label %101

101:                                              ; preds = %99
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %96, i64 4
  %103 = bitcast %"class.std::__1::__tree_end_node"* %102 to %"class.ui::AXTreeID"*
  %104 = call zeroext i1 @_ZNK2ui8AXTreeIDltERKS0_(%"class.ui::AXTreeID"* %59, %"class.ui::AXTreeID"* dereferenceable(32) %103) #9
  br i1 %104, label %105, label %106

105:                                              ; preds = %101, %99, %83
  br label %106

106:                                              ; preds = %101, %105
  %107 = phi %"class.std::__1::__tree_end_node"* [ %60, %105 ], [ %96, %101 ]
  %108 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %107, i64 8
  %109 = bitcast %"class.std::__1::__tree_end_node"* %108 to %"struct.ui::AXTreeUpdate"**
  %110 = load %"struct.ui::AXTreeUpdate"*, %"struct.ui::AXTreeUpdate"** %109, align 8
  call void @_ZN2ui14AXTreeCombiner11ProcessTreeEPKNS_12AXTreeUpdateE(%"class.ui::AXTreeCombiner"* %0, %"struct.ui::AXTreeUpdate"* %110)
  %111 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 5, i32 5
  %112 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 5, i32 5, i32 0, i32 1
  %113 = bitcast %"struct.ui::AXNodeData"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.std::__1::vector.2"* %111 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = icmp eq i64 %114, %116
  br i1 %117, label %122, label %118

118:                                              ; preds = %106
  %119 = inttoptr i64 %116 to %"struct.ui::AXNodeData"*
  %120 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %119, i64 0, i32 1
  %121 = load i32, i32* %120, align 8
  br label %122

122:                                              ; preds = %106, %118
  %123 = phi i32 [ %121, %118 ], [ 0, %106 ]
  %124 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 5, i32 4
  store i32 %123, i32* %124, align 4
  %125 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 5, i32 0
  store i8 1, i8* %125, align 8
  %126 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %110, i64 0, i32 2
  %127 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 5, i32 2
  %128 = call dereferenceable(248) %"struct.ui::AXTreeData"* @_ZN2ui10AXTreeDataaSERKS0_(%"struct.ui::AXTreeData"* %127, %"struct.ui::AXTreeData"* dereferenceable(248) %126)
  %129 = bitcast %"class.ui::AXTreeID"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %129) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %129, i8 -86, i64 32, i1 false)
  %130 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %110, i64 0, i32 2, i32 3
  call void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"* nonnull %7, %"class.ui::AXTreeID"* dereferenceable(32) %130) #9
  %131 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %61, align 8
  %132 = icmp eq %"class.std::__1::__tree_node"* %131, null
  br i1 %132, label %162, label %133

133:                                              ; preds = %122, %133
  %134 = phi %"class.std::__1::__tree_end_node"* [ %143, %133 ], [ %60, %122 ]
  %135 = phi %"class.std::__1::__tree_node"* [ %144, %133 ], [ %131, %122 ]
  %136 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %135, i64 0, i32 1, i32 0, i32 0
  %137 = call zeroext i1 @_ZNK2ui8AXTreeIDltERKS0_(%"class.ui::AXTreeID"* %136, %"class.ui::AXTreeID"* nonnull dereferenceable(32) %7) #9
  %138 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %135, i64 0, i32 0, i32 1
  %139 = bitcast %"class.std::__1::__tree_node_base"** %138 to %"class.std::__1::__tree_node"**
  %140 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %135, i64 0, i32 0, i32 0
  %141 = bitcast %"class.std::__1::__tree_node"* %135 to %"class.std::__1::__tree_node"**
  %142 = select i1 %137, %"class.std::__1::__tree_node"** %139, %"class.std::__1::__tree_node"** %141
  %143 = select i1 %137, %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"* %140
  %144 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %142, align 8
  %145 = icmp eq %"class.std::__1::__tree_node"* %144, null
  br i1 %145, label %146, label %133

146:                                              ; preds = %133
  %147 = icmp eq %"class.std::__1::__tree_end_node"* %143, %60
  br i1 %147, label %162, label %148

148:                                              ; preds = %146
  %149 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %143, i64 4
  %150 = bitcast %"class.std::__1::__tree_end_node"* %149 to %"class.ui::AXTreeID"*
  %151 = call zeroext i1 @_ZNK2ui8AXTreeIDltERKS0_(%"class.ui::AXTreeID"* nonnull %7, %"class.ui::AXTreeID"* dereferenceable(32) %150) #9
  br i1 %151, label %162, label %152

152:                                              ; preds = %148
  %153 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 3, i32 0
  %154 = bitcast %"class.std::__1::tuple"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %154) #9
  %155 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.ui::AXTreeID"* %7, %"class.ui::AXTreeID"** %155, align 8
  %156 = getelementptr inbounds %"class.std::__1::tuple.264", %"class.std::__1::tuple.264"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %156) #9
  %157 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN2ui8AXTreeIDEPKNS2_12AXTreeUpdateEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSJ_IJEEEEEENS_4pairINS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %153, %"class.ui::AXTreeID"* nonnull dereferenceable(32) %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.264"* nonnull dereferenceable(1) %5) #9
  %158 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %157, 0
  %159 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %158, i64 8
  %160 = bitcast %"class.std::__1::__tree_end_node"* %159 to %"struct.ui::AXTreeUpdate"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %156) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %154) #9
  %161 = load %"struct.ui::AXTreeUpdate"*, %"struct.ui::AXTreeUpdate"** %160, align 8
  br label %162

162:                                              ; preds = %148, %146, %122, %152
  %163 = phi %"struct.ui::AXTreeUpdate"* [ %161, %152 ], [ %110, %122 ], [ %110, %146 ], [ %110, %148 ]
  call void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"* nonnull %8, %"class.ui::AXTreeID"* nonnull dereferenceable(32) %7) #9
  %164 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %163, i64 0, i32 2, i32 11
  %165 = load i32, i32* %164, align 8
  %166 = call i32 @_ZN2ui14AXTreeCombiner5MapIdENS_8AXTreeIDEi(%"class.ui::AXTreeCombiner"* %0, %"class.ui::AXTreeID"* nonnull %8, i32 %165)
  %167 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 5, i32 2, i32 11
  store i32 %166, i32* %167, align 8
  call void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"* nonnull %9, %"class.ui::AXTreeID"* nonnull dereferenceable(32) %7) #9
  %168 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %163, i64 0, i32 2, i32 12
  %169 = load i8, i8* %168, align 4, !range !2
  %170 = zext i8 %169 to i32
  %171 = call i32 @_ZN2ui14AXTreeCombiner5MapIdENS_8AXTreeIDEi(%"class.ui::AXTreeCombiner"* %0, %"class.ui::AXTreeID"* nonnull %9, i32 %170)
  %172 = icmp ne i32 %171, 0
  %173 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 5, i32 2, i32 12
  %174 = zext i1 %172 to i8
  store i8 %174, i8* %173, align 4
  call void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"* nonnull %10, %"class.ui::AXTreeID"* nonnull dereferenceable(32) %7) #9
  %175 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %163, i64 0, i32 2, i32 14
  %176 = load i32, i32* %175, align 8
  %177 = call i32 @_ZN2ui14AXTreeCombiner5MapIdENS_8AXTreeIDEi(%"class.ui::AXTreeCombiner"* %0, %"class.ui::AXTreeID"* nonnull %10, i32 %176)
  %178 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 5, i32 2, i32 14
  store i32 %177, i32* %178, align 8
  call void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"* nonnull %11, %"class.ui::AXTreeID"* nonnull dereferenceable(32) %7) #9
  %179 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %163, i64 0, i32 2, i32 17
  %180 = load i32, i32* %179, align 4
  %181 = call i32 @_ZN2ui14AXTreeCombiner5MapIdENS_8AXTreeIDEi(%"class.ui::AXTreeCombiner"* %0, %"class.ui::AXTreeID"* nonnull %11, i32 %180)
  %182 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 5, i32 2, i32 17
  store i32 %181, i32* %182, align 4
  %183 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %163, i64 0, i32 2, i32 15
  %184 = load i32, i32* %183, align 4
  %185 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 5, i32 2, i32 15
  store i32 %184, i32* %185, align 4
  %186 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %163, i64 0, i32 2, i32 18
  %187 = load i32, i32* %186, align 8
  %188 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 5, i32 2, i32 18
  store i32 %187, i32* %188, align 8
  %189 = bitcast %"class.ui::AXTree"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 584, i8* nonnull %189) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %189, i8* align 8 bitcast ({ %"class.ui::AXNode::OwnerTree", %"class.std::__1::unique_ptr.106", %"class.base::ObserverList", %"class.ui::AXNode"*, %"class.std::__1::unordered_map", %"class.std::__1::basic_string", <{ i32 (...)**, { i32, [4 x i8], { { { { i8, [7 x i8], %union.anon } } } } }, { i32, [4 x i8], { { { { i8, [7 x i8], %union.anon } } } } }, { i32, [4 x i8], { { { { i8, [7 x i8], %union.anon } } } } }, %"class.std::__1::basic_string", i8, [3 x i8], float, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>, %"class.std::__1::map.176", %"class.std::__1::map.187", %"class.std::__1::map.198", %"class.std::__1::unordered_map.207", i32, [4 x i8], %"class.std::__1::unordered_map.231", i8, i8, [6 x i8], %"class.std::__1::vector.74" }* @__const._ZN2ui14AXTreeCombiner7CombineEv.tree to i8*), i64 584, i1 false)
  call void @_ZN2ui6AXTreeC1Ev(%"class.ui::AXTree"* nonnull %12) #9
  call void @_ZN2ui6AXTreeD1Ev(%"class.ui::AXTree"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 584, i8* nonnull %189) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %129) #9
  br label %190

190:                                              ; preds = %79, %77, %58, %57, %162
  %191 = phi i1 [ true, %162 ], [ false, %57 ], [ false, %58 ], [ false, %77 ], [ false, %79 ]
  ret i1 %191
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"*, %"class.ui::AXTreeID"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui14AXTreeCombiner11ProcessTreeEPKNS_12AXTreeUpdateE(%"class.ui::AXTreeCombiner"*, %"struct.ui::AXTreeUpdate"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.ui::AXTreeID", align 8
  %4 = alloca %"struct.ui::AXNodeData", align 8
  %5 = alloca %"class.ui::AXTreeID", align 8
  %6 = alloca %"class.ui::AXTreeID", align 8
  %7 = alloca %"class.ui::AXTreeID", align 8
  %8 = alloca %"class.ui::AXTreeID", align 8
  %9 = alloca %"class.ui::AXTreeID", align 8
  %10 = alloca %"class.ui::AXTreeID", align 8
  %11 = alloca %"class.ui::AXTreeID", align 8
  %12 = bitcast %"class.ui::AXTreeID"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  %13 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %1, i64 0, i32 2, i32 1
  call void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"* nonnull %3, %"class.ui::AXTreeID"* dereferenceable(32) %13) #9
  %14 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %1, i64 0, i32 5
  %15 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %1, i64 0, i32 5, i32 0, i32 1
  %16 = bitcast %"struct.ui::AXNodeData"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector.2"* %14 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %17, %19
  br i1 %20, label %51, label %21

21:                                               ; preds = %2
  %22 = bitcast %"struct.ui::AXNodeData"* %4 to i8*
  %23 = bitcast %"class.ui::AXTreeID"* %5 to i8*
  %24 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %4, i64 0, i32 1
  %25 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %4, i64 0, i32 12
  %26 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %4, i64 0, i32 12, i32 0, i32 1
  %27 = bitcast i32** %26 to i64*
  %28 = bitcast %"class.std::__1::vector.38"* %25 to i64*
  %29 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %25, i64 0, i32 0, i32 0
  %30 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %4, i64 0, i32 13, i32 1
  %31 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %4, i64 0, i32 6
  %32 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %4, i64 0, i32 6, i32 0, i32 1
  %33 = bitcast %"struct.std::__1::pair.13"** %32 to i64*
  %34 = bitcast %"class.std::__1::vector.11"* %31 to i64*
  %35 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %4, i64 0, i32 9
  %36 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %4, i64 0, i32 9, i32 0, i32 1
  %37 = bitcast %"struct.std::__1::pair.37"** %36 to i64*
  %38 = bitcast %"class.std::__1::vector.35"* %35 to i64*
  %39 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %4, i64 0, i32 5
  %40 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %4, i64 0, i32 5, i32 0, i32 1
  %41 = bitcast %"struct.std::__1::pair"** %40 to i64*
  %42 = bitcast %"class.std::__1::vector.4"* %39 to i64*
  %43 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %44 = bitcast %"class.std::__1::__tree_end_node"* %43 to %"class.std::__1::__tree_node"**
  %45 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %4, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %46 = bitcast i32** %45 to i64*
  %47 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 5, i32 5, i32 0, i32 1
  %48 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 5, i32 5, i32 0, i32 2, i32 0, i32 0
  %49 = bitcast %"struct.ui::AXNodeData"** %47 to i64*
  %50 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 5, i32 5
  br label %52

51:                                               ; preds = %309, %2
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #9
  ret void

52:                                               ; preds = %21, %309
  %53 = phi i64 [ %19, %21 ], [ %312, %309 ]
  %54 = phi i64 [ 0, %21 ], [ %310, %309 ]
  %55 = inttoptr i64 %53 to %"struct.ui::AXNodeData"*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %22) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 8 bitcast ({ i32 (...)**, i32, i32, i32, [4 x i8], i64, %"class.std::__1::vector.4", %"class.std::__1::vector.11", %"class.std::__1::vector.19", %"class.std::__1::vector.27", %"class.std::__1::vector.35", %"class.std::__1::vector.50", %"class.std::__1::vector.58", %"class.std::__1::vector.38", { i32 (...)**, i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::unique_ptr" } }* @__const._ZN2ui14AXTreeCombiner11ProcessTreeEPKNS_12AXTreeUpdateE.node to i8*), i64 264, i1 false)
  %56 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %55, i64 %54
  call void @_ZN2ui10AXNodeDataC1ERKS0_(%"struct.ui::AXNodeData"* nonnull %4, %"struct.ui::AXNodeData"* dereferenceable(264) %56) #9
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 32, i1 false)
  %57 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK2ui10AXNodeData18GetStringAttributeEN2ax5mojom15StringAttributeE(%"struct.ui::AXNodeData"* nonnull %4, i32 6) #9
  call void @_ZN2ui8AXTreeID10FromStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.ui::AXTreeID"* nonnull sret %5, %"class.std::__1::basic_string"* dereferenceable(24) %57) #9
  call void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"* nonnull %6, %"class.ui::AXTreeID"* nonnull dereferenceable(32) %3) #9
  %58 = load i32, i32* %24, align 8
  %59 = call i32 @_ZN2ui14AXTreeCombiner5MapIdENS_8AXTreeIDEi(%"class.ui::AXTreeCombiner"* %0, %"class.ui::AXTreeID"* nonnull %6, i32 %58)
  store i32 %59, i32* %24, align 8
  %60 = load i64, i64* %27, align 8
  %61 = load i64, i64* %28, align 8
  %62 = icmp eq i64 %60, %61
  br i1 %62, label %63, label %66

63:                                               ; preds = %66, %52
  %64 = load i32, i32* %30, align 8
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %80, label %83

66:                                               ; preds = %52, %66
  %67 = phi i64 [ %74, %66 ], [ 0, %52 ]
  call void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"* nonnull %7, %"class.ui::AXTreeID"* nonnull dereferenceable(32) %3) #9
  %68 = load i32*, i32** %29, align 8
  %69 = getelementptr inbounds i32, i32* %68, i64 %67
  %70 = load i32, i32* %69, align 4
  %71 = call i32 @_ZN2ui14AXTreeCombiner5MapIdENS_8AXTreeIDEi(%"class.ui::AXTreeCombiner"* %0, %"class.ui::AXTreeID"* nonnull %7, i32 %70)
  %72 = load i32*, i32** %29, align 8
  %73 = getelementptr inbounds i32, i32* %72, i64 %67
  store i32 %71, i32* %73, align 4
  %74 = add nuw i64 %67, 1
  %75 = load i64, i64* %27, align 8
  %76 = load i64, i64* %28, align 8
  %77 = sub i64 %75, %76
  %78 = ashr exact i64 %77, 2
  %79 = icmp ult i64 %74, %78
  br i1 %79, label %66, label %63

80:                                               ; preds = %63
  call void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"* nonnull %8, %"class.ui::AXTreeID"* nonnull dereferenceable(32) %3) #9
  %81 = load i32, i32* %30, align 8
  %82 = call i32 @_ZN2ui14AXTreeCombiner5MapIdENS_8AXTreeIDEi(%"class.ui::AXTreeCombiner"* %0, %"class.ui::AXTreeID"* nonnull %8, i32 %81)
  store i32 %82, i32* %30, align 8
  br label %83

83:                                               ; preds = %80, %63
  %84 = load i64, i64* %33, align 8
  %85 = load i64, i64* %34, align 8
  %86 = icmp eq i64 %84, %85
  br i1 %86, label %87, label %91

87:                                               ; preds = %102, %83
  %88 = load i64, i64* %37, align 8
  %89 = load i64, i64* %38, align 8
  %90 = icmp eq i64 %88, %89
  br i1 %90, label %109, label %113

91:                                               ; preds = %83, %102
  %92 = phi i64 [ %105, %102 ], [ %85, %83 ]
  %93 = phi i64 [ %103, %102 ], [ 0, %83 ]
  %94 = inttoptr i64 %92 to %"struct.std::__1::pair.13"*
  %95 = getelementptr inbounds %"struct.std::__1::pair.13", %"struct.std::__1::pair.13"* %94, i64 %93, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = call zeroext i1 @_ZN2ui20IsNodeIdIntAttributeEN2ax5mojom12IntAttributeE(i32 %96) #9
  br i1 %97, label %98, label %102

98:                                               ; preds = %91
  call void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"* nonnull %9, %"class.ui::AXTreeID"* nonnull dereferenceable(32) %3) #9
  %99 = getelementptr inbounds %"struct.std::__1::pair.13", %"struct.std::__1::pair.13"* %94, i64 %93, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = call i32 @_ZN2ui14AXTreeCombiner5MapIdENS_8AXTreeIDEi(%"class.ui::AXTreeCombiner"* %0, %"class.ui::AXTreeID"* nonnull %9, i32 %100)
  store i32 %101, i32* %99, align 4
  br label %102

102:                                              ; preds = %98, %91
  %103 = add nuw i64 %93, 1
  %104 = load i64, i64* %33, align 8
  %105 = load i64, i64* %34, align 8
  %106 = sub i64 %104, %105
  %107 = ashr exact i64 %106, 3
  %108 = icmp ult i64 %103, %107
  br i1 %108, label %91, label %87

109:                                              ; preds = %144, %87
  %110 = load i64, i64* %41, align 8
  %111 = load i64, i64* %42, align 8
  %112 = icmp eq i64 %110, %111
  br i1 %112, label %151, label %173

113:                                              ; preds = %87, %144
  %114 = phi i64 [ %147, %144 ], [ %89, %87 ]
  %115 = phi i64 [ %145, %144 ], [ 0, %87 ]
  %116 = inttoptr i64 %114 to %"struct.std::__1::pair.37"*
  %117 = getelementptr inbounds %"struct.std::__1::pair.37", %"struct.std::__1::pair.37"* %116, i64 %115, i32 0
  %118 = load i32, i32* %117, align 8
  %119 = call zeroext i1 @_ZN2ui24IsNodeIdIntListAttributeEN2ax5mojom16IntListAttributeE(i32 %118) #9
  br i1 %119, label %120, label %144

120:                                              ; preds = %113
  %121 = getelementptr inbounds %"struct.std::__1::pair.37", %"struct.std::__1::pair.37"* %116, i64 %115, i32 1
  %122 = getelementptr inbounds %"struct.std::__1::pair.37", %"struct.std::__1::pair.37"* %116, i64 %115, i32 1, i32 0, i32 1
  %123 = bitcast i32** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.std::__1::vector.38"* %121 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = icmp eq i64 %124, %126
  br i1 %127, label %144, label %128

128:                                              ; preds = %120
  %129 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %121, i64 0, i32 0, i32 0
  br label %130

130:                                              ; preds = %128, %130
  %131 = phi i64 [ 0, %128 ], [ %138, %130 ]
  call void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"* nonnull %10, %"class.ui::AXTreeID"* nonnull dereferenceable(32) %3) #9
  %132 = load i32*, i32** %129, align 8
  %133 = getelementptr inbounds i32, i32* %132, i64 %131
  %134 = load i32, i32* %133, align 4
  %135 = call i32 @_ZN2ui14AXTreeCombiner5MapIdENS_8AXTreeIDEi(%"class.ui::AXTreeCombiner"* %0, %"class.ui::AXTreeID"* nonnull %10, i32 %134)
  %136 = load i32*, i32** %129, align 8
  %137 = getelementptr inbounds i32, i32* %136, i64 %131
  store i32 %135, i32* %137, align 4
  %138 = add nuw i64 %131, 1
  %139 = load i64, i64* %123, align 8
  %140 = load i64, i64* %125, align 8
  %141 = sub i64 %139, %140
  %142 = ashr exact i64 %141, 2
  %143 = icmp ult i64 %138, %142
  br i1 %143, label %130, label %144

144:                                              ; preds = %130, %120, %113
  %145 = add nuw i64 %115, 1
  %146 = load i64, i64* %37, align 8
  %147 = load i64, i64* %38, align 8
  %148 = sub i64 %146, %147
  %149 = ashr exact i64 %148, 5
  %150 = icmp ult i64 %145, %149
  br i1 %150, label %113, label %109

151:                                              ; preds = %197, %109
  %152 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %44, align 8
  %153 = icmp eq %"class.std::__1::__tree_node"* %152, null
  br i1 %153, label %297, label %154

154:                                              ; preds = %151, %154
  %155 = phi %"class.std::__1::__tree_end_node"* [ %164, %154 ], [ %43, %151 ]
  %156 = phi %"class.std::__1::__tree_node"* [ %165, %154 ], [ %152, %151 ]
  %157 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %156, i64 0, i32 1, i32 0, i32 0
  %158 = call zeroext i1 @_ZNK2ui8AXTreeIDltERKS0_(%"class.ui::AXTreeID"* %157, %"class.ui::AXTreeID"* nonnull dereferenceable(32) %5) #9
  %159 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %156, i64 0, i32 0, i32 1
  %160 = bitcast %"class.std::__1::__tree_node_base"** %159 to %"class.std::__1::__tree_node"**
  %161 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %156, i64 0, i32 0, i32 0
  %162 = bitcast %"class.std::__1::__tree_node"* %156 to %"class.std::__1::__tree_node"**
  %163 = select i1 %158, %"class.std::__1::__tree_node"** %160, %"class.std::__1::__tree_node"** %162
  %164 = select i1 %158, %"class.std::__1::__tree_end_node"* %155, %"class.std::__1::__tree_end_node"* %161
  %165 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %163, align 8
  %166 = icmp eq %"class.std::__1::__tree_node"* %165, null
  br i1 %166, label %167, label %154

167:                                              ; preds = %154
  %168 = icmp eq %"class.std::__1::__tree_end_node"* %164, %43
  br i1 %168, label %297, label %169

169:                                              ; preds = %167
  %170 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %164, i64 4
  %171 = bitcast %"class.std::__1::__tree_end_node"* %170 to %"class.ui::AXTreeID"*
  %172 = call zeroext i1 @_ZNK2ui8AXTreeIDltERKS0_(%"class.ui::AXTreeID"* nonnull %5, %"class.ui::AXTreeID"* dereferenceable(32) %171) #9
  br i1 %172, label %297, label %204

173:                                              ; preds = %109, %197
  %174 = phi i64 [ %198, %197 ], [ %111, %109 ]
  %175 = phi i64 [ %199, %197 ], [ %110, %109 ]
  %176 = phi i64 [ %200, %197 ], [ 0, %109 ]
  %177 = inttoptr i64 %174 to %"struct.std::__1::pair"*
  %178 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %177, i64 %176, i32 0
  %179 = load i32, i32* %178, align 8
  %180 = icmp eq i32 %179, 6
  br i1 %180, label %181, label %197

181:                                              ; preds = %173
  store i32 0, i32* %178, align 8
  %182 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %177, i64 %176, i32 1
  %183 = bitcast %"class.std::__1::basic_string"* %182 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %184 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %183, i64 0, i32 1, i32 0
  %185 = load i8, i8* %184, align 1
  %186 = icmp slt i8 %185, 0
  br i1 %186, label %187, label %191

187:                                              ; preds = %181
  %188 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %177, i64 %176, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %182, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load i8*, i8** %189, align 8
  br label %193

191:                                              ; preds = %181
  store i8 0, i8* %184, align 1
  %192 = bitcast %"class.std::__1::basic_string"* %182 to i8*
  br label %193

193:                                              ; preds = %187, %191
  %194 = phi i8* [ %190, %187 ], [ %192, %191 ]
  store i8 0, i8* %194, align 1
  %195 = load i64, i64* %41, align 8
  %196 = load i64, i64* %42, align 8
  br label %197

197:                                              ; preds = %193, %173
  %198 = phi i64 [ %196, %193 ], [ %174, %173 ]
  %199 = phi i64 [ %195, %193 ], [ %175, %173 ]
  %200 = add nuw i64 %176, 1
  %201 = sub i64 %199, %198
  %202 = ashr exact i64 %201, 5
  %203 = icmp ult i64 %200, %202
  br i1 %203, label %173, label %151

204:                                              ; preds = %169
  %205 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %44, align 8
  %206 = icmp eq %"class.std::__1::__tree_node"* %205, null
  br i1 %206, label %226, label %207

207:                                              ; preds = %204, %207
  %208 = phi %"class.std::__1::__tree_end_node"* [ %217, %207 ], [ %43, %204 ]
  %209 = phi %"class.std::__1::__tree_node"* [ %218, %207 ], [ %205, %204 ]
  %210 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %209, i64 0, i32 1, i32 0, i32 0
  %211 = call zeroext i1 @_ZNK2ui8AXTreeIDltERKS0_(%"class.ui::AXTreeID"* %210, %"class.ui::AXTreeID"* nonnull dereferenceable(32) %5) #9
  %212 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %209, i64 0, i32 0, i32 1
  %213 = bitcast %"class.std::__1::__tree_node_base"** %212 to %"class.std::__1::__tree_node"**
  %214 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %209, i64 0, i32 0, i32 0
  %215 = bitcast %"class.std::__1::__tree_node"* %209 to %"class.std::__1::__tree_node"**
  %216 = select i1 %211, %"class.std::__1::__tree_node"** %213, %"class.std::__1::__tree_node"** %215
  %217 = select i1 %211, %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"* %214
  %218 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %216, align 8
  %219 = icmp eq %"class.std::__1::__tree_node"* %218, null
  br i1 %219, label %220, label %207

220:                                              ; preds = %207
  %221 = icmp eq %"class.std::__1::__tree_end_node"* %217, %43
  br i1 %221, label %226, label %222

222:                                              ; preds = %220
  %223 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %217, i64 4
  %224 = bitcast %"class.std::__1::__tree_end_node"* %223 to %"class.ui::AXTreeID"*
  %225 = call zeroext i1 @_ZNK2ui8AXTreeIDltERKS0_(%"class.ui::AXTreeID"* nonnull %5, %"class.ui::AXTreeID"* dereferenceable(32) %224) #9
  br i1 %225, label %226, label %227

226:                                              ; preds = %222, %220, %204
  br label %227

227:                                              ; preds = %222, %226
  %228 = phi %"class.std::__1::__tree_end_node"* [ %43, %226 ], [ %217, %222 ]
  %229 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %228, i64 8
  %230 = bitcast %"class.std::__1::__tree_end_node"* %229 to %"struct.ui::AXTreeUpdate"**
  %231 = load %"struct.ui::AXTreeUpdate"*, %"struct.ui::AXTreeUpdate"** %230, align 8
  %232 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %231, i64 0, i32 2, i32 2
  %233 = call zeroext i1 @_ZNK2ui8AXTreeIDneERKS0_(%"class.ui::AXTreeID"* %232, %"class.ui::AXTreeID"* nonnull dereferenceable(32) %3) #9
  %234 = select i1 %233, %"struct.ui::AXTreeUpdate"* null, %"struct.ui::AXTreeUpdate"* %231
  %235 = icmp eq %"struct.ui::AXTreeUpdate"* %234, null
  br i1 %235, label %297, label %236

236:                                              ; preds = %227
  %237 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %234, i64 0, i32 5, i32 0, i32 0
  %238 = load %"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"** %237, align 8
  %239 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %234, i64 0, i32 5, i32 0, i32 1
  %240 = load %"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"** %239, align 8
  %241 = icmp eq %"struct.ui::AXNodeData"* %238, %240
  br i1 %241, label %297, label %242

242:                                              ; preds = %236
  call void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"* nonnull %11, %"class.ui::AXTreeID"* nonnull dereferenceable(32) %5) #9
  %243 = load %"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"** %237, align 8
  %244 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %243, i64 0, i32 1
  %245 = load i32, i32* %244, align 8
  %246 = call i32 @_ZN2ui14AXTreeCombiner5MapIdENS_8AXTreeIDEi(%"class.ui::AXTreeCombiner"* %0, %"class.ui::AXTreeID"* nonnull %11, i32 %245)
  %247 = load i32*, i32** %26, align 8
  %248 = load i32*, i32** %45, align 8
  %249 = icmp ult i32* %247, %248
  %250 = ptrtoint i32* %248 to i64
  br i1 %249, label %251, label %254

251:                                              ; preds = %242
  store i32 %246, i32* %247, align 4
  %252 = getelementptr inbounds i32, i32* %247, i64 1
  %253 = ptrtoint i32* %252 to i64
  store i64 %253, i64* %27, align 8
  br label %297

254:                                              ; preds = %242
  %255 = ptrtoint i32* %247 to i64
  %256 = load i64, i64* %28, align 8
  %257 = sub i64 %255, %256
  %258 = ashr exact i64 %257, 2
  %259 = add nsw i64 %258, 1
  %260 = icmp ugt i64 %259, 4611686018427387903
  br i1 %260, label %261, label %263

261:                                              ; preds = %254
  %262 = bitcast %"class.std::__1::vector.38"* %25 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %262) #11
  unreachable

263:                                              ; preds = %254
  %264 = sub i64 %250, %256
  %265 = ashr exact i64 %264, 2
  %266 = icmp ult i64 %265, 2305843009213693951
  br i1 %266, label %267, label %275

267:                                              ; preds = %263
  %268 = ashr exact i64 %264, 1
  %269 = icmp ult i64 %268, %259
  %270 = select i1 %269, i64 %259, i64 %268
  %271 = icmp eq i64 %270, 0
  br i1 %271, label %280, label %272

272:                                              ; preds = %267
  %273 = icmp ugt i64 %270, 4611686018427387903
  br i1 %273, label %274, label %275

274:                                              ; preds = %272
  call void @abort() #11
  unreachable

275:                                              ; preds = %272, %263
  %276 = phi i64 [ %270, %272 ], [ 4611686018427387903, %263 ]
  %277 = shl i64 %276, 2
  %278 = call i8* @_Znwm(i64 %277) #10
  %279 = bitcast i8* %278 to i32*
  br label %280

280:                                              ; preds = %275, %267
  %281 = phi i64 [ %276, %275 ], [ 0, %267 ]
  %282 = phi i8* [ %278, %275 ], [ null, %267 ]
  %283 = phi i32* [ %279, %275 ], [ null, %267 ]
  %284 = getelementptr inbounds i32, i32* %283, i64 %258
  %285 = getelementptr inbounds i32, i32* %283, i64 %281
  %286 = ptrtoint i32* %285 to i64
  store i32 %246, i32* %284, align 4
  %287 = getelementptr inbounds i32, i32* %284, i64 1
  %288 = ptrtoint i32* %287 to i64
  %289 = ptrtoint i32* %283 to i64
  %290 = icmp sgt i64 %257, 0
  br i1 %290, label %291, label %293

291:                                              ; preds = %280
  %292 = inttoptr i64 %256 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %282, i8* align 4 %292, i64 %257, i1 false) #9
  br label %293

293:                                              ; preds = %291, %280
  store i64 %289, i64* %28, align 8
  store i64 %288, i64* %27, align 8
  store i64 %286, i64* %46, align 8
  %294 = icmp eq i64 %256, 0
  br i1 %294, label %297, label %295

295:                                              ; preds = %293
  %296 = inttoptr i64 %256 to i8*
  call void @_ZdlPv(i8* %296) #10
  br label %297

297:                                              ; preds = %169, %236, %227, %167, %151, %295, %293, %251
  %298 = phi %"struct.ui::AXTreeUpdate"* [ %234, %251 ], [ %234, %293 ], [ %234, %295 ], [ null, %151 ], [ null, %167 ], [ null, %169 ], [ null, %227 ], [ null, %236 ]
  %299 = load %"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"** %47, align 8
  %300 = load %"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"** %48, align 8
  %301 = icmp eq %"struct.ui::AXNodeData"* %299, %300
  br i1 %301, label %305, label %302

302:                                              ; preds = %297
  call void @_ZN2ui10AXNodeDataC1ERKS0_(%"struct.ui::AXNodeData"* %299, %"struct.ui::AXNodeData"* nonnull dereferenceable(264) %4) #9
  %303 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %299, i64 1
  %304 = ptrtoint %"struct.ui::AXNodeData"* %303 to i64
  store i64 %304, i64* %49, align 8
  br label %306

305:                                              ; preds = %297
  call void @_ZNSt3__16vectorIN2ui10AXNodeDataENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.2"* %50, %"struct.ui::AXNodeData"* nonnull dereferenceable(264) %4) #9
  br label %306

306:                                              ; preds = %302, %305
  %307 = icmp eq %"struct.ui::AXTreeUpdate"* %298, null
  br i1 %307, label %309, label %308

308:                                              ; preds = %306
  call void @_ZN2ui14AXTreeCombiner11ProcessTreeEPKNS_12AXTreeUpdateE(%"class.ui::AXTreeCombiner"* %0, %"struct.ui::AXTreeUpdate"* nonnull %298)
  br label %309

309:                                              ; preds = %306, %308
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #9
  call void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %22) #9
  %310 = add nuw i64 %54, 1
  %311 = load i64, i64* %16, align 8
  %312 = load i64, i64* %18, align 8
  %313 = sub i64 %311, %312
  %314 = sdiv exact i64 %313, 264
  %315 = icmp ult i64 %310, %314
  br i1 %315, label %52, label %51
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(248) %"struct.ui::AXTreeData"* @_ZN2ui10AXTreeDataaSERKS0_(%"struct.ui::AXTreeData"*, %"struct.ui::AXTreeData"* dereferenceable(248)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 1
  %5 = tail call dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui8AXTreeIDaSERKS0_(%"class.ui::AXTreeID"* %3, %"class.ui::AXTreeID"* dereferenceable(32) %4) #9
  %6 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 2
  %8 = tail call dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui8AXTreeIDaSERKS0_(%"class.ui::AXTreeID"* %6, %"class.ui::AXTreeID"* dereferenceable(32) %7) #9
  %9 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 3
  %11 = tail call dereferenceable(32) %"class.ui::AXTreeID"* @_ZN2ui8AXTreeIDaSERKS0_(%"class.ui::AXTreeID"* %9, %"class.ui::AXTreeID"* dereferenceable(32) %10) #9
  %12 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %0, i64 0, i32 4
  %13 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 4
  %14 = icmp eq %"struct.ui::AXTreeData"* %0, %1
  br i1 %14, label %111, label %15

15:                                               ; preds = %2
  %16 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %19, label %34, label %24

24:                                               ; preds = %15
  br i1 %23, label %28, label %25

25:                                               ; preds = %24
  %26 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %27 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 24, i1 false) #9
  br label %44

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %12, i8* %30, i64 %32) #9
  br label %44

34:                                               ; preds = %15
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %40 = zext i8 %22 to i64
  %41 = select i1 %23, i8* %36, i8* %39
  %42 = select i1 %23, i64 %38, i64 %40
  %43 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %12, i8* %41, i64 %42) #9
  br label %44

44:                                               ; preds = %25, %28, %34
  %45 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %0, i64 0, i32 5
  %46 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 5
  %47 = bitcast i8* %46 to i64*
  %48 = bitcast i8* %45 to i64*
  %49 = load i64, i64* %47, align 8
  store i64 %49, i64* %48, align 8
  %50 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %0, i64 0, i32 8
  %51 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 8
  %52 = bitcast %"class.std::__1::basic_string"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  %56 = bitcast %"class.std::__1::basic_string"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %55, label %70, label %60

60:                                               ; preds = %44
  br i1 %59, label %64, label %61

61:                                               ; preds = %60
  %62 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %63 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %63, i64 24, i1 false) #9
  br label %80

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %50, i8* %66, i64 %68) #9
  br label %80

70:                                               ; preds = %44
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  %73 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  %76 = zext i8 %58 to i64
  %77 = select i1 %59, i8* %72, i8* %75
  %78 = select i1 %59, i64 %74, i64 %76
  %79 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %50, i8* %77, i64 %78) #9
  br label %80

80:                                               ; preds = %61, %64, %70
  %81 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %0, i64 0, i32 9
  %82 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 9
  %83 = bitcast %"class.std::__1::basic_string"* %81 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  %87 = bitcast %"class.std::__1::basic_string"* %82 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %86, label %101, label %91

91:                                               ; preds = %80
  br i1 %90, label %95, label %92

92:                                               ; preds = %91
  %93 = bitcast %"class.std::__1::basic_string"* %81 to i8*
  %94 = bitcast %"class.std::__1::basic_string"* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 24, i1 false) #9
  br label %117

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  %98 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %99 = load i64, i64* %98, align 8
  %100 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %81, i8* %97, i64 %99) #9
  br label %117

101:                                              ; preds = %80
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  %104 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %"class.std::__1::basic_string"* %82 to i8*
  %107 = zext i8 %89 to i64
  %108 = select i1 %90, i8* %103, i8* %106
  %109 = select i1 %90, i64 %105, i64 %107
  %110 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %81, i8* %108, i64 %109) #9
  br label %117

111:                                              ; preds = %2
  %112 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %0, i64 0, i32 5
  %113 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 5
  %114 = bitcast i8* %113 to i64*
  %115 = bitcast i8* %112 to i64*
  %116 = load i64, i64* %114, align 8
  store i64 %116, i64* %115, align 8
  br label %148

117:                                              ; preds = %92, %95, %101
  %118 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %0, i64 0, i32 10
  %119 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 10
  %120 = bitcast %"class.std::__1::basic_string"* %118 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  %124 = bitcast %"class.std::__1::basic_string"* %119 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %124, i64 0, i32 1, i32 0
  %126 = load i8, i8* %125, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %123, label %138, label %128

128:                                              ; preds = %117
  br i1 %127, label %132, label %129

129:                                              ; preds = %128
  %130 = bitcast %"class.std::__1::basic_string"* %118 to i8*
  %131 = bitcast %"class.std::__1::basic_string"* %119 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %130, i8* align 8 %131, i64 24, i1 false) #9
  br label %148

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i8*, i8** %133, align 8
  %135 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %136 = load i64, i64* %135, align 8
  %137 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %118, i8* %134, i64 %136) #9
  br label %148

138:                                              ; preds = %117
  %139 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load i8*, i8** %139, align 8
  %141 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"class.std::__1::basic_string"* %119 to i8*
  %144 = zext i8 %126 to i64
  %145 = select i1 %127, i8* %140, i8* %143
  %146 = select i1 %127, i64 %142, i64 %144
  %147 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %118, i8* %145, i64 %146) #9
  br label %148

148:                                              ; preds = %111, %129, %132, %138
  %149 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %0, i64 0, i32 11
  %150 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %1, i64 0, i32 11
  %151 = bitcast i32* %149 to i8*
  %152 = bitcast i32* %150 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 36, i1 false)
  ret %"struct.ui::AXTreeData"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2ui14AXTreeCombiner5MapIdENS_8AXTreeIDEi(%"class.ui::AXTreeCombiner"*, %"class.ui::AXTreeID"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple.274", align 8
  %5 = alloca %"class.std::__1::tuple.264", align 1
  %6 = alloca %"class.std::__1::tuple.274", align 8
  %7 = alloca %"class.std::__1::tuple.264", align 1
  %8 = alloca %"class.std::__1::tuple.274", align 8
  %9 = alloca %"class.std::__1::tuple.264", align 1
  %10 = alloca %"struct.std::__1::pair.255", align 8
  %11 = bitcast %"struct.std::__1::pair.255"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = getelementptr inbounds %"struct.std::__1::pair.255", %"struct.std::__1::pair.255"* %10, i64 0, i32 0
  call void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"* nonnull %12, %"class.ui::AXTreeID"* dereferenceable(32) %1) #9
  %13 = getelementptr inbounds %"struct.std::__1::pair.255", %"struct.std::__1::pair.255"* %10, i64 0, i32 1
  store i32 %2, i32* %13, align 8, !alias.scope !3
  %14 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 4, i32 0
  %15 = bitcast %"class.std::__1::tuple.274"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.std::__1::tuple.274", %"class.std::__1::tuple.274"* %8, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::pair.255"* %10, %"struct.std::__1::pair.255"** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::tuple.264", %"class.std::__1::tuple.264"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #9
  %18 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_4pairIN2ui8AXTreeIDEiEEiEENS_19__map_value_compareIS5_S6_NS_4lessIS5_EELb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSI_IJEEEEEENS2_INS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.95"* %14, %"struct.std::__1::pair.255"* nonnull dereferenceable(40) %10, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.274"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.264"* nonnull dereferenceable(1) %9) #9
  %19 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %18, 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 9
  %21 = bitcast %"class.std::__1::__tree_end_node"* %20 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #9
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %35

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.ui::AXTreeCombiner", %"class.ui::AXTreeCombiner"* %0, i64 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %25, align 8
  %28 = bitcast %"class.std::__1::tuple.274"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.std::__1::tuple.274", %"class.std::__1::tuple.274"* %6, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::pair.255"* %10, %"struct.std::__1::pair.255"** %29, align 8
  %30 = getelementptr inbounds %"class.std::__1::tuple.264", %"class.std::__1::tuple.264"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %30) #9
  %31 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_4pairIN2ui8AXTreeIDEiEEiEENS_19__map_value_compareIS5_S6_NS_4lessIS5_EELb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSI_IJEEEEEENS2_INS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.95"* %14, %"struct.std::__1::pair.255"* nonnull dereferenceable(40) %10, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.274"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.264"* nonnull dereferenceable(1) %7) #9
  %32 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %31, 0
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %32, i64 9
  %34 = bitcast %"class.std::__1::__tree_end_node"* %33 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %30) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  store i32 %26, i32* %34, align 4
  br label %35

35:                                               ; preds = %24, %3
  %36 = bitcast %"class.std::__1::tuple.274"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #9
  %37 = getelementptr inbounds %"class.std::__1::tuple.274", %"class.std::__1::tuple.274"* %4, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::pair.255"* %10, %"struct.std::__1::pair.255"** %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::tuple.264", %"class.std::__1::tuple.264"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %38) #9
  %39 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_4pairIN2ui8AXTreeIDEiEEiEENS_19__map_value_compareIS5_S6_NS_4lessIS5_EELb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSI_IJEEEEEENS2_INS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.95"* %14, %"struct.std::__1::pair.255"* nonnull dereferenceable(40) %10, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.274"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.264"* nonnull dereferenceable(1) %5) #9
  %40 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %39, 0
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %40, i64 9
  %42 = bitcast %"class.std::__1::__tree_end_node"* %41 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %38) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #9
  %43 = load i32, i32* %42, align 4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #9
  ret i32 %43
}

declare void @_ZN2ui6AXTreeC1Ev(%"class.ui::AXTree"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2ui6AXTreeD1Ev(%"class.ui::AXTree"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN2ui10AXNodeDataC1ERKS0_(%"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"* dereferenceable(264)) unnamed_addr #1

declare void @_ZN2ui8AXTreeID10FromStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.ui::AXTreeID"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK2ui10AXNodeData18GetStringAttributeEN2ax5mojom15StringAttributeE(%"struct.ui::AXNodeData"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN2ui20IsNodeIdIntAttributeEN2ax5mojom12IntAttributeE(i32) local_unnamed_addr #1

declare zeroext i1 @_ZN2ui24IsNodeIdIntListAttributeEN2ax5mojom16IntListAttributeE(i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK2ui8AXTreeIDneERKS0_(%"class.ui::AXTreeID"*, %"class.ui::AXTreeID"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2ui10AXNodeDataD1Ev(%"struct.ui::AXNodeData"*) unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #10
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #2

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN2ui8AXTreeIDEPKNS2_12AXTreeUpdateEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN2ui8AXTreeIDEPKNS2_12AXTreeUpdateEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #9
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN2ui8AXTreeIDEPKNS2_12AXTreeUpdateEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #9
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_4pairIN2ui8AXTreeIDEiEEiEENS_19__map_value_compareIS5_S6_NS_4lessIS5_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.95"*, %"class.std::__1::__tree_node.256"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.256"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.256"* %1 to %"class.std::__1::__tree_node.256"**
  %6 = load %"class.std::__1::__tree_node.256"*, %"class.std::__1::__tree_node.256"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_4pairIN2ui8AXTreeIDEiEEiEENS_19__map_value_compareIS5_S6_NS_4lessIS5_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.95"* %0, %"class.std::__1::__tree_node.256"* %6) #9
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.256", %"class.std::__1::__tree_node.256"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.256"**
  %9 = load %"class.std::__1::__tree_node.256"*, %"class.std::__1::__tree_node.256"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_4pairIN2ui8AXTreeIDEiEEiEENS_19__map_value_compareIS5_S6_NS_4lessIS5_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.95"* %0, %"class.std::__1::__tree_node.256"* %9) #9
  %10 = bitcast %"class.std::__1::__tree_node.256"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2ui12AXTreeUpdateENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"*, %"struct.ui::AXTreeUpdate"* dereferenceable(320)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.ui::AXTreeUpdate"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 320
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 57646075230342348
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.ui::AXTreeUpdate"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 320
  %20 = icmp ult i64 %19, 28823037615171174
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 57646075230342348, %14 ]
  %28 = mul i64 %27, 320
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"struct.ui::AXTreeUpdate"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.ui::AXTreeUpdate"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %33, i64 %32
  %36 = ptrtoint %"struct.ui::AXTreeUpdate"* %35 to i64
  tail call void @_ZN2ui12AXTreeUpdateC1ERKS0_(%"struct.ui::AXTreeUpdate"* %34, %"struct.ui::AXTreeUpdate"* dereferenceable(320) %1) #9
  %37 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %34, i64 1
  %38 = ptrtoint %"struct.ui::AXTreeUpdate"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.ui::AXTreeUpdate"*, %"struct.ui::AXTreeUpdate"** %39, align 8
  %41 = load %"struct.ui::AXTreeUpdate"*, %"struct.ui::AXTreeUpdate"** %3, align 8
  %42 = icmp eq %"struct.ui::AXTreeUpdate"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.ui::AXTreeUpdate"* %34 to i64
  store i64 %44, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  br label %60

45:                                               ; preds = %31, %45
  %46 = phi %"struct.ui::AXTreeUpdate"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.ui::AXTreeUpdate"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %47, i64 -1
  tail call void @_ZN2ui12AXTreeUpdateC1ERKS0_(%"struct.ui::AXTreeUpdate"* %48, %"struct.ui::AXTreeUpdate"* dereferenceable(320) %49) #9
  %50 = icmp eq %"struct.ui::AXTreeUpdate"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load %"struct.ui::AXTreeUpdate"*, %"struct.ui::AXTreeUpdate"** %39, align 8
  %53 = load %"struct.ui::AXTreeUpdate"*, %"struct.ui::AXTreeUpdate"** %3, align 8
  %54 = ptrtoint %"struct.ui::AXTreeUpdate"* %48 to i64
  store i64 %54, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %55 = icmp eq %"struct.ui::AXTreeUpdate"* %53, %52
  br i1 %55, label %60, label %56

56:                                               ; preds = %51, %56
  %57 = phi %"struct.ui::AXTreeUpdate"* [ %58, %56 ], [ %53, %51 ]
  %58 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %57, i64 -1
  tail call void @_ZN2ui12AXTreeUpdateD1Ev(%"struct.ui::AXTreeUpdate"* %58) #9
  %59 = icmp eq %"struct.ui::AXTreeUpdate"* %58, %52
  br i1 %59, label %60, label %56

60:                                               ; preds = %56, %43, %51
  %61 = phi %"struct.ui::AXTreeUpdate"* [ %40, %43 ], [ %52, %51 ], [ %52, %56 ]
  %62 = icmp eq %"struct.ui::AXTreeUpdate"* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"struct.ui::AXTreeUpdate", %"struct.ui::AXTreeUpdate"* %61, i64 0, i32 0
  tail call void @_ZdlPv(i8* %64) #10
  br label %65

65:                                               ; preds = %60, %63
  ret void
}

declare void @_ZN2ui12AXTreeUpdateC1ERKS0_(%"struct.ui::AXTreeUpdate"*, %"struct.ui::AXTreeUpdate"* dereferenceable(320)) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

declare zeroext i1 @_ZNK2ui8AXTreeIDltERKS0_(%"class.ui::AXTreeID"*, %"class.ui::AXTreeID"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN2ui8AXTreeIDEPKNS2_12AXTreeUpdateEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSJ_IJEEEEEENS_4pairINS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"class.ui::AXTreeID"* dereferenceable(32), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.264"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node"**
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node"* %8, null
  br i1 %9, label %37, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %12

12:                                               ; preds = %33, %10
  %13 = phi %"class.std::__1::__tree_node"* [ %36, %33 ], [ %8, %10 ]
  %14 = phi %"class.std::__1::__tree_node_base"** [ %35, %33 ], [ %11, %10 ]
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 1, i32 0, i32 0
  %16 = tail call zeroext i1 @_ZNK2ui8AXTreeIDltERKS0_(%"class.ui::AXTreeID"* %1, %"class.ui::AXTreeID"* dereferenceable(32) %15) #9
  br i1 %16, label %17, label %23

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  br label %39

23:                                               ; preds = %12
  %24 = tail call zeroext i1 @_ZNK2ui8AXTreeIDltERKS0_(%"class.ui::AXTreeID"* %15, %"class.ui::AXTreeID"* dereferenceable(32) %1) #9
  br i1 %24, label %25, label %31

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  br label %39

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  br label %39

33:                                               ; preds = %25, %17
  %34 = phi %"class.std::__1::__tree_node_base"* [ %19, %17 ], [ %27, %25 ]
  %35 = phi %"class.std::__1::__tree_node_base"** [ %18, %17 ], [ %26, %25 ]
  %36 = bitcast %"class.std::__1::__tree_node_base"* %34 to %"class.std::__1::__tree_node"*
  br label %12

37:                                               ; preds = %5
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  br label %39

39:                                               ; preds = %21, %29, %31, %37
  %40 = phi %"class.std::__1::__tree_end_node"* [ %6, %37 ], [ %22, %21 ], [ %30, %29 ], [ %32, %31 ]
  %41 = phi %"class.std::__1::__tree_node_base"** [ %38, %37 ], [ %18, %21 ], [ %26, %29 ], [ %14, %31 ]
  %42 = bitcast %"class.std::__1::__tree_node_base"** %41 to %"class.std::__1::__tree_node"**
  %43 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node"* %43, null
  br i1 %44, label %45, label %74

45:                                               ; preds = %39
  %46 = tail call i8* @_Znwm(i64 72) #10, !noalias !6
  %47 = getelementptr inbounds i8, i8* %46, i64 32
  %48 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.ui::AXTreeID"*, %"class.ui::AXTreeID"** %48, align 8, !noalias !6
  %50 = bitcast i8* %47 to %"class.ui::AXTreeID"*
  tail call void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"* %50, %"class.ui::AXTreeID"* dereferenceable(32) %49) #9, !noalias !6
  %51 = getelementptr inbounds i8, i8* %46, i64 64
  %52 = bitcast i8* %51 to %"struct.ui::AXTreeUpdate"**
  store %"struct.ui::AXTreeUpdate"* null, %"struct.ui::AXTreeUpdate"** %52, align 8, !noalias !6
  %53 = bitcast i8* %46 to %"class.std::__1::__tree_node"*
  %54 = bitcast i8* %46 to %"class.std::__1::__tree_node_base"*
  %55 = getelementptr inbounds i8, i8* %46, i64 16
  %56 = bitcast i8* %55 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_end_node"** %56, align 8
  %57 = bitcast %"class.std::__1::__tree_node_base"** %41 to i8**
  store i8* %46, i8** %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %59 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %58, align 8
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %59, i64 0, i32 0
  %61 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_node_base"* %61, null
  br i1 %62, label %67, label %63

63:                                               ; preds = %45
  %64 = ptrtoint %"class.std::__1::__tree_node_base"* %61 to i64
  %65 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %64, i64* %65, align 8
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  br label %67

67:                                               ; preds = %63, %45
  %68 = phi %"class.std::__1::__tree_node_base"* [ %54, %45 ], [ %66, %63 ]
  %69 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %70, %"class.std::__1::__tree_node_base"* %68) #9
  %71 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, 1
  store i64 %73, i64* %71, align 8
  br label %74

74:                                               ; preds = %67, %39
  %75 = phi i8 [ 1, %67 ], [ 0, %39 ]
  %76 = phi %"class.std::__1::__tree_node"* [ %53, %67 ], [ %43, %39 ]
  %77 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %76, i64 0, i32 0, i32 0
  %78 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %77, 0
  %79 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %78, i8 %75, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_4pairIN2ui8AXTreeIDEiEEiEENS_19__map_value_compareIS5_S6_NS_4lessIS5_EELb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSI_IJEEEEEENS2_INS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.95"*, %"struct.std::__1::pair.255"* dereferenceable(40), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.274"* dereferenceable(8), %"class.std::__1::tuple.264"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.std::__1::__tree.95", %"class.std::__1::__tree.95"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node.256"**
  %8 = load %"class.std::__1::__tree_node.256"*, %"class.std::__1::__tree_node.256"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node.256"* %8, null
  br i1 %9, label %53, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.std::__1::__tree.95", %"class.std::__1::__tree.95"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::__1::pair.255", %"struct.std::__1::pair.255"* %1, i64 0, i32 0
  %13 = getelementptr inbounds %"struct.std::__1::pair.255", %"struct.std::__1::pair.255"* %1, i64 0, i32 1
  br label %14

14:                                               ; preds = %49, %10
  %15 = phi %"class.std::__1::__tree_node.256"* [ %52, %49 ], [ %8, %10 ]
  %16 = phi %"class.std::__1::__tree_node_base"** [ %51, %49 ], [ %11, %10 ]
  %17 = getelementptr inbounds %"class.std::__1::__tree_node.256", %"class.std::__1::__tree_node.256"* %15, i64 0, i32 2, i32 0, i32 0, i32 0
  %18 = tail call zeroext i1 @_ZNK2ui8AXTreeIDltERKS0_(%"class.ui::AXTreeID"* %12, %"class.ui::AXTreeID"* dereferenceable(32) %17) #9
  br i1 %18, label %26, label %19

19:                                               ; preds = %14
  %20 = tail call zeroext i1 @_ZNK2ui8AXTreeIDltERKS0_(%"class.ui::AXTreeID"* %17, %"class.ui::AXTreeID"* dereferenceable(32) %12) #9
  br i1 %20, label %32, label %21

21:                                               ; preds = %19
  %22 = load i32, i32* %13, align 8
  %23 = getelementptr inbounds %"class.std::__1::__tree_node.256", %"class.std::__1::__tree_node.256"* %15, i64 0, i32 2, i32 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp slt i32 %22, %24
  br i1 %25, label %26, label %32

26:                                               ; preds = %21, %14
  %27 = getelementptr inbounds %"class.std::__1::__tree_node.256", %"class.std::__1::__tree_node.256"* %15, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, null
  br i1 %29, label %30, label %49

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.std::__1::__tree_node.256", %"class.std::__1::__tree_node.256"* %15, i64 0, i32 0, i32 0
  br label %55

32:                                               ; preds = %21, %19
  %33 = tail call zeroext i1 @_ZNK2ui8AXTreeIDltERKS0_(%"class.ui::AXTreeID"* %17, %"class.ui::AXTreeID"* dereferenceable(32) %12) #9
  br i1 %33, label %41, label %34

34:                                               ; preds = %32
  %35 = tail call zeroext i1 @_ZNK2ui8AXTreeIDltERKS0_(%"class.ui::AXTreeID"* %12, %"class.ui::AXTreeID"* dereferenceable(32) %17) #9
  br i1 %35, label %47, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.std::__1::__tree_node.256", %"class.std::__1::__tree_node.256"* %15, i64 0, i32 2, i32 0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = load i32, i32* %13, align 8
  %40 = icmp slt i32 %38, %39
  br i1 %40, label %41, label %47

41:                                               ; preds = %36, %32
  %42 = getelementptr inbounds %"class.std::__1::__tree_node.256", %"class.std::__1::__tree_node.256"* %15, i64 0, i32 0, i32 1
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node_base"* %43, null
  br i1 %44, label %45, label %49

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.std::__1::__tree_node.256", %"class.std::__1::__tree_node.256"* %15, i64 0, i32 0, i32 0
  br label %55

47:                                               ; preds = %36, %34
  %48 = getelementptr inbounds %"class.std::__1::__tree_node.256", %"class.std::__1::__tree_node.256"* %15, i64 0, i32 0, i32 0
  br label %55

49:                                               ; preds = %41, %26
  %50 = phi %"class.std::__1::__tree_node_base"* [ %28, %26 ], [ %43, %41 ]
  %51 = phi %"class.std::__1::__tree_node_base"** [ %27, %26 ], [ %42, %41 ]
  %52 = bitcast %"class.std::__1::__tree_node_base"* %50 to %"class.std::__1::__tree_node.256"*
  br label %14

53:                                               ; preds = %5
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  br label %55

55:                                               ; preds = %30, %45, %47, %53
  %56 = phi %"class.std::__1::__tree_end_node"* [ %6, %53 ], [ %31, %30 ], [ %46, %45 ], [ %48, %47 ]
  %57 = phi %"class.std::__1::__tree_node_base"** [ %54, %53 ], [ %27, %30 ], [ %42, %45 ], [ %16, %47 ]
  %58 = bitcast %"class.std::__1::__tree_node_base"** %57 to %"class.std::__1::__tree_node.256"**
  %59 = load %"class.std::__1::__tree_node.256"*, %"class.std::__1::__tree_node.256"** %58, align 8
  %60 = icmp eq %"class.std::__1::__tree_node.256"* %59, null
  br i1 %60, label %61, label %95

61:                                               ; preds = %55
  %62 = tail call i8* @_Znwm(i64 80) #10, !noalias !9
  %63 = getelementptr inbounds i8, i8* %62, i64 32
  %64 = getelementptr inbounds %"class.std::__1::tuple.274", %"class.std::__1::tuple.274"* %3, i64 0, i32 0, i32 0, i32 0
  %65 = load %"struct.std::__1::pair.255"*, %"struct.std::__1::pair.255"** %64, align 8, !noalias !9
  %66 = bitcast i8* %63 to %"class.ui::AXTreeID"*
  %67 = getelementptr inbounds %"struct.std::__1::pair.255", %"struct.std::__1::pair.255"* %65, i64 0, i32 0
  tail call void @_ZN2ui8AXTreeIDC1ERKS0_(%"class.ui::AXTreeID"* %66, %"class.ui::AXTreeID"* dereferenceable(32) %67) #9, !noalias !9
  %68 = getelementptr inbounds i8, i8* %62, i64 64
  %69 = bitcast i8* %68 to i32*
  %70 = getelementptr inbounds %"struct.std::__1::pair.255", %"struct.std::__1::pair.255"* %65, i64 0, i32 1
  %71 = load i32, i32* %70, align 8, !noalias !9
  store i32 %71, i32* %69, align 8, !noalias !9
  %72 = getelementptr inbounds i8, i8* %62, i64 72
  %73 = bitcast i8* %72 to i32*
  store i32 0, i32* %73, align 8, !noalias !9
  %74 = bitcast i8* %62 to %"class.std::__1::__tree_node.256"*
  %75 = bitcast i8* %62 to %"class.std::__1::__tree_node_base"*
  %76 = getelementptr inbounds i8, i8* %62, i64 16
  %77 = bitcast i8* %76 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %56, %"class.std::__1::__tree_end_node"** %77, align 8
  %78 = bitcast %"class.std::__1::__tree_node_base"** %57 to i8**
  store i8* %62, i8** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree.95", %"class.std::__1::__tree.95"* %0, i64 0, i32 0
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, null
  br i1 %83, label %88, label %84

84:                                               ; preds = %61
  %85 = ptrtoint %"class.std::__1::__tree_node_base"* %82 to i64
  %86 = bitcast %"class.std::__1::__tree.95"* %0 to i64*
  store i64 %85, i64* %86, align 8
  %87 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  br label %88

88:                                               ; preds = %84, %61
  %89 = phi %"class.std::__1::__tree_node_base"* [ %75, %61 ], [ %87, %84 ]
  %90 = getelementptr inbounds %"class.std::__1::__tree.95", %"class.std::__1::__tree.95"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %91 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %90, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %91, %"class.std::__1::__tree_node_base"* %89) #9
  %92 = getelementptr inbounds %"class.std::__1::__tree.95", %"class.std::__1::__tree.95"* %0, i64 0, i32 2, i32 0, i32 0
  %93 = load i64, i64* %92, align 8
  %94 = add i64 %93, 1
  store i64 %94, i64* %92, align 8
  br label %95

95:                                               ; preds = %88, %55
  %96 = phi i8 [ 1, %88 ], [ 0, %55 ]
  %97 = phi %"class.std::__1::__tree_node.256"* [ %74, %88 ], [ %59, %55 ]
  %98 = getelementptr inbounds %"class.std::__1::__tree_node.256", %"class.std::__1::__tree_node.256"* %97, i64 0, i32 0, i32 0
  %99 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %98, 0
  %100 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %99, i8 %96, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %100
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2ui10AXNodeDataENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.2"*, %"struct.ui::AXNodeData"* dereferenceable(264)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.ui::AXNodeData"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 264
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 69874030582233150
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.2"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.ui::AXNodeData"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 264
  %20 = icmp ult i64 %19, 34937015291116575
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 69874030582233150, %14 ]
  %28 = mul i64 %27, 264
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"struct.ui::AXNodeData"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.ui::AXNodeData"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %33, i64 %32
  %36 = ptrtoint %"struct.ui::AXNodeData"* %35 to i64
  tail call void @_ZN2ui10AXNodeDataC1ERKS0_(%"struct.ui::AXNodeData"* %34, %"struct.ui::AXNodeData"* dereferenceable(264) %1) #9
  %37 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %34, i64 1
  %38 = ptrtoint %"struct.ui::AXNodeData"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"** %39, align 8
  %41 = load %"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"** %3, align 8
  %42 = icmp eq %"struct.ui::AXNodeData"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.ui::AXNodeData"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.ui::AXNodeData"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.ui::AXNodeData"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %47, i64 -1
  tail call void @_ZN2ui10AXNodeDataC1EOS0_(%"struct.ui::AXNodeData"* %48, %"struct.ui::AXNodeData"* dereferenceable(264) %49) #9
  %50 = icmp eq %"struct.ui::AXNodeData"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.ui::AXNodeData"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.ui::AXNodeData"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.ui::AXNodeData"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.ui::AXNodeData"*
  %60 = icmp eq %"struct.ui::AXNodeData"* %55, %59
  br i1 %60, label %68, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.ui::AXNodeData"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %62, i64 -1
  %64 = bitcast %"struct.ui::AXNodeData"* %63 to void (%"struct.ui::AXNodeData"*)***
  %65 = load void (%"struct.ui::AXNodeData"*)**, void (%"struct.ui::AXNodeData"*)*** %64, align 8
  %66 = load void (%"struct.ui::AXNodeData"*)*, void (%"struct.ui::AXNodeData"*)** %65, align 8
  tail call void %66(%"struct.ui::AXNodeData"* %63) #9
  %67 = icmp eq %"struct.ui::AXNodeData"* %63, %59
  br i1 %67, label %68, label %61

68:                                               ; preds = %61, %54
  %69 = icmp eq i64 %57, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %71) #10
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

declare void @_ZN2ui10AXNodeDataC1EOS0_(%"struct.ui::AXNodeData"*, %"struct.ui::AXNodeData"* dereferenceable(264)) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__19make_pairIRN2ui8AXTreeIDERiEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS6_IT0_E4typeEEEOS7_OSA_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__19make_pairIRN2ui8AXTreeIDERiEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS6_IT0_E4typeEEEOS7_OSA_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__16__treeINS_12__value_typeIN2ui8AXTreeIDEPKNS2_12AXTreeUpdateEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISR_EEEEEEDpOT_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__16__treeINS_12__value_typeIN2ui8AXTreeIDEPKNS2_12AXTreeUpdateEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISR_EEEEEEDpOT_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__16__treeINS_12__value_typeINS_4pairIN2ui8AXTreeIDEiEEiEENS_19__map_value_compareIS5_S6_NS_4lessIS5_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__16__treeINS_12__value_typeINS_4pairIN2ui8AXTreeIDEiEEiEENS_19__map_value_compareIS5_S6_NS_4lessIS5_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_"}
