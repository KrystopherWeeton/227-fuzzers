; ModuleID = '../../net/url_request/url_request_throttler_entry.cc'
source_filename = "../../net/url_request/url_request_throttler_entry.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.net::URLRequestThrottlerEntry" = type { %"class.net::URLRequestThrottlerEntryInterface.base", %"struct.net::BackoffEntry::Policy", %"class.base::TimeTicks", %"class.std::__1::queue", %"class.base::TimeDelta", i32, i8, %"class.net::BackoffEntry", %"class.net::URLRequestThrottlerManager"*, %"class.std::__1::basic_string", %"class.net::NetLogWithSource" }
%"class.net::URLRequestThrottlerEntryInterface.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.net::BackoffEntry::Policy" = type { i32, i32, double, double, i64, i64, i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::queue" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.base::TimeTicks"*, i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.net::BackoffEntry" = type { i32 (...)**, %"class.base::TimeTicks", i32, %"struct.net::BackoffEntry::Policy"*, %"class.base::TickClock"* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector.39", %"class.std::__1::vector.46" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.41" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.48" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.net::URLRequestThrottlerManager" = type <{ %"class.net::NetworkChangeNotifier::IPAddressObserver", %"class.net::NetworkChangeNotifier::ConnectionTypeObserver", %"class.std::__1::map", i32, [4 x i8], %"class.url::StringPieceReplacements", i8, i8, [6 x i8], %"class.net::NetLogWithSource", i32, [4 x i8] }>
%"class.net::NetworkChangeNotifier::IPAddressObserver" = type { i32 (...)**, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::ObserverListThreadSafe"* }
%"class.base::ObserverListThreadSafe" = type opaque
%"class.net::NetworkChangeNotifier::ConnectionTypeObserver" = type { i32 (...)**, %class.scoped_refptr.29 }
%class.scoped_refptr.29 = type { %"class.base::ObserverListThreadSafe.30"* }
%"class.base::ObserverListThreadSafe.30" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { i64 }
%"class.url::StringPieceReplacements" = type { %"class.url::Replacements" }
%"class.url::Replacements" = type { %"struct.url::URLComponentSource", %"struct.url::Parsed" }
%"struct.url::URLComponentSource" = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.1" }
%"union.absl::variant_internal::DestructibleUnionImpl.1" = type { %"union.absl::variant_internal::DestructibleUnionImpl.2" }
%"union.absl::variant_internal::DestructibleUnionImpl.2" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"union.absl::variant_internal::DestructibleUnionImpl.4" }
%"union.absl::variant_internal::DestructibleUnionImpl.4" = type { %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.net::URLRequest" = type { %"class.base::SupportsUserData.base", %"class.net::URLRequestContext"*, %"class.net::NetLogWithSource", %"class.std::__1::unique_ptr.277", %"class.std::__1::unique_ptr.283", %"class.std::__1::vector.290", %"class.net::SiteForCookies", %"class.net::IsolationInfo", i32, i8, i8, %"class.absl::optional.303", %class.GURL, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, %"class.net::HttpRequestHeaders", i32, i8, i32, i32, %"class.std::__1::vector.335", %"class.std::__1::vector.342", i32, %"class.net::URLRequest::Delegate"*, i32, %"class.net::HttpResponseInfo", i8, i8, i32, %"class.net::UploadProgress", i32, i32, i8, %"class.std::__1::basic_string", i8, i8, i64, %"class.base::TimeTicks", %"struct.net::LoadTimingInfo", %"class.net::ProxyServer", %"class.absl::optional.399", %"struct.net::NetworkTrafficAnnotationTag", %"class.net::SocketTag", %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.412", %"class.base::RepeatingCallback.412", i8, i8, i32, %"class.base::WeakPtrFactory.413" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.53", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map.53" = type { %"class.std::__1::__tree.54" }
%"class.std::__1::__tree.54" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.net::URLRequestContext" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.net::NetLog"*, %"class.net::HostResolver"*, %"class.net::CertVerifier"*, %"class.net::HttpAuthHandlerFactory"*, %"class.net::ProxyResolutionService"*, %"class.net::ProxyDelegate"*, %"class.net::SSLConfigService"*, %"class.net::NetworkDelegate"*, %"class.net::HttpServerProperties"*, %"class.net::HttpUserAgentSettings"*, %"class.net::CookieStore"*, %"class.net::TransportSecurityState"*, %"class.net::CTPolicyEnforcer"*, %"class.net::SCTAuditingDelegate"*, %"class.net::HttpTransactionFactory"*, %"class.net::URLRequestJobFactory"*, %"class.net::URLRequestThrottlerManager"*, %"class.net::QuicContext"*, %"class.net::NetworkQualityEstimator"*, %"class.net::ReportingService"*, %"class.net::NetworkErrorLoggingService"*, %"class.net::FtpAuthCache"*, %"class.std::__1::unique_ptr.270", i8, i8, i8, %"class.std::__1::basic_string" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.net::HostResolver" = type { i32 (...)** }
%"class.net::CertVerifier" = type opaque
%"class.net::HttpAuthHandlerFactory" = type opaque
%"class.net::ProxyResolutionService" = type opaque
%"class.net::ProxyDelegate" = type opaque
%"class.net::SSLConfigService" = type { i32 (...)**, %"class.base::ObserverList" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.64", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.64" = type { %"class.std::__1::__vector_base.65" }
%"class.std::__1::__vector_base.65" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.66" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.net::NetworkDelegate" = type { i32 (...)** }
%"class.net::HttpServerProperties" = type { %"class.net::BrokenAlternativeServices::Delegate", %"class.base::TickClock"*, %"class.base::Clock"*, i8, i8, i8, %"class.std::__1::unique_ptr", %"class.net::HttpServerProperties::ServerInfoMap", %"class.net::BrokenAlternativeServices", %"class.net::IPAddress", %"class.base::flat_map.144", %"class.std::__1::vector.154", %"class.base::MRUCache.161", %"class.base::flat_map.181", i64, %"class.base::OneShotTimer" }
%"class.net::BrokenAlternativeServices::Delegate" = type { i32 (...)** }
%"class.base::Clock" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.net::HttpServerPropertiesManager"* }
%"class.net::HttpServerPropertiesManager" = type opaque
%"class.net::HttpServerProperties::ServerInfoMap" = type { %"class.base::MRUCache" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map.78", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.74" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::map.78" = type { %"class.std::__1::__tree.79" }
%"class.std::__1::__tree.79" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.80", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.net::BrokenAlternativeServices" = type { %"class.net::BrokenAlternativeServices::Delegate"*, %"class.base::TickClock"*, %"class.std::__1::list.89", %"class.std::__1::map.96", %"class.std::__1::set", %"class.net::RecentlyBrokenAlternativeServices", %"class.base::OneShotTimer", %"class.base::WeakPtrFactory.143" }
%"class.std::__1::list.89" = type { %"class.std::__1::__list_imp.90" }
%"class.std::__1::__list_imp.90" = type { %"struct.std::__1::__list_node_base.91", %"class.std::__1::__compressed_pair.92" }
%"struct.std::__1::__list_node_base.91" = type { %"struct.std::__1::__list_node_base.91"*, %"struct.std::__1::__list_node_base.91"* }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::map.96" = type { %"class.std::__1::__tree.97" }
%"class.std::__1::__tree.97" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.107" }
%"class.std::__1::__tree.107" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.net::RecentlyBrokenAlternativeServices" = type { %"class.base::MRUCache.114" }
%"class.base::MRUCache.114" = type { %"class.base::MRUCacheBase.115" }
%"class.base::MRUCacheBase.115" = type { i32 (...)**, %"class.std::__1::list.116", %"class.std::__1::map.123", i64 }
%"class.std::__1::list.116" = type { %"class.std::__1::__list_imp.117" }
%"class.std::__1::__list_imp.117" = type { %"struct.std::__1::__list_node_base.118", %"class.std::__1::__compressed_pair.119" }
%"struct.std::__1::__list_node_base.118" = type { %"struct.std::__1::__list_node_base.118"*, %"struct.std::__1::__list_node_base.118"* }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::map.123" = type { %"class.std::__1::__tree.124" }
%"class.std::__1::__tree.124" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.125", %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.base::WeakPtrFactory.143" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.134 }
%class.scoped_refptr.134 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.135", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.135" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.136" }
%"struct.std::__1::atomic.136" = type { %"struct.std::__1::__atomic_base.137" }
%"struct.std::__1::__atomic_base.137" = type { %"struct.std::__1::__atomic_base.138" }
%"struct.std::__1::__atomic_base.138" = type { %"struct.std::__1::__cxx_atomic_impl.139" }
%"struct.std::__1::__cxx_atomic_impl.139" = type { %"struct.std::__1::__cxx_atomic_base_impl.140" }
%"struct.std::__1::__cxx_atomic_base_impl.140" = type { i8 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.base::flat_map.144" = type { %"class.base::internal::flat_tree.145" }
%"class.base::internal::flat_tree.145" = type { %"class.std::__1::vector.146" }
%"class.std::__1::vector.146" = type { %"class.std::__1::__vector_base.147" }
%"class.std::__1::__vector_base.147" = type { %"struct.std::__1::pair.148"*, %"struct.std::__1::pair.148"*, %"class.std::__1::__compressed_pair.149" }
%"struct.std::__1::pair.148" = type opaque
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"struct.std::__1::pair.148"* }
%"class.std::__1::vector.154" = type { %"class.std::__1::__vector_base.155" }
%"class.std::__1::__vector_base.155" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.std::__1::basic_string"* }
%"class.base::MRUCache.161" = type { %"class.base::MRUCacheBase.162" }
%"class.base::MRUCacheBase.162" = type { i32 (...)**, %"class.std::__1::list.163", %"class.std::__1::map.170", i64 }
%"class.std::__1::list.163" = type { %"class.std::__1::__list_imp.164" }
%"class.std::__1::__list_imp.164" = type { %"struct.std::__1::__list_node_base.165", %"class.std::__1::__compressed_pair.166" }
%"struct.std::__1::__list_node_base.165" = type { %"struct.std::__1::__list_node_base.165"*, %"struct.std::__1::__list_node_base.165"* }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::map.170" = type { %"class.std::__1::__tree.171" }
%"class.std::__1::__tree.171" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.172", %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.base::flat_map.181" = type { %"class.base::internal::flat_tree.182" }
%"class.base::internal::flat_tree.182" = type { %"class.std::__1::vector.183" }
%"class.std::__1::vector.183" = type { %"class.std::__1::__vector_base.184" }
%"class.std::__1::__vector_base.184" = type { %"struct.std::__1::pair.185"*, %"struct.std::__1::pair.185"*, %"class.std::__1::__compressed_pair.186" }
%"struct.std::__1::pair.185" = type opaque
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"struct.std::__1::pair.185"* }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.132, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.132 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.133" }>
%"class.base::RefCountedThreadSafe.133" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.141 }
%class.scoped_refptr.141 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.142", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.142" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::HttpUserAgentSettings" = type opaque
%"class.net::CookieStore" = type opaque
%"class.net::TransportSecurityState" = type <{ %"class.std::__1::map.191", %"class.std::__1::map.200", %"class.std::__1::map.209", %"class.net::TransportSecurityState::Delegate"*, %"class.net::TransportSecurityState::ReportSenderInterface"*, i8, i8, i8, [5 x i8], %"class.net::TransportSecurityState::ExpectCTReporter"*, %"class.net::TransportSecurityState::RequireCTDelegate"*, %"class.net::ExpiringCache", %"class.net::ExpiringCache", i8, [7 x i8], %"class.base::Time", %"class.std::__1::set.232", i8, [7 x i8] }>
%"class.std::__1::map.191" = type { %"class.std::__1::__tree.192" }
%"class.std::__1::__tree.192" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.193", %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::map.200" = type { %"class.std::__1::__tree.201" }
%"class.std::__1::__tree.201" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.202", %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::map.209" = type { %"class.std::__1::__tree.210" }
%"class.std::__1::__tree.210" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.211", %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.net::TransportSecurityState::Delegate" = type { i32 (...)** }
%"class.net::TransportSecurityState::ReportSenderInterface" = type { i32 (...)** }
%"class.net::TransportSecurityState::ExpectCTReporter" = type { i32 (...)** }
%"class.net::TransportSecurityState::RequireCTDelegate" = type { i32 (...)** }
%"class.net::ExpiringCache" = type <{ i64, %"class.std::__1::map.220", %"struct.std::__1::less.229", %"class.net::NoopEvictionHandler", [6 x i8] }>
%"class.std::__1::map.220" = type { %"class.std::__1::__tree.221" }
%"class.std::__1::__tree.221" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.222", %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::less.229" = type { i8 }
%"class.net::NoopEvictionHandler" = type { i8 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.231" }
%"class.base::time_internal::TimeBase.231" = type { i64 }
%"class.std::__1::set.232" = type { %"class.std::__1::__tree.233" }
%"class.std::__1::__tree.233" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.234", %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.net::CTPolicyEnforcer" = type opaque
%"class.net::SCTAuditingDelegate" = type opaque
%"class.net::HttpTransactionFactory" = type opaque
%"class.net::URLRequestJobFactory" = type opaque
%"class.net::QuicContext" = type { %"class.std::__1::unique_ptr.240", %"struct.net::QuicParams" }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.quic::QuicConnectionHelperInterface"* }
%"class.quic::QuicConnectionHelperInterface" = type { i32 (...)** }
%"struct.net::QuicParams" = type { %"class.std::__1::vector.246", %"class.std::__1::basic_string", i64, i64, %"class.std::__1::set.253", %"class.std::__1::vector.263", %"class.std::__1::vector.263", i8, i8, i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, i8, i8, i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", i32, i32, i8, i8, i8, i8, i8, i8, i8, %"class.base::TimeDelta", i8, i8, i32 }
%"class.std::__1::vector.246" = type { %"class.std::__1::__vector_base.247" }
%"class.std::__1::__vector_base.247" = type { %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"*, %"class.std::__1::__compressed_pair.248" }
%"struct.quic::ParsedQuicVersion" = type { i32, i32 }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"struct.quic::ParsedQuicVersion"* }
%"class.std::__1::set.253" = type { %"class.std::__1::__tree.254" }
%"class.std::__1::__tree.254" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.255", %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.std::__1::vector.263" = type { %"class.std::__1::__vector_base.264" }
%"class.std::__1::__vector_base.264" = type { i32*, i32*, %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { i32* }
%"class.net::NetworkQualityEstimator" = type opaque
%"class.net::ReportingService" = type opaque
%"class.net::NetworkErrorLoggingService" = type opaque
%"class.net::FtpAuthCache" = type opaque
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.std::__1::set.273"* }
%"class.std::__1::set.273" = type opaque
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.net::URLRequestJob"* }
%"class.net::URLRequestJob" = type opaque
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.net::UploadDataStream"* }
%"class.net::UploadDataStream" = type { i32 (...)**, i64, i64, i64, i8, i8, i8, %"class.base::OnceCallback.286", %"class.net::NetLogWithSource" }
%"class.base::OnceCallback.286" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector.290" = type { %"class.std::__1::__vector_base.291" }
%"class.std::__1::__vector_base.291" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %class.GURL* }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.302 }
%union.anon.302 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.net::IsolationInfo" = type { i32, %"class.absl::optional.303", %"class.absl::optional.303", %"class.net::NetworkIsolationKey", %"class.net::SiteForCookies", i8, %"class.absl::optional.313" }
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional.308", %"class.absl::optional.308" }
%"class.absl::optional.308" = type { %"class.absl::optional_internal::optional_data.309" }
%"class.absl::optional_internal::optional_data.309" = type { %"class.absl::optional_internal::optional_data_base.310" }
%"class.absl::optional_internal::optional_data_base.310" = type { %"class.absl::optional_internal::optional_data_dtor_base.311" }
%"class.absl::optional_internal::optional_data_dtor_base.311" = type { i8, %union.anon.312 }
%union.anon.312 = type { %"class.net::SchemefulSite" }
%"class.absl::optional.313" = type { %"class.absl::optional_internal::optional_data.314" }
%"class.absl::optional_internal::optional_data.314" = type { %"class.absl::optional_internal::optional_data_base.315" }
%"class.absl::optional_internal::optional_data_base.315" = type { %"class.absl::optional_internal::optional_data_dtor_base.316" }
%"class.absl::optional_internal::optional_data_dtor_base.316" = type { i8, %union.anon.317 }
%union.anon.317 = type { %"class.std::__1::set.318" }
%"class.std::__1::set.318" = type { %"class.std::__1::__tree.319" }
%"class.std::__1::__tree.319" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.320", %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.absl::optional.303" = type { %"class.absl::optional_internal::optional_data.304" }
%"class.absl::optional_internal::optional_data.304" = type { %"class.absl::optional_internal::optional_data_base.305" }
%"class.absl::optional_internal::optional_data_base.305" = type { %"class.absl::optional_internal::optional_data_dtor_base.306" }
%"class.absl::optional_internal::optional_data_dtor_base.306" = type { i8, %union.anon.307 }
%union.anon.307 = type { %"class.url::Origin" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.292" }
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"class.net::HttpRequestHeaders" = type { %"class.std::__1::vector.328" }
%"class.std::__1::vector.328" = type { %"class.std::__1::__vector_base.329" }
%"class.std::__1::__vector_base.329" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"class.std::__1::__compressed_pair.330" }
%"struct.net::HttpRequestHeaders::HeaderKeyValuePair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* }
%"class.std::__1::vector.335" = type { %"class.std::__1::__vector_base.336" }
%"class.std::__1::__vector_base.336" = type { %"struct.net::CookieWithAccessResult"*, %"struct.net::CookieWithAccessResult"*, %"class.std::__1::__compressed_pair.337" }
%"struct.net::CookieWithAccessResult" = type <{ %"class.net::CanonicalCookie", %"struct.net::CookieAccessResult", [4 x i8] }>
%"class.net::CanonicalCookie" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.base::Time", %"class.base::Time", %"class.base::Time", i8, i8, i32, i32, i8, i32, i32 }
%"struct.net::CookieAccessResult" = type <{ %"class.net::CookieInclusionStatus", i32, i32, i8, [3 x i8] }>
%"class.net::CookieInclusionStatus" = type { i32, i32 }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"struct.net::CookieWithAccessResult"* }
%"class.std::__1::vector.342" = type { %"class.std::__1::__vector_base.343" }
%"class.std::__1::__vector_base.343" = type { %"struct.net::CookieAndLineWithAccessResult"*, %"struct.net::CookieAndLineWithAccessResult"*, %"class.std::__1::__compressed_pair.349" }
%"struct.net::CookieAndLineWithAccessResult" = type <{ %"class.absl::optional.344", %"class.std::__1::basic_string", %"struct.net::CookieAccessResult", [4 x i8] }>
%"class.absl::optional.344" = type { %"class.absl::optional_internal::optional_data.345" }
%"class.absl::optional_internal::optional_data.345" = type { %"class.absl::optional_internal::optional_data_base.346" }
%"class.absl::optional_internal::optional_data_base.346" = type { %"class.absl::optional_internal::optional_data_dtor_base.347" }
%"class.absl::optional_internal::optional_data_dtor_base.347" = type { i8, %union.anon.348 }
%union.anon.348 = type { %"class.net::CanonicalCookie" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"struct.net::CookieAndLineWithAccessResult"* }
%"class.net::URLRequest::Delegate" = type { i32 (...)** }
%"class.net::HttpResponseInfo" = type { i8, i32, i8, i8, i8, i8, i8, %"class.net::ProxyServer", i8, i8, i8, i8, %"class.base::Time", %"class.net::IPEndPoint", %"class.std::__1::basic_string", i32, %"class.base::Time", %"class.base::Time", %"struct.net::ResolveErrorInfo", %"class.absl::optional.354", %class.scoped_refptr.359, %"class.net::SSLInfo", %class.scoped_refptr.390, %"class.net::HttpVaryData", %"class.std::__1::vector.154" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.354" = type { %"class.absl::optional_internal::optional_data.355" }
%"class.absl::optional_internal::optional_data.355" = type { %"class.absl::optional_internal::optional_data_base.356" }
%"class.absl::optional_internal::optional_data_base.356" = type { %"class.absl::optional_internal::optional_data_dtor_base.357" }
%"class.absl::optional_internal::optional_data_dtor_base.357" = type { i8, %union.anon.358 }
%union.anon.358 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.359 = type { %"class.net::SSLCertRequestInfo"* }
%"class.net::SSLCertRequestInfo" = type opaque
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.360, %class.scoped_refptr.360, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.373", %"class.std::__1::basic_string", %"class.std::__1::vector.381", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.360 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.361", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.362", %"class.std::__1::vector.366" }
%"class.base::RefCountedThreadSafe.361" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.154", %"class.std::__1::vector.154", %"class.std::__1::vector.154", %"class.std::__1::vector.154" }
%"class.std::__1::unique_ptr.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.366" = type { %"class.std::__1::__vector_base.367" }
%"class.std::__1::__vector_base.367" = type { %"class.std::__1::unique_ptr.362"*, %"class.std::__1::unique_ptr.362"*, %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"class.std::__1::unique_ptr.362"* }
%"class.std::__1::vector.373" = type { %"class.std::__1::__vector_base.374" }
%"class.std::__1::__vector_base.374" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.376" }
%"class.net::HashValue" = type { i32, %union.anon.375 }
%union.anon.375 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.381" = type { %"class.std::__1::__vector_base.382" }
%"class.std::__1::__vector_base.382" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.385" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.383, i32, [4 x i8] }>
%class.scoped_refptr.383 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.384", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.384" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%class.scoped_refptr.390 = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe.391", %"class.std::__1::vector.392", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe.391" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.392" = type { %"class.std::__1::__vector_base.393" }
%"class.std::__1::__vector_base.393" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.394" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.395" }
%"struct.std::__1::__compressed_pair_elem.395" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"class.net::HttpVaryData" = type { %"struct.base::MD5Digest", i8 }
%"struct.base::MD5Digest" = type { [16 x i8] }
%"class.net::UploadProgress" = type { i64, i64 }
%"struct.net::LoadTimingInfo" = type { i8, i32, %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.net::LoadTimingInfo::ConnectTiming", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.399" = type { %"class.absl::optional_internal::optional_data.400" }
%"class.absl::optional_internal::optional_data.400" = type { %"class.absl::optional_internal::optional_data_base.401" }
%"class.absl::optional_internal::optional_data_base.401" = type { %"class.absl::optional_internal::optional_data_dtor_base.402" }
%"class.absl::optional_internal::optional_data_dtor_base.402" = type { i8, %union.anon.403 }
%union.anon.403 = type { %"class.base::internal::flat_tree.404" }
%"class.base::internal::flat_tree.404" = type { %"class.std::__1::vector.405" }
%"class.std::__1::vector.405" = type { %"class.std::__1::__vector_base.406" }
%"class.std::__1::__vector_base.406" = type { i32*, i32*, %"class.std::__1::__compressed_pair.407" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { i32* }
%"struct.net::NetworkTrafficAnnotationTag" = type { i32 }
%"class.net::SocketTag" = type { i8 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.412" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.413" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.419", [4 x i8] }>
%"struct.std::__1::atomic.419" = type { %"struct.std::__1::__atomic_base.420" }
%"struct.std::__1::__atomic_base.420" = type { %"struct.std::__1::__atomic_base.421" }
%"struct.std::__1::__atomic_base.421" = type { %"struct.std::__1::__cxx_atomic_impl.422" }
%"struct.std::__1::__cxx_atomic_impl.422" = type { %"struct.std::__1::__cxx_atomic_base_impl.423" }
%"struct.std::__1::__cxx_atomic_base_impl.423" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN4base14circular_dequeINS_9TimeTicksEED2Ev = comdat any

$_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm = comdat any

$_ZNK4base8internal12VectorBufferINS_9TimeTicksEEixEm = comdat any

$_ZN4base14circular_dequeINS_9TimeTicksEE25ExpandCapacityIfNecessaryEm = comdat any

$_ZN4base14circular_dequeINS_9TimeTicksEE10MoveBufferERNS_8internal12VectorBufferIS1_EEmmPS5_PmS8_ = comdat any

$_ZN4base8internal12VectorBufferINS_9TimeTicksEE9MoveRangeIS2_Li0EEEvPS2_S5_S5_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4base14circular_dequeINS_9TimeTicksEE25ShrinkCapacityIfNecessaryEv = comdat any

@_ZN3net24URLRequestThrottlerEntry29kDefaultSlidingWindowPeriodMsE = hidden local_unnamed_addr constant i32 2000, align 4
@_ZN3net24URLRequestThrottlerEntry24kDefaultMaxSendThresholdE = hidden local_unnamed_addr constant i32 20, align 4
@_ZN3net24URLRequestThrottlerEntry25kDefaultNumErrorsToIgnoreE = hidden local_unnamed_addr constant i32 2, align 4
@_ZN3net24URLRequestThrottlerEntry22kDefaultInitialDelayMsE = hidden local_unnamed_addr constant i32 700, align 4
@_ZN3net24URLRequestThrottlerEntry22kDefaultMultiplyFactorE = hidden local_unnamed_addr constant double 1.400000e+00, align 8
@_ZN3net24URLRequestThrottlerEntry20kDefaultJitterFactorE = hidden local_unnamed_addr constant double 4.000000e-01, align 8
@_ZN3net24URLRequestThrottlerEntry24kDefaultMaximumBackoffMsE = hidden local_unnamed_addr constant i32 900000, align 4
@_ZN3net24URLRequestThrottlerEntry23kDefaultEntryLifetimeMsE = hidden local_unnamed_addr constant i32 120000, align 4
@.str = private unnamed_addr constant [4 x i8] c"url\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"num_failures\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"release_after_ms\00", align 1
@_ZTVN3net24URLRequestThrottlerEntryE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.net::URLRequestThrottlerEntry"*, %"class.net::URLRequest"*)* @_ZNK3net24URLRequestThrottlerEntry19ShouldRejectRequestERKNS_10URLRequestE to i8*), i8* bitcast (i64 (%"class.net::URLRequestThrottlerEntry"*, %"class.base::TimeTicks"*)* @_ZN3net24URLRequestThrottlerEntry32ReserveSendingTimeForNextRequestERKN4base9TimeTicksE to i8*), i8* bitcast (i64 (%"class.net::URLRequestThrottlerEntry"*)* @_ZNK3net24URLRequestThrottlerEntry32GetExponentialBackoffReleaseTimeEv to i8*), i8* bitcast (void (%"class.net::URLRequestThrottlerEntry"*, i32)* @_ZN3net24URLRequestThrottlerEntry18UpdateWithResponseEi to i8*), i8* bitcast (void (%"class.net::URLRequestThrottlerEntry"*, i32)* @_ZN3net24URLRequestThrottlerEntry27ReceivedContentWasMalformedEi to i8*), i8* bitcast (void (%"class.net::URLRequestThrottlerEntry"*)* @_ZN3net24URLRequestThrottlerEntryD2Ev to i8*), i8* bitcast (void (%"class.net::URLRequestThrottlerEntry"*)* @_ZN3net24URLRequestThrottlerEntryD0Ev to i8*), i8* bitcast (i64 (%"class.net::URLRequestThrottlerEntry"*)* @_ZNK3net24URLRequestThrottlerEntry14ImplGetTimeNowEv to i8*), i8* bitcast (%"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)* @_ZNK3net24URLRequestThrottlerEntry15GetBackoffEntryEv to i8*), i8* bitcast (%"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)* @_ZN3net24URLRequestThrottlerEntry15GetBackoffEntryEv to i8*)] }, align 8
@.str.3 = private unnamed_addr constant [28 x i8] c"Throttling.RequestThrottled\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.7 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.9 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@.str.10 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1
@.str.11 = private unnamed_addr constant [15 x i8] c"from_begin: 0x\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c", from_end: 0x\00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c", to: 0x\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZZNK3net24URLRequestThrottlerEntry19ShouldRejectRequestERKNS_10URLRequestEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN3net24URLRequestThrottlerEntryC1EPNS_26URLRequestThrottlerManagerERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE = hidden unnamed_addr alias void (%"class.net::URLRequestThrottlerEntry"*, %"class.net::URLRequestThrottlerManager"*, %"class.std::__1::basic_string"*), void (%"class.net::URLRequestThrottlerEntry"*, %"class.net::URLRequestThrottlerManager"*, %"class.std::__1::basic_string"*)* @_ZN3net24URLRequestThrottlerEntryC2EPNS_26URLRequestThrottlerManagerERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE
@_ZN3net24URLRequestThrottlerEntryC1EPNS_26URLRequestThrottlerManagerERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEiiiddi = hidden unnamed_addr alias void (%"class.net::URLRequestThrottlerEntry"*, %"class.net::URLRequestThrottlerManager"*, %"class.std::__1::basic_string"*, i32, i32, i32, double, double, i32), void (%"class.net::URLRequestThrottlerEntry"*, %"class.net::URLRequestThrottlerManager"*, %"class.std::__1::basic_string"*, i32, i32, i32, double, double, i32)* @_ZN3net24URLRequestThrottlerEntryC2EPNS_26URLRequestThrottlerManagerERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEiiiddi
@_ZN3net24URLRequestThrottlerEntryD1Ev = hidden unnamed_addr alias void (%"class.net::URLRequestThrottlerEntry"*), void (%"class.net::URLRequestThrottlerEntry"*)* @_ZN3net24URLRequestThrottlerEntryD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net27NetLogRejectedRequestParamsEPKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEiRKN4base9TimeDeltaE(%"class.base::Value"* noalias sret, %"class.std::__1::basic_string"*, i32, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #0 {
  %5 = bitcast %"class.base::Value"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 -86, i64 32, i1 false)
  tail call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* %0, i8 zeroext 6) #11
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %13 = select i1 %9, i8* %11, i8* %12
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %8 to i64
  %17 = select i1 %9, i64 %15, i64 %16
  %18 = tail call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i8* %13, i64 %17) #11
  %19 = tail call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i64 12, i32 %2) #11
  %20 = tail call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* %3) #11
  %21 = trunc i64 %20 to i32
  %22 = tail call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0), i64 16, i32 %21) #11
  ret void
}

declare void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"*, i8 zeroext) unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"*, i8*, i64, i8*, i64) local_unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"*, i8*, i64, i32) local_unnamed_addr #1

declare i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net24URLRequestThrottlerEntryC2EPNS_26URLRequestThrottlerManagerERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.net::URLRequestThrottlerEntry"*, %"class.net::URLRequestThrottlerManager"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN3net24URLRequestThrottlerEntryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 4, i32 0
  %8 = bitcast i64* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 40, i1 false)
  store i64 2000000, i64* %7, align 8
  %9 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 5
  store i32 20, i32* %9, align 8
  %10 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 6
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 7
  %12 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 1
  tail call void @_ZN3net12BackoffEntryC1EPKNS0_6PolicyE(%"class.net::BackoffEntry"* %11, %"struct.net::BackoffEntry::Policy"* %12) #11
  %13 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 8
  store %"class.net::URLRequestThrottlerManager"* %1, %"class.net::URLRequestThrottlerManager"** %13, align 8
  %14 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 9
  %15 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %3
  %20 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %21 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false) #11
  br label %27

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %14, i8* %24, i64 %26) #11
  br label %27

27:                                               ; preds = %19, %22
  %28 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 10
  %29 = tail call %"class.net::NetLog"* @_ZNK3net26URLRequestThrottlerManager7net_logEv(%"class.net::URLRequestThrottlerManager"* %1) #11
  tail call void @_ZN3net16NetLogWithSource4MakeEPNS_6NetLogENS_16NetLogSourceTypeE(%"class.net::NetLogWithSource"* sret %28, %"class.net::NetLog"* %29, i32 16) #11
  %30 = tail call i64 @_ZN4base9TimeTicks3NowEv() #11
  store i64 %30, i64* %6, align 8
  %31 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 1, i32 0
  store i32 2, i32* %31, align 8
  %32 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 1, i32 1
  store i32 700, i32* %32, align 4
  %33 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 1, i32 2
  %34 = bitcast double* %33 to <2 x double>*
  store <2 x double> <double 1.400000e+00, double 4.000000e-01>, <2 x double>* %34, align 8
  %35 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 1, i32 4
  %36 = bitcast i64* %35 to <2 x i64>*
  store <2 x i64> <i64 900000, i64 120000>, <2 x i64>* %36, align 8
  %37 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 1, i32 6
  store i8 0, i8* %37, align 8
  ret void
}

declare void @_ZN3net12BackoffEntryC1EPKNS0_6PolicyE(%"class.net::BackoffEntry"*, %"struct.net::BackoffEntry::Policy"*) unnamed_addr #1

declare void @_ZN3net16NetLogWithSource4MakeEPNS_6NetLogENS_16NetLogSourceTypeE(%"class.net::NetLogWithSource"* sret, %"class.net::NetLog"*, i32) local_unnamed_addr #1

declare %"class.net::NetLog"* @_ZNK3net26URLRequestThrottlerManager7net_logEv(%"class.net::URLRequestThrottlerManager"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net24URLRequestThrottlerEntry10InitializeEv(%"class.net::URLRequestThrottlerEntry"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZN4base9TimeTicks3NowEv() #11
  %3 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %2, i64* %3, align 8
  %4 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 1, i32 0
  store i32 2, i32* %4, align 8
  %5 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 1, i32 1
  store i32 700, i32* %5, align 4
  %6 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 1, i32 2
  %7 = bitcast double* %6 to <2 x double>*
  store <2 x double> <double 1.400000e+00, double 4.000000e-01>, <2 x double>* %7, align 8
  %8 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 1, i32 4
  %9 = bitcast i64* %8 to <2 x i64>*
  store <2 x i64> <i64 900000, i64 120000>, <2 x i64>* %9, align 8
  %10 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 1, i32 6
  store i8 0, i8* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net24URLRequestThrottlerEntryC2EPNS_26URLRequestThrottlerManagerERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEiiiddi(%"class.net::URLRequestThrottlerEntry"*, %"class.net::URLRequestThrottlerManager"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i32, i32, i32, double, double, i32) unnamed_addr #0 align 2 {
  %10 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN3net24URLRequestThrottlerEntryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 2, i32 0, i32 0
  %13 = sext i32 %3 to i64
  %14 = mul nsw i64 %13, 1000
  %15 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 4, i32 0
  %16 = bitcast i64* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 40, i1 false)
  store i64 %14, i64* %15, align 8
  %17 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 5
  store i32 %4, i32* %17, align 8
  %18 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 6
  store i8 0, i8* %18, align 4
  %19 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 7
  %20 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 1
  tail call void @_ZN3net12BackoffEntryC1EPKNS0_6PolicyE(%"class.net::BackoffEntry"* %19, %"struct.net::BackoffEntry::Policy"* %20) #11
  %21 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 8
  store %"class.net::URLRequestThrottlerManager"* %1, %"class.net::URLRequestThrottlerManager"** %21, align 8
  %22 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 9
  %23 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %9
  %28 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %29 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 24, i1 false) #11
  br label %35

30:                                               ; preds = %9
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %22, i8* %32, i64 %34) #11
  br label %35

35:                                               ; preds = %27, %30
  %36 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 10
  tail call void @_ZN3net16NetLogWithSourceC1Ev(%"class.net::NetLogWithSource"* %36) #11
  %37 = tail call i64 @_ZN4base9TimeTicks3NowEv() #11
  store i64 %37, i64* %12, align 8
  %38 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 1, i32 1
  %39 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 1, i32 2
  %40 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 1, i32 3
  %41 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 1, i32 4
  %42 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 1, i32 5
  %43 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 1, i32 6
  store i32 %5, i32* %38, align 4
  store double %6, double* %39, align 8
  store double %7, double* %40, align 8
  %44 = sext i32 %8 to i64
  store i64 %44, i64* %41, align 8
  store i64 -1, i64* %42, align 8
  %45 = getelementptr inbounds %"struct.net::BackoffEntry::Policy", %"struct.net::BackoffEntry::Policy"* %20, i64 0, i32 0
  store i32 0, i32* %45, align 8
  store i8 0, i8* %43, align 8
  ret void
}

declare void @_ZN3net16NetLogWithSourceC1Ev(%"class.net::NetLogWithSource"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net24URLRequestThrottlerEntry15IsEntryOutdatedEv(%"class.net::URLRequestThrottlerEntry"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 0, i32 1, i32 0
  %4 = tail call zeroext i1 @_ZNK4base6subtle24RefCountedThreadSafeBase9HasOneRefEv(%"class.base::subtle::RefCountedThreadSafeBase"* %3) #11
  br i1 %4, label %5, label %57

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 3, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 3, i32 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %7, %9
  br i1 %10, label %50, label %11

11:                                               ; preds = %5
  %12 = icmp eq i64 %9, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  br label %16

16:                                               ; preds = %11, %13
  %17 = phi i64 [ %15, %13 ], [ %9, %11 ]
  %18 = add i64 %17, -1
  %19 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 3, i32 0, i32 0
  %20 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZNK4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %19, i64 %18) #11
  %21 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 4, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %20, i64 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %22, -9223372036854775807
  %26 = icmp ult i64 %25, 2
  br i1 %26, label %34, label %27

27:                                               ; preds = %16
  %28 = icmp slt i64 %22, 0
  %29 = select i1 %28, i64 -9223372036854775808, i64 9223372036854775807
  %30 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %24, i64 %22) #11
  %31 = extractvalue { i64, i1 } %30, 1
  %32 = extractvalue { i64, i1 } %30, 0
  %33 = select i1 %31, i64 %29, i64 %32, !prof !2
  br label %42

34:                                               ; preds = %16
  %35 = add i64 %24, -9223372036854775807
  %36 = icmp ugt i64 %35, 1
  %37 = icmp eq i64 %24, %22
  %38 = or i1 %37, %36
  br i1 %38, label %42, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0)) #11
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #11
  br label %42

42:                                               ; preds = %27, %34, %39
  %43 = phi i64 [ %33, %27 ], [ %22, %34 ], [ %22, %39 ]
  %44 = bitcast %"class.net::URLRequestThrottlerEntry"* %0 to i64 (%"class.net::URLRequestThrottlerEntry"*)***
  %45 = load i64 (%"class.net::URLRequestThrottlerEntry"*)**, i64 (%"class.net::URLRequestThrottlerEntry"*)*** %44, align 8
  %46 = getelementptr inbounds i64 (%"class.net::URLRequestThrottlerEntry"*)*, i64 (%"class.net::URLRequestThrottlerEntry"*)** %45, i64 7
  %47 = load i64 (%"class.net::URLRequestThrottlerEntry"*)*, i64 (%"class.net::URLRequestThrottlerEntry"*)** %46, align 8
  %48 = call i64 %47(%"class.net::URLRequestThrottlerEntry"* %0) #11
  %49 = icmp sgt i64 %43, %48
  br i1 %49, label %57, label %50

50:                                               ; preds = %5, %42
  %51 = bitcast %"class.net::URLRequestThrottlerEntry"* %0 to %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)***
  %52 = load %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)**, %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)*** %51, align 8
  %53 = getelementptr inbounds %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)*, %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)** %52, i64 8
  %54 = load %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)*, %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)** %53, align 8
  %55 = call %"class.net::BackoffEntry"* %54(%"class.net::URLRequestThrottlerEntry"* %0) #11
  %56 = call zeroext i1 @_ZNK3net12BackoffEntry10CanDiscardEv(%"class.net::BackoffEntry"* %55) #11
  br label %57

57:                                               ; preds = %42, %1, %50
  %58 = phi i1 [ %56, %50 ], [ false, %1 ], [ false, %42 ]
  ret i1 %58
}

declare zeroext i1 @_ZNK4base6subtle24RefCountedThreadSafeBase9HasOneRefEv(%"class.base::subtle::RefCountedThreadSafeBase"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare zeroext i1 @_ZNK3net12BackoffEntry10CanDiscardEv(%"class.net::BackoffEntry"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net24URLRequestThrottlerEntry24DisableBackoffThrottlingEv(%"class.net::URLRequestThrottlerEntry"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 6
  store i8 1, i8* %2, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net24URLRequestThrottlerEntry13DetachManagerEv(%"class.net::URLRequestThrottlerEntry"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 8
  store %"class.net::URLRequestThrottlerManager"* null, %"class.net::URLRequestThrottlerManager"** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net24URLRequestThrottlerEntry19ShouldRejectRequestERKNS_10URLRequestE(%"class.net::URLRequestThrottlerEntry"*, %"class.net::URLRequest"* nocapture readnone dereferenceable(2016)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = alloca %"class.base::Value", align 8
  %5 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 6
  %6 = load i8, i8* %5, align 4, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %55

8:                                                ; preds = %2
  %9 = bitcast %"class.net::URLRequestThrottlerEntry"* %0 to %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)***
  %10 = load %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)**, %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)*, %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)** %10, i64 8
  %12 = load %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)*, %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)** %11, align 8
  %13 = tail call %"class.net::BackoffEntry"* %12(%"class.net::URLRequestThrottlerEntry"* %0) #11
  %14 = tail call zeroext i1 @_ZNK3net12BackoffEntry19ShouldRejectRequestEv(%"class.net::BackoffEntry"* %13) #11
  br i1 %14, label %15, label %55

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 10, i32 1
  %17 = load %"class.net::NetLog"*, %"class.net::NetLog"** %16, align 8
  %18 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %17, i64 0, i32 3
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %55, label %21, !prof !4

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 10, i32 0
  %23 = bitcast %"class.base::Value"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #11
  %24 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 9
  %25 = load %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)**, %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)*** %9, align 8, !noalias !5
  %26 = getelementptr inbounds %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)*, %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)** %25, i64 8
  %27 = load %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)*, %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)** %26, align 8, !noalias !5
  %28 = tail call %"class.net::BackoffEntry"* %27(%"class.net::URLRequestThrottlerEntry"* %0) #11, !noalias !5
  %29 = getelementptr inbounds %"class.net::BackoffEntry", %"class.net::BackoffEntry"* %28, i64 0, i32 2
  %30 = load i32, i32* %29, align 8, !noalias !5
  %31 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11, !noalias !5
  %32 = load %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)**, %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)*** %9, align 8, !noalias !5
  %33 = getelementptr inbounds %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)*, %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)** %32, i64 8
  %34 = load %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)*, %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)** %33, align 8, !noalias !5
  %35 = tail call %"class.net::BackoffEntry"* %34(%"class.net::URLRequestThrottlerEntry"* %0) #11, !noalias !5
  %36 = tail call i64 @_ZNK3net12BackoffEntry19GetTimeUntilReleaseEv(%"class.net::BackoffEntry"* %35) #11, !noalias !5
  %37 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 %36, i64* %37, align 8, !noalias !5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 32, i1 false) #11, !alias.scope !8
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %4, i8 zeroext 6) #11
  %38 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1, !noalias !11
  %41 = icmp slt i8 %40, 0
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8, !noalias !11
  %44 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  %45 = select i1 %41, i8* %43, i8* %44
  %46 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8, !noalias !11
  %48 = zext i8 %40 to i64
  %49 = select i1 %41, i64 %47, i64 %48
  %50 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"* nonnull %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i8* %45, i64 %49) #11
  %51 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i64 12, i32 %30) #11
  %52 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %3) #11
  %53 = trunc i64 %52 to i32
  %54 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %4, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0), i64 16, i32 %53) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11, !noalias !5
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %17, i32 368, %"struct.net::NetLogSource"* dereferenceable(16) %22, i32 0, %"class.base::Value"* nonnull dereferenceable(32) %4) #11
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #11
  br label %55

55:                                               ; preds = %21, %15, %2, %8
  %56 = phi i1 [ false, %2 ], [ false, %8 ], [ true, %15 ], [ true, %21 ]
  %57 = zext i1 %56 to i32
  %58 = load atomic i64, i64* @_ZZNK3net24URLRequestThrottlerEntry19ShouldRejectRequestERKNS_10URLRequestEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %59 = inttoptr i64 %58 to %"class.base::HistogramBase"*
  %60 = icmp eq i64 %58, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %55
  %62 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0), i32 1, i32 2, i32 3, i32 1) #11
  %63 = ptrtoint %"class.base::HistogramBase"* %62 to i64
  store atomic i64 %63, i64* @_ZZNK3net24URLRequestThrottlerEntry19ShouldRejectRequestERKNS_10URLRequestEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %64

64:                                               ; preds = %55, %61
  %65 = phi %"class.base::HistogramBase"* [ %59, %55 ], [ %62, %61 ]
  %66 = bitcast %"class.base::HistogramBase"* %65 to void (%"class.base::HistogramBase"*, i32)***
  %67 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %67, i64 6
  %69 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %68, align 8
  call void %69(%"class.base::HistogramBase"* %65, i32 %57) #11
  ret i1 %56
}

declare zeroext i1 @_ZNK3net12BackoffEntry19ShouldRejectRequestEv(%"class.net::BackoffEntry"*) local_unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3net24URLRequestThrottlerEntry32ReserveSendingTimeForNextRequestERKN4base9TimeTicksE(%"class.net::URLRequestThrottlerEntry"*, %"class.base::TimeTicks"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.base::TimeDelta", align 8
  %8 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8)
  %9 = bitcast %"class.net::URLRequestThrottlerEntry"* %0 to i64 (%"class.net::URLRequestThrottlerEntry"*)***
  %10 = load i64 (%"class.net::URLRequestThrottlerEntry"*)**, i64 (%"class.net::URLRequestThrottlerEntry"*)*** %9, align 8
  %11 = getelementptr inbounds i64 (%"class.net::URLRequestThrottlerEntry"*)*, i64 (%"class.net::URLRequestThrottlerEntry"*)** %10, i64 7
  %12 = load i64 (%"class.net::URLRequestThrottlerEntry"*)*, i64 (%"class.net::URLRequestThrottlerEntry"*)** %11, align 8
  %13 = tail call i64 %12(%"class.net::URLRequestThrottlerEntry"* %0) #11
  store i64 %13, i64* %5, align 8
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %1, i64 0, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp slt i64 %13, %15
  %17 = bitcast i64* %5 to %"class.base::TimeTicks"*
  %18 = select i1 %16, %"class.base::TimeTicks"* %1, %"class.base::TimeTicks"* %17
  %19 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = bitcast %"class.net::URLRequestThrottlerEntry"* %0 to %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)***
  %21 = load %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)**, %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)*, %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)** %21, i64 9
  %23 = load %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)*, %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)** %22, align 8
  %24 = tail call %"class.net::BackoffEntry"* %23(%"class.net::URLRequestThrottlerEntry"* %0) #11
  %25 = tail call i64 @_ZNK3net12BackoffEntry14GetReleaseTimeEv(%"class.net::BackoffEntry"* %24) #11
  store i64 %25, i64* %6, align 8
  %26 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 2
  %27 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %26, i64 0, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = icmp slt i64 %25, %28
  %30 = bitcast i64* %6 to %"class.base::TimeTicks"*
  %31 = select i1 %29, %"class.base::TimeTicks"* %26, %"class.base::TimeTicks"* %30
  %32 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %31, i64 0, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %18, i64 0, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp slt i64 %35, %33
  %37 = select i1 %36, %"class.base::TimeTicks"* %31, %"class.base::TimeTicks"* %18
  %38 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %37, i64 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  %40 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 3
  %41 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %40, i64 0, i32 0
  tail call void @_ZN4base14circular_dequeINS_9TimeTicksEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %41, i64 1) #11
  %42 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %40, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 3, i32 0, i32 2
  %44 = load i64, i64* %43, align 8
  %45 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %42, i64 %44) #11
  %46 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %45, i64 0, i32 0, i32 0
  store i64 %39, i64* %46, align 8
  %47 = load i64, i64* %43, align 8
  %48 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, -1
  %51 = icmp eq i64 %47, %50
  br i1 %51, label %52, label %53

52:                                               ; preds = %2
  store i64 0, i64* %43, align 8
  br label %56

53:                                               ; preds = %2
  %54 = add i64 %47, 1
  store i64 %54, i64* %43, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53, %52
  br label %57

57:                                               ; preds = %53, %56
  %58 = phi i64 [ %50, %56 ], [ %47, %53 ]
  %59 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZNK4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %42, i64 %58) #11
  store i64 %39, i64* %27, align 8
  %60 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 3, i32 0, i32 1
  %61 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 4, i32 0
  %62 = bitcast %"class.logging::CheckError"* %3 to i8*
  %63 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 2, i32 0, i32 0
  %64 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 5
  br label %65

65:                                               ; preds = %106, %57
  %66 = load i64, i64* %60, align 8
  %67 = call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %42, i64 %66) #11
  %68 = load i64, i64* %61, align 8
  %69 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %67, i64 0, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %68, -9223372036854775807
  %72 = icmp ult i64 %71, 2
  br i1 %72, label %80, label %73

73:                                               ; preds = %65
  %74 = icmp slt i64 %68, 0
  %75 = select i1 %74, i64 -9223372036854775808, i64 9223372036854775807
  %76 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %70, i64 %68) #11
  %77 = extractvalue { i64, i1 } %76, 1
  %78 = extractvalue { i64, i1 } %76, 0
  %79 = select i1 %77, i64 %75, i64 %78, !prof !2
  br label %87

80:                                               ; preds = %65
  %81 = add i64 %70, -9223372036854775807
  %82 = icmp ugt i64 %81, 1
  %83 = icmp eq i64 %70, %68
  %84 = or i1 %83, %82
  br i1 %84, label %87, label %85

85:                                               ; preds = %80
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0)) #11
  %86 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #11
  br label %87

87:                                               ; preds = %73, %80, %85
  %88 = phi i64 [ %79, %73 ], [ %68, %80 ], [ %68, %85 ]
  %89 = load i64, i64* %63, align 8
  %90 = icmp sgt i64 %88, %89
  %91 = load i64, i64* %60, align 8
  br i1 %90, label %92, label %106

92:                                               ; preds = %87
  %93 = load i64, i64* %43, align 8
  %94 = icmp ult i64 %93, %91
  br i1 %94, label %97, label %95

95:                                               ; preds = %92
  %96 = sub i64 %93, %91
  br label %101

97:                                               ; preds = %92
  %98 = load i64, i64* %48, align 8
  %99 = sub i64 %93, %91
  %100 = add i64 %99, %98
  br label %101

101:                                              ; preds = %95, %97
  %102 = phi i64 [ %96, %95 ], [ %100, %97 ]
  %103 = load i32, i32* %64, align 8
  %104 = zext i32 %103 to i64
  %105 = icmp ugt i64 %102, %104
  br i1 %105, label %106, label %116

106:                                              ; preds = %87, %101
  %107 = call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %42, i64 %91) #11
  %108 = load i64, i64* %60, align 8
  %109 = add i64 %108, 1
  %110 = call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %42, i64 %109) #11
  %111 = load i64, i64* %60, align 8
  %112 = add i64 %111, 1
  %113 = load i64, i64* %48, align 8
  %114 = icmp eq i64 %112, %113
  %115 = select i1 %114, i64 0, i64 %112
  store i64 %115, i64* %60, align 8
  call void @_ZN4base14circular_dequeINS_9TimeTicksEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* %41) #11
  br label %65

116:                                              ; preds = %101
  %117 = zext i32 %103 to i64
  br i1 %94, label %120, label %118

118:                                              ; preds = %116
  %119 = sub i64 %93, %91
  br label %124

120:                                              ; preds = %116
  %121 = load i64, i64* %48, align 8
  %122 = sub i64 %93, %91
  %123 = add i64 %122, %121
  br label %124

124:                                              ; preds = %118, %120
  %125 = phi i64 [ %119, %118 ], [ %123, %120 ]
  %126 = icmp eq i64 %125, %117
  br i1 %126, label %127, label %151

127:                                              ; preds = %124
  %128 = call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %42, i64 %91) #11
  %129 = load i64, i64* %61, align 8
  %130 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %128, i64 0, i32 0, i32 0
  %131 = load i64, i64* %130, align 8
  %132 = add i64 %129, -9223372036854775807
  %133 = icmp ult i64 %132, 2
  br i1 %133, label %141, label %134

134:                                              ; preds = %127
  %135 = icmp slt i64 %129, 0
  %136 = select i1 %135, i64 -9223372036854775808, i64 9223372036854775807
  %137 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %131, i64 %129) #11
  %138 = extractvalue { i64, i1 } %137, 1
  %139 = extractvalue { i64, i1 } %137, 0
  %140 = select i1 %138, i64 %136, i64 %139, !prof !2
  br label %149

141:                                              ; preds = %127
  %142 = add i64 %131, -9223372036854775807
  %143 = icmp ugt i64 %142, 1
  %144 = icmp eq i64 %131, %129
  %145 = or i1 %144, %143
  br i1 %145, label %149, label %146

146:                                              ; preds = %141
  %147 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %147) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0)) #11
  %148 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %147) #11
  br label %149

149:                                              ; preds = %134, %141, %146
  %150 = phi i64 [ %140, %134 ], [ %129, %141 ], [ %129, %146 ]
  store i64 %150, i64* %63, align 8
  br label %151

151:                                              ; preds = %149, %124
  %152 = bitcast %"class.base::TimeDelta"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %152) #11
  %153 = sub nsw i64 %39, %13
  %154 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %7, i64 0, i32 0
  store i64 %153, i64* %154, align 8
  %155 = call i64 @_ZNK4base9TimeDelta23InMillisecondsRoundedUpEv(%"class.base::TimeDelta"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %152) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8)
  ret i64 %155
}

declare i64 @_ZNK3net12BackoffEntry14GetReleaseTimeEv(%"class.net::BackoffEntry"*) local_unnamed_addr #1

declare i64 @_ZNK4base9TimeDelta23InMillisecondsRoundedUpEv(%"class.base::TimeDelta"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK3net24URLRequestThrottlerEntry32GetExponentialBackoffReleaseTimeEv(%"class.net::URLRequestThrottlerEntry"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 6
  %3 = load i8, i8* %2, align 4, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.net::URLRequestThrottlerEntry"* %0 to i64 (%"class.net::URLRequestThrottlerEntry"*)***
  %7 = load i64 (%"class.net::URLRequestThrottlerEntry"*)**, i64 (%"class.net::URLRequestThrottlerEntry"*)*** %6, align 8
  %8 = getelementptr inbounds i64 (%"class.net::URLRequestThrottlerEntry"*)*, i64 (%"class.net::URLRequestThrottlerEntry"*)** %7, i64 7
  %9 = load i64 (%"class.net::URLRequestThrottlerEntry"*)*, i64 (%"class.net::URLRequestThrottlerEntry"*)** %8, align 8
  %10 = tail call i64 %9(%"class.net::URLRequestThrottlerEntry"* %0) #11
  br label %18

11:                                               ; preds = %1
  %12 = bitcast %"class.net::URLRequestThrottlerEntry"* %0 to %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)***
  %13 = load %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)**, %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)*, %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)** %13, i64 8
  %15 = load %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)*, %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)** %14, align 8
  %16 = tail call %"class.net::BackoffEntry"* %15(%"class.net::URLRequestThrottlerEntry"* %0) #11
  %17 = tail call i64 @_ZNK3net12BackoffEntry14GetReleaseTimeEv(%"class.net::BackoffEntry"* %16) #11
  br label %18

18:                                               ; preds = %11, %5
  %19 = phi i64 [ %10, %5 ], [ %17, %11 ]
  ret i64 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net24URLRequestThrottlerEntry18UpdateWithResponseEi(%"class.net::URLRequestThrottlerEntry"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.net::URLRequestThrottlerEntry"* %0 to %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)***
  %4 = load %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)**, %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)*, %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)** %4, i64 9
  %6 = load %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)*, %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)** %5, align 8
  %7 = tail call %"class.net::BackoffEntry"* %6(%"class.net::URLRequestThrottlerEntry"* %0) #11
  %8 = add i32 %1, -500
  %9 = icmp ugt i32 %8, 9
  %10 = trunc i32 %8 to i10
  %11 = lshr i10 502, %10
  %12 = and i10 %11, 1
  %13 = icmp ne i10 %12, 0
  %14 = or i1 %13, %9
  tail call void @_ZN3net12BackoffEntry15InformOfRequestEb(%"class.net::BackoffEntry"* %7, i1 zeroext %14) #11
  ret void
}

declare void @_ZN3net12BackoffEntry15InformOfRequestEb(%"class.net::BackoffEntry"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN3net24URLRequestThrottlerEntry19IsConsideredSuccessEi(%"class.net::URLRequestThrottlerEntry"* nocapture readnone, i32) local_unnamed_addr #5 align 2 {
  %3 = add i32 %1, -500
  %4 = icmp ult i32 %3, 10
  br i1 %4, label %5, label %10

5:                                                ; preds = %2
  %6 = trunc i32 %3 to i10
  %7 = lshr i10 502, %6
  %8 = and i10 %7, 1
  %9 = icmp ne i10 %8, 0
  ret i1 %9

10:                                               ; preds = %2
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net24URLRequestThrottlerEntry27ReceivedContentWasMalformedEi(%"class.net::URLRequestThrottlerEntry"*, i32) unnamed_addr #0 align 2 {
  switch i32 %1, label %3 [
    i32 503, label %13
    i32 500, label %13
    i32 509, label %13
  ]

3:                                                ; preds = %2
  %4 = bitcast %"class.net::URLRequestThrottlerEntry"* %0 to %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)***
  %5 = load %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)**, %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)*, %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)** %5, i64 9
  %7 = load %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)*, %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)** %6, align 8
  %8 = tail call %"class.net::BackoffEntry"* %7(%"class.net::URLRequestThrottlerEntry"* %0) #11
  tail call void @_ZN3net12BackoffEntry15InformOfRequestEb(%"class.net::BackoffEntry"* %8, i1 zeroext false) #11
  %9 = load %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)**, %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)*** %4, align 8
  %10 = getelementptr inbounds %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)*, %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)** %9, i64 9
  %11 = load %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)*, %"class.net::BackoffEntry"* (%"class.net::URLRequestThrottlerEntry"*)** %10, align 8
  %12 = tail call %"class.net::BackoffEntry"* %11(%"class.net::URLRequestThrottlerEntry"* %0) #11
  tail call void @_ZN3net12BackoffEntry15InformOfRequestEb(%"class.net::BackoffEntry"* %12, i1 zeroext false) #11
  br label %13

13:                                               ; preds = %2, %2, %2, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net24URLRequestThrottlerEntryD2Ev(%"class.net::URLRequestThrottlerEntry"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN3net24URLRequestThrottlerEntryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 10
  tail call void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"* %3) #11
  %4 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 9
  %5 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #12
  br label %12

12:                                               ; preds = %1, %9
  %13 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 7
  tail call void @_ZN3net12BackoffEntryD1Ev(%"class.net::BackoffEntry"* %13) #11
  %14 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base14circular_dequeINS_9TimeTicksEED2Ev(%"class.base::circular_deque"* %14) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net12BackoffEntryD1Ev(%"class.net::BackoffEntry"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net24URLRequestThrottlerEntryD0Ev(%"class.net::URLRequestThrottlerEntry"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN3net24URLRequestThrottlerEntryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 10
  tail call void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"* %3) #11
  %4 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 9
  %5 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #12
  br label %12

12:                                               ; preds = %1, %9
  %13 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 7
  tail call void @_ZN3net12BackoffEntryD1Ev(%"class.net::BackoffEntry"* %13) #11
  %14 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base14circular_dequeINS_9TimeTicksEED2Ev(%"class.base::circular_deque"* %14) #11
  %15 = bitcast %"class.net::URLRequestThrottlerEntry"* %0 to i8*
  tail call void @_ZdlPv(i8* %15) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK3net24URLRequestThrottlerEntry14ImplGetTimeNowEv(%"class.net::URLRequestThrottlerEntry"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZN4base9TimeTicks3NowEv() #11
  ret i64 %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.net::BackoffEntry"* @_ZNK3net24URLRequestThrottlerEntry15GetBackoffEntryEv(%"class.net::URLRequestThrottlerEntry"* readnone) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 7
  ret %"class.net::BackoffEntry"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.net::BackoffEntry"* @_ZN3net24URLRequestThrottlerEntry15GetBackoffEntryEv(%"class.net::URLRequestThrottlerEntry"* readnone) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.net::URLRequestThrottlerEntry", %"class.net::URLRequestThrottlerEntry"* %0, i64 0, i32 7
  ret %"class.net::BackoffEntry"* %2
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINS_9TimeTicksEED2Ev(%"class.base::circular_deque"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, %3
  br i1 %6, label %18, label %7

7:                                                ; preds = %1
  %8 = icmp ugt i64 %5, %3
  %9 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %10 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %3) #11
  br i1 %8, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %13) #11
  %15 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 0) #11
  br label %16

16:                                               ; preds = %7, %11
  %17 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %5) #11
  br label %18

18:                                               ; preds = %16, %1
  %19 = bitcast %"class.base::circular_deque"* %0 to i8**
  %20 = load i8*, i8** %19, align 8
  tail call void @free(i8* %20) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"class.base::TimeTicks"*, %"class.base::TimeTicks"** %23, align 8
  %25 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %24, i64 %1
  ret %"class.base::TimeTicks"* %25
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.base::TimeTicks"* @_ZNK4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"class.base::TimeTicks"*, %"class.base::TimeTicks"** %23, align 8
  %25 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %24, i64 %1
  ret %"class.base::TimeTicks"* %25
}

declare void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"*, i32, %"struct.net::NetLogSource"* dereferenceable(16), i32, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #1

declare i64 @_ZNK3net12BackoffEntry19GetTimeUntilReleaseEv(%"class.net::BackoffEntry"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINS_9TimeTicksEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer"*
  %5 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #11
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 8) #11
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #11
  br i1 %37, label %38, label %39, !prof !2

38:                                               ; preds = %27
  tail call void @llvm.trap() #11
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #11
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINS_9TimeTicksEE10MoveBufferERNS_8internal12VectorBufferIS1_EEmmPS5_PmS8_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer"* nonnull %4, i64* %5, i64* %7) #11
  %45 = bitcast %"class.base::circular_deque"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #11
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #11
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINS_9TimeTicksEE10MoveBufferERNS_8internal12VectorBufferIS1_EEmmPS5_PmS8_(%"class.base::internal::VectorBuffer"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  store i64 0, i64* %4, align 8
  %9 = icmp ugt i64 %2, %1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %12 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %13 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %14 = load %"class.base::TimeTicks"*, %"class.base::TimeTicks"** %13, align 8
  tail call void @_ZN4base8internal12VectorBufferINS_9TimeTicksEE9MoveRangeIS2_Li0EEEvPS2_S5_S5_(%"class.base::TimeTicks"* %11, %"class.base::TimeTicks"* %12, %"class.base::TimeTicks"* %14)
  %15 = sub i64 %2, %1
  br label %28

16:                                               ; preds = %6
  %17 = icmp ult i64 %2, %1
  br i1 %17, label %18, label %28

18:                                               ; preds = %16
  %19 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %20 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %8)
  %21 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %22 = load %"class.base::TimeTicks"*, %"class.base::TimeTicks"** %21, align 8
  tail call void @_ZN4base8internal12VectorBufferINS_9TimeTicksEE9MoveRangeIS2_Li0EEEvPS2_S5_S5_(%"class.base::TimeTicks"* %19, %"class.base::TimeTicks"* %20, %"class.base::TimeTicks"* %22)
  %23 = sub i64 %8, %1
  %24 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 0)
  %25 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %26 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %23)
  tail call void @_ZN4base8internal12VectorBufferINS_9TimeTicksEE9MoveRangeIS2_Li0EEEvPS2_S5_S5_(%"class.base::TimeTicks"* %24, %"class.base::TimeTicks"* %25, %"class.base::TimeTicks"* %26)
  %27 = add i64 %23, %2
  br label %28

28:                                               ; preds = %16, %18, %10
  %29 = phi i64 [ %27, %18 ], [ %15, %10 ], [ 0, %16 ]
  store i64 %29, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #9

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferINS_9TimeTicksEE9MoveRangeIS2_Li0EEEvPS2_S5_S5_(%"class.base::TimeTicks"*, %"class.base::TimeTicks"*, %"class.base::TimeTicks"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = ptrtoint %"class.base::TimeTicks"* %0 to i64
  %6 = icmp ult %"class.base::TimeTicks"* %2, %1
  br i1 %6, label %7, label %41

7:                                                ; preds = %3
  %8 = ptrtoint %"class.base::TimeTicks"* %2 to i64
  %9 = ptrtoint %"class.base::TimeTicks"* %1 to i64
  %10 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %9, i64 %5) #11
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  %13 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %8, i64 %12) #11
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = or i1 %11, %14
  br i1 %15, label %16, label %17, !prof !2

16:                                               ; preds = %7
  tail call void @llvm.trap() #11
  unreachable

17:                                               ; preds = %7
  %18 = extractvalue { i64, i1 } %13, 0
  %19 = icmp ugt i64 %18, %5
  br i1 %19, label %20, label %46

20:                                               ; preds = %17
  %21 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0), i32 132, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.10, i64 0, i64 0)) #11
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  %23 = bitcast %"class.std::__1::basic_ostream"* %22 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::basic_ostream"* %22 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 %27
  %30 = getelementptr inbounds i8, i8* %29, i64 8
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, -75
  %34 = or i32 %33, 8
  store i32 %34, i32* %31, align 8
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %22, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i64 0, i64 0), i64 14) #11
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %35, i64 %5) #11
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %36, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i64 0, i64 0), i64 14) #11
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %37, i64 %9) #11
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %38, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i64 0, i64 0), i64 8) #11
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %39, i64 %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  br label %46

41:                                               ; preds = %3
  %42 = ptrtoint %"class.base::TimeTicks"* %1 to i64
  %43 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %42, i64 %5) #11
  %44 = extractvalue { i64, i1 } %43, 1
  br i1 %44, label %45, label %46, !prof !2

45:                                               ; preds = %41
  call void @llvm.trap() #11
  unreachable

46:                                               ; preds = %20, %17, %41
  %47 = phi { i64, i1 } [ %43, %41 ], [ %10, %17 ], [ %10, %20 ]
  %48 = extractvalue { i64, i1 } %47, 0
  %49 = bitcast %"class.base::TimeTicks"* %0 to i8*
  %50 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %49, i64 %48, i1 false)
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #11
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #11
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #11
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #11
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #11
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #11
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #12
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #11
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #11
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #11
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #2

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINS_9TimeTicksEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer"*
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #11
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 8) #11
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #11
  br i1 %31, label %32, label %33, !prof !2

32:                                               ; preds = %27
  tail call void @llvm.trap() #11
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #11
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINS_9TimeTicksEE10MoveBufferERNS_8internal12VectorBufferIS1_EEmmPS5_PmS8_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer"* nonnull %3, i64* %11, i64* %13) #11
  %39 = bitcast %"class.base::circular_deque"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #11
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #11
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZZNK3net24URLRequestThrottlerEntry19ShouldRejectRequestERKNS_10URLRequestEENK3$_0clEv: argument 0"}
!7 = distinct !{!7, !"_ZZNK3net24URLRequestThrottlerEntry19ShouldRejectRequestERKNS_10URLRequestEENK3$_0clEv"}
!8 = !{!9, !6}
!9 = distinct !{!9, !10, !"_ZN3net27NetLogRejectedRequestParamsEPKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEiRKN4base9TimeDeltaE: argument 0"}
!10 = distinct !{!10, !"_ZN3net27NetLogRejectedRequestParamsEPKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEiRKN4base9TimeDeltaE"}
!11 = !{!9}
