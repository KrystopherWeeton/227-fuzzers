; ModuleID = '../../third_party/lzma_sdk/7zBuf.c'
source_filename = "../../third_party/lzma_sdk/7zBuf.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.CBuf = type { i8*, i64 }
%struct.ISzAlloc = type { i8* (i8*, i64)*, void (i8*, i8*)* }

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @Buf_Init(%struct.CBuf* nocapture) local_unnamed_addr #0 {
  %2 = bitcast %struct.CBuf* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Buf_Create(%struct.CBuf* nocapture, i64, %struct.ISzAlloc*) local_unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.CBuf, %struct.CBuf* %0, i64 0, i32 1
  store i64 0, i64* %4, align 8
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.CBuf, %struct.CBuf* %0, i64 0, i32 0
  store i8* null, i8** %7, align 8
  br label %16

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.ISzAlloc, %struct.ISzAlloc* %2, i64 0, i32 0
  %10 = load i8* (i8*, i64)*, i8* (i8*, i64)** %9, align 8
  %11 = bitcast %struct.ISzAlloc* %2 to i8*
  %12 = tail call i8* %10(i8* %11, i64 %1) #3
  %13 = getelementptr inbounds %struct.CBuf, %struct.CBuf* %0, i64 0, i32 0
  store i8* %12, i8** %13, align 8
  %14 = icmp eq i8* %12, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %8
  store i64 %1, i64* %4, align 8
  br label %16

16:                                               ; preds = %8, %15, %6
  %17 = phi i32 [ 1, %6 ], [ 1, %15 ], [ 0, %8 ]
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @Buf_Free(%struct.CBuf* nocapture, %struct.ISzAlloc*) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.ISzAlloc, %struct.ISzAlloc* %1, i64 0, i32 1
  %4 = load void (i8*, i8*)*, void (i8*, i8*)** %3, align 8
  %5 = bitcast %struct.ISzAlloc* %1 to i8*
  %6 = getelementptr inbounds %struct.CBuf, %struct.CBuf* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void %4(i8* %5, i8* %7) #3
  %8 = bitcast %struct.CBuf* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
