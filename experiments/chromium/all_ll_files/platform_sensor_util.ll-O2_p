; ModuleID = '../../services/device/generic_sensor/platform_sensor_util.cc'
source_filename = "../../services/device/generic_sensor/platform_sensor_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.device::SensorReadingXYZ" = type { %"struct.device::SensorReadingBase", %"class.device::SensorReadingField", %"class.device::SensorReadingField", %"class.device::SensorReadingField" }
%"struct.device::SensorReadingBase" = type { %"class.device::SensorReadingField" }
%"class.device::SensorReadingField" = type { %"union.device::SensorReadingField<double>::Storage" }
%"union.device::SensorReadingField<double>::Storage" = type { i64 }
%"struct.device::SensorReadingQuat" = type { %"struct.device::SensorReadingXYZ", %"class.device::SensorReadingField" }
%"union.device::SensorReading" = type { %"struct.device::SensorReadingRaw" }
%"struct.device::SensorReadingRaw" = type { %"struct.device::SensorReadingBase", [4 x %"class.device::SensorReadingField"] }

; Function Attrs: nounwind readnone ssp uwtable
define hidden double @_ZN6device15RoundToMultipleEdd(double, double) local_unnamed_addr #0 {
  %3 = fdiv double %0, %1
  %4 = fcmp olt double %0, 0.000000e+00
  br i1 %4, label %5, label %10

5:                                                ; preds = %2
  %6 = fsub double 5.000000e-01, %3
  %7 = tail call double @llvm.floor.f64(double %6)
  %8 = fmul double %7, %1
  %9 = fsub double -0.000000e+00, %8
  br label %14

10:                                               ; preds = %2
  %11 = fadd double %3, 5.000000e-01
  %12 = tail call double @llvm.floor.f64(double %11)
  %13 = fmul double %12, %1
  br label %14

14:                                               ; preds = %10, %5
  %15 = phi double [ %9, %5 ], [ %13, %10 ]
  ret double %15
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #1

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN6device25RoundAccelerometerReadingEPNS_16SensorReadingXYZE(%"struct.device::SensorReadingXYZ"* nocapture) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %"struct.device::SensorReadingXYZ", %"struct.device::SensorReadingXYZ"* %0, i64 0, i32 1
  %3 = bitcast %"class.device::SensorReadingField"* %2 to <2 x double>*
  %4 = load <2 x double>, <2 x double>* %3, align 8
  %5 = fdiv <2 x double> %4, <double 1.000000e-01, double 1.000000e-01>
  %6 = fcmp olt <2 x double> %4, zeroinitializer
  %7 = fsub <2 x double> <double -0.000000e+00, double -0.000000e+00>, %5
  %8 = select <2 x i1> %6, <2 x double> %7, <2 x double> %5
  %9 = fadd <2 x double> %8, <double 5.000000e-01, double 5.000000e-01>
  %10 = select <2 x i1> %6, <2 x double> <double -1.000000e-01, double -1.000000e-01>, <2 x double> <double 1.000000e-01, double 1.000000e-01>
  %11 = call <2 x double> @llvm.floor.v2f64(<2 x double> %9)
  %12 = fmul <2 x double> %11, %10
  %13 = bitcast %"class.device::SensorReadingField"* %2 to <2 x double>*
  store <2 x double> %12, <2 x double>* %13, align 8
  %14 = getelementptr inbounds %"struct.device::SensorReadingXYZ", %"struct.device::SensorReadingXYZ"* %0, i64 0, i32 3
  %15 = bitcast %"class.device::SensorReadingField"* %14 to double*
  %16 = load double, double* %15, align 8
  %17 = fdiv double %16, 1.000000e-01
  %18 = fcmp olt double %16, 0.000000e+00
  %19 = fsub double -0.000000e+00, %17
  %20 = select i1 %18, double %19, double %17
  %21 = fadd double %20, 5.000000e-01
  %22 = select i1 %18, double -1.000000e-01, double 1.000000e-01
  %23 = tail call double @llvm.floor.f64(double %21) #5
  %24 = fmul double %23, %22
  store double %24, double* %15, align 8
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN6device21RoundGyroscopeReadingEPNS_16SensorReadingXYZE(%"struct.device::SensorReadingXYZ"* nocapture) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %"struct.device::SensorReadingXYZ", %"struct.device::SensorReadingXYZ"* %0, i64 0, i32 1
  %3 = bitcast %"class.device::SensorReadingField"* %2 to <2 x double>*
  %4 = load <2 x double>, <2 x double>* %3, align 8
  %5 = fdiv <2 x double> %4, <double 0x3F5C987103B761F5, double 0x3F5C987103B761F5>
  %6 = fcmp olt <2 x double> %4, zeroinitializer
  %7 = fsub <2 x double> <double -0.000000e+00, double -0.000000e+00>, %5
  %8 = select <2 x i1> %6, <2 x double> %7, <2 x double> %5
  %9 = fadd <2 x double> %8, <double 5.000000e-01, double 5.000000e-01>
  %10 = select <2 x i1> %6, <2 x double> <double 0xBF5C987103B761F5, double 0xBF5C987103B761F5>, <2 x double> <double 0x3F5C987103B761F5, double 0x3F5C987103B761F5>
  %11 = call <2 x double> @llvm.floor.v2f64(<2 x double> %9)
  %12 = fmul <2 x double> %11, %10
  %13 = bitcast %"class.device::SensorReadingField"* %2 to <2 x double>*
  store <2 x double> %12, <2 x double>* %13, align 8
  %14 = getelementptr inbounds %"struct.device::SensorReadingXYZ", %"struct.device::SensorReadingXYZ"* %0, i64 0, i32 3
  %15 = bitcast %"class.device::SensorReadingField"* %14 to double*
  %16 = load double, double* %15, align 8
  %17 = fdiv double %16, 0x3F5C987103B761F5
  %18 = fcmp olt double %16, 0.000000e+00
  %19 = fsub double -0.000000e+00, %17
  %20 = select i1 %18, double %19, double %17
  %21 = fadd double %20, 5.000000e-01
  %22 = select i1 %18, double 0xBF5C987103B761F5, double 0x3F5C987103B761F5
  %23 = tail call double @llvm.floor.f64(double %21) #5
  %24 = fmul double %23, %22
  store double %24, double* %15, align 8
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN6device33RoundOrientationQuaternionReadingEPNS_17SensorReadingQuatE(%"struct.device::SensorReadingQuat"* nocapture) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %"struct.device::SensorReadingQuat", %"struct.device::SensorReadingQuat"* %0, i64 0, i32 1
  %3 = bitcast %"class.device::SensorReadingField"* %2 to double*
  %4 = load double, double* %3, align 8
  %5 = tail call double @acos(double %4) #5
  %6 = fmul double %5, 2.000000e+00
  %7 = fdiv double %6, 0x3F5C987103B761F5
  %8 = fcmp olt double %6, 0.000000e+00
  %9 = fsub double -0.000000e+00, %7
  %10 = select i1 %8, double %9, double %7
  %11 = fadd double %10, 5.000000e-01
  %12 = select i1 %8, double 0xBF5C987103B761F5, double 0x3F5C987103B761F5
  %13 = tail call double @llvm.floor.f64(double %11) #5
  %14 = fmul double %13, %12
  %15 = fmul double %14, 5.000000e-01
  %16 = fcmp oeq double %15, 0.000000e+00
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  store double 1.000000e+00, double* %3, align 8
  %18 = getelementptr inbounds %"struct.device::SensorReadingQuat", %"struct.device::SensorReadingQuat"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %19 = bitcast i64* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false)
  br label %74

20:                                               ; preds = %1
  %21 = tail call double @sin(double %5) #5
  %22 = getelementptr inbounds %"struct.device::SensorReadingQuat", %"struct.device::SensorReadingQuat"* %0, i64 0, i32 0, i32 1
  %23 = bitcast %"class.device::SensorReadingField"* %22 to <2 x double>*
  %24 = load <2 x double>, <2 x double>* %23, align 8
  %25 = insertelement <2 x double> undef, double %21, i32 0
  %26 = shufflevector <2 x double> %25, <2 x double> undef, <2 x i32> zeroinitializer
  %27 = fdiv <2 x double> %24, %26
  %28 = getelementptr inbounds %"struct.device::SensorReadingQuat", %"struct.device::SensorReadingQuat"* %0, i64 0, i32 0, i32 3
  %29 = bitcast %"class.device::SensorReadingField"* %28 to double*
  %30 = load double, double* %29, align 8
  %31 = fdiv double %30, %21
  %32 = fmul <2 x double> %27, %27
  %33 = extractelement <2 x double> %32, i32 0
  %34 = extractelement <2 x double> %32, i32 1
  %35 = fadd double %33, %34
  %36 = tail call double @sqrt(double %35) #5
  %37 = extractelement <2 x double> %27, i32 0
  %38 = extractelement <2 x double> %27, i32 1
  %39 = tail call double @atan2(double %37, double %38) #5
  %40 = tail call double @atan2(double %31, double %36) #5
  %41 = fdiv double %39, 0x3F5C987103B761F5
  %42 = fcmp olt double %39, 0.000000e+00
  %43 = fsub double -0.000000e+00, %41
  %44 = select i1 %42, double %43, double %41
  %45 = fadd double %44, 5.000000e-01
  %46 = select i1 %42, double 0xBF5C987103B761F5, double 0x3F5C987103B761F5
  %47 = tail call double @llvm.floor.f64(double %45) #5
  %48 = fmul double %47, %46
  %49 = fdiv double %40, 0x3F5C987103B761F5
  %50 = fcmp olt double %40, 0.000000e+00
  %51 = fsub double -0.000000e+00, %49
  %52 = select i1 %50, double %51, double %49
  %53 = fadd double %52, 5.000000e-01
  %54 = select i1 %50, double 0xBF5C987103B761F5, double 0x3F5C987103B761F5
  %55 = tail call double @llvm.floor.f64(double %53) #5
  %56 = fmul double %55, %54
  %57 = tail call double @sin(double %48) #5
  %58 = tail call double @cos(double %56) #5
  %59 = tail call double @cos(double %48) #5
  %60 = tail call double @cos(double %56) #5
  %61 = insertelement <2 x double> undef, double %57, i32 0
  %62 = insertelement <2 x double> %61, double %59, i32 1
  %63 = insertelement <2 x double> undef, double %58, i32 0
  %64 = insertelement <2 x double> %63, double %60, i32 1
  %65 = fmul <2 x double> %62, %64
  %66 = tail call double @sin(double %56) #5
  %67 = tail call double @sin(double %15) #5
  %68 = insertelement <2 x double> undef, double %67, i32 0
  %69 = shufflevector <2 x double> %68, <2 x double> undef, <2 x i32> zeroinitializer
  %70 = fmul <2 x double> %65, %69
  %71 = bitcast %"class.device::SensorReadingField"* %22 to <2 x double>*
  store <2 x double> %70, <2 x double>* %71, align 8
  %72 = fmul double %66, %67
  store double %72, double* %29, align 8
  %73 = tail call double @cos(double %15) #5
  store double %73, double* %3, align 8
  br label %74

74:                                               ; preds = %20, %17
  ret void
}

; Function Attrs: nofree nounwind
declare double @acos(double) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare double @sin(double) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare double @sqrt(double) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare double @atan2(double, double) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare double @cos(double) local_unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN6device28RoundOrientationEulerReadingEPNS_16SensorReadingXYZE(%"struct.device::SensorReadingXYZ"* nocapture) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %"struct.device::SensorReadingXYZ", %"struct.device::SensorReadingXYZ"* %0, i64 0, i32 1
  %3 = bitcast %"class.device::SensorReadingField"* %2 to <2 x double>*
  %4 = load <2 x double>, <2 x double>* %3, align 8
  %5 = fdiv <2 x double> %4, <double 1.000000e-01, double 1.000000e-01>
  %6 = fcmp olt <2 x double> %4, zeroinitializer
  %7 = fsub <2 x double> <double -0.000000e+00, double -0.000000e+00>, %5
  %8 = select <2 x i1> %6, <2 x double> %7, <2 x double> %5
  %9 = fadd <2 x double> %8, <double 5.000000e-01, double 5.000000e-01>
  %10 = select <2 x i1> %6, <2 x double> <double -1.000000e-01, double -1.000000e-01>, <2 x double> <double 1.000000e-01, double 1.000000e-01>
  %11 = call <2 x double> @llvm.floor.v2f64(<2 x double> %9)
  %12 = fmul <2 x double> %11, %10
  %13 = bitcast %"class.device::SensorReadingField"* %2 to <2 x double>*
  store <2 x double> %12, <2 x double>* %13, align 8
  %14 = getelementptr inbounds %"struct.device::SensorReadingXYZ", %"struct.device::SensorReadingXYZ"* %0, i64 0, i32 3
  %15 = bitcast %"class.device::SensorReadingField"* %14 to double*
  %16 = load double, double* %15, align 8
  %17 = fdiv double %16, 1.000000e-01
  %18 = fcmp olt double %16, 0.000000e+00
  %19 = fsub double -0.000000e+00, %17
  %20 = select i1 %18, double %19, double %17
  %21 = fadd double %20, 5.000000e-01
  %22 = select i1 %18, double -1.000000e-01, double 1.000000e-01
  %23 = tail call double @llvm.floor.f64(double %21) #5
  %24 = fmul double %23, %22
  store double %24, double* %15, align 8
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN6device18RoundSensorReadingEPNS_13SensorReadingENS_5mojom10SensorTypeE(%"union.device::SensorReading"* nocapture, i32) local_unnamed_addr #2 {
  switch i32 %1, label %77 [
    i32 2, label %3
    i32 4, label %3
    i32 3, label %3
    i32 5, label %27
    i32 8, label %51
    i32 10, label %51
    i32 9, label %75
    i32 11, label %75
  ]

3:                                                ; preds = %2, %2, %2
  %4 = getelementptr inbounds %"union.device::SensorReading", %"union.device::SensorReading"* %0, i64 0, i32 0, i32 1, i64 0
  %5 = bitcast %"class.device::SensorReadingField"* %4 to <2 x double>*
  %6 = load <2 x double>, <2 x double>* %5, align 8
  %7 = fdiv <2 x double> %6, <double 1.000000e-01, double 1.000000e-01>
  %8 = fcmp olt <2 x double> %6, zeroinitializer
  %9 = fsub <2 x double> <double -0.000000e+00, double -0.000000e+00>, %7
  %10 = select <2 x i1> %8, <2 x double> %9, <2 x double> %7
  %11 = fadd <2 x double> %10, <double 5.000000e-01, double 5.000000e-01>
  %12 = select <2 x i1> %8, <2 x double> <double -1.000000e-01, double -1.000000e-01>, <2 x double> <double 1.000000e-01, double 1.000000e-01>
  %13 = call <2 x double> @llvm.floor.v2f64(<2 x double> %11)
  %14 = fmul <2 x double> %13, %12
  %15 = bitcast %"class.device::SensorReadingField"* %4 to <2 x double>*
  store <2 x double> %14, <2 x double>* %15, align 8
  %16 = getelementptr inbounds %"union.device::SensorReading", %"union.device::SensorReading"* %0, i64 0, i32 0, i32 1, i64 2
  %17 = bitcast %"class.device::SensorReadingField"* %16 to double*
  %18 = load double, double* %17, align 8
  %19 = fdiv double %18, 1.000000e-01
  %20 = fcmp olt double %18, 0.000000e+00
  %21 = fsub double -0.000000e+00, %19
  %22 = select i1 %20, double %21, double %19
  %23 = fadd double %22, 5.000000e-01
  %24 = select i1 %20, double -1.000000e-01, double 1.000000e-01
  %25 = tail call double @llvm.floor.f64(double %23) #5
  %26 = fmul double %25, %24
  store double %26, double* %17, align 8
  br label %77

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"union.device::SensorReading", %"union.device::SensorReading"* %0, i64 0, i32 0, i32 1, i64 0
  %29 = bitcast %"class.device::SensorReadingField"* %28 to <2 x double>*
  %30 = load <2 x double>, <2 x double>* %29, align 8
  %31 = fdiv <2 x double> %30, <double 0x3F5C987103B761F5, double 0x3F5C987103B761F5>
  %32 = fcmp olt <2 x double> %30, zeroinitializer
  %33 = fsub <2 x double> <double -0.000000e+00, double -0.000000e+00>, %31
  %34 = select <2 x i1> %32, <2 x double> %33, <2 x double> %31
  %35 = fadd <2 x double> %34, <double 5.000000e-01, double 5.000000e-01>
  %36 = select <2 x i1> %32, <2 x double> <double 0xBF5C987103B761F5, double 0xBF5C987103B761F5>, <2 x double> <double 0x3F5C987103B761F5, double 0x3F5C987103B761F5>
  %37 = call <2 x double> @llvm.floor.v2f64(<2 x double> %35)
  %38 = fmul <2 x double> %37, %36
  %39 = bitcast %"class.device::SensorReadingField"* %28 to <2 x double>*
  store <2 x double> %38, <2 x double>* %39, align 8
  %40 = getelementptr inbounds %"union.device::SensorReading", %"union.device::SensorReading"* %0, i64 0, i32 0, i32 1, i64 2
  %41 = bitcast %"class.device::SensorReadingField"* %40 to double*
  %42 = load double, double* %41, align 8
  %43 = fdiv double %42, 0x3F5C987103B761F5
  %44 = fcmp olt double %42, 0.000000e+00
  %45 = fsub double -0.000000e+00, %43
  %46 = select i1 %44, double %45, double %43
  %47 = fadd double %46, 5.000000e-01
  %48 = select i1 %44, double 0xBF5C987103B761F5, double 0x3F5C987103B761F5
  %49 = tail call double @llvm.floor.f64(double %47) #5
  %50 = fmul double %49, %48
  store double %50, double* %41, align 8
  br label %77

51:                                               ; preds = %2, %2
  %52 = getelementptr inbounds %"union.device::SensorReading", %"union.device::SensorReading"* %0, i64 0, i32 0, i32 1, i64 0
  %53 = bitcast %"class.device::SensorReadingField"* %52 to <2 x double>*
  %54 = load <2 x double>, <2 x double>* %53, align 8
  %55 = fdiv <2 x double> %54, <double 1.000000e-01, double 1.000000e-01>
  %56 = fcmp olt <2 x double> %54, zeroinitializer
  %57 = fsub <2 x double> <double -0.000000e+00, double -0.000000e+00>, %55
  %58 = select <2 x i1> %56, <2 x double> %57, <2 x double> %55
  %59 = fadd <2 x double> %58, <double 5.000000e-01, double 5.000000e-01>
  %60 = select <2 x i1> %56, <2 x double> <double -1.000000e-01, double -1.000000e-01>, <2 x double> <double 1.000000e-01, double 1.000000e-01>
  %61 = call <2 x double> @llvm.floor.v2f64(<2 x double> %59)
  %62 = fmul <2 x double> %61, %60
  %63 = bitcast %"class.device::SensorReadingField"* %52 to <2 x double>*
  store <2 x double> %62, <2 x double>* %63, align 8
  %64 = getelementptr inbounds %"union.device::SensorReading", %"union.device::SensorReading"* %0, i64 0, i32 0, i32 1, i64 2
  %65 = bitcast %"class.device::SensorReadingField"* %64 to double*
  %66 = load double, double* %65, align 8
  %67 = fdiv double %66, 1.000000e-01
  %68 = fcmp olt double %66, 0.000000e+00
  %69 = fsub double -0.000000e+00, %67
  %70 = select i1 %68, double %69, double %67
  %71 = fadd double %70, 5.000000e-01
  %72 = select i1 %68, double -1.000000e-01, double 1.000000e-01
  %73 = tail call double @llvm.floor.f64(double %71) #5
  %74 = fmul double %73, %72
  store double %74, double* %65, align 8
  br label %77

75:                                               ; preds = %2, %2
  %76 = bitcast %"union.device::SensorReading"* %0 to %"struct.device::SensorReadingQuat"*
  tail call void @_ZN6device33RoundOrientationQuaternionReadingEPNS_17SensorReadingQuatE(%"struct.device::SensorReadingQuat"* %76)
  br label %77

77:                                               ; preds = %2, %75, %51, %27, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind readnone speculatable
declare <2 x double> @llvm.floor.v2f64(<2 x double>) #1

attributes #0 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
