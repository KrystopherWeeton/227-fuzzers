; ModuleID = '../../third_party/icu/source/common/uvectr64.cpp'
source_filename = "../../third_party/icu/source/common/uvectr64.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.icu_69::UVector64" = type { %"class.icu_69::UObject", i32, i32, i32, i64* }
%"class.icu_69::UObject" = type { i32 (...)** }

@_ZZN6icu_699UVector6416getStaticClassIDEvE7classID = internal global i8 0, align 1
@_ZTVN6icu_699UVector64E = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_699UVector64E to i8*), i8* bitcast (void (%"class.icu_69::UVector64"*)* @_ZN6icu_699UVector64D2Ev to i8*), i8* bitcast (void (%"class.icu_69::UVector64"*)* @_ZN6icu_699UVector64D0Ev to i8*), i8* bitcast (i8* (%"class.icu_69::UVector64"*)* @_ZNK6icu_699UVector6417getDynamicClassIDEv to i8*)] }, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global i8*
@_ZTSN6icu_699UVector64E = hidden constant [20 x i8] c"N6icu_699UVector64E\00", align 1
@_ZTIN6icu_697UObjectE = external constant i8*
@_ZTIN6icu_699UVector64E = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZTSN6icu_699UVector64E, i32 0, i32 0), i8* bitcast (i8** @_ZTIN6icu_697UObjectE to i8*) }, align 8

@_ZN6icu_699UVector64C1ER10UErrorCode = hidden unnamed_addr alias void (%"class.icu_69::UVector64"*, i32*), void (%"class.icu_69::UVector64"*, i32*)* @_ZN6icu_699UVector64C2ER10UErrorCode
@_ZN6icu_699UVector64C1EiR10UErrorCode = hidden unnamed_addr alias void (%"class.icu_69::UVector64"*, i32, i32*), void (%"class.icu_69::UVector64"*, i32, i32*)* @_ZN6icu_699UVector64C2EiR10UErrorCode
@_ZN6icu_699UVector64D1Ev = hidden unnamed_addr alias void (%"class.icu_69::UVector64"*), void (%"class.icu_69::UVector64"*)* @_ZN6icu_699UVector64D2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull i8* @_ZN6icu_699UVector6416getStaticClassIDEv() local_unnamed_addr #0 align 2 {
  ret i8* @_ZZN6icu_699UVector6416getStaticClassIDEvE7classID
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull i8* @_ZNK6icu_699UVector6417getDynamicClassIDEv(%"class.icu_69::UVector64"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i8* @_ZZN6icu_699UVector6416getStaticClassIDEvE7classID
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_699UVector64C2ER10UErrorCode(%"class.icu_69::UVector64"* nocapture, i32* nocapture dereferenceable(4)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6icu_699UVector64E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 1
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 2
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 3
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 4
  store i64* null, i64** %7, align 8
  %8 = tail call noalias i8* @uprv_malloc_69(i64 64) #9
  %9 = bitcast i64** %7 to i8**
  store i8* %8, i8** %9, align 8
  %10 = icmp eq i8* %8, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  store i32 7, i32* %1, align 4
  br label %13

12:                                               ; preds = %2
  store i32 8, i32* %5, align 4
  br label %13

13:                                               ; preds = %11, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_699UVector645_initEiR10UErrorCode(%"class.icu_69::UVector64"* nocapture, i32, i32* nocapture dereferenceable(4)) local_unnamed_addr #1 align 2 {
  %4 = icmp slt i32 %1, 1
  %5 = select i1 %4, i32 8, i32 %1
  %6 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, 0
  %9 = icmp slt i32 %7, %5
  %10 = and i1 %8, %9
  %11 = select i1 %10, i32 %7, i32 %5
  %12 = icmp sgt i32 %11, 268435455
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = tail call i32 @uprv_min_69(i32 8, i32 %7) #10
  br label %15

15:                                               ; preds = %13, %3
  %16 = phi i32 [ %14, %13 ], [ %11, %3 ]
  %17 = sext i32 %16 to i64
  %18 = shl nsw i64 %17, 3
  %19 = tail call noalias i8* @uprv_malloc_69(i64 %18) #9
  %20 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 4
  %21 = bitcast i64** %20 to i8**
  store i8* %19, i8** %21, align 8
  %22 = icmp eq i8* %19, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %15
  store i32 7, i32* %2, align 4
  br label %26

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 2
  store i32 %16, i32* %25, align 4
  br label %26

26:                                               ; preds = %24, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_699UVector64C2EiR10UErrorCode(%"class.icu_69::UVector64"* nocapture, i32, i32* nocapture dereferenceable(4)) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6icu_699UVector64E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 1
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 2
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 3
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 4
  store i64* null, i64** %8, align 8
  %9 = icmp slt i32 %1, 1
  %10 = select i1 %9, i32 8, i32 %1
  %11 = icmp sgt i32 %10, 268435455
  br i1 %11, label %12, label %14

12:                                               ; preds = %3
  %13 = tail call i32 @uprv_min_69(i32 8, i32 0) #10
  br label %14

14:                                               ; preds = %12, %3
  %15 = phi i32 [ %13, %12 ], [ %10, %3 ]
  %16 = sext i32 %15 to i64
  %17 = shl nsw i64 %16, 3
  %18 = tail call noalias i8* @uprv_malloc_69(i64 %17) #9
  %19 = bitcast i64** %8 to i8**
  store i8* %18, i8** %19, align 8
  %20 = icmp eq i8* %18, null
  br i1 %20, label %21, label %22

21:                                               ; preds = %14
  store i32 7, i32* %2, align 4
  br label %23

22:                                               ; preds = %14
  store i32 %15, i32* %6, align 4
  br label %23

23:                                               ; preds = %21, %22
  ret void
}

declare i32 @uprv_min_69(i32, i32) local_unnamed_addr #2

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_699UVector64D2Ev(%"class.icu_69::UVector64"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6icu_699UVector64E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 4
  %4 = bitcast i64** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  tail call void @uprv_free_69(i8* %5) #10
  store i64* null, i64** %3, align 8
  %6 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 0
  tail call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %6) #10
  ret void
}

declare void @uprv_free_69(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_699UVector64D0Ev(%"class.icu_69::UVector64"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6icu_699UVector64E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 4
  %4 = bitcast i64** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  tail call void @uprv_free_69(i8* %5) #10
  store i64* null, i64** %3, align 8
  %6 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 0
  tail call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %6) #10
  %7 = bitcast %"class.icu_69::UVector64"* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %7) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6icu_697UMemorydlEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_699UVector646assignERKS0_R10UErrorCode(%"class.icu_69::UVector64"* nocapture, %"class.icu_69::UVector64"* nocapture readonly dereferenceable(32), i32* nocapture dereferenceable(4)) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %5, -1
  br i1 %6, label %7, label %11

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %9, %5
  br i1 %10, label %11, label %52

11:                                               ; preds = %7, %3
  %12 = load i32, i32* %2, align 4
  %13 = icmp slt i32 %12, 1
  br i1 %13, label %14, label %143

14:                                               ; preds = %11
  %15 = icmp slt i32 %5, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %14
  store i32 1, i32* %2, align 4
  br label %143

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp slt i32 %19, %5
  br i1 %20, label %21, label %52

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 3
  %23 = load i32, i32* %22, align 8
  %24 = icmp sgt i32 %23, 0
  %25 = icmp slt i32 %23, %5
  %26 = and i1 %24, %25
  br i1 %26, label %27, label %28

27:                                               ; preds = %21
  store i32 15, i32* %2, align 4
  br label %143

28:                                               ; preds = %21
  %29 = icmp sgt i32 %19, 1073741823
  br i1 %29, label %30, label %31

30:                                               ; preds = %28
  store i32 1, i32* %2, align 4
  br label %143

31:                                               ; preds = %28
  %32 = shl nsw i32 %19, 1
  %33 = icmp slt i32 %32, %5
  %34 = select i1 %33, i32 %5, i32 %32
  %35 = icmp sgt i32 %34, %23
  %36 = and i1 %24, %35
  %37 = select i1 %36, i32 %23, i32 %34
  %38 = icmp sgt i32 %37, 268435455
  br i1 %38, label %39, label %40

39:                                               ; preds = %31
  store i32 1, i32* %2, align 4
  br label %143

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 4
  %42 = bitcast i64** %41 to i8**
  %43 = load i8*, i8** %42, align 8
  %44 = sext i32 %37 to i64
  %45 = shl nsw i64 %44, 3
  %46 = tail call i8* @uprv_realloc_69(i8* %43, i64 %45) #11
  %47 = icmp eq i8* %46, null
  br i1 %47, label %48, label %49

48:                                               ; preds = %40
  store i32 7, i32* %2, align 4
  br label %143

49:                                               ; preds = %40
  store i8* %46, i8** %42, align 8
  store i32 %37, i32* %18, align 4
  %50 = load i32, i32* %4, align 8
  %51 = icmp slt i32 %50, 0
  br i1 %51, label %143, label %52

52:                                               ; preds = %7, %17, %49
  %53 = phi i32 [ %50, %49 ], [ %5, %17 ], [ %5, %7 ]
  %54 = phi i32 [ %37, %49 ], [ %19, %17 ], [ %9, %7 ]
  %55 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = icmp slt i32 %56, %53
  br i1 %57, label %58, label %125

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 2
  %60 = icmp slt i32 %54, %53
  br i1 %60, label %61, label %87

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 3
  %63 = load i32, i32* %62, align 8
  %64 = icmp sgt i32 %63, 0
  %65 = icmp slt i32 %63, %53
  %66 = and i1 %64, %65
  %67 = icmp sgt i32 %54, 1073741823
  %68 = or i1 %67, %66
  br i1 %68, label %126, label %69

69:                                               ; preds = %61
  %70 = shl nsw i32 %54, 1
  %71 = icmp slt i32 %70, %53
  %72 = select i1 %71, i32 %53, i32 %70
  %73 = icmp sgt i32 %72, %63
  %74 = and i1 %64, %73
  %75 = select i1 %74, i32 %63, i32 %72
  %76 = icmp sgt i32 %75, 268435455
  br i1 %76, label %126, label %77

77:                                               ; preds = %69
  %78 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 4
  %79 = bitcast i64** %78 to i8**
  %80 = load i8*, i8** %79, align 8
  %81 = sext i32 %75 to i64
  %82 = shl nsw i64 %81, 3
  %83 = tail call i8* @uprv_realloc_69(i8* %80, i64 %82) #11
  %84 = icmp eq i8* %83, null
  br i1 %84, label %126, label %85

85:                                               ; preds = %77
  store i8* %83, i8** %79, align 8
  store i32 %75, i32* %59, align 4
  %86 = load i32, i32* %55, align 8
  br label %87

87:                                               ; preds = %85, %58
  %88 = phi i32 [ %86, %85 ], [ %56, %58 ]
  %89 = icmp slt i32 %88, %53
  br i1 %89, label %90, label %125

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 4
  %92 = sext i32 %88 to i64
  %93 = sext i32 %53 to i64
  %94 = sub nsw i64 %93, %92
  %95 = xor i64 %92, -1
  %96 = add nsw i64 %95, %93
  %97 = and i64 %94, 3
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %107, label %99

99:                                               ; preds = %90, %99
  %100 = phi i64 [ %104, %99 ], [ %92, %90 ]
  %101 = phi i64 [ %105, %99 ], [ %97, %90 ]
  %102 = load i64*, i64** %91, align 8
  %103 = getelementptr inbounds i64, i64* %102, i64 %100
  store i64 0, i64* %103, align 8
  %104 = add nsw i64 %100, 1
  %105 = add i64 %101, -1
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %107, label %99, !llvm.loop !2

107:                                              ; preds = %99, %90
  %108 = phi i64 [ %92, %90 ], [ %104, %99 ]
  %109 = icmp ult i64 %96, 3
  br i1 %109, label %125, label %110

110:                                              ; preds = %107, %110
  %111 = phi i64 [ %123, %110 ], [ %108, %107 ]
  %112 = load i64*, i64** %91, align 8
  %113 = getelementptr inbounds i64, i64* %112, i64 %111
  store i64 0, i64* %113, align 8
  %114 = add nsw i64 %111, 1
  %115 = load i64*, i64** %91, align 8
  %116 = getelementptr inbounds i64, i64* %115, i64 %114
  store i64 0, i64* %116, align 8
  %117 = add nsw i64 %111, 2
  %118 = load i64*, i64** %91, align 8
  %119 = getelementptr inbounds i64, i64* %118, i64 %117
  store i64 0, i64* %119, align 8
  %120 = add nsw i64 %111, 3
  %121 = load i64*, i64** %91, align 8
  %122 = getelementptr inbounds i64, i64* %121, i64 %120
  store i64 0, i64* %122, align 8
  %123 = add nsw i64 %111, 4
  %124 = icmp eq i64 %123, %93
  br i1 %124, label %125, label %110

125:                                              ; preds = %107, %110, %87, %52
  store i32 %53, i32* %55, align 8
  br label %126

126:                                              ; preds = %61, %69, %77, %125
  %127 = load i32, i32* %4, align 8
  %128 = icmp sgt i32 %127, 0
  br i1 %128, label %129, label %143

129:                                              ; preds = %126
  %130 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1, i64 0, i32 4
  %131 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 4
  br label %132

132:                                              ; preds = %129, %132
  %133 = phi i64 [ 0, %129 ], [ %139, %132 ]
  %134 = load i64*, i64** %130, align 8
  %135 = getelementptr inbounds i64, i64* %134, i64 %133
  %136 = load i64, i64* %135, align 8
  %137 = load i64*, i64** %131, align 8
  %138 = getelementptr inbounds i64, i64* %137, i64 %133
  store i64 %136, i64* %138, align 8
  %139 = add nuw nsw i64 %133, 1
  %140 = load i32, i32* %4, align 8
  %141 = sext i32 %140 to i64
  %142 = icmp slt i64 %139, %141
  br i1 %142, label %132, label %143

143:                                              ; preds = %132, %49, %126, %48, %39, %11, %30, %27, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_699UVector647setSizeEi(%"class.icu_69::UVector64"* nocapture, i32) local_unnamed_addr #1 align 2 {
  %3 = icmp slt i32 %1, 0
  br i1 %3, label %77, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp slt i32 %6, %1
  br i1 %7, label %8, label %76

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp slt i32 %10, %1
  br i1 %11, label %12, label %38

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 3
  %14 = load i32, i32* %13, align 8
  %15 = icmp sgt i32 %14, 0
  %16 = icmp slt i32 %14, %1
  %17 = and i1 %15, %16
  %18 = icmp sgt i32 %10, 1073741823
  %19 = or i1 %18, %17
  br i1 %19, label %77, label %20

20:                                               ; preds = %12
  %21 = shl nsw i32 %10, 1
  %22 = icmp slt i32 %21, %1
  %23 = select i1 %22, i32 %1, i32 %21
  %24 = icmp sgt i32 %23, %14
  %25 = and i1 %15, %24
  %26 = select i1 %25, i32 %14, i32 %23
  %27 = icmp sgt i32 %26, 268435455
  br i1 %27, label %77, label %28

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 4
  %30 = bitcast i64** %29 to i8**
  %31 = load i8*, i8** %30, align 8
  %32 = sext i32 %26 to i64
  %33 = shl nsw i64 %32, 3
  %34 = tail call i8* @uprv_realloc_69(i8* %31, i64 %33) #11
  %35 = icmp eq i8* %34, null
  br i1 %35, label %77, label %36

36:                                               ; preds = %28
  store i8* %34, i8** %30, align 8
  store i32 %26, i32* %9, align 4
  %37 = load i32, i32* %5, align 8
  br label %38

38:                                               ; preds = %36, %8
  %39 = phi i32 [ %37, %36 ], [ %6, %8 ]
  %40 = icmp slt i32 %39, %1
  br i1 %40, label %41, label %76

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 4
  %43 = sext i32 %39 to i64
  %44 = sext i32 %1 to i64
  %45 = sub nsw i64 %44, %43
  %46 = xor i64 %43, -1
  %47 = add nsw i64 %46, %44
  %48 = and i64 %45, 3
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %58, label %50

50:                                               ; preds = %41, %50
  %51 = phi i64 [ %55, %50 ], [ %43, %41 ]
  %52 = phi i64 [ %56, %50 ], [ %48, %41 ]
  %53 = load i64*, i64** %42, align 8
  %54 = getelementptr inbounds i64, i64* %53, i64 %51
  store i64 0, i64* %54, align 8
  %55 = add nsw i64 %51, 1
  %56 = add i64 %52, -1
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %50, !llvm.loop !4

58:                                               ; preds = %50, %41
  %59 = phi i64 [ %43, %41 ], [ %55, %50 ]
  %60 = icmp ult i64 %47, 3
  br i1 %60, label %76, label %61

61:                                               ; preds = %58, %61
  %62 = phi i64 [ %74, %61 ], [ %59, %58 ]
  %63 = load i64*, i64** %42, align 8
  %64 = getelementptr inbounds i64, i64* %63, i64 %62
  store i64 0, i64* %64, align 8
  %65 = add nsw i64 %62, 1
  %66 = load i64*, i64** %42, align 8
  %67 = getelementptr inbounds i64, i64* %66, i64 %65
  store i64 0, i64* %67, align 8
  %68 = add nsw i64 %62, 2
  %69 = load i64*, i64** %42, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 %68
  store i64 0, i64* %70, align 8
  %71 = add nsw i64 %62, 3
  %72 = load i64*, i64** %42, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 %71
  store i64 0, i64* %73, align 8
  %74 = add nsw i64 %62, 4
  %75 = icmp eq i64 %74, %44
  br i1 %75, label %76, label %61

76:                                               ; preds = %58, %61, %38, %4
  store i32 %1, i32* %5, align 8
  br label %77

77:                                               ; preds = %28, %20, %12, %2, %76
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden signext i8 @_ZN6icu_699UVector64eqERKS0_(%"class.icu_69::UVector64"* nocapture readonly, %"class.icu_69::UVector64"* nocapture readonly dereferenceable(32)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %26

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, 0
  br i1 %9, label %10, label %26

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 4
  %12 = load i64*, i64** %11, align 8
  %13 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %1, i64 0, i32 4
  %14 = load i64*, i64** %13, align 8
  %15 = zext i32 %4 to i64
  br label %18

16:                                               ; preds = %18
  %17 = icmp eq i64 %25, %15
  br i1 %17, label %26, label %18

18:                                               ; preds = %16, %10
  %19 = phi i64 [ 0, %10 ], [ %25, %16 ]
  %20 = getelementptr inbounds i64, i64* %12, i64 %19
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds i64, i64* %14, i64 %19
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %21, %23
  %25 = add nuw nsw i64 %19, 1
  br i1 %24, label %16, label %26

26:                                               ; preds = %18, %16, %8, %2
  %27 = phi i8 [ 0, %2 ], [ 1, %8 ], [ 0, %18 ], [ 1, %16 ]
  ret i8 %27
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6icu_699UVector6412setElementAtEli(%"class.icu_69::UVector64"* nocapture readonly, i64, i32) local_unnamed_addr #6 align 2 {
  %4 = icmp sgt i32 %2, -1
  br i1 %4, label %5, label %14

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, %2
  br i1 %8, label %9, label %14

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 4
  %11 = load i64*, i64** %10, align 8
  %12 = sext i32 %2 to i64
  %13 = getelementptr inbounds i64, i64* %11, i64 %12
  store i64 %1, i64* %13, align 8
  br label %14

14:                                               ; preds = %9, %5, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_699UVector6415insertElementAtEliR10UErrorCode(%"class.icu_69::UVector64"* nocapture, i64, i32, i32* nocapture dereferenceable(4)) local_unnamed_addr #1 align 2 {
  %5 = icmp sgt i32 %2, -1
  br i1 %5, label %6, label %118

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp slt i32 %8, %2
  br i1 %9, label %118, label %10

10:                                               ; preds = %6
  %11 = add nsw i32 %8, 1
  %12 = icmp sgt i32 %8, -2
  br i1 %12, label %13, label %17

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, %8
  br i1 %16, label %57, label %17

17:                                               ; preds = %13, %10
  %18 = load i32, i32* %3, align 4
  %19 = icmp slt i32 %18, 1
  br i1 %19, label %20, label %118

20:                                               ; preds = %17
  %21 = icmp slt i32 %11, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %20
  store i32 1, i32* %3, align 4
  br label %118

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp sgt i32 %25, %8
  br i1 %26, label %57, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = icmp sgt i32 %29, 0
  %31 = icmp sle i32 %29, %8
  %32 = and i1 %30, %31
  br i1 %32, label %33, label %34

33:                                               ; preds = %27
  store i32 15, i32* %3, align 4
  br label %118

34:                                               ; preds = %27
  %35 = icmp sgt i32 %25, 1073741823
  br i1 %35, label %36, label %37

36:                                               ; preds = %34
  store i32 1, i32* %3, align 4
  br label %118

37:                                               ; preds = %34
  %38 = shl nsw i32 %25, 1
  %39 = icmp slt i32 %38, %11
  %40 = select i1 %39, i32 %11, i32 %38
  %41 = icmp sgt i32 %40, %29
  %42 = and i1 %30, %41
  %43 = select i1 %42, i32 %29, i32 %40
  %44 = icmp sgt i32 %43, 268435455
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  store i32 1, i32* %3, align 4
  br label %118

46:                                               ; preds = %37
  %47 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 4
  %48 = bitcast i64** %47 to i8**
  %49 = load i8*, i8** %48, align 8
  %50 = sext i32 %43 to i64
  %51 = shl nsw i64 %50, 3
  %52 = tail call i8* @uprv_realloc_69(i8* %49, i64 %51) #11
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %55

54:                                               ; preds = %46
  store i32 7, i32* %3, align 4
  br label %118

55:                                               ; preds = %46
  store i8* %52, i8** %48, align 8
  store i32 %43, i32* %24, align 4
  %56 = load i32, i32* %7, align 8
  br label %57

57:                                               ; preds = %13, %23, %55
  %58 = phi i32 [ %8, %13 ], [ %8, %23 ], [ %56, %55 ]
  %59 = icmp sgt i32 %58, %2
  %60 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 4
  %61 = load i64*, i64** %60, align 8
  br i1 %59, label %64, label %62

62:                                               ; preds = %57
  %63 = sext i32 %2 to i64
  br label %88

64:                                               ; preds = %57
  %65 = sext i32 %58 to i64
  %66 = sext i32 %2 to i64
  %67 = sub nsw i64 %65, %66
  %68 = xor i64 %66, -1
  %69 = add nsw i64 %68, %65
  %70 = and i64 %67, 3
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %83, label %72

72:                                               ; preds = %64, %72
  %73 = phi i64 [ %76, %72 ], [ %65, %64 ]
  %74 = phi i64* [ %80, %72 ], [ %61, %64 ]
  %75 = phi i64 [ %81, %72 ], [ %70, %64 ]
  %76 = add nsw i64 %73, -1
  %77 = getelementptr inbounds i64, i64* %74, i64 %76
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds i64, i64* %74, i64 %73
  store i64 %78, i64* %79, align 8
  %80 = load i64*, i64** %60, align 8
  %81 = add i64 %75, -1
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %72, !llvm.loop !5

83:                                               ; preds = %72, %64
  %84 = phi i64 [ %65, %64 ], [ %76, %72 ]
  %85 = phi i64* [ %61, %64 ], [ %80, %72 ]
  %86 = phi i64* [ undef, %64 ], [ %80, %72 ]
  %87 = icmp ult i64 %69, 3
  br i1 %87, label %88, label %94

88:                                               ; preds = %83, %94, %62
  %89 = phi i64 [ %63, %62 ], [ %66, %94 ], [ %66, %83 ]
  %90 = phi i64* [ %61, %62 ], [ %86, %83 ], [ %117, %94 ]
  %91 = getelementptr inbounds i64, i64* %90, i64 %89
  store i64 %1, i64* %91, align 8
  %92 = load i32, i32* %7, align 8
  %93 = add nsw i32 %92, 1
  store i32 %93, i32* %7, align 8
  br label %118

94:                                               ; preds = %83, %94
  %95 = phi i64 [ %112, %94 ], [ %84, %83 ]
  %96 = phi i64* [ %117, %94 ], [ %85, %83 ]
  %97 = add nsw i64 %95, -1
  %98 = getelementptr inbounds i64, i64* %96, i64 %97
  %99 = load i64, i64* %98, align 8
  %100 = getelementptr inbounds i64, i64* %96, i64 %95
  store i64 %99, i64* %100, align 8
  %101 = load i64*, i64** %60, align 8
  %102 = add nsw i64 %95, -2
  %103 = getelementptr inbounds i64, i64* %101, i64 %102
  %104 = load i64, i64* %103, align 8
  %105 = getelementptr inbounds i64, i64* %101, i64 %97
  store i64 %104, i64* %105, align 8
  %106 = load i64*, i64** %60, align 8
  %107 = add nsw i64 %95, -3
  %108 = getelementptr inbounds i64, i64* %106, i64 %107
  %109 = load i64, i64* %108, align 8
  %110 = getelementptr inbounds i64, i64* %106, i64 %102
  store i64 %109, i64* %110, align 8
  %111 = load i64*, i64** %60, align 8
  %112 = add nsw i64 %95, -4
  %113 = getelementptr inbounds i64, i64* %111, i64 %112
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds i64, i64* %111, i64 %107
  store i64 %114, i64* %115, align 8
  %116 = icmp sgt i64 %112, %66
  %117 = load i64*, i64** %60, align 8
  br i1 %116, label %94, label %88

118:                                              ; preds = %54, %45, %17, %36, %33, %22, %6, %88, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6icu_699UVector6417removeAllElementsEv(%"class.icu_69::UVector64"* nocapture) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 1
  store i32 0, i32* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_699UVector6414expandCapacityEiR10UErrorCode(%"class.icu_69::UVector64"* nocapture, i32, i32* nocapture dereferenceable(4)) local_unnamed_addr #1 align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %42

6:                                                ; preds = %3
  %7 = icmp slt i32 %1, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  store i32 1, i32* %2, align 4
  br label %42

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, %1
  br i1 %12, label %13, label %42

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 3
  %15 = load i32, i32* %14, align 8
  %16 = icmp sgt i32 %15, 0
  %17 = icmp slt i32 %15, %1
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %13
  store i32 15, i32* %2, align 4
  br label %42

20:                                               ; preds = %13
  %21 = icmp sgt i32 %11, 1073741823
  br i1 %21, label %22, label %23

22:                                               ; preds = %20
  store i32 1, i32* %2, align 4
  br label %42

23:                                               ; preds = %20
  %24 = shl nsw i32 %11, 1
  %25 = icmp slt i32 %24, %1
  %26 = select i1 %25, i32 %1, i32 %24
  %27 = icmp sgt i32 %26, %15
  %28 = and i1 %16, %27
  %29 = select i1 %28, i32 %15, i32 %26
  %30 = icmp sgt i32 %29, 268435455
  br i1 %30, label %31, label %32

31:                                               ; preds = %23
  store i32 1, i32* %2, align 4
  br label %42

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 4
  %34 = bitcast i64** %33 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = sext i32 %29 to i64
  %37 = shl nsw i64 %36, 3
  %38 = tail call i8* @uprv_realloc_69(i8* %35, i64 %37) #11
  %39 = icmp eq i8* %38, null
  br i1 %39, label %40, label %41

40:                                               ; preds = %32
  store i32 7, i32* %2, align 4
  br label %42

41:                                               ; preds = %32
  store i8* %38, i8** %34, align 8
  store i32 %29, i32* %10, align 4
  br label %42

42:                                               ; preds = %31, %41, %40, %9, %3, %22, %19, %8
  %43 = phi i8 [ 0, %8 ], [ 0, %19 ], [ 0, %22 ], [ 0, %3 ], [ 1, %9 ], [ 0, %31 ], [ 0, %40 ], [ 1, %41 ]
  ret i8 %43
}

; Function Attrs: allocsize(1)
declare i8* @uprv_realloc_69(i8*, i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_699UVector6414setMaxCapacityEi(%"class.icu_69::UVector64"* nocapture, i32) local_unnamed_addr #1 align 2 {
  %3 = icmp sgt i32 %1, 0
  %4 = select i1 %3, i32 %1, i32 0
  %5 = icmp sgt i32 %4, 268435455
  br i1 %5, label %27, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 3
  store i32 %4, i32* %7, align 8
  %8 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp sle i32 %9, %4
  %11 = icmp slt i32 %1, 1
  %12 = or i1 %11, %10
  br i1 %12, label %27, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 4
  %15 = bitcast i64** %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = zext i32 %4 to i64
  %18 = shl nuw nsw i64 %17, 3
  %19 = tail call i8* @uprv_realloc_69(i8* %16, i64 %18) #11
  %20 = icmp eq i8* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %13
  store i8* %19, i8** %15, align 8
  %22 = load i32, i32* %7, align 8
  store i32 %22, i32* %8, align 4
  %23 = getelementptr inbounds %"class.icu_69::UVector64", %"class.icu_69::UVector64"* %0, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp sgt i32 %24, %22
  br i1 %25, label %26, label %27

26:                                               ; preds = %21
  store i32 %22, i32* %23, align 8
  br label %27

27:                                               ; preds = %13, %26, %21, %6, %2
  ret void
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { allocsize(1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind allocsize(0) }
attributes #10 = { nounwind }
attributes #11 = { nounwind allocsize(1) }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
