; ModuleID = 'gen/third_party/blink/renderer/bindings/modules/v8/v8_lock_manager.cc'
source_filename = "gen/third_party/blink/renderer/bindings/modules/v8/v8_lock_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.167", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.111", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::Worklist.42"* }
%"class.blink::Worklist.42" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist.49"* }
%"class.blink::Worklist.49" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist.56"* }
%"class.blink::Worklist.56" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.91", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.105", [4 x i8] }>
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i64 }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { float }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.114", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.135" }
%"class.WTF::VectorBuffer.135" = type { %"class.WTF::VectorBufferBase.136" }
%"class.WTF::VectorBufferBase.136" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.42"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.49"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.56"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.171" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__cxx_atomic_impl.169" }
%"struct.std::__1::__cxx_atomic_impl.169" = type { %"struct.std::__1::__cxx_atomic_base_impl.170" }
%"struct.std::__1::__cxx_atomic_base_impl.170" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"struct.blink::bindings::IDLMemberInstaller::OperationConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, [3 x i8], [5 x i8] }>
%"class.v8::FunctionTemplate" = type { i8 }
%"class.v8::ObjectTemplate" = type { i8 }
%"class.v8::Signature" = type { i8 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.187" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.WTF::String" = type { %class.scoped_refptr.181 }
%class.scoped_refptr.181 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.182" }
%"struct.std::__1::atomic.182" = type { %"struct.std::__1::__atomic_base.183" }
%"struct.std::__1::__atomic_base.183" = type { %"struct.std::__1::__atomic_base.184" }
%"struct.std::__1::__atomic_base.184" = type { %"struct.std::__1::__cxx_atomic_impl.185" }
%"struct.std::__1::__cxx_atomic_impl.185" = type { %"struct.std::__1::__cxx_atomic_base_impl.186" }
%"struct.std::__1::__cxx_atomic_base_impl.186" = type { i32 }
%"class.blink::TraceWrapperV8Reference.187" = type { %"class.v8::TracedReference.188" }
%"class.v8::TracedReference.188" = type { %"class.v8::BasicTracedReference.189" }
%"class.v8::BasicTracedReference.189" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::ExceptionToRejectPromiseScope" = type { %"class.v8::FunctionCallbackInfo"*, %"class.blink::ExceptionState"* }
%"class.blink::ScriptPromise" = type { %"class.blink::Member.294", %"class.blink::ScriptValue" }
%"class.blink::Member.294" = type { %"class.blink::MemberBase.295" }
%"class.blink::MemberBase.295" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.289, %"class.blink::Member.290", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.289 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.290" = type { %"class.blink::MemberBase.291" }
%"class.blink::MemberBase.291" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.292" }
%"class.blink::Persistent.292" = type { %"class.blink::PersistentBase.293" }
%"class.blink::PersistentBase.293" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.187", %class.scoped_refptr.296 }
%class.scoped_refptr.296 = type { %"class.blink::DOMWrapperWorld"* }
%"class.v8::Value" = type { i8 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.315", %"class.WTF::HashMap.315", %"class.WTF::HashMap.320", %"class.std::__1::unique_ptr.325", %"class.std::__1::unique_ptr.372", %"class.blink::Persistent.292", i8, i8, i8, %"class.WTF::Vector.386", %"class.std::__1::unique_ptr.397", %"class.blink::Persistent.403", %"class.blink::Persistent.407", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.297", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.303", %"class.std::__1::unique_ptr.309", i32, i32 }
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.315" = type { %"class.WTF::HashTable.316" }
%"class.WTF::HashTable.316" = type <{ %"struct.WTF::KeyValuePair.319"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.319" = type opaque
%"class.WTF::HashMap.320" = type { %"class.WTF::HashTable.321" }
%"class.WTF::HashTable.321" = type <{ %"struct.WTF::KeyValuePair.324"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.324" = type opaque
%"class.std::__1::unique_ptr.325" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.333", %class.scoped_refptr.181 }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.328", i8* }
%"class.WTF::HashMap.328" = type { %"class.WTF::HashTable.329" }
%"class.WTF::HashTable.329" = type <{ %"struct.WTF::KeyValuePair.332"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.332" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.333" = type { %"class.v8::PersistentValueMapBase.334" }
%"class.v8::PersistentValueMapBase.334" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.335", i8* }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.339"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.339" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.340", %"class.WTF::String", %"class.std::__1::unique_ptr.342" }
%"class.WTF::RefCounted.340" = type { %"class.base::RefCounted.341" }
%"class.base::RefCounted.341" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.342" = type { %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.345", %"class.std::__1::unique_ptr.356", %"class.WTF::Vector.362", i8, i32 }
%"class.std::__1::unique_ptr.345" = type { %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"class.WTF::Vector.348"* }
%"class.WTF::Vector.348" = type { %"class.WTF::VectorBuffer.349" }
%"class.WTF::VectorBuffer.349" = type { %"class.WTF::VectorBufferBase.350" }
%"class.WTF::VectorBufferBase.350" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.356" = type { %"class.std::__1::__compressed_pair.357" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.362" = type { %"class.WTF::VectorBuffer.363" }
%"class.WTF::VectorBuffer.363" = type { %"class.WTF::VectorBufferBase.350", [32 x i8] }
%"class.std::__1::unique_ptr.372" = type { %"class.std::__1::__compressed_pair.373" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type { %"class.blink::ScopedPersistent.375", %"class.WTF::HashMap.378" }
%"class.blink::ScopedPersistent.375" = type { %"class.v8::Persistent.376" }
%"class.v8::Persistent.376" = type { %"class.v8::PersistentBase.377" }
%"class.v8::PersistentBase.377" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.WTF::HashMap.378" = type { %"class.WTF::HashTable.379" }
%"class.WTF::HashTable.379" = type <{ %"struct.WTF::KeyValuePair.382"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.382" = type opaque
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.389 }
%class.scoped_refptr.389 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.390" }
%"struct.std::__1::atomic.390" = type { %"struct.std::__1::__atomic_base.391" }
%"struct.std::__1::__atomic_base.391" = type { %"struct.std::__1::__atomic_base.392" }
%"struct.std::__1::__atomic_base.392" = type { %"struct.std::__1::__cxx_atomic_impl.393" }
%"struct.std::__1::__cxx_atomic_impl.393" = type { %"struct.std::__1::__cxx_atomic_base_impl.394" }
%"struct.std::__1::__cxx_atomic_base_impl.394" = type { i32 }
%"class.std::__1::unique_ptr.397" = type { %"class.std::__1::__compressed_pair.398" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.399" }
%"struct.std::__1::__compressed_pair_elem.399" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.403" = type { %"class.blink::PersistentBase.404" }
%"class.blink::PersistentBase.404" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.407" = type { %"class.blink::PersistentBase.408" }
%"class.blink::PersistentBase.408" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.411", i64 }
%"class.blink::HeapVector.411" = type { %"class.WTF::Vector.414" }
%"class.WTF::Vector.414" = type { %"class.WTF::VectorBuffer.415" }
%"class.WTF::VectorBuffer.415" = type { %"class.WTF::VectorBufferBase.416" }
%"class.WTF::VectorBufferBase.416" = type { %"struct.std::__1::pair.417"*, i32, i32 }
%"struct.std::__1::pair.417" = type { %"class.blink::UntracedMember", %"class.blink::Member.419" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.233", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.242", %"class.blink::Member.244", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.253", %"class.blink::Member.259", %"class.blink::Member.261", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.191" }
%"class.blink::HeapHashMap.191" = type { %"class.WTF::HashMap.194" }
%"class.WTF::HashMap.194" = type { %"class.WTF::HashTable.195" }
%"class.WTF::HashTable.195" = type <{ %"struct.WTF::KeyValuePair.197"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.197" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.203" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.200" }
%"class.WTF::HashTable.200" = type <{ %"class.blink::WeakMember.202"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.202" = type opaque
%"class.blink::Supplementable.203" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.204" }
%"class.blink::HeapHashMap.204" = type { %"class.WTF::HashMap.207" }
%"class.WTF::HashMap.207" = type { %"class.WTF::HashTable.208" }
%"class.WTF::HashTable.208" = type <{ %"struct.WTF::KeyValuePair.210"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.210" = type { i8*, %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase.211" }
%"class.blink::MemberBase.211" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.212" }
%"class.blink::Member.212" = type { %"class.blink::MemberBase.213" }
%"class.blink::MemberBase.213" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.214, %"class.std::__1::unique_ptr.215", %"class.std::__1::unique_ptr.215", %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.221", %"class.blink::Member.227", i32, [4 x i8], %"class.WTF::HashSet.229", i32, i32 }
%class.scoped_refptr.214 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.227" = type { %"class.blink::MemberBase.228" }
%"class.blink::MemberBase.228" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.229" = type { %"class.WTF::HashTable.230" }
%"class.WTF::HashTable.230" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.233" = type { %"class.blink::MemberBase.234" }
%"class.blink::MemberBase.234" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.237" }
%"class.WTF::Vector.237" = type { %"class.WTF::VectorBuffer.238" }
%"class.WTF::VectorBuffer.238" = type { %"class.WTF::VectorBufferBase.239" }
%"class.WTF::VectorBufferBase.239" = type { %"class.blink::Member.240"*, i32, i32 }
%"class.blink::Member.240" = type opaque
%"class.blink::Member.242" = type { %"class.blink::MemberBase.243" }
%"class.blink::MemberBase.243" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.244" = type { %"class.blink::MemberBase.245" }
%"class.blink::MemberBase.245" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.246", i32, i32 }
%"class.blink::HeapHashMap.246" = type { %"class.WTF::HashMap.249" }
%"class.WTF::HashMap.249" = type { %"class.WTF::HashTable.250" }
%"class.WTF::HashTable.250" = type <{ %"struct.WTF::KeyValuePair.252"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.252" = type opaque
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.259" = type { %"class.blink::MemberBase.260" }
%"class.blink::MemberBase.260" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.261" = type { %"class.blink::MemberBase.262" }
%"class.blink::MemberBase.262" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::LockManager" = type <{ %"class.blink::ScriptWrappable", %"class.blink::Supplement.263", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::HeapHashSet.268", %"class.blink::HeapHashSet.275", %"class.blink::HeapMojoRemote", %"class.blink::HeapMojoRemote.284", %"class.absl::optional", [6 x i8] }>
%"class.blink::Supplement.263" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.264" }
%"class.blink::Member.264" = type { %"class.blink::MemberBase.265" }
%"class.blink::MemberBase.265" = type { %"class.blink::NavigatorBase"* }
%"class.blink::NavigatorBase" = type opaque
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.266" }
%"class.blink::WeakMember.266" = type { %"class.blink::MemberBase.267" }
%"class.blink::MemberBase.267" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::HeapHashSet.268" = type { %"class.WTF::HashSet.271" }
%"class.WTF::HashSet.271" = type { %"class.WTF::HashTable.272" }
%"class.WTF::HashTable.272" = type <{ %"class.blink::Member.274"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.274" = type opaque
%"class.blink::HeapHashSet.275" = type { %"class.WTF::HashSet.278" }
%"class.WTF::HashSet.278" = type { %"class.WTF::HashTable.279" }
%"class.WTF::HashTable.279" = type <{ %"class.blink::Member.281"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.281" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.282" }
%"class.blink::Member.282" = type { %"class.blink::MemberBase.283" }
%"class.blink::MemberBase.283" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::LockManager, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::LockManager, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::HeapMojoRemote.284" = type { %"class.blink::Member.285" }
%"class.blink::Member.285" = type { %"class.blink::MemberBase.286" }
%"class.blink::MemberBase.286" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::FeatureObserver, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::FeatureObserver, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i8 }
%"class.v8::internal::Isolate" = type opaque
%"class.blink::bindings::NativeValueTraitsStringAdapter" = type { %"class.v8::Local.428", %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local.428" = type { %"class.v8::String"* }
%"class.v8::String" = type { i8 }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr.429" }
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { i8* }
%"class.blink::scheduler::CooperativeSchedulingManager" = type <{ i32 (...)**, i32, i8, [3 x i8], %"class.base::TimeTicks", %"class.base::TickClock"*, i8, [7 x i8] }>
%"class.blink::LockOptions" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, i8, [5 x i8], %"class.WTF::String", %"class.blink::Member.435", i8, [7 x i8] }>
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::Member.435" = type { %"class.blink::MemberBase.436" }
%"class.blink::MemberBase.436" = type { %"class.blink::AbortSignal"* }
%"class.blink::AbortSignal" = type opaque
%"class.blink::V8LockGrantedCallback" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::CallbackFunctionBase" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference", %"class.blink::Member.294", %"class.blink::Member.294" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.424 }
%union.anon.424 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::Int32" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN5blink29ExceptionToRejectPromiseScopeD2Ev = comdat any

$_ZN5blink17NativeValueTraitsINS_21V8LockGrantedCallbackEvE13ArgumentValueEPN2v87IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_20CallbackFunctionBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_20CallbackFunctionBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20CallbackFunctionBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20CallbackFunctionBaseEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [12 x i8] c"LockManager\00", align 1
@_ZN5blink13V8LockManager18wrapper_type_info_E = hidden constant %"struct.blink::WrapperTypeInfo" { i16 1, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)* @_ZN5blink13V8LockManager24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), %"struct.blink::WrapperTypeInfo"* null, i8 8 }, align 8
@_ZN5blink11LockManager18wrapper_type_info_E = hidden local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"* @_ZN5blink13V8LockManager18wrapper_type_info_E, align 8
@_ZZN5blink13V8LockManager30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable = internal constant [2 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_115v8_lock_manager22QueryOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 -24, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_115v8_lock_manager24RequestOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 -24, i8 0 }], align 16
@.str.1 = private unnamed_addr constant [6 x i8] c"query\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"request\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"Illegal invocation\00", align 1
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@.str.4 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.6 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@.str.7 = private unnamed_addr constant [28 x i8] c"Overload resolution failed.\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"Function\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.10 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20CallbackFunctionBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20CallbackFunctionBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20CallbackFunctionBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink21V8LockGrantedCallbackE = external unnamed_addr constant { [6 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13V8LockManager24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*) #0 align 2 {
  %4 = alloca %"class.base::span", align 8
  %5 = bitcast %"class.v8::Template"* %2 to %"class.v8::FunctionTemplate"*
  %6 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"* %5) #6
  %7 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"* %5) #6
  tail call void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"* %0, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink13V8LockManager18wrapper_type_info_E, %"class.v8::ObjectTemplate"* %6, %"class.v8::ObjectTemplate"* %7, %"class.v8::FunctionTemplate"* %5, %"class.v8::FunctionTemplate"* null) #6
  %8 = bitcast %"class.v8::ObjectTemplate"* %6 to %"class.v8::Template"*
  %9 = bitcast %"class.v8::ObjectTemplate"* %7 to %"class.v8::Template"*
  %10 = bitcast %"class.base::span"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10)
  %11 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %5) #6
  %12 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 0, i32 0
  store i64 2, i64* %12, align 8
  %13 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([2 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink13V8LockManager30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %13, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %8, %"class.v8::Template"* %9, %"class.v8::Template"* %2, %"class.v8::Signature"* %11, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %4) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::ObjectTemplate"*, %"class.v8::ObjectTemplate"*, %"class.v8::FunctionTemplate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13V8LockManager30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::span", align 8
  %7 = bitcast %"class.v8::Template"* %4 to %"class.v8::FunctionTemplate"*
  %8 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %7) #6
  %9 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 0, i32 0
  store i64 2, i64* %9, align 8
  %10 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([2 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink13V8LockManager30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %10, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %8, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %6) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_115v8_lock_manager22QueryOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::ExceptionToRejectPromiseScope", align 8
  %4 = alloca %"class.blink::ScriptPromise", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 1
  %8 = bitcast i64* %7 to %"class.v8::Isolate"**
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds i64, i64* %11, i64 -1
  %13 = bitcast i64* %12 to %"class.v8::Object"*
  %14 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %14) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %17, align 2
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %19 = bitcast i8** %18 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0)>, <2 x i8*>* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %20, align 8
  %21 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %21, align 8
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %24 = bitcast %"class.WTF::StringImpl"** %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #6
  %25 = bitcast %"class.blink::ExceptionToRejectPromiseScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #6
  %26 = getelementptr inbounds %"class.blink::ExceptionToRejectPromiseScope", %"class.blink::ExceptionToRejectPromiseScope"* %3, i64 0, i32 0
  %27 = getelementptr inbounds %"class.blink::ExceptionToRejectPromiseScope", %"class.blink::ExceptionToRejectPromiseScope"* %3, i64 0, i32 1
  store %"class.v8::FunctionCallbackInfo"* %0, %"class.v8::FunctionCallbackInfo"** %26, align 8
  store %"class.blink::ExceptionState"* %2, %"class.blink::ExceptionState"** %27, align 8
  %28 = bitcast i64* %12 to %"class.v8::Value"*
  %29 = ptrtoint %"class.v8::Isolate"* %9 to i64
  %30 = add i64 %29, 8
  %31 = inttoptr i64 %30 to %"class.blink::V8PerIsolateData"**
  %32 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %31, align 8
  %33 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %32, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink13V8LockManager18wrapper_type_info_E, %"class.v8::Value"* %28) #6
  br i1 %33, label %35, label %34

34:                                               ; preds = %1
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #6
  br label %94

35:                                               ; preds = %1
  %36 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %9) #6
  %37 = call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %36) #6
  %38 = icmp eq %"class.blink::ExecutionContext"* %37, null
  %39 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %37, i64 0, i32 3
  %40 = icmp eq %"class.blink::UseCounter"* %39, null
  %41 = or i1 %38, %40
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = bitcast %"class.blink::UseCounter"* %39 to void (%"class.blink::UseCounter"*, i32)***
  %44 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %44, i64 3
  %46 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %45, align 8
  call void %46(%"class.blink::UseCounter"* nonnull %39, i32 2376) #6
  br label %47

47:                                               ; preds = %35, %42
  %48 = load i64, i64* %12, align 8
  %49 = add i64 %48, -1
  %50 = inttoptr i64 %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = and i64 %48, -4294967296
  %53 = zext i32 %51 to i64
  %54 = or i64 %52, %53
  %55 = add i64 %54, 7
  %56 = inttoptr i64 %55 to i16*
  %57 = load i16, i16* %56, align 2
  switch i16 %57, label %62 [
    i16 1057, label %58
    i16 1056, label %58
    i16 1040, label %58
  ]

58:                                               ; preds = %47, %47, %47
  %59 = add i64 %48, 19
  %60 = inttoptr i64 %59 to i8**
  %61 = load i8*, i8** %60, align 1
  br label %64

62:                                               ; preds = %47
  %63 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %13, i32 1) #6
  br label %64

64:                                               ; preds = %58, %62
  %65 = phi i8* [ %61, %58 ], [ %63, %62 ]
  %66 = bitcast i8* %65 to %"class.blink::LockManager"*
  %67 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %13) #6
  %68 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %67)
  %69 = bitcast %"class.blink::ScriptPromise"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %69) #6
  call void @_ZN5blink11LockManager5queryEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* nonnull sret %4, %"class.blink::LockManager"* %66, %"class.blink::ScriptState"* %68, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %70 = load i32, i32* %22, align 8
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %82

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %4, i64 0, i32 1
  %74 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %73) #6
  %75 = load i64*, i64** %5, align 8
  %76 = getelementptr inbounds i64, i64* %75, i64 3
  %77 = icmp eq %"class.v8::Value"* %74, null
  %78 = bitcast %"class.v8::Value"* %74 to i64*
  %79 = getelementptr inbounds i64, i64* %75, i64 2
  %80 = select i1 %77, i64* %79, i64* %78, !prof !2
  %81 = load i64, i64* %80, align 8
  store i64 %81, i64* %76, align 8
  br label %82

82:                                               ; preds = %64, %72
  %83 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %4, i64 0, i32 1, i32 1, i32 1, i32 0
  %84 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %83, align 8
  %85 = icmp eq %"class.blink::DOMWrapperWorld"* %84, null
  br i1 %85, label %93, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %84, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %87) #6
  %88 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %84, i64 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %93

91:                                               ; preds = %86
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %84) #6
  %92 = bitcast %"class.blink::DOMWrapperWorld"* %84 to i8*
  call void @free(i8* %92) #6
  br label %93

93:                                               ; preds = %82, %86, %91
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %69) #6
  br label %94

94:                                               ; preds = %93, %34
  call void @_ZN5blink29ExceptionToRejectPromiseScopeD2Ev(%"class.blink::ExceptionToRejectPromiseScope"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %95 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %96 = load i64*, i64** %95, align 8
  %97 = icmp eq i64* %96, null
  br i1 %97, label %107, label %98

98:                                               ; preds = %94
  %99 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %21, align 8
  %100 = bitcast %"class.v8::Isolate"* %99 to %"class.v8::internal::Isolate"*
  %101 = load i64, i64* %96, align 8
  %102 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %100, i64 %101) #6
  %103 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %99) #6
  br i1 %103, label %107, label %104

104:                                              ; preds = %98
  %105 = bitcast i64* %102 to %"class.v8::Value"*
  %106 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %99, %"class.v8::Value"* %105) #6
  br label %107

107:                                              ; preds = %104, %98, %94
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %123, label %110

110:                                              ; preds = %107
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  br i1 %114, label %117, label %119

117:                                              ; preds = %110
  %118 = add i32 %116, -1
  store i32 %118, i32* %115, align 4
  br label %119

119:                                              ; preds = %117, %110
  %120 = phi i32 [ %118, %117 ], [ %116, %110 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %108) #6
  br label %123

123:                                              ; preds = %107, %119, %122
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %14) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_115v8_lock_manager24RequestOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::ExceptionToRejectPromiseScope", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %6 = alloca %"class.blink::ScriptPromise", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.blink::ExceptionState", align 8
  %9 = alloca %"class.blink::ExceptionToRejectPromiseScope", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %12 = alloca %"class.blink::ScriptPromise", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.blink::ExceptionState", align 8
  %15 = alloca %"class.blink::ExceptionToRejectPromiseScope", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = tail call %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() #6
  %18 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %17, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %17, i64 0, i32 5
  %23 = load %"class.base::TickClock"*, %"class.base::TickClock"** %22, align 8
  %24 = bitcast %"class.base::TickClock"* %23 to i64 (%"class.base::TickClock"*)***
  %25 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %24, align 8
  %26 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %25, i64 2
  %27 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %26, align 8
  %28 = tail call i64 %27(%"class.base::TickClock"* %23) #6
  %29 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager", %"class.blink::scheduler::CooperativeSchedulingManager"* %17, i64 0, i32 4, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = icmp slt i64 %28, %30
  br i1 %31, label %33, label %32

32:                                               ; preds = %21
  tail call void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"* %17) #6
  br label %33

33:                                               ; preds = %1, %21, %32
  %34 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %35 = load i32, i32* %34, align 8
  %36 = icmp slt i32 %35, 3
  %37 = select i1 %36, i32 %35, i32 3
  switch i32 %37, label %544 [
    i32 3, label %38
    i32 2, label %300
  ]

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %40 = load i64*, i64** %39, align 8
  %41 = getelementptr inbounds i64, i64* %40, i64 1
  %42 = bitcast i64* %41 to %"class.v8::Isolate"**
  %43 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %42, align 8
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = bitcast i64* %46 to %"class.v8::Object"*
  %48 = bitcast %"class.blink::ExceptionState"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %48) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 56, i1 false) #6
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 0
  store i16 6, i16* %50, align 8
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 1
  store i16 0, i16* %51, align 2
  %52 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 2
  %53 = bitcast i8** %52 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0)>, <2 x i8*>* %53, align 8
  %54 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %54, align 8
  %55 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 3
  store %"class.v8::Isolate"* %43, %"class.v8::Isolate"** %55, align 8
  %56 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 4
  store i32 0, i32* %56, align 8
  %57 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 5, i32 0, i32 0
  %58 = bitcast %"class.WTF::StringImpl"** %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 16, i1 false) #6
  %59 = bitcast %"class.blink::ExceptionToRejectPromiseScope"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #6
  %60 = getelementptr inbounds %"class.blink::ExceptionToRejectPromiseScope", %"class.blink::ExceptionToRejectPromiseScope"* %9, i64 0, i32 0
  %61 = getelementptr inbounds %"class.blink::ExceptionToRejectPromiseScope", %"class.blink::ExceptionToRejectPromiseScope"* %9, i64 0, i32 1
  store %"class.v8::FunctionCallbackInfo"* %0, %"class.v8::FunctionCallbackInfo"** %60, align 8
  store %"class.blink::ExceptionState"* %8, %"class.blink::ExceptionState"** %61, align 8
  %62 = bitcast i64* %46 to %"class.v8::Value"*
  %63 = ptrtoint %"class.v8::Isolate"* %43 to i64
  %64 = add i64 %63, 8
  %65 = inttoptr i64 %64 to %"class.blink::V8PerIsolateData"**
  %66 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %65, align 8
  %67 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %66, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink13V8LockManager18wrapper_type_info_E, %"class.v8::Value"* %62) #6
  br i1 %67, label %69, label %68

68:                                               ; preds = %38
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %8, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #6
  br label %271

69:                                               ; preds = %38
  %70 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %43) #6
  %71 = call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %70) #6
  %72 = icmp eq %"class.blink::ExecutionContext"* %71, null
  %73 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %71, i64 0, i32 3
  br i1 %72, label %79, label %74

74:                                               ; preds = %69
  %75 = bitcast %"class.blink::UseCounter"* %73 to void (%"class.blink::UseCounter"*, i32)***
  %76 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %76, i64 3
  %78 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %77, align 8
  call void %78(%"class.blink::UseCounter"* nonnull %73, i32 2375) #6
  br label %79

79:                                               ; preds = %74, %69
  %80 = load i32, i32* %34, align 8
  %81 = icmp slt i32 %80, 3
  br i1 %81, label %82, label %102, !prof !2

82:                                               ; preds = %79
  %83 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #6
  %84 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 3, i32 %80) #6
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %84, %"class.WTF::StringImpl"** %85, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %8, %"class.WTF::String"* nonnull dereferenceable(8) %10) #6
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #6
  br label %101

101:                                              ; preds = %100, %97, %82
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #6
  br label %271

102:                                              ; preds = %79
  %103 = load i64, i64* %46, align 8
  %104 = add i64 %103, -1
  %105 = inttoptr i64 %104 to i32*
  %106 = load i32, i32* %105, align 4
  %107 = and i64 %103, -4294967296
  %108 = zext i32 %106 to i64
  %109 = or i64 %107, %108
  %110 = add i64 %109, 7
  %111 = inttoptr i64 %110 to i16*
  %112 = load i16, i16* %111, align 2
  switch i16 %112, label %117 [
    i16 1057, label %113
    i16 1056, label %113
    i16 1040, label %113
  ]

113:                                              ; preds = %102, %102, %102
  %114 = add i64 %103, 19
  %115 = inttoptr i64 %114 to i8**
  %116 = load i8*, i8** %115, align 1
  br label %119

117:                                              ; preds = %102
  %118 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %47, i32 1) #6
  br label %119

119:                                              ; preds = %117, %113
  %120 = phi i8* [ %116, %113 ], [ %118, %117 ]
  %121 = bitcast i8* %120 to %"class.blink::LockManager"*
  %122 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %47) #6
  %123 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %122) #6
  %124 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %124) #6
  %125 = load i32, i32* %34, align 8
  %126 = icmp sgt i32 %125, 0
  br i1 %126, label %133, label %127

127:                                              ; preds = %119
  %128 = load i64*, i64** %39, align 8
  %129 = getelementptr inbounds i64, i64* %128, i64 1
  %130 = load i64, i64* %129, align 8
  %131 = add i64 %130, 160
  %132 = inttoptr i64 %131 to %"class.v8::Value"*
  br label %136

133:                                              ; preds = %119
  %134 = bitcast i64** %44 to %"class.v8::Value"**
  %135 = load %"class.v8::Value"*, %"class.v8::Value"** %134, align 8
  br label %136

136:                                              ; preds = %133, %127
  %137 = phi %"class.v8::Value"* [ %132, %127 ], [ %135, %133 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %11, %"class.v8::Isolate"* %43, %"class.v8::Value"* %137, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %8) #6
  %138 = load i32, i32* %56, align 8
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %248

140:                                              ; preds = %136
  %141 = load i32, i32* %34, align 8
  %142 = icmp sgt i32 %141, 1
  br i1 %142, label %149, label %143

143:                                              ; preds = %140
  %144 = load i64*, i64** %39, align 8
  %145 = getelementptr inbounds i64, i64* %144, i64 1
  %146 = load i64, i64* %145, align 8
  %147 = add i64 %146, 160
  %148 = inttoptr i64 %147 to %"class.v8::Value"*
  br label %153

149:                                              ; preds = %140
  %150 = load i64*, i64** %44, align 8
  %151 = getelementptr inbounds i64, i64* %150, i64 1
  %152 = bitcast i64* %151 to %"class.v8::Value"*
  br label %153

153:                                              ; preds = %149, %143
  %154 = phi %"class.v8::Value"* [ %148, %143 ], [ %152, %149 ]
  %155 = call %"class.blink::LockOptions"* @_ZN5blink17NativeValueTraitsINS_11LockOptionsEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %43, %"class.v8::Value"* %154, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %8) #6
  %156 = load i32, i32* %56, align 8
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %248

158:                                              ; preds = %153
  %159 = load i32, i32* %34, align 8
  %160 = icmp sgt i32 %159, 2
  br i1 %160, label %167, label %161

161:                                              ; preds = %158
  %162 = load i64*, i64** %39, align 8
  %163 = getelementptr inbounds i64, i64* %162, i64 1
  %164 = load i64, i64* %163, align 8
  %165 = add i64 %164, 160
  %166 = inttoptr i64 %165 to %"class.v8::Value"*
  br label %171

167:                                              ; preds = %158
  %168 = load i64*, i64** %44, align 8
  %169 = getelementptr inbounds i64, i64* %168, i64 2
  %170 = bitcast i64* %169 to %"class.v8::Value"*
  br label %171

171:                                              ; preds = %167, %161
  %172 = phi %"class.v8::Value"* [ %166, %161 ], [ %170, %167 ]
  %173 = call %"class.blink::V8LockGrantedCallback"* @_ZN5blink17NativeValueTraitsINS_21V8LockGrantedCallbackEvE13ArgumentValueEPN2v87IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %43, i32 2, %"class.v8::Value"* %172, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %8) #6
  %174 = load i32, i32* %56, align 8
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %248

176:                                              ; preds = %171
  %177 = bitcast %"class.blink::ScriptPromise"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %177) #6
  %178 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %178) #6
  %179 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %11, i64 0, i32 0, i32 0
  %180 = load %"class.v8::String"*, %"class.v8::String"** %179, align 8
  %181 = icmp eq %"class.v8::String"* %180, null
  br i1 %181, label %184, label %182, !prof !2

182:                                              ; preds = %176
  %183 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %180, i32 0) #6
  br label %205

184:                                              ; preds = %176
  %185 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %11, i64 0, i32 1, i32 0, i32 0
  %186 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %185, align 8
  %187 = icmp eq %"class.WTF::StringImpl"* %186, null
  br i1 %187, label %205, label %188

188:                                              ; preds = %184
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load atomic i32, i32* %189 monotonic, align 4
  %191 = and i32 %190, 2
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %205

193:                                              ; preds = %188
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 0
  %195 = load i32, i32* %194, align 4
  %196 = zext i32 %195 to i33
  %197 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %196, i33 1) #6
  %198 = extractvalue { i33, i1 } %197, 1
  %199 = extractvalue { i33, i1 } %197, 0
  %200 = icmp slt i33 %199, 0
  %201 = or i1 %198, %200
  br i1 %201, label %202, label %203, !prof !2

202:                                              ; preds = %193
  call void @llvm.trap() #6
  unreachable

203:                                              ; preds = %193
  %204 = trunc i33 %199 to i32
  store i32 %204, i32* %194, align 4
  br label %205

205:                                              ; preds = %203, %188, %184, %182
  %206 = phi %"class.WTF::StringImpl"* [ %183, %182 ], [ null, %184 ], [ %186, %188 ], [ %186, %203 ]
  %207 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %206, %"class.WTF::StringImpl"** %207, align 8
  call void @_ZN5blink11LockManager7requestEPNS_11ScriptStateERKN3WTF6StringEPKNS_11LockOptionsEPNS_21V8LockGrantedCallbackERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* nonnull sret %12, %"class.blink::LockManager"* %121, %"class.blink::ScriptState"* %123, %"class.WTF::String"* nonnull dereferenceable(8) %13, %"class.blink::LockOptions"* %155, %"class.blink::V8LockGrantedCallback"* %173, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %8) #6
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %223, label %210

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %216 = load i32, i32* %215, align 4
  br i1 %214, label %217, label %219

217:                                              ; preds = %210
  %218 = add i32 %216, -1
  store i32 %218, i32* %215, align 4
  br label %219

219:                                              ; preds = %217, %210
  %220 = phi i32 [ %218, %217 ], [ %216, %210 ]
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %219
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #6
  br label %223

223:                                              ; preds = %222, %219, %205
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %178) #6
  %224 = load i32, i32* %56, align 8
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %236

226:                                              ; preds = %223
  %227 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %12, i64 0, i32 1
  %228 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %227) #6
  %229 = load i64*, i64** %39, align 8
  %230 = getelementptr inbounds i64, i64* %229, i64 3
  %231 = icmp eq %"class.v8::Value"* %228, null
  %232 = bitcast %"class.v8::Value"* %228 to i64*
  %233 = getelementptr inbounds i64, i64* %229, i64 2
  %234 = select i1 %231, i64* %233, i64* %232, !prof !2
  %235 = load i64, i64* %234, align 8
  store i64 %235, i64* %230, align 8
  br label %236

236:                                              ; preds = %226, %223
  %237 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %12, i64 0, i32 1, i32 1, i32 1, i32 0
  %238 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %237, align 8
  %239 = icmp eq %"class.blink::DOMWrapperWorld"* %238, null
  br i1 %239, label %247, label %240

240:                                              ; preds = %236
  %241 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %238, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %241) #6
  %242 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %238, i64 0, i32 0, i32 0, i32 0, i32 0
  %243 = load i32, i32* %242, align 4
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %247

245:                                              ; preds = %240
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %238) #6
  %246 = bitcast %"class.blink::DOMWrapperWorld"* %238 to i8*
  call void @free(i8* %246) #6
  br label %247

247:                                              ; preds = %245, %240, %236
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %177) #6
  br label %248

248:                                              ; preds = %247, %171, %153, %136
  %249 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %11, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %250 = load i8*, i8** %249, align 8
  store i8* null, i8** %249, align 8
  %251 = icmp eq i8* %250, null
  br i1 %251, label %253, label %252

252:                                              ; preds = %248
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %250) #6
  br label %253

253:                                              ; preds = %252, %248
  %254 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %11, i64 0, i32 1, i32 0, i32 0
  %255 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %254, align 8
  %256 = icmp eq %"class.WTF::StringImpl"* %255, null
  br i1 %256, label %270, label %257

257:                                              ; preds = %253
  %258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = load atomic i32, i32* %258 monotonic, align 4
  %260 = and i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 0
  %263 = load i32, i32* %262, align 4
  br i1 %261, label %264, label %266

264:                                              ; preds = %257
  %265 = add i32 %263, -1
  store i32 %265, i32* %262, align 4
  br label %266

266:                                              ; preds = %264, %257
  %267 = phi i32 [ %265, %264 ], [ %263, %257 ]
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %269, label %270

269:                                              ; preds = %266
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %255) #6
  br label %270

270:                                              ; preds = %269, %266, %253
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %124) #6
  br label %271

271:                                              ; preds = %270, %101, %68
  call void @_ZN5blink29ExceptionToRejectPromiseScopeD2Ev(%"class.blink::ExceptionToRejectPromiseScope"* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8
  %272 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %273 = load i64*, i64** %272, align 8
  %274 = icmp eq i64* %273, null
  br i1 %274, label %284, label %275

275:                                              ; preds = %271
  %276 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %55, align 8
  %277 = bitcast %"class.v8::Isolate"* %276 to %"class.v8::internal::Isolate"*
  %278 = load i64, i64* %273, align 8
  %279 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %277, i64 %278) #6
  %280 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %276) #6
  br i1 %280, label %284, label %281

281:                                              ; preds = %275
  %282 = bitcast i64* %279 to %"class.v8::Value"*
  %283 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %276, %"class.v8::Value"* %282) #6
  br label %284

284:                                              ; preds = %281, %275, %271
  %285 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %286 = icmp eq %"class.WTF::StringImpl"* %285, null
  br i1 %286, label %615, label %287

287:                                              ; preds = %284
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load atomic i32, i32* %288 monotonic, align 4
  %290 = and i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 0
  %293 = load i32, i32* %292, align 4
  br i1 %291, label %294, label %296

294:                                              ; preds = %287
  %295 = add i32 %293, -1
  store i32 %295, i32* %292, align 4
  br label %296

296:                                              ; preds = %294, %287
  %297 = phi i32 [ %295, %294 ], [ %293, %287 ]
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %615

299:                                              ; preds = %296
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %285) #6
  br label %615

300:                                              ; preds = %33
  %301 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %302 = load i64*, i64** %301, align 8
  %303 = getelementptr inbounds i64, i64* %302, i64 1
  %304 = bitcast i64* %303 to %"class.v8::Isolate"**
  %305 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %304, align 8
  %306 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %307 = load i64*, i64** %306, align 8
  %308 = getelementptr inbounds i64, i64* %307, i64 -1
  %309 = bitcast i64* %308 to %"class.v8::Object"*
  %310 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %310) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %310, i8 -86, i64 56, i1 false) #6
  %311 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %311, align 8
  %312 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %312, align 8
  %313 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %313, align 2
  %314 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %315 = bitcast i8** %314 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0)>, <2 x i8*>* %315, align 8
  %316 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %316, align 8
  %317 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %305, %"class.v8::Isolate"** %317, align 8
  %318 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %318, align 8
  %319 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %320 = bitcast %"class.WTF::StringImpl"** %319 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %320, i8 0, i64 16, i1 false) #6
  %321 = bitcast %"class.blink::ExceptionToRejectPromiseScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %321) #6
  %322 = getelementptr inbounds %"class.blink::ExceptionToRejectPromiseScope", %"class.blink::ExceptionToRejectPromiseScope"* %3, i64 0, i32 0
  %323 = getelementptr inbounds %"class.blink::ExceptionToRejectPromiseScope", %"class.blink::ExceptionToRejectPromiseScope"* %3, i64 0, i32 1
  store %"class.v8::FunctionCallbackInfo"* %0, %"class.v8::FunctionCallbackInfo"** %322, align 8
  store %"class.blink::ExceptionState"* %2, %"class.blink::ExceptionState"** %323, align 8
  %324 = bitcast i64* %308 to %"class.v8::Value"*
  %325 = ptrtoint %"class.v8::Isolate"* %305 to i64
  %326 = add i64 %325, 8
  %327 = inttoptr i64 %326 to %"class.blink::V8PerIsolateData"**
  %328 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %327, align 8
  %329 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %328, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink13V8LockManager18wrapper_type_info_E, %"class.v8::Value"* %324) #6
  br i1 %329, label %331, label %330

330:                                              ; preds = %300
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #6
  br label %515

331:                                              ; preds = %300
  %332 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %305) #6
  %333 = call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %332) #6
  %334 = icmp eq %"class.blink::ExecutionContext"* %333, null
  %335 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %333, i64 0, i32 3
  br i1 %334, label %341, label %336

336:                                              ; preds = %331
  %337 = bitcast %"class.blink::UseCounter"* %335 to void (%"class.blink::UseCounter"*, i32)***
  %338 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %337, align 8
  %339 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %338, i64 3
  %340 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %339, align 8
  call void %340(%"class.blink::UseCounter"* nonnull %335, i32 2375) #6
  br label %341

341:                                              ; preds = %336, %331
  %342 = load i32, i32* %34, align 8
  %343 = icmp slt i32 %342, 2
  br i1 %343, label %344, label %364, !prof !2

344:                                              ; preds = %341
  %345 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %345) #6
  %346 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %342) #6
  %347 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %346, %"class.WTF::StringImpl"** %347, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %4) #6
  %348 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %347, align 8
  %349 = icmp eq %"class.WTF::StringImpl"* %348, null
  br i1 %349, label %363, label %350

350:                                              ; preds = %344
  %351 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %348, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %352 = load atomic i32, i32* %351 monotonic, align 4
  %353 = and i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %348, i64 0, i32 0
  %356 = load i32, i32* %355, align 4
  br i1 %354, label %357, label %359

357:                                              ; preds = %350
  %358 = add i32 %356, -1
  store i32 %358, i32* %355, align 4
  br label %359

359:                                              ; preds = %357, %350
  %360 = phi i32 [ %358, %357 ], [ %356, %350 ]
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %362, label %363

362:                                              ; preds = %359
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %348) #6
  br label %363

363:                                              ; preds = %362, %359, %344
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %345) #6
  br label %515

364:                                              ; preds = %341
  %365 = load i64, i64* %308, align 8
  %366 = add i64 %365, -1
  %367 = inttoptr i64 %366 to i32*
  %368 = load i32, i32* %367, align 4
  %369 = and i64 %365, -4294967296
  %370 = zext i32 %368 to i64
  %371 = or i64 %369, %370
  %372 = add i64 %371, 7
  %373 = inttoptr i64 %372 to i16*
  %374 = load i16, i16* %373, align 2
  switch i16 %374, label %379 [
    i16 1057, label %375
    i16 1056, label %375
    i16 1040, label %375
  ]

375:                                              ; preds = %364, %364, %364
  %376 = add i64 %365, 19
  %377 = inttoptr i64 %376 to i8**
  %378 = load i8*, i8** %377, align 1
  br label %381

379:                                              ; preds = %364
  %380 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %309, i32 1) #6
  br label %381

381:                                              ; preds = %379, %375
  %382 = phi i8* [ %378, %375 ], [ %380, %379 ]
  %383 = bitcast i8* %382 to %"class.blink::LockManager"*
  %384 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %309) #6
  %385 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %384) #6
  %386 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %386) #6
  %387 = load i32, i32* %34, align 8
  %388 = icmp sgt i32 %387, 0
  br i1 %388, label %395, label %389

389:                                              ; preds = %381
  %390 = load i64*, i64** %301, align 8
  %391 = getelementptr inbounds i64, i64* %390, i64 1
  %392 = load i64, i64* %391, align 8
  %393 = add i64 %392, 160
  %394 = inttoptr i64 %393 to %"class.v8::Value"*
  br label %398

395:                                              ; preds = %381
  %396 = bitcast i64** %306 to %"class.v8::Value"**
  %397 = load %"class.v8::Value"*, %"class.v8::Value"** %396, align 8
  br label %398

398:                                              ; preds = %395, %389
  %399 = phi %"class.v8::Value"* [ %394, %389 ], [ %397, %395 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %5, %"class.v8::Isolate"* %305, %"class.v8::Value"* %399, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %400 = load i32, i32* %318, align 8
  %401 = icmp eq i32 %400, 0
  br i1 %401, label %402, label %492

402:                                              ; preds = %398
  %403 = load i32, i32* %34, align 8
  %404 = icmp sgt i32 %403, 1
  br i1 %404, label %411, label %405

405:                                              ; preds = %402
  %406 = load i64*, i64** %301, align 8
  %407 = getelementptr inbounds i64, i64* %406, i64 1
  %408 = load i64, i64* %407, align 8
  %409 = add i64 %408, 160
  %410 = inttoptr i64 %409 to %"class.v8::Value"*
  br label %415

411:                                              ; preds = %402
  %412 = load i64*, i64** %306, align 8
  %413 = getelementptr inbounds i64, i64* %412, i64 1
  %414 = bitcast i64* %413 to %"class.v8::Value"*
  br label %415

415:                                              ; preds = %411, %405
  %416 = phi %"class.v8::Value"* [ %410, %405 ], [ %414, %411 ]
  %417 = call %"class.blink::V8LockGrantedCallback"* @_ZN5blink17NativeValueTraitsINS_21V8LockGrantedCallbackEvE13ArgumentValueEPN2v87IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %305, i32 1, %"class.v8::Value"* %416, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %418 = load i32, i32* %318, align 8
  %419 = icmp eq i32 %418, 0
  br i1 %419, label %420, label %492

420:                                              ; preds = %415
  %421 = bitcast %"class.blink::ScriptPromise"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %421) #6
  %422 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %422) #6
  %423 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 0, i32 0
  %424 = load %"class.v8::String"*, %"class.v8::String"** %423, align 8
  %425 = icmp eq %"class.v8::String"* %424, null
  br i1 %425, label %428, label %426, !prof !2

426:                                              ; preds = %420
  %427 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %424, i32 0) #6
  br label %449

428:                                              ; preds = %420
  %429 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %430 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %429, align 8
  %431 = icmp eq %"class.WTF::StringImpl"* %430, null
  br i1 %431, label %449, label %432

432:                                              ; preds = %428
  %433 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %430, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %434 = load atomic i32, i32* %433 monotonic, align 4
  %435 = and i32 %434, 2
  %436 = icmp eq i32 %435, 0
  br i1 %436, label %437, label %449

437:                                              ; preds = %432
  %438 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %430, i64 0, i32 0
  %439 = load i32, i32* %438, align 4
  %440 = zext i32 %439 to i33
  %441 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %440, i33 1) #6
  %442 = extractvalue { i33, i1 } %441, 1
  %443 = extractvalue { i33, i1 } %441, 0
  %444 = icmp slt i33 %443, 0
  %445 = or i1 %442, %444
  br i1 %445, label %446, label %447, !prof !2

446:                                              ; preds = %437
  call void @llvm.trap() #6
  unreachable

447:                                              ; preds = %437
  %448 = trunc i33 %443 to i32
  store i32 %448, i32* %438, align 4
  br label %449

449:                                              ; preds = %447, %432, %428, %426
  %450 = phi %"class.WTF::StringImpl"* [ %427, %426 ], [ null, %428 ], [ %430, %432 ], [ %430, %447 ]
  %451 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %450, %"class.WTF::StringImpl"** %451, align 8
  call void @_ZN5blink11LockManager7requestEPNS_11ScriptStateERKN3WTF6StringEPNS_21V8LockGrantedCallbackERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* nonnull sret %6, %"class.blink::LockManager"* %383, %"class.blink::ScriptState"* %385, %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.blink::V8LockGrantedCallback"* %417, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %452 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %451, align 8
  %453 = icmp eq %"class.WTF::StringImpl"* %452, null
  br i1 %453, label %467, label %454

454:                                              ; preds = %449
  %455 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %452, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %456 = load atomic i32, i32* %455 monotonic, align 4
  %457 = and i32 %456, 2
  %458 = icmp eq i32 %457, 0
  %459 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %452, i64 0, i32 0
  %460 = load i32, i32* %459, align 4
  br i1 %458, label %461, label %463

461:                                              ; preds = %454
  %462 = add i32 %460, -1
  store i32 %462, i32* %459, align 4
  br label %463

463:                                              ; preds = %461, %454
  %464 = phi i32 [ %462, %461 ], [ %460, %454 ]
  %465 = icmp eq i32 %464, 0
  br i1 %465, label %466, label %467

466:                                              ; preds = %463
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %452) #6
  br label %467

467:                                              ; preds = %466, %463, %449
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %422) #6
  %468 = load i32, i32* %318, align 8
  %469 = icmp eq i32 %468, 0
  br i1 %469, label %470, label %480

470:                                              ; preds = %467
  %471 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %6, i64 0, i32 1
  %472 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %471) #6
  %473 = load i64*, i64** %301, align 8
  %474 = getelementptr inbounds i64, i64* %473, i64 3
  %475 = icmp eq %"class.v8::Value"* %472, null
  %476 = bitcast %"class.v8::Value"* %472 to i64*
  %477 = getelementptr inbounds i64, i64* %473, i64 2
  %478 = select i1 %475, i64* %477, i64* %476, !prof !2
  %479 = load i64, i64* %478, align 8
  store i64 %479, i64* %474, align 8
  br label %480

480:                                              ; preds = %470, %467
  %481 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %6, i64 0, i32 1, i32 1, i32 1, i32 0
  %482 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %481, align 8
  %483 = icmp eq %"class.blink::DOMWrapperWorld"* %482, null
  br i1 %483, label %491, label %484

484:                                              ; preds = %480
  %485 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %482, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %485) #6
  %486 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %482, i64 0, i32 0, i32 0, i32 0, i32 0
  %487 = load i32, i32* %486, align 4
  %488 = icmp eq i32 %487, 0
  br i1 %488, label %489, label %491

489:                                              ; preds = %484
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %482) #6
  %490 = bitcast %"class.blink::DOMWrapperWorld"* %482 to i8*
  call void @free(i8* %490) #6
  br label %491

491:                                              ; preds = %489, %484, %480
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %421) #6
  br label %492

492:                                              ; preds = %491, %415, %398
  %493 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %494 = load i8*, i8** %493, align 8
  store i8* null, i8** %493, align 8
  %495 = icmp eq i8* %494, null
  br i1 %495, label %497, label %496

496:                                              ; preds = %492
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %494) #6
  br label %497

497:                                              ; preds = %496, %492
  %498 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %499 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %498, align 8
  %500 = icmp eq %"class.WTF::StringImpl"* %499, null
  br i1 %500, label %514, label %501

501:                                              ; preds = %497
  %502 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %499, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %503 = load atomic i32, i32* %502 monotonic, align 4
  %504 = and i32 %503, 2
  %505 = icmp eq i32 %504, 0
  %506 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %499, i64 0, i32 0
  %507 = load i32, i32* %506, align 4
  br i1 %505, label %508, label %510

508:                                              ; preds = %501
  %509 = add i32 %507, -1
  store i32 %509, i32* %506, align 4
  br label %510

510:                                              ; preds = %508, %501
  %511 = phi i32 [ %509, %508 ], [ %507, %501 ]
  %512 = icmp eq i32 %511, 0
  br i1 %512, label %513, label %514

513:                                              ; preds = %510
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %499) #6
  br label %514

514:                                              ; preds = %513, %510, %497
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %386) #6
  br label %515

515:                                              ; preds = %514, %363, %330
  call void @_ZN5blink29ExceptionToRejectPromiseScopeD2Ev(%"class.blink::ExceptionToRejectPromiseScope"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %321) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %311, align 8
  %516 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %517 = load i64*, i64** %516, align 8
  %518 = icmp eq i64* %517, null
  br i1 %518, label %528, label %519

519:                                              ; preds = %515
  %520 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %317, align 8
  %521 = bitcast %"class.v8::Isolate"* %520 to %"class.v8::internal::Isolate"*
  %522 = load i64, i64* %517, align 8
  %523 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %521, i64 %522) #6
  %524 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %520) #6
  br i1 %524, label %528, label %525

525:                                              ; preds = %519
  %526 = bitcast i64* %523 to %"class.v8::Value"*
  %527 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %520, %"class.v8::Value"* %526) #6
  br label %528

528:                                              ; preds = %525, %519, %515
  %529 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %319, align 8
  %530 = icmp eq %"class.WTF::StringImpl"* %529, null
  br i1 %530, label %615, label %531

531:                                              ; preds = %528
  %532 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %529, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %533 = load atomic i32, i32* %532 monotonic, align 4
  %534 = and i32 %533, 2
  %535 = icmp eq i32 %534, 0
  %536 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %529, i64 0, i32 0
  %537 = load i32, i32* %536, align 4
  br i1 %535, label %538, label %540

538:                                              ; preds = %531
  %539 = add i32 %537, -1
  store i32 %539, i32* %536, align 4
  br label %540

540:                                              ; preds = %538, %531
  %541 = phi i32 [ %539, %538 ], [ %537, %531 ]
  %542 = icmp eq i32 %541, 0
  br i1 %542, label %543, label %615

543:                                              ; preds = %540
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %529) #6
  br label %615

544:                                              ; preds = %33
  %545 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %546 = load i64*, i64** %545, align 8
  %547 = getelementptr inbounds i64, i64* %546, i64 1
  %548 = load i64, i64* %547, align 8
  %549 = bitcast %"class.blink::ExceptionState"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %549) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %549, i8 -86, i64 56, i1 false)
  %550 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %14, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %550, align 8
  %551 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %14, i64 0, i32 1, i32 0
  store i16 6, i16* %551, align 8
  %552 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %14, i64 0, i32 1, i32 1
  store i16 0, i16* %552, align 2
  %553 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %14, i64 0, i32 1, i32 2
  %554 = bitcast i8** %553 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0)>, <2 x i8*>* %554, align 8
  %555 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %14, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %555, align 8
  %556 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %14, i64 0, i32 3
  %557 = bitcast %"class.v8::Isolate"** %556 to i64*
  store i64 %548, i64* %557, align 8
  %558 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %14, i64 0, i32 4
  store i32 0, i32* %558, align 8
  %559 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %14, i64 0, i32 5, i32 0, i32 0
  %560 = bitcast %"class.WTF::StringImpl"** %559 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %560, i8 0, i64 16, i1 false) #6
  %561 = bitcast %"class.blink::ExceptionToRejectPromiseScope"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %561) #6
  %562 = getelementptr inbounds %"class.blink::ExceptionToRejectPromiseScope", %"class.blink::ExceptionToRejectPromiseScope"* %15, i64 0, i32 0
  %563 = getelementptr inbounds %"class.blink::ExceptionToRejectPromiseScope", %"class.blink::ExceptionToRejectPromiseScope"* %15, i64 0, i32 1
  store %"class.v8::FunctionCallbackInfo"* %0, %"class.v8::FunctionCallbackInfo"** %562, align 8
  store %"class.blink::ExceptionState"* %14, %"class.blink::ExceptionState"** %563, align 8
  %564 = icmp slt i32 %35, 2
  br i1 %564, label %565, label %585, !prof !2

565:                                              ; preds = %544
  %566 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %566) #6
  %567 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %35) #6
  %568 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %567, %"class.WTF::StringImpl"** %568, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %14, %"class.WTF::String"* nonnull dereferenceable(8) %16) #6
  %569 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %568, align 8
  %570 = icmp eq %"class.WTF::StringImpl"* %569, null
  br i1 %570, label %584, label %571

571:                                              ; preds = %565
  %572 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %569, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %573 = load atomic i32, i32* %572 monotonic, align 4
  %574 = and i32 %573, 2
  %575 = icmp eq i32 %574, 0
  %576 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %569, i64 0, i32 0
  %577 = load i32, i32* %576, align 4
  br i1 %575, label %578, label %580

578:                                              ; preds = %571
  %579 = add i32 %577, -1
  store i32 %579, i32* %576, align 4
  br label %580

580:                                              ; preds = %578, %571
  %581 = phi i32 [ %579, %578 ], [ %577, %571 ]
  %582 = icmp eq i32 %581, 0
  br i1 %582, label %583, label %584

583:                                              ; preds = %580
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %569) #6
  br label %584

584:                                              ; preds = %565, %580, %583
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %566) #6
  br label %586

585:                                              ; preds = %544
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* nonnull %14, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0)) #6
  br label %586

586:                                              ; preds = %585, %584
  call void @_ZN5blink29ExceptionToRejectPromiseScopeD2Ev(%"class.blink::ExceptionToRejectPromiseScope"* nonnull %15) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %561) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %550, align 8
  %587 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %14, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %588 = load i64*, i64** %587, align 8
  %589 = icmp eq i64* %588, null
  br i1 %589, label %599, label %590

590:                                              ; preds = %586
  %591 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %556, align 8
  %592 = bitcast %"class.v8::Isolate"* %591 to %"class.v8::internal::Isolate"*
  %593 = load i64, i64* %588, align 8
  %594 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %592, i64 %593) #6
  %595 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %591) #6
  br i1 %595, label %599, label %596

596:                                              ; preds = %590
  %597 = bitcast i64* %594 to %"class.v8::Value"*
  %598 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %591, %"class.v8::Value"* %597) #6
  br label %599

599:                                              ; preds = %596, %590, %586
  %600 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %559, align 8
  %601 = icmp eq %"class.WTF::StringImpl"* %600, null
  br i1 %601, label %615, label %602

602:                                              ; preds = %599
  %603 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %600, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %604 = load atomic i32, i32* %603 monotonic, align 4
  %605 = and i32 %604, 2
  %606 = icmp eq i32 %605, 0
  %607 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %600, i64 0, i32 0
  %608 = load i32, i32* %607, align 4
  br i1 %606, label %609, label %611

609:                                              ; preds = %602
  %610 = add i32 %608, -1
  store i32 %610, i32* %607, align 4
  br label %611

611:                                              ; preds = %609, %602
  %612 = phi i32 [ %610, %609 ], [ %608, %602 ]
  %613 = icmp eq i32 %612, 0
  br i1 %613, label %614, label %615

614:                                              ; preds = %611
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %600) #6
  br label %615

615:                                              ; preds = %614, %611, %599, %543, %540, %528, %299, %296, %284
  %616 = phi i8* [ %48, %284 ], [ %48, %296 ], [ %48, %299 ], [ %310, %528 ], [ %310, %540 ], [ %310, %543 ], [ %549, %599 ], [ %549, %611 ], [ %549, %614 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %616) #6
  ret void
}

declare %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span"* byval(%"class.base::span") align 8) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.4, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0)) #6
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.4, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6, i64 0, i64 0)) #6
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #6
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare void @_ZN5blink11LockManager5queryEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* sret, %"class.blink::LockManager"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink29ExceptionToRejectPromiseScopeD2Ev(%"class.blink::ExceptionToRejectPromiseScope"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::ScriptPromise", align 8
  %3 = getelementptr inbounds %"class.blink::ExceptionToRejectPromiseScope", %"class.blink::ExceptionToRejectPromiseScope"* %0, i64 0, i32 1
  %4 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %42, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::ExceptionToRejectPromiseScope", %"class.blink::ExceptionToRejectPromiseScope"* %0, i64 0, i32 0
  %10 = load %"class.v8::FunctionCallbackInfo"*, %"class.v8::FunctionCallbackInfo"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %10, i64 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = getelementptr inbounds i64, i64* %12, i64 1
  %14 = bitcast i64* %13 to %"class.v8::Isolate"**
  %15 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %14, align 8
  %16 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %15) #6
  %17 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %16) #6
  %18 = load %"class.v8::FunctionCallbackInfo"*, %"class.v8::FunctionCallbackInfo"** %9, align 8
  %19 = bitcast %"class.blink::ScriptPromise"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #6
  %20 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %3, align 8
  call void @_ZN5blink13ScriptPromise6RejectEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* nonnull sret %2, %"class.blink::ScriptState"* %17, %"class.blink::ExceptionState"* dereferenceable(72) %20) #6
  %21 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %2, i64 0, i32 1
  %22 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %21) #6
  %23 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %18, i64 0, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = getelementptr inbounds i64, i64* %24, i64 3
  %26 = icmp eq %"class.v8::Value"* %22, null
  %27 = bitcast %"class.v8::Value"* %22 to i64*
  %28 = getelementptr inbounds i64, i64* %24, i64 2
  %29 = select i1 %26, i64* %28, i64* %27, !prof !2
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %25, align 8
  %31 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %2, i64 0, i32 1, i32 1, i32 1, i32 0
  %32 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %31, align 8
  %33 = icmp eq %"class.blink::DOMWrapperWorld"* %32, null
  br i1 %33, label %41, label %34

34:                                               ; preds = %8
  %35 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %32, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %35) #6
  %36 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %34
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %32) #6
  %40 = bitcast %"class.blink::DOMWrapperWorld"* %32 to i8*
  call void @free(i8* %40) #6
  br label %41

41:                                               ; preds = %8, %34, %39
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #6
  br label %42

42:                                               ; preds = %1, %41
  ret void
}

declare zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZN5blink13ScriptPromise6RejectEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* sret, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32, i32) local_unnamed_addr #2

declare void @_ZN5blink9scheduler28CooperativeSchedulingManager13SafepointSlowEv(%"class.blink::scheduler::CooperativeSchedulingManager"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::V8LockGrantedCallback"* @_ZN5blink17NativeValueTraitsINS_21V8LockGrantedCallbackEvE13ArgumentValueEPN2v87IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"* %2) #6
  br i1 %6, label %7, label %17

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_20CallbackFunctionBaseEEEPhm(i64 32) #6
  %10 = bitcast i8* %9 to %"class.blink::V8LockGrantedCallback"*
  %11 = bitcast i8* %9 to %"class.blink::CallbackFunctionBase"*
  tail call void @_ZN5blink20CallbackFunctionBaseC2EN2v85LocalINS1_6ObjectEEE(%"class.blink::CallbackFunctionBase"* %11, %"class.v8::Object"* %8) #6
  %12 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink21V8LockGrantedCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 -4
  %14 = bitcast i8* %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = or i16 %15, 1
  store atomic i16 %16, i16* %14 release, align 2
  br label %41

17:                                               ; preds = %4
  %18 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6
  %19 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0)) #6
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %20, align 8
  %21 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %22 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %22, i64 3
  %24 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %23, align 8
  call void %24(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #6
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %17
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #6
  br label %40

40:                                               ; preds = %17, %36, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6
  br label %41

41:                                               ; preds = %40, %7
  %42 = phi %"class.blink::V8LockGrantedCallback"* [ %10, %7 ], [ null, %40 ]
  ret %"class.blink::V8LockGrantedCallback"* %42
}

declare void @_ZN5blink11LockManager7requestEPNS_11ScriptStateERKN3WTF6StringEPKNS_11LockOptionsEPNS_21V8LockGrantedCallbackERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* sret, %"class.blink::LockManager"*, %"class.blink::ScriptState"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::LockOptions"*, %"class.blink::V8LockGrantedCallback"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = bitcast %"class.v8::Value"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %26

10:                                               ; preds = %4
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %21, label %26

21:                                               ; preds = %10
  %22 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to %"class.v8::Value"**
  store %"class.v8::Value"* %2, %"class.v8::Value"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %25 = bitcast %"class.std::__1::unique_ptr.429"* %24 to i64*
  store i64 0, i64* %25, align 8
  br label %54

26:                                               ; preds = %4, %10
  %27 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2) #6
  br i1 %27, label %28, label %36

28:                                               ; preds = %26
  %29 = bitcast %"class.v8::Value"* %2 to %"class.v8::Int32"*
  %30 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %29) #6
  %31 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %31, align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %30) #6
  %33 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %35 = bitcast %"class.std::__1::unique_ptr.429"* %34 to i64*
  store i64 0, i64* %35, align 8
  br label %54

36:                                               ; preds = %26
  %37 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %1) #6
  %38 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #6
  %39 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %2, %"class.v8::Context"* %38) #6
  %40 = icmp eq %"class.v8::String"* %39, null
  br i1 %40, label %41, label %48

41:                                               ; preds = %36
  %42 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #6
  %43 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %44 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %44, i64 5
  %46 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %45, align 8
  call void %46(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %42) #6
  %47 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 152, i1 false)
  br label %53

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* %39, %"class.v8::String"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %52 = bitcast %"class.std::__1::unique_ptr.429"* %51 to i64*
  store i64 0, i64* %52, align 8
  br label %53

53:                                               ; preds = %48, %41
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #6
  br label %54

54:                                               ; preds = %53, %28, %21
  ret void
}

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #2

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #2

declare %"class.blink::LockOptions"* @_ZN5blink17NativeValueTraitsINS_11LockOptionsEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_20CallbackFunctionBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #6
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #6
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.182"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.182"*)) #6
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #6
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #6
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #6
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #6
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %40, i8* %41) #6
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #6
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #6
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #6
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #6
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #6
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20CallbackFunctionBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CallbackFunctionBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CallbackFunctionBase"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20CallbackFunctionBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CallbackFunctionBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::CallbackFunctionBase"*)***
  %4 = load void (%"class.blink::CallbackFunctionBase"*)**, void (%"class.blink::CallbackFunctionBase"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::CallbackFunctionBase"*)*, void (%"class.blink::CallbackFunctionBase"*)** %4, i64 1
  %6 = load void (%"class.blink::CallbackFunctionBase"*)*, void (%"class.blink::CallbackFunctionBase"*)** %5, align 8
  tail call void %6(%"class.blink::CallbackFunctionBase"* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20CallbackFunctionBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #6
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.182"*) local_unnamed_addr #2

declare void @_ZN5blink20CallbackFunctionBaseC2EN2v85LocalINS1_6ObjectEEE(%"class.blink::CallbackFunctionBase"*, %"class.v8::Object"*) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #2

declare void @_ZN5blink11LockManager7requestEPNS_11ScriptStateERKN3WTF6StringEPNS_21V8LockGrantedCallbackERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* sret, %"class.blink::LockManager"*, %"class.blink::ScriptState"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::V8LockGrantedCallback"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
