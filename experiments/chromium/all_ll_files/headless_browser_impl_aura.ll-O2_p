; ModuleID = '../../headless/lib/browser/headless_browser_impl_aura.cc'
source_filename = "../../headless/lib/browser/headless_browser_impl_aura.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.headless::HeadlessBrowserImpl" = type { %"class.headless::HeadlessBrowser", %"class.headless::HeadlessDevToolsTarget", %"class.base::OnceCallback", %"struct.headless::HeadlessBrowser::Options", %"class.headless::HeadlessBrowserMainParts"*, %"class.base::flat_map", %"class.headless::HeadlessBrowserContext"*, %class.scoped_refptr.32, %"class.std::__1::unique_ptr.33", %"class.base::WeakPtrFactory" }
%"class.headless::HeadlessBrowser" = type { i32 (...)** }
%"class.headless::HeadlessDevToolsTarget" = type { i32 (...)** }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.headless::HeadlessBrowser::Options" = type <{ i32, [4 x i8], i8**, %"class.net::HostPortPair", i8, [7 x i8], %"class.base::MessagePump"*, i8, i8, i8, [5 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr", %"class.gfx::Size", %"class.base::FilePath", i8, i8, i8, i8, [4 x i8], %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.24", i8, [7 x i8], %"class.base::FilePath", i32, [4 x i8] }>
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.base::MessagePump" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.net::ProxyConfig"* }
%"class.net::ProxyConfig" = type { i8, %class.GURL, i8, %"struct.net::ProxyConfig::ProxyRules" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.4" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %class.GURL* }
%"struct.net::ProxyConfig::ProxyRules" = type { %"class.net::ProxyBypassRules", i8, i32, %"class.net::ProxyList", %"class.net::ProxyList", %"class.net::ProxyList", %"class.net::ProxyList", %"class.net::ProxyList" }
%"class.net::ProxyBypassRules" = type { %"class.net::SchemeHostPortMatcher" }
%"class.net::SchemeHostPortMatcher" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.8"*, %"class.std::__1::unique_ptr.8"*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::unique_ptr.8" = type opaque
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::unique_ptr.8"* }
%"class.net::ProxyList" = type { %"class.std::__1::vector.14" }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.net::ProxyServer"*, %"class.net::ProxyServer"*, %"class.std::__1::__compressed_pair.16" }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.net::ProxyServer"* }
%"class.gfx::Size" = type { i32, i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.24" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.headless::HeadlessBrowserMainParts" = type opaque
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.25" }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.27" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::pair"* }
%"class.headless::HeadlessBrowserContext" = type { i32 (...)** }
%class.scoped_refptr.32 = type { %"class.content::DevToolsAgentHost"* }
%"class.content::DevToolsAgentHost" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.headless::HeadlessRequestContextManager"* }
%"class.headless::HeadlessRequestContextManager" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.39 }
%class.scoped_refptr.39 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.40", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.40" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i8 }
%"class.headless::HeadlessScreen" = type { %"class.display::ScreenBase" }
%"class.display::ScreenBase" = type { %"class.display::Screen", %"class.display::DisplayList" }
%"class.display::Screen" = type { i32 (...)**, i64, i64 }
%"class.display::DisplayList" = type { %"class.std::__1::vector.46", i64, i64, %"class.base::ObserverList" }
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"class.display::Display"*, %"class.display::Display"*, %"class.std::__1::__compressed_pair.54" }
%"class.display::Display" = type { i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, %"class.absl::optional", i32, i32, %"class.gfx::Size", %"class.gfx::DisplayColorSpaces", i32, i32, i8, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.48 }
%union.anon.48 = type { i32 }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.49" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.49" = type { %"class.absl::optional_internal::optional_data.50" }
%"class.absl::optional_internal::optional_data.50" = type { %"class.absl::optional_internal::optional_data_base.51" }
%"class.absl::optional_internal::optional_data_base.51" = type { %"class.absl::optional_internal::optional_data_dtor_base.52" }
%"class.absl::optional_internal::optional_data_dtor_base.52" = type { i8, %union.anon.53 }
%union.anon.53 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.display::Display"* }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.59", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.62" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.61 }
%class.scoped_refptr.61 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.headless::HeadlessClipboard" = type { %"class.ui::Clipboard", i32, %"class.std::__1::map" }
%"class.ui::Clipboard" = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.76", %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { i64 }
%"class.headless::HeadlessWebContentsImpl" = type { %"class.headless::HeadlessWebContents", %"class.headless::HeadlessDevToolsTarget", %"class.content::DevToolsAgentHostObserver", %"class.content::RenderProcessHostObserver", %"class.content::WebContentsObserver", i64, i8, %"class.headless::HeadlessBrowserContextImpl"*, %"class.content::RenderProcessHost"*, %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.105", i32, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.257", %class.scoped_refptr.32, i8, i8, [6 x i8], %"class.base::ObserverList.263", %"class.base::WeakPtr.267" }
%"class.headless::HeadlessWebContents" = type { i32 (...)** }
%"class.content::DevToolsAgentHostObserver" = type { i32 (...)** }
%"class.content::RenderProcessHostObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory.87" }
%"class.base::WeakPtrFactory.87" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.content::WebContentsObserver" = type { %"class.IPC::Listener", %"class.content::WebContents"* }
%"class.IPC::Listener" = type { i32 (...)** }
%"class.content::WebContents" = type <{ %"class.content::PageNavigator", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.content::PageNavigator" = type { i32 (...)** }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map.88", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map.88" = type { %"class.std::__1::__tree.89" }
%"class.std::__1::__tree.89" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.90", %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.headless::HeadlessBrowserContextImpl" = type opaque
%"class.content::RenderProcessHost" = type opaque
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.headless::HeadlessWebContentsImpl::Delegate"* }
%"class.headless::HeadlessWebContentsImpl::Delegate" = type opaque
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.headless::HeadlessWindowTreeHost"* }
%"class.headless::HeadlessWindowTreeHost" = type { %"class.aura::WindowTreeHost", %"class.ui::PlatformEventDispatcher", %"class.gfx::Rect", %"class.std::__1::unique_ptr.242", %"class.std::__1::unique_ptr.248" }
%"class.aura::WindowTreeHost" = type { %"class.ui::internal::InputMethodDelegate", %"class.ui::EventSource", %"class.display::DisplayObserver", %"class.ui::CompositorObserver", %"class.aura::Window"*, i32, [4 x i8], %"class.base::ObserverList.215", %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.225", float, %"class.ui::Cursor", %"class.gfx::Point", %"class.std::__1::unique_ptr.235", %"class.ui::InputMethod"*, i8, i8, i8, %"class.base::WeakPtrFactory.241" }
%"class.ui::internal::InputMethodDelegate" = type { i32 (...)** }
%"class.ui::EventSource" = type { i32 (...)**, %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.108" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.display::DisplayObserver" = type { %"class.base::CheckedObserver" }
%"class.ui::CompositorObserver" = type { i32 (...)** }
%"class.aura::Window" = type { %"class.ui::LayerDelegate", %"class.ui::LayerOwner", %"class.ui::EventTarget", %"class.ui::GestureConsumer", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", %"class.viz::HostFrameSinkClient", %"class.gfx::Rect", %"class.aura::WindowTreeHost"*, i32, i8, i8, %"class.aura::WindowDelegate"*, %"class.aura::Window"*, %"class.std::__1::vector.178", i8, i32, %class.SkRegion, i32, i8, i8, %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.191", %"class.std::__1::vector.197", i32, i32, i32, [4 x i8], %"class.base::ObserverList.204", i32, %"class.viz::SubtreeCaptureId", float, %"class.viz::FrameSinkId", i8, i8, i8, %"class.std::__1::unique_ptr.208", %"class.base::WeakPtr.214" }
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr.112", %"class.ui::Layer"*, %"class.base::ObserverList.118" }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type opaque
%"class.base::ObserverList.118" = type <{ %"class.std::__1::vector.119", %"class.base::LinkedList.126", i64, i32, [4 x i8] }>
%"class.std::__1::vector.119" = type { %"class.std::__1::__vector_base.120" }
%"class.std::__1::__vector_base.120" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.121" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList.126" = type { %"class.base::LinkNode.127" }
%"class.base::LinkNode.127" = type { %"class.base::internal::LinkNodeBase" }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.129", %"class.std::__1::vector.148", %"class.ui::EventHandler"* }
%"class.std::__1::vector.129" = type { %"class.std::__1::__vector_base.130" }
%"class.std::__1::__vector_base.130" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.155" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.148" = type { %"class.std::__1::__vector_base.149" }
%"class.std::__1::__vector_base.149" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type { i32 (...)**, %"class.ui::EventDispatcherDelegate"*, %"class.ui::Event"*, %"class.std::__1::vector.148" }
%"class.ui::EventDispatcherDelegate" = type { i32 (...)**, %"class.ui::EventDispatcher"* }
%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr.141" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map.131", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map.131" = type { %"class.base::internal::flat_tree.132" }
%"class.base::internal::flat_tree.132" = type { %"class.std::__1::vector.133" }
%"class.std::__1::vector.133" = type { %"class.std::__1::__vector_base.134" }
%"class.std::__1::__vector_base.134" = type { %"struct.std::__1::pair.135"*, %"struct.std::__1::pair.135"*, %"class.std::__1::__compressed_pair.136" }
%"struct.std::__1::pair.135" = type opaque
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"struct.std::__1::pair.135"* }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.base::flat_map.144"* }
%"class.base::flat_map.144" = type opaque
%"class.ui::GestureConsumer" = type { i32 (...)** }
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map.160" }
%"class.std::__1::map.160" = type { %"class.std::__1::__tree.161" }
%"class.std::__1::__tree.161" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.162", %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.169" }
%"class.std::__1::map.169" = type { %"class.std::__1::__tree.170" }
%"class.std::__1::__tree.170" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.171", %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.viz::HostFrameSinkClient" = type { i32 (...)** }
%"class.aura::WindowDelegate" = type opaque
%"class.std::__1::vector.178" = type { %"class.std::__1::__vector_base.179" }
%"class.std::__1::__vector_base.179" = type { %"class.aura::Window"**, %"class.aura::Window"**, %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.aura::Window"** }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.aura::LayoutManager"* }
%"class.aura::LayoutManager" = type opaque
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.aura::WindowTargeter"* }
%"class.aura::WindowTargeter" = type opaque
%"class.std::__1::vector.197" = type { %"class.std::__1::__vector_base.198" }
%"class.std::__1::__vector_base.198" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.gfx::Rect"* }
%"class.base::ObserverList.204" = type <{ %"class.std::__1::vector.59", %"class.base::LinkedList.205", i64, i32, [4 x i8] }>
%"class.base::LinkedList.205" = type { %"class.base::LinkNode.206" }
%"class.base::LinkNode.206" = type { %"class.base::internal::LinkNodeBase" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.viz::ParentLocalSurfaceIdAllocator"* }
%"class.viz::ParentLocalSurfaceIdAllocator" = type opaque
%"class.base::WeakPtr.214" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::ObserverList.215" = type <{ %"class.std::__1::vector.119", %"class.base::LinkedList.216", i64, i32, [4 x i8] }>
%"class.base::LinkedList.216" = type { %"class.base::LinkNode.217" }
%"class.base::LinkNode.217" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.aura::WindowEventDispatcher"* }
%"class.aura::WindowEventDispatcher" = type opaque
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.ui::Compositor"* }
%"class.ui::Compositor" = type opaque
%"class.ui::Cursor" = type { i32, %class.scoped_refptr.231, float, %"class.gfx::Point", %class.SkBitmap }
%class.scoped_refptr.231 = type { %"class.ui::PlatformCursor"* }
%"class.ui::PlatformCursor" = type <{ i32 (...)**, %"class.base::RefCounted.232", [4 x i8] }>
%"class.base::RefCounted.232" = type { %"class.base::subtle::RefCountedBase" }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.234 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.233, i32, i32 }
%class.sk_sp.233 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.41" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.234 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.ui::ViewProp"* }
%"class.ui::ViewProp" = type opaque
%"class.ui::InputMethod" = type opaque
%"class.base::WeakPtrFactory.241" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.ui::PlatformEventDispatcher" = type { i32 (...)** }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.aura::client::FocusClient"* }
%"class.aura::client::FocusClient" = type opaque
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.aura::client::WindowParentingClient"* }
%"class.aura::client::WindowParentingClient" = type opaque
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.content::WebContents"* }
%"class.base::ObserverList.263" = type <{ %"class.std::__1::vector.119", %"class.base::LinkedList.264", i64, i32, [4 x i8] }>
%"class.base::LinkedList.264" = type { %"class.base::LinkNode.265" }
%"class.base::LinkNode.265" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::WeakPtr.267" = type { %"class.base::internal::WeakPtrBase" }
%"class.content::RenderWidgetHostView" = type { i32 (...)** }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless19HeadlessBrowserImpl18PlatformInitializeEv(%"class.headless::HeadlessBrowserImpl"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.headless::HeadlessBrowserImpl", %"class.headless::HeadlessBrowserImpl"* %0, i64 0, i32 3, i32 17
  %3 = tail call %"class.headless::HeadlessScreen"* @_ZN8headless14HeadlessScreen6CreateERKN3gfx4SizeE(%"class.gfx::Size"* dereferenceable(8) %2) #5
  %4 = getelementptr inbounds %"class.headless::HeadlessScreen", %"class.headless::HeadlessScreen"* %3, i64 0, i32 0, i32 0
  %5 = tail call %"class.display::Screen"* @_ZN7display6Screen17SetScreenInstanceEPS0_(%"class.display::Screen"* %4) #5
  %6 = tail call i8* @_Znwm(i64 40) #6
  %7 = bitcast i8* %6 to %"class.headless::HeadlessClipboard"*
  tail call void @_ZN8headless17HeadlessClipboardC1Ev(%"class.headless::HeadlessClipboard"* nonnull %7) #5
  %8 = bitcast i8* %6 to %"class.ui::Clipboard"*
  tail call void @_ZN2ui9Clipboard28SetClipboardForCurrentThreadENSt3__110unique_ptrIS0_NS1_14default_deleteIS0_EEEE(%"class.ui::Clipboard"* nonnull %8) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.headless::HeadlessScreen"* @_ZN8headless14HeadlessScreen6CreateERKN3gfx4SizeE(%"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.display::Screen"* @_ZN7display6Screen17SetScreenInstanceEPS0_(%"class.display::Screen"*) local_unnamed_addr #2

declare void @_ZN2ui9Clipboard28SetClipboardForCurrentThreadENSt3__110unique_ptrIS0_NS1_14default_deleteIS0_EEEE(%"class.ui::Clipboard"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless19HeadlessBrowserImpl13PlatformStartEv(%"class.headless::HeadlessBrowserImpl"* nocapture readnone) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2ui17DeviceDataManager14CreateInstanceEv() #5
  ret void
}

declare void @_ZN2ui17DeviceDataManager14CreateInstanceEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless19HeadlessBrowserImpl29PlatformInitializeWebContentsEPNS_23HeadlessWebContentsImplE(%"class.headless::HeadlessBrowserImpl"* nocapture readnone, %"class.headless::HeadlessWebContentsImpl"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.headless::HeadlessWebContentsImpl", %"class.headless::HeadlessWebContentsImpl"* %1, i64 0, i32 6
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp ne i8 %4, 0
  %6 = tail call i8* @_Znwm(i64 344) #6
  %7 = bitcast i8* %6 to %"class.headless::HeadlessWindowTreeHost"*
  tail call void @_ZN8headless22HeadlessWindowTreeHostC1Eb(%"class.headless::HeadlessWindowTreeHost"* nonnull %7, i1 zeroext %5) #5
  %8 = ptrtoint i8* %6 to i64
  %9 = bitcast i8* %6 to %"class.aura::WindowTreeHost"*
  tail call void @_ZN4aura14WindowTreeHost8InitHostEv(%"class.aura::WindowTreeHost"* nonnull %9) #5
  %10 = getelementptr inbounds i8, i8* %6, i64 72
  %11 = bitcast i8* %10 to %"class.aura::Window"**
  %12 = load %"class.aura::Window"*, %"class.aura::Window"** %11, align 8
  tail call void @_ZN4aura6Window4ShowEv(%"class.aura::Window"* %12) #5
  tail call void @_ZN8headless22HeadlessWindowTreeHost15SetParentWindowEPN4aura6WindowE(%"class.headless::HeadlessWindowTreeHost"* nonnull %7, %"class.aura::Window"* %12) #5
  %13 = getelementptr inbounds %"class.headless::HeadlessWebContentsImpl", %"class.headless::HeadlessWebContentsImpl"* %1, i64 0, i32 10
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.105"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.headless::HeadlessWindowTreeHost"*, %"class.headless::HeadlessWindowTreeHost"** %14, align 8
  %16 = bitcast %"class.std::__1::unique_ptr.105"* %13 to i64*
  store i64 %8, i64* %16, align 8
  %17 = icmp eq %"class.headless::HeadlessWindowTreeHost"* %15, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %2
  %19 = bitcast %"class.headless::HeadlessWindowTreeHost"* %15 to void (%"class.headless::HeadlessWindowTreeHost"*)***
  %20 = load void (%"class.headless::HeadlessWindowTreeHost"*)**, void (%"class.headless::HeadlessWindowTreeHost"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.headless::HeadlessWindowTreeHost"*)*, void (%"class.headless::HeadlessWindowTreeHost"*)** %20, i64 1
  %22 = load void (%"class.headless::HeadlessWindowTreeHost"*)*, void (%"class.headless::HeadlessWindowTreeHost"*)** %21, align 8
  tail call void %22(%"class.headless::HeadlessWindowTreeHost"* nonnull %15) #5
  br label %23

23:                                               ; preds = %18, %2
  %24 = tail call %"class.content::WebContents"* @_ZNK8headless23HeadlessWebContentsImpl12web_contentsEv(%"class.headless::HeadlessWebContentsImpl"* %1) #5
  %25 = bitcast %"class.content::WebContents"* %24 to %"class.aura::Window"* (%"class.content::WebContents"*)***
  %26 = load %"class.aura::Window"* (%"class.content::WebContents"*)**, %"class.aura::Window"* (%"class.content::WebContents"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.aura::Window"* (%"class.content::WebContents"*)*, %"class.aura::Window"* (%"class.content::WebContents"*)** %26, i64 111
  %28 = load %"class.aura::Window"* (%"class.content::WebContents"*)*, %"class.aura::Window"* (%"class.content::WebContents"*)** %27, align 8
  %29 = tail call %"class.aura::Window"* %28(%"class.content::WebContents"* %24) #5
  tail call void @_ZN4aura6Window8AddChildEPS0_(%"class.aura::Window"* %12, %"class.aura::Window"* %29) #5
  tail call void @_ZN4aura6Window4ShowEv(%"class.aura::Window"* %29) #5
  ret void
}

declare void @_ZN4aura14WindowTreeHost8InitHostEv(%"class.aura::WindowTreeHost"*) local_unnamed_addr #2

declare void @_ZN4aura6Window4ShowEv(%"class.aura::Window"*) local_unnamed_addr #2

declare void @_ZN8headless22HeadlessWindowTreeHost15SetParentWindowEPN4aura6WindowE(%"class.headless::HeadlessWindowTreeHost"*, %"class.aura::Window"*) local_unnamed_addr #2

declare %"class.content::WebContents"* @_ZNK8headless23HeadlessWebContentsImpl12web_contentsEv(%"class.headless::HeadlessWebContentsImpl"*) local_unnamed_addr #2

declare void @_ZN4aura6Window8AddChildEPS0_(%"class.aura::Window"*, %"class.aura::Window"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless19HeadlessBrowserImpl28PlatformSetWebContentsBoundsEPNS_23HeadlessWebContentsImplERKN3gfx4RectE(%"class.headless::HeadlessBrowserImpl"* nocapture readnone, %"class.headless::HeadlessWebContentsImpl"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.gfx::Rect", align 4
  %5 = getelementptr inbounds %"class.headless::HeadlessWebContentsImpl", %"class.headless::HeadlessWebContentsImpl"* %1, i64 0, i32 10, i32 0, i32 0, i32 0
  %6 = load %"class.headless::HeadlessWindowTreeHost"*, %"class.headless::HeadlessWindowTreeHost"** %5, align 8
  %7 = bitcast %"class.headless::HeadlessWindowTreeHost"* %6 to { i64, i64 } (%"class.headless::HeadlessWindowTreeHost"*)***
  %8 = load { i64, i64 } (%"class.headless::HeadlessWindowTreeHost"*)**, { i64, i64 } (%"class.headless::HeadlessWindowTreeHost"*)*** %7, align 8
  %9 = getelementptr inbounds { i64, i64 } (%"class.headless::HeadlessWindowTreeHost"*)*, { i64, i64 } (%"class.headless::HeadlessWindowTreeHost"*)** %8, i64 15
  %10 = load { i64, i64 } (%"class.headless::HeadlessWindowTreeHost"*)*, { i64, i64 } (%"class.headless::HeadlessWindowTreeHost"*)** %9, align 8
  %11 = tail call { i64, i64 } %10(%"class.headless::HeadlessWindowTreeHost"* %6) #5
  %12 = extractvalue { i64, i64 } %11, 1
  %13 = bitcast %"class.gfx::Rect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #5
  %14 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 1
  %18 = trunc i64 %12 to i32
  %19 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = add nsw i32 %22, %20
  %24 = icmp sgt i32 %23, %18
  %25 = select i1 %24, i32 %23, i32 %18
  %26 = lshr i64 %12, 32
  %27 = trunc i64 %26 to i32
  %28 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = add nsw i32 %31, %29
  %33 = icmp sgt i32 %32, %27
  %34 = select i1 %33, i32 %32, i32 %27
  store i32 0, i32* %14, align 4
  store i32 0, i32* %15, align 4
  %35 = icmp sgt i32 %25, 0
  %36 = select i1 %35, i32 %25, i32 0
  store i32 %36, i32* %16, align 4
  %37 = icmp sgt i32 %34, 0
  %38 = select i1 %37, i32 %34, i32 0
  store i32 %38, i32* %17, align 4
  %39 = load %"class.headless::HeadlessWindowTreeHost"*, %"class.headless::HeadlessWindowTreeHost"** %5, align 8
  %40 = bitcast %"class.headless::HeadlessWindowTreeHost"* %39 to void (%"class.headless::HeadlessWindowTreeHost"*, %"class.gfx::Rect"*)***
  %41 = load void (%"class.headless::HeadlessWindowTreeHost"*, %"class.gfx::Rect"*)**, void (%"class.headless::HeadlessWindowTreeHost"*, %"class.gfx::Rect"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.headless::HeadlessWindowTreeHost"*, %"class.gfx::Rect"*)*, void (%"class.headless::HeadlessWindowTreeHost"*, %"class.gfx::Rect"*)** %41, i64 14
  %43 = load void (%"class.headless::HeadlessWindowTreeHost"*, %"class.gfx::Rect"*)*, void (%"class.headless::HeadlessWindowTreeHost"*, %"class.gfx::Rect"*)** %42, align 8
  call void %43(%"class.headless::HeadlessWindowTreeHost"* %39, %"class.gfx::Rect"* nonnull dereferenceable(16) %4) #5
  %44 = load %"class.headless::HeadlessWindowTreeHost"*, %"class.headless::HeadlessWindowTreeHost"** %5, align 8
  %45 = getelementptr inbounds %"class.headless::HeadlessWindowTreeHost", %"class.headless::HeadlessWindowTreeHost"* %44, i64 0, i32 0, i32 4
  %46 = load %"class.aura::Window"*, %"class.aura::Window"** %45, align 8
  call void @_ZN4aura6Window9SetBoundsERKN3gfx4RectE(%"class.aura::Window"* %46, %"class.gfx::Rect"* nonnull dereferenceable(16) %4) #5
  %47 = call %"class.content::WebContents"* @_ZNK8headless23HeadlessWebContentsImpl12web_contentsEv(%"class.headless::HeadlessWebContentsImpl"* %1) #5
  %48 = bitcast %"class.content::WebContents"* %47 to %"class.aura::Window"* (%"class.content::WebContents"*)***
  %49 = load %"class.aura::Window"* (%"class.content::WebContents"*)**, %"class.aura::Window"* (%"class.content::WebContents"*)*** %48, align 8
  %50 = getelementptr inbounds %"class.aura::Window"* (%"class.content::WebContents"*)*, %"class.aura::Window"* (%"class.content::WebContents"*)** %49, i64 111
  %51 = load %"class.aura::Window"* (%"class.content::WebContents"*)*, %"class.aura::Window"* (%"class.content::WebContents"*)** %50, align 8
  %52 = call %"class.aura::Window"* %51(%"class.content::WebContents"* %47) #5
  call void @_ZN4aura6Window9SetBoundsERKN3gfx4RectE(%"class.aura::Window"* %52, %"class.gfx::Rect"* dereferenceable(16) %2) #5
  %53 = call %"class.content::WebContents"* @_ZNK8headless23HeadlessWebContentsImpl12web_contentsEv(%"class.headless::HeadlessWebContentsImpl"* %1) #5
  %54 = bitcast %"class.content::WebContents"* %53 to %"class.content::RenderWidgetHostView"* (%"class.content::WebContents"*)***
  %55 = load %"class.content::RenderWidgetHostView"* (%"class.content::WebContents"*)**, %"class.content::RenderWidgetHostView"* (%"class.content::WebContents"*)*** %54, align 8
  %56 = getelementptr inbounds %"class.content::RenderWidgetHostView"* (%"class.content::WebContents"*)*, %"class.content::RenderWidgetHostView"* (%"class.content::WebContents"*)** %55, i64 20
  %57 = load %"class.content::RenderWidgetHostView"* (%"class.content::WebContents"*)*, %"class.content::RenderWidgetHostView"* (%"class.content::WebContents"*)** %56, align 8
  %58 = call %"class.content::RenderWidgetHostView"* %57(%"class.content::WebContents"* %53) #5
  %59 = icmp eq %"class.content::RenderWidgetHostView"* %58, null
  br i1 %59, label %66, label %60

60:                                               ; preds = %3
  %61 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1
  %62 = bitcast %"class.content::RenderWidgetHostView"* %58 to void (%"class.content::RenderWidgetHostView"*, %"class.gfx::Size"*)***
  %63 = load void (%"class.content::RenderWidgetHostView"*, %"class.gfx::Size"*)**, void (%"class.content::RenderWidgetHostView"*, %"class.gfx::Size"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.content::RenderWidgetHostView"*, %"class.gfx::Size"*)*, void (%"class.content::RenderWidgetHostView"*, %"class.gfx::Size"*)** %63, i64 4
  %65 = load void (%"class.content::RenderWidgetHostView"*, %"class.gfx::Size"*)*, void (%"class.content::RenderWidgetHostView"*, %"class.gfx::Size"*)** %64, align 8
  call void %65(%"class.content::RenderWidgetHostView"* nonnull %58, %"class.gfx::Size"* dereferenceable(8) %61) #5
  br label %66

66:                                               ; preds = %3, %60
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #5
  ret void
}

declare void @_ZN4aura6Window9SetBoundsERKN3gfx4RectE(%"class.aura::Window"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.ui::Compositor"* @_ZN8headless19HeadlessBrowserImpl21PlatformGetCompositorEPNS_23HeadlessWebContentsImplE(%"class.headless::HeadlessBrowserImpl"* nocapture readnone, %"class.headless::HeadlessWebContentsImpl"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.headless::HeadlessWebContentsImpl", %"class.headless::HeadlessWebContentsImpl"* %1, i64 0, i32 10, i32 0, i32 0, i32 0
  %4 = load %"class.headless::HeadlessWindowTreeHost"*, %"class.headless::HeadlessWindowTreeHost"** %3, align 8
  %5 = getelementptr inbounds %"class.headless::HeadlessWindowTreeHost", %"class.headless::HeadlessWindowTreeHost"* %4, i64 0, i32 0, i32 9, i32 0, i32 0, i32 0
  %6 = load %"class.ui::Compositor"*, %"class.ui::Compositor"** %5, align 8
  ret %"class.ui::Compositor"* %6
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN8headless17HeadlessClipboardC1Ev(%"class.headless::HeadlessClipboard"*) unnamed_addr #2

declare void @_ZN8headless22HeadlessWindowTreeHostC1Eb(%"class.headless::HeadlessWindowTreeHost"*, i1 zeroext) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
