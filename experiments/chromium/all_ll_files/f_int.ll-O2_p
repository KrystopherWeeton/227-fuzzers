; ModuleID = '../../third_party/boringssl/src/crypto/asn1/f_int.c'
source_filename = "../../third_party/boringssl/src/crypto/asn1/f_int.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.bio_st = type { %struct.bio_method_st*, i32, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, i64, i64 }
%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }
%struct.asn1_string_st = type { i32, i32, i8*, i64 }

@.str = private unnamed_addr constant [17 x i8] c"0123456789ABCDEF\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"00\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"\5C\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2a_ASN1_INTEGER(%struct.bio_st*, %struct.asn1_string_st* readonly) local_unnamed_addr #0 {
  %3 = alloca [2 x i8], align 1
  %4 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %4) #3
  store i8 -86, i8* %4, align 1
  %5 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 1
  store i8 -86, i8* %5, align 1
  %6 = icmp eq %struct.asn1_string_st* %1, null
  br i1 %6, label %64, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %7
  %13 = tail call i32 @BIO_write(%struct.bio_st* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i32 1) #3
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %64

15:                                               ; preds = %12, %7
  %16 = phi i32 [ 0, %7 ], [ 1, %12 ]
  %17 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %1, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %15
  %21 = icmp sgt i32 %18, 0
  br i1 %21, label %22, label %64

22:                                               ; preds = %20
  %23 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %1, i64 0, i32 2
  br label %29

24:                                               ; preds = %15
  %25 = tail call i32 @BIO_write(%struct.bio_st* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i32 2) #3
  %26 = icmp eq i32 %25, 2
  %27 = or i32 %16, 2
  %28 = select i1 %26, i32 %27, i32 -1
  br label %64

29:                                               ; preds = %22, %58
  %30 = phi i64 [ 0, %22 ], [ %60, %58 ]
  %31 = phi i32 [ %16, %22 ], [ %59, %58 ]
  %32 = icmp ne i64 %30, 0
  %33 = trunc i64 %30 to i32
  %34 = urem i32 %33, 35
  %35 = icmp eq i32 %34, 0
  %36 = and i1 %32, %35
  br i1 %36, label %37, label %42

37:                                               ; preds = %29
  %38 = call i32 @BIO_write(%struct.bio_st* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32 2) #3
  %39 = icmp eq i32 %38, 2
  br i1 %39, label %40, label %64

40:                                               ; preds = %37
  %41 = add nsw i32 %31, 2
  br label %42

42:                                               ; preds = %29, %40
  %43 = phi i32 [ %41, %40 ], [ %31, %29 ]
  %44 = load i8*, i8** %23, align 8
  %45 = getelementptr inbounds i8, i8* %44, i64 %30
  %46 = load i8, i8* %45, align 1
  %47 = lshr i8 %46, 4
  %48 = zext i8 %47 to i64
  %49 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %48
  %50 = load i8, i8* %49, align 1
  store i8 %50, i8* %4, align 1
  %51 = load i8, i8* %45, align 1
  %52 = and i8 %51, 15
  %53 = zext i8 %52 to i64
  %54 = getelementptr inbounds [17 x i8], [17 x i8]* @.str, i64 0, i64 %53
  %55 = load i8, i8* %54, align 1
  store i8 %55, i8* %5, align 1
  %56 = call i32 @BIO_write(%struct.bio_st* %0, i8* nonnull %4, i32 2) #3
  %57 = icmp eq i32 %56, 2
  br i1 %57, label %58, label %64

58:                                               ; preds = %42
  %59 = add nsw i32 %43, 2
  %60 = add nuw nsw i64 %30, 1
  %61 = load i32, i32* %17, align 8
  %62 = sext i32 %61 to i64
  %63 = icmp slt i64 %60, %62
  br i1 %63, label %29, label %64

64:                                               ; preds = %58, %37, %42, %20, %24, %12, %2
  %65 = phi i32 [ 0, %2 ], [ -1, %12 ], [ %28, %24 ], [ %16, %20 ], [ %59, %58 ], [ -1, %37 ], [ -1, %42 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %4) #3
  ret i32 %65
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @BIO_write(%struct.bio_st*, i8*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
