; ModuleID = '../../third_party/blink/renderer/platform/audio/reverb_convolver.cc'
source_filename = "../../third_party/blink/renderer/platform/audio/reverb_convolver.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::ReverbConvolver" = type { %"class.WTF::Vector", %"class.WTF::Vector", i64, %"class.blink::ReverbAccumulationBuffer", %"class.blink::ReverbInputBuffer", i64, i64, i64, %"class.std::__1::unique_ptr.26" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ReverbConvolverStage"* }
%"class.blink::ReverbConvolverStage" = type { %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.4", %"class.blink::AudioArray", %"class.blink::ReverbAccumulationBuffer"*, i32, i32, i64, i64, i64, i64, %"class.blink::AudioArray", i8, %"class.std::__1::unique_ptr.10" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.blink::FFTFrame"* }
%"class.blink::FFTFrame" = type { i32, i32, %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray" }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::FFTConvolver"* }
%"class.blink::FFTConvolver" = type { %"class.blink::FFTFrame", i64, %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray" }
%"class.blink::AudioArray" = type <{ float*, float*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.blink::DirectConvolver"* }
%"class.blink::DirectConvolver" = type { i64, %"class.blink::AudioArray", %"class.std::__1::unique_ptr.13", %"class.blink::AudioArray" }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::AudioArray"* }
%"class.blink::ReverbAccumulationBuffer" = type { %"class.blink::AudioArray", i64, i64 }
%"class.blink::ReverbInputBuffer" = type { %"class.blink::AudioArray", %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::Thread"* }
%"class.blink::Thread" = type { i32 (...)** }
%"class.blink::AudioChannel" = type <{ i64, float*, %"class.std::__1::unique_ptr.13", i8, [7 x i8] }>
%"struct.blink::ThreadCreationParams" = type <{ i32, [4 x i8], i8*, %"class.blink::FrameOrWorkerScheduler"*, i32, i8, [3 x i8] }>
%"class.blink::FrameOrWorkerScheduler" = type opaque
%"class.blink::Platform" = type { i32 (...)** }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.37", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.37" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.32" }
%"struct.std::__1::atomic.32" = type { %"struct.std::__1::__atomic_base.33" }
%"struct.std::__1::__atomic_base.33" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__cxx_atomic_impl.35" }
%"struct.std::__1::__cxx_atomic_impl.35" = type { %"struct.std::__1::__cxx_atomic_base_impl.36" }
%"struct.std::__1::__cxx_atomic_base_impl.36" = type { i32 }
%"class.WTF::CrossThreadOnceFunction" = type { %"class.base::OnceCallback" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink15ReverbConvolverEFvvEJN3WTF28CrossThreadUnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink15ReverbConvolverEFvvEJN3WTF28CrossThreadUnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN5blink20ReverbConvolverStageD2Ev = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink20ReverbConvolverStageENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink20ReverbConvolverStageENS2_14default_deleteIS5_EEEEEEmm = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink20ReverbConvolverStageENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

@.str = private unnamed_addr constant [8 x i8] c"Process\00", align 1
@.str.1 = private unnamed_addr constant [68 x i8] c"../../third_party/blink/renderer/platform/audio/reverb_convolver.cc\00", align 1
@.str.2 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink20ReverbConvolverStageENS1_14default_deleteIS4_EEEEEEPKcv = private unnamed_addr constant [153 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::ReverbConvolverStage, std::__1::default_delete<blink::ReverbConvolverStage> >]\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1

@_ZN5blink15ReverbConvolverC1EPNS_12AudioChannelEmmmbf = hidden unnamed_addr alias void (%"class.blink::ReverbConvolver"*, %"class.blink::AudioChannel"*, i64, i64, i64, i1, float), void (%"class.blink::ReverbConvolver"*, %"class.blink::AudioChannel"*, i64, i64, i64, i1, float)* @_ZN5blink15ReverbConvolverC2EPNS_12AudioChannelEmmmbf
@_ZN5blink15ReverbConvolverD1Ev = hidden unnamed_addr alias void (%"class.blink::ReverbConvolver"*), void (%"class.blink::ReverbConvolver"*)* @_ZN5blink15ReverbConvolverD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15ReverbConvolverC2EPNS_12AudioChannelEmmmbf(%"class.blink::ReverbConvolver"*, %"class.blink::AudioChannel"* nocapture readonly, i64, i64, i64, i1 zeroext, float) unnamed_addr #0 align 2 {
  %8 = alloca %"class.std::__1::unique_ptr", align 8
  %9 = alloca %"struct.blink::ThreadCreationParams", align 8
  %10 = getelementptr inbounds %"class.blink::ReverbConvolver", %"class.blink::ReverbConvolver"* %0, i64 0, i32 0
  %11 = getelementptr inbounds %"class.blink::ReverbConvolver", %"class.blink::ReverbConvolver"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.blink::ReverbConvolver", %"class.blink::ReverbConvolver"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %1, i64 0, i32 0
  %14 = bitcast %"class.blink::ReverbConvolver"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 32, i1 false)
  %15 = load i64, i64* %13, align 8
  store i64 %15, i64* %12, align 8
  %16 = getelementptr inbounds %"class.blink::ReverbConvolver", %"class.blink::ReverbConvolver"* %0, i64 0, i32 3
  %17 = load i64, i64* %13, align 8
  %18 = add i64 %17, %2
  tail call void @_ZN5blink24ReverbAccumulationBufferC1Em(%"class.blink::ReverbAccumulationBuffer"* %16, i64 %18) #10
  %19 = getelementptr inbounds %"class.blink::ReverbConvolver", %"class.blink::ReverbConvolver"* %0, i64 0, i32 4
  tail call void @_ZN5blink17ReverbInputBufferC1Em(%"class.blink::ReverbInputBuffer"* %19, i64 131072) #10
  %20 = getelementptr inbounds %"class.blink::ReverbConvolver", %"class.blink::ReverbConvolver"* %0, i64 0, i32 5
  store i64 128, i64* %20, align 8
  %21 = getelementptr inbounds %"class.blink::ReverbConvolver", %"class.blink::ReverbConvolver"* %0, i64 0, i32 6
  store i64 %3, i64* %21, align 8
  %22 = getelementptr inbounds %"class.blink::ReverbConvolver", %"class.blink::ReverbConvolver"* %0, i64 0, i32 8
  %23 = bitcast %"class.std::__1::unique_ptr.26"* %22 to i64*
  %24 = getelementptr inbounds %"class.blink::ReverbConvolver", %"class.blink::ReverbConvolver"* %0, i64 0, i32 7
  %25 = bitcast i64* %24 to <2 x i64>*
  store <2 x i64> <i64 2048, i64 0>, <2 x i64>* %25, align 8
  %26 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %1, i64 0, i32 1
  %27 = load float*, float** %26, align 8
  %28 = icmp eq float* %27, null
  br i1 %28, label %29, label %34

29:                                               ; preds = %7
  %30 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %31 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %31, i64 0, i32 1
  %33 = load float*, float** %32, align 8
  br label %34

34:                                               ; preds = %7, %29
  %35 = phi float* [ %33, %29 ], [ %27, %7 ]
  %36 = load i64, i64* %13, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %120, label %38

38:                                               ; preds = %34
  %39 = bitcast %"class.std::__1::unique_ptr"* %8 to i8*
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %8 to i8**
  %42 = getelementptr inbounds %"class.blink::ReverbConvolver", %"class.blink::ReverbConvolver"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %43 = getelementptr inbounds %"class.blink::ReverbConvolver", %"class.blink::ReverbConvolver"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %44 = getelementptr inbounds %"class.blink::ReverbConvolver", %"class.blink::ReverbConvolver"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.blink::ReverbConvolver", %"class.blink::ReverbConvolver"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %46 = getelementptr inbounds %"class.blink::ReverbConvolver", %"class.blink::ReverbConvolver"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %47 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %11, i64 0, i32 0, i32 0, i32 0
  br label %48

48:                                               ; preds = %38, %118
  %49 = phi i64 [ 0, %38 ], [ %108, %118 ]
  %50 = phi i64 [ 128, %38 ], [ %113, %118 ]
  %51 = phi i64 [ 0, %38 ], [ %109, %118 ]
  %52 = lshr i64 %50, 1
  %53 = add i64 %52, %51
  %54 = icmp ugt i64 %53, %36
  %55 = sub i64 %36, %51
  %56 = select i1 %54, i64 %55, i64 %52
  %57 = mul i64 %49, %2
  %58 = add i64 %57, %4
  %59 = icmp eq i64 %51, 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #10
  store %"class.blink::ReverbConvolverStage"* inttoptr (i64 -6148914691236517206 to %"class.blink::ReverbConvolverStage"*), %"class.blink::ReverbConvolverStage"** %40, align 8
  %60 = call noalias i8* @malloc(i64 128) #10
  %61 = bitcast i8* %60 to %"class.blink::ReverbConvolverStage"*
  %62 = shl i64 %58, 32
  %63 = ashr exact i64 %62, 32
  call void @_ZN5blink20ReverbConvolverStageC1EPKfmmmmmmmPNS_24ReverbAccumulationBufferEfb(%"class.blink::ReverbConvolverStage"* %61, float* %35, i64 %36, i64 0, i64 %51, i64 %56, i64 %50, i64 %63, i64 %2, %"class.blink::ReverbAccumulationBuffer"* %16, float %6, i1 zeroext %59) #10
  store i8* %60, i8** %41, align 8
  %64 = icmp ugt i64 %51, 12288
  %65 = and i1 %64, %5
  %66 = ptrtoint i8* %60 to i64
  br i1 %65, label %67, label %79

67:                                               ; preds = %48
  %68 = load i32, i32* %45, align 4
  %69 = load i32, i32* %46, align 8
  %70 = icmp eq i32 %68, %69
  br i1 %70, label %78, label %71, !prof !2

71:                                               ; preds = %67
  %72 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %47, align 8
  %73 = zext i32 %68 to i64
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %72, i64 %73
  store %"class.blink::ReverbConvolverStage"* null, %"class.blink::ReverbConvolverStage"** %40, align 8
  %75 = bitcast %"class.std::__1::unique_ptr"* %74 to i64*
  store i64 %66, i64* %75, align 8
  %76 = load i32, i32* %45, align 4
  %77 = add i32 %76, 1
  store i32 %77, i32* %45, align 4
  br label %91

78:                                               ; preds = %67
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink20ReverbConvolverStageENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector"* %11, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %8) #10
  br label %91

79:                                               ; preds = %48
  %80 = load i32, i32* %42, align 4
  %81 = load i32, i32* %43, align 8
  %82 = icmp eq i32 %80, %81
  br i1 %82, label %90, label %83, !prof !2

83:                                               ; preds = %79
  %84 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %44, align 8
  %85 = zext i32 %80 to i64
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %84, i64 %85
  store %"class.blink::ReverbConvolverStage"* null, %"class.blink::ReverbConvolverStage"** %40, align 8
  %87 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  store i64 %66, i64* %87, align 8
  %88 = load i32, i32* %42, align 4
  %89 = add i32 %88, 1
  store i32 %89, i32* %42, align 4
  br label %97

90:                                               ; preds = %79
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink20ReverbConvolverStageENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector"* %10, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %8) #10
  br label %97

91:                                               ; preds = %71, %78
  %92 = add i64 %56, %51
  %93 = add nuw i64 %49, 1
  %94 = xor i1 %59, true
  %95 = zext i1 %94 to i64
  %96 = shl i64 %50, %95
  br label %107

97:                                               ; preds = %90, %83
  %98 = add i64 %56, %51
  %99 = add nuw i64 %49, 1
  %100 = xor i1 %59, true
  %101 = zext i1 %100 to i64
  %102 = shl i64 %50, %101
  br i1 %5, label %103, label %107

103:                                              ; preds = %97
  %104 = load i64, i64* %24, align 8
  %105 = icmp ugt i64 %102, %104
  %106 = select i1 %105, i64 %104, i64 %102
  br label %107

107:                                              ; preds = %97, %91, %103
  %108 = phi i64 [ %99, %97 ], [ %99, %103 ], [ %93, %91 ]
  %109 = phi i64 [ %98, %97 ], [ %98, %103 ], [ %92, %91 ]
  %110 = phi i64 [ %102, %97 ], [ %106, %103 ], [ %96, %91 ]
  %111 = load i64, i64* %21, align 8
  %112 = icmp ugt i64 %110, %111
  %113 = select i1 %112, i64 %111, i64 %110
  %114 = load %"class.blink::ReverbConvolverStage"*, %"class.blink::ReverbConvolverStage"** %40, align 8
  store %"class.blink::ReverbConvolverStage"* null, %"class.blink::ReverbConvolverStage"** %40, align 8
  %115 = icmp eq %"class.blink::ReverbConvolverStage"* %114, null
  br i1 %115, label %118, label %116

116:                                              ; preds = %107
  call void @_ZN5blink20ReverbConvolverStageD2Ev(%"class.blink::ReverbConvolverStage"* nonnull %114) #10
  %117 = bitcast %"class.blink::ReverbConvolverStage"* %114 to i8*
  call void @free(i8* %117) #10
  br label %118

118:                                              ; preds = %107, %116
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  %119 = icmp ugt i64 %36, %109
  br i1 %119, label %48, label %120

120:                                              ; preds = %118, %34
  br i1 %5, label %121, label %139

121:                                              ; preds = %120
  %122 = getelementptr inbounds %"class.blink::ReverbConvolver", %"class.blink::ReverbConvolver"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %123 = load i32, i32* %122, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %139, label %125

125:                                              ; preds = %121
  %126 = call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #10
  %127 = bitcast %"struct.blink::ThreadCreationParams"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %127) #10
  call void @_ZN5blink20ThreadCreationParamsC1ENS_10ThreadTypeE(%"struct.blink::ThreadCreationParams"* nonnull %9, i32 13) #10
  %128 = call %"class.blink::Thread"* @_ZN5blink8Platform12CreateThreadERKNS_20ThreadCreationParamsE(%"class.blink::Platform"* %126, %"struct.blink::ThreadCreationParams"* nonnull dereferenceable(32) %9) #10
  %129 = ptrtoint %"class.blink::Thread"* %128 to i64
  %130 = getelementptr inbounds %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.26"* %22, i64 0, i32 0, i32 0, i32 0
  %131 = load %"class.blink::Thread"*, %"class.blink::Thread"** %130, align 8
  store i64 %129, i64* %23, align 8
  %132 = icmp eq %"class.blink::Thread"* %131, null
  br i1 %132, label %138, label %133

133:                                              ; preds = %125
  %134 = bitcast %"class.blink::Thread"* %131 to void (%"class.blink::Thread"*)***
  %135 = load void (%"class.blink::Thread"*)**, void (%"class.blink::Thread"*)*** %134, align 8
  %136 = getelementptr inbounds void (%"class.blink::Thread"*)*, void (%"class.blink::Thread"*)** %135, i64 1
  %137 = load void (%"class.blink::Thread"*)*, void (%"class.blink::Thread"*)** %136, align 8
  call void %137(%"class.blink::Thread"* nonnull %131) #10
  br label %138

138:                                              ; preds = %133, %125
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %127) #10
  br label %139

139:                                              ; preds = %121, %138, %120
  ret void
}

declare void @_ZN5blink24ReverbAccumulationBufferC1Em(%"class.blink::ReverbAccumulationBuffer"*, i64) unnamed_addr #1

declare void @_ZN5blink17ReverbInputBufferC1Em(%"class.blink::ReverbInputBuffer"*, i64) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() local_unnamed_addr #1

declare %"class.blink::Thread"* @_ZN5blink8Platform12CreateThreadERKNS_20ThreadCreationParamsE(%"class.blink::Platform"*, %"struct.blink::ThreadCreationParams"* dereferenceable(32)) local_unnamed_addr #1

declare void @_ZN5blink20ThreadCreationParamsC1ENS_10ThreadTypeE(%"struct.blink::ThreadCreationParams"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15ReverbConvolverD2Ev(%"class.blink::ReverbConvolver"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ReverbConvolver", %"class.blink::ReverbConvolver"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Thread"*, %"class.blink::Thread"** %2, align 8
  store %"class.blink::Thread"* null, %"class.blink::Thread"** %2, align 8
  %4 = icmp eq %"class.blink::Thread"* %3, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  store %"class.blink::Thread"* null, %"class.blink::Thread"** %2, align 8
  br label %18

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::Thread"* %3 to void (%"class.blink::Thread"*)***
  %8 = load void (%"class.blink::Thread"*)**, void (%"class.blink::Thread"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Thread"*)*, void (%"class.blink::Thread"*)** %8, i64 1
  %10 = load void (%"class.blink::Thread"*)*, void (%"class.blink::Thread"*)** %9, align 8
  tail call void %10(%"class.blink::Thread"* nonnull %3) #10
  %11 = load %"class.blink::Thread"*, %"class.blink::Thread"** %2, align 8
  store %"class.blink::Thread"* null, %"class.blink::Thread"** %2, align 8
  %12 = icmp eq %"class.blink::Thread"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %6
  %14 = bitcast %"class.blink::Thread"* %11 to void (%"class.blink::Thread"*)***
  %15 = load void (%"class.blink::Thread"*)**, void (%"class.blink::Thread"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Thread"*)*, void (%"class.blink::Thread"*)** %15, i64 1
  %17 = load void (%"class.blink::Thread"*)*, void (%"class.blink::Thread"*)** %16, align 8
  tail call void %17(%"class.blink::Thread"* nonnull %11) #10
  br label %18

18:                                               ; preds = %5, %6, %13
  %19 = getelementptr inbounds %"class.blink::ReverbConvolver", %"class.blink::ReverbConvolver"* %0, i64 0, i32 4
  %20 = bitcast %"class.blink::ReverbInputBuffer"* %19 to i8**
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %21) #10
  %22 = getelementptr inbounds %"class.blink::ReverbConvolver", %"class.blink::ReverbConvolver"* %0, i64 0, i32 3
  %23 = bitcast %"class.blink::ReverbAccumulationBuffer"* %22 to i8**
  %24 = load i8*, i8** %23, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %24) #10
  %25 = getelementptr inbounds %"class.blink::ReverbConvolver", %"class.blink::ReverbConvolver"* %0, i64 0, i32 1
  %26 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %26, align 8
  %28 = icmp eq %"class.std::__1::unique_ptr"* %27, null
  br i1 %28, label %52, label %29, !prof !3

29:                                               ; preds = %18
  %30 = bitcast %"class.std::__1::unique_ptr"* %27 to i8*
  %31 = getelementptr inbounds %"class.blink::ReverbConvolver", %"class.blink::ReverbConvolver"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %50, label %34, !prof !2

34:                                               ; preds = %29
  %35 = zext i32 %32 to i64
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %27, i64 %35
  br label %37

37:                                               ; preds = %44, %34
  %38 = phi %"class.std::__1::unique_ptr"* [ %45, %44 ], [ %27, %34 ]
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::ReverbConvolverStage"*, %"class.blink::ReverbConvolverStage"** %39, align 8
  store %"class.blink::ReverbConvolverStage"* null, %"class.blink::ReverbConvolverStage"** %39, align 8
  %41 = icmp eq %"class.blink::ReverbConvolverStage"* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %37
  tail call void @_ZN5blink20ReverbConvolverStageD2Ev(%"class.blink::ReverbConvolverStage"* nonnull %40) #10
  %43 = bitcast %"class.blink::ReverbConvolverStage"* %40 to i8*
  tail call void @free(i8* %43) #10
  br label %44

44:                                               ; preds = %42, %37
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %38, i64 1
  %46 = icmp eq %"class.std::__1::unique_ptr"* %45, %36
  br i1 %46, label %47, label %37

47:                                               ; preds = %44
  store i32 0, i32* %31, align 4
  %48 = bitcast %"class.WTF::Vector"* %25 to i8**
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %47, %29
  %51 = phi i8* [ %49, %47 ], [ %30, %29 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %51) #10
  store %"class.std::__1::unique_ptr"* null, %"class.std::__1::unique_ptr"** %26, align 8
  br label %52

52:                                               ; preds = %18, %50
  %53 = getelementptr inbounds %"class.blink::ReverbConvolver", %"class.blink::ReverbConvolver"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %53, align 8
  %55 = icmp eq %"class.std::__1::unique_ptr"* %54, null
  br i1 %55, label %79, label %56, !prof !3

56:                                               ; preds = %52
  %57 = bitcast %"class.std::__1::unique_ptr"* %54 to i8*
  %58 = getelementptr inbounds %"class.blink::ReverbConvolver", %"class.blink::ReverbConvolver"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %77, label %61, !prof !2

61:                                               ; preds = %56
  %62 = zext i32 %59 to i64
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %54, i64 %62
  br label %64

64:                                               ; preds = %71, %61
  %65 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %54, %61 ]
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.blink::ReverbConvolverStage"*, %"class.blink::ReverbConvolverStage"** %66, align 8
  store %"class.blink::ReverbConvolverStage"* null, %"class.blink::ReverbConvolverStage"** %66, align 8
  %68 = icmp eq %"class.blink::ReverbConvolverStage"* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %64
  tail call void @_ZN5blink20ReverbConvolverStageD2Ev(%"class.blink::ReverbConvolverStage"* nonnull %67) #10
  %70 = bitcast %"class.blink::ReverbConvolverStage"* %67 to i8*
  tail call void @free(i8* %70) #10
  br label %71

71:                                               ; preds = %69, %64
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %65, i64 1
  %73 = icmp eq %"class.std::__1::unique_ptr"* %72, %63
  br i1 %73, label %74, label %64

74:                                               ; preds = %71
  store i32 0, i32* %58, align 4
  %75 = bitcast %"class.blink::ReverbConvolver"* %0 to i8**
  %76 = load i8*, i8** %75, align 8
  br label %77

77:                                               ; preds = %74, %56
  %78 = phi i8* [ %76, %74 ], [ %57, %56 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %78) #10
  store %"class.std::__1::unique_ptr"* null, %"class.std::__1::unique_ptr"** %53, align 8
  br label %79

79:                                               ; preds = %52, %77
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15ReverbConvolver19ProcessInBackgroundEv(%"class.blink::ReverbConvolver"*) #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ReverbConvolver", %"class.blink::ReverbConvolver"* %0, i64 0, i32 4, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i64, i64* %2 acquire, align 8
  %4 = trunc i64 %3 to i32
  %5 = getelementptr inbounds %"class.blink::ReverbConvolver", %"class.blink::ReverbConvolver"* %0, i64 0, i32 1
  %6 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink20ReverbConvolverStageENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %5, i32 0) #10
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::ReverbConvolverStage"*, %"class.blink::ReverbConvolverStage"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ReverbConvolverStage", %"class.blink::ReverbConvolverStage"* %8, i64 0, i32 5
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, %4
  br i1 %11, label %34, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::ReverbConvolver", %"class.blink::ReverbConvolver"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  br label %21

14:                                               ; preds = %24, %21
  %15 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink20ReverbConvolverStageENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %5, i32 0) #10
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::ReverbConvolverStage"*, %"class.blink::ReverbConvolverStage"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ReverbConvolverStage", %"class.blink::ReverbConvolverStage"* %17, i64 0, i32 5
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, %4
  br i1 %20, label %34, label %21

21:                                               ; preds = %12, %14
  %22 = load i32, i32* %13, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %14, label %24

24:                                               ; preds = %21, %24
  %25 = phi i64 [ %30, %24 ], [ 0, %21 ]
  %26 = trunc i64 %25 to i32
  %27 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink20ReverbConvolverStageENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %5, i32 %26) #10
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::ReverbConvolverStage"*, %"class.blink::ReverbConvolverStage"** %28, align 8
  tail call void @_ZN5blink20ReverbConvolverStage19ProcessInBackgroundEPNS_15ReverbConvolverEj(%"class.blink::ReverbConvolverStage"* %29, %"class.blink::ReverbConvolver"* %0, i32 64) #10
  %30 = add nuw nsw i64 %25, 1
  %31 = load i32, i32* %13, align 4
  %32 = zext i32 %31 to i64
  %33 = icmp ult i64 %30, %32
  br i1 %33, label %24, label %14

34:                                               ; preds = %14, %1
  ret void
}

declare void @_ZN5blink20ReverbConvolverStage19ProcessInBackgroundEPNS_15ReverbConvolverEj(%"class.blink::ReverbConvolverStage"*, %"class.blink::ReverbConvolver"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15ReverbConvolver7ProcessEPKNS_12AudioChannelEPS1_j(%"class.blink::ReverbConvolver"*, %"class.blink::AudioChannel"* nocapture readonly, %"class.blink::AudioChannel"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %9 = alloca %"class.base::Location", align 8
  %10 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %11 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %1, i64 0, i32 1
  %12 = load float*, float** %11, align 8
  %13 = icmp eq float* %12, null
  br i1 %13, label %14, label %19

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %16 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %16, i64 0, i32 1
  %18 = load float*, float** %17, align 8
  br label %19

19:                                               ; preds = %4, %14
  %20 = phi float* [ %18, %14 ], [ %12, %4 ]
  %21 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %2, i64 0, i32 3
  store i8 0, i8* %21, align 8
  %22 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %2, i64 0, i32 1
  %23 = load float*, float** %22, align 8
  %24 = icmp eq float* %23, null
  br i1 %24, label %25, label %30

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  %27 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %27, i64 0, i32 1
  %29 = load float*, float** %28, align 8
  br label %30

30:                                               ; preds = %19, %25
  %31 = phi float* [ %29, %25 ], [ %23, %19 ]
  %32 = getelementptr inbounds %"class.blink::ReverbConvolver", %"class.blink::ReverbConvolver"* %0, i64 0, i32 4
  %33 = zext i32 %3 to i64
  tail call void @_ZN5blink17ReverbInputBuffer5WriteEPKfm(%"class.blink::ReverbInputBuffer"* %32, float* %20, i64 %33) #10
  %34 = getelementptr inbounds %"class.blink::ReverbConvolver", %"class.blink::ReverbConvolver"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.blink::ReverbConvolver", %"class.blink::ReverbConvolver"* %0, i64 0, i32 0
  br label %44

39:                                               ; preds = %44, %30
  %40 = getelementptr inbounds %"class.blink::ReverbConvolver", %"class.blink::ReverbConvolver"* %0, i64 0, i32 3
  tail call void @_ZN5blink24ReverbAccumulationBuffer12ReadAndClearEPfm(%"class.blink::ReverbAccumulationBuffer"* %40, float* %31, i64 %33) #10
  %41 = getelementptr inbounds %"class.blink::ReverbConvolver", %"class.blink::ReverbConvolver"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %42 = load %"class.blink::Thread"*, %"class.blink::Thread"** %41, align 8
  %43 = icmp eq %"class.blink::Thread"* %42, null
  br i1 %43, label %97, label %54

44:                                               ; preds = %37, %44
  %45 = phi i64 [ 0, %37 ], [ %50, %44 ]
  %46 = trunc i64 %45 to i32
  %47 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink20ReverbConvolverStageENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %38, i32 %46) #10
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.blink::ReverbConvolverStage"*, %"class.blink::ReverbConvolverStage"** %48, align 8
  tail call void @_ZN5blink20ReverbConvolverStage7ProcessEPKfj(%"class.blink::ReverbConvolverStage"* %49, float* %20, i32 %3) #10
  %50 = add nuw nsw i64 %45, 1
  %51 = load i32, i32* %34, align 4
  %52 = zext i32 %51 to i64
  %53 = icmp ult i64 %50, %52
  br i1 %53, label %44, label %39

54:                                               ; preds = %39
  %55 = bitcast %"class.blink::Thread"* %42 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)***
  %56 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*** %55, align 8
  %57 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %56, i64 3
  %58 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %57, align 8
  %59 = tail call %"class.base::SingleThreadTaskRunner"* %58(%"class.blink::Thread"* nonnull %42) #10
  %60 = bitcast %"class.base::Location"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %60) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.1, i64 0, i64 0), i32 200) #10
  %61 = ptrtoint %"class.blink::ReverbConvolver"* %0 to i64
  %62 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62)
  %63 = call i8* @_Znwm(i64 56) #11, !noalias !4
  %64 = bitcast i8* %63 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %64, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink15ReverbConvolverEFvvEJN3WTF28CrossThreadUnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink15ReverbConvolverEFvvEJN3WTF28CrossThreadUnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !4
  %65 = getelementptr inbounds i8, i8* %63, i64 32
  %66 = bitcast i8* %65 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::ReverbConvolver"*)* @_ZN5blink15ReverbConvolver19ProcessInBackgroundEv to i64), i64 0>, <2 x i64>* %66, align 8, !noalias !4
  %67 = getelementptr inbounds i8, i8* %63, i64 48
  %68 = bitcast i8* %67 to i64*
  store i64 %61, i64* %68, align 8, !noalias !4
  %69 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #10, !noalias !11
  %70 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  %71 = ptrtoint i8* %63 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %70, align 8, !noalias !12
  %72 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %72, align 8, !noalias !12
  %73 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %73) #10, !noalias !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #10, !noalias !11
  %74 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %74) #10, !noalias !11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62)
  %75 = bitcast %"class.base::OnceCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75)
  %76 = bitcast %"class.WTF::CrossThreadOnceFunction"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76)
  %77 = bitcast %"class.base::SingleThreadTaskRunner"* %59 to %"class.base::TaskRunner"*
  %78 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %78, align 8
  %79 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %80 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %71, i64* %80, align 8, !alias.scope !15
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %79, align 8, !noalias !15
  %81 = bitcast %"class.base::SingleThreadTaskRunner"* %59 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %82 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %81, align 8
  %83 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %82, align 8
  %84 = call zeroext i1 %83(%"class.base::TaskRunner"* %77, %"class.base::Location"* nonnull dereferenceable(32) %9, %"class.base::OnceCallback"* nonnull %7, i64 0) #10
  %85 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %85) #10
  %86 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %86) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76)
  %87 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %10, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %87) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %60) #10
  %88 = icmp eq %"class.base::SingleThreadTaskRunner"* %59, null
  br i1 %88, label %97, label %89

89:                                               ; preds = %54
  %90 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %59, i64 0, i32 0, i32 0, i32 1
  %91 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = atomicrmw sub i32* %91, i32 1 acq_rel
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %94, label %97

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %90, i64 -2
  %96 = bitcast %"class.base::RefCountedThreadSafe"* %95 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %96) #10
  br label %97

97:                                               ; preds = %39, %94, %89, %54
  ret void
}

declare void @_ZN5blink17ReverbInputBuffer5WriteEPKfm(%"class.blink::ReverbInputBuffer"*, float*, i64) local_unnamed_addr #1

declare void @_ZN5blink20ReverbConvolverStage7ProcessEPKfj(%"class.blink::ReverbConvolverStage"*, float*, i32) local_unnamed_addr #1

declare void @_ZN5blink24ReverbAccumulationBuffer12ReadAndClearEPfm(%"class.blink::ReverbAccumulationBuffer"*, float*, i64) local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15ReverbConvolver5ResetEv(%"class.blink::ReverbConvolver"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ReverbConvolver", %"class.blink::ReverbConvolver"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ReverbConvolver", %"class.blink::ReverbConvolver"* %0, i64 0, i32 0
  br label %13

7:                                                ; preds = %13, %1
  %8 = getelementptr inbounds %"class.blink::ReverbConvolver", %"class.blink::ReverbConvolver"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %23, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ReverbConvolver", %"class.blink::ReverbConvolver"* %0, i64 0, i32 1
  br label %26

13:                                               ; preds = %5, %13
  %14 = phi i64 [ 0, %5 ], [ %19, %13 ]
  %15 = trunc i64 %14 to i32
  %16 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink20ReverbConvolverStageENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %6, i32 %15) #10
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::ReverbConvolverStage"*, %"class.blink::ReverbConvolverStage"** %17, align 8
  tail call void @_ZN5blink20ReverbConvolverStage5ResetEv(%"class.blink::ReverbConvolverStage"* %18) #10
  %19 = add nuw nsw i64 %14, 1
  %20 = load i32, i32* %2, align 4
  %21 = zext i32 %20 to i64
  %22 = icmp ult i64 %19, %21
  br i1 %22, label %13, label %7

23:                                               ; preds = %26, %7
  %24 = getelementptr inbounds %"class.blink::ReverbConvolver", %"class.blink::ReverbConvolver"* %0, i64 0, i32 3
  tail call void @_ZN5blink24ReverbAccumulationBuffer5ResetEv(%"class.blink::ReverbAccumulationBuffer"* %24) #10
  %25 = getelementptr inbounds %"class.blink::ReverbConvolver", %"class.blink::ReverbConvolver"* %0, i64 0, i32 4
  tail call void @_ZN5blink17ReverbInputBuffer5ResetEv(%"class.blink::ReverbInputBuffer"* %25) #10
  ret void

26:                                               ; preds = %11, %26
  %27 = phi i64 [ 0, %11 ], [ %32, %26 ]
  %28 = trunc i64 %27 to i32
  %29 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink20ReverbConvolverStageENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %12, i32 %28) #10
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::ReverbConvolverStage"*, %"class.blink::ReverbConvolverStage"** %30, align 8
  tail call void @_ZN5blink20ReverbConvolverStage5ResetEv(%"class.blink::ReverbConvolverStage"* %31) #10
  %32 = add nuw nsw i64 %27, 1
  %33 = load i32, i32* %8, align 4
  %34 = zext i32 %33 to i64
  %35 = icmp ult i64 %32, %34
  br i1 %35, label %26, label %23
}

declare void @_ZN5blink20ReverbConvolverStage5ResetEv(%"class.blink::ReverbConvolverStage"*) local_unnamed_addr #1

declare void @_ZN5blink24ReverbAccumulationBuffer5ResetEv(%"class.blink::ReverbAccumulationBuffer"*) local_unnamed_addr #1

declare void @_ZN5blink17ReverbInputBuffer5ResetEv(%"class.blink::ReverbInputBuffer"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK5blink15ReverbConvolver13LatencyFramesEv(%"class.blink::ReverbConvolver"* nocapture readnone) local_unnamed_addr #3 align 2 {
  ret i64 0
}

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink15ReverbConvolverEFvvEJN3WTF28CrossThreadUnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.blink::ReverbConvolver"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blink::ReverbConvolver"*)**
  %21 = load void (%"class.blink::ReverbConvolver"*)*, void (%"class.blink::ReverbConvolver"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.blink::ReverbConvolver"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blink::ReverbConvolver"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.blink::ReverbConvolver"* %12) #10
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink15ReverbConvolverEFvvEJN3WTF28CrossThreadUnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

declare void @_ZN5blink20ReverbConvolverStageC1EPKfmmmmmmmPNS_24ReverbAccumulationBufferEfb(%"class.blink::ReverbConvolverStage"*, float*, i64, i64, i64, i64, i64, i64, i64, %"class.blink::ReverbAccumulationBuffer"*, float, i1 zeroext) unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20ReverbConvolverStageD2Ev(%"class.blink::ReverbConvolverStage"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ReverbConvolverStage", %"class.blink::ReverbConvolverStage"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %3 = load %"class.blink::DirectConvolver"*, %"class.blink::DirectConvolver"** %2, align 8
  store %"class.blink::DirectConvolver"* null, %"class.blink::DirectConvolver"** %2, align 8
  %4 = icmp eq %"class.blink::DirectConvolver"* %3, null
  br i1 %4, label %21, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::DirectConvolver", %"class.blink::DirectConvolver"* %3, i64 0, i32 3
  %7 = bitcast %"class.blink::AudioArray"* %6 to i8**
  %8 = load i8*, i8** %7, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %8) #10
  %9 = getelementptr inbounds %"class.blink::DirectConvolver", %"class.blink::DirectConvolver"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %9, align 8
  store %"class.blink::AudioArray"* null, %"class.blink::AudioArray"** %9, align 8
  %11 = icmp eq %"class.blink::AudioArray"* %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %5
  %13 = bitcast %"class.blink::AudioArray"* %10 to i8**
  %14 = load i8*, i8** %13, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %14) #10
  %15 = bitcast %"class.blink::AudioArray"* %10 to i8*
  tail call void @free(i8* %15) #10
  br label %16

16:                                               ; preds = %12, %5
  %17 = getelementptr inbounds %"class.blink::DirectConvolver", %"class.blink::DirectConvolver"* %3, i64 0, i32 1
  %18 = bitcast %"class.blink::AudioArray"* %17 to i8**
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %19) #10
  %20 = bitcast %"class.blink::DirectConvolver"* %3 to i8*
  tail call void @free(i8* %20) #10
  br label %21

21:                                               ; preds = %1, %16
  %22 = getelementptr inbounds %"class.blink::ReverbConvolverStage", %"class.blink::ReverbConvolverStage"* %0, i64 0, i32 10
  %23 = bitcast %"class.blink::AudioArray"* %22 to i8**
  %24 = load i8*, i8** %23, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %24) #10
  %25 = getelementptr inbounds %"class.blink::ReverbConvolverStage", %"class.blink::ReverbConvolverStage"* %0, i64 0, i32 2
  %26 = bitcast %"class.blink::AudioArray"* %25 to i8**
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %27) #10
  %28 = getelementptr inbounds %"class.blink::ReverbConvolverStage", %"class.blink::ReverbConvolverStage"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %29 = load %"class.blink::FFTConvolver"*, %"class.blink::FFTConvolver"** %28, align 8
  store %"class.blink::FFTConvolver"* null, %"class.blink::FFTConvolver"** %28, align 8
  %30 = icmp eq %"class.blink::FFTConvolver"* %29, null
  br i1 %30, label %43, label %31

31:                                               ; preds = %21
  %32 = getelementptr inbounds %"class.blink::FFTConvolver", %"class.blink::FFTConvolver"* %29, i64 0, i32 4
  %33 = bitcast %"class.blink::AudioArray"* %32 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %34) #10
  %35 = getelementptr inbounds %"class.blink::FFTConvolver", %"class.blink::FFTConvolver"* %29, i64 0, i32 3
  %36 = bitcast %"class.blink::AudioArray"* %35 to i8**
  %37 = load i8*, i8** %36, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %37) #10
  %38 = getelementptr inbounds %"class.blink::FFTConvolver", %"class.blink::FFTConvolver"* %29, i64 0, i32 2
  %39 = bitcast %"class.blink::AudioArray"* %38 to i8**
  %40 = load i8*, i8** %39, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %40) #10
  %41 = getelementptr inbounds %"class.blink::FFTConvolver", %"class.blink::FFTConvolver"* %29, i64 0, i32 0
  tail call void @_ZN5blink8FFTFrameD1Ev(%"class.blink::FFTFrame"* %41) #10
  %42 = bitcast %"class.blink::FFTConvolver"* %29 to i8*
  tail call void @free(i8* %42) #10
  br label %43

43:                                               ; preds = %21, %31
  %44 = getelementptr inbounds %"class.blink::ReverbConvolverStage", %"class.blink::ReverbConvolverStage"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load %"class.blink::FFTFrame"*, %"class.blink::FFTFrame"** %44, align 8
  store %"class.blink::FFTFrame"* null, %"class.blink::FFTFrame"** %44, align 8
  %46 = icmp eq %"class.blink::FFTFrame"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %43
  tail call void @_ZN5blink8FFTFrameD1Ev(%"class.blink::FFTFrame"* nonnull %45) #10
  %48 = bitcast %"class.blink::FFTFrame"* %45 to i8*
  tail call void @free(i8* %48) #10
  br label %49

49:                                               ; preds = %43, %47
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink8FFTFrameD1Ev(%"class.blink::FFTFrame"*) unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink20ReverbConvolverStageENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %8 = icmp ugt %"class.std::__1::unique_ptr"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 %10
  %12 = icmp ugt %"class.std::__1::unique_ptr"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.std::__1::unique_ptr"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink20ReverbConvolverStageENS2_14default_deleteIS5_EEEEEEmm(i64 %26) #10
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([153 x i8], [153 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink20ReverbConvolverStageENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #10
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.std::__1::unique_ptr"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.std::__1::unique_ptr"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.std::__1::unique_ptr"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #10
  %47 = bitcast %"class.WTF::Vector"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #10
  %51 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.std::__1::unique_ptr"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.std::__1::unique_ptr"* %1 to i64
  %56 = ptrtoint %"class.std::__1::unique_ptr"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"class.std::__1::unique_ptr"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink20ReverbConvolverStageENS2_14default_deleteIS5_EEEEEEmm(i64 %71) #10
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([153 x i8], [153 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink20ReverbConvolverStageENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #10
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.std::__1::unique_ptr"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.std::__1::unique_ptr"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #10
  %87 = bitcast %"class.WTF::Vector"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #10
  %91 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.std::__1::unique_ptr"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.std::__1::unique_ptr"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.std::__1::unique_ptr"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.std::__1::unique_ptr"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %100, i64 %103
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %101, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::ReverbConvolverStage"* null, %"class.blink::ReverbConvolverStage"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink20ReverbConvolverStageENS2_14default_deleteIS5_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink20ReverbConvolverStageENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 %25
  ret %"class.std::__1::unique_ptr"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5, !7, !9}
!5 = distinct !{!5, !6, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink15ReverbConvolverEFvvEJN3WTF28CrossThreadUnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink15ReverbConvolverEFvvEJN3WTF28CrossThreadUnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!7 = distinct !{!7, !8, !"_ZN4base8BindOnceIMN5blink15ReverbConvolverEFvvEJN3WTF28CrossThreadUnretainedWrapperIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8BindOnceIMN5blink15ReverbConvolverEFvvEJN3WTF28CrossThreadUnretainedWrapperIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!9 = distinct !{!9, !10, !"_ZN3WTF19CrossThreadBindOnceIMN5blink15ReverbConvolverEFvvEJNS_28CrossThreadUnretainedWrapperIS2_EEEEEDaOT_DpOT0_: argument 0"}
!10 = distinct !{!10, !"_ZN3WTF19CrossThreadBindOnceIMN5blink15ReverbConvolverEFvvEJNS_28CrossThreadUnretainedWrapperIS2_EEEEEDaOT_DpOT0_"}
!11 = !{!9}
!12 = !{!13, !9}
!13 = distinct !{!13, !14, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!14 = distinct !{!14, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!17 = distinct !{!17, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
