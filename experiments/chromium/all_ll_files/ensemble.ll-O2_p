; ModuleID = '../../courgette/ensemble.cc'
source_filename = "../../courgette/ensemble.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.courgette::Element" = type { i32 (...)**, i32, %"class.courgette::Ensemble"*, %"class.courgette::Region" }
%"class.courgette::Region" = type { i8*, i64 }
%"class.courgette::Ensemble" = type { %"class.courgette::Region", %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.courgette::Element"**, %"class.courgette::Element"**, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.courgette::Element"** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZTVN9courgette7ElementE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.courgette::Element"*)* @_ZN9courgette7ElementD2Ev to i8*), i8* bitcast (void (%"class.courgette::Element"*)* @_ZN9courgette7ElementD0Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.courgette::Element"*)* @_ZNK9courgette7Element4NameEv to i8*)] }, align 8
@.str = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c")\00", align 1

@_ZN9courgette7ElementC1ENS_14ExecutableTypeEPNS_8EnsembleERKNS_6RegionE = hidden unnamed_addr alias void (%"class.courgette::Element"*, i32, %"class.courgette::Ensemble"*, %"class.courgette::Region"*), void (%"class.courgette::Element"*, i32, %"class.courgette::Ensemble"*, %"class.courgette::Region"*)* @_ZN9courgette7ElementC2ENS_14ExecutableTypeEPNS_8EnsembleERKNS_6RegionE
@_ZN9courgette7ElementD1Ev = hidden unnamed_addr alias void (%"class.courgette::Element"*), void (%"class.courgette::Element"*)* @_ZN9courgette7ElementD2Ev
@_ZN9courgette8EnsembleD1Ev = hidden unnamed_addr alias void (%"class.courgette::Ensemble"*), void (%"class.courgette::Ensemble"*)* @_ZN9courgette8EnsembleD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN9courgette7ElementC2ENS_14ExecutableTypeEPNS_8EnsembleERKNS_6RegionE(%"class.courgette::Element"* nocapture, i32, %"class.courgette::Ensemble"*, %"class.courgette::Region"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.courgette::Element", %"class.courgette::Element"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN9courgette7ElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.courgette::Element", %"class.courgette::Element"* %0, i64 0, i32 1
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.courgette::Element", %"class.courgette::Element"* %0, i64 0, i32 2
  store %"class.courgette::Ensemble"* %2, %"class.courgette::Ensemble"** %7, align 8
  %8 = getelementptr inbounds %"class.courgette::Element", %"class.courgette::Element"* %0, i64 0, i32 3
  %9 = bitcast %"class.courgette::Region"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.courgette::Region"* %8 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.courgette::Element", %"class.courgette::Element"* %0, i64 0, i32 3, i32 1
  %13 = getelementptr inbounds %"class.courgette::Region", %"class.courgette::Region"* %3, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %12, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN9courgette7ElementD2Ev(%"class.courgette::Element"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9courgette7ElementD0Ev(%"class.courgette::Element"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.courgette::Element"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK9courgette7Element4NameEv(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.courgette::Element"* nocapture readonly) unnamed_addr #2 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #10
  %13 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #10
  %14 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #10
  %15 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #10
  %16 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #10
  %17 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.courgette::Element", %"class.courgette::Element"* %1, i64 0, i32 2
  %19 = load %"class.courgette::Ensemble"*, %"class.courgette::Ensemble"** %18, align 8
  %20 = getelementptr inbounds %"class.courgette::Ensemble", %"class.courgette::Ensemble"* %19, i64 0, i32 1
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 24, i1 false) #10, !alias.scope !2
  %24 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1, !noalias !2
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %33

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.courgette::Ensemble", %"class.courgette::Ensemble"* %19, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8, !noalias !2
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8, !noalias !2
  br label %36

33:                                               ; preds = %2
  %34 = zext i8 %26 to i64
  %35 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  br label %36

36:                                               ; preds = %33, %28
  %37 = phi i64 [ %30, %28 ], [ %34, %33 ]
  %38 = phi i8* [ %32, %28 ], [ %35, %33 ]
  %39 = add i64 %37, 1
  %40 = icmp ugt i64 %39, -17
  br i1 %40, label %41, label %43

41:                                               ; preds = %36
  %42 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %42) #11
  unreachable

43:                                               ; preds = %36
  %44 = icmp ult i64 %39, 23
  br i1 %44, label %50, label %45

45:                                               ; preds = %43
  %46 = add nuw i64 %37, 17
  %47 = and i64 %46, -16
  %48 = tail call i8* @_Znwm(i64 %47) #9
  store i8* %48, i8** %21, align 8, !alias.scope !2
  %49 = or i64 %47, -9223372036854775808
  store i64 %49, i64* %23, align 8, !alias.scope !2
  store i64 %37, i64* %22, align 8, !alias.scope !2
  br label %55

50:                                               ; preds = %43
  %51 = trunc i64 %37 to i8
  %52 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  store i8 %51, i8* %53, align 1, !alias.scope !2
  %54 = icmp eq i64 %37, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %45, %50
  %56 = phi i8* [ %48, %45 ], [ %17, %50 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %56, i8* align 1 %38, i64 %37, i1 false) #10
  br label %57

57:                                               ; preds = %50, %55
  %58 = phi i8* [ %17, %50 ], [ %56, %55 ]
  %59 = getelementptr inbounds i8, i8* %58, i64 %37
  store i8 0, i8* %59, align 1
  %60 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1) #10
  %61 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #10
  %62 = getelementptr inbounds %"class.courgette::Element", %"class.courgette::Element"* %1, i64 0, i32 1
  %63 = load i32, i32* %62, align 8
  call void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* nonnull sret %9, i32 %63) #10
  %64 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1, !noalias !5
  %67 = icmp slt i8 %66, 0
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8, !noalias !5
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %71 = load i64, i64* %70, align 8, !noalias !5
  %72 = zext i8 %66 to i64
  %73 = select i1 %67, i8* %69, i8* %61
  %74 = select i1 %67, i64 %71, i64 %72
  %75 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %8, i8* %73, i64 %74) #10, !noalias !5
  %76 = bitcast %"class.std::__1::basic_string"* %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* align 8 %76, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 24, i1 false) #10, !noalias !5
  %77 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #10, !noalias !8
  %78 = bitcast %"class.std::__1::basic_string"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 8 %78, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 24, i1 false) #10, !noalias !8
  %79 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %79) #10
  %80 = getelementptr inbounds %"class.courgette::Element", %"class.courgette::Element"* %1, i64 0, i32 3, i32 0
  %81 = bitcast i8** %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %"class.courgette::Ensemble"** %18 to i64**
  %84 = load i64*, i64** %83, align 8
  %85 = load i64, i64* %84, align 8
  %86 = sub i64 %82, %85
  call void @_ZN4base14NumberToStringEm(%"class.std::__1::basic_string"* nonnull sret %10, i64 %86) #10
  %87 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1, !noalias !11
  %90 = icmp slt i8 %89, 0
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load i8*, i8** %91, align 8, !noalias !11
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %94 = load i64, i64* %93, align 8, !noalias !11
  %95 = zext i8 %89 to i64
  %96 = select i1 %90, i8* %92, i8* %79
  %97 = select i1 %90, i64 %94, i64 %95
  %98 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %6, i8* %96, i64 %97) #10, !noalias !11
  %99 = bitcast %"class.std::__1::basic_string"* %98 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 %99, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 24, i1 false) #10, !noalias !11
  %100 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #10, !noalias !14
  %101 = bitcast %"class.std::__1::basic_string"* %100 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 %101, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 24, i1 false) #10, !noalias !14
  %102 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %102) #10
  %103 = getelementptr inbounds %"class.courgette::Element", %"class.courgette::Element"* %1, i64 0, i32 3, i32 1
  %104 = load i64, i64* %103, align 8
  call void @_ZN4base14NumberToStringEm(%"class.std::__1::basic_string"* nonnull sret %11, i64 %104) #10
  %105 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %106 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %105, i64 0, i32 1, i32 0
  %107 = load i8, i8* %106, align 1, !noalias !17
  %108 = icmp slt i8 %107, 0
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load i8*, i8** %109, align 8, !noalias !17
  %111 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %112 = load i64, i64* %111, align 8, !noalias !17
  %113 = zext i8 %107 to i64
  %114 = select i1 %108, i8* %110, i8* %102
  %115 = select i1 %108, i64 %112, i64 %113
  %116 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %114, i64 %115) #10, !noalias !17
  %117 = bitcast %"class.std::__1::basic_string"* %116 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 %117, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %117, i8 0, i64 24, i1 false) #10, !noalias !17
  %118 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #10, !noalias !20
  %119 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %120 = bitcast %"class.std::__1::basic_string"* %118 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 24, i1 false) #10, !noalias !20
  %121 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %121, i64 0, i32 1, i32 0
  %123 = load i8, i8* %122, align 1
  %124 = icmp slt i8 %123, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %57
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  call void @_ZdlPv(i8* %127) #9
  br label %128

128:                                              ; preds = %57, %125
  %129 = load i8, i8* %106, align 1
  %130 = icmp slt i8 %129, 0
  br i1 %130, label %131, label %133

131:                                              ; preds = %128
  %132 = load i8*, i8** %109, align 8
  call void @_ZdlPv(i8* %132) #9
  br label %133

133:                                              ; preds = %128, %131
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %102) #10
  %134 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %135 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %134, i64 0, i32 1, i32 0
  %136 = load i8, i8* %135, align 1
  %137 = icmp slt i8 %136, 0
  br i1 %137, label %138, label %141

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load i8*, i8** %139, align 8
  call void @_ZdlPv(i8* %140) #9
  br label %141

141:                                              ; preds = %133, %138
  %142 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %143 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %142, i64 0, i32 1, i32 0
  %144 = load i8, i8* %143, align 1
  %145 = icmp slt i8 %144, 0
  br i1 %145, label %146, label %149

146:                                              ; preds = %141
  %147 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load i8*, i8** %147, align 8
  call void @_ZdlPv(i8* %148) #9
  br label %149

149:                                              ; preds = %141, %146
  %150 = load i8, i8* %88, align 1
  %151 = icmp slt i8 %150, 0
  br i1 %151, label %152, label %154

152:                                              ; preds = %149
  %153 = load i8*, i8** %91, align 8
  call void @_ZdlPv(i8* %153) #9
  br label %154

154:                                              ; preds = %149, %152
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %79) #10
  %155 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %156 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %155, i64 0, i32 1, i32 0
  %157 = load i8, i8* %156, align 1
  %158 = icmp slt i8 %157, 0
  br i1 %158, label %159, label %162

159:                                              ; preds = %154
  %160 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load i8*, i8** %160, align 8
  call void @_ZdlPv(i8* %161) #9
  br label %162

162:                                              ; preds = %154, %159
  %163 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %164 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %163, i64 0, i32 1, i32 0
  %165 = load i8, i8* %164, align 1
  %166 = icmp slt i8 %165, 0
  br i1 %166, label %167, label %170

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load i8*, i8** %168, align 8
  call void @_ZdlPv(i8* %169) #9
  br label %170

170:                                              ; preds = %162, %167
  %171 = load i8, i8* %65, align 1
  %172 = icmp slt i8 %171, 0
  br i1 %172, label %173, label %175

173:                                              ; preds = %170
  %174 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %174) #9
  br label %175

175:                                              ; preds = %170, %173
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #10
  %176 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %177 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %176, i64 0, i32 1, i32 0
  %178 = load i8, i8* %177, align 1
  %179 = icmp slt i8 %178, 0
  br i1 %179, label %180, label %182

180:                                              ; preds = %175
  %181 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %181) #9
  br label %182

182:                                              ; preds = %175, %180
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #5

declare void @_ZN4base14NumberToStringEm(%"class.std::__1::basic_string"* sret, i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN9courgette8Ensemble20FindEmbeddedElementsEv(%"class.courgette::Ensemble"*) local_unnamed_addr #2 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %"class.courgette::Ensemble", %"class.courgette::Ensemble"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.courgette::Ensemble", %"class.courgette::Ensemble"* %0, i64 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i64 %5, 0
  br i1 %8, label %174, label %9

9:                                                ; preds = %1
  %10 = bitcast i32* %2 to i8*
  %11 = bitcast i64* %3 to i8*
  %12 = getelementptr inbounds %"class.courgette::Ensemble", %"class.courgette::Ensemble"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"class.courgette::Ensemble", %"class.courgette::Ensemble"* %0, i64 0, i32 3, i32 0, i32 1
  %14 = getelementptr inbounds %"class.courgette::Ensemble", %"class.courgette::Ensemble"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"class.courgette::Element"*** %13 to i64*
  %16 = bitcast %"class.std::__1::vector"* %12 to i64*
  %17 = bitcast %"class.courgette::Element"*** %14 to i64*
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.courgette::Ensemble", %"class.courgette::Ensemble"* %0, i64 0, i32 2
  %20 = getelementptr inbounds %"class.courgette::Ensemble", %"class.courgette::Ensemble"* %0, i64 0, i32 2, i32 0, i32 1
  %21 = getelementptr inbounds %"class.courgette::Ensemble", %"class.courgette::Ensemble"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %22 = bitcast %"class.courgette::Element"*** %20 to i64*
  %23 = bitcast %"class.std::__1::vector"* %19 to i64*
  %24 = bitcast %"class.courgette::Element"*** %21 to i64*
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %19, i64 0, i32 0, i32 0
  br label %26

26:                                               ; preds = %9, %170
  %27 = phi i64 [ 0, %9 ], [ %172, %170 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #10
  store i32 -1431655766, i32* %2, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  store i64 -6148914691236517206, i64* %3, align 8
  %28 = getelementptr inbounds i8, i8* %7, i64 %27
  %29 = sub i64 %5, %27
  %30 = call i32 @_ZN9courgette20DetectExecutableTypeEPKhmPNS_14ExecutableTypeEPm(i8* %28, i64 %29, i32* nonnull %2, i64* nonnull %3) #10
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %170

32:                                               ; preds = %26
  %33 = load i64, i64* %3, align 8
  %34 = ptrtoint i8* %28 to i64
  %35 = call i8* @_Znwm(i64 40) #9
  %36 = load i32, i32* %2, align 4
  %37 = bitcast i8* %35 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN9courgette7ElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds i8, i8* %35, i64 8
  %39 = bitcast i8* %38 to i32*
  store i32 %36, i32* %39, align 8
  %40 = getelementptr inbounds i8, i8* %35, i64 16
  %41 = bitcast i8* %40 to %"class.courgette::Ensemble"**
  store %"class.courgette::Ensemble"* %0, %"class.courgette::Ensemble"** %41, align 8
  %42 = getelementptr inbounds i8, i8* %35, i64 24
  %43 = bitcast i8* %42 to i64*
  store i64 %34, i64* %43, align 8
  %44 = getelementptr inbounds i8, i8* %35, i64 32
  %45 = bitcast i8* %44 to i64*
  store i64 %33, i64* %45, align 8
  %46 = ptrtoint i8* %35 to i64
  %47 = load %"class.courgette::Element"**, %"class.courgette::Element"*** %13, align 8
  %48 = load %"class.courgette::Element"**, %"class.courgette::Element"*** %14, align 8
  %49 = icmp eq %"class.courgette::Element"** %47, %48
  %50 = ptrtoint %"class.courgette::Element"** %48 to i64
  br i1 %49, label %55, label %51

51:                                               ; preds = %32
  %52 = bitcast %"class.courgette::Element"** %47 to i64*
  store i64 %46, i64* %52, align 8
  %53 = getelementptr inbounds %"class.courgette::Element"*, %"class.courgette::Element"** %47, i64 1
  %54 = ptrtoint %"class.courgette::Element"** %53 to i64
  store i64 %54, i64* %15, align 8
  br label %108

55:                                               ; preds = %32
  %56 = ptrtoint %"class.courgette::Element"** %47 to i64
  %57 = load i64, i64* %16, align 8
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 3
  %60 = add nsw i64 %59, 1
  %61 = icmp ugt i64 %60, 2305843009213693951
  br i1 %61, label %62, label %64

62:                                               ; preds = %55
  %63 = bitcast %"class.std::__1::vector"* %12 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %63) #11
  unreachable

64:                                               ; preds = %55
  %65 = sub i64 %50, %57
  %66 = ashr exact i64 %65, 3
  %67 = icmp ult i64 %66, 1152921504606846975
  br i1 %67, label %68, label %76

68:                                               ; preds = %64
  %69 = ashr exact i64 %65, 2
  %70 = icmp ult i64 %69, %60
  %71 = select i1 %70, i64 %60, i64 %69
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %81, label %73

73:                                               ; preds = %68
  %74 = icmp ugt i64 %71, 2305843009213693951
  br i1 %74, label %75, label %76

75:                                               ; preds = %73
  call void @abort() #11
  unreachable

76:                                               ; preds = %73, %64
  %77 = phi i64 [ %71, %73 ], [ 2305843009213693951, %64 ]
  %78 = shl i64 %77, 3
  %79 = call i8* @_Znwm(i64 %78) #9
  %80 = bitcast i8* %79 to %"class.courgette::Element"**
  br label %81

81:                                               ; preds = %76, %68
  %82 = phi i64 [ %77, %76 ], [ 0, %68 ]
  %83 = phi %"class.courgette::Element"** [ %80, %76 ], [ null, %68 ]
  %84 = getelementptr inbounds %"class.courgette::Element"*, %"class.courgette::Element"** %83, i64 %59
  %85 = getelementptr inbounds %"class.courgette::Element"*, %"class.courgette::Element"** %83, i64 %82
  %86 = ptrtoint %"class.courgette::Element"** %85 to i64
  %87 = bitcast %"class.courgette::Element"** %84 to i64*
  store i64 %46, i64* %87, align 8
  %88 = getelementptr inbounds %"class.courgette::Element"*, %"class.courgette::Element"** %84, i64 1
  %89 = ptrtoint %"class.courgette::Element"** %88 to i64
  %90 = load %"class.courgette::Element"**, %"class.courgette::Element"*** %18, align 8
  %91 = load i64, i64* %15, align 8
  %92 = ptrtoint %"class.courgette::Element"** %90 to i64
  %93 = sub i64 %91, %92
  %94 = ashr exact i64 %93, 3
  %95 = sub nsw i64 0, %94
  %96 = getelementptr inbounds %"class.courgette::Element"*, %"class.courgette::Element"** %84, i64 %95
  %97 = ptrtoint %"class.courgette::Element"** %96 to i64
  %98 = icmp sgt i64 %93, 0
  br i1 %98, label %99, label %103

99:                                               ; preds = %81
  %100 = bitcast %"class.courgette::Element"** %96 to i8*
  %101 = bitcast %"class.courgette::Element"** %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 %93, i1 false) #10
  %102 = load %"class.courgette::Element"**, %"class.courgette::Element"*** %18, align 8
  br label %103

103:                                              ; preds = %99, %81
  %104 = phi %"class.courgette::Element"** [ %90, %81 ], [ %102, %99 ]
  store i64 %97, i64* %16, align 8
  store i64 %89, i64* %15, align 8
  store i64 %86, i64* %17, align 8
  %105 = icmp eq %"class.courgette::Element"** %104, null
  br i1 %105, label %108, label %106

106:                                              ; preds = %103
  %107 = bitcast %"class.courgette::Element"** %104 to i8*
  call void @_ZdlPv(i8* %107) #9
  br label %108

108:                                              ; preds = %51, %103, %106
  %109 = load %"class.courgette::Element"**, %"class.courgette::Element"*** %20, align 8
  %110 = load %"class.courgette::Element"**, %"class.courgette::Element"*** %21, align 8
  %111 = icmp eq %"class.courgette::Element"** %109, %110
  %112 = ptrtoint %"class.courgette::Element"** %110 to i64
  br i1 %111, label %117, label %113

113:                                              ; preds = %108
  %114 = bitcast %"class.courgette::Element"** %109 to i64*
  store i64 %46, i64* %114, align 8
  %115 = getelementptr inbounds %"class.courgette::Element"*, %"class.courgette::Element"** %109, i64 1
  %116 = ptrtoint %"class.courgette::Element"** %115 to i64
  store i64 %116, i64* %22, align 8
  br label %170

117:                                              ; preds = %108
  %118 = ptrtoint %"class.courgette::Element"** %109 to i64
  %119 = load i64, i64* %23, align 8
  %120 = sub i64 %118, %119
  %121 = ashr exact i64 %120, 3
  %122 = add nsw i64 %121, 1
  %123 = icmp ugt i64 %122, 2305843009213693951
  br i1 %123, label %124, label %126

124:                                              ; preds = %117
  %125 = bitcast %"class.std::__1::vector"* %19 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %125) #11
  unreachable

126:                                              ; preds = %117
  %127 = sub i64 %112, %119
  %128 = ashr exact i64 %127, 3
  %129 = icmp ult i64 %128, 1152921504606846975
  br i1 %129, label %130, label %138

130:                                              ; preds = %126
  %131 = ashr exact i64 %127, 2
  %132 = icmp ult i64 %131, %122
  %133 = select i1 %132, i64 %122, i64 %131
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %143, label %135

135:                                              ; preds = %130
  %136 = icmp ugt i64 %133, 2305843009213693951
  br i1 %136, label %137, label %138

137:                                              ; preds = %135
  call void @abort() #11
  unreachable

138:                                              ; preds = %135, %126
  %139 = phi i64 [ %133, %135 ], [ 2305843009213693951, %126 ]
  %140 = shl i64 %139, 3
  %141 = call i8* @_Znwm(i64 %140) #9
  %142 = bitcast i8* %141 to %"class.courgette::Element"**
  br label %143

143:                                              ; preds = %138, %130
  %144 = phi i64 [ %139, %138 ], [ 0, %130 ]
  %145 = phi %"class.courgette::Element"** [ %142, %138 ], [ null, %130 ]
  %146 = getelementptr inbounds %"class.courgette::Element"*, %"class.courgette::Element"** %145, i64 %121
  %147 = getelementptr inbounds %"class.courgette::Element"*, %"class.courgette::Element"** %145, i64 %144
  %148 = ptrtoint %"class.courgette::Element"** %147 to i64
  %149 = bitcast %"class.courgette::Element"** %146 to i64*
  store i64 %46, i64* %149, align 8
  %150 = getelementptr inbounds %"class.courgette::Element"*, %"class.courgette::Element"** %146, i64 1
  %151 = ptrtoint %"class.courgette::Element"** %150 to i64
  %152 = load %"class.courgette::Element"**, %"class.courgette::Element"*** %25, align 8
  %153 = load i64, i64* %22, align 8
  %154 = ptrtoint %"class.courgette::Element"** %152 to i64
  %155 = sub i64 %153, %154
  %156 = ashr exact i64 %155, 3
  %157 = sub nsw i64 0, %156
  %158 = getelementptr inbounds %"class.courgette::Element"*, %"class.courgette::Element"** %146, i64 %157
  %159 = ptrtoint %"class.courgette::Element"** %158 to i64
  %160 = icmp sgt i64 %155, 0
  br i1 %160, label %161, label %165

161:                                              ; preds = %143
  %162 = bitcast %"class.courgette::Element"** %158 to i8*
  %163 = bitcast %"class.courgette::Element"** %152 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %162, i8* align 8 %163, i64 %155, i1 false) #10
  %164 = load %"class.courgette::Element"**, %"class.courgette::Element"*** %25, align 8
  br label %165

165:                                              ; preds = %161, %143
  %166 = phi %"class.courgette::Element"** [ %152, %143 ], [ %164, %161 ]
  store i64 %159, i64* %23, align 8
  store i64 %151, i64* %22, align 8
  store i64 %148, i64* %24, align 8
  %167 = icmp eq %"class.courgette::Element"** %166, null
  br i1 %167, label %170, label %168

168:                                              ; preds = %165
  %169 = bitcast %"class.courgette::Element"** %166 to i8*
  call void @_ZdlPv(i8* %169) #9
  br label %170

170:                                              ; preds = %168, %165, %113, %26
  %171 = phi i64 [ 1, %26 ], [ %33, %113 ], [ %33, %165 ], [ %33, %168 ]
  %172 = add i64 %171, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #10
  %173 = icmp ugt i64 %5, %172
  br i1 %173, label %26, label %174

174:                                              ; preds = %170, %1
  ret i32 1
}

declare i32 @_ZN9courgette20DetectExecutableTypeEPKhmPNS_14ExecutableTypeEPm(i8*, i64, i32*, i64*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9courgette8EnsembleD2Ev(%"class.courgette::Ensemble"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.courgette::Ensemble", %"class.courgette::Ensemble"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.courgette::Ensemble", %"class.courgette::Ensemble"* %0, i64 0, i32 3, i32 0, i32 1
  %4 = bitcast %"class.courgette::Element"*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %9, label %33

9:                                                ; preds = %48, %1
  %10 = phi i64 [ %5, %1 ], [ %49, %48 ]
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %9
  store i64 %10, i64* %4, align 8
  %13 = inttoptr i64 %10 to i8*
  tail call void @_ZdlPv(i8* %13) #9
  br label %14

14:                                               ; preds = %9, %12
  %15 = getelementptr inbounds %"class.courgette::Ensemble", %"class.courgette::Ensemble"* %0, i64 0, i32 2, i32 0, i32 0
  %16 = load %"class.courgette::Element"**, %"class.courgette::Element"*** %15, align 8
  %17 = icmp eq %"class.courgette::Element"** %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %14
  %19 = ptrtoint %"class.courgette::Element"** %16 to i64
  %20 = getelementptr inbounds %"class.courgette::Ensemble", %"class.courgette::Ensemble"* %0, i64 0, i32 2, i32 0, i32 1
  %21 = bitcast %"class.courgette::Element"*** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast %"class.courgette::Element"** %16 to i8*
  tail call void @_ZdlPv(i8* %22) #9
  br label %23

23:                                               ; preds = %14, %18
  %24 = getelementptr inbounds %"class.courgette::Ensemble", %"class.courgette::Ensemble"* %0, i64 0, i32 1
  %25 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  tail call void @_ZdlPv(i8* %31) #9
  br label %32

32:                                               ; preds = %23, %29
  ret void

33:                                               ; preds = %1, %48
  %34 = phi i64 [ %49, %48 ], [ %7, %1 ]
  %35 = phi i64 [ %50, %48 ], [ %5, %1 ]
  %36 = phi i64 [ %51, %48 ], [ 0, %1 ]
  %37 = inttoptr i64 %34 to %"class.courgette::Element"**
  %38 = getelementptr inbounds %"class.courgette::Element"*, %"class.courgette::Element"** %37, i64 %36
  %39 = load %"class.courgette::Element"*, %"class.courgette::Element"** %38, align 8
  %40 = icmp eq %"class.courgette::Element"* %39, null
  br i1 %40, label %48, label %41

41:                                               ; preds = %33
  %42 = bitcast %"class.courgette::Element"* %39 to void (%"class.courgette::Element"*)***
  %43 = load void (%"class.courgette::Element"*)**, void (%"class.courgette::Element"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.courgette::Element"*)*, void (%"class.courgette::Element"*)** %43, i64 1
  %45 = load void (%"class.courgette::Element"*)*, void (%"class.courgette::Element"*)** %44, align 8
  tail call void %45(%"class.courgette::Element"* nonnull %39) #10
  %46 = load i64, i64* %4, align 8
  %47 = load i64, i64* %6, align 8
  br label %48

48:                                               ; preds = %33, %41
  %49 = phi i64 [ %34, %33 ], [ %47, %41 ]
  %50 = phi i64 [ %35, %33 ], [ %46, %41 ]
  %51 = add nuw i64 %36, 1
  %52 = sub i64 %50, %49
  %53 = ashr exact i64 %52, 3
  %54 = icmp ult i64 %51, %53
  br i1 %54, label %33, label %9
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!19 = distinct !{!19, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!22 = distinct !{!22, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
