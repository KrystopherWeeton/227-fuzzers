; ModuleID = '../../third_party/blink/renderer/platform/graphics/animation_worklet_mutator_dispatcher_impl.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/animation_worklet_mutator_dispatcher_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.128", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.144", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.162", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.168", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.111", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.31" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.31" = type { %"struct.std::__1::__atomic_base.32" }
%"struct.std::__1::__atomic_base.32" = type { %"struct.std::__1::__atomic_base.33" }
%"struct.std::__1::__atomic_base.33" = type { %"struct.std::__1::__cxx_atomic_impl.34" }
%"struct.std::__1::__cxx_atomic_impl.34" = type { %"struct.std::__1::__cxx_atomic_base_impl.35" }
%"struct.std::__1::__cxx_atomic_base_impl.35" = type { i64 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::Worklist.42"* }
%"class.blink::Worklist.42" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.31" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist.49"* }
%"class.blink::Worklist.49" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.31" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist.56"* }
%"class.blink::Worklist.56" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.31" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.31" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.31" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.31" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.31" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.91", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.105", [4 x i8] }>
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i64 }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { float }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.114", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.136" }
%"class.WTF::VectorBuffer.136" = type { %"class.WTF::VectorBufferBase.137" }
%"class.WTF::VectorBufferBase.137" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.150" }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.42"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.49"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.56"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.305", i64 }
%"class.std::__1::vector.305" = type { %"class.std::__1::__vector_base.306" }
%"class.std::__1::__vector_base.306" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.307" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.168" = type { %"struct.std::__1::__atomic_base.169" }
%"struct.std::__1::__atomic_base.169" = type { %"struct.std::__1::__cxx_atomic_impl.170" }
%"struct.std::__1::__cxx_atomic_impl.170" = type { %"struct.std::__1::__cxx_atomic_base_impl.171" }
%"struct.std::__1::__cxx_atomic_base_impl.171" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::AnimationWorkletMutatorDispatcherImpl" = type { %"class.blink::AnimationWorkletMutatorDispatcher", %"class.WTF::HashMap", %class.scoped_refptr.172, %"class.blink::MutatorClient"*, %"class.WTF::HashMap.178", %class.scoped_refptr.225, %"class.WTF::CrossThreadOnceFunction", %"class.std::__1::unique_ptr.255", %"class.std::__1::unique_ptr.255", %"class.std::__1::unique_ptr.292", %"class.base::WeakPtrFactory" }
%"class.blink::AnimationWorkletMutatorDispatcher" = type { i32 (...)** }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::CrossThreadPersistent", %class.scoped_refptr.172 }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::AnimationWorkletMutator"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::AnimationWorkletMutator" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.blink::PersistentNode"* }
%class.scoped_refptr.172 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.blink::MutatorClient" = type { i32 (...)** }
%"class.WTF::HashMap.178" = type { %"class.WTF::HashTable.179" }
%"class.WTF::HashTable.179" = type <{ %"struct.WTF::KeyValuePair.182"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.182" = type { i32, %"class.std::__1::unique_ptr.183" }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.cc::AnimationWorkletInput"* }
%"struct.cc::AnimationWorkletInput" = type { %"class.std::__1::vector", %"class.std::__1::vector.208", %"class.std::__1::vector.215" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::AnimationWorkletInput::AddAndUpdateState"*, %"struct.cc::AnimationWorkletInput::AddAndUpdateState"*, %"class.std::__1::__compressed_pair.203" }
%"struct.cc::AnimationWorkletInput::AddAndUpdateState" = type { %"struct.cc::WorkletAnimationId", %"class.std::__1::basic_string", double, %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.197" }
%"struct.cc::WorkletAnimationId" = type { i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.cc::AnimationOptions"* }
%"class.cc::AnimationOptions" = type { i32 (...)** }
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.cc::AnimationEffectTimings"* }
%"class.cc::AnimationEffectTimings" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"struct.cc::AnimationWorkletInput::AddAndUpdateState"* }
%"class.std::__1::vector.208" = type { %"class.std::__1::__vector_base.209" }
%"class.std::__1::__vector_base.209" = type { %"struct.cc::AnimationWorkletInput::UpdateState"*, %"struct.cc::AnimationWorkletInput::UpdateState"*, %"class.std::__1::__compressed_pair.210" }
%"struct.cc::AnimationWorkletInput::UpdateState" = type { %"struct.cc::WorkletAnimationId", double }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"struct.cc::AnimationWorkletInput::UpdateState"* }
%"class.std::__1::vector.215" = type { %"class.std::__1::__vector_base.216" }
%"class.std::__1::__vector_base.216" = type { %"struct.cc::WorkletAnimationId"*, %"struct.cc::WorkletAnimationId"*, %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"struct.cc::WorkletAnimationId"* }
%class.scoped_refptr.225 = type { %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"* }
%"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::Vector.227" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.226" }
%"class.base::RefCountedThreadSafe.226" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.173" }
%"struct.std::__1::atomic.173" = type { %"struct.std::__1::__atomic_base.174" }
%"struct.std::__1::__atomic_base.174" = type { %"struct.std::__1::__atomic_base.175" }
%"struct.std::__1::__atomic_base.175" = type { %"struct.std::__1::__cxx_atomic_impl.176" }
%"struct.std::__1::__cxx_atomic_impl.176" = type { %"struct.std::__1::__cxx_atomic_base_impl.177" }
%"struct.std::__1::__cxx_atomic_base_impl.177" = type { i32 }
%"class.WTF::Vector.227" = type { %"class.WTF::VectorBuffer.228" }
%"class.WTF::VectorBuffer.228" = type { %"class.WTF::VectorBufferBase.229" }
%"class.WTF::VectorBufferBase.229" = type { %"class.std::__1::unique_ptr.230"*, i32, i32 }
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"struct.cc::AnimationWorkletOutput"* }
%"struct.cc::AnimationWorkletOutput" = type { %"class.std::__1::vector.233" }
%"class.std::__1::vector.233" = type { %"class.std::__1::__vector_base.234" }
%"class.std::__1::__vector_base.234" = type { %"struct.cc::AnimationWorkletOutput::AnimationState"*, %"struct.cc::AnimationWorkletOutput::AnimationState"*, %"class.std::__1::__compressed_pair.243" }
%"struct.cc::AnimationWorkletOutput::AnimationState" = type { %"struct.cc::WorkletAnimationId", %"class.std::__1::vector.235" }
%"class.std::__1::vector.235" = type { %"class.std::__1::__vector_base.236" }
%"class.std::__1::__vector_base.236" = type { %"class.absl::optional"*, %"class.absl::optional"*, %"class.std::__1::__compressed_pair.238" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.237 }
%union.anon.237 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.absl::optional"* }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.cc::AnimationWorkletOutput::AnimationState"* }
%"class.WTF::CrossThreadOnceFunction" = type { %"class.base::OnceCallback" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.253 }
%class.scoped_refptr.253 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.254", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.254" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"* }
%"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest" = type { %"class.base::TimeTicks", %"class.std::__1::unique_ptr.258", %"class.WTF::CrossThreadOnceFunction" }
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.cc::MutatorInputState"* }
%"class.cc::MutatorInputState" = type { %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.261" }
%"class.std::__1::__hash_table.261" = type <{ %"class.std::__1::unique_ptr.262", %"class.std::__1::__compressed_pair.272", %"class.std::__1::__compressed_pair.277", %"class.std::__1::__compressed_pair.281", [4 x i8] }>
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264", %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"struct.std::__1::__hash_node_base.265"** }
%"struct.std::__1::__hash_node_base.265" = type { %"struct.std::__1::__hash_node_base.265"* }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"class.std::__1::__bucket_list_deallocator.267" }
%"class.std::__1::__bucket_list_deallocator.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"struct.std::__1::__hash_node_base.265" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.base::TickClock"* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.298 }
%class.scoped_refptr.298 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.299", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.299" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.300" }
%"struct.std::__1::atomic.300" = type { %"struct.std::__1::__atomic_base.301" }
%"struct.std::__1::__atomic_base.301" = type { %"struct.std::__1::__atomic_base.302" }
%"struct.std::__1::__atomic_base.302" = type { %"struct.std::__1::__cxx_atomic_impl.303" }
%"struct.std::__1::__cxx_atomic_impl.303" = type { %"struct.std::__1::__cxx_atomic_base_impl.304" }
%"struct.std::__1::__cxx_atomic_base_impl.304" = type { i8 }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.blink::CrossThreadPersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::CompositorMutatorClient" = type { %"class.cc::LayerTreeMutator", %"class.blink::MutatorClient", %"class.std::__1::unique_ptr.321", %"class.cc::LayerTreeMutatorClient"* }
%"class.cc::LayerTreeMutator" = type { i32 (...)** }
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.blink::AnimationWorkletMutatorDispatcherImpl"* }
%"class.cc::LayerTreeMutatorClient" = type { i32 (...)** }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.330 }
%class.scoped_refptr.330 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::MainThreadMutatorClient" = type { %"class.blink::MutatorClient", %"class.std::__1::unique_ptr.321", %"class.blink::MutatorClient"* }
%"class.base::OnceCallback.344" = type { %"class.base::internal::CallbackBase" }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.337, i8, [7 x i8] }>
%class.scoped_refptr.337 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.338", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.338" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.339" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.WTF::CrossThreadOnceFunction.343" = type { %"class.base::OnceCallback.344" }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.345", [4 x i8] }>
%"struct.std::__1::atomic.345" = type { %"struct.std::__1::__atomic_base.346" }
%"struct.std::__1::__atomic_base.346" = type { %"struct.std::__1::__atomic_base.347" }
%"struct.std::__1::__atomic_base.347" = type { %"struct.std::__1::__cxx_atomic_impl.348" }
%"struct.std::__1::__cxx_atomic_impl.348" = type { %"struct.std::__1::__cxx_atomic_base_impl.349" }
%"struct.std::__1::__cxx_atomic_base_impl.349" = type { i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::CrossThreadWeakPersistent" = type { %"class.blink::PersistentBase.363" }
%"class.blink::PersistentBase.363" = type { %"class.blink::AnimationWorkletMutator"*, %"class.blink::CrossThreadPersistentNodePtr.364" }
%"class.blink::CrossThreadPersistentNodePtr.364" = type { %"struct.std::__1::atomic" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::ScopedClosureRunner" = type { %"class.base::OnceCallback.344" }
%"class.WTF::String" = type { %class.scoped_refptr.350 }
%class.scoped_refptr.350 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.345" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.420", %"class.blink::FreeList", %"class.WTF::Vector.425" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [256 x i8] }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::Vector.420" = type { %"class.WTF::VectorBuffer.421" }
%"class.WTF::VectorBuffer.421" = type { %"class.WTF::VectorBufferBase.422" }
%"class.WTF::VectorBufferBase.422" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.WTF::Vector.425" = type { %"class.WTF::VectorBuffer.426" }
%"class.WTF::VectorBuffer.426" = type { %"class.WTF::VectorBufferBase.427" }
%"class.WTF::VectorBufferBase.427" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"struct.std::__1::__tuple_impl.413" = type { %"class.std::__1::__tuple_leaf.414", %"class.std::__1::__tuple_leaf.415", %"class.std::__1::__tuple_leaf.416", %"class.std::__1::__tuple_leaf.417", %"class.std::__1::__tuple_leaf.418" }
%"class.std::__1::__tuple_leaf.414" = type { %"class.blink::CrossThreadWeakPersistent" }
%"class.std::__1::__tuple_leaf.415" = type { %"class.std::__1::unique_ptr.183" }
%"class.std::__1::__tuple_leaf.416" = type { %class.scoped_refptr.225 }
%"class.std::__1::__tuple_leaf.417" = type { i32 }
%"class.std::__1::__tuple_leaf.418" = type { %"class.std::__1::unique_ptr.352" }
%"class.std::__1::unique_ptr.352" = type { %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"class.base::ScopedClosureRunner"* }

$_ZN3WTF7HashMapIN5blink21CrossThreadPersistentINS1_23AnimationWorkletMutatorEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEENS_10MemberHashIS3_EENS_10HashTraitsIS4_EENSB_IS8_EENS_18PartitionAllocatorEED2Ev = comdat any

$_ZN5blink37AnimationWorkletMutatorDispatcherImpl12CreateClientINS_23CompositorMutatorClientEEENSt3__110unique_ptrIT_NS3_14default_deleteIS5_EEEERN4base7WeakPtrIS0_EE13scoped_refptrINS9_22SingleThreadTaskRunnerEE = comdat any

$_ZN5blink37AnimationWorkletMutatorDispatcherImpl12CreateClientINS_23MainThreadMutatorClientEEENSt3__110unique_ptrIT_NS3_14default_deleteIS5_EEEERN4base7WeakPtrIS0_EE13scoped_refptrINS9_22SingleThreadTaskRunnerEE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMNS_13WaitableEventEFvvEJN3WTF28CrossThreadUnretainedWrapperIS3_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMNS_13WaitableEventEFvvEJN3WTF28CrossThreadUnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink37AnimationWorkletMutatorDispatcherImplEFviNS_9TimeTicksEEJNS_7WeakPtrIS4_EEiS5_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink37AnimationWorkletMutatorDispatcherImplEFviNS_9TimeTicksEEJNS_7WeakPtrIS3_EEiS4_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink37AnimationWorkletMutatorDispatcherImplEFviNS_9TimeTicksEEJNS_7WeakPtrIS4_EEiS5_EEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN2cc22AnimationWorkletOutputENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink14PersistentBaseINS_23AnimationWorkletMutatorELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_23AnimationWorkletMutatorELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZNK5blink14PersistentBaseINS_23AnimationWorkletMutatorELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE15TracePersistentEPNS_7VisitorE = comdat any

$_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2ELm3ELm4EEEEJN5blink25CrossThreadWeakPersistentINS3_23AnimationWorkletMutatorEEENS_10unique_ptrIN2cc21AnimationWorkletInputENS_14default_deleteIS9_EEEE13scoped_refptrINS3_37AnimationWorkletMutatorDispatcherImpl15OutputVectorRefEEiNS7_IN4base19ScopedClosureRunnerENSA_ISI_EEEEEED2Ev = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_23AnimationWorkletMutatorELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink14PersistentBaseINS_23AnimationWorkletMutatorELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_23AnimationWorkletMutatorEEEbPKT_ = comdat any

$_ZN5blink14PersistentBaseINS_23AnimationWorkletMutatorELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_ = comdat any

$_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_23AnimationWorkletMutatorEEENS_12KeyValuePairIS4_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERS4_RS9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_23AnimationWorkletMutatorEEENS_12KeyValuePairIS4_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_ = comdat any

$_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_23AnimationWorkletMutatorEEENS_12KeyValuePairIS4_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_ = comdat any

$_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_23AnimationWorkletMutatorEEENS_12KeyValuePairIS4_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF5MoverINS_12KeyValuePairIN5blink21CrossThreadPersistentINS2_23AnimationWorkletMutatorEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_18PartitionAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSD_IS9_EEEELb0EE4MoveEOSA_RSA_ = comdat any

$_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_23AnimationWorkletMutatorEEENS_12KeyValuePairIS4_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE12DeleteBucketERKSA_ = comdat any

$_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_23AnimationWorkletMutatorEEENS_12KeyValuePairIS4_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE4findEPS3_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN2cc21AnimationWorkletInputENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSE_IS8_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERKiS8_EENS_18HashTableAddResultISJ_S9_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN2cc21AnimationWorkletInputENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSE_IS8_EEEESF_NS_18PartitionAllocatorEE6ExpandEPS9_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN2cc21AnimationWorkletInputENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSE_IS8_EEEESF_NS_18PartitionAllocatorEE8RehashToEPS9_jSK_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN2cc22AnimationWorkletOutputENS2_14default_deleteIS5_EEEEEEmm = comdat any

@_ZTVN5blink37AnimationWorkletMutatorDispatcherImplE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::AnimationWorkletMutatorDispatcherImpl"*)* @_ZN5blink37AnimationWorkletMutatorDispatcherImplD2Ev to i8*), i8* bitcast (void (%"class.blink::AnimationWorkletMutatorDispatcherImpl"*)* @_ZN5blink37AnimationWorkletMutatorDispatcherImplD0Ev to i8*), i8* bitcast (void (%"class.blink::AnimationWorkletMutatorDispatcherImpl"*, %"class.cc::MutatorInputState"*)* @_ZN5blink37AnimationWorkletMutatorDispatcherImpl19MutateSynchronouslyENSt3__110unique_ptrIN2cc17MutatorInputStateENS1_14default_deleteIS4_EEEE to i8*), i8* bitcast (i1 (%"class.blink::AnimationWorkletMutatorDispatcherImpl"*, %"class.cc::MutatorInputState"*, i32, %"class.WTF::CrossThreadOnceFunction"*)* @_ZN5blink37AnimationWorkletMutatorDispatcherImpl20MutateAsynchronouslyENSt3__110unique_ptrIN2cc17MutatorInputStateENS1_14default_deleteIS4_EEEENS3_21MutateQueuingStrategyEN3WTF23CrossThreadOnceFunctionIFvNS3_12MutateStatusEEEE to i8*), i8* bitcast (i1 (%"class.blink::AnimationWorkletMutatorDispatcherImpl"*)* @_ZN5blink37AnimationWorkletMutatorDispatcherImpl11HasMutatorsEv to i8*)] }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [46 x i8] c"AnimationWorkletMutatorDispatcherImpl::mutate\00", align 1
@.str.1 = private unnamed_addr constant [64 x i8] c"Animation.AnimationWorklet.Dispatcher.SynchronousMutateDuration\00", align 1
@.str.2 = private unnamed_addr constant [51 x i8] c"AnimationWorkletMutatorDispatcherImpl::MutateAsync\00", align 1
@.str.3 = private unnamed_addr constant [65 x i8] c"Animation.AnimationWorklet.Dispatcher.AsynchronousMutateDuration\00", align 1
@.str.4 = private unnamed_addr constant [71 x i8] c"AnimationWorkletMutatorDispatcherImpl::RegisterAnimationWorkletMutator\00", align 1
@.str.5 = private unnamed_addr constant [73 x i8] c"AnimationWorkletMutatorDispatcherImpl::UnregisterAnimationWorkletMutator\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"RequestMutations\00", align 1
@.str.7 = private unnamed_addr constant [96 x i8] c"../../third_party/blink/renderer/platform/graphics/animation_worklet_mutator_dispatcher_impl.cc\00", align 1
@_ZN5blink12_GLOBAL__N_124g_next_async_mutation_idE = internal unnamed_addr global i32 0, align 4
@.str.8 = private unnamed_addr constant [11 x i8] c"operator()\00", align 1
@.str.9 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.12 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.13 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.14 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@_ZTVN4base16DefaultTickClockE = external unnamed_addr constant { [5 x i8*] }, align 8
@.str.15 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.16 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink21CrossThreadPersistentINS2_23AnimationWorkletMutatorEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEEEEPKcv = private unnamed_addr constant [173 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::CrossThreadPersistent<blink::AnimationWorkletMutator>, scoped_refptr<base::SingleThreadTaskRunner> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIiNSt3__110unique_ptrIN2cc21AnimationWorkletInputENS2_14default_deleteIS5_EEEEEEEEPKcv = private unnamed_addr constant [174 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<int, std::__1::unique_ptr<cc::AnimationWorkletInput, std::__1::default_delete<cc::AnimationWorkletInput> > >]\00", align 1
@.str.18 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.19 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN2cc22AnimationWorkletOutputENS1_14default_deleteIS4_EEEEEEPKcv = private unnamed_addr constant [151 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<cc::AnimationWorkletOutput, std::__1::default_delete<cc::AnimationWorkletOutput> >]\00", align 1
@_ZZN5blink37AnimationWorkletMutatorDispatcherImpl19MutateSynchronouslyENSt3__110unique_ptrIN2cc17MutatorInputStateENS1_14default_deleteIS4_EEEEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN5blink37AnimationWorkletMutatorDispatcherImpl18AsyncMutationsDoneEiN4base9TimeTicksEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN5blink37AnimationWorkletMutatorDispatcherImplC1E13scoped_refptrIN4base22SingleThreadTaskRunnerEE = hidden unnamed_addr alias void (%"class.blink::AnimationWorkletMutatorDispatcherImpl"*, %"class.base::SingleThreadTaskRunner"*), void (%"class.blink::AnimationWorkletMutatorDispatcherImpl"*, %"class.base::SingleThreadTaskRunner"*)* @_ZN5blink37AnimationWorkletMutatorDispatcherImplC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEE
@_ZN5blink37AnimationWorkletMutatorDispatcherImplD1Ev = hidden unnamed_addr alias void (%"class.blink::AnimationWorkletMutatorDispatcherImpl"*), void (%"class.blink::AnimationWorkletMutatorDispatcherImpl"*)* @_ZN5blink37AnimationWorkletMutatorDispatcherImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink37AnimationWorkletMutatorDispatcherImplC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::AnimationWorkletMutatorDispatcherImpl"*, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink37AnimationWorkletMutatorDispatcherImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 1
  %5 = bitcast %"class.WTF::HashMap"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false) #10
  %6 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 2, i32 0
  store %"class.base::SingleThreadTaskRunner"* %1, %"class.base::SingleThreadTaskRunner"** %6, align 8
  %7 = icmp eq %"class.base::SingleThreadTaskRunner"* %1, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  br label %11

11:                                               ; preds = %2, %8
  %12 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 3
  %13 = bitcast %"class.blink::MutatorClient"** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 28, i1 false)
  %14 = tail call noalias i8* @malloc(i64 24) #10
  %15 = bitcast i8* %14 to i64*
  store i64 1, i64* %15, align 8
  %16 = getelementptr inbounds i8, i8* %14, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #10
  %17 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 5, i32 0
  %18 = bitcast %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"** %17 to i8**
  store i8* %14, i8** %18, align 8
  %19 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 9
  %21 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 10, i32 0
  %22 = ptrtoint %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0 to i64
  %23 = bitcast %"class.base::internal::BindStateBase"** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 32, i1 false)
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %21, i64 %22) #10
  %24 = tail call i8* @_Znwm(i64 8) #11
  %25 = bitcast i8* %24 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base16DefaultTickClockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.292", %"class.std::__1::unique_ptr.292"* %20, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.base::TickClock"*, %"class.base::TickClock"** %26, align 8
  %28 = bitcast %"class.std::__1::unique_ptr.292"* %20 to i8**
  store i8* %24, i8** %28, align 8
  %29 = icmp eq %"class.base::TickClock"* %27, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %11
  %31 = bitcast %"class.base::TickClock"* %27 to void (%"class.base::TickClock"*)***
  %32 = load void (%"class.base::TickClock"*)**, void (%"class.base::TickClock"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.base::TickClock"*)*, void (%"class.base::TickClock"*)** %32, i64 1
  %34 = load void (%"class.base::TickClock"*)*, void (%"class.base::TickClock"*)** %33, align 8
  tail call void %34(%"class.base::TickClock"* nonnull %27) #10
  br label %35

35:                                               ; preds = %30, %11
  br i1 %7, label %44, label %36

36:                                               ; preds = %35
  %37 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %1, i64 0, i32 0, i32 0, i32 1
  %38 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw sub i32* %38, i32 1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %44

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %37, i64 -2
  %43 = bitcast %"class.base::RefCountedThreadSafe"* %42 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %43) #10
  br label %44

44:                                               ; preds = %35, %36, %41
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink37AnimationWorkletMutatorDispatcherImplD2Ev(%"class.blink::AnimationWorkletMutatorDispatcherImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink37AnimationWorkletMutatorDispatcherImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 10, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #10
  %4 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %5 = load %"class.base::TickClock"*, %"class.base::TickClock"** %4, align 8
  store %"class.base::TickClock"* null, %"class.base::TickClock"** %4, align 8
  %6 = icmp eq %"class.base::TickClock"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.base::TickClock"* %5 to void (%"class.base::TickClock"*)***
  %9 = load void (%"class.base::TickClock"*)**, void (%"class.base::TickClock"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.base::TickClock"*)*, void (%"class.base::TickClock"*)** %9, i64 1
  %11 = load void (%"class.base::TickClock"*)*, void (%"class.base::TickClock"*)** %10, align 8
  tail call void %11(%"class.base::TickClock"* nonnull %5) #10
  br label %12

12:                                               ; preds = %1, %7
  %13 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %14 = load %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"*, %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"** %13, align 8
  store %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"* null, %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"** %13, align 8
  %15 = icmp eq %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"* %14, null
  br i1 %15, label %25, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest", %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"* %14, i64 0, i32 2, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %17) #10
  %18 = getelementptr inbounds %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest", %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"* %14, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.cc::MutatorInputState"*, %"class.cc::MutatorInputState"** %18, align 8
  store %"class.cc::MutatorInputState"* null, %"class.cc::MutatorInputState"** %18, align 8
  %20 = icmp eq %"class.cc::MutatorInputState"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  tail call void @_ZN2cc17MutatorInputStateD1Ev(%"class.cc::MutatorInputState"* nonnull %19) #10
  %22 = bitcast %"class.cc::MutatorInputState"* %19 to i8*
  tail call void @_ZdlPv(i8* %22) #11
  br label %23

23:                                               ; preds = %21, %16
  %24 = bitcast %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"* %14 to i8*
  tail call void @_ZdlPv(i8* %24) #11
  br label %25

25:                                               ; preds = %12, %23
  %26 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %27 = load %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"*, %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"** %26, align 8
  store %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"* null, %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"** %26, align 8
  %28 = icmp eq %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"* %27, null
  br i1 %28, label %38, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest", %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"* %27, i64 0, i32 2, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %30) #10
  %31 = getelementptr inbounds %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest", %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"* %27, i64 0, i32 1, i32 0, i32 0, i32 0
  %32 = load %"class.cc::MutatorInputState"*, %"class.cc::MutatorInputState"** %31, align 8
  store %"class.cc::MutatorInputState"* null, %"class.cc::MutatorInputState"** %31, align 8
  %33 = icmp eq %"class.cc::MutatorInputState"* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  tail call void @_ZN2cc17MutatorInputStateD1Ev(%"class.cc::MutatorInputState"* nonnull %32) #10
  %35 = bitcast %"class.cc::MutatorInputState"* %32 to i8*
  tail call void @_ZdlPv(i8* %35) #11
  br label %36

36:                                               ; preds = %34, %29
  %37 = bitcast %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"* %27 to i8*
  tail call void @_ZdlPv(i8* %37) #11
  br label %38

38:                                               ; preds = %25, %36
  %39 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 6, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %39) #10
  %40 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 5, i32 0
  %41 = load %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"*, %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"** %40, align 8
  %42 = icmp eq %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"* %41, null
  br i1 %42, label %78, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef", %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"* %41, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef", %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw sub i32* %45, i32 1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %78

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.base::RefCountedThreadSafe.226", %"class.base::RefCountedThreadSafe.226"* %44, i64 2
  %50 = bitcast %"class.base::RefCountedThreadSafe.226"* %49 to %"class.std::__1::unique_ptr.230"**
  %51 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %50, align 8
  %52 = icmp eq %"class.std::__1::unique_ptr.230"* %51, null
  br i1 %52, label %76, label %53, !prof !2

53:                                               ; preds = %48
  %54 = bitcast %"class.std::__1::unique_ptr.230"* %51 to i8*
  %55 = getelementptr inbounds %"class.base::RefCountedThreadSafe.226", %"class.base::RefCountedThreadSafe.226"* %44, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %74, label %58, !prof !3

58:                                               ; preds = %53
  %59 = zext i32 %56 to i64
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %51, i64 %59
  br label %61

61:                                               ; preds = %68, %58
  %62 = phi %"class.std::__1::unique_ptr.230"* [ %69, %68 ], [ %51, %58 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"struct.cc::AnimationWorkletOutput"*, %"struct.cc::AnimationWorkletOutput"** %63, align 8
  store %"struct.cc::AnimationWorkletOutput"* null, %"struct.cc::AnimationWorkletOutput"** %63, align 8
  %65 = icmp eq %"struct.cc::AnimationWorkletOutput"* %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %61
  tail call void @_ZN2cc22AnimationWorkletOutputD1Ev(%"struct.cc::AnimationWorkletOutput"* nonnull %64) #10
  %67 = bitcast %"struct.cc::AnimationWorkletOutput"* %64 to i8*
  tail call void @_ZdlPv(i8* %67) #11
  br label %68

68:                                               ; preds = %66, %61
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %62, i64 1
  %70 = icmp eq %"class.std::__1::unique_ptr.230"* %69, %60
  br i1 %70, label %71, label %61

71:                                               ; preds = %68
  store i32 0, i32* %55, align 4
  %72 = bitcast %"class.base::RefCountedThreadSafe.226"* %49 to i8**
  %73 = load i8*, i8** %72, align 8
  br label %74

74:                                               ; preds = %71, %53
  %75 = phi i8* [ %73, %71 ], [ %54, %53 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %75) #10
  br label %76

76:                                               ; preds = %74, %48
  %77 = bitcast %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"* %41 to i8*
  tail call void @free(i8* %77) #10
  br label %78

78:                                               ; preds = %38, %43, %76
  %79 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 4, i32 0, i32 0
  %80 = load %"struct.WTF::KeyValuePair.182"*, %"struct.WTF::KeyValuePair.182"** %79, align 8
  %81 = icmp eq %"struct.WTF::KeyValuePair.182"* %80, null
  br i1 %81, label %104, label %82, !prof !2

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 4, i32 0, i32 1
  %84 = load i32, i32* %83, align 8
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %102, label %86

86:                                               ; preds = %82
  %87 = zext i32 %84 to i64
  br label %88

88:                                               ; preds = %99, %86
  %89 = phi i64 [ 0, %86 ], [ %100, %99 ]
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %80, i64 %89, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, -1
  br i1 %92, label %99, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %80, i64 %89, i32 1, i32 0, i32 0, i32 0
  %95 = load %"struct.cc::AnimationWorkletInput"*, %"struct.cc::AnimationWorkletInput"** %94, align 8
  store %"struct.cc::AnimationWorkletInput"* null, %"struct.cc::AnimationWorkletInput"** %94, align 8
  %96 = icmp eq %"struct.cc::AnimationWorkletInput"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %93
  tail call void @_ZN2cc21AnimationWorkletInputD1Ev(%"struct.cc::AnimationWorkletInput"* nonnull %95) #10
  %98 = bitcast %"struct.cc::AnimationWorkletInput"* %95 to i8*
  tail call void @_ZdlPv(i8* %98) #11
  br label %99

99:                                               ; preds = %97, %93, %88
  %100 = add nuw nsw i64 %89, 1
  %101 = icmp eq i64 %100, %87
  br i1 %101, label %102, label %88

102:                                              ; preds = %99, %82
  %103 = bitcast %"struct.WTF::KeyValuePair.182"* %80 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %103) #10
  store %"struct.WTF::KeyValuePair.182"* null, %"struct.WTF::KeyValuePair.182"** %79, align 8
  br label %104

104:                                              ; preds = %78, %102
  %105 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 2, i32 0
  %106 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %105, align 8
  %107 = icmp eq %"class.base::SingleThreadTaskRunner"* %106, null
  br i1 %107, label %116, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %106, i64 0, i32 0, i32 0, i32 1
  %110 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = atomicrmw sub i32* %110, i32 1 acq_rel
  %112 = icmp eq i32 %111, 1
  br i1 %112, label %113, label %116

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %109, i64 -2
  %115 = bitcast %"class.base::RefCountedThreadSafe"* %114 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %115) #10
  br label %116

116:                                              ; preds = %104, %108, %113
  %117 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 1
  tail call void @_ZN3WTF7HashMapIN5blink21CrossThreadPersistentINS1_23AnimationWorkletMutatorEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEENS_10MemberHashIS3_EENS_10HashTraitsIS4_EENSB_IS8_EENS_18PartitionAllocatorEED2Ev(%"class.WTF::HashMap"* %117) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF7HashMapIN5blink21CrossThreadPersistentINS1_23AnimationWorkletMutatorEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEENS_10MemberHashIS3_EENS_10HashTraitsIS4_EENSB_IS8_EENS_18PartitionAllocatorEED2Ev(%"class.WTF::HashMap"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0, i32 0
  %3 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair"* %3, null
  br i1 %4, label %52, label %5, !prof !2

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %50, label %9

9:                                                ; preds = %5
  %10 = zext i32 %7 to i64
  br label %11

11:                                               ; preds = %47, %9
  %12 = phi i64 [ 0, %9 ], [ %48, %47 ]
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %12, i32 0, i32 0, i32 0
  %14 = load %"class.blink::AnimationWorkletMutator"*, %"class.blink::AnimationWorkletMutator"** %13, align 8
  %15 = icmp eq %"class.blink::AnimationWorkletMutator"* %14, inttoptr (i64 -1 to %"class.blink::AnimationWorkletMutator"*)
  br i1 %15, label %47, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %12, i32 1, i32 0
  %18 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %17, align 8
  %19 = icmp eq %"class.base::SingleThreadTaskRunner"* %18, null
  br i1 %19, label %28, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %18, i64 0, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw sub i32* %22, i32 1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %28

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %21, i64 -2
  %27 = bitcast %"class.base::RefCountedThreadSafe"* %26 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %27) #10
  br label %28

28:                                               ; preds = %25, %20, %16
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %12, i32 0, i32 0, i32 1
  %30 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %29 to i64*
  %31 = load atomic i64, i64* %30 acquire, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %47, label %33

33:                                               ; preds = %28
  %34 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #10
  %35 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %34, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %35) #10
  %36 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #10
  %37 = load atomic i64, i64* %30 monotonic, align 8
  %38 = inttoptr i64 %37 to %"class.blink::PersistentNode"*
  %39 = icmp eq i64 %37, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %36, i64 0, i32 0, i32 0
  %42 = bitcast %"class.blink::CrossThreadPersistentRegion"* %36 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = inttoptr i64 %37 to i64*
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %38, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %45, align 8
  store %"class.blink::PersistentNode"* %38, %"class.blink::PersistentNode"** %41, align 8
  br label %46

46:                                               ; preds = %40, %33
  store atomic i64 0, i64* %30 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %35) #10
  br label %47

47:                                               ; preds = %46, %28, %11
  %48 = add nuw nsw i64 %12, 1
  %49 = icmp eq i64 %48, %10
  br i1 %49, label %50, label %11

50:                                               ; preds = %47, %5
  %51 = bitcast %"struct.WTF::KeyValuePair"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %51) #10
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %2, align 8
  br label %52

52:                                               ; preds = %1, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink37AnimationWorkletMutatorDispatcherImplD0Ev(%"class.blink::AnimationWorkletMutatorDispatcherImpl"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink37AnimationWorkletMutatorDispatcherImplD2Ev(%"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0) #10
  %2 = bitcast %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CompositorMutatorClient"* @_ZN5blink37AnimationWorkletMutatorDispatcherImpl28CreateCompositorThreadClientERN4base7WeakPtrIS0_EE13scoped_refptrINS1_22SingleThreadTaskRunnerEE(%"class.base::WeakPtr"* dereferenceable(16), %"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::CompositorMutatorClient"* @_ZN5blink37AnimationWorkletMutatorDispatcherImpl12CreateClientINS_23CompositorMutatorClientEEENSt3__110unique_ptrIT_NS3_14default_deleteIS5_EEEERN4base7WeakPtrIS0_EE13scoped_refptrINS9_22SingleThreadTaskRunnerEE(%"class.base::WeakPtr"* dereferenceable(16) %0, %"class.base::SingleThreadTaskRunner"* %1)
  ret %"class.blink::CompositorMutatorClient"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CompositorMutatorClient"* @_ZN5blink37AnimationWorkletMutatorDispatcherImpl12CreateClientINS_23CompositorMutatorClientEEENSt3__110unique_ptrIT_NS3_14default_deleteIS5_EEEERN4base7WeakPtrIS0_EE13scoped_refptrINS9_22SingleThreadTaskRunnerEE(%"class.base::WeakPtr"* dereferenceable(16), %"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::WeakPtr", align 8
  %5 = tail call i8* @_Znwm(i64 128) #11
  %6 = bitcast i8* %5 to %"class.blink::AnimationWorkletMutatorDispatcherImpl"*
  tail call void @_ZN5blink37AnimationWorkletMutatorDispatcherImplC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::AnimationWorkletMutatorDispatcherImpl"* nonnull %6, %"class.base::SingleThreadTaskRunner"* %1) #10
  %7 = bitcast %"class.base::WeakPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds i8, i8* %5, i64 112
  %9 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10, !noalias !4
  %10 = bitcast i8* %8 to %"class.base::internal::WeakReferenceOwner"*
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %10) #10, !noalias !4
  %11 = getelementptr inbounds i8, i8* %5, i64 120
  %12 = bitcast i8* %11 to i64*
  %13 = load i64, i64* %12, align 8, !noalias !4
  %14 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %14, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %13) #10
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10, !noalias !4
  %15 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.base::WeakPtr"* %4 to i64*
  %17 = load i64, i64* %16, align 8
  store %"class.base::internal::WeakReference::Flag"* null, %"class.base::internal::WeakReference::Flag"** %15, align 8
  %18 = bitcast %"class.base::WeakPtr"* %0 to i64*
  %19 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %19, align 8
  store i64 %17, i64* %18, align 8
  %21 = icmp eq %"class.base::internal::WeakReference::Flag"* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw sub i32* %23, i32 1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %28

26:                                               ; preds = %22
  call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %20) #10
  %27 = bitcast %"class.base::internal::WeakReference::Flag"* %20 to i8*
  call void @_ZdlPv(i8* %27) #11
  br label %28

28:                                               ; preds = %2, %22, %26
  %29 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0, i32 1
  store i64 %30, i64* %31, align 8
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  %32 = call i8* @_Znwm(i64 32) #11
  %33 = bitcast i8* %32 to %"class.blink::CompositorMutatorClient"*
  call void @_ZN5blink23CompositorMutatorClientC1ENSt3__110unique_ptrINS_37AnimationWorkletMutatorDispatcherImplENS1_14default_deleteIS3_EEEE(%"class.blink::CompositorMutatorClient"* nonnull %33, %"class.blink::AnimationWorkletMutatorDispatcherImpl"* nonnull %6) #10
  ret %"class.blink::CompositorMutatorClient"* %33
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MainThreadMutatorClient"* @_ZN5blink37AnimationWorkletMutatorDispatcherImpl22CreateMainThreadClientERN4base7WeakPtrIS0_EE13scoped_refptrINS1_22SingleThreadTaskRunnerEE(%"class.base::WeakPtr"* dereferenceable(16), %"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::MainThreadMutatorClient"* @_ZN5blink37AnimationWorkletMutatorDispatcherImpl12CreateClientINS_23MainThreadMutatorClientEEENSt3__110unique_ptrIT_NS3_14default_deleteIS5_EEEERN4base7WeakPtrIS0_EE13scoped_refptrINS9_22SingleThreadTaskRunnerEE(%"class.base::WeakPtr"* dereferenceable(16) %0, %"class.base::SingleThreadTaskRunner"* %1)
  ret %"class.blink::MainThreadMutatorClient"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::MainThreadMutatorClient"* @_ZN5blink37AnimationWorkletMutatorDispatcherImpl12CreateClientINS_23MainThreadMutatorClientEEENSt3__110unique_ptrIT_NS3_14default_deleteIS5_EEEERN4base7WeakPtrIS0_EE13scoped_refptrINS9_22SingleThreadTaskRunnerEE(%"class.base::WeakPtr"* dereferenceable(16), %"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::WeakPtr", align 8
  %5 = tail call i8* @_Znwm(i64 128) #11
  %6 = bitcast i8* %5 to %"class.blink::AnimationWorkletMutatorDispatcherImpl"*
  tail call void @_ZN5blink37AnimationWorkletMutatorDispatcherImplC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::AnimationWorkletMutatorDispatcherImpl"* nonnull %6, %"class.base::SingleThreadTaskRunner"* %1) #10
  %7 = bitcast %"class.base::WeakPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds i8, i8* %5, i64 112
  %9 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10, !noalias !7
  %10 = bitcast i8* %8 to %"class.base::internal::WeakReferenceOwner"*
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %10) #10, !noalias !7
  %11 = getelementptr inbounds i8, i8* %5, i64 120
  %12 = bitcast i8* %11 to i64*
  %13 = load i64, i64* %12, align 8, !noalias !7
  %14 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %14, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %13) #10
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10, !noalias !7
  %15 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.base::WeakPtr"* %4 to i64*
  %17 = load i64, i64* %16, align 8
  store %"class.base::internal::WeakReference::Flag"* null, %"class.base::internal::WeakReference::Flag"** %15, align 8
  %18 = bitcast %"class.base::WeakPtr"* %0 to i64*
  %19 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %19, align 8
  store i64 %17, i64* %18, align 8
  %21 = icmp eq %"class.base::internal::WeakReference::Flag"* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw sub i32* %23, i32 1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %28

26:                                               ; preds = %22
  call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %20) #10
  %27 = bitcast %"class.base::internal::WeakReference::Flag"* %20 to i8*
  call void @_ZdlPv(i8* %27) #11
  br label %28

28:                                               ; preds = %2, %22, %26
  %29 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0, i32 1
  store i64 %30, i64* %31, align 8
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  %32 = call i8* @_Znwm(i64 24) #11
  %33 = bitcast i8* %32 to %"class.blink::MainThreadMutatorClient"*
  call void @_ZN5blink23MainThreadMutatorClientC1ENSt3__110unique_ptrINS_37AnimationWorkletMutatorDispatcherImplENS1_14default_deleteIS3_EEEE(%"class.blink::MainThreadMutatorClient"* nonnull %33, %"class.blink::AnimationWorkletMutatorDispatcherImpl"* nonnull %6) #10
  ret %"class.blink::MainThreadMutatorClient"* %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink37AnimationWorkletMutatorDispatcherImpl19MutateSynchronouslyENSt3__110unique_ptrIN2cc17MutatorInputStateENS1_14default_deleteIS4_EEEE(%"class.blink::AnimationWorkletMutatorDispatcherImpl"* nocapture, %"class.cc::MutatorInputState"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.344", align 8
  %4 = alloca %"class.base::OnceCallback.344", align 8
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca %"class.base::ElapsedTimer", align 8
  %7 = alloca %"class.WTF::HashMap.178", align 8
  %8 = alloca %"class.base::WaitableEvent", align 8
  %9 = alloca %"class.WTF::CrossThreadOnceFunction.343", align 8
  %10 = alloca %"class.WTF::CrossThreadOnceFunction.343", align 8
  %11 = alloca %"class.base::TimeDelta", align 8
  %12 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %13 = and i8 %12, 25
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %21, label %15, !prof !2

15:                                               ; preds = %2
  %16 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %17 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %19 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %19, i64* %18, align 8
  %20 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %16, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, %"class.base::trace_event::TraceArguments"* null, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %21

21:                                               ; preds = %2, %15
  %22 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), %15 ]
  %23 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), %15 ]
  %24 = phi i64 [ -6148914691236517206, %2 ], [ %20, %15 ]
  %25 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 1, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp ne i32 %26, 0
  %28 = icmp ne %"class.cc::MutatorInputState"* %1, null
  %29 = and i1 %28, %27
  br i1 %29, label %30, label %119

30:                                               ; preds = %21
  %31 = bitcast %"class.base::ElapsedTimer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.base::ElapsedTimer", %"class.base::ElapsedTimer"* %6, i64 0, i32 0, i32 0, i32 0
  store i64 -6148914691236517206, i64* %32, align 8
  call void @_ZN4base12ElapsedTimerC1Ev(%"class.base::ElapsedTimer"* nonnull %6) #10
  %33 = bitcast %"class.WTF::HashMap.178"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #10
  call void @_ZNK5blink37AnimationWorkletMutatorDispatcherImpl14CreateInputMapERN2cc17MutatorInputStateE(%"class.WTF::HashMap.178"* nonnull sret %7, %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, %"class.cc::MutatorInputState"* nonnull dereferenceable(40) %1)
  %34 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 4
  %35 = bitcast %"class.WTF::HashMap.178"* %7 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.WTF::HashMap.178"* %34 to i64*
  %38 = load i64, i64* %37, align 8
  store atomic i64 %38, i64* %35 monotonic, align 8
  store atomic i64 %36, i64* %37 monotonic, align 8
  %39 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 4, i32 0, i32 1
  %40 = getelementptr inbounds %"class.WTF::HashMap.178", %"class.WTF::HashMap.178"* %7, i64 0, i32 0, i32 1
  %41 = load i32, i32* %39, align 4
  %42 = load i32, i32* %40, align 8
  store i32 %42, i32* %39, align 4
  store i32 %41, i32* %40, align 8
  %43 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 4, i32 0, i32 2
  %44 = getelementptr inbounds %"class.WTF::HashMap.178", %"class.WTF::HashMap.178"* %7, i64 0, i32 0, i32 2
  %45 = load i32, i32* %43, align 4
  %46 = load i32, i32* %44, align 4
  store i32 %46, i32* %43, align 4
  store i32 %45, i32* %44, align 4
  %47 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 4, i32 0, i32 3
  %48 = load i32, i32* %47, align 8
  %49 = and i32 %48, 2147483647
  %50 = getelementptr inbounds %"class.WTF::HashMap.178", %"class.WTF::HashMap.178"* %7, i64 0, i32 0, i32 3
  %51 = load i32, i32* %50, align 8
  %52 = and i32 %51, 2147483647
  %53 = and i32 %48, -2147483648
  %54 = or i32 %52, %53
  store i32 %54, i32* %47, align 8
  %55 = and i32 %51, -2147483648
  %56 = or i32 %55, %49
  store i32 %56, i32* %50, align 8
  %57 = getelementptr inbounds %"class.WTF::HashMap.178", %"class.WTF::HashMap.178"* %7, i64 0, i32 0, i32 0
  %58 = inttoptr i64 %38 to %"struct.WTF::KeyValuePair.182"*
  %59 = icmp eq i64 %38, 0
  br i1 %59, label %81, label %60, !prof !2

60:                                               ; preds = %30
  %61 = icmp eq i32 %41, 0
  br i1 %61, label %78, label %62

62:                                               ; preds = %60
  %63 = zext i32 %41 to i64
  br label %64

64:                                               ; preds = %75, %62
  %65 = phi i64 [ 0, %62 ], [ %76, %75 ]
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %58, i64 %65, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, -1
  br i1 %68, label %75, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %58, i64 %65, i32 1, i32 0, i32 0, i32 0
  %71 = load %"struct.cc::AnimationWorkletInput"*, %"struct.cc::AnimationWorkletInput"** %70, align 8
  store %"struct.cc::AnimationWorkletInput"* null, %"struct.cc::AnimationWorkletInput"** %70, align 8
  %72 = icmp eq %"struct.cc::AnimationWorkletInput"* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %69
  call void @_ZN2cc21AnimationWorkletInputD1Ev(%"struct.cc::AnimationWorkletInput"* nonnull %71) #10
  %74 = bitcast %"struct.cc::AnimationWorkletInput"* %71 to i8*
  call void @_ZdlPv(i8* %74) #11
  br label %75

75:                                               ; preds = %73, %69, %64
  %76 = add nuw nsw i64 %65, 1
  %77 = icmp eq i64 %76, %63
  br i1 %77, label %78, label %64

78:                                               ; preds = %75, %60
  %79 = inttoptr i64 %38 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %79) #10
  store %"struct.WTF::KeyValuePair.182"* null, %"struct.WTF::KeyValuePair.182"** %57, align 8
  %80 = load i32, i32* %43, align 4
  br label %81

81:                                               ; preds = %30, %78
  %82 = phi i32 [ %46, %30 ], [ %80, %78 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #10
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %118, label %84

84:                                               ; preds = %81
  %85 = bitcast %"class.base::WaitableEvent"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %85) #10
  %86 = bitcast %"class.base::WaitableEvent"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 16, i1 false)
  call void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"* nonnull %8, i32 0, i32 1) #10
  %87 = bitcast %"class.WTF::CrossThreadOnceFunction.343"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #10
  %88 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction.343", %"class.WTF::CrossThreadOnceFunction.343"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %89 = ptrtoint %"class.base::WaitableEvent"* %8 to i64
  %90 = bitcast %"class.base::OnceCallback.344"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90)
  %91 = call i8* @_Znwm(i64 56) #11, !noalias !10
  %92 = bitcast i8* %91 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %92, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMNS_13WaitableEventEFvvEJN3WTF28CrossThreadUnretainedWrapperIS3_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMNS_13WaitableEventEFvvEJN3WTF28CrossThreadUnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !10
  %93 = getelementptr inbounds i8, i8* %91, i64 32
  %94 = bitcast i8* %93 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.base::WaitableEvent"*)* @_ZN4base13WaitableEvent6SignalEv to i64), i64 0>, <2 x i64>* %94, align 8, !noalias !10
  %95 = getelementptr inbounds i8, i8* %91, i64 48
  %96 = bitcast i8* %95 to i64*
  store i64 %89, i64* %96, align 8, !noalias !10
  %97 = bitcast %"class.base::OnceCallback.344"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #10, !noalias !17
  %98 = getelementptr inbounds %"class.base::OnceCallback.344", %"class.base::OnceCallback.344"* %4, i64 0, i32 0, i32 0, i32 0
  %99 = ptrtoint i8* %91 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %98, align 8, !noalias !18
  %100 = getelementptr inbounds %"class.base::OnceCallback.344", %"class.base::OnceCallback.344"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %100, align 8, !noalias !18
  %101 = getelementptr inbounds %"class.base::OnceCallback.344", %"class.base::OnceCallback.344"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %101) #10, !noalias !18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #10, !noalias !17
  %102 = getelementptr inbounds %"class.base::OnceCallback.344", %"class.base::OnceCallback.344"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %102) #10, !noalias !17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90)
  %103 = bitcast %"class.WTF::CrossThreadOnceFunction.343"* %10 to i64*
  store i64 %99, i64* %103, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %88, align 8
  call void @_ZN5blink37AnimationWorkletMutatorDispatcherImpl16RequestMutationsEN3WTF23CrossThreadOnceFunctionIFvvEEE(%"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, %"class.WTF::CrossThreadOnceFunction.343"* nonnull %10)
  %104 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction.343", %"class.WTF::CrossThreadOnceFunction.343"* %10, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %104) #10
  notail call void @_ZN4base13WaitableEvent4WaitEv(%"class.base::WaitableEvent"* nonnull %8) #10
  %105 = call zeroext i1 @_ZN5blink37AnimationWorkletMutatorDispatcherImpl26ApplyMutationsOnHostThreadEv(%"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0)
  %106 = load atomic i64, i64* @_ZZN5blink37AnimationWorkletMutatorDispatcherImpl19MutateSynchronouslyENSt3__110unique_ptrIN2cc17MutatorInputStateENS1_14default_deleteIS4_EEEEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %107 = inttoptr i64 %106 to %"class.base::HistogramBase"*
  %108 = icmp eq i64 %106, 0
  br i1 %108, label %109, label %112

109:                                              ; preds = %84
  %110 = call %"class.base::HistogramBase"* @_ZN4base9Histogram26FactoryMicrosecondsTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i64 1, i64 100000, i32 50, i32 1) #10
  %111 = ptrtoint %"class.base::HistogramBase"* %110 to i64
  store atomic i64 %111, i64* @_ZZN5blink37AnimationWorkletMutatorDispatcherImpl19MutateSynchronouslyENSt3__110unique_ptrIN2cc17MutatorInputStateENS1_14default_deleteIS4_EEEEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %112

112:                                              ; preds = %84, %109
  %113 = phi %"class.base::HistogramBase"* [ %107, %84 ], [ %110, %109 ]
  %114 = bitcast %"class.base::TimeDelta"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114) #10
  %115 = call i64 @_ZNK4base12ElapsedTimer7ElapsedEv(%"class.base::ElapsedTimer"* nonnull %6) #10
  %116 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %11, i64 0, i32 0
  store i64 %115, i64* %116, align 8
  call void @_ZN4base13HistogramBase30AddTimeMicrosecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %113, %"class.base::TimeDelta"* nonnull dereferenceable(8) %11) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #10
  %117 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction.343", %"class.WTF::CrossThreadOnceFunction.343"* %9, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %117) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #10
  call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %85) #10
  br label %118

118:                                              ; preds = %81, %112
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #10
  br label %119

119:                                              ; preds = %21, %118
  %120 = icmp eq i8* %22, null
  br i1 %120, label %125, label %121

121:                                              ; preds = %119
  %122 = load i8, i8* %22, align 1
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %125, label %124

124:                                              ; preds = %121
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %22, i8* %23, i64 %24) #10
  br label %125

125:                                              ; preds = %119, %121, %124
  %126 = icmp eq %"class.cc::MutatorInputState"* %1, null
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  call void @_ZN2cc17MutatorInputStateD1Ev(%"class.cc::MutatorInputState"* nonnull %1) #10
  %128 = bitcast %"class.cc::MutatorInputState"* %1 to i8*
  call void @_ZdlPv(i8* %128) #11
  br label %129

129:                                              ; preds = %125, %127
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN4base12ElapsedTimerC1Ev(%"class.base::ElapsedTimer"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink37AnimationWorkletMutatorDispatcherImpl14CreateInputMapERN2cc17MutatorInputStateE(%"class.WTF::HashMap.178"* noalias sret, %"class.blink::AnimationWorkletMutatorDispatcherImpl"* nocapture readonly, %"class.cc::MutatorInputState"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.std::__1::unique_ptr.183", align 8
  %6 = bitcast %"class.WTF::HashMap.178"* %0 to i8*
  %7 = bitcast %"class.WTF::HashMap.178"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 24, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 20, i1 false) #10
  %8 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %1, i64 0, i32 1, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %1, i64 0, i32 1, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %1, i64 0, i32 1, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %15
  br i1 %10, label %34, label %17

17:                                               ; preds = %3
  %18 = icmp eq i32 %14, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %17, %23
  %20 = phi %"struct.WTF::KeyValuePair"* [ %24, %23 ], [ %12, %17 ]
  %21 = bitcast %"struct.WTF::KeyValuePair"* %20 to i64*
  %22 = load i64, i64* %21, align 8
  switch i64 %22, label %26 [
    i64 -1, label %23
    i64 0, label %23
  ]

23:                                               ; preds = %19, %19
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 1
  %25 = icmp eq %"struct.WTF::KeyValuePair"* %24, %16
  br i1 %25, label %34, label %19

26:                                               ; preds = %19, %17
  %27 = phi %"struct.WTF::KeyValuePair"* [ %12, %17 ], [ %20, %19 ]
  %28 = icmp eq %"struct.WTF::KeyValuePair"* %27, %16
  br i1 %28, label %34, label %29

29:                                               ; preds = %26
  %30 = bitcast i32* %4 to i8*
  %31 = bitcast %"class.std::__1::unique_ptr.183"* %5 to i8*
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.183"* %5, i64 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.WTF::HashMap.178", %"class.WTF::HashMap.178"* %0, i64 0, i32 0
  br label %35

34:                                               ; preds = %23, %53, %63, %60, %3, %26
  ret void

35:                                               ; preds = %29, %63
  %36 = phi %"struct.WTF::KeyValuePair"* [ %27, %29 ], [ %57, %63 ]
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::AnimationWorkletMutator"*, %"class.blink::AnimationWorkletMutator"** %37, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #10
  store i32 -1431655766, i32* %4, align 4
  %39 = bitcast %"class.blink::AnimationWorkletMutator"* %38 to i32 (%"class.blink::AnimationWorkletMutator"*)***
  %40 = load i32 (%"class.blink::AnimationWorkletMutator"*)**, i32 (%"class.blink::AnimationWorkletMutator"*)*** %39, align 8
  %41 = getelementptr inbounds i32 (%"class.blink::AnimationWorkletMutator"*)*, i32 (%"class.blink::AnimationWorkletMutator"*)** %40, i64 3
  %42 = load i32 (%"class.blink::AnimationWorkletMutator"*)*, i32 (%"class.blink::AnimationWorkletMutator"*)** %41, align 8
  %43 = call i32 %42(%"class.blink::AnimationWorkletMutator"* %38) #10
  store i32 %43, i32* %4, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #10
  store %"struct.cc::AnimationWorkletInput"* inttoptr (i64 -6148914691236517206 to %"struct.cc::AnimationWorkletInput"*), %"struct.cc::AnimationWorkletInput"** %32, align 8
  %44 = call %"struct.cc::AnimationWorkletInput"* @_ZN2cc17MutatorInputState16TakeWorkletStateEi(%"class.cc::MutatorInputState"* %2, i32 %43) #10
  store %"struct.cc::AnimationWorkletInput"* %44, %"struct.cc::AnimationWorkletInput"** %32, align 8
  %45 = icmp eq %"struct.cc::AnimationWorkletInput"* %44, null
  br i1 %45, label %46, label %47

46:                                               ; preds = %35
  store %"struct.cc::AnimationWorkletInput"* null, %"struct.cc::AnimationWorkletInput"** %32, align 8
  br label %53

47:                                               ; preds = %35
  %48 = call { %"struct.WTF::KeyValuePair.182"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN2cc21AnimationWorkletInputENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSE_IS8_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERKiS8_EENS_18HashTableAddResultISJ_S9_EEOT0_OT1_(%"class.WTF::HashTable.179"* %33, i32* nonnull dereferenceable(4) %4, %"class.std::__1::unique_ptr.183"* nonnull dereferenceable(8) %5) #10
  %49 = load %"struct.cc::AnimationWorkletInput"*, %"struct.cc::AnimationWorkletInput"** %32, align 8
  store %"struct.cc::AnimationWorkletInput"* null, %"struct.cc::AnimationWorkletInput"** %32, align 8
  %50 = icmp eq %"struct.cc::AnimationWorkletInput"* %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %47
  call void @_ZN2cc21AnimationWorkletInputD1Ev(%"struct.cc::AnimationWorkletInput"* nonnull %49) #10
  %52 = bitcast %"struct.cc::AnimationWorkletInput"* %49 to i8*
  call void @_ZdlPv(i8* %52) #11
  br label %53

53:                                               ; preds = %46, %47, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #10
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 1
  %55 = icmp eq %"struct.WTF::KeyValuePair"* %54, %16
  br i1 %55, label %34, label %56

56:                                               ; preds = %53, %60
  %57 = phi %"struct.WTF::KeyValuePair"* [ %61, %60 ], [ %54, %53 ]
  %58 = bitcast %"struct.WTF::KeyValuePair"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  switch i64 %59, label %63 [
    i64 -1, label %60
    i64 0, label %60
  ]

60:                                               ; preds = %56, %56
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 1
  %62 = icmp eq %"struct.WTF::KeyValuePair"* %61, %16
  br i1 %62, label %34, label %56

63:                                               ; preds = %56
  %64 = icmp eq %"struct.WTF::KeyValuePair"* %57, %16
  br i1 %64, label %34, label %35
}

declare void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"*, i32, i32) unnamed_addr #5

declare void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"*) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink37AnimationWorkletMutatorDispatcherImpl16RequestMutationsEN3WTF23CrossThreadOnceFunctionIFvvEEE(%"class.blink::AnimationWorkletMutatorDispatcherImpl"* nocapture readonly, %"class.WTF::CrossThreadOnceFunction.343"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.344", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.base::OnceCallback.344", align 8
  %6 = alloca %"class.blink::CrossThreadWeakPersistent", align 8
  %7 = alloca %"class.base::OnceCallback.344", align 8
  %8 = alloca %"class.base::RepeatingCallback", align 8
  %9 = alloca %"class.base::OnceCallback.344", align 8
  %10 = alloca %"class.WTF::CrossThreadOnceFunction.343", align 8
  %11 = alloca %"class.base::OnceCallback.344", align 8
  %12 = alloca %"class.base::RepeatingCallback", align 8
  %13 = alloca %"class.base::OnceCallback.344", align 8
  %14 = alloca %"class.WTF::CrossThreadOnceFunction.343", align 8
  %15 = alloca %"class.base::Location", align 8
  %16 = alloca %"class.WTF::CrossThreadOnceFunction.343", align 8
  %17 = alloca %"class.blink::CrossThreadWeakPersistent", align 8
  %18 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 1, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %32

21:                                               ; preds = %2
  %22 = bitcast %"class.base::OnceCallback.344"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  %23 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction.343", %"class.WTF::CrossThreadOnceFunction.343"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.WTF::CrossThreadOnceFunction.343"* %1 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.base::OnceCallback.344"* %11 to i64*
  store i64 %25, i64* %26, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %23, align 8
  %27 = getelementptr inbounds %"class.base::OnceCallback.344", %"class.base::OnceCallback.344"* %11, i64 0, i32 0
  %28 = inttoptr i64 %25 to %"class.base::internal::BindStateBase"*
  %29 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %28, i64 0, i32 1
  %30 = bitcast void ()** %29 to void (%"class.base::internal::BindStateBase"*)**
  %31 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %30, align 8
  tail call void %31(%"class.base::internal::BindStateBase"* %28) #10
  br label %391

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 5, i32 0
  %34 = load %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"*, %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef", %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"* %34, i64 0, i32 1
  %36 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef", %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"* %34, i64 0, i32 1, i32 0, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = icmp ult i32 %37, %19
  br i1 %38, label %39, label %79

39:                                               ; preds = %32
  %40 = lshr i32 %37, 2
  %41 = add nuw i32 %37, 1
  %42 = add i32 %41, %40
  %43 = icmp ugt i32 %42, 4
  %44 = select i1 %43, i32 %42, i32 4
  %45 = icmp ugt i32 %44, %19
  %46 = select i1 %45, i32 %44, i32 %19
  %47 = icmp ult i32 %37, %46
  br i1 %47, label %48, label %79, !prof !2

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.WTF::Vector.227", %"class.WTF::Vector.227"* %35, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %49, align 8
  %51 = icmp eq %"class.std::__1::unique_ptr.230"* %50, null
  %52 = zext i32 %46 to i64
  %53 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN2cc22AnimationWorkletOutputENS2_14default_deleteIS5_EEEEEEmm(i64 %52) #10
  %54 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %53, i8* getelementptr inbounds ([151 x i8], [151 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN2cc22AnimationWorkletOutputENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #10
  br i1 %51, label %55, label %60

55:                                               ; preds = %48
  %56 = ptrtoint i8* %54 to i64
  %57 = bitcast %"class.WTF::Vector.227"* %35 to i64*
  store atomic i64 %56, i64* %57 monotonic, align 8
  %58 = lshr i64 %53, 3
  %59 = trunc i64 %58 to i32
  store i32 %59, i32* %36, align 8
  br label %79

60:                                               ; preds = %48
  %61 = lshr i64 %53, 3
  %62 = ptrtoint i8* %54 to i64
  %63 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %49, align 8
  %64 = icmp ne i8* %54, null
  %65 = icmp ne %"class.std::__1::unique_ptr.230"* %63, null
  %66 = and i1 %64, %65
  %67 = bitcast %"class.std::__1::unique_ptr.230"* %63 to i8*
  br i1 %66, label %68, label %75, !prof !2

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef", %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"* %34, i64 0, i32 1, i32 0, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i64
  %72 = shl nuw nsw i64 %71, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %54, i8* nonnull align 8 %67, i64 %72, i1 false) #10
  %73 = bitcast %"class.WTF::Vector.227"* %35 to i8**
  %74 = load i8*, i8** %73, align 8
  br label %75

75:                                               ; preds = %68, %60
  %76 = phi i8* [ %74, %68 ], [ %67, %60 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %76) #10
  %77 = bitcast %"class.WTF::Vector.227"* %35 to i64*
  store atomic i64 %62, i64* %77 monotonic, align 8
  %78 = trunc i64 %61 to i32
  store i32 %78, i32* %36, align 8
  br label %79

79:                                               ; preds = %75, %55, %39, %32
  %80 = getelementptr inbounds %"class.WTF::Vector.227", %"class.WTF::Vector.227"* %35, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef", %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"* %34, i64 0, i32 1, i32 0, i32 0, i32 2
  %83 = load i32, i32* %82, align 4
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %81, i64 %84
  %86 = zext i32 %19 to i64
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %81, i64 %86
  %88 = bitcast %"class.std::__1::unique_ptr.230"* %85 to i8*
  %89 = ptrtoint %"class.std::__1::unique_ptr.230"* %87 to i64
  %90 = ptrtoint %"class.std::__1::unique_ptr.230"* %85 to i64
  %91 = sub i64 %89, %90
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 %91, i1 false) #10
  store i32 %19, i32* %82, align 4
  %92 = bitcast %"class.base::RepeatingCallback"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #10
  %93 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %93, align 8
  %94 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction.343", %"class.WTF::CrossThreadOnceFunction.343"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %95 = bitcast %"class.WTF::CrossThreadOnceFunction.343"* %1 to i64*
  %96 = load i64, i64* %95, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %94, align 8
  %97 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction.343", %"class.WTF::CrossThreadOnceFunction.343"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = bitcast %"class.base::OnceCallback.344"* %13 to i64*
  store i64 %96, i64* %98, align 8, !alias.scope !21
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %97, align 8, !noalias !21
  call void @_ZN4base14BarrierClosureEiNS_12OnceCallbackIFvvEEE(%"class.base::RepeatingCallback"* nonnull sret %12, i32 %19, %"class.base::OnceCallback.344"* nonnull %13) #10
  %99 = getelementptr inbounds %"class.base::OnceCallback.344", %"class.base::OnceCallback.344"* %13, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %99) #10
  %100 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction.343", %"class.WTF::CrossThreadOnceFunction.343"* %14, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %100) #10
  %101 = load i32, i32* %18, align 4
  %102 = icmp eq i32 %101, 0
  %103 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 1, i32 0, i32 0
  %104 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %103, align 8
  %105 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 1, i32 0, i32 1
  %106 = load i32, i32* %105, align 8
  %107 = zext i32 %106 to i64
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %104, i64 %107
  br i1 %102, label %159, label %109

109:                                              ; preds = %79
  %110 = icmp eq i32 %106, 0
  br i1 %110, label %118, label %111

111:                                              ; preds = %109, %115
  %112 = phi %"struct.WTF::KeyValuePair"* [ %116, %115 ], [ %104, %109 ]
  %113 = bitcast %"struct.WTF::KeyValuePair"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  switch i64 %114, label %118 [
    i64 -1, label %115
    i64 0, label %115
  ]

115:                                              ; preds = %111, %111
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %112, i64 1
  %117 = icmp eq %"struct.WTF::KeyValuePair"* %116, %108
  br i1 %117, label %159, label %111

118:                                              ; preds = %111, %109
  %119 = phi %"struct.WTF::KeyValuePair"* [ %104, %109 ], [ %112, %111 ]
  %120 = icmp eq %"struct.WTF::KeyValuePair"* %119, %108
  br i1 %120, label %159, label %121

121:                                              ; preds = %118
  %122 = bitcast %"class.base::OnceCallback.344"* %7 to i8*
  %123 = bitcast %"class.base::RepeatingCallback"* %8 to i8*
  %124 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %8, i64 0, i32 0
  %125 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %12, i64 0, i32 0
  %126 = getelementptr inbounds %"class.base::OnceCallback.344", %"class.base::OnceCallback.344"* %7, i64 0, i32 0
  %127 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %8, i64 0, i32 0, i32 0
  %128 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 4, i32 0, i32 0
  %129 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 4, i32 0, i32 1
  %130 = bitcast %"class.base::Location"* %15 to i8*
  %131 = bitcast %"class.blink::CrossThreadWeakPersistent"* %17 to i8*
  %132 = getelementptr inbounds %"class.blink::CrossThreadWeakPersistent", %"class.blink::CrossThreadWeakPersistent"* %17, i64 0, i32 0
  %133 = getelementptr inbounds %"class.blink::CrossThreadWeakPersistent", %"class.blink::CrossThreadWeakPersistent"* %17, i64 0, i32 0, i32 0
  %134 = getelementptr inbounds %"class.blink::CrossThreadWeakPersistent", %"class.blink::CrossThreadWeakPersistent"* %17, i64 0, i32 0, i32 1
  %135 = getelementptr inbounds %"class.blink::CrossThreadPersistentNodePtr.364", %"class.blink::CrossThreadPersistentNodePtr.364"* %134, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = bitcast %"class.blink::CrossThreadPersistentNodePtr.364"* %134 to i64*
  %137 = bitcast %"class.base::OnceCallback.344"* %5 to i8*
  %138 = bitcast %"class.blink::CrossThreadWeakPersistent"* %6 to i8*
  %139 = getelementptr inbounds %"class.blink::CrossThreadWeakPersistent", %"class.blink::CrossThreadWeakPersistent"* %6, i64 0, i32 0
  %140 = bitcast %"class.logging::CheckError"* %4 to i8*
  %141 = getelementptr inbounds %"class.blink::CrossThreadWeakPersistent", %"class.blink::CrossThreadWeakPersistent"* %6, i64 0, i32 0, i32 0
  %142 = bitcast %"class.blink::CrossThreadWeakPersistent"* %6 to i64*
  %143 = getelementptr inbounds %"class.blink::CrossThreadWeakPersistent", %"class.blink::CrossThreadWeakPersistent"* %6, i64 0, i32 0, i32 1
  %144 = bitcast %"class.blink::CrossThreadPersistentNodePtr.364"* %143 to i64*
  %145 = bitcast %"class.base::OnceCallback.344"* %3 to i8*
  %146 = getelementptr inbounds %"class.base::OnceCallback.344", %"class.base::OnceCallback.344"* %5, i64 0, i32 0, i32 0, i32 0
  %147 = getelementptr inbounds %"class.base::OnceCallback.344", %"class.base::OnceCallback.344"* %3, i64 0, i32 0, i32 0, i32 0
  %148 = bitcast %"class.WTF::CrossThreadOnceFunction.343"* %16 to i64*
  %149 = getelementptr inbounds %"class.base::OnceCallback.344", %"class.base::OnceCallback.344"* %3, i64 0, i32 0
  %150 = getelementptr inbounds %"class.base::OnceCallback.344", %"class.base::OnceCallback.344"* %5, i64 0, i32 0
  %151 = bitcast %"class.base::OnceCallback.344"* %9 to i8*
  %152 = bitcast %"class.WTF::CrossThreadOnceFunction.343"* %10 to i8*
  %153 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction.343", %"class.WTF::CrossThreadOnceFunction.343"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %154 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction.343", %"class.WTF::CrossThreadOnceFunction.343"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %155 = bitcast %"class.base::OnceCallback.344"* %9 to i64*
  %156 = getelementptr inbounds %"class.base::OnceCallback.344", %"class.base::OnceCallback.344"* %9, i64 0, i32 0
  %157 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction.343", %"class.WTF::CrossThreadOnceFunction.343"* %10, i64 0, i32 0, i32 0
  %158 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction.343", %"class.WTF::CrossThreadOnceFunction.343"* %16, i64 0, i32 0, i32 0
  br label %161

159:                                              ; preds = %115, %379, %389, %386, %79, %118
  %160 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %12, i64 0, i32 0, i32 0
  br label %391

161:                                              ; preds = %121, %389
  %162 = phi i32 [ 0, %121 ], [ %370, %389 ]
  %163 = phi %"struct.WTF::KeyValuePair"* [ %119, %121 ], [ %383, %389 ]
  %164 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %163, i64 0, i32 0, i32 0, i32 0
  %165 = load %"class.blink::AnimationWorkletMutator"*, %"class.blink::AnimationWorkletMutator"** %164, align 8
  %166 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %163, i64 0, i32 1, i32 0
  %167 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %166, align 8
  %168 = icmp eq %"class.base::SingleThreadTaskRunner"* %167, null
  br i1 %168, label %172, label %169

169:                                              ; preds = %161
  %170 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %167, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = atomicrmw add i32* %170, i32 1 monotonic
  br label %172

172:                                              ; preds = %161, %169
  %173 = bitcast %"class.blink::AnimationWorkletMutator"* %165 to i32 (%"class.blink::AnimationWorkletMutator"*)***
  %174 = load i32 (%"class.blink::AnimationWorkletMutator"*)**, i32 (%"class.blink::AnimationWorkletMutator"*)*** %173, align 8
  %175 = getelementptr inbounds i32 (%"class.blink::AnimationWorkletMutator"*)*, i32 (%"class.blink::AnimationWorkletMutator"*)** %174, i64 3
  %176 = load i32 (%"class.blink::AnimationWorkletMutator"*)*, i32 (%"class.blink::AnimationWorkletMutator"*)** %175, align 8
  %177 = call i32 %176(%"class.blink::AnimationWorkletMutator"* %165) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123)
  %178 = call i8* @_Znwm(i64 8) #11
  %179 = bitcast i8* %178 to %"class.base::ScopedClosureRunner"*
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %124, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %125) #10
  call void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"* nonnull %126, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %124) #10
  call void @_ZN4base19ScopedClosureRunnerC1ENS_12OnceCallbackIFvvEEE(%"class.base::ScopedClosureRunner"* nonnull %179, %"class.base::OnceCallback.344"* nonnull %7) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %126) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %127) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123)
  %180 = ptrtoint i8* %178 to i64
  %181 = load %"struct.WTF::KeyValuePair.182"*, %"struct.WTF::KeyValuePair.182"** %128, align 8
  %182 = icmp eq %"struct.WTF::KeyValuePair.182"* %181, null
  %183 = load i32, i32* %129, align 8
  br i1 %182, label %239, label %184

184:                                              ; preds = %172
  %185 = add i32 %183, -1
  %186 = zext i32 %185 to i64
  %187 = shl i32 %177, 15
  %188 = xor i32 %187, -1
  %189 = add i32 %177, %188
  %190 = lshr i32 %189, 10
  %191 = xor i32 %190, %189
  %192 = mul i32 %191, 9
  %193 = lshr i32 %192, 6
  %194 = xor i32 %193, %192
  %195 = shl i32 %194, 11
  %196 = xor i32 %195, -1
  %197 = add i32 %194, %196
  %198 = lshr i32 %197, 16
  %199 = xor i32 %198, %197
  %200 = and i32 %185, %199
  %201 = zext i32 %200 to i64
  %202 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %181, i64 %201
  %203 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %202, i64 0, i32 0
  %204 = load i32, i32* %203, align 4
  %205 = icmp eq i32 %204, %177
  br i1 %205, label %234, label %206

206:                                              ; preds = %184
  %207 = xor i32 %199, -1
  %208 = lshr i32 %197, 23
  %209 = add i32 %208, %207
  %210 = shl i32 %209, 12
  %211 = xor i32 %210, %209
  %212 = lshr i32 %211, 7
  %213 = xor i32 %212, %211
  %214 = shl i32 %213, 2
  %215 = xor i32 %214, %213
  %216 = lshr i32 %215, 20
  %217 = xor i32 %216, %215
  %218 = or i32 %217, 1
  %219 = zext i32 %218 to i64
  br label %220

220:                                              ; preds = %225, %206
  %221 = phi i32 [ %204, %206 ], [ %232, %225 ]
  %222 = phi i64 [ %201, %206 ], [ %229, %225 ]
  %223 = phi i64 [ 0, %206 ], [ %227, %225 ]
  %224 = icmp eq i32 %221, 0
  br i1 %224, label %239, label %225

225:                                              ; preds = %220
  %226 = icmp eq i64 %223, 0
  %227 = select i1 %226, i64 %219, i64 %223
  %228 = add i64 %227, %222
  %229 = and i64 %228, %186
  %230 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %181, i64 %229
  %231 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %230, i64 0, i32 0
  %232 = load i32, i32* %231, align 4
  %233 = icmp eq i32 %232, %177
  br i1 %233, label %234, label %220

234:                                              ; preds = %225, %184
  %235 = phi %"struct.WTF::KeyValuePair.182"* [ %202, %184 ], [ %230, %225 ]
  %236 = icmp eq %"struct.WTF::KeyValuePair.182"* %235, null
  br i1 %236, label %239, label %237

237:                                              ; preds = %234
  %238 = zext i32 %183 to i64
  br label %242

239:                                              ; preds = %220, %234, %172
  %240 = zext i32 %183 to i64
  %241 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %181, i64 %240
  br label %242

242:                                              ; preds = %237, %239
  %243 = phi i64 [ %238, %237 ], [ %240, %239 ]
  %244 = phi %"struct.WTF::KeyValuePair.182"* [ %235, %237 ], [ %241, %239 ]
  %245 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %181, i64 %243
  %246 = icmp eq %"struct.WTF::KeyValuePair.182"* %244, %245
  br i1 %246, label %368, label %247

247:                                              ; preds = %242
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %130) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %15, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.7, i64 0, i64 0), i32 337) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %131) #10
  store %"class.blink::AnimationWorkletMutator"* %165, %"class.blink::AnimationWorkletMutator"** %133, align 8, !alias.scope !24
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %135, align 8, !alias.scope !24
  %248 = ptrtoint %"class.blink::AnimationWorkletMutator"* %165 to i64
  switch i64 %248, label %249 [
    i64 0, label %267
    i64 -1, label %267
  ]

249:                                              ; preds = %247
  %250 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #10, !noalias !24
  %251 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %250, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %251) #10, !noalias !24
  %252 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() #10, !noalias !24
  %253 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %252, i64 0, i32 0, i32 0
  %254 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %253, align 8, !noalias !24
  %255 = icmp eq %"class.blink::PersistentNode"* %254, null
  br i1 %255, label %256, label %259, !prof !3

256:                                              ; preds = %249
  %257 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %252, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %257) #10
  %258 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %253, align 8
  br label %259

259:                                              ; preds = %256, %249
  %260 = phi %"class.blink::PersistentNode"* [ %258, %256 ], [ %254, %249 ]
  %261 = bitcast %"class.blink::PersistentNode"* %260 to i64*
  %262 = load i64, i64* %261, align 8, !noalias !24
  %263 = bitcast %"class.blink::CrossThreadPersistentRegion"* %252 to i64*
  store i64 %262, i64* %263, align 8, !noalias !24
  %264 = bitcast %"class.blink::PersistentNode"* %260 to %"class.blink::PersistentBase.363"**
  store %"class.blink::PersistentBase.363"* %132, %"class.blink::PersistentBase.363"** %264, align 8, !noalias !24
  %265 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %260, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_23AnimationWorkletMutatorELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %265, align 8
  %266 = ptrtoint %"class.blink::PersistentNode"* %260 to i64
  store atomic i64 %266, i64* %136 release, align 8, !alias.scope !24
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %251) #10
  br label %267

267:                                              ; preds = %247, %247, %259
  %268 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %244, i64 0, i32 1
  %269 = add nsw i32 %162, 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %137)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %138) #10, !noalias !27
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %138, i8 0, i64 16, i1 false) #10, !alias.scope !30, !noalias !27
  %270 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #10, !noalias !33
  %271 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %270, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %271) #10, !noalias !33
  %272 = load %"class.blink::AnimationWorkletMutator"*, %"class.blink::AnimationWorkletMutator"** %133, align 8, !noalias !33
  call void @_ZN5blink14PersistentBaseINS_23AnimationWorkletMutatorELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.363"* nonnull %139, %"class.blink::AnimationWorkletMutator"* %272) #10, !noalias !27
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %271) #10, !noalias !27
  %273 = getelementptr inbounds %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.183"* %268, i64 0, i32 0, i32 0, i32 0
  %274 = bitcast %"class.std::__1::unique_ptr.183"* %268 to i64*
  %275 = load i64, i64* %274, align 8, !noalias !27
  store %"struct.cc::AnimationWorkletInput"* null, %"struct.cc::AnimationWorkletInput"** %273, align 8, !noalias !27
  %276 = load %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"*, %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"** %33, align 8, !noalias !27
  %277 = icmp eq %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"* %276, null
  br i1 %277, label %284, label %278

278:                                              ; preds = %267
  %279 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef", %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"* %276, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %280 = atomicrmw add i32* %279, i32 1 monotonic, !noalias !27
  %281 = icmp sgt i32 %280, 0
  br i1 %281, label %284, label %282

282:                                              ; preds = %278
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140) #10, !noalias !27
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.13, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i64 0, i64 0)) #10, !noalias !27
  %283 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10, !noalias !27
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10, !noalias !27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140) #10, !noalias !27
  br label %284

284:                                              ; preds = %282, %278, %267
  %285 = ptrtoint %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"* %276 to i64
  %286 = call i8* @_Znwm(i64 88) #11, !noalias !34
  %287 = bitcast i8* %286 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %287, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink37AnimationWorkletMutatorDispatcherImpl16RequestMutationsEN3WTF23CrossThreadOnceFunctionIFvvEEEE3$_1JNS3_25CrossThreadWeakPersistentINS3_23AnimationWorkletMutatorEEENSt3__110unique_ptrIN2cc21AnimationWorkletInputENSD_14default_deleteISG_EEEE13scoped_refptrINS4_15OutputVectorRefEEiNSE_INS_19ScopedClosureRunnerENSH_ISN_EEEEEEES7_E7RunOnceEPNS0_13BindStateBaseE" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink37AnimationWorkletMutatorDispatcherImpl16RequestMutationsEN3WTF23CrossThreadOnceFunctionIFvvEEEE3$_1JNS2_25CrossThreadWeakPersistentINS2_23AnimationWorkletMutatorEEENSt3__110unique_ptrIN2cc21AnimationWorkletInputENSC_14default_deleteISF_EEEE13scoped_refptrINS3_15OutputVectorRefEEiNSD_INS_19ScopedClosureRunnerENSG_ISM_EEEEEE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !34
  %288 = getelementptr inbounds i8, i8* %286, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %288, i8 0, i64 16, i1 false) #10, !noalias !27
  %289 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #10, !noalias !27
  %290 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %289, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %290) #10, !noalias !27
  %291 = getelementptr inbounds i8, i8* %286, i64 48
  %292 = bitcast i8* %291 to i64*
  %293 = load atomic i64, i64* %292 acquire, align 8, !noalias !27
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %307, label %295

295:                                              ; preds = %284
  %296 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() #10, !noalias !27
  %297 = load atomic i64, i64* %292 monotonic, align 8, !noalias !27
  %298 = inttoptr i64 %297 to %"class.blink::PersistentNode"*
  %299 = icmp eq i64 %297, 0
  br i1 %299, label %306, label %300

300:                                              ; preds = %295
  %301 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %296, i64 0, i32 0, i32 0
  %302 = bitcast %"class.blink::CrossThreadPersistentRegion"* %296 to i64*
  %303 = load i64, i64* %302, align 8, !noalias !27
  %304 = inttoptr i64 %297 to i64*
  store i64 %303, i64* %304, align 8, !noalias !27
  %305 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %298, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %305, align 8, !noalias !27
  store %"class.blink::PersistentNode"* %298, %"class.blink::PersistentNode"** %301, align 8, !noalias !27
  br label %306

306:                                              ; preds = %300, %295
  store atomic i64 0, i64* %292 release, align 8, !noalias !27
  br label %307

307:                                              ; preds = %306, %284
  %308 = load i64, i64* %142, align 8, !noalias !27
  %309 = bitcast i8* %288 to i64*
  store i64 %308, i64* %309, align 8, !noalias !27
  store %"class.blink::AnimationWorkletMutator"* null, %"class.blink::AnimationWorkletMutator"** %141, align 8, !noalias !27
  %310 = load atomic i64, i64* %144 monotonic, align 8, !noalias !27
  store atomic i64 %310, i64* %292 monotonic, align 8, !noalias !27
  store atomic i64 0, i64* %144 monotonic, align 8, !noalias !27
  %311 = load atomic i64, i64* %292 acquire, align 8, !noalias !27
  %312 = icmp eq i64 %311, 0
  br i1 %312, label %318, label %313

313:                                              ; preds = %307
  %314 = load atomic i64, i64* %292 monotonic, align 8, !noalias !27
  %315 = inttoptr i64 %314 to %"class.blink::PersistentNode"*
  %316 = inttoptr i64 %314 to i8**
  store i8* %288, i8** %316, align 8, !noalias !27
  %317 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %315, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_23AnimationWorkletMutatorELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %317, align 8, !noalias !27
  br label %318

318:                                              ; preds = %313, %307
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %290) #10, !noalias !27
  %319 = getelementptr inbounds i8, i8* %286, i64 56
  %320 = bitcast i8* %319 to i64*
  store i64 %275, i64* %320, align 8, !noalias !27
  %321 = getelementptr inbounds i8, i8* %286, i64 64
  %322 = bitcast i8* %321 to i64*
  store i64 %285, i64* %322, align 8, !noalias !27
  %323 = getelementptr inbounds i8, i8* %286, i64 72
  %324 = bitcast i8* %323 to i32*
  store i32 %162, i32* %324, align 4, !noalias !27
  %325 = getelementptr inbounds i8, i8* %286, i64 80
  %326 = bitcast i8* %325 to i64*
  store i64 %180, i64* %326, align 8, !noalias !27
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %145) #10, !noalias !27
  %327 = ptrtoint i8* %286 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %146, align 8, !noalias !39
  store i64 %327, i64* %148, align 8, !alias.scope !39
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %147, align 8, !noalias !39
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %149) #10, !noalias !39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %145) #10, !noalias !27
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %150) #10, !noalias !27
  %328 = load atomic i64, i64* %144 acquire, align 8, !noalias !27
  %329 = icmp eq i64 %328, 0
  br i1 %329, label %344, label %330

330:                                              ; preds = %318
  %331 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #10, !noalias !27
  %332 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %331, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %332) #10, !noalias !27
  %333 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() #10, !noalias !27
  %334 = load atomic i64, i64* %144 monotonic, align 8, !noalias !27
  %335 = inttoptr i64 %334 to %"class.blink::PersistentNode"*
  %336 = icmp eq i64 %334, 0
  br i1 %336, label %343, label %337

337:                                              ; preds = %330
  %338 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %333, i64 0, i32 0, i32 0
  %339 = bitcast %"class.blink::CrossThreadPersistentRegion"* %333 to i64*
  %340 = load i64, i64* %339, align 8, !noalias !27
  %341 = inttoptr i64 %334 to i64*
  store i64 %340, i64* %341, align 8, !noalias !27
  %342 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %335, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %342, align 8, !noalias !27
  store %"class.blink::PersistentNode"* %335, %"class.blink::PersistentNode"** %338, align 8, !noalias !27
  br label %343

343:                                              ; preds = %337, %330
  store atomic i64 0, i64* %144 release, align 8, !noalias !27
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %332) #10, !noalias !27
  br label %344

344:                                              ; preds = %318, %343
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %138) #10, !noalias !27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %137)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %151)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %152)
  %345 = bitcast %"class.base::SingleThreadTaskRunner"* %167 to %"class.base::TaskRunner"*
  %346 = load i64, i64* %148, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %153, align 8
  store i64 %346, i64* %155, align 8, !alias.scope !42
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %154, align 8, !noalias !42
  %347 = bitcast %"class.base::SingleThreadTaskRunner"* %167 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.344"*, i64)***
  %348 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.344"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.344"*, i64)*** %347, align 8
  %349 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.344"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.344"*, i64)** %348, align 8
  %350 = call zeroext i1 %349(%"class.base::TaskRunner"* %345, %"class.base::Location"* nonnull dereferenceable(32) %15, %"class.base::OnceCallback.344"* nonnull %9, i64 0) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %156) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %157) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %151)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %152)
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %158) #10
  %351 = load atomic i64, i64* %136 acquire, align 8
  %352 = icmp eq i64 %351, 0
  br i1 %352, label %367, label %353

353:                                              ; preds = %344
  %354 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #10
  %355 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %354, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %355) #10
  %356 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() #10
  %357 = load atomic i64, i64* %136 monotonic, align 8
  %358 = inttoptr i64 %357 to %"class.blink::PersistentNode"*
  %359 = icmp eq i64 %357, 0
  br i1 %359, label %366, label %360

360:                                              ; preds = %353
  %361 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %356, i64 0, i32 0, i32 0
  %362 = bitcast %"class.blink::CrossThreadPersistentRegion"* %356 to i64*
  %363 = load i64, i64* %362, align 8
  %364 = inttoptr i64 %357 to i64*
  store i64 %363, i64* %364, align 8
  %365 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %358, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %365, align 8
  store %"class.blink::PersistentNode"* %358, %"class.blink::PersistentNode"** %361, align 8
  br label %366

366:                                              ; preds = %360, %353
  store atomic i64 0, i64* %136 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %355) #10
  br label %367

367:                                              ; preds = %366, %344
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %131) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %130) #10
  br label %369

368:                                              ; preds = %242
  call void @_ZN4base19ScopedClosureRunnerD1Ev(%"class.base::ScopedClosureRunner"* nonnull %179) #10
  call void @_ZdlPv(i8* nonnull %178) #11
  br label %369

369:                                              ; preds = %367, %368
  %370 = phi i32 [ %269, %367 ], [ %162, %368 ]
  br i1 %168, label %379, label %371

371:                                              ; preds = %369
  %372 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %167, i64 0, i32 0, i32 0, i32 1
  %373 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %372, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %374 = atomicrmw sub i32* %373, i32 1 acq_rel
  %375 = icmp eq i32 %374, 1
  br i1 %375, label %376, label %379

376:                                              ; preds = %371
  %377 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %372, i64 -2
  %378 = bitcast %"class.base::RefCountedThreadSafe"* %377 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %378) #10
  br label %379

379:                                              ; preds = %369, %371, %376
  %380 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %163, i64 1
  %381 = icmp eq %"struct.WTF::KeyValuePair"* %380, %108
  br i1 %381, label %159, label %382

382:                                              ; preds = %379, %386
  %383 = phi %"struct.WTF::KeyValuePair"* [ %387, %386 ], [ %380, %379 ]
  %384 = bitcast %"struct.WTF::KeyValuePair"* %383 to i64*
  %385 = load i64, i64* %384, align 8
  switch i64 %385, label %389 [
    i64 -1, label %386
    i64 0, label %386
  ]

386:                                              ; preds = %382, %382
  %387 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %383, i64 1
  %388 = icmp eq %"struct.WTF::KeyValuePair"* %387, %108
  br i1 %388, label %159, label %382

389:                                              ; preds = %382
  %390 = icmp eq %"struct.WTF::KeyValuePair"* %383, %108
  br i1 %390, label %159, label %161

391:                                              ; preds = %159, %21
  %392 = phi %"class.base::internal::CallbackBase"* [ %160, %159 ], [ %27, %21 ]
  %393 = phi i8* [ %92, %159 ], [ %22, %21 ]
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %392) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %393) #10
  ret void
}

declare void @_ZN4base13WaitableEvent4WaitEv(%"class.base::WaitableEvent"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink37AnimationWorkletMutatorDispatcherImpl26ApplyMutationsOnHostThreadEv(%"class.blink::AnimationWorkletMutatorDispatcherImpl"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 5, i32 0
  %3 = load %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"*, %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef", %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef", %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"* %3, i64 0, i32 1, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %5, i64 %8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 3
  br label %76

13:                                               ; preds = %88, %1
  %14 = phi i8 [ 0, %1 ], [ %89, %88 ]
  %15 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 4
  %16 = getelementptr inbounds %"class.WTF::HashMap.178", %"class.WTF::HashMap.178"* %15, i64 0, i32 0, i32 0
  %17 = load %"struct.WTF::KeyValuePair.182"*, %"struct.WTF::KeyValuePair.182"** %16, align 8
  %18 = icmp eq %"struct.WTF::KeyValuePair.182"* %17, null
  br i1 %18, label %43, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 4, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %39, label %23

23:                                               ; preds = %19
  %24 = zext i32 %21 to i64
  br label %25

25:                                               ; preds = %36, %23
  %26 = phi i64 [ 0, %23 ], [ %37, %36 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %17, i64 %26, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, -1
  br i1 %29, label %36, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %17, i64 %26, i32 1, i32 0, i32 0, i32 0
  %32 = load %"struct.cc::AnimationWorkletInput"*, %"struct.cc::AnimationWorkletInput"** %31, align 8
  store %"struct.cc::AnimationWorkletInput"* null, %"struct.cc::AnimationWorkletInput"** %31, align 8
  %33 = icmp eq %"struct.cc::AnimationWorkletInput"* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %30
  tail call void @_ZN2cc21AnimationWorkletInputD1Ev(%"struct.cc::AnimationWorkletInput"* nonnull %32) #10
  %35 = bitcast %"struct.cc::AnimationWorkletInput"* %32 to i8*
  tail call void @_ZdlPv(i8* %35) #11
  br label %36

36:                                               ; preds = %34, %30, %25
  %37 = add nuw nsw i64 %26, 1
  %38 = icmp eq i64 %37, %24
  br i1 %38, label %39, label %25

39:                                               ; preds = %36, %19
  %40 = bitcast %"struct.WTF::KeyValuePair.182"* %17 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %40) #10
  %41 = bitcast %"class.WTF::HashMap.178"* %15 to i64*
  store atomic i64 0, i64* %41 monotonic, align 8
  store i32 0, i32* %20, align 8
  %42 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 4, i32 0, i32 2
  store i32 0, i32* %42, align 4
  br label %43

43:                                               ; preds = %13, %39
  %44 = load %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"*, %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"** %2, align 8
  %45 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef", %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"* %44, i64 0, i32 1
  %46 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef", %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"* %44, i64 0, i32 1, i32 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %73, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef", %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"* %44, i64 0, i32 1, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %69, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.WTF::Vector.227", %"class.WTF::Vector.227"* %45, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %54, align 8
  %56 = zext i32 %51 to i64
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %55, i64 %56
  br label %58

58:                                               ; preds = %65, %53
  %59 = phi %"class.std::__1::unique_ptr.230"* [ %66, %65 ], [ %55, %53 ]
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %59, i64 0, i32 0, i32 0, i32 0
  %61 = load %"struct.cc::AnimationWorkletOutput"*, %"struct.cc::AnimationWorkletOutput"** %60, align 8
  store %"struct.cc::AnimationWorkletOutput"* null, %"struct.cc::AnimationWorkletOutput"** %60, align 8
  %62 = icmp eq %"struct.cc::AnimationWorkletOutput"* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %58
  tail call void @_ZN2cc22AnimationWorkletOutputD1Ev(%"struct.cc::AnimationWorkletOutput"* nonnull %61) #10
  %64 = bitcast %"struct.cc::AnimationWorkletOutput"* %61 to i8*
  tail call void @_ZdlPv(i8* %64) #11
  br label %65

65:                                               ; preds = %63, %58
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %59, i64 1
  %67 = icmp eq %"class.std::__1::unique_ptr.230"* %66, %57
  br i1 %67, label %68, label %58

68:                                               ; preds = %65
  store i32 0, i32* %50, align 4
  br label %69

69:                                               ; preds = %68, %49
  %70 = bitcast %"class.WTF::Vector.227"* %45 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = bitcast %"class.WTF::Vector.227"* %45 to i64*
  store atomic i64 0, i64* %72 monotonic, align 8
  store i32 0, i32* %46, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %71) #10
  br label %73

73:                                               ; preds = %43, %69
  %74 = and i8 %14, 1
  %75 = icmp ne i8 %74, 0
  ret i1 %75

76:                                               ; preds = %11, %88
  %77 = phi %"class.std::__1::unique_ptr.230"* [ %5, %11 ], [ %90, %88 ]
  %78 = phi i8 [ 0, %11 ], [ %89, %88 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"struct.cc::AnimationWorkletOutput"*, %"struct.cc::AnimationWorkletOutput"** %79, align 8
  %81 = icmp eq %"struct.cc::AnimationWorkletOutput"* %80, null
  br i1 %81, label %88, label %82

82:                                               ; preds = %76
  %83 = load %"class.blink::MutatorClient"*, %"class.blink::MutatorClient"** %12, align 8
  store %"struct.cc::AnimationWorkletOutput"* null, %"struct.cc::AnimationWorkletOutput"** %79, align 8
  %84 = bitcast %"class.blink::MutatorClient"* %83 to void (%"class.blink::MutatorClient"*, %"struct.cc::AnimationWorkletOutput"*)***
  %85 = load void (%"class.blink::MutatorClient"*, %"struct.cc::AnimationWorkletOutput"*)**, void (%"class.blink::MutatorClient"*, %"struct.cc::AnimationWorkletOutput"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.blink::MutatorClient"*, %"struct.cc::AnimationWorkletOutput"*)*, void (%"class.blink::MutatorClient"*, %"struct.cc::AnimationWorkletOutput"*)** %85, i64 3
  %87 = load void (%"class.blink::MutatorClient"*, %"struct.cc::AnimationWorkletOutput"*)*, void (%"class.blink::MutatorClient"*, %"struct.cc::AnimationWorkletOutput"*)** %86, align 8
  tail call void %87(%"class.blink::MutatorClient"* %83, %"struct.cc::AnimationWorkletOutput"* nonnull %80) #10
  br label %88

88:                                               ; preds = %76, %82
  %89 = phi i8 [ 1, %82 ], [ %78, %76 ]
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %77, i64 1
  %91 = icmp eq %"class.std::__1::unique_ptr.230"* %90, %9
  br i1 %91, label %13, label %76
}

declare %"class.base::HistogramBase"* @_ZN4base9Histogram26FactoryMicrosecondsTimeGetEPKcNS_9TimeDeltaES3_ji(i8*, i64, i64, i32, i32) local_unnamed_addr #5

declare void @_ZN4base13HistogramBase30AddTimeMicrosecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"*, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #5

declare i64 @_ZNK4base12ElapsedTimer7ElapsedEv(%"class.base::ElapsedTimer"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink37AnimationWorkletMutatorDispatcherImpl8NowTicksEv(%"class.blink::AnimationWorkletMutatorDispatcherImpl"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %3 = load %"class.base::TickClock"*, %"class.base::TickClock"** %2, align 8
  %4 = bitcast %"class.base::TickClock"* %3 to i64 (%"class.base::TickClock"*)***
  %5 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %5, i64 2
  %7 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %6, align 8
  %8 = tail call i64 %7(%"class.base::TickClock"* %3) #10
  ret i64 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink37AnimationWorkletMutatorDispatcherImpl20MutateAsynchronouslyENSt3__110unique_ptrIN2cc17MutatorInputStateENS1_14default_deleteIS4_EEEENS3_21MutateQueuingStrategyEN3WTF23CrossThreadOnceFunctionIFvNS3_12MutateStatusEEEE(%"class.blink::AnimationWorkletMutatorDispatcherImpl"*, %"class.cc::MutatorInputState"*, i32, %"class.WTF::CrossThreadOnceFunction"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %8 = alloca %"class.WTF::HashMap.178", align 8
  %9 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %10 = ptrtoint %"class.cc::MutatorInputState"* %1 to i64
  %11 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 1, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp ne i32 %12, 0
  %14 = icmp ne %"class.cc::MutatorInputState"* %1, null
  %15 = and i1 %14, %13
  br i1 %15, label %16, label %159

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %18 = load %"class.base::TickClock"*, %"class.base::TickClock"** %17, align 8
  %19 = bitcast %"class.base::TickClock"* %18 to i64 (%"class.base::TickClock"*)***
  %20 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %19, align 8
  %21 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %20, i64 2
  %22 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %21, align 8
  %23 = tail call i64 %22(%"class.base::TickClock"* %18) #10
  %24 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 4
  %25 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 4, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %103, label %28

28:                                               ; preds = %16
  switch i32 %2, label %103 [
    i32 0, label %162
    i32 1, label %29
    i32 2, label %57
  ]

29:                                               ; preds = %28
  %30 = bitcast %"class.WTF::CrossThreadOnceFunction"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = tail call i8* @_Znwm(i64 24) #11
  %32 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = bitcast %"class.WTF::CrossThreadOnceFunction"* %3 to i64*
  %34 = load i64, i64* %33, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %32, align 8
  %35 = bitcast i8* %31 to i64*
  store i64 %23, i64* %35, align 8
  %36 = getelementptr inbounds i8, i8* %31, i64 8
  %37 = bitcast i8* %36 to i64*
  store i64 %10, i64* %37, align 8
  %38 = getelementptr inbounds i8, i8* %31, i64 16
  %39 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %40 = bitcast i8* %38 to i64*
  store i64 %34, i64* %40, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %39, align 8
  %41 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  %42 = ptrtoint i8* %31 to i64
  %43 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 7
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.255", %"class.std::__1::unique_ptr.255"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"*, %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"** %44, align 8
  %46 = bitcast %"class.std::__1::unique_ptr.255"* %43 to i64*
  store i64 %42, i64* %46, align 8
  %47 = icmp eq %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"* %45, null
  br i1 %47, label %165, label %48

48:                                               ; preds = %29
  %49 = getelementptr inbounds %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest", %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"* %45, i64 0, i32 2, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %49) #10
  %50 = getelementptr inbounds %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest", %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"* %45, i64 0, i32 1, i32 0, i32 0, i32 0
  %51 = load %"class.cc::MutatorInputState"*, %"class.cc::MutatorInputState"** %50, align 8
  store %"class.cc::MutatorInputState"* null, %"class.cc::MutatorInputState"** %50, align 8
  %52 = icmp eq %"class.cc::MutatorInputState"* %51, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %48
  call void @_ZN2cc17MutatorInputStateD1Ev(%"class.cc::MutatorInputState"* nonnull %51) #10
  %54 = bitcast %"class.cc::MutatorInputState"* %51 to i8*
  call void @_ZdlPv(i8* %54) #11
  br label %55

55:                                               ; preds = %53, %48
  %56 = bitcast %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"* %45 to i8*
  call void @_ZdlPv(i8* %56) #11
  br label %165

57:                                               ; preds = %28
  %58 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 8
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.255", %"class.std::__1::unique_ptr.255"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"*, %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"** %59, align 8
  %61 = icmp eq %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"* %60, null
  br i1 %61, label %76, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest", %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"* %60, i64 0, i32 0, i32 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest", %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"* %60, i64 0, i32 2
  %66 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #10
  %67 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %65, i64 0, i32 0, i32 0, i32 0, i32 0
  %68 = bitcast %"class.WTF::CrossThreadOnceFunction"* %65 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %69, i64* %70, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %67, align 8
  %71 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  %72 = inttoptr i64 %69 to %"class.base::internal::BindStateBase"*
  %73 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %72, i64 0, i32 1
  %74 = bitcast void ()** %73 to void (%"class.base::internal::BindStateBase"*, i32)**
  %75 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %74, align 8
  tail call void %75(%"class.base::internal::BindStateBase"* %72, i32 2) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %71) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #10
  br label %76

76:                                               ; preds = %57, %62
  %77 = phi i64 [ %23, %57 ], [ %64, %62 ]
  %78 = bitcast %"class.WTF::CrossThreadOnceFunction"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78)
  %79 = call i8* @_Znwm(i64 24) #11
  %80 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %81 = bitcast %"class.WTF::CrossThreadOnceFunction"* %3 to i64*
  %82 = load i64, i64* %81, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %80, align 8
  %83 = bitcast i8* %79 to i64*
  store i64 %77, i64* %83, align 8
  %84 = getelementptr inbounds i8, i8* %79, i64 8
  %85 = bitcast i8* %84 to i64*
  store i64 %10, i64* %85, align 8
  %86 = getelementptr inbounds i8, i8* %79, i64 16
  %87 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %88 = bitcast i8* %86 to i64*
  store i64 %82, i64* %88, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %87, align 8
  %89 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %89) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78)
  %90 = ptrtoint i8* %79 to i64
  %91 = load %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"*, %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"** %59, align 8
  %92 = bitcast %"class.std::__1::unique_ptr.255"* %58 to i64*
  store i64 %90, i64* %92, align 8
  %93 = icmp eq %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"* %91, null
  br i1 %93, label %165, label %94

94:                                               ; preds = %76
  %95 = getelementptr inbounds %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest", %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"* %91, i64 0, i32 2, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %95) #10
  %96 = getelementptr inbounds %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest", %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"* %91, i64 0, i32 1, i32 0, i32 0, i32 0
  %97 = load %"class.cc::MutatorInputState"*, %"class.cc::MutatorInputState"** %96, align 8
  store %"class.cc::MutatorInputState"* null, %"class.cc::MutatorInputState"** %96, align 8
  %98 = icmp eq %"class.cc::MutatorInputState"* %97, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %94
  call void @_ZN2cc17MutatorInputStateD1Ev(%"class.cc::MutatorInputState"* nonnull %97) #10
  %100 = bitcast %"class.cc::MutatorInputState"* %97 to i8*
  call void @_ZdlPv(i8* %100) #11
  br label %101

101:                                              ; preds = %99, %94
  %102 = bitcast %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"* %91 to i8*
  call void @_ZdlPv(i8* %102) #11
  br label %165

103:                                              ; preds = %28, %16
  %104 = bitcast %"class.WTF::HashMap.178"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #10
  call void @_ZNK5blink37AnimationWorkletMutatorDispatcherImpl14CreateInputMapERN2cc17MutatorInputStateE(%"class.WTF::HashMap.178"* nonnull sret %8, %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, %"class.cc::MutatorInputState"* nonnull dereferenceable(40) %1)
  %105 = bitcast %"class.WTF::HashMap.178"* %8 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.WTF::HashMap.178"* %24 to i64*
  %108 = load i64, i64* %107, align 8
  store atomic i64 %108, i64* %105 monotonic, align 8
  store atomic i64 %106, i64* %107 monotonic, align 8
  %109 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 4, i32 0, i32 1
  %110 = getelementptr inbounds %"class.WTF::HashMap.178", %"class.WTF::HashMap.178"* %8, i64 0, i32 0, i32 1
  %111 = load i32, i32* %109, align 4
  %112 = load i32, i32* %110, align 8
  store i32 %112, i32* %109, align 4
  store i32 %111, i32* %110, align 8
  %113 = getelementptr inbounds %"class.WTF::HashMap.178", %"class.WTF::HashMap.178"* %8, i64 0, i32 0, i32 2
  %114 = load i32, i32* %25, align 4
  %115 = load i32, i32* %113, align 4
  store i32 %115, i32* %25, align 4
  store i32 %114, i32* %113, align 4
  %116 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 4, i32 0, i32 3
  %117 = load i32, i32* %116, align 8
  %118 = and i32 %117, 2147483647
  %119 = getelementptr inbounds %"class.WTF::HashMap.178", %"class.WTF::HashMap.178"* %8, i64 0, i32 0, i32 3
  %120 = load i32, i32* %119, align 8
  %121 = and i32 %120, 2147483647
  %122 = and i32 %117, -2147483648
  %123 = or i32 %121, %122
  store i32 %123, i32* %116, align 8
  %124 = and i32 %120, -2147483648
  %125 = or i32 %124, %118
  store i32 %125, i32* %119, align 8
  %126 = getelementptr inbounds %"class.WTF::HashMap.178", %"class.WTF::HashMap.178"* %8, i64 0, i32 0, i32 0
  %127 = inttoptr i64 %108 to %"struct.WTF::KeyValuePair.182"*
  %128 = icmp eq i64 %108, 0
  br i1 %128, label %150, label %129, !prof !2

129:                                              ; preds = %103
  %130 = icmp eq i32 %111, 0
  br i1 %130, label %147, label %131

131:                                              ; preds = %129
  %132 = zext i32 %111 to i64
  br label %133

133:                                              ; preds = %144, %131
  %134 = phi i64 [ 0, %131 ], [ %145, %144 ]
  %135 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %127, i64 %134, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, -1
  br i1 %137, label %144, label %138

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %127, i64 %134, i32 1, i32 0, i32 0, i32 0
  %140 = load %"struct.cc::AnimationWorkletInput"*, %"struct.cc::AnimationWorkletInput"** %139, align 8
  store %"struct.cc::AnimationWorkletInput"* null, %"struct.cc::AnimationWorkletInput"** %139, align 8
  %141 = icmp eq %"struct.cc::AnimationWorkletInput"* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %138
  call void @_ZN2cc21AnimationWorkletInputD1Ev(%"struct.cc::AnimationWorkletInput"* nonnull %140) #10
  %143 = bitcast %"struct.cc::AnimationWorkletInput"* %140 to i8*
  call void @_ZdlPv(i8* %143) #11
  br label %144

144:                                              ; preds = %142, %138, %133
  %145 = add nuw nsw i64 %134, 1
  %146 = icmp eq i64 %145, %132
  br i1 %146, label %147, label %133

147:                                              ; preds = %144, %129
  %148 = inttoptr i64 %108 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %148) #10
  store %"struct.WTF::KeyValuePair.182"* null, %"struct.WTF::KeyValuePair.182"** %126, align 8
  %149 = load i32, i32* %25, align 4
  br label %150

150:                                              ; preds = %103, %147
  %151 = phi i32 [ %115, %103 ], [ %149, %147 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #10
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %159, label %153

153:                                              ; preds = %150
  %154 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %155 = bitcast %"class.WTF::CrossThreadOnceFunction"* %3 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"class.WTF::CrossThreadOnceFunction"* %9 to i64*
  store i64 %156, i64* %157, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %154, align 8
  call void @_ZN5blink37AnimationWorkletMutatorDispatcherImpl28MutateAsynchronouslyInternalEN4base9TimeTicksEN3WTF23CrossThreadOnceFunctionIFvN2cc12MutateStatusEEEE(%"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 %23, %"class.WTF::CrossThreadOnceFunction"* nonnull %9)
  %158 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %9, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %158) #10
  br label %159

159:                                              ; preds = %4, %153, %150
  %160 = phi i1 [ false, %4 ], [ true, %153 ], [ false, %150 ]
  %161 = icmp eq %"class.cc::MutatorInputState"* %1, null
  br i1 %161, label %165, label %162

162:                                              ; preds = %28, %159
  %163 = phi i1 [ %160, %159 ], [ false, %28 ]
  call void @_ZN2cc17MutatorInputStateD1Ev(%"class.cc::MutatorInputState"* nonnull %1) #10
  %164 = bitcast %"class.cc::MutatorInputState"* %1 to i8*
  call void @_ZdlPv(i8* %164) #11
  br label %165

165:                                              ; preds = %76, %101, %29, %55, %159, %162
  %166 = phi i1 [ %160, %159 ], [ %163, %162 ], [ true, %55 ], [ true, %29 ], [ true, %101 ], [ true, %76 ]
  ret i1 %166
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink37AnimationWorkletMutatorDispatcherImpl28MutateAsynchronouslyInternalEN4base9TimeTicksEN3WTF23CrossThreadOnceFunctionIFvN2cc12MutateStatusEEEE(%"class.blink::AnimationWorkletMutatorDispatcherImpl"*, i64, %"class.WTF::CrossThreadOnceFunction"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::internal::WeakReference", align 8
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca %"class.base::OnceCallback.344", align 8
  %7 = alloca %"class.base::OnceCallback.344", align 8
  %8 = alloca %"class.base::WeakPtr", align 8
  %9 = alloca %"class.WTF::CrossThreadOnceFunction.343", align 8
  %10 = alloca %"class.base::WeakPtr", align 8
  %11 = alloca %"class.WTF::CrossThreadOnceFunction.343", align 8
  %12 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 6, i32 0, i32 0
  %13 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %2, i64 0, i32 0, i32 0
  %14 = tail call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %12, %"class.base::internal::CallbackBase"* dereferenceable(8) %13) #10
  %15 = load i32, i32* @_ZN5blink12_GLOBAL__N_124g_next_async_mutation_idE, align 4
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* @_ZN5blink12_GLOBAL__N_124g_next_async_mutation_idE, align 4
  %17 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %18 = and i8 %17, 25
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %27, label %20, !prof !2

20:                                               ; preds = %3
  %21 = sext i32 %15 to i64
  %22 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %23 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  %24 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %25 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %25, i64* %24, align 8
  %26 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 98, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 %21, i64 0, i32 %22, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, %"class.base::trace_event::TraceArguments"* null, i32 2048) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  br label %27

27:                                               ; preds = %3, %20
  %28 = bitcast %"class.WTF::CrossThreadOnceFunction.343"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  %29 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction.343", %"class.WTF::CrossThreadOnceFunction.343"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %29, align 8
  %30 = bitcast %"class.base::WeakPtr"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #10
  %31 = bitcast %"class.base::internal::WeakReference"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #10, !noalias !45
  %32 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 10, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %4, %"class.base::internal::WeakReferenceOwner"* %32) #10, !noalias !45
  %33 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 10, i32 0, i32 1
  %34 = load i64, i64* %33, align 8, !noalias !45
  %35 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %10, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %35, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %4, i64 %34) #10
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #10, !noalias !45
  %36 = bitcast %"class.base::OnceCallback.344"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36)
  %37 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 2, i32 0
  %38 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %37, align 8, !noalias !48
  %39 = icmp eq %"class.base::SingleThreadTaskRunner"* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %27
  %41 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %38, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw add i32* %41, i32 1 monotonic, !noalias !48
  br label %43

43:                                               ; preds = %27, %40
  %44 = ptrtoint %"class.base::SingleThreadTaskRunner"* %38 to i64
  %45 = bitcast %"class.base::WeakPtr"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #10, !noalias !48
  %46 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %10, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* nonnull %46, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %47) #10, !noalias !48
  %48 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %10, i64 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8, !noalias !51
  store i64 %50, i64* %48, align 8, !alias.scope !54, !noalias !48
  %51 = call i8* @_Znwm(i64 80) #11, !noalias !55
  %52 = bitcast i8* %51 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %52, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink37AnimationWorkletMutatorDispatcherImpl28MutateAsynchronouslyInternalENS_9TimeTicksEN3WTF23CrossThreadOnceFunctionIFvN2cc12MutateStatusEEEEE3$_0J13scoped_refptrINS_22SingleThreadTaskRunnerEENS_7WeakPtrIS4_EEiS5_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink37AnimationWorkletMutatorDispatcherImpl28MutateAsynchronouslyInternalENS_9TimeTicksEN3WTF23CrossThreadOnceFunctionIFvN2cc12MutateStatusEEEEE3$_0J13scoped_refptrINS_22SingleThreadTaskRunnerEENS_7WeakPtrIS3_EEiS4_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !55
  %53 = getelementptr inbounds i8, i8* %51, i64 40
  %54 = bitcast i8* %53 to i64*
  store i64 %44, i64* %54, align 8, !noalias !55
  %55 = getelementptr inbounds i8, i8* %51, i64 48
  %56 = bitcast i8* %55 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %56, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %46) #10, !noalias !55
  %57 = getelementptr inbounds i8, i8* %51, i64 56
  %58 = bitcast i8* %57 to i64*
  %59 = load i64, i64* %48, align 8, !noalias !55
  store i64 %59, i64* %58, align 8, !noalias !55
  %60 = getelementptr inbounds i8, i8* %51, i64 64
  %61 = bitcast i8* %60 to i32*
  store i32 %15, i32* %61, align 4, !noalias !55
  %62 = getelementptr inbounds i8, i8* %51, i64 72
  %63 = bitcast i8* %62 to i64*
  store i64 %1, i64* %63, align 8, !noalias !55
  %64 = bitcast %"class.base::OnceCallback.344"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #10, !noalias !48
  %65 = getelementptr inbounds %"class.base::OnceCallback.344", %"class.base::OnceCallback.344"* %7, i64 0, i32 0, i32 0, i32 0
  %66 = ptrtoint i8* %51 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %65, align 8, !noalias !60
  %67 = getelementptr inbounds %"class.base::OnceCallback.344", %"class.base::OnceCallback.344"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %67, align 8, !noalias !60
  %68 = getelementptr inbounds %"class.base::OnceCallback.344", %"class.base::OnceCallback.344"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %68) #10, !noalias !60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #10, !noalias !48
  %69 = getelementptr inbounds %"class.base::OnceCallback.344", %"class.base::OnceCallback.344"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %69) #10, !noalias !48
  %70 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %70) #10, !noalias !48
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #10, !noalias !48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36)
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %35) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #10
  %71 = bitcast %"class.WTF::CrossThreadOnceFunction.343"* %11 to i64*
  store i64 %66, i64* %71, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %29, align 8
  call void @_ZN5blink37AnimationWorkletMutatorDispatcherImpl16RequestMutationsEN3WTF23CrossThreadOnceFunctionIFvvEEE(%"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, %"class.WTF::CrossThreadOnceFunction.343"* nonnull %11)
  %72 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction.343", %"class.WTF::CrossThreadOnceFunction.343"* %11, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %72) #10
  %73 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction.343", %"class.WTF::CrossThreadOnceFunction.343"* %9, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %73) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink37AnimationWorkletMutatorDispatcherImpl18AsyncMutationsDoneEiN4base9TimeTicksE(%"class.blink::AnimationWorkletMutatorDispatcherImpl"*, i32, i64) #0 align 2 {
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %7 = alloca %"class.WTF::HashMap.178", align 8
  %8 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %9 = alloca %"class.base::TimeDelta", align 8
  %10 = tail call zeroext i1 @_ZN5blink37AnimationWorkletMutatorDispatcherImpl26ApplyMutationsOnHostThreadEv(%"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0)
  %11 = bitcast %"class.WTF::CrossThreadOnceFunction"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 6
  %14 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.WTF::CrossThreadOnceFunction"* %13 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.WTF::CrossThreadOnceFunction"* %6 to i64*
  store i64 %16, i64* %17, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %14, align 8
  %18 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %19 = load %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"*, %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"** %18, align 8
  %20 = icmp eq %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"* %19, null
  br i1 %20, label %21, label %25

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %23 = load %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"*, %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"** %22, align 8
  %24 = icmp eq %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"* %23, null
  br i1 %24, label %86, label %25

25:                                               ; preds = %21, %3
  %26 = phi %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"** [ %18, %3 ], [ %22, %21 ]
  %27 = phi %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"* [ %19, %3 ], [ %23, %21 ]
  store %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"* null, %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"** %26, align 8
  %28 = bitcast %"class.WTF::HashMap.178"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #10
  %29 = getelementptr inbounds %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest", %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"* %27, i64 0, i32 1, i32 0, i32 0, i32 0
  %30 = load %"class.cc::MutatorInputState"*, %"class.cc::MutatorInputState"** %29, align 8
  call void @_ZNK5blink37AnimationWorkletMutatorDispatcherImpl14CreateInputMapERN2cc17MutatorInputStateE(%"class.WTF::HashMap.178"* nonnull sret %7, %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, %"class.cc::MutatorInputState"* dereferenceable(40) %30)
  %31 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 4
  %32 = bitcast %"class.WTF::HashMap.178"* %7 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.WTF::HashMap.178"* %31 to i64*
  %35 = load i64, i64* %34, align 8
  store atomic i64 %35, i64* %32 monotonic, align 8
  store atomic i64 %33, i64* %34 monotonic, align 8
  %36 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 4, i32 0, i32 1
  %37 = getelementptr inbounds %"class.WTF::HashMap.178", %"class.WTF::HashMap.178"* %7, i64 0, i32 0, i32 1
  %38 = load i32, i32* %36, align 4
  %39 = load i32, i32* %37, align 8
  store i32 %39, i32* %36, align 4
  store i32 %38, i32* %37, align 8
  %40 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 4, i32 0, i32 2
  %41 = getelementptr inbounds %"class.WTF::HashMap.178", %"class.WTF::HashMap.178"* %7, i64 0, i32 0, i32 2
  %42 = load i32, i32* %40, align 4
  %43 = load i32, i32* %41, align 4
  store i32 %43, i32* %40, align 4
  store i32 %42, i32* %41, align 4
  %44 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 4, i32 0, i32 3
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 2147483647
  %47 = getelementptr inbounds %"class.WTF::HashMap.178", %"class.WTF::HashMap.178"* %7, i64 0, i32 0, i32 3
  %48 = load i32, i32* %47, align 8
  %49 = and i32 %48, 2147483647
  %50 = and i32 %45, -2147483648
  %51 = or i32 %49, %50
  store i32 %51, i32* %44, align 8
  %52 = and i32 %48, -2147483648
  %53 = or i32 %52, %46
  store i32 %53, i32* %47, align 8
  %54 = getelementptr inbounds %"class.WTF::HashMap.178", %"class.WTF::HashMap.178"* %7, i64 0, i32 0, i32 0
  %55 = inttoptr i64 %35 to %"struct.WTF::KeyValuePair.182"*
  %56 = icmp eq i64 %35, 0
  br i1 %56, label %77, label %57, !prof !2

57:                                               ; preds = %25
  %58 = icmp eq i32 %38, 0
  br i1 %58, label %75, label %59

59:                                               ; preds = %57
  %60 = zext i32 %38 to i64
  br label %61

61:                                               ; preds = %72, %59
  %62 = phi i64 [ 0, %59 ], [ %73, %72 ]
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %55, i64 %62, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, -1
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %55, i64 %62, i32 1, i32 0, i32 0, i32 0
  %68 = load %"struct.cc::AnimationWorkletInput"*, %"struct.cc::AnimationWorkletInput"** %67, align 8
  store %"struct.cc::AnimationWorkletInput"* null, %"struct.cc::AnimationWorkletInput"** %67, align 8
  %69 = icmp eq %"struct.cc::AnimationWorkletInput"* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %66
  call void @_ZN2cc21AnimationWorkletInputD1Ev(%"struct.cc::AnimationWorkletInput"* nonnull %68) #10
  %71 = bitcast %"struct.cc::AnimationWorkletInput"* %68 to i8*
  call void @_ZdlPv(i8* %71) #11
  br label %72

72:                                               ; preds = %70, %66, %61
  %73 = add nuw nsw i64 %62, 1
  %74 = icmp eq i64 %73, %60
  br i1 %74, label %75, label %61

75:                                               ; preds = %72, %57
  %76 = inttoptr i64 %35 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %76) #10
  store %"struct.WTF::KeyValuePair.182"* null, %"struct.WTF::KeyValuePair.182"** %54, align 8
  br label %77

77:                                               ; preds = %25, %75
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #10
  %78 = getelementptr inbounds %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest", %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"* %27, i64 0, i32 0, i32 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest", %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"* %27, i64 0, i32 2
  %81 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %80, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.WTF::CrossThreadOnceFunction"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.WTF::CrossThreadOnceFunction"* %8 to i64*
  store i64 %83, i64* %84, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %81, align 8
  call void @_ZN5blink37AnimationWorkletMutatorDispatcherImpl28MutateAsynchronouslyInternalEN4base9TimeTicksEN3WTF23CrossThreadOnceFunctionIFvN2cc12MutateStatusEEEE(%"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 %79, %"class.WTF::CrossThreadOnceFunction"* nonnull %8)
  %85 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %85) #10
  br label %86

86:                                               ; preds = %21, %77
  %87 = phi i1 [ false, %77 ], [ true, %21 ]
  %88 = phi %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"* [ %27, %77 ], [ null, %21 ]
  %89 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %90 = and i8 %89, 25
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %99, label %92, !prof !2

92:                                               ; preds = %86
  %93 = sext i32 %1 to i64
  %94 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %95 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #10
  %96 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %97 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %97, i64* %96, align 8
  %98 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 101, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 %93, i64 0, i32 %94, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 2048) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #10
  br label %99

99:                                               ; preds = %86, %92
  %100 = load atomic i64, i64* @_ZZN5blink37AnimationWorkletMutatorDispatcherImpl18AsyncMutationsDoneEiN4base9TimeTicksEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %101 = inttoptr i64 %100 to %"class.base::HistogramBase"*
  %102 = icmp eq i64 %100, 0
  br i1 %102, label %103, label %106

103:                                              ; preds = %99
  %104 = call %"class.base::HistogramBase"* @_ZN4base9Histogram26FactoryMicrosecondsTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.3, i64 0, i64 0), i64 1, i64 100000, i32 50, i32 1) #10
  %105 = ptrtoint %"class.base::HistogramBase"* %104 to i64
  store atomic i64 %105, i64* @_ZZN5blink37AnimationWorkletMutatorDispatcherImpl18AsyncMutationsDoneEiN4base9TimeTicksEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %106

106:                                              ; preds = %99, %103
  %107 = phi %"class.base::HistogramBase"* [ %101, %99 ], [ %104, %103 ]
  %108 = bitcast %"class.base::TimeDelta"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #10
  %109 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %110 = load %"class.base::TickClock"*, %"class.base::TickClock"** %109, align 8
  %111 = bitcast %"class.base::TickClock"* %110 to i64 (%"class.base::TickClock"*)***
  %112 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %111, align 8
  %113 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %112, i64 2
  %114 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %113, align 8
  %115 = call i64 %114(%"class.base::TickClock"* %110) #10
  %116 = sub nsw i64 %115, %2
  %117 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %9, i64 0, i32 0
  store i64 %116, i64* %117, align 8
  call void @_ZN4base13HistogramBase30AddTimeMicrosecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %107, %"class.base::TimeDelta"* nonnull dereferenceable(8) %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #10
  %118 = xor i1 %10, true
  %119 = zext i1 %118 to i32
  %120 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #10
  %121 = load i64, i64* %17, align 8
  %122 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %121, i64* %122, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %12, align 8
  %123 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  %124 = inttoptr i64 %121 to %"class.base::internal::BindStateBase"*
  %125 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %124, i64 0, i32 1
  %126 = bitcast void ()** %125 to void (%"class.base::internal::BindStateBase"*, i32)**
  %127 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %126, align 8
  call void %127(%"class.base::internal::BindStateBase"* %124, i32 %119) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %123) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #10
  br i1 %87, label %137, label %128

128:                                              ; preds = %106
  %129 = getelementptr inbounds %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest", %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"* %88, i64 0, i32 2, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %129) #10
  %130 = getelementptr inbounds %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest", %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"* %88, i64 0, i32 1, i32 0, i32 0, i32 0
  %131 = load %"class.cc::MutatorInputState"*, %"class.cc::MutatorInputState"** %130, align 8
  store %"class.cc::MutatorInputState"* null, %"class.cc::MutatorInputState"** %130, align 8
  %132 = icmp eq %"class.cc::MutatorInputState"* %131, null
  br i1 %132, label %135, label %133

133:                                              ; preds = %128
  call void @_ZN2cc17MutatorInputStateD1Ev(%"class.cc::MutatorInputState"* nonnull %131) #10
  %134 = bitcast %"class.cc::MutatorInputState"* %131 to i8*
  call void @_ZdlPv(i8* %134) #11
  br label %135

135:                                              ; preds = %133, %128
  %136 = bitcast %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"* %88 to i8*
  call void @_ZdlPv(i8* %136) #11
  br label %137

137:                                              ; preds = %106, %135
  %138 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %138) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink37AnimationWorkletMutatorDispatcherImpl31RegisterAnimationWorkletMutatorENS_21CrossThreadPersistentINS_23AnimationWorkletMutatorEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::AnimationWorkletMutatorDispatcherImpl"*, %"class.blink::CrossThreadPersistent"*, %"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = alloca %class.scoped_refptr.172, align 8
  %6 = getelementptr inbounds %class.scoped_refptr.172, %class.scoped_refptr.172* %5, i64 0, i32 0
  store %"class.base::SingleThreadTaskRunner"* %2, %"class.base::SingleThreadTaskRunner"** %6, align 8
  %7 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %8 = and i8 %7, 25
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %13, !prof !2

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 1, i32 0
  %12 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_23AnimationWorkletMutatorEEENS_12KeyValuePairIS4_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERS4_RS9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_(%"class.WTF::HashTable"* %11, %"class.blink::CrossThreadPersistent"* dereferenceable(16) %1, %class.scoped_refptr.172* nonnull dereferenceable(8) %5) #10
  br label %24

13:                                               ; preds = %3
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %15 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %17, i64* %16, align 8
  %18 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.4, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  %19 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 1, i32 0
  %20 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_23AnimationWorkletMutatorEEENS_12KeyValuePairIS4_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERS4_RS9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_(%"class.WTF::HashTable"* %19, %"class.blink::CrossThreadPersistent"* dereferenceable(16) %1, %class.scoped_refptr.172* nonnull dereferenceable(8) %5) #10
  %21 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %13
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.4, i64 0, i64 0), i64 %18) #10
  br label %24

24:                                               ; preds = %10, %13, %23
  %25 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %6, align 8
  %26 = icmp eq %"class.base::SingleThreadTaskRunner"* %25, null
  br i1 %26, label %35, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %25, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw sub i32* %29, i32 1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %35

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %28, i64 -2
  %34 = bitcast %"class.base::RefCountedThreadSafe"* %33 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %34) #10
  br label %35

35:                                               ; preds = %24, %27, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink37AnimationWorkletMutatorDispatcherImpl33UnregisterAnimationWorkletMutatorENS_21CrossThreadPersistentINS_23AnimationWorkletMutatorEEE(%"class.blink::AnimationWorkletMutatorDispatcherImpl"*, %"class.blink::CrossThreadPersistent"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %5 = and i8 %4, 25
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %13, label %7, !prof !2

7:                                                ; preds = %2
  %8 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %9 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %11 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %11, i64* %10, align 8
  %12 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.5, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %8, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  br label %13

13:                                               ; preds = %2, %7
  %14 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([73 x i8], [73 x i8]* @.str.5, i64 0, i64 0), %7 ]
  %15 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), %7 ]
  %16 = phi i64 [ -6148914691236517206, %2 ], [ %12, %7 ]
  %17 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %1, i64 0, i32 0, i32 0
  %19 = load %"class.blink::AnimationWorkletMutator"*, %"class.blink::AnimationWorkletMutator"** %18, align 8
  %20 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %17, i64 0, i32 0
  %21 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_23AnimationWorkletMutatorEEENS_12KeyValuePairIS4_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE4findEPS3_(%"class.WTF::HashTable"* %20, %"class.blink::AnimationWorkletMutator"* %19) #10
  %22 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %21, 0
  %23 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %17, i64 0, i32 0, i32 0
  %24 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 1, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %24, i64 %27
  %29 = icmp eq %"struct.WTF::KeyValuePair"* %28, %22
  br i1 %29, label %52, label %30

30:                                               ; preds = %13
  call void @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_23AnimationWorkletMutatorEEENS_12KeyValuePairIS4_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE12DeleteBucketERKSA_(%"struct.WTF::KeyValuePair"* dereferenceable(24) %22) #10
  %31 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 1, i32 0, i32 3
  %32 = load i32, i32* %31, align 8
  %33 = add i32 %32, 1
  %34 = and i32 %33, 2147483647
  %35 = and i32 %32, -2147483648
  %36 = or i32 %34, %35
  store i32 %36, i32* %31, align 8
  %37 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 1, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = add i32 %38, -1
  store i32 %39, i32* %37, align 4
  %40 = mul i32 %39, 6
  %41 = load i32, i32* %25, align 8
  %42 = icmp ult i32 %40, %41
  %43 = icmp ugt i32 %41, 8
  %44 = and i1 %42, %43
  br i1 %44, label %45, label %52

45:                                               ; preds = %30
  %46 = lshr i32 %41, 1
  %47 = zext i32 %46 to i64
  %48 = mul nuw nsw i64 %47, 24
  %49 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %48, i8* getelementptr inbounds ([173 x i8], [173 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink21CrossThreadPersistentINS2_23AnimationWorkletMutatorEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %49, i8 0, i64 %48, i1 false) #10
  %50 = bitcast i8* %49 to %"struct.WTF::KeyValuePair"*
  %51 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_23AnimationWorkletMutatorEEENS_12KeyValuePairIS4_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_(%"class.WTF::HashTable"* %20, %"struct.WTF::KeyValuePair"* %50, i32 %46, %"struct.WTF::KeyValuePair"* null) #10
  br label %52

52:                                               ; preds = %13, %30, %45
  %53 = icmp eq i8* %15, null
  br i1 %53, label %58, label %54

54:                                               ; preds = %52
  %55 = load i8, i8* %15, align 1
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %58, label %57

57:                                               ; preds = %54
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %15, i8* %14, i64 %16) #10
  br label %58

58:                                               ; preds = %52, %54, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink37AnimationWorkletMutatorDispatcherImpl23SynchronizeAnimatorNameERKN3WTF6StringE(%"class.blink::AnimationWorkletMutatorDispatcherImpl"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 3
  %4 = load %"class.blink::MutatorClient"*, %"class.blink::MutatorClient"** %3, align 8
  %5 = bitcast %"class.blink::MutatorClient"* %4 to void (%"class.blink::MutatorClient"*, %"class.WTF::String"*)***
  %6 = load void (%"class.blink::MutatorClient"*, %"class.WTF::String"*)**, void (%"class.blink::MutatorClient"*, %"class.WTF::String"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::MutatorClient"*, %"class.WTF::String"*)*, void (%"class.blink::MutatorClient"*, %"class.WTF::String"*)** %6, i64 2
  %8 = load void (%"class.blink::MutatorClient"*, %"class.WTF::String"*)*, void (%"class.blink::MutatorClient"*, %"class.WTF::String"*)** %7, align 8
  tail call void %8(%"class.blink::MutatorClient"* %4, %"class.WTF::String"* dereferenceable(8) %1) #10
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink37AnimationWorkletMutatorDispatcherImpl11HasMutatorsEv(%"class.blink::AnimationWorkletMutatorDispatcherImpl"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %0, i64 0, i32 1, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp ne i32 %3, 0
  ret i1 %4
}

declare %"struct.cc::AnimationWorkletInput"* @_ZN2cc17MutatorInputState16TakeWorkletStateEi(%"class.cc::MutatorInputState"*, i32) local_unnamed_addr #5

declare void @_ZN4base14BarrierClosureEiNS_12OnceCallbackIFvvEEE(%"class.base::RepeatingCallback"* sret, i32, %"class.base::OnceCallback.344"*) local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #5

declare dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() local_unnamed_addr #5

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #5

declare dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() local_unnamed_addr #5

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #5

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #5

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #5

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMNS_13WaitableEventEFvvEJN3WTF28CrossThreadUnretainedWrapperIS3_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.base::WaitableEvent"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.base::WaitableEvent"*)**
  %21 = load void (%"class.base::WaitableEvent"*)*, void (%"class.base::WaitableEvent"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.base::WaitableEvent"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.base::WaitableEvent"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.base::WaitableEvent"* %12) #10
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMNS_13WaitableEventEFvvEJN3WTF28CrossThreadUnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #5

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink37AnimationWorkletMutatorDispatcherImpl28MutateAsynchronouslyInternalENS_9TimeTicksEN3WTF23CrossThreadOnceFunctionIFvN2cc12MutateStatusEEEEE3$_0J13scoped_refptrINS_22SingleThreadTaskRunnerEENS_7WeakPtrIS4_EEiS5_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = alloca %"class.base::OnceCallback.344", align 8
  %3 = alloca %"class.WTF::CrossThreadOnceFunction.343", align 8
  %4 = alloca %"class.base::OnceCallback.344", align 8
  %5 = alloca %"class.base::OnceCallback.344", align 8
  %6 = alloca %"class.base::WeakPtr", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = alloca %"class.WTF::CrossThreadOnceFunction.343", align 8
  %9 = alloca %"class.base::WeakPtr", align 8
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %11 = getelementptr inbounds void ()*, void ()** %10, i64 3
  %12 = bitcast void ()** %11 to i32*
  %13 = bitcast %"class.base::WeakPtr"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #10
  %14 = bitcast void ()** %10 to %"class.base::SingleThreadTaskRunner"**
  %15 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %14, align 8
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** %14, align 8
  %16 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %9, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds void ()*, void ()** %10, i64 1
  %18 = bitcast void ()** %17 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* nonnull %16, %"class.base::internal::WeakReference"* dereferenceable(8) %18) #10
  %19 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %9, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds void ()*, void ()** %10, i64 2
  %21 = bitcast void ()** %20 to i64*
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %19, align 8
  %23 = load i32, i32* %12, align 4
  %24 = getelementptr inbounds void ()*, void ()** %10, i64 4
  %25 = bitcast void ()** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::CrossThreadOnceFunction.343"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  %28 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.7, i64 0, i64 0), i32 207) #10
  %29 = bitcast %"class.base::OnceCallback.344"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #10
  %30 = bitcast %"class.base::WeakPtr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #10, !noalias !63
  %31 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* nonnull %31, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %16) #10, !noalias !63
  %32 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0, i32 1
  %33 = load i64, i64* %19, align 8, !noalias !66
  store i64 %33, i64* %32, align 8, !alias.scope !69, !noalias !63
  %34 = call i8* @_Znwm(i64 80) #11, !noalias !70
  %35 = bitcast i8* %34 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %35, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink37AnimationWorkletMutatorDispatcherImplEFviNS_9TimeTicksEEJNS_7WeakPtrIS4_EEiS5_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink37AnimationWorkletMutatorDispatcherImplEFviNS_9TimeTicksEEJNS_7WeakPtrIS3_EEiS4_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink37AnimationWorkletMutatorDispatcherImplEFviNS_9TimeTicksEEJNS_7WeakPtrIS4_EEiS5_EEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE) #10, !noalias !70
  %36 = getelementptr inbounds i8, i8* %34, i64 32
  %37 = bitcast i8* %36 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::AnimationWorkletMutatorDispatcherImpl"*, i32, i64)* @_ZN5blink37AnimationWorkletMutatorDispatcherImpl18AsyncMutationsDoneEiN4base9TimeTicksE to i64), i64 0>, <2 x i64>* %37, align 8, !noalias !70
  %38 = getelementptr inbounds i8, i8* %34, i64 48
  %39 = bitcast i8* %38 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %39, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %31) #10, !noalias !70
  %40 = getelementptr inbounds i8, i8* %34, i64 56
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %32, align 8, !noalias !70
  store i64 %42, i64* %41, align 8, !noalias !70
  %43 = getelementptr inbounds i8, i8* %34, i64 64
  %44 = bitcast i8* %43 to i32*
  store i32 %23, i32* %44, align 4, !noalias !70
  %45 = getelementptr inbounds i8, i8* %34, i64 72
  %46 = bitcast i8* %45 to i64*
  store i64 %26, i64* %46, align 8, !noalias !70
  %47 = bitcast %"class.base::OnceCallback.344"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #10, !noalias !63
  %48 = getelementptr inbounds %"class.base::OnceCallback.344", %"class.base::OnceCallback.344"* %5, i64 0, i32 0, i32 0, i32 0
  %49 = ptrtoint i8* %34 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %48, align 8, !noalias !75
  %50 = getelementptr inbounds %"class.base::OnceCallback.344", %"class.base::OnceCallback.344"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %50, align 8, !noalias !75
  %51 = getelementptr inbounds %"class.base::OnceCallback.344", %"class.base::OnceCallback.344"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %51) #10, !noalias !75
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #10, !noalias !63
  %52 = getelementptr inbounds %"class.base::OnceCallback.344", %"class.base::OnceCallback.344"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %52) #10, !noalias !63
  %53 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %53) #10, !noalias !63
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #10, !noalias !63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #10
  %54 = bitcast %"class.base::OnceCallback.344"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #10
  %55 = bitcast %"class.WTF::CrossThreadOnceFunction.343"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #10
  %56 = bitcast %"class.base::SingleThreadTaskRunner"* %15 to %"class.base::TaskRunner"*
  %57 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction.343", %"class.WTF::CrossThreadOnceFunction.343"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %57, align 8
  %58 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction.343", %"class.WTF::CrossThreadOnceFunction.343"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = bitcast %"class.base::OnceCallback.344"* %2 to i64*
  store i64 %49, i64* %59, align 8, !alias.scope !78
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %58, align 8, !noalias !78
  %60 = bitcast %"class.base::SingleThreadTaskRunner"* %15 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.344"*, i64)***
  %61 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.344"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.344"*, i64)*** %60, align 8
  %62 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.344"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.344"*, i64)** %61, align 8
  %63 = call zeroext i1 %62(%"class.base::TaskRunner"* %56, %"class.base::Location"* nonnull dereferenceable(32) %7, %"class.base::OnceCallback.344"* nonnull %2, i64 0) #10
  %64 = getelementptr inbounds %"class.base::OnceCallback.344", %"class.base::OnceCallback.344"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %64) #10
  %65 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction.343", %"class.WTF::CrossThreadOnceFunction.343"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %65) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #10
  %66 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction.343", %"class.WTF::CrossThreadOnceFunction.343"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %66) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #10
  %67 = icmp eq %"class.base::SingleThreadTaskRunner"* %15, null
  br i1 %67, label %76, label %68

68:                                               ; preds = %1
  %69 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %15, i64 0, i32 0, i32 0, i32 1
  %70 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = atomicrmw sub i32* %70, i32 1 acq_rel
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %73, label %76

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %69, i64 -2
  %75 = bitcast %"class.base::RefCountedThreadSafe"* %74 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %75) #10
  br label %76

76:                                               ; preds = %1, %68, %73
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  %77 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %9, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %77) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink37AnimationWorkletMutatorDispatcherImplEFviNS_9TimeTicksEEJNS_7WeakPtrIS4_EEiS5_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i32*
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %8 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #10
  br i1 %8, label %9, label %48

9:                                                ; preds = %1
  %10 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to %"class.blink::AnimationWorkletMutatorDispatcherImpl"**
  %12 = load %"class.blink::AnimationWorkletMutatorDispatcherImpl"*, %"class.blink::AnimationWorkletMutatorDispatcherImpl"** %11, align 8
  %13 = icmp eq %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %12, null
  br i1 %13, label %48, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %18 = bitcast void ()** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #10
  br i1 %20, label %24, label %21

21:                                               ; preds = %14
  %22 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0)) #10
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #10
  br label %24

24:                                               ; preds = %21, %14
  %25 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #10
  %26 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = select i1 %25, i8* %27, i8* null
  %29 = getelementptr inbounds i8, i8* %28, i64 %19
  %30 = bitcast i8* %29 to %"class.blink::AnimationWorkletMutatorDispatcherImpl"*
  %31 = and i64 %16, 1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %24
  %34 = bitcast i8* %29 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = add i64 %16, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = bitcast i8* %37 to void (%"class.blink::AnimationWorkletMutatorDispatcherImpl"*, i32, i64)**
  %39 = load void (%"class.blink::AnimationWorkletMutatorDispatcherImpl"*, i32, i64)*, void (%"class.blink::AnimationWorkletMutatorDispatcherImpl"*, i32, i64)** %38, align 8
  br label %42

40:                                               ; preds = %24
  %41 = inttoptr i64 %16 to void (%"class.blink::AnimationWorkletMutatorDispatcherImpl"*, i32, i64)*
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi void (%"class.blink::AnimationWorkletMutatorDispatcherImpl"*, i32, i64)* [ %39, %33 ], [ %41, %40 ]
  %44 = load i32, i32* %6, align 4
  %45 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 3
  %46 = bitcast void (%"class.base::internal::BindStateBase"*)** %45 to i64*
  %47 = load i64, i64* %46, align 8
  call void %43(%"class.blink::AnimationWorkletMutatorDispatcherImpl"* %30, i32 %44, i64 %47) #10
  br label %48

48:                                               ; preds = %1, %9, %42
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #5

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink37AnimationWorkletMutatorDispatcherImplEFviNS_9TimeTicksEEJNS_7WeakPtrIS3_EEiS4_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #10
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink37AnimationWorkletMutatorDispatcherImplEFviNS_9TimeTicksEEJNS_7WeakPtrIS4_EEiS5_EEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #10
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.blink::AnimationWorkletMutatorDispatcherImpl"**
  %9 = load %"class.blink::AnimationWorkletMutatorDispatcherImpl"*, %"class.blink::AnimationWorkletMutatorDispatcherImpl"** %8, align 8
  %10 = icmp ne %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #10
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #5

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink37AnimationWorkletMutatorDispatcherImpl28MutateAsynchronouslyInternalENS_9TimeTicksEN3WTF23CrossThreadOnceFunctionIFvN2cc12MutateStatusEEEEE3$_0J13scoped_refptrINS_22SingleThreadTaskRunnerEENS_7WeakPtrIS3_EEiS4_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %20, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #10
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.base::SingleThreadTaskRunner"**
  %8 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %7, align 8
  %9 = icmp eq %"class.base::SingleThreadTaskRunner"* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %8, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw sub i32* %12, i32 1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %11, i64 -2
  %17 = bitcast %"class.base::RefCountedThreadSafe"* %16 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %17) #10
  br label %18

18:                                               ; preds = %3, %10, %15
  %19 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #11
  br label %20

20:                                               ; preds = %18, %1
  ret void
}

declare void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink37AnimationWorkletMutatorDispatcherImpl16RequestMutationsEN3WTF23CrossThreadOnceFunctionIFvvEEEE3$_1JNS3_25CrossThreadWeakPersistentINS3_23AnimationWorkletMutatorEEENSt3__110unique_ptrIN2cc21AnimationWorkletInputENSD_14default_deleteISG_EEEE13scoped_refptrINS4_15OutputVectorRefEEiNSE_INS_19ScopedClosureRunnerENSH_ISN_EEEEEEES7_E7RunOnceEPNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"* nocapture) #0 align 2 {
  %2 = alloca %"class.blink::CrossThreadPersistent", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast %"class.blink::CrossThreadPersistent"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %2, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16, i1 false) #10, !alias.scope !81
  %6 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #10, !noalias !81
  %7 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %6, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %7) #10, !noalias !81
  %8 = bitcast void ()** %3 to %"class.blink::AnimationWorkletMutator"**
  %9 = load %"class.blink::AnimationWorkletMutator"*, %"class.blink::AnimationWorkletMutator"** %8, align 8, !noalias !81
  call void @_ZN5blink14PersistentBaseINS_23AnimationWorkletMutatorELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase"* nonnull %5, %"class.blink::AnimationWorkletMutator"* %9) #10
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %7) #10
  %10 = getelementptr inbounds void ()*, void ()** %3, i64 2
  %11 = getelementptr inbounds void ()*, void ()** %3, i64 4
  %12 = bitcast void ()** %11 to i32*
  %13 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %2, i64 0, i32 0, i32 0
  %14 = load %"class.blink::AnimationWorkletMutator"*, %"class.blink::AnimationWorkletMutator"** %13, align 8
  %15 = bitcast void ()** %10 to %"struct.cc::AnimationWorkletInput"**
  %16 = bitcast void ()** %10 to i64*
  %17 = load i64, i64* %16, align 8
  store %"struct.cc::AnimationWorkletInput"* null, %"struct.cc::AnimationWorkletInput"** %15, align 8
  %18 = getelementptr inbounds void ()*, void ()** %3, i64 3
  %19 = bitcast void ()** %18 to %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"**
  %20 = load %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"*, %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"** %19, align 8
  store %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"* null, %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"** %19, align 8
  %21 = load i32, i32* %12, align 4
  %22 = getelementptr inbounds void ()*, void ()** %3, i64 5
  %23 = bitcast void ()** %22 to %"class.base::ScopedClosureRunner"**
  %24 = load %"class.base::ScopedClosureRunner"*, %"class.base::ScopedClosureRunner"** %23, align 8
  store %"class.base::ScopedClosureRunner"* null, %"class.base::ScopedClosureRunner"** %23, align 8
  %25 = icmp eq %"class.blink::AnimationWorkletMutator"* %14, null
  br i1 %25, label %34, label %26

26:                                               ; preds = %1
  %27 = inttoptr i64 %17 to %"struct.cc::AnimationWorkletInput"*
  %28 = bitcast %"class.blink::AnimationWorkletMutator"* %14 to %"struct.cc::AnimationWorkletOutput"* (%"class.blink::AnimationWorkletMutator"*, %"struct.cc::AnimationWorkletInput"*)***
  %29 = load %"struct.cc::AnimationWorkletOutput"* (%"class.blink::AnimationWorkletMutator"*, %"struct.cc::AnimationWorkletInput"*)**, %"struct.cc::AnimationWorkletOutput"* (%"class.blink::AnimationWorkletMutator"*, %"struct.cc::AnimationWorkletInput"*)*** %28, align 8
  %30 = getelementptr inbounds %"struct.cc::AnimationWorkletOutput"* (%"class.blink::AnimationWorkletMutator"*, %"struct.cc::AnimationWorkletInput"*)*, %"struct.cc::AnimationWorkletOutput"* (%"class.blink::AnimationWorkletMutator"*, %"struct.cc::AnimationWorkletInput"*)** %29, i64 4
  %31 = load %"struct.cc::AnimationWorkletOutput"* (%"class.blink::AnimationWorkletMutator"*, %"struct.cc::AnimationWorkletInput"*)*, %"struct.cc::AnimationWorkletOutput"* (%"class.blink::AnimationWorkletMutator"*, %"struct.cc::AnimationWorkletInput"*)** %30, align 8
  %32 = call %"struct.cc::AnimationWorkletOutput"* %31(%"class.blink::AnimationWorkletMutator"* nonnull %14, %"struct.cc::AnimationWorkletInput"* %27) #10
  %33 = ptrtoint %"struct.cc::AnimationWorkletOutput"* %32 to i64
  br label %34

34:                                               ; preds = %26, %1
  %35 = phi i64 [ %33, %26 ], [ 0, %1 ]
  %36 = phi i64 [ 0, %26 ], [ %17, %1 ]
  %37 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef", %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"* %20, i64 0, i32 1
  %38 = call dereferenceable(8) %"class.std::__1::unique_ptr.230"* @_ZN3WTF6VectorINSt3__110unique_ptrIN2cc22AnimationWorkletOutputENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.227"* %37, i32 %21) #10
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"struct.cc::AnimationWorkletOutput"*, %"struct.cc::AnimationWorkletOutput"** %39, align 8
  %41 = bitcast %"class.std::__1::unique_ptr.230"* %38 to i64*
  store i64 %35, i64* %41, align 8
  %42 = icmp eq %"struct.cc::AnimationWorkletOutput"* %40, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %34
  call void @_ZN2cc22AnimationWorkletOutputD1Ev(%"struct.cc::AnimationWorkletOutput"* nonnull %40) #10
  %44 = bitcast %"struct.cc::AnimationWorkletOutput"* %40 to i8*
  call void @_ZdlPv(i8* %44) #11
  br label %45

45:                                               ; preds = %43, %34
  call void @_ZN4base19ScopedClosureRunner11RunAndResetEv(%"class.base::ScopedClosureRunner"* %24) #10
  %46 = icmp eq %"class.base::ScopedClosureRunner"* %24, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %45
  call void @_ZN4base19ScopedClosureRunnerD1Ev(%"class.base::ScopedClosureRunner"* nonnull %24) #10
  %48 = bitcast %"class.base::ScopedClosureRunner"* %24 to i8*
  call void @_ZdlPv(i8* %48) #11
  br label %49

49:                                               ; preds = %47, %45
  %50 = icmp eq %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"* %20, null
  br i1 %50, label %86, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef", %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"* %20, i64 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef", %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw sub i32* %53, i32 1 acq_rel
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %86

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.base::RefCountedThreadSafe.226", %"class.base::RefCountedThreadSafe.226"* %52, i64 2
  %58 = bitcast %"class.base::RefCountedThreadSafe.226"* %57 to %"class.std::__1::unique_ptr.230"**
  %59 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %58, align 8
  %60 = icmp eq %"class.std::__1::unique_ptr.230"* %59, null
  br i1 %60, label %84, label %61, !prof !2

61:                                               ; preds = %56
  %62 = bitcast %"class.std::__1::unique_ptr.230"* %59 to i8*
  %63 = getelementptr inbounds %"class.base::RefCountedThreadSafe.226", %"class.base::RefCountedThreadSafe.226"* %52, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %82, label %66, !prof !3

66:                                               ; preds = %61
  %67 = zext i32 %64 to i64
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %59, i64 %67
  br label %69

69:                                               ; preds = %76, %66
  %70 = phi %"class.std::__1::unique_ptr.230"* [ %77, %76 ], [ %59, %66 ]
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %70, i64 0, i32 0, i32 0, i32 0
  %72 = load %"struct.cc::AnimationWorkletOutput"*, %"struct.cc::AnimationWorkletOutput"** %71, align 8
  store %"struct.cc::AnimationWorkletOutput"* null, %"struct.cc::AnimationWorkletOutput"** %71, align 8
  %73 = icmp eq %"struct.cc::AnimationWorkletOutput"* %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %69
  call void @_ZN2cc22AnimationWorkletOutputD1Ev(%"struct.cc::AnimationWorkletOutput"* nonnull %72) #10
  %75 = bitcast %"struct.cc::AnimationWorkletOutput"* %72 to i8*
  call void @_ZdlPv(i8* %75) #11
  br label %76

76:                                               ; preds = %74, %69
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %70, i64 1
  %78 = icmp eq %"class.std::__1::unique_ptr.230"* %77, %68
  br i1 %78, label %79, label %69

79:                                               ; preds = %76
  store i32 0, i32* %63, align 4
  %80 = bitcast %"class.base::RefCountedThreadSafe.226"* %57 to i8**
  %81 = load i8*, i8** %80, align 8
  br label %82

82:                                               ; preds = %79, %61
  %83 = phi i8* [ %81, %79 ], [ %62, %61 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %83) #10
  br label %84

84:                                               ; preds = %82, %56
  %85 = bitcast %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"* %20 to i8*
  call void @free(i8* %85) #10
  br label %86

86:                                               ; preds = %84, %51, %49
  %87 = icmp eq i64 %36, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %86
  %89 = inttoptr i64 %36 to %"struct.cc::AnimationWorkletInput"*
  call void @_ZN2cc21AnimationWorkletInputD1Ev(%"struct.cc::AnimationWorkletInput"* nonnull %89) #10
  %90 = inttoptr i64 %36 to i8*
  call void @_ZdlPv(i8* %90) #11
  br label %91

91:                                               ; preds = %88, %86
  %92 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %2, i64 0, i32 0, i32 1
  %93 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %92 to i64*
  %94 = load atomic i64, i64* %93 acquire, align 8
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %110, label %96

96:                                               ; preds = %91
  %97 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #10
  %98 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %97, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %98) #10
  %99 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #10
  %100 = load atomic i64, i64* %93 monotonic, align 8
  %101 = inttoptr i64 %100 to %"class.blink::PersistentNode"*
  %102 = icmp eq i64 %100, 0
  br i1 %102, label %109, label %103

103:                                              ; preds = %96
  %104 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %99, i64 0, i32 0, i32 0
  %105 = bitcast %"class.blink::CrossThreadPersistentRegion"* %99 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = inttoptr i64 %100 to i64*
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %101, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %108, align 8
  store %"class.blink::PersistentNode"* %101, %"class.blink::PersistentNode"** %104, align 8
  br label %109

109:                                              ; preds = %103, %96
  store atomic i64 0, i64* %93 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %98) #10
  br label %110

110:                                              ; preds = %91, %109
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #10
  ret void
}

declare void @_ZN4base19ScopedClosureRunner11RunAndResetEv(%"class.base::ScopedClosureRunner"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr.230"* @_ZN3WTF6VectorINSt3__110unique_ptrIN2cc22AnimationWorkletOutputENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.227"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.227", %"class.WTF::Vector.227"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.227", %"class.WTF::Vector.227"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %24, i64 %25
  ret %"class.std::__1::unique_ptr.230"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #5

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN2cc22AnimationWorkletOutputD1Ev(%"struct.cc::AnimationWorkletOutput"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_23AnimationWorkletMutatorELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase"*, %"class.blink::AnimationWorkletMutator"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 0
  store %"class.blink::AnimationWorkletMutator"* %1, %"class.blink::AnimationWorkletMutator"** %3, align 8
  %4 = ptrtoint %"class.blink::AnimationWorkletMutator"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %29
    i64 -1, label %29
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 1
  %7 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %6 to i64*
  %8 = load atomic i64, i64* %7 acquire, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %46

10:                                               ; preds = %5
  %11 = bitcast %"class.blink::PersistentBase"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  switch i64 %12, label %13 [
    i64 0, label %46
    i64 -1, label %46
  ]

13:                                               ; preds = %10
  %14 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #10
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  %17 = icmp eq %"class.blink::PersistentNode"* %16, null
  br i1 %17, label %18, label %21, !prof !3

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %19) #10
  %20 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  br label %21

21:                                               ; preds = %18, %13
  %22 = phi %"class.blink::PersistentNode"* [ %20, %18 ], [ %16, %13 ]
  %23 = bitcast %"class.blink::PersistentNode"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::CrossThreadPersistentRegion"* %14 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast %"class.blink::PersistentNode"* %22 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %0, %"class.blink::PersistentBase"** %26, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %22, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_23AnimationWorkletMutatorELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %27, align 8
  %28 = ptrtoint %"class.blink::PersistentNode"* %22 to i64
  store atomic i64 %28, i64* %7 release, align 8
  br label %46

29:                                               ; preds = %2, %2
  %30 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 1
  %31 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %30 to i64*
  %32 = load atomic i64, i64* %31 acquire, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %46, label %34

34:                                               ; preds = %29
  %35 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #10
  %36 = load atomic i64, i64* %31 monotonic, align 8
  %37 = inttoptr i64 %36 to %"class.blink::PersistentNode"*
  %38 = icmp eq i64 %36, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %35, i64 0, i32 0, i32 0
  %41 = bitcast %"class.blink::CrossThreadPersistentRegion"* %35 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = inttoptr i64 %36 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %37, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %44, align 8
  store %"class.blink::PersistentNode"* %37, %"class.blink::PersistentNode"** %40, align 8
  br label %45

45:                                               ; preds = %39, %34
  store atomic i64 0, i64* %31 release, align 8
  br label %46

46:                                               ; preds = %5, %45, %29, %21, %10, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_23AnimationWorkletMutatorELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::PersistentBase"*
  tail call void @_ZNK5blink14PersistentBaseINS_23AnimationWorkletMutatorELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE15TracePersistentEPNS_7VisitorE(%"class.blink::PersistentBase"* %3, %"class.blink::Visitor"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink14PersistentBaseINS_23AnimationWorkletMutatorELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE15TracePersistentEPNS_7VisitorE(%"class.blink::PersistentBase"*, %"class.blink::Visitor"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 0
  %5 = load %"class.blink::AnimationWorkletMutator"*, %"class.blink::AnimationWorkletMutator"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #10
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #10
  %7 = icmp eq %"class.blink::AnimationWorkletMutator"* %5, null
  br i1 %7, label %75, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::AnimationWorkletMutator"* %5 to i8*
  %10 = ptrtoint %"class.blink::AnimationWorkletMutator"* %5 to i64
  %11 = and i64 %10, -131072
  %12 = inttoptr i64 %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 4138
  %14 = load i8, i8* %13, align 2
  %15 = icmp eq i8 %14, 1
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  %17 = getelementptr inbounds i8, i8* %12, i64 4160
  br label %56

18:                                               ; preds = %8
  %19 = getelementptr inbounds i8, i8* %12, i64 4096
  %20 = bitcast i8* %19 to %"class.blink::NormalPage"*
  %21 = getelementptr inbounds i8, i8* %12, i64 4400
  %22 = bitcast i8* %21 to i8**
  %23 = bitcast i8* %21 to i64*
  %24 = load i64, i64* %23, align 16
  %25 = sub i64 %10, %24
  %26 = lshr i64 %25, 3
  %27 = lshr i64 %25, 6
  %28 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %20, i64 0, i32 2, i32 0, i32 1, i64 %27
  %29 = load atomic i8, i8* %28 acquire, align 1
  %30 = trunc i64 %26 to i32
  %31 = and i32 %30, 7
  %32 = shl i32 2, %31
  %33 = trunc i32 %32 to i8
  %34 = add i8 %33, -1
  %35 = and i8 %34, %29
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %43

37:                                               ; preds = %18, %37
  %38 = phi i64 [ %39, %37 ], [ %27, %18 ]
  %39 = add i64 %38, -1
  %40 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %20, i64 0, i32 2, i32 0, i32 1, i64 %39
  %41 = load atomic i8, i8* %40 acquire, align 1
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %37, label %43

43:                                               ; preds = %37, %18
  %44 = phi i64 [ %27, %18 ], [ %39, %37 ]
  %45 = phi i8 [ %35, %18 ], [ %41, %37 ]
  %46 = zext i8 %45 to i32
  %47 = call i32 @llvm.ctlz.i32(i32 %46, i1 true) #10, !range !86
  %48 = add nsw i32 %47, -24
  %49 = shl i64 %44, 3
  %50 = or i64 %49, 7
  %51 = sext i32 %48 to i64
  %52 = sub i64 %50, %51
  %53 = shl i64 %52, 3
  %54 = load i8*, i8** %22, align 16
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  br label %56

56:                                               ; preds = %43, %16
  %57 = phi i8* [ %17, %16 ], [ %55, %43 ]
  %58 = getelementptr inbounds i8, i8* %57, i64 8
  %59 = getelementptr inbounds i8, i8* %57, i64 4
  %60 = bitcast i8* %59 to i16*
  %61 = load atomic i16, i16* %60 acquire, align 2
  %62 = lshr i16 %61, 2
  %63 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %64 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %63, i64 0, i32 0
  %65 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %64, align 8
  %66 = zext i16 %62 to i64
  %67 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %65, i64 %66
  %68 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %67, align 8
  %69 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %68, i64 0, i32 0
  %70 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %69, align 8
  %71 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %72, i64 8
  %74 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %73, align 8
  call void %74(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* %58, void (%"class.blink::Visitor"*, i8*)* %70, %"class.base::Location"* nonnull dereferenceable(32) %3) #10
  br label %75

75:                                               ; preds = %2, %56
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #10
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #9

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink37AnimationWorkletMutatorDispatcherImpl16RequestMutationsEN3WTF23CrossThreadOnceFunctionIFvvEEEE3$_1JNS2_25CrossThreadWeakPersistentINS2_23AnimationWorkletMutatorEEENSt3__110unique_ptrIN2cc21AnimationWorkletInputENSC_14default_deleteISF_EEEE13scoped_refptrINS3_15OutputVectorRefEEiNSD_INS_19ScopedClosureRunnerENSG_ISM_EEEEEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"struct.std::__1::__tuple_impl.413"*
  tail call void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2ELm3ELm4EEEEJN5blink25CrossThreadWeakPersistentINS3_23AnimationWorkletMutatorEEENS_10unique_ptrIN2cc21AnimationWorkletInputENS_14default_deleteIS9_EEEE13scoped_refptrINS3_37AnimationWorkletMutatorDispatcherImpl15OutputVectorRefEEiNS7_IN4base19ScopedClosureRunnerENSA_ISI_EEEEEED2Ev(%"struct.std::__1::__tuple_impl.413"* %5) #10
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2ELm3ELm4EEEEJN5blink25CrossThreadWeakPersistentINS3_23AnimationWorkletMutatorEEENS_10unique_ptrIN2cc21AnimationWorkletInputENS_14default_deleteIS9_EEEE13scoped_refptrINS3_37AnimationWorkletMutatorDispatcherImpl15OutputVectorRefEEiNS7_IN4base19ScopedClosureRunnerENSA_ISI_EEEEEED2Ev(%"struct.std::__1::__tuple_impl.413"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__tuple_impl.413", %"struct.std::__1::__tuple_impl.413"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.base::ScopedClosureRunner"*, %"class.base::ScopedClosureRunner"** %2, align 8
  store %"class.base::ScopedClosureRunner"* null, %"class.base::ScopedClosureRunner"** %2, align 8
  %4 = icmp eq %"class.base::ScopedClosureRunner"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN4base19ScopedClosureRunnerD1Ev(%"class.base::ScopedClosureRunner"* nonnull %3) #10
  %6 = bitcast %"class.base::ScopedClosureRunner"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"struct.std::__1::__tuple_impl.413", %"struct.std::__1::__tuple_impl.413"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"*, %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"** %8, align 8
  %10 = icmp eq %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"* %9, null
  br i1 %10, label %46, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef", %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"* %9, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef", %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw sub i32* %13, i32 1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %46

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.base::RefCountedThreadSafe.226", %"class.base::RefCountedThreadSafe.226"* %12, i64 2
  %18 = bitcast %"class.base::RefCountedThreadSafe.226"* %17 to %"class.std::__1::unique_ptr.230"**
  %19 = load %"class.std::__1::unique_ptr.230"*, %"class.std::__1::unique_ptr.230"** %18, align 8
  %20 = icmp eq %"class.std::__1::unique_ptr.230"* %19, null
  br i1 %20, label %44, label %21, !prof !2

21:                                               ; preds = %16
  %22 = bitcast %"class.std::__1::unique_ptr.230"* %19 to i8*
  %23 = getelementptr inbounds %"class.base::RefCountedThreadSafe.226", %"class.base::RefCountedThreadSafe.226"* %12, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %42, label %26, !prof !3

26:                                               ; preds = %21
  %27 = zext i32 %24 to i64
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %19, i64 %27
  br label %29

29:                                               ; preds = %36, %26
  %30 = phi %"class.std::__1::unique_ptr.230"* [ %37, %36 ], [ %19, %26 ]
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"struct.cc::AnimationWorkletOutput"*, %"struct.cc::AnimationWorkletOutput"** %31, align 8
  store %"struct.cc::AnimationWorkletOutput"* null, %"struct.cc::AnimationWorkletOutput"** %31, align 8
  %33 = icmp eq %"struct.cc::AnimationWorkletOutput"* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  tail call void @_ZN2cc22AnimationWorkletOutputD1Ev(%"struct.cc::AnimationWorkletOutput"* nonnull %32) #10
  %35 = bitcast %"struct.cc::AnimationWorkletOutput"* %32 to i8*
  tail call void @_ZdlPv(i8* %35) #11
  br label %36

36:                                               ; preds = %34, %29
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230"* %30, i64 1
  %38 = icmp eq %"class.std::__1::unique_ptr.230"* %37, %28
  br i1 %38, label %39, label %29

39:                                               ; preds = %36
  store i32 0, i32* %23, align 4
  %40 = bitcast %"class.base::RefCountedThreadSafe.226"* %17 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %39, %21
  %43 = phi i8* [ %41, %39 ], [ %22, %21 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #10
  br label %44

44:                                               ; preds = %42, %16
  %45 = bitcast %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"* %9 to i8*
  tail call void @free(i8* %45) #10
  br label %46

46:                                               ; preds = %7, %11, %44
  %47 = getelementptr inbounds %"struct.std::__1::__tuple_impl.413", %"struct.std::__1::__tuple_impl.413"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %48 = load %"struct.cc::AnimationWorkletInput"*, %"struct.cc::AnimationWorkletInput"** %47, align 8
  store %"struct.cc::AnimationWorkletInput"* null, %"struct.cc::AnimationWorkletInput"** %47, align 8
  %49 = icmp eq %"struct.cc::AnimationWorkletInput"* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  tail call void @_ZN2cc21AnimationWorkletInputD1Ev(%"struct.cc::AnimationWorkletInput"* nonnull %48) #10
  %51 = bitcast %"struct.cc::AnimationWorkletInput"* %48 to i8*
  tail call void @_ZdlPv(i8* %51) #11
  br label %52

52:                                               ; preds = %46, %50
  %53 = getelementptr inbounds %"struct.std::__1::__tuple_impl.413", %"struct.std::__1::__tuple_impl.413"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %54 = bitcast %"class.blink::CrossThreadPersistentNodePtr.364"* %53 to i64*
  %55 = load atomic i64, i64* %54 acquire, align 8
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %71, label %57

57:                                               ; preds = %52
  %58 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #10
  %59 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %58, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %59) #10
  %60 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() #10
  %61 = load atomic i64, i64* %54 monotonic, align 8
  %62 = inttoptr i64 %61 to %"class.blink::PersistentNode"*
  %63 = icmp eq i64 %61, 0
  br i1 %63, label %70, label %64

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %60, i64 0, i32 0, i32 0
  %66 = bitcast %"class.blink::CrossThreadPersistentRegion"* %60 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = inttoptr i64 %61 to i64*
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %62, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %69, align 8
  store %"class.blink::PersistentNode"* %62, %"class.blink::PersistentNode"** %65, align 8
  br label %70

70:                                               ; preds = %64, %57
  store atomic i64 0, i64* %54 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %59) #10
  br label %71

71:                                               ; preds = %52, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_23AnimationWorkletMutatorELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_23AnimationWorkletMutatorELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #10
  ret void
}

declare dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_23AnimationWorkletMutatorELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AnimationWorkletMutator"**
  %4 = load %"class.blink::AnimationWorkletMutator"*, %"class.blink::AnimationWorkletMutator"** %3, align 8
  %5 = icmp eq %"class.blink::AnimationWorkletMutator"* %4, null
  br i1 %5, label %22, label %6

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_23AnimationWorkletMutatorEEEbPKT_(%"class.blink::LivenessBroker"* %0, %"class.blink::AnimationWorkletMutator"* nonnull %4)
  br i1 %7, label %22, label %8

8:                                                ; preds = %6
  store %"class.blink::AnimationWorkletMutator"* null, %"class.blink::AnimationWorkletMutator"** %3, align 8
  %9 = getelementptr inbounds i8, i8* %1, i64 8
  %10 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() #10
  %11 = bitcast i8* %9 to i64*
  %12 = load atomic i64, i64* %11 monotonic, align 8
  %13 = inttoptr i64 %12 to %"class.blink::PersistentNode"*
  %14 = icmp eq i64 %12, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %10, i64 0, i32 0, i32 0
  %17 = bitcast %"class.blink::CrossThreadPersistentRegion"* %10 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = inttoptr i64 %12 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %13, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %20, align 8
  store %"class.blink::PersistentNode"* %13, %"class.blink::PersistentNode"** %16, align 8
  br label %21

21:                                               ; preds = %8, %15
  store atomic i64 0, i64* %11 release, align 8
  br label %22

22:                                               ; preds = %2, %21, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_23AnimationWorkletMutatorEEEbPKT_(%"class.blink::LivenessBroker"*, %"class.blink::AnimationWorkletMutator"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::AnimationWorkletMutator"* %1, null
  br i1 %3, label %73, label %4

4:                                                ; preds = %2
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #10
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #10
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = icmp eq %"class.blink::ThreadState"* %14, null
  br i1 %15, label %73, label %16

16:                                               ; preds = %11
  %17 = ptrtoint %"class.blink::AnimationWorkletMutator"* %1 to i64
  %18 = and i64 %17, -131072
  %19 = inttoptr i64 %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 4138
  %21 = load i8, i8* %20, align 2
  %22 = icmp eq i8 %21, 1
  br i1 %22, label %23, label %25

23:                                               ; preds = %16
  %24 = getelementptr inbounds i8, i8* %19, i64 4160
  br label %63

25:                                               ; preds = %16
  %26 = getelementptr inbounds i8, i8* %19, i64 4096
  %27 = bitcast i8* %26 to %"class.blink::NormalPage"*
  %28 = getelementptr inbounds i8, i8* %19, i64 4400
  %29 = bitcast i8* %28 to i8**
  %30 = bitcast i8* %28 to i64*
  %31 = load i64, i64* %30, align 16
  %32 = sub i64 %17, %31
  %33 = lshr i64 %32, 3
  %34 = lshr i64 %32, 6
  %35 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %27, i64 0, i32 2, i32 0, i32 1, i64 %34
  %36 = load atomic i8, i8* %35 acquire, align 1
  %37 = trunc i64 %33 to i32
  %38 = and i32 %37, 7
  %39 = shl i32 2, %38
  %40 = trunc i32 %39 to i8
  %41 = add i8 %40, -1
  %42 = and i8 %41, %36
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %50

44:                                               ; preds = %25, %44
  %45 = phi i64 [ %46, %44 ], [ %34, %25 ]
  %46 = add i64 %45, -1
  %47 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %27, i64 0, i32 2, i32 0, i32 1, i64 %46
  %48 = load atomic i8, i8* %47 acquire, align 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %44, label %50

50:                                               ; preds = %44, %25
  %51 = phi i64 [ %34, %25 ], [ %46, %44 ]
  %52 = phi i8 [ %42, %25 ], [ %48, %44 ]
  %53 = zext i8 %52 to i32
  %54 = tail call i32 @llvm.ctlz.i32(i32 %53, i1 true) #10, !range !86
  %55 = add nsw i32 %54, -24
  %56 = shl i64 %51, 3
  %57 = or i64 %56, 7
  %58 = sext i32 %55 to i64
  %59 = sub i64 %57, %58
  %60 = shl i64 %59, 3
  %61 = load i8*, i8** %29, align 16
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  br label %63

63:                                               ; preds = %23, %50
  %64 = phi i8* [ %24, %23 ], [ %62, %50 ]
  %65 = getelementptr inbounds i8, i8* %64, i64 4
  %66 = bitcast i8* %65 to i16*
  %67 = load atomic i16, i16* %66 acquire, align 2
  %68 = getelementptr inbounds i8, i8* %64, i64 6
  %69 = bitcast i8* %68 to i16*
  %70 = load i16, i16* %69, align 2
  %71 = and i16 %70, 1
  %72 = icmp ne i16 %71, 0
  br label %73

73:                                               ; preds = %11, %2, %63
  %74 = phi i1 [ %72, %63 ], [ true, %2 ], [ true, %11 ]
  ret i1 %74
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #5

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #5

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_23AnimationWorkletMutatorELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.363"*, %"class.blink::AnimationWorkletMutator"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase.363", %"class.blink::PersistentBase.363"* %0, i64 0, i32 0
  store %"class.blink::AnimationWorkletMutator"* %1, %"class.blink::AnimationWorkletMutator"** %3, align 8
  %4 = ptrtoint %"class.blink::AnimationWorkletMutator"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %29
    i64 -1, label %29
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase.363", %"class.blink::PersistentBase.363"* %0, i64 0, i32 1
  %7 = bitcast %"class.blink::CrossThreadPersistentNodePtr.364"* %6 to i64*
  %8 = load atomic i64, i64* %7 acquire, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %46

10:                                               ; preds = %5
  %11 = bitcast %"class.blink::PersistentBase.363"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  switch i64 %12, label %13 [
    i64 0, label %46
    i64 -1, label %46
  ]

13:                                               ; preds = %10
  %14 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() #10
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  %17 = icmp eq %"class.blink::PersistentNode"* %16, null
  br i1 %17, label %18, label %21, !prof !3

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %19) #10
  %20 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  br label %21

21:                                               ; preds = %18, %13
  %22 = phi %"class.blink::PersistentNode"* [ %20, %18 ], [ %16, %13 ]
  %23 = bitcast %"class.blink::PersistentNode"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::CrossThreadPersistentRegion"* %14 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast %"class.blink::PersistentNode"* %22 to %"class.blink::PersistentBase.363"**
  store %"class.blink::PersistentBase.363"* %0, %"class.blink::PersistentBase.363"** %26, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %22, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_23AnimationWorkletMutatorELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %27, align 8
  %28 = ptrtoint %"class.blink::PersistentNode"* %22 to i64
  store atomic i64 %28, i64* %7 release, align 8
  br label %46

29:                                               ; preds = %2, %2
  %30 = getelementptr inbounds %"class.blink::PersistentBase.363", %"class.blink::PersistentBase.363"* %0, i64 0, i32 1
  %31 = bitcast %"class.blink::CrossThreadPersistentNodePtr.364"* %30 to i64*
  %32 = load atomic i64, i64* %31 acquire, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %46, label %34

34:                                               ; preds = %29
  %35 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() #10
  %36 = load atomic i64, i64* %31 monotonic, align 8
  %37 = inttoptr i64 %36 to %"class.blink::PersistentNode"*
  %38 = icmp eq i64 %36, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %35, i64 0, i32 0, i32 0
  %41 = bitcast %"class.blink::CrossThreadPersistentRegion"* %35 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = inttoptr i64 %36 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %37, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %44, align 8
  store %"class.blink::PersistentNode"* %37, %"class.blink::PersistentNode"** %40, align 8
  br label %45

45:                                               ; preds = %39, %34
  store atomic i64 0, i64* %31 release, align 8
  br label %46

46:                                               ; preds = %5, %45, %29, %21, %10, %10
  ret void
}

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #5

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #2

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #5

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc17MutatorInputStateD1Ev(%"class.cc::MutatorInputState"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"*) unnamed_addr #2

declare void @_ZN5blink23CompositorMutatorClientC1ENSt3__110unique_ptrINS_37AnimationWorkletMutatorDispatcherImplENS1_14default_deleteIS3_EEEE(%"class.blink::CompositorMutatorClient"*, %"class.blink::AnimationWorkletMutatorDispatcherImpl"*) unnamed_addr #5

declare void @_ZN5blink23MainThreadMutatorClientC1ENSt3__110unique_ptrINS_37AnimationWorkletMutatorDispatcherImplENS1_14default_deleteIS3_EEEE(%"class.blink::MainThreadMutatorClient"*, %"class.blink::AnimationWorkletMutatorDispatcherImpl"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_23AnimationWorkletMutatorEEENS_12KeyValuePairIS4_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERS4_RS9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::CrossThreadPersistent"* dereferenceable(16), %class.scoped_refptr.172* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_23AnimationWorkletMutatorEEENS_12KeyValuePairIS4_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::CrossThreadPersistent"* %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::AnimationWorkletMutator"*, %"class.blink::AnimationWorkletMutator"** %40, align 8
  %42 = icmp eq %"class.blink::AnimationWorkletMutator"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::AnimationWorkletMutator"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::AnimationWorkletMutator"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::AnimationWorkletMutator"* %59, %43
  br i1 %64, label %126, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::AnimationWorkletMutator"* %59, inttoptr (i64 -1 to %"class.blink::AnimationWorkletMutator"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair"* %60, %"struct.WTF::KeyValuePair"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::AnimationWorkletMutator"*, %"class.blink::AnimationWorkletMutator"** %73, align 8
  %75 = icmp eq %"class.blink::AnimationWorkletMutator"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 24, i1 false) #10
  %80 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"struct.WTF::KeyValuePair"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #10
  %89 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %88, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %89) #10
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %87, i64 0, i32 0, i32 0
  %91 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %1, i64 0, i32 0, i32 0
  %92 = load %"class.blink::AnimationWorkletMutator"*, %"class.blink::AnimationWorkletMutator"** %91, align 8
  tail call void @_ZN5blink14PersistentBaseINS_23AnimationWorkletMutatorELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase"* %90, %"class.blink::AnimationWorkletMutator"* %92) #10
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %89) #10
  %93 = getelementptr inbounds %class.scoped_refptr.172, %class.scoped_refptr.172* %2, i64 0, i32 0
  %94 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %93, align 8
  %95 = icmp eq %"class.base::SingleThreadTaskRunner"* %94, null
  br i1 %95, label %99, label %96

96:                                               ; preds = %86
  %97 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %94, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = atomicrmw add i32* %97, i32 1 monotonic
  br label %99

99:                                               ; preds = %96, %86
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %87, i64 0, i32 1
  %101 = ptrtoint %"class.base::SingleThreadTaskRunner"* %94 to i64
  %102 = bitcast %class.scoped_refptr.172* %100 to i64*
  %103 = getelementptr inbounds %class.scoped_refptr.172, %class.scoped_refptr.172* %100, i64 0, i32 0
  %104 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %103, align 8
  store i64 %101, i64* %102, align 8
  %105 = icmp eq %"class.base::SingleThreadTaskRunner"* %104, null
  br i1 %105, label %114, label %106

106:                                              ; preds = %99
  %107 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %104, i64 0, i32 0, i32 0, i32 1
  %108 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %107, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = atomicrmw sub i32* %108, i32 1 acq_rel
  %110 = icmp eq i32 %109, 1
  br i1 %110, label %111, label %114

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %107, i64 -2
  %113 = bitcast %"class.base::RefCountedThreadSafe"* %112 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %113) #10
  br label %114

114:                                              ; preds = %99, %106, %111
  %115 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %116 = load i32, i32* %115, align 4
  %117 = add i32 %116, 1
  store i32 %117, i32* %115, align 4
  %118 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %119 = load i32, i32* %118, align 8
  %120 = add i32 %119, %117
  %121 = shl i32 %120, 1
  %122 = load i32, i32* %12, align 8
  %123 = icmp ult i32 %121, %122
  br i1 %123, label %126, label %124

124:                                              ; preds = %114
  %125 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_23AnimationWorkletMutatorEEENS_12KeyValuePairIS4_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %87)
  br label %126

126:                                              ; preds = %58, %114, %124
  %127 = phi i8 [ 1, %114 ], [ 1, %124 ], [ 0, %58 ]
  %128 = phi %"struct.WTF::KeyValuePair"* [ %87, %114 ], [ %125, %124 ], [ %60, %58 ]
  %129 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %128, 0
  %130 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %129, i8 %127, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %130
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_23AnimationWorkletMutatorEEENS_12KeyValuePairIS4_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.16, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 24
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([173 x i8], [173 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink21CrossThreadPersistentINS2_23AnimationWorkletMutatorEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #10
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_23AnimationWorkletMutatorEEENS_12KeyValuePairIS4_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #10
  ret %"struct.WTF::KeyValuePair"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_23AnimationWorkletMutatorEEENS_12KeyValuePairIS4_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair"* %22 to i64
  br label %86

24:                                               ; preds = %106
  %25 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %107, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %110, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %108, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %82, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %80, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %77, %39
  %42 = phi i64 [ 0, %39 ], [ %78, %77 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42, i32 0, i32 0, i32 0
  %44 = load %"class.blink::AnimationWorkletMutator"*, %"class.blink::AnimationWorkletMutator"** %43, align 8
  %45 = icmp eq %"class.blink::AnimationWorkletMutator"* %44, inttoptr (i64 -1 to %"class.blink::AnimationWorkletMutator"*)
  br i1 %45, label %77, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42, i32 1, i32 0
  %48 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %47, align 8
  %49 = icmp eq %"class.base::SingleThreadTaskRunner"* %48, null
  br i1 %49, label %58, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %48, i64 0, i32 0, i32 0, i32 1
  %52 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw sub i32* %52, i32 1 acq_rel
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %58

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %51, i64 -2
  %57 = bitcast %"class.base::RefCountedThreadSafe"* %56 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %57) #10
  br label %58

58:                                               ; preds = %55, %50, %46
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42, i32 0, i32 0, i32 1
  %60 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %59 to i64*
  %61 = load atomic i64, i64* %60 acquire, align 8
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %77, label %63

63:                                               ; preds = %58
  %64 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #10
  %65 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %64, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %65) #10
  %66 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #10
  %67 = load atomic i64, i64* %60 monotonic, align 8
  %68 = inttoptr i64 %67 to %"class.blink::PersistentNode"*
  %69 = icmp eq i64 %67, 0
  br i1 %69, label %76, label %70

70:                                               ; preds = %63
  %71 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %66, i64 0, i32 0, i32 0
  %72 = bitcast %"class.blink::CrossThreadPersistentRegion"* %66 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = inttoptr i64 %67 to i64*
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %68, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %75, align 8
  store %"class.blink::PersistentNode"* %68, %"class.blink::PersistentNode"** %71, align 8
  br label %76

76:                                               ; preds = %70, %63
  store atomic i64 0, i64* %60 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %65) #10
  br label %77

77:                                               ; preds = %76, %58, %41
  %78 = add nuw nsw i64 %42, 1
  %79 = icmp eq i64 %78, %40
  br i1 %79, label %80, label %41

80:                                               ; preds = %77, %37
  %81 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %81) #10
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %82

82:                                               ; preds = %28, %80
  %83 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %84 = load i32, i32* %83, align 8
  %85 = and i32 %84, -2147483648
  store i32 %85, i32* %83, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret %"struct.WTF::KeyValuePair"* %33

86:                                               ; preds = %21, %106
  %87 = phi i64 [ %107, %106 ], [ %23, %21 ]
  %88 = phi i32 [ %108, %106 ], [ %13, %21 ]
  %89 = phi %"struct.WTF::KeyValuePair"* [ %109, %106 ], [ %22, %21 ]
  %90 = phi %"struct.WTF::KeyValuePair"* [ %110, %106 ], [ null, %21 ]
  %91 = phi i32 [ %111, %106 ], [ 0, %21 ]
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %89, i64 %92
  %94 = bitcast %"struct.WTF::KeyValuePair"* %93 to i64*
  %95 = load i64, i64* %94, align 8
  switch i64 %95, label %96 [
    i64 -1, label %106
    i64 0, label %106
  ]

96:                                               ; preds = %86
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %93, i64 0, i32 0
  %98 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_23AnimationWorkletMutatorEEENS_12KeyValuePairIS4_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable"* nonnull %5, %"class.blink::CrossThreadPersistent"* dereferenceable(16) %97) #10
  %99 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %98, 0
  call void @_ZN3WTF5MoverINS_12KeyValuePairIN5blink21CrossThreadPersistentINS2_23AnimationWorkletMutatorEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_18PartitionAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSD_IS9_EEEELb0EE4MoveEOSA_RSA_(%"struct.WTF::KeyValuePair"* dereferenceable(24) %93, %"struct.WTF::KeyValuePair"* dereferenceable(24) %99) #10
  %100 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %100, i64 %92
  %102 = icmp eq %"struct.WTF::KeyValuePair"* %101, %3
  %103 = select i1 %102, %"struct.WTF::KeyValuePair"* %99, %"struct.WTF::KeyValuePair"* %90
  %104 = load i32, i32* %12, align 8
  %105 = ptrtoint %"struct.WTF::KeyValuePair"* %100 to i64
  br label %106

106:                                              ; preds = %86, %86, %96
  %107 = phi i64 [ %87, %86 ], [ %105, %96 ], [ %87, %86 ]
  %108 = phi i32 [ %88, %86 ], [ %104, %96 ], [ %88, %86 ]
  %109 = phi %"struct.WTF::KeyValuePair"* [ %89, %86 ], [ %100, %96 ], [ %89, %86 ]
  %110 = phi %"struct.WTF::KeyValuePair"* [ %90, %86 ], [ %103, %96 ], [ %90, %86 ]
  %111 = add i32 %91, 1
  %112 = icmp eq i32 %111, %108
  br i1 %112, label %24, label %86
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_23AnimationWorkletMutatorEEENS_12KeyValuePairIS4_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable"*, %"class.blink::CrossThreadPersistent"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::CrossThreadPersistent"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::AnimationWorkletMutator"*, %"class.blink::AnimationWorkletMutator"** %34, align 8
  %36 = icmp eq %"class.blink::AnimationWorkletMutator"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::AnimationWorkletMutator"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %70
  %53 = ptrtoint %"struct.WTF::KeyValuePair"* %77 to i64
  %54 = inttoptr i64 %72 to %"struct.WTF::KeyValuePair"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %82

61:                                               ; preds = %70, %38
  %62 = phi i64 [ 0, %38 ], [ %72, %70 ]
  %63 = phi %"class.blink::AnimationWorkletMutator"* [ %35, %38 ], [ %80, %70 ]
  %64 = phi i64 [ %33, %38 ], [ %78, %70 ]
  %65 = phi i64 [ %31, %38 ], [ %76, %70 ]
  %66 = phi i64 [ 0, %38 ], [ %74, %70 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %65, i32 0, i32 0, i32 0
  %68 = load %"class.blink::AnimationWorkletMutator"*, %"class.blink::AnimationWorkletMutator"** %67, align 8
  %69 = icmp eq %"class.blink::AnimationWorkletMutator"* %68, %37
  br i1 %69, label %82, label %70

70:                                               ; preds = %61
  %71 = icmp eq %"class.blink::AnimationWorkletMutator"* %63, inttoptr (i64 -1 to %"class.blink::AnimationWorkletMutator"*)
  %72 = select i1 %71, i64 %64, i64 %62
  %73 = icmp eq i64 %66, 0
  %74 = select i1 %73, i64 %51, i64 %66
  %75 = add i64 %74, %65
  %76 = and i64 %75, %8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::AnimationWorkletMutator"*, %"class.blink::AnimationWorkletMutator"** %79, align 8
  %81 = icmp eq %"class.blink::AnimationWorkletMutator"* %80, null
  br i1 %81, label %52, label %61

82:                                               ; preds = %61, %55
  %83 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %84 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %87
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5MoverINS_12KeyValuePairIN5blink21CrossThreadPersistentINS2_23AnimationWorkletMutatorEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_18PartitionAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSD_IS9_EEEELb0EE4MoveEOSA_RSA_(%"struct.WTF::KeyValuePair"* dereferenceable(24), %"struct.WTF::KeyValuePair"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %13) #10
  br label %14

14:                                               ; preds = %11, %6, %2
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 0, i32 1
  %16 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %15 to i64*
  %17 = load atomic i64, i64* %16 acquire, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %33, label %19

19:                                               ; preds = %14
  %20 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #10
  %21 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %20, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %21) #10
  %22 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #10
  %23 = load atomic i64, i64* %16 monotonic, align 8
  %24 = inttoptr i64 %23 to %"class.blink::PersistentNode"*
  %25 = icmp eq i64 %23, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %22, i64 0, i32 0, i32 0
  %28 = bitcast %"class.blink::CrossThreadPersistentRegion"* %22 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = inttoptr i64 %23 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %24, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %31, align 8
  store %"class.blink::PersistentNode"* %24, %"class.blink::PersistentNode"** %27, align 8
  br label %32

32:                                               ; preds = %26, %19
  store atomic i64 0, i64* %16 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %21) #10
  br label %33

33:                                               ; preds = %14, %32
  %34 = bitcast %"struct.WTF::KeyValuePair"* %1 to i8*
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false) #10
  %36 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #10
  %37 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %36, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %37) #10
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::AnimationWorkletMutator"*, %"class.blink::AnimationWorkletMutator"** %38, align 8
  tail call void @_ZN5blink14PersistentBaseINS_23AnimationWorkletMutatorELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase"* %35, %"class.blink::AnimationWorkletMutator"* %39) #10
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %37) #10
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1
  %42 = getelementptr inbounds %class.scoped_refptr.172, %class.scoped_refptr.172* %41, i64 0, i32 0
  %43 = bitcast %class.scoped_refptr.172* %41 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %class.scoped_refptr.172* %40 to i64*
  store i64 %44, i64* %45, align 8
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** %42, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_23AnimationWorkletMutatorEEENS_12KeyValuePairIS4_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE12DeleteBucketERKSA_(%"struct.WTF::KeyValuePair"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %2, align 8
  %4 = icmp eq %"class.base::SingleThreadTaskRunner"* %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %3, i64 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %13

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %6, i64 -2
  %12 = bitcast %"class.base::RefCountedThreadSafe"* %11 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %12) #10
  br label %13

13:                                               ; preds = %10, %5, %1
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %14 to i64*
  %16 = load atomic i64, i64* %15 acquire, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %13
  %19 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #10
  %20 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %19, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %20) #10
  %21 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #10
  %22 = load atomic i64, i64* %15 monotonic, align 8
  %23 = inttoptr i64 %22 to %"class.blink::PersistentNode"*
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %21, i64 0, i32 0, i32 0
  %27 = bitcast %"class.blink::CrossThreadPersistentRegion"* %21 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = inttoptr i64 %22 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %23, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %30, align 8
  store %"class.blink::PersistentNode"* %23, %"class.blink::PersistentNode"** %26, align 8
  br label %31

31:                                               ; preds = %25, %18
  store atomic i64 0, i64* %15 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %20) #10
  br label %32

32:                                               ; preds = %13, %31
  %33 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #10
  %34 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %33, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %34) #10
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::AnimationWorkletMutator"* inttoptr (i64 -1 to %"class.blink::AnimationWorkletMutator"*), %"class.blink::AnimationWorkletMutator"** %35, align 8
  %36 = load atomic i64, i64* %15 acquire, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %50, label %38

38:                                               ; preds = %32
  %39 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #10
  %40 = load atomic i64, i64* %15 monotonic, align 8
  %41 = inttoptr i64 %40 to %"class.blink::PersistentNode"*
  %42 = icmp eq i64 %40, 0
  br i1 %42, label %49, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %39, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::CrossThreadPersistentRegion"* %39 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = inttoptr i64 %40 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %41, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %41, %"class.blink::PersistentNode"** %44, align 8
  br label %49

49:                                               ; preds = %43, %38
  store atomic i64 0, i64* %15 release, align 8
  br label %50

50:                                               ; preds = %32, %49
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %34) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink21CrossThreadPersistentINS1_23AnimationWorkletMutatorEEENS_12KeyValuePairIS4_13scoped_refptrIN4base22SingleThreadTaskRunnerEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE4findEPS3_(%"class.WTF::HashTable"*, %"class.blink::AnimationWorkletMutator"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::AnimationWorkletMutator"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::AnimationWorkletMutator"*, %"class.blink::AnimationWorkletMutator"** %34, align 8
  %36 = icmp eq %"class.blink::AnimationWorkletMutator"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::AnimationWorkletMutator"*, %"class.blink::AnimationWorkletMutator"** %54, align 8
  %56 = icmp eq %"class.blink::AnimationWorkletMutator"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::AnimationWorkletMutator"*, %"class.blink::AnimationWorkletMutator"** %63, align 8
  %65 = icmp eq %"class.blink::AnimationWorkletMutator"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78, %"struct.WTF::KeyValuePair"* %77, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79
}

; Function Attrs: nounwind
declare void @_ZN2cc21AnimationWorkletInputD1Ev(%"struct.cc::AnimationWorkletInput"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.182"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN2cc21AnimationWorkletInputENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSE_IS8_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EERKiS8_EENS_18HashTableAddResultISJ_S9_EEOT0_OT1_(%"class.WTF::HashTable.179"*, i32* dereferenceable(4), %"class.std::__1::unique_ptr.183"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.179", %"class.WTF::HashTable.179"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.182"*, %"struct.WTF::KeyValuePair.182"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.182"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.182"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN2cc21AnimationWorkletInputENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSE_IS8_EEEESF_NS_18PartitionAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable.179"* %0, %"struct.WTF::KeyValuePair.182"* null)
  %9 = load %"struct.WTF::KeyValuePair.182"*, %"struct.WTF::KeyValuePair.182"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.182"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.179", %"class.WTF::HashTable.179"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %79, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair.182"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair.182"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %105, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1
  %59 = select i1 %58, %"struct.WTF::KeyValuePair.182"* %52, %"struct.WTF::KeyValuePair.182"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair.182"* %59, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.182"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #10
  %72 = getelementptr inbounds %"class.WTF::HashTable.179", %"class.WTF::HashTable.179"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  %78 = load i32, i32* %1, align 4
  br label %79

79:                                               ; preds = %10, %68, %70
  %80 = phi i32 [ %78, %70 ], [ %16, %68 ], [ %16, %10 ]
  %81 = phi %"struct.WTF::KeyValuePair.182"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %81, i64 0, i32 0
  store i32 %80, i32* %82, align 8
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %81, i64 0, i32 1
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.183"* %2, i64 0, i32 0, i32 0, i32 0
  %85 = bitcast %"class.std::__1::unique_ptr.183"* %2 to i64*
  %86 = load i64, i64* %85, align 8
  store %"struct.cc::AnimationWorkletInput"* null, %"struct.cc::AnimationWorkletInput"** %84, align 8
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.183"* %83, i64 0, i32 0, i32 0, i32 0
  %88 = load %"struct.cc::AnimationWorkletInput"*, %"struct.cc::AnimationWorkletInput"** %87, align 8
  %89 = bitcast %"class.std::__1::unique_ptr.183"* %83 to i64*
  store i64 %86, i64* %89, align 8
  %90 = icmp eq %"struct.cc::AnimationWorkletInput"* %88, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %79
  tail call void @_ZN2cc21AnimationWorkletInputD1Ev(%"struct.cc::AnimationWorkletInput"* nonnull %88) #10
  %92 = bitcast %"struct.cc::AnimationWorkletInput"* %88 to i8*
  tail call void @_ZdlPv(i8* %92) #11
  br label %93

93:                                               ; preds = %79, %91
  %94 = getelementptr inbounds %"class.WTF::HashTable.179", %"class.WTF::HashTable.179"* %0, i64 0, i32 2
  %95 = load i32, i32* %94, align 4
  %96 = add i32 %95, 1
  store i32 %96, i32* %94, align 4
  %97 = getelementptr inbounds %"class.WTF::HashTable.179", %"class.WTF::HashTable.179"* %0, i64 0, i32 3
  %98 = load i32, i32* %97, align 8
  %99 = add i32 %98, %96
  %100 = shl i32 %99, 1
  %101 = load i32, i32* %12, align 8
  %102 = icmp ult i32 %100, %101
  br i1 %102, label %105, label %103

103:                                              ; preds = %93
  %104 = tail call %"struct.WTF::KeyValuePair.182"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN2cc21AnimationWorkletInputENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSE_IS8_EEEESF_NS_18PartitionAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable.179"* %0, %"struct.WTF::KeyValuePair.182"* %81)
  br label %105

105:                                              ; preds = %50, %93, %103
  %106 = phi i8 [ 1, %93 ], [ 1, %103 ], [ 0, %50 ]
  %107 = phi %"struct.WTF::KeyValuePair.182"* [ %81, %93 ], [ %104, %103 ], [ %52, %50 ]
  %108 = insertvalue { %"struct.WTF::KeyValuePair.182"*, i8 } undef, %"struct.WTF::KeyValuePair.182"* %107, 0
  %109 = insertvalue { %"struct.WTF::KeyValuePair.182"*, i8 } %108, i8 %106, 1
  ret { %"struct.WTF::KeyValuePair.182"*, i8 } %109
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.182"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN2cc21AnimationWorkletInputENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSE_IS8_EEEESF_NS_18PartitionAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable.179"*, %"struct.WTF::KeyValuePair.182"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.179", %"class.WTF::HashTable.179"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.179", %"class.WTF::HashTable.179"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.16, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([174 x i8], [174 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIiNSt3__110unique_ptrIN2cc21AnimationWorkletInputENS2_14default_deleteIS5_EEEEEEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #10
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.182"*
  %37 = call %"struct.WTF::KeyValuePair.182"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN2cc21AnimationWorkletInputENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSE_IS8_EEEESF_NS_18PartitionAllocatorEE8RehashToEPS9_jSK_(%"class.WTF::HashTable.179"* %0, %"struct.WTF::KeyValuePair.182"* %36, i32 %32, %"struct.WTF::KeyValuePair.182"* %1) #10
  ret %"struct.WTF::KeyValuePair.182"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.182"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIiNSt3__110unique_ptrIN2cc21AnimationWorkletInputENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENSE_IS8_EEEESF_NS_18PartitionAllocatorEE8RehashToEPS9_jSK_(%"class.WTF::HashTable.179"*, %"struct.WTF::KeyValuePair.182"*, i32, %"struct.WTF::KeyValuePair.182"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.182"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.179", %"class.WTF::HashTable.179"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.179", %"class.WTF::HashTable.179"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.179"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair.182"*, %"struct.WTF::KeyValuePair.182"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair.182"* %16 to i64
  br label %51

18:                                               ; preds = %148
  %19 = bitcast %"class.WTF::HashTable.179"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %149, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair.182"* [ null, %10 ], [ %152, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %150, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair.182"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %47, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %45, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %42, %29
  %32 = phi i64 [ 0, %29 ], [ %43, %42 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %25, i64 %32, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %42, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %25, i64 %32, i32 1, i32 0, i32 0, i32 0
  %38 = load %"struct.cc::AnimationWorkletInput"*, %"struct.cc::AnimationWorkletInput"** %37, align 8
  store %"struct.cc::AnimationWorkletInput"* null, %"struct.cc::AnimationWorkletInput"** %37, align 8
  %39 = icmp eq %"struct.cc::AnimationWorkletInput"* %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  tail call void @_ZN2cc21AnimationWorkletInputD1Ev(%"struct.cc::AnimationWorkletInput"* nonnull %38) #10
  %41 = bitcast %"struct.cc::AnimationWorkletInput"* %38 to i8*
  tail call void @_ZdlPv(i8* %41) #11
  br label %42

42:                                               ; preds = %40, %36, %31
  %43 = add nuw nsw i64 %32, 1
  %44 = icmp eq i64 %43, %30
  br i1 %44, label %45, label %31

45:                                               ; preds = %42, %27
  %46 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %46) #10
  br label %47

47:                                               ; preds = %20, %45
  %48 = getelementptr inbounds %"class.WTF::HashTable.179", %"class.WTF::HashTable.179"* %0, i64 0, i32 3
  %49 = load i32, i32* %48, align 8
  %50 = and i32 %49, -2147483648
  store i32 %50, i32* %48, align 8
  ret %"struct.WTF::KeyValuePair.182"* %23

51:                                               ; preds = %13, %148
  %52 = phi i64 [ %17, %13 ], [ %149, %148 ]
  %53 = phi i32 [ %7, %13 ], [ %150, %148 ]
  %54 = phi %"struct.WTF::KeyValuePair.182"* [ %16, %13 ], [ %151, %148 ]
  %55 = phi %"struct.WTF::KeyValuePair.182"* [ null, %13 ], [ %152, %148 ]
  %56 = phi i32 [ 0, %13 ], [ %153, %148 ]
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %54, i64 %57, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = add i32 %59, 1
  %61 = icmp ult i32 %60, 2
  br i1 %61, label %148, label %62

62:                                               ; preds = %51
  %63 = shl i32 %59, 15
  %64 = xor i32 %63, -1
  %65 = add i32 %59, %64
  %66 = lshr i32 %65, 10
  %67 = xor i32 %66, %65
  %68 = mul i32 %67, 9
  %69 = lshr i32 %68, 6
  %70 = xor i32 %69, %68
  %71 = shl i32 %70, 11
  %72 = xor i32 %71, -1
  %73 = add i32 %70, %72
  %74 = lshr i32 %73, 16
  %75 = xor i32 %74, %73
  %76 = and i32 %75, %14
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %1, i64 %77
  %79 = ptrtoint %"struct.WTF::KeyValuePair.182"* %78 to i64
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %78, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %100, label %83

83:                                               ; preds = %62
  %84 = xor i32 %75, -1
  %85 = lshr i32 %73, 23
  %86 = add i32 %85, %84
  %87 = shl i32 %86, 12
  %88 = xor i32 %87, %86
  %89 = lshr i32 %88, 7
  %90 = xor i32 %89, %88
  %91 = shl i32 %90, 2
  %92 = xor i32 %91, %90
  %93 = lshr i32 %92, 20
  %94 = xor i32 %93, %92
  %95 = or i32 %94, 1
  %96 = zext i32 %95 to i64
  br label %106

97:                                               ; preds = %113
  %98 = ptrtoint %"struct.WTF::KeyValuePair.182"* %120 to i64
  %99 = inttoptr i64 %115 to %"struct.WTF::KeyValuePair.182"*
  br label %100

100:                                              ; preds = %97, %62
  %101 = phi i64 [ %98, %97 ], [ %79, %62 ]
  %102 = phi %"struct.WTF::KeyValuePair.182"* [ %99, %97 ], [ null, %62 ]
  %103 = icmp eq %"struct.WTF::KeyValuePair.182"* %102, null
  %104 = ptrtoint %"struct.WTF::KeyValuePair.182"* %102 to i64
  %105 = select i1 %103, i64 %101, i64 %104
  br label %125

106:                                              ; preds = %113, %83
  %107 = phi i64 [ 0, %83 ], [ %115, %113 ]
  %108 = phi i32 [ %81, %83 ], [ %123, %113 ]
  %109 = phi i64 [ %79, %83 ], [ %121, %113 ]
  %110 = phi i64 [ %77, %83 ], [ %119, %113 ]
  %111 = phi i64 [ 0, %83 ], [ %117, %113 ]
  %112 = icmp eq i32 %108, %59
  br i1 %112, label %125, label %113

113:                                              ; preds = %106
  %114 = icmp eq i32 %108, -1
  %115 = select i1 %114, i64 %109, i64 %107
  %116 = icmp eq i64 %111, 0
  %117 = select i1 %116, i64 %96, i64 %111
  %118 = add i64 %117, %110
  %119 = and i64 %118, %15
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %1, i64 %119
  %121 = ptrtoint %"struct.WTF::KeyValuePair.182"* %120 to i64
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %120, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %97, label %106

125:                                              ; preds = %106, %100
  %126 = phi i64 [ %105, %100 ], [ %109, %106 ]
  %127 = inttoptr i64 %126 to %"struct.WTF::KeyValuePair.182"*
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %127, i64 0, i32 1, i32 0, i32 0, i32 0
  %129 = load %"struct.cc::AnimationWorkletInput"*, %"struct.cc::AnimationWorkletInput"** %128, align 8
  store %"struct.cc::AnimationWorkletInput"* null, %"struct.cc::AnimationWorkletInput"** %128, align 8
  %130 = icmp eq %"struct.cc::AnimationWorkletInput"* %129, null
  br i1 %130, label %133, label %131

131:                                              ; preds = %125
  tail call void @_ZN2cc21AnimationWorkletInputD1Ev(%"struct.cc::AnimationWorkletInput"* nonnull %129) #10
  %132 = bitcast %"struct.cc::AnimationWorkletInput"* %129 to i8*
  tail call void @_ZdlPv(i8* %132) #11
  br label %133

133:                                              ; preds = %125, %131
  %134 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %127, i64 0, i32 0
  %135 = load i32, i32* %58, align 8
  store i32 %135, i32* %134, align 8
  %136 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %127, i64 0, i32 1
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %54, i64 %57, i32 1
  %138 = getelementptr inbounds %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.183"* %137, i64 0, i32 0, i32 0, i32 0
  %139 = bitcast %"class.std::__1::unique_ptr.183"* %137 to i64*
  %140 = load i64, i64* %139, align 8
  store %"struct.cc::AnimationWorkletInput"* null, %"struct.cc::AnimationWorkletInput"** %138, align 8
  %141 = bitcast %"class.std::__1::unique_ptr.183"* %136 to i64*
  store i64 %140, i64* %141, align 8
  %142 = load %"struct.WTF::KeyValuePair.182"*, %"struct.WTF::KeyValuePair.182"** %9, align 8
  %143 = getelementptr inbounds %"struct.WTF::KeyValuePair.182", %"struct.WTF::KeyValuePair.182"* %142, i64 %57
  %144 = icmp eq %"struct.WTF::KeyValuePair.182"* %143, %3
  %145 = select i1 %144, %"struct.WTF::KeyValuePair.182"* %127, %"struct.WTF::KeyValuePair.182"* %55
  %146 = load i32, i32* %6, align 8
  %147 = ptrtoint %"struct.WTF::KeyValuePair.182"* %142 to i64
  br label %148

148:                                              ; preds = %51, %133
  %149 = phi i64 [ %52, %51 ], [ %147, %133 ]
  %150 = phi i32 [ %53, %51 ], [ %146, %133 ]
  %151 = phi %"struct.WTF::KeyValuePair.182"* [ %54, %51 ], [ %142, %133 ]
  %152 = phi %"struct.WTF::KeyValuePair.182"* [ %55, %51 ], [ %145, %133 ]
  %153 = add i32 %56, 1
  %154 = icmp eq i32 %153, %150
  br i1 %154, label %18, label %51
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN2cc22AnimationWorkletOutputENS2_14default_deleteIS5_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.18, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.19, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #5

declare void @_ZN4base19ScopedClosureRunnerC1ENS_12OnceCallbackIFvvEEE(%"class.base::ScopedClosureRunner"*, %"class.base::OnceCallback.344"*) unnamed_addr #5

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base19ScopedClosureRunnerD1Ev(%"class.base::ScopedClosureRunner"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK4base14WeakPtrFactoryIN5blink37AnimationWorkletMutatorDispatcherImplEE10GetWeakPtrEv: argument 0"}
!6 = distinct !{!6, !"_ZNK4base14WeakPtrFactoryIN5blink37AnimationWorkletMutatorDispatcherImplEE10GetWeakPtrEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK4base14WeakPtrFactoryIN5blink37AnimationWorkletMutatorDispatcherImplEE10GetWeakPtrEv: argument 0"}
!9 = distinct !{!9, !"_ZNK4base14WeakPtrFactoryIN5blink37AnimationWorkletMutatorDispatcherImplEE10GetWeakPtrEv"}
!10 = !{!11, !13, !15}
!11 = distinct !{!11, !12, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMNS_13WaitableEventEFvvEJN3WTF28CrossThreadUnretainedWrapperIS3_EEEEEDcOT0_DpOT1_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMNS_13WaitableEventEFvvEJN3WTF28CrossThreadUnretainedWrapperIS3_EEEEEDcOT0_DpOT1_"}
!13 = distinct !{!13, !14, !"_ZN4base8BindOnceIMNS_13WaitableEventEFvvEJN3WTF28CrossThreadUnretainedWrapperIS1_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8BindOnceIMNS_13WaitableEventEFvvEJN3WTF28CrossThreadUnretainedWrapperIS1_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!15 = distinct !{!15, !16, !"_ZN3WTF19CrossThreadBindOnceIMN4base13WaitableEventEFvvEJNS_28CrossThreadUnretainedWrapperIS2_EEEEEDaOT_DpOT0_: argument 0"}
!16 = distinct !{!16, !"_ZN3WTF19CrossThreadBindOnceIMN4base13WaitableEventEFvvEJNS_28CrossThreadUnretainedWrapperIS2_EEEEEDaOT_DpOT0_"}
!17 = !{!15}
!18 = !{!19, !15}
!19 = distinct !{!19, !20, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!20 = distinct !{!20, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!23 = distinct !{!23, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN5blink29WrapCrossThreadWeakPersistentINS_23AnimationWorkletMutatorEEENS_25CrossThreadWeakPersistentIT_EEPS3_: argument 0"}
!26 = distinct !{!26, !"_ZN5blink29WrapCrossThreadWeakPersistentINS_23AnimationWorkletMutatorEEENS_25CrossThreadWeakPersistentIT_EEPS3_"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN3WTF19CrossThreadBindOnceIZN5blink37AnimationWorkletMutatorDispatcherImpl16RequestMutationsENS_23CrossThreadOnceFunctionIFvvEEEE3$_1JNS1_25CrossThreadWeakPersistentINS1_23AnimationWorkletMutatorEEENSt3__110unique_ptrIN2cc21AnimationWorkletInputENSA_14default_deleteISD_EEEER13scoped_refptrINS2_15OutputVectorRefEEiNSB_IN4base19ScopedClosureRunnerENSE_ISM_EEEEEEEDaOT_DpOT0_: argument 0"}
!29 = distinct !{!29, !"_ZN3WTF19CrossThreadBindOnceIZN5blink37AnimationWorkletMutatorDispatcherImpl16RequestMutationsENS_23CrossThreadOnceFunctionIFvvEEEE3$_1JNS1_25CrossThreadWeakPersistentINS1_23AnimationWorkletMutatorEEENSt3__110unique_ptrIN2cc21AnimationWorkletInputENSA_14default_deleteISD_EEEER13scoped_refptrINS2_15OutputVectorRefEEiNSB_IN4base19ScopedClosureRunnerENSE_ISM_EEEEEEEDaOT_DpOT0_"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZN3WTF28CrossThreadCopierPassThroughIN5blink25CrossThreadWeakPersistentINS1_23AnimationWorkletMutatorEEEE4CopyERKS4_: argument 0"}
!32 = distinct !{!32, !"_ZN3WTF28CrossThreadCopierPassThroughIN5blink25CrossThreadWeakPersistentINS1_23AnimationWorkletMutatorEEEE4CopyERKS4_"}
!33 = !{!31, !28}
!34 = !{!35, !37, !28}
!35 = distinct !{!35, !36, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink37AnimationWorkletMutatorDispatcherImpl16RequestMutationsEN3WTF23CrossThreadOnceFunctionIFvvEEEE3$_1JNS3_25CrossThreadWeakPersistentINS3_23AnimationWorkletMutatorEEENSt3__110unique_ptrIN2cc21AnimationWorkletInputENSD_14default_deleteISG_EEEE13scoped_refptrINS4_15OutputVectorRefEEiNSE_INS_19ScopedClosureRunnerENSH_ISN_EEEEEEEDcOT0_DpOT1_: argument 0"}
!36 = distinct !{!36, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink37AnimationWorkletMutatorDispatcherImpl16RequestMutationsEN3WTF23CrossThreadOnceFunctionIFvvEEEE3$_1JNS3_25CrossThreadWeakPersistentINS3_23AnimationWorkletMutatorEEENSt3__110unique_ptrIN2cc21AnimationWorkletInputENSD_14default_deleteISG_EEEE13scoped_refptrINS4_15OutputVectorRefEEiNSE_INS_19ScopedClosureRunnerENSH_ISN_EEEEEEEDcOT0_DpOT1_"}
!37 = distinct !{!37, !38, !"_ZN4base8BindOnceIZN5blink37AnimationWorkletMutatorDispatcherImpl16RequestMutationsEN3WTF23CrossThreadOnceFunctionIFvvEEEE3$_1JNS1_25CrossThreadWeakPersistentINS1_23AnimationWorkletMutatorEEENSt3__110unique_ptrIN2cc21AnimationWorkletInputENSB_14default_deleteISE_EEEE13scoped_refptrINS2_15OutputVectorRefEEiNSC_INS_19ScopedClosureRunnerENSF_ISL_EEEEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSR_DpOSS_: argument 0"}
!38 = distinct !{!38, !"_ZN4base8BindOnceIZN5blink37AnimationWorkletMutatorDispatcherImpl16RequestMutationsEN3WTF23CrossThreadOnceFunctionIFvvEEEE3$_1JNS1_25CrossThreadWeakPersistentINS1_23AnimationWorkletMutatorEEENSt3__110unique_ptrIN2cc21AnimationWorkletInputENSB_14default_deleteISE_EEEE13scoped_refptrINS2_15OutputVectorRefEEiNSC_INS_19ScopedClosureRunnerENSF_ISL_EEEEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSR_DpOSS_"}
!39 = !{!40, !28}
!40 = distinct !{!40, !41, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!41 = distinct !{!41, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!44 = distinct !{!44, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZNK4base14WeakPtrFactoryIN5blink37AnimationWorkletMutatorDispatcherImplEE10GetWeakPtrEv: argument 0"}
!47 = distinct !{!47, !"_ZNK4base14WeakPtrFactoryIN5blink37AnimationWorkletMutatorDispatcherImplEE10GetWeakPtrEv"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZN3WTF19CrossThreadBindOnceIZN5blink37AnimationWorkletMutatorDispatcherImpl28MutateAsynchronouslyInternalEN4base9TimeTicksENS_23CrossThreadOnceFunctionIFvN2cc12MutateStatusEEEEE3$_0JR13scoped_refptrINS3_22SingleThreadTaskRunnerEENS3_7WeakPtrIS2_EERiRS4_EEEDaOT_DpOT0_: argument 0"}
!50 = distinct !{!50, !"_ZN3WTF19CrossThreadBindOnceIZN5blink37AnimationWorkletMutatorDispatcherImpl28MutateAsynchronouslyInternalEN4base9TimeTicksENS_23CrossThreadOnceFunctionIFvN2cc12MutateStatusEEEEE3$_0JR13scoped_refptrINS3_22SingleThreadTaskRunnerEENS3_7WeakPtrIS2_EERiRS4_EEEDaOT_DpOT0_"}
!51 = !{!52, !49}
!52 = distinct !{!52, !53, !"_ZN3WTF28CrossThreadCopierPassThroughIN4base7WeakPtrIN5blink37AnimationWorkletMutatorDispatcherImplEEEE4CopyERKS5_: argument 0"}
!53 = distinct !{!53, !"_ZN3WTF28CrossThreadCopierPassThroughIN4base7WeakPtrIN5blink37AnimationWorkletMutatorDispatcherImplEEEE4CopyERKS5_"}
!54 = !{!52}
!55 = !{!56, !58, !49}
!56 = distinct !{!56, !57, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink37AnimationWorkletMutatorDispatcherImpl28MutateAsynchronouslyInternalENS_9TimeTicksEN3WTF23CrossThreadOnceFunctionIFvN2cc12MutateStatusEEEEE3$_0J13scoped_refptrINS_22SingleThreadTaskRunnerEENS_7WeakPtrIS4_EEiS5_EEEDcOT0_DpOT1_: argument 0"}
!57 = distinct !{!57, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink37AnimationWorkletMutatorDispatcherImpl28MutateAsynchronouslyInternalENS_9TimeTicksEN3WTF23CrossThreadOnceFunctionIFvN2cc12MutateStatusEEEEE3$_0J13scoped_refptrINS_22SingleThreadTaskRunnerEENS_7WeakPtrIS4_EEiS5_EEEDcOT0_DpOT1_"}
!58 = distinct !{!58, !59, !"_ZN4base8BindOnceIZN5blink37AnimationWorkletMutatorDispatcherImpl28MutateAsynchronouslyInternalENS_9TimeTicksEN3WTF23CrossThreadOnceFunctionIFvN2cc12MutateStatusEEEEE3$_0J13scoped_refptrINS_22SingleThreadTaskRunnerEENS_7WeakPtrIS2_EEiS3_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!59 = distinct !{!59, !"_ZN4base8BindOnceIZN5blink37AnimationWorkletMutatorDispatcherImpl28MutateAsynchronouslyInternalENS_9TimeTicksEN3WTF23CrossThreadOnceFunctionIFvN2cc12MutateStatusEEEEE3$_0J13scoped_refptrINS_22SingleThreadTaskRunnerEENS_7WeakPtrIS2_EEiS3_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!60 = !{!61, !49}
!61 = distinct !{!61, !62, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!62 = distinct !{!62, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_ZN3WTF19CrossThreadBindOnceIMN5blink37AnimationWorkletMutatorDispatcherImplEFviN4base9TimeTicksEEJRNS3_7WeakPtrIS2_EERiRS4_EEEDaOT_DpOT0_: argument 0"}
!65 = distinct !{!65, !"_ZN3WTF19CrossThreadBindOnceIMN5blink37AnimationWorkletMutatorDispatcherImplEFviN4base9TimeTicksEEJRNS3_7WeakPtrIS2_EERiRS4_EEEDaOT_DpOT0_"}
!66 = !{!67, !64}
!67 = distinct !{!67, !68, !"_ZN3WTF28CrossThreadCopierPassThroughIN4base7WeakPtrIN5blink37AnimationWorkletMutatorDispatcherImplEEEE4CopyERKS5_: argument 0"}
!68 = distinct !{!68, !"_ZN3WTF28CrossThreadCopierPassThroughIN4base7WeakPtrIN5blink37AnimationWorkletMutatorDispatcherImplEEEE4CopyERKS5_"}
!69 = !{!67}
!70 = !{!71, !73, !64}
!71 = distinct !{!71, !72, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink37AnimationWorkletMutatorDispatcherImplEFviNS_9TimeTicksEEJNS_7WeakPtrIS4_EEiS5_EEEDcOT0_DpOT1_: argument 0"}
!72 = distinct !{!72, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink37AnimationWorkletMutatorDispatcherImplEFviNS_9TimeTicksEEJNS_7WeakPtrIS4_EEiS5_EEEDcOT0_DpOT1_"}
!73 = distinct !{!73, !74, !"_ZN4base8BindOnceIMN5blink37AnimationWorkletMutatorDispatcherImplEFviNS_9TimeTicksEEJNS_7WeakPtrIS2_EEiS3_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!74 = distinct !{!74, !"_ZN4base8BindOnceIMN5blink37AnimationWorkletMutatorDispatcherImplEFviNS_9TimeTicksEEJNS_7WeakPtrIS2_EEiS3_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!75 = !{!76, !64}
!76 = distinct !{!76, !77, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!77 = distinct !{!77, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!80 = distinct !{!80, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!81 = !{!82, !84}
!82 = distinct !{!82, !83, !"_ZN4base16BindUnwrapTraitsIN5blink25CrossThreadWeakPersistentINS1_23AnimationWorkletMutatorEEEE6UnwrapERKS4_: argument 0"}
!83 = distinct !{!83, !"_ZN4base16BindUnwrapTraitsIN5blink25CrossThreadWeakPersistentINS1_23AnimationWorkletMutatorEEEE6UnwrapERKS4_"}
!84 = distinct !{!84, !85, !"_ZN4base8internal6UnwrapIN5blink25CrossThreadWeakPersistentINS2_23AnimationWorkletMutatorEEEEEDcOT_: argument 0"}
!85 = distinct !{!85, !"_ZN4base8internal6UnwrapIN5blink25CrossThreadWeakPersistentINS2_23AnimationWorkletMutatorEEEEEDcOT_"}
!86 = !{i32 24, i32 33}
