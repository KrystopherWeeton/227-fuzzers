; ModuleID = '../../courgette/disassembler_win32_x64.cc'
source_filename = "../../courgette/disassembler_win32_x64.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.courgette::DisassemblerWin32X64" = type { %"class.courgette::DisassemblerWin32" }
%"class.courgette::DisassemblerWin32" = type { %"class.courgette::Disassembler", i8, %"class.std::__1::vector", %"class.std::__1::vector", i8*, i16, i16, i16, %"struct.courgette::Section"*, i8, i32, i32, i32, i32, i32, i64, i32, i32, %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory" }
%"class.courgette::Disassembler" = type { %"class.courgette::AddressTranslator", i8*, i64, i8*, i8* }
%"class.courgette::AddressTranslator" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"struct.courgette::Section" = type { [8 x i8], i32, i32, i32, i32, i32, i32, i16, i16, i32 }
%"class.courgette::ImageDataDirectory" = type { i32, i32 }
%"class.courgette::Label" = type { i32, i32, i32 }
%"class.courgette::InstructionReceptor" = type { i32 (...)** }
%"class.courgette::Rel32FinderX64" = type <{ %"class.courgette::Rel32Finder", i32, [4 x i8] }>
%"class.courgette::Rel32Finder" = type { i32 (...)**, i32, i32, %"class.std::__1::vector" }
%"class.courgette::RvaVisitor" = type { i32 (...)** }
%"class.courgette::AssemblyProgram" = type { i32, i64, %"class.courgette::LabelManager", %"class.courgette::LabelManager", %"class.std::__1::vector.8", %"class.std::__1::vector.8" }
%"class.courgette::LabelManager" = type { %"class.std::__1::vector.1" }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.courgette::Label"*, %"class.courgette::Label"*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.courgette::Label"* }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"class.courgette::Label"**, %"class.courgette::Label"**, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.courgette::Label"** }

$_ZN9courgette11Rel32FinderD2Ev = comdat any

$_ZN9courgette17DisassemblerWin32D2Ev = comdat any

$_ZN9courgette20DisassemblerWin32X64D0Ev = comdat any

$_ZNK9courgette20DisassemblerWin32X644kindEv = comdat any

$_ZNK9courgette17DisassemblerWin3210image_baseEv = comdat any

$_ZNK9courgette20DisassemblerWin32X6410AbsVAWidthEv = comdat any

$_ZNK9courgette20DisassemblerWin32X6420SupportsRelTableTypeEi = comdat any

$_ZNK9courgette20DisassemblerWin32X6431RelativeOffsetOfDataDirectoriesEv = comdat any

$_ZN9courgette11Rel32FinderD0Ev = comdat any

$_ZTVN9courgette11Rel32FinderE = comdat any

@_ZTVN9courgette20DisassemblerWin32X64E = hidden unnamed_addr constant { [23 x i8*] } { [23 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%"class.courgette::DisassemblerWin32"*, i64)* @_ZNK9courgette17DisassemblerWin3215FileOffsetToRVAEm to i8*), i8* bitcast (i64 (%"class.courgette::DisassemblerWin32"*, i32)* @_ZNK9courgette17DisassemblerWin3215RVAToFileOffsetEj to i8*), i8* bitcast (i8* (%"class.courgette::Disassembler"*, i64)* @_ZNK9courgette12Disassembler19FileOffsetToPointerEm to i8*), i8* bitcast (i8* (%"class.courgette::Disassembler"*, i32)* @_ZNK9courgette12Disassembler12RVAToPointerEj to i8*), i8* bitcast (i32 (%"class.courgette::DisassemblerWin32X64"*, i8*)* @_ZNK9courgette20DisassemblerWin32X6418PointerToTargetRVAEPKh to i8*), i8* bitcast (void (%"class.courgette::DisassemblerWin32"*)* @_ZN9courgette17DisassemblerWin32D2Ev to i8*), i8* bitcast (void (%"class.courgette::DisassemblerWin32X64"*)* @_ZN9courgette20DisassemblerWin32X64D0Ev to i8*), i8* bitcast (i32 (%"class.courgette::DisassemblerWin32X64"*)* @_ZNK9courgette20DisassemblerWin32X644kindEv to i8*), i8* bitcast (i64 (%"class.courgette::DisassemblerWin32"*)* @_ZNK9courgette17DisassemblerWin3210image_baseEv to i8*), i8* bitcast (i1 (%"class.courgette::DisassemblerWin32"*)* @_ZN9courgette17DisassemblerWin3221ExtractAbs32LocationsEv to i8*), i8* bitcast (i1 (%"class.courgette::DisassemblerWin32"*)* @_ZN9courgette17DisassemblerWin3221ExtractRel32LocationsEv to i8*), i8* bitcast (%"class.courgette::RvaVisitor"* (%"class.courgette::DisassemblerWin32"*)* @_ZN9courgette17DisassemblerWin3227CreateAbs32TargetRvaVisitorEv to i8*), i8* bitcast (%"class.courgette::RvaVisitor"* (%"class.courgette::DisassemblerWin32"*)* @_ZN9courgette17DisassemblerWin3227CreateRel32TargetRvaVisitorEv to i8*), i8* bitcast (void (%"class.courgette::DisassemblerWin32"*, %"class.courgette::AssemblyProgram"*)* @_ZN9courgette17DisassemblerWin3226RemoveUnusedRel32LocationsEPNS_15AssemblyProgramE to i8*), i8* bitcast (i1 (%"class.courgette::DisassemblerWin32"*)* @_ZN9courgette17DisassemblerWin3211ParseHeaderEv to i8*), i8* bitcast (void ()* @_ZN9courgette17DisassemblerWin3223GetInstructionGeneratorEPNS_15AssemblyProgramE to i8*), i8* bitcast (void (%"class.courgette::DisassemblerWin32X64"*, %"struct.courgette::Section"*)* @_ZN9courgette20DisassemblerWin32X6427ParseRel32RelocsFromSectionEPKNS_7SectionE to i8*), i8* bitcast (i32 (%"class.courgette::DisassemblerWin32X64"*)* @_ZNK9courgette20DisassemblerWin32X6410AbsVAWidthEv to i8*), i8* bitcast (i1 (%"class.courgette::DisassemblerWin32X64"*, %"class.courgette::Label"*, %"class.courgette::InstructionReceptor"*)* @_ZNK9courgette20DisassemblerWin32X647EmitAbsEPNS_5LabelEPNS_19InstructionReceptorE to i8*), i8* bitcast (i1 (%"class.courgette::DisassemblerWin32X64"*, i32)* @_ZNK9courgette20DisassemblerWin32X6420SupportsRelTableTypeEi to i8*), i8* bitcast (i16 (%"class.courgette::DisassemblerWin32X64"*)* @_ZNK9courgette20DisassemblerWin32X6431RelativeOffsetOfDataDirectoriesEv to i8*)] }, align 8
@.str = private unnamed_addr constant [6 x i8] c".text\00", align 1
@_ZTVN9courgette11Rel32FinderE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.courgette::Rel32Finder"*)* @_ZN9courgette11Rel32FinderD2Ev to i8*), i8* bitcast (void (%"class.courgette::Rel32Finder"*)* @_ZN9courgette11Rel32FinderD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN9courgette17DisassemblerWin32E = external unnamed_addr constant { [23 x i8*] }, align 8

@_ZN9courgette20DisassemblerWin32X64C1EPKhm = hidden unnamed_addr alias void (%"class.courgette::DisassemblerWin32X64"*, i8*, i64), void (%"class.courgette::DisassemblerWin32X64"*, i8*, i64)* @_ZN9courgette20DisassemblerWin32X64C2EPKhm

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9courgette20DisassemblerWin32X64C2EPKhm(%"class.courgette::DisassemblerWin32X64"*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.courgette::DisassemblerWin32X64", %"class.courgette::DisassemblerWin32X64"* %0, i64 0, i32 0
  tail call void @_ZN9courgette17DisassemblerWin32C2EPKhm(%"class.courgette::DisassemblerWin32"* %4, i8* %1, i64 %2) #7
  %5 = getelementptr inbounds %"class.courgette::DisassemblerWin32X64", %"class.courgette::DisassemblerWin32X64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTVN9courgette20DisassemblerWin32X64E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  ret void
}

declare void @_ZN9courgette17DisassemblerWin32C2EPKhm(%"class.courgette::DisassemblerWin32"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK9courgette20DisassemblerWin32X6418PointerToTargetRVAEPKh(%"class.courgette::DisassemblerWin32X64"*, i8* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.courgette::DisassemblerWin32X64", %"class.courgette::DisassemblerWin32X64"* %0, i64 0, i32 0
  %6 = bitcast %"class.courgette::DisassemblerWin32X64"* %0 to i64 (%"class.courgette::DisassemblerWin32"*)***
  %7 = load i64 (%"class.courgette::DisassemblerWin32"*)**, i64 (%"class.courgette::DisassemblerWin32"*)*** %6, align 8
  %8 = getelementptr inbounds i64 (%"class.courgette::DisassemblerWin32"*)*, i64 (%"class.courgette::DisassemblerWin32"*)** %7, i64 8
  %9 = load i64 (%"class.courgette::DisassemblerWin32"*)*, i64 (%"class.courgette::DisassemblerWin32"*)** %8, align 8
  %10 = tail call i64 %9(%"class.courgette::DisassemblerWin32"* %5) #7
  %11 = icmp ugt i64 %10, %4
  br i1 %11, label %32, label %12

12:                                               ; preds = %2
  %13 = load i64 (%"class.courgette::DisassemblerWin32"*)**, i64 (%"class.courgette::DisassemblerWin32"*)*** %6, align 8
  %14 = getelementptr inbounds i64 (%"class.courgette::DisassemblerWin32"*)*, i64 (%"class.courgette::DisassemblerWin32"*)** %13, i64 8
  %15 = load i64 (%"class.courgette::DisassemblerWin32"*)*, i64 (%"class.courgette::DisassemblerWin32"*)** %14, align 8
  %16 = tail call i64 %15(%"class.courgette::DisassemblerWin32"* %5) #7
  %17 = getelementptr inbounds %"class.courgette::DisassemblerWin32X64", %"class.courgette::DisassemblerWin32X64"* %0, i64 0, i32 0, i32 16
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  %20 = add i64 %16, %19
  %21 = icmp ugt i64 %20, %4
  br i1 %21, label %22, label %32

22:                                               ; preds = %12
  %23 = load i64 (%"class.courgette::DisassemblerWin32"*)**, i64 (%"class.courgette::DisassemblerWin32"*)*** %6, align 8
  %24 = getelementptr inbounds i64 (%"class.courgette::DisassemblerWin32"*)*, i64 (%"class.courgette::DisassemblerWin32"*)** %23, i64 8
  %25 = load i64 (%"class.courgette::DisassemblerWin32"*)*, i64 (%"class.courgette::DisassemblerWin32"*)** %24, align 8
  %26 = tail call i64 %25(%"class.courgette::DisassemblerWin32"* %5) #7
  %27 = sub i64 %4, %26
  %28 = icmp ult i64 %27, 4294967296
  br i1 %28, label %30, label %29, !prof !2

29:                                               ; preds = %22
  tail call void @llvm.trap() #7
  unreachable

30:                                               ; preds = %22
  %31 = trunc i64 %27 to i32
  br label %32

32:                                               ; preds = %2, %12, %30
  %33 = phi i32 [ %31, %30 ], [ -1, %12 ], [ -1, %2 ]
  ret i32 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK9courgette20DisassemblerWin32X6414Address64ToRVAEm(%"class.courgette::DisassemblerWin32X64"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.courgette::DisassemblerWin32X64", %"class.courgette::DisassemblerWin32X64"* %0, i64 0, i32 0
  %4 = bitcast %"class.courgette::DisassemblerWin32X64"* %0 to i64 (%"class.courgette::DisassemblerWin32"*)***
  %5 = load i64 (%"class.courgette::DisassemblerWin32"*)**, i64 (%"class.courgette::DisassemblerWin32"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.courgette::DisassemblerWin32"*)*, i64 (%"class.courgette::DisassemblerWin32"*)** %5, i64 8
  %7 = load i64 (%"class.courgette::DisassemblerWin32"*)*, i64 (%"class.courgette::DisassemblerWin32"*)** %6, align 8
  %8 = tail call i64 %7(%"class.courgette::DisassemblerWin32"* %3) #7
  %9 = icmp ugt i64 %8, %1
  br i1 %9, label %30, label %10

10:                                               ; preds = %2
  %11 = load i64 (%"class.courgette::DisassemblerWin32"*)**, i64 (%"class.courgette::DisassemblerWin32"*)*** %4, align 8
  %12 = getelementptr inbounds i64 (%"class.courgette::DisassemblerWin32"*)*, i64 (%"class.courgette::DisassemblerWin32"*)** %11, i64 8
  %13 = load i64 (%"class.courgette::DisassemblerWin32"*)*, i64 (%"class.courgette::DisassemblerWin32"*)** %12, align 8
  %14 = tail call i64 %13(%"class.courgette::DisassemblerWin32"* %3) #7
  %15 = getelementptr inbounds %"class.courgette::DisassemblerWin32X64", %"class.courgette::DisassemblerWin32X64"* %0, i64 0, i32 0, i32 16
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = add i64 %14, %17
  %19 = icmp ugt i64 %18, %1
  br i1 %19, label %20, label %30

20:                                               ; preds = %10
  %21 = load i64 (%"class.courgette::DisassemblerWin32"*)**, i64 (%"class.courgette::DisassemblerWin32"*)*** %4, align 8
  %22 = getelementptr inbounds i64 (%"class.courgette::DisassemblerWin32"*)*, i64 (%"class.courgette::DisassemblerWin32"*)** %21, i64 8
  %23 = load i64 (%"class.courgette::DisassemblerWin32"*)*, i64 (%"class.courgette::DisassemblerWin32"*)** %22, align 8
  %24 = tail call i64 %23(%"class.courgette::DisassemblerWin32"* %3) #7
  %25 = sub i64 %1, %24
  %26 = icmp ult i64 %25, 4294967296
  br i1 %26, label %28, label %27, !prof !2

27:                                               ; preds = %20
  tail call void @llvm.trap() #7
  unreachable

28:                                               ; preds = %20
  %29 = trunc i64 %25 to i32
  br label %30

30:                                               ; preds = %2, %10, %28
  %31 = phi i32 [ %29, %28 ], [ -1, %10 ], [ -1, %2 ]
  ret i32 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK9courgette20DisassemblerWin32X647EmitAbsEPNS_5LabelEPNS_19InstructionReceptorE(%"class.courgette::DisassemblerWin32X64"* nocapture readnone, %"class.courgette::Label"*, %"class.courgette::InstructionReceptor"*) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.courgette::InstructionReceptor"* %2 to i1 (%"class.courgette::InstructionReceptor"*, %"class.courgette::Label"*)***
  %5 = load i1 (%"class.courgette::InstructionReceptor"*, %"class.courgette::Label"*)**, i1 (%"class.courgette::InstructionReceptor"*, %"class.courgette::Label"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.courgette::InstructionReceptor"*, %"class.courgette::Label"*)*, i1 (%"class.courgette::InstructionReceptor"*, %"class.courgette::Label"*)** %5, i64 9
  %7 = load i1 (%"class.courgette::InstructionReceptor"*, %"class.courgette::Label"*)*, i1 (%"class.courgette::InstructionReceptor"*, %"class.courgette::Label"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.courgette::InstructionReceptor"* %2, %"class.courgette::Label"* %1) #7
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9courgette20DisassemblerWin32X6427ParseRel32RelocsFromSectionEPKNS_7SectionE(%"class.courgette::DisassemblerWin32X64"*, %"struct.courgette::Section"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.courgette::Rel32FinderX64", align 8
  %4 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %1, i64 0, i32 0, i64 0
  %5 = tail call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)) #8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %57

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %1, i64 0, i32 4
  %9 = load i32, i32* %8, align 1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %1, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.courgette::Section", %"struct.courgette::Section"* %1, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = load i32, i32* %11, align 4
  %15 = icmp ult i32 %13, %14
  %16 = select i1 %15, i32 %13, i32 %14
  %17 = zext i32 %16 to i64
  %18 = add nuw nsw i64 %17, %10
  %19 = getelementptr inbounds %"class.courgette::DisassemblerWin32X64", %"class.courgette::DisassemblerWin32X64"* %0, i64 0, i32 0, i32 0
  %20 = bitcast %"class.courgette::DisassemblerWin32X64"* %0 to i8* (%"class.courgette::Disassembler"*, i64)***
  %21 = load i8* (%"class.courgette::Disassembler"*, i64)**, i8* (%"class.courgette::Disassembler"*, i64)*** %20, align 8
  %22 = getelementptr inbounds i8* (%"class.courgette::Disassembler"*, i64)*, i8* (%"class.courgette::Disassembler"*, i64)** %21, i64 2
  %23 = load i8* (%"class.courgette::Disassembler"*, i64)*, i8* (%"class.courgette::Disassembler"*, i64)** %22, align 8
  %24 = tail call i8* %23(%"class.courgette::Disassembler"* %19, i64 %10) #7
  %25 = load i8* (%"class.courgette::Disassembler"*, i64)**, i8* (%"class.courgette::Disassembler"*, i64)*** %20, align 8
  %26 = getelementptr inbounds i8* (%"class.courgette::Disassembler"*, i64)*, i8* (%"class.courgette::Disassembler"*, i64)** %25, i64 2
  %27 = load i8* (%"class.courgette::Disassembler"*, i64)*, i8* (%"class.courgette::Disassembler"*, i64)** %26, align 8
  %28 = tail call i8* %27(%"class.courgette::Disassembler"* %19, i64 %18) #7
  %29 = getelementptr inbounds %"class.courgette::DisassemblerWin32X64", %"class.courgette::DisassemblerWin32X64"* %0, i64 0, i32 0
  %30 = bitcast %"class.courgette::DisassemblerWin32X64"* %0 to i32 (%"class.courgette::DisassemblerWin32"*, i64)***
  %31 = load i32 (%"class.courgette::DisassemblerWin32"*, i64)**, i32 (%"class.courgette::DisassemblerWin32"*, i64)*** %30, align 8
  %32 = load i32 (%"class.courgette::DisassemblerWin32"*, i64)*, i32 (%"class.courgette::DisassemblerWin32"*, i64)** %31, align 8
  %33 = tail call i32 %32(%"class.courgette::DisassemblerWin32"* %29, i64 %10) #7
  %34 = load i32, i32* %11, align 1
  %35 = add i32 %34, %33
  %36 = bitcast %"class.courgette::Rel32FinderX64"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %36) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 48, i1 false)
  %37 = getelementptr inbounds %"class.courgette::DisassemblerWin32X64", %"class.courgette::DisassemblerWin32X64"* %0, i64 0, i32 0, i32 22, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.courgette::DisassemblerWin32X64", %"class.courgette::DisassemblerWin32X64"* %0, i64 0, i32 0, i32 22, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = add i32 %40, %38
  %42 = getelementptr inbounds %"class.courgette::DisassemblerWin32X64", %"class.courgette::DisassemblerWin32X64"* %0, i64 0, i32 0, i32 16
  %43 = load i32, i32* %42, align 8
  call void @_ZN9courgette14Rel32FinderX64C1Ejjj(%"class.courgette::Rel32FinderX64"* nonnull %3, i32 %38, i32 %41, i32 %43) #7
  %44 = getelementptr inbounds %"class.courgette::DisassemblerWin32X64", %"class.courgette::DisassemblerWin32X64"* %0, i64 0, i32 0, i32 2
  call void @_ZN9courgette14Rel32FinderX644FindEPKhS2_jjRKNSt3__16vectorIjNS3_9allocatorIjEEEE(%"class.courgette::Rel32FinderX64"* nonnull %3, i8* %24, i8* %28, i32 %33, i32 %35, %"class.std::__1::vector"* dereferenceable(24) %44) #7
  %45 = getelementptr inbounds %"class.courgette::Rel32FinderX64", %"class.courgette::Rel32FinderX64"* %3, i64 0, i32 0
  %46 = getelementptr inbounds %"class.courgette::DisassemblerWin32X64", %"class.courgette::DisassemblerWin32X64"* %0, i64 0, i32 0, i32 3
  call void @_ZN9courgette11Rel32Finder18SwapRel32LocationsEPNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.courgette::Rel32Finder"* nonnull %45, %"class.std::__1::vector"* %46) #7
  %47 = getelementptr inbounds %"class.courgette::Rel32FinderX64", %"class.courgette::Rel32FinderX64"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN9courgette11Rel32FinderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %47, align 8
  %48 = getelementptr inbounds %"class.courgette::Rel32FinderX64", %"class.courgette::Rel32FinderX64"* %3, i64 0, i32 0, i32 3, i32 0, i32 0
  %49 = load i32*, i32** %48, align 8
  %50 = icmp eq i32* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %7
  %52 = ptrtoint i32* %49 to i64
  %53 = getelementptr inbounds %"class.courgette::Rel32FinderX64", %"class.courgette::Rel32FinderX64"* %3, i64 0, i32 0, i32 3, i32 0, i32 1
  %54 = bitcast i32** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = bitcast i32* %49 to i8*
  call void @_ZdlPv(i8* %55) #9
  br label %56

56:                                               ; preds = %7, %51
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %36) #7
  br label %57

57:                                               ; preds = %2, %56
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN9courgette14Rel32FinderX64C1Ejjj(%"class.courgette::Rel32FinderX64"*, i32, i32, i32) unnamed_addr #1

declare void @_ZN9courgette14Rel32FinderX644FindEPKhS2_jjRKNSt3__16vectorIjNS3_9allocatorIjEEEE(%"class.courgette::Rel32FinderX64"*, i8*, i8*, i32, i32, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN9courgette11Rel32Finder18SwapRel32LocationsEPNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.courgette::Rel32Finder"*, %"class.std::__1::vector"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9courgette11Rel32FinderD2Ev(%"class.courgette::Rel32Finder"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.courgette::Rel32Finder", %"class.courgette::Rel32Finder"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN9courgette11Rel32FinderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.courgette::Rel32Finder", %"class.courgette::Rel32Finder"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i32* %4 to i64
  %8 = getelementptr inbounds %"class.courgette::Rel32Finder", %"class.courgette::Rel32Finder"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i32* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @_ZNK9courgette17DisassemblerWin3215FileOffsetToRVAEm(%"class.courgette::DisassemblerWin32"*, i64) unnamed_addr #1

declare i64 @_ZNK9courgette17DisassemblerWin3215RVAToFileOffsetEj(%"class.courgette::DisassemblerWin32"*, i32) unnamed_addr #1

declare i8* @_ZNK9courgette12Disassembler19FileOffsetToPointerEm(%"class.courgette::Disassembler"*, i64) unnamed_addr #1

declare i8* @_ZNK9courgette12Disassembler12RVAToPointerEj(%"class.courgette::Disassembler"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9courgette17DisassemblerWin32D2Ev(%"class.courgette::DisassemblerWin32"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTVN9courgette17DisassemblerWin32E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i32* %4 to i64
  %8 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i32* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 2, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 2, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #9
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 0
  tail call void @_ZN9courgette12DisassemblerD2Ev(%"class.courgette::Disassembler"* %21) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9courgette20DisassemblerWin32X64D0Ev(%"class.courgette::DisassemblerWin32X64"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.courgette::DisassemblerWin32X64", %"class.courgette::DisassemblerWin32X64"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTVN9courgette17DisassemblerWin32E, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.courgette::DisassemblerWin32X64", %"class.courgette::DisassemblerWin32X64"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i32* %4 to i64
  %8 = getelementptr inbounds %"class.courgette::DisassemblerWin32X64", %"class.courgette::DisassemblerWin32X64"* %0, i64 0, i32 0, i32 3, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i32* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.courgette::DisassemblerWin32X64", %"class.courgette::DisassemblerWin32X64"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %"class.courgette::DisassemblerWin32X64", %"class.courgette::DisassemblerWin32X64"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #9
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.courgette::DisassemblerWin32X64", %"class.courgette::DisassemblerWin32X64"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN9courgette12DisassemblerD2Ev(%"class.courgette::Disassembler"* %21) #7
  %22 = bitcast %"class.courgette::DisassemblerWin32X64"* %0 to i8*
  tail call void @_ZdlPv(i8* %22) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK9courgette20DisassemblerWin32X644kindEv(%"class.courgette::DisassemblerWin32X64"*) unnamed_addr #0 comdat align 2 {
  ret i32 4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK9courgette17DisassemblerWin3210image_baseEv(%"class.courgette::DisassemblerWin32"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.courgette::DisassemblerWin32", %"class.courgette::DisassemblerWin32"* %0, i64 0, i32 15
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

declare zeroext i1 @_ZN9courgette17DisassemblerWin3221ExtractAbs32LocationsEv(%"class.courgette::DisassemblerWin32"*) unnamed_addr #1

declare zeroext i1 @_ZN9courgette17DisassemblerWin3221ExtractRel32LocationsEv(%"class.courgette::DisassemblerWin32"*) unnamed_addr #1

declare %"class.courgette::RvaVisitor"* @_ZN9courgette17DisassemblerWin3227CreateAbs32TargetRvaVisitorEv(%"class.courgette::DisassemblerWin32"*) unnamed_addr #1

declare %"class.courgette::RvaVisitor"* @_ZN9courgette17DisassemblerWin3227CreateRel32TargetRvaVisitorEv(%"class.courgette::DisassemblerWin32"*) unnamed_addr #1

declare void @_ZN9courgette17DisassemblerWin3226RemoveUnusedRel32LocationsEPNS_15AssemblyProgramE(%"class.courgette::DisassemblerWin32"*, %"class.courgette::AssemblyProgram"*) unnamed_addr #1

declare zeroext i1 @_ZN9courgette17DisassemblerWin3211ParseHeaderEv(%"class.courgette::DisassemblerWin32"*) unnamed_addr #1

declare void @_ZN9courgette17DisassemblerWin3223GetInstructionGeneratorEPNS_15AssemblyProgramE() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK9courgette20DisassemblerWin32X6410AbsVAWidthEv(%"class.courgette::DisassemblerWin32X64"*) unnamed_addr #0 comdat align 2 {
  ret i32 8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK9courgette20DisassemblerWin32X6420SupportsRelTableTypeEi(%"class.courgette::DisassemblerWin32X64"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 10
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i16 @_ZNK9courgette20DisassemblerWin32X6431RelativeOffsetOfDataDirectoriesEv(%"class.courgette::DisassemblerWin32X64"*) unnamed_addr #0 comdat align 2 {
  ret i16 112
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9courgette11Rel32FinderD0Ev(%"class.courgette::Rel32Finder"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN9courgette12DisassemblerD2Ev(%"class.courgette::Disassembler"*) unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nounwind readonly }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
