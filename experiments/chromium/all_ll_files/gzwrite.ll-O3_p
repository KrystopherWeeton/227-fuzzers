; ModuleID = '../../third_party/zlib/gzwrite.c'
source_filename = "../../third_party/zlib/gzwrite.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%struct.gzFile_s = type { i32, i8*, i64 }
%struct.gz_state = type { %struct.gzFile_s, i32, i32, i8*, i32, i32, i8*, i8*, i32, i32, i64, i32, i32, i32, i32, i64, i32, i32, i8*, %struct.z_stream_s }
%struct.z_stream_s = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.internal_state*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.internal_state = type opaque
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@.str = private unnamed_addr constant [37 x i8] c"requested length does not fit in int\00", align 1
@.str.1 = private unnamed_addr constant [33 x i8] c"request does not fit in a size_t\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"out of memory\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"1.2.11\00", align 1
@.str.4 = private unnamed_addr constant [39 x i8] c"internal error: deflate stream corrupt\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Cr_z_gzwrite(%struct.gzFile_s*, i8*, i32) local_unnamed_addr #0 {
  %4 = icmp eq %struct.gzFile_s* %0, null
  br i1 %4, label %21, label %5

5:                                                ; preds = %3
  %6 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %7 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 31153
  br i1 %9, label %10, label %21

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %6, i64 0, i32 17
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %10
  %15 = icmp slt i32 %2, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %14
  tail call void @Cr_z_gz_error(%struct.gz_state* nonnull %6, i32 -3, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0)) #5
  br label %21

17:                                               ; preds = %14
  %18 = zext i32 %2 to i64
  %19 = tail call fastcc i64 @gz_write(%struct.gz_state* nonnull %6, i8* %1, i64 %18)
  %20 = trunc i64 %19 to i32
  br label %21

21:                                               ; preds = %5, %10, %3, %17, %16
  %22 = phi i32 [ 0, %16 ], [ %20, %17 ], [ 0, %3 ], [ 0, %10 ], [ 0, %5 ]
  ret i32 %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @Cr_z_gz_error(%struct.gz_state*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @gz_write(%struct.gz_state*, i8*, i64) unnamed_addr #0 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %131, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %5
  %10 = tail call fastcc i32 @gz_init(%struct.gz_state* %0)
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %131, label %12

12:                                               ; preds = %9, %5
  %13 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 16
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %56, label %16

16:                                               ; preds = %12
  store i32 0, i32* %13, align 8
  %17 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 15
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 19
  %20 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 19, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %16
  %24 = tail call fastcc i32 @gz_comp(%struct.gz_state* %0, i32 0) #5
  %25 = icmp eq i32 %24, -1
  br i1 %25, label %131, label %26

26:                                               ; preds = %23, %16
  %27 = icmp eq i64 %18, 0
  br i1 %27, label %56, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 6
  %30 = bitcast i8** %29 to i64*
  %31 = bitcast %struct.z_stream_s* %19 to i64*
  %32 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 2
  br label %35

33:                                               ; preds = %48
  %34 = icmp eq i64 %55, 0
  br i1 %34, label %56, label %35

35:                                               ; preds = %33, %28
  %36 = phi i1 [ false, %28 ], [ true, %33 ]
  %37 = phi i64 [ %18, %28 ], [ %55, %33 ]
  %38 = load i32, i32* %6, align 8
  %39 = zext i32 %38 to i64
  %40 = icmp slt i64 %37, %39
  %41 = trunc i64 %37 to i32
  %42 = select i1 %40, i32 %41, i32 %38
  br i1 %36, label %43, label %45

43:                                               ; preds = %35
  %44 = zext i32 %42 to i64
  br label %48

45:                                               ; preds = %35
  %46 = load i8*, i8** %29, align 8
  %47 = zext i32 %42 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %46, i8 0, i64 %47, i1 false) #5
  br label %48

48:                                               ; preds = %45, %43
  %49 = phi i64 [ %44, %43 ], [ %47, %45 ]
  store i32 %42, i32* %20, align 8
  %50 = load i64, i64* %30, align 8
  store i64 %50, i64* %31, align 8
  %51 = load i64, i64* %32, align 8
  %52 = add nsw i64 %51, %49
  store i64 %52, i64* %32, align 8
  %53 = tail call fastcc i32 @gz_comp(%struct.gz_state* %0, i32 0) #5
  %54 = icmp eq i32 %53, -1
  %55 = sub nsw i64 %37, %49
  br i1 %54, label %131, label %33

56:                                               ; preds = %33, %26, %12
  %57 = load i32, i32* %6, align 8
  %58 = zext i32 %57 to i64
  %59 = icmp ugt i64 %58, %2
  br i1 %59, label %60, label %108

60:                                               ; preds = %56
  %61 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 19
  %62 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 19, i32 1
  %63 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 6
  %64 = bitcast i8** %63 to i64*
  %65 = bitcast %struct.z_stream_s* %61 to i64*
  %66 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %61, i64 0, i32 0
  %67 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 2
  br label %68

68:                                               ; preds = %60, %104
  %69 = phi i8* [ %105, %104 ], [ %1, %60 ]
  %70 = phi i64 [ %102, %104 ], [ %2, %60 ]
  %71 = load i32, i32* %62, align 8
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %77, label %73

73:                                               ; preds = %68
  %74 = load i8*, i8** %66, align 8
  %75 = load i64, i64* %64, align 8
  %76 = inttoptr i64 %75 to i8*
  br label %80

77:                                               ; preds = %68
  %78 = load i64, i64* %64, align 8
  store i64 %78, i64* %65, align 8
  %79 = inttoptr i64 %78 to i8*
  br label %80

80:                                               ; preds = %73, %77
  %81 = phi i8* [ %76, %73 ], [ %79, %77 ]
  %82 = phi i64 [ %75, %73 ], [ %78, %77 ]
  %83 = phi i8* [ %74, %73 ], [ %79, %77 ]
  %84 = zext i32 %71 to i64
  %85 = getelementptr inbounds i8, i8* %83, i64 %84
  %86 = ptrtoint i8* %85 to i64
  %87 = sub i64 %86, %82
  %88 = trunc i64 %87 to i32
  %89 = load i32, i32* %6, align 8
  %90 = sub i32 %89, %88
  %91 = zext i32 %90 to i64
  %92 = icmp ult i64 %70, %91
  %93 = trunc i64 %70 to i32
  %94 = select i1 %92, i32 %93, i32 %90
  %95 = and i64 %87, 4294967295
  %96 = getelementptr inbounds i8, i8* %81, i64 %95
  %97 = zext i32 %94 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %96, i8* align 1 %69, i64 %97, i1 false)
  %98 = load i32, i32* %62, align 8
  %99 = add i32 %94, %98
  store i32 %99, i32* %62, align 8
  %100 = load i64, i64* %67, align 8
  %101 = add nsw i64 %100, %97
  store i64 %101, i64* %67, align 8
  %102 = sub i64 %70, %97
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %131, label %104

104:                                              ; preds = %80
  %105 = getelementptr inbounds i8, i8* %69, i64 %97
  %106 = tail call fastcc i32 @gz_comp(%struct.gz_state* %0, i32 0)
  %107 = icmp eq i32 %106, -1
  br i1 %107, label %131, label %68

108:                                              ; preds = %56
  %109 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 19, i32 1
  %110 = load i32, i32* %109, align 8
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %115, label %112

112:                                              ; preds = %108
  %113 = tail call fastcc i32 @gz_comp(%struct.gz_state* %0, i32 0)
  %114 = icmp eq i32 %113, -1
  br i1 %114, label %131, label %115

115:                                              ; preds = %108, %112
  %116 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 19, i32 0
  store i8* %1, i8** %116, align 8
  %117 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 2
  br label %118

118:                                              ; preds = %129, %115
  %119 = phi i64 [ %2, %115 ], [ %128, %129 ]
  %120 = icmp ult i64 %119, 4294967295
  %121 = select i1 %120, i64 %119, i64 4294967295
  %122 = trunc i64 %121 to i32
  store i32 %122, i32* %109, align 8
  %123 = load i64, i64* %117, align 8
  %124 = add nsw i64 %123, %121
  store i64 %124, i64* %117, align 8
  %125 = tail call fastcc i32 @gz_comp(%struct.gz_state* %0, i32 0)
  %126 = icmp eq i32 %125, -1
  %127 = select i1 %126, i64 0, i64 %121
  %128 = sub i64 %119, %127
  br i1 %126, label %131, label %129

129:                                              ; preds = %118
  %130 = icmp eq i64 %128, 0
  br i1 %130, label %131, label %118

131:                                              ; preds = %48, %118, %129, %80, %104, %23, %112, %9, %3
  %132 = phi i64 [ 0, %3 ], [ 0, %9 ], [ 0, %112 ], [ 0, %23 ], [ %2, %80 ], [ 0, %104 ], [ %2, %129 ], [ 0, %118 ], [ 0, %48 ]
  ret i64 %132
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @Cr_z_gzfwrite(i8*, i64, i64, %struct.gzFile_s*) local_unnamed_addr #0 {
  %5 = icmp eq %struct.gzFile_s* %3, null
  br i1 %5, label %27, label %6

6:                                                ; preds = %4
  %7 = bitcast %struct.gzFile_s* %3 to %struct.gz_state*
  %8 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %3, i64 1, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 31153
  br i1 %10, label %11, label %27

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %7, i64 0, i32 17
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %11
  %16 = mul i64 %2, %1
  %17 = icmp eq i64 %1, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %15
  %19 = udiv i64 %16, %1
  %20 = icmp eq i64 %19, %2
  br i1 %20, label %22, label %21

21:                                               ; preds = %18
  tail call void @Cr_z_gz_error(%struct.gz_state* nonnull %7, i32 -2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0)) #5
  br label %27

22:                                               ; preds = %18
  %23 = icmp eq i64 %16, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %22
  %25 = tail call fastcc i64 @gz_write(%struct.gz_state* nonnull %7, i8* %0, i64 %16)
  %26 = udiv i64 %25, %1
  br label %27

27:                                               ; preds = %15, %24, %22, %6, %11, %4, %21
  %28 = phi i64 [ 0, %21 ], [ 0, %4 ], [ 0, %11 ], [ 0, %6 ], [ %26, %24 ], [ 0, %22 ], [ 0, %15 ]
  ret i64 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Cr_z_gzputc(%struct.gzFile_s*, i32) local_unnamed_addr #0 {
  %3 = alloca [1 x i8], align 1
  %4 = getelementptr inbounds [1 x i8], [1 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #5
  store i8 -86, i8* %4, align 1
  %5 = icmp eq %struct.gzFile_s* %0, null
  br i1 %5, label %113, label %6

6:                                                ; preds = %2
  %7 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %8 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5
  %9 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 31153
  br i1 %11, label %12, label %113

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %7, i64 0, i32 17
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %113

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 1
  %18 = bitcast i8** %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %65, label %21

21:                                               ; preds = %16
  store i32 0, i32* %18, align 8
  %22 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4
  %23 = bitcast %struct.gzFile_s* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5, i32 1
  %26 = bitcast i8** %25 to i32*
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %21
  %30 = tail call fastcc i32 @gz_comp(%struct.gz_state* nonnull %7, i32 0) #5
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %113, label %32

32:                                               ; preds = %29, %21
  %33 = icmp eq i64 %24, 0
  br i1 %33, label %65, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 2
  %36 = bitcast i64* %35 to i32*
  %37 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 2
  %38 = bitcast %struct.gzFile_s* %37 to i8**
  %39 = bitcast %struct.gzFile_s* %37 to i64*
  %40 = bitcast %struct.gzFile_s* %8 to i64*
  %41 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  br label %44

42:                                               ; preds = %57
  %43 = icmp eq i64 %64, 0
  br i1 %43, label %65, label %44

44:                                               ; preds = %42, %34
  %45 = phi i1 [ false, %34 ], [ true, %42 ]
  %46 = phi i64 [ %24, %34 ], [ %64, %42 ]
  %47 = load i32, i32* %36, align 8
  %48 = zext i32 %47 to i64
  %49 = icmp slt i64 %46, %48
  %50 = trunc i64 %46 to i32
  %51 = select i1 %49, i32 %50, i32 %47
  br i1 %45, label %52, label %54

52:                                               ; preds = %44
  %53 = zext i32 %51 to i64
  br label %57

54:                                               ; preds = %44
  %55 = load i8*, i8** %38, align 8
  %56 = zext i32 %51 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %55, i8 0, i64 %56, i1 false) #5
  br label %57

57:                                               ; preds = %54, %52
  %58 = phi i64 [ %53, %52 ], [ %56, %54 ]
  store i32 %51, i32* %26, align 8
  %59 = load i64, i64* %39, align 8
  store i64 %59, i64* %40, align 8
  %60 = load i64, i64* %41, align 8
  %61 = add nsw i64 %60, %58
  store i64 %61, i64* %41, align 8
  %62 = tail call fastcc i32 @gz_comp(%struct.gz_state* nonnull %7, i32 0) #5
  %63 = icmp eq i32 %62, -1
  %64 = sub nsw i64 %46, %58
  br i1 %63, label %113, label %42

65:                                               ; preds = %42, %32, %16
  %66 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 2
  %67 = bitcast i64* %66 to i32*
  %68 = load i32, i32* %67, align 8
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %107, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5, i32 1
  %72 = bitcast i8** %71 to i32*
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %81, label %75

75:                                               ; preds = %70
  %76 = bitcast %struct.gzFile_s* %8 to i8**
  %77 = load i8*, i8** %76, align 8
  %78 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 2
  %79 = bitcast %struct.gzFile_s* %78 to i8**
  %80 = load i8*, i8** %79, align 8
  br label %87

81:                                               ; preds = %70
  %82 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 2
  %83 = bitcast %struct.gzFile_s* %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %struct.gzFile_s* %8 to i64*
  store i64 %84, i64* %85, align 8
  %86 = inttoptr i64 %84 to i8*
  br label %87

87:                                               ; preds = %75, %81
  %88 = phi i8* [ %80, %75 ], [ %86, %81 ]
  %89 = phi i8* [ %77, %75 ], [ %86, %81 ]
  %90 = zext i32 %73 to i64
  %91 = getelementptr inbounds i8, i8* %89, i64 %90
  %92 = ptrtoint i8* %91 to i64
  %93 = ptrtoint i8* %88 to i64
  %94 = sub i64 %92, %93
  %95 = trunc i64 %94 to i32
  %96 = icmp ugt i32 %68, %95
  br i1 %96, label %97, label %107

97:                                               ; preds = %87
  %98 = trunc i32 %1 to i8
  %99 = and i64 %94, 4294967295
  %100 = getelementptr inbounds i8, i8* %88, i64 %99
  store i8 %98, i8* %100, align 1
  %101 = load i32, i32* %72, align 8
  %102 = add i32 %101, 1
  store i32 %102, i32* %72, align 8
  %103 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  %104 = load i64, i64* %103, align 8
  %105 = add nsw i64 %104, 1
  store i64 %105, i64* %103, align 8
  %106 = and i32 %1, 255
  br label %113

107:                                              ; preds = %65, %87
  %108 = trunc i32 %1 to i8
  store i8 %108, i8* %4, align 1
  %109 = call fastcc i64 @gz_write(%struct.gz_state* nonnull %7, i8* nonnull %4, i64 1)
  %110 = icmp eq i64 %109, 1
  %111 = and i32 %1, 255
  %112 = select i1 %110, i32 %111, i32 -1
  br label %113

113:                                              ; preds = %57, %29, %107, %6, %12, %2, %97
  %114 = phi i32 [ %106, %97 ], [ -1, %2 ], [ -1, %12 ], [ -1, %6 ], [ %112, %107 ], [ -1, %29 ], [ -1, %57 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #5
  ret i32 %114
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Cr_z_gzputs(%struct.gzFile_s*, i8*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.gzFile_s* %0, null
  br i1 %3, label %21, label %4

4:                                                ; preds = %2
  %5 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %6 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 31153
  br i1 %8, label %9, label %21

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %5, i64 0, i32 17
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %21

13:                                               ; preds = %9
  %14 = tail call i64 @strlen(i8* %1) #9
  %15 = tail call fastcc i64 @gz_write(%struct.gz_state* nonnull %5, i8* %1, i64 %14)
  %16 = trunc i64 %15 to i32
  %17 = icmp eq i32 %16, 0
  %18 = icmp ne i64 %14, 0
  %19 = and i1 %18, %17
  %20 = select i1 %19, i32 -1, i32 %16
  br label %21

21:                                               ; preds = %4, %9, %2, %13
  %22 = phi i32 [ %20, %13 ], [ -1, %2 ], [ -1, %9 ], [ -1, %4 ]
  ret i32 %22
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Cr_z_gzvprintf(%struct.gzFile_s*, i8* nocapture readonly, %struct.__va_list_tag*) local_unnamed_addr #0 {
  %4 = icmp eq %struct.gzFile_s* %0, null
  br i1 %4, label %134, label %5

5:                                                ; preds = %3
  %6 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %7 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5
  %8 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 31153
  br i1 %10, label %11, label %134

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %6, i64 0, i32 17
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %134

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 2
  %17 = bitcast i64* %16 to i32*
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %25

20:                                               ; preds = %15
  %21 = tail call fastcc i32 @gz_init(%struct.gz_state* nonnull %6)
  %22 = icmp eq i32 %21, -1
  br i1 %22, label %23, label %25

23:                                               ; preds = %20
  %24 = load i32, i32* %12, align 4
  br label %134

25:                                               ; preds = %20, %15
  %26 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 1
  %27 = bitcast i8** %26 to i32*
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %74, label %30

30:                                               ; preds = %25
  store i32 0, i32* %27, align 8
  %31 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4
  %32 = bitcast %struct.gzFile_s* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5, i32 1
  %35 = bitcast i8** %34 to i32*
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30
  %39 = tail call fastcc i32 @gz_comp(%struct.gz_state* nonnull %6, i32 0) #5
  %40 = icmp eq i32 %39, -1
  br i1 %40, label %72, label %41

41:                                               ; preds = %38, %30
  %42 = icmp eq i64 %33, 0
  br i1 %42, label %74, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 2
  %45 = bitcast %struct.gzFile_s* %44 to i8**
  %46 = bitcast %struct.gzFile_s* %44 to i64*
  %47 = bitcast %struct.gzFile_s* %7 to i64*
  %48 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  br label %51

49:                                               ; preds = %64
  %50 = icmp eq i64 %71, 0
  br i1 %50, label %74, label %51

51:                                               ; preds = %49, %43
  %52 = phi i1 [ false, %43 ], [ true, %49 ]
  %53 = phi i64 [ %33, %43 ], [ %71, %49 ]
  %54 = load i32, i32* %17, align 8
  %55 = zext i32 %54 to i64
  %56 = icmp slt i64 %53, %55
  %57 = trunc i64 %53 to i32
  %58 = select i1 %56, i32 %57, i32 %54
  br i1 %52, label %59, label %61

59:                                               ; preds = %51
  %60 = zext i32 %58 to i64
  br label %64

61:                                               ; preds = %51
  %62 = load i8*, i8** %45, align 8
  %63 = zext i32 %58 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %62, i8 0, i64 %63, i1 false) #5
  br label %64

64:                                               ; preds = %61, %59
  %65 = phi i64 [ %60, %59 ], [ %63, %61 ]
  store i32 %58, i32* %35, align 8
  %66 = load i64, i64* %46, align 8
  store i64 %66, i64* %47, align 8
  %67 = load i64, i64* %48, align 8
  %68 = add nsw i64 %67, %65
  store i64 %68, i64* %48, align 8
  %69 = tail call fastcc i32 @gz_comp(%struct.gz_state* nonnull %6, i32 0) #5
  %70 = icmp eq i32 %69, -1
  %71 = sub nsw i64 %53, %65
  br i1 %70, label %72, label %49

72:                                               ; preds = %64, %38
  %73 = load i32, i32* %12, align 4
  br label %134

74:                                               ; preds = %49, %25, %41
  %75 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5, i32 1
  %76 = bitcast i8** %75 to i32*
  %77 = load i32, i32* %76, align 8
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %74
  %80 = bitcast %struct.gzFile_s* %7 to i8**
  %81 = load i8*, i8** %80, align 8
  br label %88

82:                                               ; preds = %74
  %83 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 2
  %84 = bitcast %struct.gzFile_s* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %struct.gzFile_s* %7 to i64*
  store i64 %85, i64* %86, align 8
  %87 = inttoptr i64 %85 to i8*
  br label %88

88:                                               ; preds = %79, %82
  %89 = phi i8* [ %81, %79 ], [ %87, %82 ]
  %90 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 2
  %91 = bitcast %struct.gzFile_s* %90 to i8**
  %92 = zext i32 %77 to i64
  %93 = getelementptr inbounds i8, i8* %89, i64 %92
  %94 = load i32, i32* %17, align 8
  %95 = add i32 %94, -1
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds i8, i8* %93, i64 %96
  store i8 0, i8* %97, align 1
  %98 = load i32, i32* %17, align 8
  %99 = zext i32 %98 to i64
  %100 = tail call i32 @vsnprintf(i8* %93, i64 %99, i8* %1, %struct.__va_list_tag* %2) #5
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %134, label %102

102:                                              ; preds = %88
  %103 = load i32, i32* %17, align 8
  %104 = icmp ult i32 %100, %103
  br i1 %104, label %105, label %134

105:                                              ; preds = %102
  %106 = add i32 %103, -1
  %107 = zext i32 %106 to i64
  %108 = getelementptr inbounds i8, i8* %93, i64 %107
  %109 = load i8, i8* %108, align 1
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %111, label %134

111:                                              ; preds = %105
  %112 = load i32, i32* %76, align 8
  %113 = add i32 %112, %100
  store i32 %113, i32* %76, align 8
  %114 = sext i32 %100 to i64
  %115 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  %116 = load i64, i64* %115, align 8
  %117 = add nsw i64 %116, %114
  store i64 %117, i64* %115, align 8
  %118 = icmp ult i32 %113, %103
  br i1 %118, label %134, label %119

119:                                              ; preds = %111
  %120 = sub i32 %113, %103
  store i32 %103, i32* %76, align 8
  %121 = tail call fastcc i32 @gz_comp(%struct.gz_state* nonnull %6, i32 0)
  %122 = icmp eq i32 %121, -1
  br i1 %122, label %123, label %125

123:                                              ; preds = %119
  %124 = load i32, i32* %12, align 4
  br label %134

125:                                              ; preds = %119
  %126 = load i8*, i8** %91, align 8
  %127 = load i32, i32* %17, align 8
  %128 = zext i32 %127 to i64
  %129 = getelementptr inbounds i8, i8* %126, i64 %128
  %130 = zext i32 %120 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %126, i8* align 1 %129, i64 %130, i1 false)
  %131 = bitcast %struct.gzFile_s* %90 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %struct.gzFile_s* %7 to i64*
  store i64 %132, i64* %133, align 8
  store i32 %120, i32* %76, align 8
  br label %134

134:                                              ; preds = %125, %111, %88, %102, %105, %5, %11, %3, %123, %72, %23
  %135 = phi i32 [ %24, %23 ], [ %73, %72 ], [ %124, %123 ], [ -2, %3 ], [ -2, %11 ], [ -2, %5 ], [ 0, %105 ], [ 0, %102 ], [ 0, %88 ], [ %100, %111 ], [ %100, %125 ]
  ret i32 %135
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @gz_init(%struct.gz_state*) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 19
  %3 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 4
  %5 = shl i32 %4, 1
  %6 = zext i32 %5 to i64
  %7 = tail call noalias i8* @malloc(i64 %6) #5
  %8 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 6
  store i8* %7, i8** %8, align 8
  %9 = icmp eq i8* %7, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %1
  tail call void @Cr_z_gz_error(%struct.gz_state* %0, i32 -4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0)) #5
  br label %49

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 8
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 4
  store i32 %4, i32* %16, align 8
  br label %49

17:                                               ; preds = %11
  %18 = zext i32 %4 to i64
  %19 = tail call noalias i8* @malloc(i64 %18) #5
  %20 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 7
  store i8* %19, i8** %20, align 8
  %21 = icmp eq i8* %19, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %17
  tail call void @free(i8* nonnull %7) #5
  tail call void @Cr_z_gz_error(%struct.gz_state* %0, i32 -4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0)) #5
  br label %49

23:                                               ; preds = %17
  %24 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 19, i32 8
  %25 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 13
  %26 = bitcast i8* (i8*, i32, i32)** %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false)
  %27 = load i32, i32* %25, align 8
  %28 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 14
  %29 = load i32, i32* %28, align 4
  %30 = tail call i32 @Cr_z_deflateInit2_(%struct.z_stream_s* %2, i32 %27, i32 8, i32 31, i32 8, i32 %29, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i32 112) #5
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %23
  %33 = load i8*, i8** %20, align 8
  tail call void @free(i8* %33) #5
  %34 = load i8*, i8** %8, align 8
  tail call void @free(i8* %34) #5
  tail call void @Cr_z_gz_error(%struct.gz_state* %0, i32 -4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0)) #5
  br label %49

35:                                               ; preds = %23
  %36 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %2, i64 0, i32 0
  store i8* null, i8** %36, align 8
  %37 = load i32, i32* %12, align 8
  %38 = load i32, i32* %3, align 4
  %39 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 4
  store i32 %38, i32* %39, align 8
  %40 = icmp eq i32 %37, 0
  br i1 %40, label %41, label %49

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 19, i32 4
  store i32 %38, i32* %42, align 8
  %43 = bitcast i8** %20 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 19, i32 3
  %46 = bitcast i8** %45 to i64*
  store i64 %44, i64* %46, align 8
  %47 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 1
  %48 = bitcast i8** %47 to i64*
  store i64 %44, i64* %48, align 8
  br label %49

49:                                               ; preds = %15, %41, %35, %32, %22, %10
  %50 = phi i32 [ -1, %10 ], [ -1, %22 ], [ -1, %32 ], [ 0, %35 ], [ 0, %41 ], [ 0, %15 ]
  ret i32 %50
}

; Function Attrs: nofree nounwind
declare i32 @vsnprintf(i8* nocapture, i64, i8* nocapture readonly, %struct.__va_list_tag*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @gz_comp(%struct.gz_state*, i32) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 19
  %4 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = tail call fastcc i32 @gz_init(%struct.gz_state* %0)
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %193, label %10

10:                                               ; preds = %7, %2
  %11 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 8
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %22, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 19, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %193, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 2
  %20 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %3, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  br label %117

22:                                               ; preds = %10
  %23 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 19, i32 4
  %24 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 19, i32 3
  %25 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 2
  %27 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 7
  %28 = bitcast i8** %27 to i64*
  switch i32 %1, label %37 [
    i32 0, label %33
    i32 4, label %29
  ]

29:                                               ; preds = %22
  %30 = load i32, i32* %23, align 8
  %31 = bitcast i8** %24 to i64*
  %32 = bitcast i8** %25 to i64*
  br label %139

33:                                               ; preds = %22
  %34 = load i32, i32* %23, align 8
  %35 = bitcast i8** %24 to i64*
  %36 = bitcast i8** %25 to i64*
  br label %40

37:                                               ; preds = %22
  %38 = bitcast i8** %24 to i64*
  %39 = bitcast i8** %25 to i64*
  br label %80

40:                                               ; preds = %33, %57
  %41 = phi i32 [ %34, %33 ], [ %58, %57 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %53

43:                                               ; preds = %40
  %44 = load i8*, i8** %24, align 8
  %45 = load i8*, i8** %25, align 8
  %46 = icmp ugt i8* %44, %45
  br i1 %46, label %60, label %50

47:                                               ; preds = %73
  %48 = load i32, i32* %23, align 8
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %43, %47
  %51 = load i32, i32* %4, align 8
  store i32 %51, i32* %23, align 8
  %52 = load i64, i64* %28, align 8
  store i64 %52, i64* %35, align 8
  store i64 %52, i64* %36, align 8
  br label %53

53:                                               ; preds = %40, %50, %47
  %54 = phi i32 [ %41, %40 ], [ %51, %50 ], [ %48, %47 ]
  %55 = tail call i32 @Cr_z_deflate(%struct.z_stream_s* %3, i32 0) #5
  %56 = icmp eq i32 %55, -2
  br i1 %56, label %185, label %57

57:                                               ; preds = %53
  %58 = load i32, i32* %23, align 8
  %59 = icmp eq i32 %54, %58
  br i1 %59, label %189, label %40

60:                                               ; preds = %43, %73
  %61 = phi i8* [ %77, %73 ], [ %45, %43 ]
  %62 = phi i8* [ %78, %73 ], [ %44, %43 ]
  %63 = ptrtoint i8* %62 to i64
  %64 = ptrtoint i8* %61 to i64
  %65 = sub i64 %63, %64
  %66 = icmp slt i64 %65, 1073741824
  %67 = select i1 %66, i64 %65, i64 1073741824
  %68 = load i32, i32* %26, align 4
  %69 = and i64 %67, 4294967295
  %70 = tail call i64 @write(i32 %68, i8* %61, i64 %69) #5
  %71 = trunc i64 %70 to i32
  %72 = icmp slt i32 %71, 0
  br i1 %72, label %162, label %73

73:                                               ; preds = %60
  %74 = load i8*, i8** %25, align 8
  %75 = shl i64 %70, 32
  %76 = ashr exact i64 %75, 32
  %77 = getelementptr inbounds i8, i8* %74, i64 %76
  store i8* %77, i8** %25, align 8
  %78 = load i8*, i8** %24, align 8
  %79 = icmp ugt i8* %78, %77
  br i1 %79, label %60, label %47

80:                                               ; preds = %37, %94
  %81 = load i8*, i8** %24, align 8
  %82 = load i8*, i8** %25, align 8
  %83 = icmp ugt i8* %81, %82
  br i1 %83, label %97, label %84

84:                                               ; preds = %110, %80
  %85 = load i32, i32* %23, align 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %90

87:                                               ; preds = %84
  %88 = load i32, i32* %4, align 8
  store i32 %88, i32* %23, align 8
  %89 = load i64, i64* %28, align 8
  store i64 %89, i64* %38, align 8
  store i64 %89, i64* %39, align 8
  br label %90

90:                                               ; preds = %87, %84
  %91 = phi i32 [ %88, %87 ], [ %85, %84 ]
  %92 = tail call i32 @Cr_z_deflate(%struct.z_stream_s* %3, i32 %1) #5
  %93 = icmp eq i32 %92, -2
  br i1 %93, label %185, label %94

94:                                               ; preds = %90
  %95 = load i32, i32* %23, align 8
  %96 = icmp eq i32 %91, %95
  br i1 %96, label %189, label %80

97:                                               ; preds = %80, %110
  %98 = phi i8* [ %114, %110 ], [ %82, %80 ]
  %99 = phi i8* [ %115, %110 ], [ %81, %80 ]
  %100 = ptrtoint i8* %99 to i64
  %101 = ptrtoint i8* %98 to i64
  %102 = sub i64 %100, %101
  %103 = icmp slt i64 %102, 1073741824
  %104 = select i1 %103, i64 %102, i64 1073741824
  %105 = load i32, i32* %26, align 4
  %106 = and i64 %104, 4294967295
  %107 = tail call i64 @write(i32 %105, i8* %98, i64 %106) #5
  %108 = trunc i64 %107 to i32
  %109 = icmp slt i32 %108, 0
  br i1 %109, label %162, label %110

110:                                              ; preds = %97
  %111 = load i8*, i8** %25, align 8
  %112 = shl i64 %107, 32
  %113 = ashr exact i64 %112, 32
  %114 = getelementptr inbounds i8, i8* %111, i64 %113
  store i8* %114, i8** %25, align 8
  %115 = load i8*, i8** %24, align 8
  %116 = icmp ugt i8* %115, %114
  br i1 %116, label %97, label %84

117:                                              ; preds = %18, %131
  %118 = phi i8* [ %21, %18 ], [ %137, %131 ]
  %119 = phi i32 [ %16, %18 ], [ %133, %131 ]
  %120 = icmp ult i32 %119, 1073741824
  %121 = select i1 %120, i32 %119, i32 1073741824
  %122 = load i32, i32* %19, align 4
  %123 = zext i32 %121 to i64
  %124 = tail call i64 @write(i32 %122, i8* %118, i64 %123) #5
  %125 = trunc i64 %124 to i32
  %126 = icmp slt i32 %125, 0
  br i1 %126, label %127, label %131

127:                                              ; preds = %117
  %128 = tail call i32* @__errno_location() #10
  %129 = load i32, i32* %128, align 4
  %130 = tail call i8* @strerror(i32 %129) #5
  tail call void @Cr_z_gz_error(%struct.gz_state* %0, i32 -1, i8* %130) #5
  br label %193

131:                                              ; preds = %117
  %132 = load i32, i32* %15, align 8
  %133 = sub i32 %132, %125
  store i32 %133, i32* %15, align 8
  %134 = load i8*, i8** %20, align 8
  %135 = shl i64 %124, 32
  %136 = ashr exact i64 %135, 32
  %137 = getelementptr inbounds i8, i8* %134, i64 %136
  store i8* %137, i8** %20, align 8
  %138 = icmp eq i32 %133, 0
  br i1 %138, label %193, label %117

139:                                              ; preds = %29, %186
  %140 = phi i32 [ %187, %186 ], [ %30, %29 ]
  %141 = phi i32 [ %183, %186 ], [ 0, %29 ]
  %142 = icmp eq i32 %140, 0
  %143 = icmp eq i32 %141, 1
  %144 = or i1 %142, %143
  br i1 %144, label %145, label %181

145:                                              ; preds = %139
  %146 = load i8*, i8** %24, align 8
  %147 = load i8*, i8** %25, align 8
  %148 = icmp ugt i8* %146, %147
  br i1 %148, label %149, label %175

149:                                              ; preds = %145, %166
  %150 = phi i8* [ %170, %166 ], [ %147, %145 ]
  %151 = phi i8* [ %171, %166 ], [ %146, %145 ]
  %152 = ptrtoint i8* %151 to i64
  %153 = ptrtoint i8* %150 to i64
  %154 = sub i64 %152, %153
  %155 = icmp slt i64 %154, 1073741824
  %156 = select i1 %155, i64 %154, i64 1073741824
  %157 = load i32, i32* %26, align 4
  %158 = and i64 %156, 4294967295
  %159 = tail call i64 @write(i32 %157, i8* %150, i64 %158) #5
  %160 = trunc i64 %159 to i32
  %161 = icmp slt i32 %160, 0
  br i1 %161, label %162, label %166

162:                                              ; preds = %149, %60, %97
  %163 = tail call i32* @__errno_location() #10
  %164 = load i32, i32* %163, align 4
  %165 = tail call i8* @strerror(i32 %164) #5
  tail call void @Cr_z_gz_error(%struct.gz_state* %0, i32 -1, i8* %165) #5
  br label %193

166:                                              ; preds = %149
  %167 = load i8*, i8** %25, align 8
  %168 = shl i64 %159, 32
  %169 = ashr exact i64 %168, 32
  %170 = getelementptr inbounds i8, i8* %167, i64 %169
  store i8* %170, i8** %25, align 8
  %171 = load i8*, i8** %24, align 8
  %172 = icmp ugt i8* %171, %170
  br i1 %172, label %149, label %173

173:                                              ; preds = %166
  %174 = load i32, i32* %23, align 8
  br label %175

175:                                              ; preds = %173, %145
  %176 = phi i32 [ %174, %173 ], [ %140, %145 ]
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %181

178:                                              ; preds = %175
  %179 = load i32, i32* %4, align 8
  store i32 %179, i32* %23, align 8
  %180 = load i64, i64* %28, align 8
  store i64 %180, i64* %31, align 8
  store i64 %180, i64* %32, align 8
  br label %181

181:                                              ; preds = %139, %175, %178
  %182 = phi i32 [ %140, %139 ], [ %176, %175 ], [ %179, %178 ]
  %183 = tail call i32 @Cr_z_deflate(%struct.z_stream_s* %3, i32 4) #5
  %184 = icmp eq i32 %183, -2
  br i1 %184, label %185, label %186

185:                                              ; preds = %181, %53, %90
  tail call void @Cr_z_gz_error(%struct.gz_state* %0, i32 -2, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.4, i64 0, i64 0)) #5
  br label %193

186:                                              ; preds = %181
  %187 = load i32, i32* %23, align 8
  %188 = icmp eq i32 %182, %187
  br i1 %188, label %189, label %139

189:                                              ; preds = %186, %57, %94
  %190 = icmp eq i32 %1, 4
  br i1 %190, label %191, label %193

191:                                              ; preds = %189
  %192 = tail call i32 @Cr_z_deflateReset(%struct.z_stream_s* %3) #5
  br label %193

193:                                              ; preds = %131, %14, %189, %191, %7, %185, %162, %127
  %194 = phi i32 [ -1, %127 ], [ -1, %162 ], [ -1, %185 ], [ -1, %7 ], [ 0, %191 ], [ 0, %189 ], [ 0, %14 ], [ 0, %131 ]
  ret i32 %194
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Cr_z_gzprintf(%struct.gzFile_s*, i8* nocapture readonly, ...) local_unnamed_addr #0 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #5
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  %7 = call i32 @Cr_z_gzvprintf(%struct.gzFile_s* %0, i8* %1, %struct.__va_list_tag* nonnull %5)
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #5
  ret i32 %7
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #5

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Cr_z_gzflush(%struct.gzFile_s*, i32) local_unnamed_addr #0 {
  %3 = icmp eq %struct.gzFile_s* %0, null
  br i1 %3, label %70, label %4

4:                                                ; preds = %2
  %5 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %6 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 31153
  br i1 %8, label %9, label %70

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %5, i64 0, i32 17
  %11 = load i32, i32* %10, align 4
  %12 = icmp ne i32 %11, 0
  %13 = icmp ugt i32 %1, 4
  %14 = or i1 %13, %12
  br i1 %14, label %70, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 1
  %17 = bitcast i8** %16 to i32*
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %67, label %20

20:                                               ; preds = %15
  store i32 0, i32* %17, align 8
  %21 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4
  %22 = bitcast %struct.gzFile_s* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5
  %25 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5, i32 1
  %26 = bitcast i8** %25 to i32*
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %20
  %30 = tail call fastcc i32 @gz_comp(%struct.gz_state* nonnull %5, i32 0) #5
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %65, label %32

32:                                               ; preds = %29, %20
  %33 = icmp eq i64 %23, 0
  br i1 %33, label %67, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 2
  %36 = bitcast i64* %35 to i32*
  %37 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 2
  %38 = bitcast %struct.gzFile_s* %37 to i8**
  %39 = bitcast %struct.gzFile_s* %37 to i64*
  %40 = bitcast %struct.gzFile_s* %24 to i64*
  %41 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  br label %44

42:                                               ; preds = %57
  %43 = icmp eq i64 %64, 0
  br i1 %43, label %67, label %44

44:                                               ; preds = %42, %34
  %45 = phi i1 [ false, %34 ], [ true, %42 ]
  %46 = phi i64 [ %23, %34 ], [ %64, %42 ]
  %47 = load i32, i32* %36, align 8
  %48 = zext i32 %47 to i64
  %49 = icmp slt i64 %46, %48
  %50 = trunc i64 %46 to i32
  %51 = select i1 %49, i32 %50, i32 %47
  br i1 %45, label %52, label %54

52:                                               ; preds = %44
  %53 = zext i32 %51 to i64
  br label %57

54:                                               ; preds = %44
  %55 = load i8*, i8** %38, align 8
  %56 = zext i32 %51 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %55, i8 0, i64 %56, i1 false) #5
  br label %57

57:                                               ; preds = %54, %52
  %58 = phi i64 [ %53, %52 ], [ %56, %54 ]
  store i32 %51, i32* %26, align 8
  %59 = load i64, i64* %39, align 8
  store i64 %59, i64* %40, align 8
  %60 = load i64, i64* %41, align 8
  %61 = add nsw i64 %60, %58
  store i64 %61, i64* %41, align 8
  %62 = tail call fastcc i32 @gz_comp(%struct.gz_state* nonnull %5, i32 0) #5
  %63 = icmp eq i32 %62, -1
  %64 = sub nsw i64 %46, %58
  br i1 %63, label %65, label %42

65:                                               ; preds = %57, %29
  %66 = load i32, i32* %10, align 4
  br label %70

67:                                               ; preds = %42, %32, %15
  %68 = tail call fastcc i32 @gz_comp(%struct.gz_state* nonnull %5, i32 %1)
  %69 = load i32, i32* %10, align 4
  br label %70

70:                                               ; preds = %9, %4, %2, %67, %65
  %71 = phi i32 [ %66, %65 ], [ %69, %67 ], [ -2, %2 ], [ -2, %9 ], [ -2, %4 ]
  ret i32 %71
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Cr_z_gzsetparams(%struct.gzFile_s*, i32, i32) local_unnamed_addr #0 {
  %4 = icmp eq %struct.gzFile_s* %0, null
  br i1 %4, label %95, label %5

5:                                                ; preds = %3
  %6 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %7 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5
  %8 = bitcast %struct.gzFile_s* %7 to %struct.z_stream_s*
  %9 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 31153
  br i1 %11, label %12, label %95

12:                                               ; preds = %5
  %13 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %6, i64 0, i32 17
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %95

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 3, i32 2
  %18 = bitcast i64* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, %1
  br i1 %20, label %21, label %25

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %6, i64 0, i32 14
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, %2
  br i1 %24, label %95, label %25

25:                                               ; preds = %21, %16
  %26 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 1
  %27 = bitcast i8** %26 to i32*
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %76, label %30

30:                                               ; preds = %25
  store i32 0, i32* %27, align 8
  %31 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4
  %32 = bitcast %struct.gzFile_s* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5, i32 1
  %35 = bitcast i8** %34 to i32*
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30
  %39 = tail call fastcc i32 @gz_comp(%struct.gz_state* nonnull %6, i32 0) #5
  %40 = icmp eq i32 %39, -1
  br i1 %40, label %74, label %41

41:                                               ; preds = %38, %30
  %42 = icmp eq i64 %33, 0
  br i1 %42, label %76, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 2
  %45 = bitcast i64* %44 to i32*
  %46 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 2
  %47 = bitcast %struct.gzFile_s* %46 to i8**
  %48 = bitcast %struct.gzFile_s* %46 to i64*
  %49 = bitcast %struct.gzFile_s* %7 to i64*
  %50 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  br label %53

51:                                               ; preds = %66
  %52 = icmp eq i64 %73, 0
  br i1 %52, label %76, label %53

53:                                               ; preds = %51, %43
  %54 = phi i1 [ false, %43 ], [ true, %51 ]
  %55 = phi i64 [ %33, %43 ], [ %73, %51 ]
  %56 = load i32, i32* %45, align 8
  %57 = zext i32 %56 to i64
  %58 = icmp slt i64 %55, %57
  %59 = trunc i64 %55 to i32
  %60 = select i1 %58, i32 %59, i32 %56
  br i1 %54, label %61, label %63

61:                                               ; preds = %53
  %62 = zext i32 %60 to i64
  br label %66

63:                                               ; preds = %53
  %64 = load i8*, i8** %47, align 8
  %65 = zext i32 %60 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %64, i8 0, i64 %65, i1 false) #5
  br label %66

66:                                               ; preds = %63, %61
  %67 = phi i64 [ %62, %61 ], [ %65, %63 ]
  store i32 %60, i32* %35, align 8
  %68 = load i64, i64* %48, align 8
  store i64 %68, i64* %49, align 8
  %69 = load i64, i64* %50, align 8
  %70 = add nsw i64 %69, %67
  store i64 %70, i64* %50, align 8
  %71 = tail call fastcc i32 @gz_comp(%struct.gz_state* nonnull %6, i32 0) #5
  %72 = icmp eq i32 %71, -1
  %73 = sub nsw i64 %55, %67
  br i1 %72, label %74, label %51

74:                                               ; preds = %66, %38
  %75 = load i32, i32* %13, align 4
  br label %95

76:                                               ; preds = %51, %41, %25
  %77 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 2
  %78 = bitcast i64* %77 to i32*
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %93, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5, i32 1
  %83 = bitcast i8** %82 to i32*
  %84 = load i32, i32* %83, align 8
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %91, label %86

86:                                               ; preds = %81
  %87 = tail call fastcc i32 @gz_comp(%struct.gz_state* nonnull %6, i32 5)
  %88 = icmp eq i32 %87, -1
  br i1 %88, label %89, label %91

89:                                               ; preds = %86
  %90 = load i32, i32* %13, align 4
  br label %95

91:                                               ; preds = %81, %86
  %92 = tail call i32 @Cr_z_deflateParams(%struct.z_stream_s* %8, i32 %1, i32 %2) #5
  br label %93

93:                                               ; preds = %76, %91
  store i32 %1, i32* %18, align 8
  %94 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %6, i64 0, i32 14
  store i32 %2, i32* %94, align 4
  br label %95

95:                                               ; preds = %21, %5, %12, %3, %93, %89, %74
  %96 = phi i32 [ %75, %74 ], [ %90, %89 ], [ 0, %93 ], [ -2, %3 ], [ -2, %12 ], [ -2, %5 ], [ 0, %21 ]
  ret i32 %96
}

declare i32 @Cr_z_deflateParams(%struct.z_stream_s*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Cr_z_gzclose_w(%struct.gzFile_s*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.gzFile_s* %0, null
  br i1 %2, label %98, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %5 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 31153
  br i1 %7, label %8, label %98

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 1
  %10 = bitcast i8** %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %61, label %13

13:                                               ; preds = %8
  store i32 0, i32* %10, align 8
  %14 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4
  %15 = bitcast %struct.gzFile_s* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5
  %18 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5, i32 1
  %19 = bitcast i8** %18 to i32*
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %13
  %23 = tail call fastcc i32 @gz_comp(%struct.gz_state* nonnull %4, i32 0) #5
  %24 = icmp eq i32 %23, -1
  br i1 %24, label %58, label %25

25:                                               ; preds = %22, %13
  %26 = icmp eq i64 %16, 0
  br i1 %26, label %61, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 2
  %29 = bitcast i64* %28 to i32*
  %30 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 2
  %31 = bitcast %struct.gzFile_s* %30 to i8**
  %32 = bitcast %struct.gzFile_s* %30 to i64*
  %33 = bitcast %struct.gzFile_s* %17 to i64*
  %34 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  br label %37

35:                                               ; preds = %50
  %36 = icmp eq i64 %57, 0
  br i1 %36, label %61, label %37

37:                                               ; preds = %35, %27
  %38 = phi i1 [ false, %27 ], [ true, %35 ]
  %39 = phi i64 [ %16, %27 ], [ %57, %35 ]
  %40 = load i32, i32* %29, align 8
  %41 = zext i32 %40 to i64
  %42 = icmp slt i64 %39, %41
  %43 = trunc i64 %39 to i32
  %44 = select i1 %42, i32 %43, i32 %40
  br i1 %38, label %45, label %47

45:                                               ; preds = %37
  %46 = zext i32 %44 to i64
  br label %50

47:                                               ; preds = %37
  %48 = load i8*, i8** %31, align 8
  %49 = zext i32 %44 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %48, i8 0, i64 %49, i1 false) #5
  br label %50

50:                                               ; preds = %47, %45
  %51 = phi i64 [ %46, %45 ], [ %49, %47 ]
  store i32 %44, i32* %19, align 8
  %52 = load i64, i64* %32, align 8
  store i64 %52, i64* %33, align 8
  %53 = load i64, i64* %34, align 8
  %54 = add nsw i64 %53, %51
  store i64 %54, i64* %34, align 8
  %55 = tail call fastcc i32 @gz_comp(%struct.gz_state* nonnull %4, i32 0) #5
  %56 = icmp eq i32 %55, -1
  %57 = sub nsw i64 %39, %51
  br i1 %56, label %58, label %35

58:                                               ; preds = %50, %22
  %59 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %4, i64 0, i32 17
  %60 = load i32, i32* %59, align 4
  br label %61

61:                                               ; preds = %35, %25, %8, %58
  %62 = phi i32 [ %60, %58 ], [ 0, %8 ], [ 0, %25 ], [ 0, %35 ]
  %63 = tail call fastcc i32 @gz_comp(%struct.gz_state* nonnull %4, i32 4)
  %64 = icmp eq i32 %63, -1
  br i1 %64, label %65, label %68

65:                                               ; preds = %61
  %66 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %4, i64 0, i32 17
  %67 = load i32, i32* %66, align 4
  br label %68

68:                                               ; preds = %65, %61
  %69 = phi i32 [ %67, %65 ], [ %62, %61 ]
  %70 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 2
  %71 = bitcast i64* %70 to i32*
  %72 = load i32, i32* %71, align 8
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %89, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 2, i32 2
  %76 = bitcast i64* %75 to i32*
  %77 = load i32, i32* %76, align 8
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %85

79:                                               ; preds = %74
  %80 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5
  %81 = bitcast %struct.gzFile_s* %80 to %struct.z_stream_s*
  %82 = tail call i32 @Cr_z_deflateEnd(%struct.z_stream_s* %81) #5
  %83 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 2, i32 1
  %84 = load i8*, i8** %83, align 8
  tail call void @free(i8* %84) #5
  br label %85

85:                                               ; preds = %74, %79
  %86 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 2
  %87 = bitcast %struct.gzFile_s* %86 to i8**
  %88 = load i8*, i8** %87, align 8
  tail call void @free(i8* %88) #5
  br label %89

89:                                               ; preds = %68, %85
  tail call void @Cr_z_gz_error(%struct.gz_state* nonnull %4, i32 0, i8* null) #5
  %90 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 1
  %91 = load i8*, i8** %90, align 8
  tail call void @free(i8* %91) #5
  %92 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %4, i64 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = tail call i32 @close(i32 %93) #5
  %95 = icmp eq i32 %94, -1
  %96 = select i1 %95, i32 -1, i32 %69
  %97 = bitcast %struct.gzFile_s* %0 to i8*
  tail call void @free(i8* %97) #5
  br label %98

98:                                               ; preds = %3, %1, %89
  %99 = phi i32 [ %96, %89 ], [ -2, %1 ], [ -2, %3 ]
  ret i32 %99
}

declare i32 @Cr_z_deflateEnd(%struct.z_stream_s*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

declare i32 @close(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #4

declare i32 @Cr_z_deflateInit2_(%struct.z_stream_s*, i32, i32, i32, i32, i32, i8*, i32) local_unnamed_addr #2

; Function Attrs: nofree
declare i64 @write(i32, i8* nocapture readonly, i64) local_unnamed_addr #7

; Function Attrs: nounwind
declare i8* @strerror(i32) local_unnamed_addr #6

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #8

declare i32 @Cr_z_deflate(%struct.z_stream_s*, i32) local_unnamed_addr #2

declare i32 @Cr_z_deflateReset(%struct.z_stream_s*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly }
attributes #10 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
