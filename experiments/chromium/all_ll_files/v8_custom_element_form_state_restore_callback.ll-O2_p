; ModuleID = 'gen/third_party/blink/renderer/bindings/core/v8/v8_custom_element_form_state_restore_callback.cc'
source_filename = "gen/third_party/blink/renderer/bindings/core/v8/v8_custom_element_form_state_restore_callback.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::V8CustomElementFormStateRestoreCallback" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::CallbackFunctionBase" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr, %"class.blink::Member.177", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.v8::Isolate" = type { i8 }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.148", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.160", %"class.std::__1::unique_ptr.166", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.173", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.116", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.blink::Worklist.47"* }
%"class.blink::Worklist.47" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.blink::Worklist.54"* }
%"class.blink::Worklist.54" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.blink::Worklist.61"* }
%"class.blink::Worklist.61" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.blink::Worklist.68"* }
%"class.blink::Worklist.68" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::Worklist.75"* }
%"class.blink::Worklist.75" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::Worklist.82"* }
%"class.blink::Worklist.82" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::Worklist.89"* }
%"class.blink::Worklist.89" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.96", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.110", [4 x i8] }>
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98", %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { i64 }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { float }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.119", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.140" }
%"class.WTF::VectorBuffer.140" = type { %"class.WTF::VectorBufferBase.141" }
%"class.WTF::VectorBufferBase.141" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.154" }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.47"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.54"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.61"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.68"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.75"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.181" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.172 }
%class.scoped_refptr.172 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.173" = type { %"struct.std::__1::__atomic_base.174" }
%"struct.std::__1::__atomic_base.174" = type { %"struct.std::__1::__cxx_atomic_impl.175" }
%"struct.std::__1::__cxx_atomic_impl.175" = type { %"struct.std::__1::__cxx_atomic_base_impl.176" }
%"struct.std::__1::__cxx_atomic_base_impl.176" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.177" = type { %"class.blink::MemberBase.178" }
%"class.blink::MemberBase.178" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.179" }
%"class.blink::Persistent.179" = type { %"class.blink::PersistentBase.180" }
%"class.blink::PersistentBase.180" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.v8::Value" = type { i8 }
%"class.blink::V8UnionFileOrFormDataOrUSVString" = type { %"class.blink::bindings::UnionBase", i32, %"class.blink::Member.188", %"class.blink::Member.214", %"class.WTF::String" }
%"class.blink::bindings::UnionBase" = type { i32 (...)** }
%"class.blink::Member.188" = type { %"class.blink::MemberBase.189" }
%"class.blink::MemberBase.189" = type { %"class.blink::File"* }
%"class.blink::File" = type { %"class.blink::Blob", i8, i32, %"class.WTF::String", %"class.WTF::String", %"class.blink::KURL", %"class.absl::optional", %"class.absl::optional.208", %"class.WTF::String" }
%"class.blink::Blob" = type { %"class.blink::ScriptWrappable", %"class.blink::URLRegistrable", %"class.blink::ImageBitmapSource", %class.scoped_refptr.190 }
%"class.blink::URLRegistrable" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%class.scoped_refptr.190 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.191" }
%"struct.std::__1::atomic.191" = type { %"struct.std::__1::__atomic_base.192" }
%"struct.std::__1::__atomic_base.192" = type { %"struct.std::__1::__atomic_base.193" }
%"struct.std::__1::__atomic_base.193" = type { %"struct.std::__1::__cxx_atomic_impl.194" }
%"struct.std::__1::__cxx_atomic_impl.194" = type { %"struct.std::__1::__cxx_atomic_base_impl.195" }
%"struct.std::__1::__cxx_atomic_base_impl.195" = type { i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.202" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.202" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.blink::KURL"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.absl::optional.208" = type { %"class.absl::optional_internal::optional_data.209" }
%"class.absl::optional_internal::optional_data.209" = type { %"class.absl::optional_internal::optional_data_base.210" }
%"class.absl::optional_internal::optional_data_base.210" = type { %"class.absl::optional_internal::optional_data_dtor_base.211" }
%"class.absl::optional_internal::optional_data_dtor_base.211" = type { i8, %union.anon.212 }
%union.anon.212 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.213" }
%"class.base::time_internal::TimeBase.213" = type { i64 }
%"class.blink::Member.214" = type { %"class.blink::MemberBase.215" }
%"class.blink::MemberBase.215" = type { %"class.blink::FormData"* }
%"class.blink::FormData" = type <{ %"class.blink::ScriptWrappable", %"class.blink::PairIterable", %"class.WTF::TextEncoding", %"class.blink::HeapVector", i8, [7 x i8] }>
%"class.blink::PairIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.218" }
%"class.WTF::Vector.218" = type { %"class.WTF::VectorBuffer.219" }
%"class.WTF::VectorBuffer.219" = type { %"class.WTF::VectorBufferBase.220" }
%"class.WTF::VectorBufferBase.220" = type { %"class.blink::Member.221"*, i32, i32 }
%"class.blink::Member.221" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr.196 }
%class.scoped_refptr.196 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.197" }
%"struct.std::__1::atomic.197" = type { %"struct.std::__1::__atomic_base.198" }
%"struct.std::__1::__atomic_base.198" = type { %"struct.std::__1::__atomic_base.199" }
%"struct.std::__1::__atomic_base.199" = type { %"struct.std::__1::__cxx_atomic_impl.200" }
%"struct.std::__1::__cxx_atomic_impl.200" = type { %"struct.std::__1::__cxx_atomic_base_impl.201" }
%"struct.std::__1::__cxx_atomic_base_impl.201" = type { i32 }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::internal::Isolate" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.225" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.225" = type { %"class.v8::TracedReference.226" }
%"class.v8::TracedReference.226" = type { %"class.v8::BasicTracedReference.227" }
%"class.v8::BasicTracedReference.227" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::bindings::CallbackInvokeHelper" = type { %"class.blink::CallbackFunctionBase"*, i8*, i8*, %"class.v8::Local.228", %"class.v8::Local", %"class.v8::Local", i8, %"class.blink::ScriptState::Scope", %"class.v8::Context::BackupIncumbentScope" }
%"class.v8::Local.228" = type { %"class.v8::Function"* }
%"class.v8::Function" = type { i8 }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.blink::ScriptState::Scope" = type { %"class.v8::HandleScope", %"class.v8::Local.223" }
%"class.v8::Local.223" = type { %"class.v8::Context"* }
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.223", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Object" = type { i8 }
%"class.v8::String" = type { i8 }
%"class.blink::bindings::CallbackInvokeHelper.229" = type { %"class.blink::CallbackFunctionBase"*, i8*, i8*, %"class.v8::Local.228", %"class.v8::Local", %"class.v8::Local", i8, %"class.blink::ScriptState::Scope", %"class.v8::Context::BackupIncumbentScope" }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>

$_ZN5blink20CallbackFunctionBaseD2Ev = comdat any

$_ZN5blink39V8CustomElementFormStateRestoreCallbackD0Ev = comdat any

@.str = private unnamed_addr constant [40 x i8] c"V8CustomElementFormStateRestoreCallback\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"CustomElementFormStateRestoreCallback\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"invoke\00", align 1
@.str.3 = private unnamed_addr constant [45 x i8] c"The provided callback is no longer runnable.\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"construct\00", align 1
@_ZTVN5blink39V8CustomElementFormStateRestoreCallbackE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::V8CustomElementFormStateRestoreCallback"*)* @_ZNK5blink39V8CustomElementFormStateRestoreCallback18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::CallbackFunctionBase"*)* @_ZN5blink20CallbackFunctionBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::V8CustomElementFormStateRestoreCallback"*)* @_ZN5blink39V8CustomElementFormStateRestoreCallbackD0Ev to i8*), i8* bitcast (void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)* @_ZNK5blink20CallbackFunctionBase5TraceEPNS_7VisitorE to i8*)] }, align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZNK5blink39V8CustomElementFormStateRestoreCallback18NameInHeapSnapshotEv(%"class.blink::V8CustomElementFormStateRestoreCallback"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define hidden i8 @_ZN5blink39V8CustomElementFormStateRestoreCallback6InvokeENS_8bindings31V8ValueOrScriptWrappableAdapterEPKNS_32V8UnionFileOrFormDataOrUSVStringENS_22V8FormStateRestoreModeE(%"class.blink::V8CustomElementFormStateRestoreCallback"*, %"class.v8::Value"*, %"class.blink::ScriptWrappable"*, %"class.blink::V8UnionFileOrFormDataOrUSVString"*, i64, i8*) local_unnamed_addr #1 align 2 {
  %7 = alloca %"class.v8::HandleScope", align 8
  %8 = alloca %"class.blink::ExceptionState", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.blink::bindings::CallbackInvokeHelper", align 8
  %11 = alloca [2 x %"class.v8::Local"], align 16
  %12 = bitcast [2 x %"class.v8::Local"]* %11 to i8*
  %13 = getelementptr inbounds %"class.blink::V8CustomElementFormStateRestoreCallback", %"class.blink::V8CustomElementFormStateRestoreCallback"* %0, i64 0, i32 0
  %14 = tail call %"class.blink::ScriptState"* @_ZN5blink20CallbackFunctionBase43CallbackRelevantScriptStateOrThrowExceptionEPKcS2_(%"class.blink::CallbackFunctionBase"* %13, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0)) #6
  %15 = icmp eq %"class.blink::ScriptState"* %14, null
  br i1 %15, label %157, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.blink::V8CustomElementFormStateRestoreCallback", %"class.blink::V8CustomElementFormStateRestoreCallback"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %17, align 8
  %19 = tail call zeroext i1 @_ZN5blink26IsCallbackFunctionRunnableEPKNS_11ScriptStateES2_(%"class.blink::ScriptState"* nonnull %14, %"class.blink::ScriptState"* %18) #6
  br i1 %19, label %99, label %20

20:                                               ; preds = %16
  %21 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %17, align 8
  %22 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %21, i64 0, i32 0
  %23 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %22, align 8
  %24 = bitcast %"class.v8::HandleScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #6
  %25 = bitcast %"class.v8::HandleScope"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 24, i1 false)
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %7, %"class.v8::Isolate"* %23) #6
  %26 = getelementptr inbounds %"class.blink::V8CustomElementFormStateRestoreCallback", %"class.blink::V8CustomElementFormStateRestoreCallback"* %0, i64 0, i32 0, i32 1
  %27 = bitcast %"class.blink::TraceWrapperV8Reference"* %26 to %"class.v8::Object"**
  %28 = load %"class.v8::Object"*, %"class.v8::Object"** %27, align 8
  %29 = icmp eq %"class.v8::Object"* %28, null
  br i1 %29, label %38, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::ScriptState"** %17 to %"class.v8::internal::Isolate"***
  %32 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %31, align 8
  %33 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %32, align 8
  %34 = bitcast %"class.v8::Object"* %28 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %33, i64 %35) #6
  %37 = bitcast i64* %36 to %"class.v8::Object"*
  br label %38

38:                                               ; preds = %20, %30
  %39 = phi %"class.v8::Object"* [ %37, %30 ], [ null, %20 ]
  %40 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %39) #6
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %40) #6
  %41 = bitcast %"class.blink::ExceptionState"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %41) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 56, i1 false)
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 0
  store i16 6, i16* %43, align 8
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 1
  store i16 0, i16* %44, align 2
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 1, i32 2
  %46 = bitcast i8** %45 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0)>, <2 x i8*>* %46, align 8
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %47, align 8
  %48 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 3
  store %"class.v8::Isolate"* %23, %"class.v8::Isolate"** %48, align 8
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 4
  store i32 0, i32* %49, align 8
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 5, i32 0, i32 0
  %51 = bitcast %"class.WTF::StringImpl"** %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 16, i1 false) #6
  %52 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #6
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3, i64 0, i64 0), i64 44) #6
  call void @_ZN5blink14ExceptionState14ThrowExceptionEiRKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %8, i32 1000, %"class.WTF::String"* nonnull dereferenceable(8) %9) #6
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %38
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #6
  br label %69

69:                                               ; preds = %38, %65, %68
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %70 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %8, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %71 = load i64*, i64** %70, align 8
  %72 = icmp eq i64* %71, null
  br i1 %72, label %82, label %73

73:                                               ; preds = %69
  %74 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %48, align 8
  %75 = bitcast %"class.v8::Isolate"* %74 to %"class.v8::internal::Isolate"*
  %76 = load i64, i64* %71, align 8
  %77 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %75, i64 %76) #6
  %78 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %74) #6
  br i1 %78, label %82, label %79

79:                                               ; preds = %73
  %80 = bitcast i64* %77 to %"class.v8::Value"*
  %81 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %74, %"class.v8::Value"* %80) #6
  br label %82

82:                                               ; preds = %79, %73, %69
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %98, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  br i1 %89, label %92, label %94

92:                                               ; preds = %85
  %93 = add i32 %91, -1
  store i32 %93, i32* %90, align 4
  br label %94

94:                                               ; preds = %92, %85
  %95 = phi i32 [ %93, %92 ], [ %91, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %83) #6
  br label %98

98:                                               ; preds = %82, %94, %97
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %41) #6
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %40) #6
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %7) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #6
  br label %157

99:                                               ; preds = %16
  %100 = bitcast %"class.blink::bindings::CallbackInvokeHelper"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %100) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %100, i8 -86, i64 112, i1 false)
  call void @_ZN5blink8bindings20CallbackInvokeHelperINS_20CallbackFunctionBaseELNS0_24CallbackInvokeHelperModeE0EEC2EPS2_PKcS7_(%"class.blink::bindings::CallbackInvokeHelper"* nonnull %10, %"class.blink::CallbackFunctionBase"* %13, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0))
  %101 = call zeroext i1 @_ZN5blink8bindings20CallbackInvokeHelperINS_20CallbackFunctionBaseELNS0_24CallbackInvokeHelperModeE0EE14PrepareForCallENS0_31V8ValueOrScriptWrappableAdapterE(%"class.blink::bindings::CallbackInvokeHelper"* nonnull %10, %"class.v8::Value"* %1, %"class.blink::ScriptWrappable"* %2) #6
  br i1 %101, label %107, label %102, !prof !2

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"class.blink::bindings::CallbackInvokeHelper", %"class.blink::bindings::CallbackInvokeHelper"* %10, i64 0, i32 5, i32 0
  %104 = load %"class.v8::Value"*, %"class.v8::Value"** %103, align 8
  %105 = icmp ne %"class.v8::Value"* %104, null
  %106 = zext i1 %105 to i8
  br label %151

107:                                              ; preds = %99
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #6
  %108 = getelementptr inbounds [2 x %"class.v8::Local"], [2 x %"class.v8::Local"]* %11, i64 0, i64 0
  %109 = getelementptr inbounds [2 x %"class.v8::Local"], [2 x %"class.v8::Local"]* %11, i64 0, i64 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 0, i64 16, i1 false)
  %110 = getelementptr inbounds %"class.blink::V8CustomElementFormStateRestoreCallback", %"class.blink::V8CustomElementFormStateRestoreCallback"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %111 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %110, align 8
  %112 = icmp eq %"class.blink::V8UnionFileOrFormDataOrUSVString"* %3, null
  br i1 %112, label %113, label %118

113:                                              ; preds = %107
  %114 = bitcast %"class.blink::ScriptState"* %111 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = add i64 %115, 176
  %117 = inttoptr i64 %116 to %"class.v8::Value"*
  br label %120

118:                                              ; preds = %107
  %119 = call %"class.v8::Value"* @_ZNK5blink32V8UnionFileOrFormDataOrUSVString9ToV8ValueEPNS_11ScriptStateE(%"class.blink::V8UnionFileOrFormDataOrUSVString"* nonnull %3, %"class.blink::ScriptState"* %111) #6
  br label %120

120:                                              ; preds = %113, %118
  %121 = phi %"class.v8::Value"* [ %117, %113 ], [ %119, %118 ]
  %122 = icmp eq %"class.v8::Value"* %121, null
  br i1 %122, label %149, label %123

123:                                              ; preds = %120
  %124 = ptrtoint %"class.v8::Value"* %121 to i64
  %125 = bitcast [2 x %"class.v8::Local"]* %11 to i64*
  store i64 %124, i64* %125, align 16
  %126 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %111, i64 0, i32 0
  %127 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %126, align 8
  %128 = icmp eq i8* %5, null
  br i1 %128, label %138, label %129

129:                                              ; preds = %123
  %130 = load i8, i8* %5, align 1
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %138, label %132

132:                                              ; preds = %129
  %133 = call i64 @strlen(i8* nonnull %5) #7
  %134 = trunc i64 %133 to i32
  %135 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %127, i8* nonnull %5, i32 0, i32 %134) #6
  %136 = icmp eq %"class.v8::String"* %135, null
  br i1 %136, label %137, label %143, !prof !3

137:                                              ; preds = %132
  call void @_ZN2v82V812ToLocalEmptyEv() #6
  br label %149

138:                                              ; preds = %123, %129
  %139 = ptrtoint %"class.v8::Isolate"* %127 to i64
  %140 = add i64 %139, 200
  %141 = inttoptr i64 %140 to %"class.v8::String"*
  %142 = icmp eq i64 %140, 0
  br i1 %142, label %149, label %143

143:                                              ; preds = %132, %138
  %144 = phi %"class.v8::String"* [ %141, %138 ], [ %135, %132 ]
  %145 = ptrtoint %"class.v8::String"* %144 to i64
  %146 = bitcast %"class.v8::Local"* %109 to i64*
  store i64 %145, i64* %146, align 8
  %147 = call zeroext i1 @_ZN5blink8bindings20CallbackInvokeHelperINS_20CallbackFunctionBaseELNS0_24CallbackInvokeHelperModeE0EE4CallEiPN2v85LocalINS5_5ValueEEE(%"class.blink::bindings::CallbackInvokeHelper"* nonnull %10, i32 2, %"class.v8::Local"* nonnull %108) #6
  %148 = zext i1 %147 to i8
  br label %149

149:                                              ; preds = %137, %138, %120, %143
  %150 = phi i8 [ 0, %120 ], [ 0, %138 ], [ %148, %143 ], [ 0, %137 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #6
  br label %151

151:                                              ; preds = %102, %149
  %152 = phi i8 [ %150, %149 ], [ %106, %102 ]
  %153 = getelementptr inbounds %"class.blink::bindings::CallbackInvokeHelper", %"class.blink::bindings::CallbackInvokeHelper"* %10, i64 0, i32 8
  call void @_ZN2v87Context20BackupIncumbentScopeD1Ev(%"class.v8::Context::BackupIncumbentScope"* %153) #6
  %154 = getelementptr inbounds %"class.blink::bindings::CallbackInvokeHelper", %"class.blink::bindings::CallbackInvokeHelper"* %10, i64 0, i32 7, i32 1, i32 0
  %155 = load %"class.v8::Context"*, %"class.v8::Context"** %154, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %155) #6
  %156 = getelementptr inbounds %"class.blink::bindings::CallbackInvokeHelper", %"class.blink::bindings::CallbackInvokeHelper"* %10, i64 0, i32 7, i32 0
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* %156) #6
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %100) #6
  br label %157

157:                                              ; preds = %6, %151, %98
  %158 = phi i8 [ %152, %151 ], [ 0, %98 ], [ 0, %6 ]
  ret i8 %158
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.blink::ScriptState"* @_ZN5blink20CallbackFunctionBase43CallbackRelevantScriptStateOrThrowExceptionEPKcS2_(%"class.blink::CallbackFunctionBase"*, i8*, i8*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink26IsCallbackFunctionRunnableEPKNS_11ScriptStateES2_(%"class.blink::ScriptState"*, %"class.blink::ScriptState"*) local_unnamed_addr #3

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #3

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5blink14ExceptionState14ThrowExceptionEiRKN3WTF6StringE(%"class.blink::ExceptionState"*, i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
declare void @_ZN5blink8bindings20CallbackInvokeHelperINS_20CallbackFunctionBaseELNS0_24CallbackInvokeHelperModeE0EEC2EPS2_PKcS7_(%"class.blink::bindings::CallbackInvokeHelper"*, %"class.blink::CallbackFunctionBase"*, i8*, i8*) unnamed_addr #1 align 2

declare zeroext i1 @_ZN5blink8bindings20CallbackInvokeHelperINS_20CallbackFunctionBaseELNS0_24CallbackInvokeHelperModeE0EE14PrepareForCallENS0_31V8ValueOrScriptWrappableAdapterE(%"class.blink::bindings::CallbackInvokeHelper"*, %"class.v8::Value"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink8bindings20CallbackInvokeHelperINS_20CallbackFunctionBaseELNS0_24CallbackInvokeHelperModeE0EE4CallEiPN2v85LocalINS5_5ValueEEE(%"class.blink::bindings::CallbackInvokeHelper"*, i32, %"class.v8::Local"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i8 @_ZN5blink39V8CustomElementFormStateRestoreCallback9ConstructEPKNS_32V8UnionFileOrFormDataOrUSVStringENS_22V8FormStateRestoreModeE(%"class.blink::V8CustomElementFormStateRestoreCallback"*, %"class.blink::V8UnionFileOrFormDataOrUSVString"*, i64, i8*) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.v8::HandleScope", align 8
  %6 = alloca %"class.blink::ExceptionState", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.blink::bindings::CallbackInvokeHelper.229", align 8
  %9 = alloca [2 x %"class.v8::Local"], align 16
  %10 = bitcast [2 x %"class.v8::Local"]* %9 to i8*
  %11 = getelementptr inbounds %"class.blink::V8CustomElementFormStateRestoreCallback", %"class.blink::V8CustomElementFormStateRestoreCallback"* %0, i64 0, i32 0
  %12 = tail call %"class.blink::ScriptState"* @_ZN5blink20CallbackFunctionBase43CallbackRelevantScriptStateOrThrowExceptionEPKcS2_(%"class.blink::CallbackFunctionBase"* %11, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0)) #6
  %13 = icmp eq %"class.blink::ScriptState"* %12, null
  br i1 %13, label %155, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::V8CustomElementFormStateRestoreCallback", %"class.blink::V8CustomElementFormStateRestoreCallback"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %15, align 8
  %17 = tail call zeroext i1 @_ZN5blink26IsCallbackFunctionRunnableEPKNS_11ScriptStateES2_(%"class.blink::ScriptState"* nonnull %12, %"class.blink::ScriptState"* %16) #6
  br i1 %17, label %97, label %18

18:                                               ; preds = %14
  %19 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %15, align 8
  %20 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %19, i64 0, i32 0
  %21 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %20, align 8
  %22 = bitcast %"class.v8::HandleScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #6
  %23 = bitcast %"class.v8::HandleScope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 24, i1 false)
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %5, %"class.v8::Isolate"* %21) #6
  %24 = getelementptr inbounds %"class.blink::V8CustomElementFormStateRestoreCallback", %"class.blink::V8CustomElementFormStateRestoreCallback"* %0, i64 0, i32 0, i32 1
  %25 = bitcast %"class.blink::TraceWrapperV8Reference"* %24 to %"class.v8::Object"**
  %26 = load %"class.v8::Object"*, %"class.v8::Object"** %25, align 8
  %27 = icmp eq %"class.v8::Object"* %26, null
  br i1 %27, label %36, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.blink::ScriptState"** %15 to %"class.v8::internal::Isolate"***
  %30 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %29, align 8
  %31 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %30, align 8
  %32 = bitcast %"class.v8::Object"* %26 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %31, i64 %33) #6
  %35 = bitcast i64* %34 to %"class.v8::Object"*
  br label %36

36:                                               ; preds = %18, %28
  %37 = phi %"class.v8::Object"* [ %35, %28 ], [ null, %18 ]
  %38 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %37) #6
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %38) #6
  %39 = bitcast %"class.blink::ExceptionState"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %39) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 56, i1 false)
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 0
  store i16 6, i16* %41, align 8
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 1
  store i16 0, i16* %42, align 2
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 2
  %44 = bitcast i8** %43 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0)>, <2 x i8*>* %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 3
  store %"class.v8::Isolate"* %21, %"class.v8::Isolate"** %46, align 8
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 4
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 5, i32 0, i32 0
  %49 = bitcast %"class.WTF::StringImpl"** %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #6
  %50 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #6
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3, i64 0, i64 0), i64 44) #6
  call void @_ZN5blink14ExceptionState14ThrowExceptionEiRKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %6, i32 1000, %"class.WTF::String"* nonnull dereferenceable(8) %7) #6
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %36
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #6
  br label %67

67:                                               ; preds = %36, %63, %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %68 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %69 = load i64*, i64** %68, align 8
  %70 = icmp eq i64* %69, null
  br i1 %70, label %80, label %71

71:                                               ; preds = %67
  %72 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %46, align 8
  %73 = bitcast %"class.v8::Isolate"* %72 to %"class.v8::internal::Isolate"*
  %74 = load i64, i64* %69, align 8
  %75 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %73, i64 %74) #6
  %76 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %72) #6
  br i1 %76, label %80, label %77

77:                                               ; preds = %71
  %78 = bitcast i64* %75 to %"class.v8::Value"*
  %79 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %72, %"class.v8::Value"* %78) #6
  br label %80

80:                                               ; preds = %77, %71, %67
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #6
  br label %96

96:                                               ; preds = %80, %92, %95
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %39) #6
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %38) #6
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #6
  br label %155

97:                                               ; preds = %14
  %98 = bitcast %"class.blink::bindings::CallbackInvokeHelper.229"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %98) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %98, i8 -86, i64 112, i1 false)
  call void @_ZN5blink8bindings20CallbackInvokeHelperINS_20CallbackFunctionBaseELNS0_24CallbackInvokeHelperModeE1EEC2EPS2_PKcS7_(%"class.blink::bindings::CallbackInvokeHelper.229"* nonnull %8, %"class.blink::CallbackFunctionBase"* %11, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0))
  %99 = call zeroext i1 @_ZN5blink8bindings20CallbackInvokeHelperINS_20CallbackFunctionBaseELNS0_24CallbackInvokeHelperModeE1EE14PrepareForCallENS0_31V8ValueOrScriptWrappableAdapterE(%"class.blink::bindings::CallbackInvokeHelper.229"* nonnull %8, %"class.v8::Value"* null, %"class.blink::ScriptWrappable"* null) #6
  br i1 %99, label %105, label %100, !prof !2

100:                                              ; preds = %97
  %101 = getelementptr inbounds %"class.blink::bindings::CallbackInvokeHelper.229", %"class.blink::bindings::CallbackInvokeHelper.229"* %8, i64 0, i32 5, i32 0
  %102 = load %"class.v8::Value"*, %"class.v8::Value"** %101, align 8
  %103 = icmp ne %"class.v8::Value"* %102, null
  %104 = zext i1 %103 to i8
  br label %149

105:                                              ; preds = %97
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #6
  %106 = getelementptr inbounds [2 x %"class.v8::Local"], [2 x %"class.v8::Local"]* %9, i64 0, i64 0
  %107 = getelementptr inbounds [2 x %"class.v8::Local"], [2 x %"class.v8::Local"]* %9, i64 0, i64 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 0, i64 16, i1 false)
  %108 = getelementptr inbounds %"class.blink::V8CustomElementFormStateRestoreCallback", %"class.blink::V8CustomElementFormStateRestoreCallback"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %109 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %108, align 8
  %110 = icmp eq %"class.blink::V8UnionFileOrFormDataOrUSVString"* %1, null
  br i1 %110, label %111, label %116

111:                                              ; preds = %105
  %112 = bitcast %"class.blink::ScriptState"* %109 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = add i64 %113, 176
  %115 = inttoptr i64 %114 to %"class.v8::Value"*
  br label %118

116:                                              ; preds = %105
  %117 = call %"class.v8::Value"* @_ZNK5blink32V8UnionFileOrFormDataOrUSVString9ToV8ValueEPNS_11ScriptStateE(%"class.blink::V8UnionFileOrFormDataOrUSVString"* nonnull %1, %"class.blink::ScriptState"* %109) #6
  br label %118

118:                                              ; preds = %111, %116
  %119 = phi %"class.v8::Value"* [ %115, %111 ], [ %117, %116 ]
  %120 = icmp eq %"class.v8::Value"* %119, null
  br i1 %120, label %147, label %121

121:                                              ; preds = %118
  %122 = ptrtoint %"class.v8::Value"* %119 to i64
  %123 = bitcast [2 x %"class.v8::Local"]* %9 to i64*
  store i64 %122, i64* %123, align 16
  %124 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %109, i64 0, i32 0
  %125 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %124, align 8
  %126 = icmp eq i8* %3, null
  br i1 %126, label %136, label %127

127:                                              ; preds = %121
  %128 = load i8, i8* %3, align 1
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %136, label %130

130:                                              ; preds = %127
  %131 = call i64 @strlen(i8* nonnull %3) #7
  %132 = trunc i64 %131 to i32
  %133 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %125, i8* nonnull %3, i32 0, i32 %132) #6
  %134 = icmp eq %"class.v8::String"* %133, null
  br i1 %134, label %135, label %141, !prof !3

135:                                              ; preds = %130
  call void @_ZN2v82V812ToLocalEmptyEv() #6
  br label %147

136:                                              ; preds = %121, %127
  %137 = ptrtoint %"class.v8::Isolate"* %125 to i64
  %138 = add i64 %137, 200
  %139 = inttoptr i64 %138 to %"class.v8::String"*
  %140 = icmp eq i64 %138, 0
  br i1 %140, label %147, label %141

141:                                              ; preds = %130, %136
  %142 = phi %"class.v8::String"* [ %139, %136 ], [ %133, %130 ]
  %143 = ptrtoint %"class.v8::String"* %142 to i64
  %144 = bitcast %"class.v8::Local"* %107 to i64*
  store i64 %143, i64* %144, align 8
  %145 = call zeroext i1 @_ZN5blink8bindings20CallbackInvokeHelperINS_20CallbackFunctionBaseELNS0_24CallbackInvokeHelperModeE1EE4CallEiPN2v85LocalINS5_5ValueEEE(%"class.blink::bindings::CallbackInvokeHelper.229"* nonnull %8, i32 2, %"class.v8::Local"* nonnull %106) #6
  %146 = zext i1 %145 to i8
  br label %147

147:                                              ; preds = %135, %136, %118, %141
  %148 = phi i8 [ 0, %118 ], [ 0, %136 ], [ %146, %141 ], [ 0, %135 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #6
  br label %149

149:                                              ; preds = %100, %147
  %150 = phi i8 [ %148, %147 ], [ %104, %100 ]
  %151 = getelementptr inbounds %"class.blink::bindings::CallbackInvokeHelper.229", %"class.blink::bindings::CallbackInvokeHelper.229"* %8, i64 0, i32 8
  call void @_ZN2v87Context20BackupIncumbentScopeD1Ev(%"class.v8::Context::BackupIncumbentScope"* %151) #6
  %152 = getelementptr inbounds %"class.blink::bindings::CallbackInvokeHelper.229", %"class.blink::bindings::CallbackInvokeHelper.229"* %8, i64 0, i32 7, i32 1, i32 0
  %153 = load %"class.v8::Context"*, %"class.v8::Context"** %152, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %153) #6
  %154 = getelementptr inbounds %"class.blink::bindings::CallbackInvokeHelper.229", %"class.blink::bindings::CallbackInvokeHelper.229"* %8, i64 0, i32 7, i32 0
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* %154) #6
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %98) #6
  br label %155

155:                                              ; preds = %4, %149, %96
  %156 = phi i8 [ %150, %149 ], [ 0, %96 ], [ 0, %4 ]
  ret i8 %156
}

; Function Attrs: nounwind ssp uwtable
declare void @_ZN5blink8bindings20CallbackInvokeHelperINS_20CallbackFunctionBaseELNS0_24CallbackInvokeHelperModeE1EEC2EPS2_PKcS7_(%"class.blink::bindings::CallbackInvokeHelper.229"*, %"class.blink::CallbackFunctionBase"*, i8*, i8*) unnamed_addr #1 align 2

declare zeroext i1 @_ZN5blink8bindings20CallbackInvokeHelperINS_20CallbackFunctionBaseELNS0_24CallbackInvokeHelperModeE1EE14PrepareForCallENS0_31V8ValueOrScriptWrappableAdapterE(%"class.blink::bindings::CallbackInvokeHelper.229"*, %"class.v8::Value"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink8bindings20CallbackInvokeHelperINS_20CallbackFunctionBaseELNS0_24CallbackInvokeHelperModeE1EE4CallEiPN2v85LocalINS5_5ValueEEE(%"class.blink::bindings::CallbackInvokeHelper.229"*, i32, %"class.v8::Local"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink39V8CustomElementFormStateRestoreCallback24InvokeAndReportExceptionENS_8bindings31V8ValueOrScriptWrappableAdapterEPKNS_32V8UnionFileOrFormDataOrUSVStringENS_22V8FormStateRestoreModeE(%"class.blink::V8CustomElementFormStateRestoreCallback"*, %"class.v8::Value"*, %"class.blink::ScriptWrappable"*, %"class.blink::V8UnionFileOrFormDataOrUSVString"*, i64, i8*) local_unnamed_addr #1 align 2 {
  %7 = alloca %"class.v8::TryCatch", align 8
  %8 = getelementptr inbounds %"class.blink::V8CustomElementFormStateRestoreCallback", %"class.blink::V8CustomElementFormStateRestoreCallback"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %9, i64 0, i32 0
  %11 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %10, align 8
  %12 = bitcast %"class.v8::TryCatch"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %12) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %7, %"class.v8::Isolate"* %11) #6
  call void @_ZN2v88TryCatch10SetVerboseEb(%"class.v8::TryCatch"* nonnull %7, i1 zeroext true) #6
  %13 = call i8 @_ZN5blink39V8CustomElementFormStateRestoreCallback6InvokeENS_8bindings31V8ValueOrScriptWrappableAdapterEPKNS_32V8UnionFileOrFormDataOrUSVStringENS_22V8FormStateRestoreModeE(%"class.blink::V8CustomElementFormStateRestoreCallback"* %0, %"class.v8::Value"* %1, %"class.blink::ScriptWrappable"* %2, %"class.blink::V8UnionFileOrFormDataOrUSVString"* %3, i64 %4, i8* %5)
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %7) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %12) #6
  ret void
}

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #3

declare void @_ZN2v88TryCatch10SetVerboseEb(%"class.v8::TryCatch"*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20CallbackFunctionBaseD2Ev(%"class.blink::CallbackFunctionBase"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink39V8CustomElementFormStateRestoreCallbackD0Ev(%"class.blink::V8CustomElementFormStateRestoreCallback"*) unnamed_addr #1 comdat align 2 {
  ret void
}

declare void @_ZNK5blink20CallbackFunctionBase5TraceEPNS_7VisitorE(%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*) unnamed_addr #3

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #3

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #3

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #3

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2v87Context20BackupIncumbentScopeD1Ev(%"class.v8::Context::BackupIncumbentScope"*) unnamed_addr #4

declare %"class.v8::Value"* @_ZNK5blink32V8UnionFileOrFormDataOrUSVString9ToV8ValueEPNS_11ScriptStateE(%"class.blink::V8UnionFileOrFormDataOrUSVString"*, %"class.blink::ScriptState"*) unnamed_addr #3

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #3

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #3

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
