; ModuleID = '../../third_party/pdfium/third_party/libopenjpeg20/function_list.c'
source_filename = "../../third_party/pdfium/third_party/libopenjpeg20/function_list.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.opj_procedure_list = type { i32, i32, void ()** }
%struct.opj_event_mgr = type { i8*, i8*, i8*, void (i8*, i8*)*, void (i8*, i8*)*, void (i8*, i8*)* }

@.str = private unnamed_addr constant [53 x i8] c"Not enough memory to add a new validation procedure\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.opj_procedure_list* @opj_procedure_list_create() local_unnamed_addr #0 {
  %1 = tail call i8* @opj_calloc(i64 1, i64 16) #4
  %2 = icmp eq i8* %1, null
  br i1 %2, label %12, label %3

3:                                                ; preds = %0
  %4 = bitcast i8* %1 to %struct.opj_procedure_list*
  %5 = getelementptr inbounds i8, i8* %1, i64 4
  %6 = bitcast i8* %5 to i32*
  store i32 10, i32* %6, align 4
  %7 = tail call i8* @opj_calloc(i64 10, i64 8) #4
  %8 = getelementptr inbounds i8, i8* %1, i64 8
  %9 = bitcast i8* %8 to i8**
  store i8* %7, i8** %9, align 8
  %10 = icmp eq i8* %7, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  tail call void @opj_free(i8* nonnull %1) #4
  br label %12

12:                                               ; preds = %3, %0, %11
  %13 = phi %struct.opj_procedure_list* [ null, %11 ], [ null, %0 ], [ %4, %3 ]
  ret %struct.opj_procedure_list* %13
}

declare i8* @opj_calloc(i64, i64) local_unnamed_addr #1

declare void @opj_free(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @opj_procedure_list_destroy(%struct.opj_procedure_list*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.opj_procedure_list* %0, null
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.opj_procedure_list, %struct.opj_procedure_list* %0, i64 0, i32 2
  %5 = load void ()**, void ()*** %4, align 8
  %6 = icmp eq void ()** %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = bitcast void ()** %5 to i8*
  tail call void @opj_free(i8* nonnull %8) #4
  br label %9

9:                                                ; preds = %3, %7
  %10 = bitcast %struct.opj_procedure_list* %0 to i8*
  tail call void @opj_free(i8* nonnull %10) #4
  br label %11

11:                                               ; preds = %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @opj_procedure_list_add_procedure(%struct.opj_procedure_list* nocapture, void ()*, %struct.opj_event_mgr*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.opj_procedure_list, %struct.opj_procedure_list* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %struct.opj_procedure_list, %struct.opj_procedure_list* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.opj_procedure_list, %struct.opj_procedure_list* %0, i64 0, i32 2
  %11 = load void ()**, void ()*** %10, align 8
  br label %27

12:                                               ; preds = %3
  %13 = add i32 %5, 10
  store i32 %13, i32* %4, align 4
  %14 = getelementptr inbounds %struct.opj_procedure_list, %struct.opj_procedure_list* %0, i64 0, i32 2
  %15 = bitcast void ()*** %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = zext i32 %13 to i64
  %18 = shl nuw nsw i64 %17, 3
  %19 = tail call i8* @opj_realloc(i8* %16, i64 %18) #4
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %24

21:                                               ; preds = %12
  %22 = load i8*, i8** %15, align 8
  tail call void @opj_free(i8* %22) #4
  store i32 0, i32* %4, align 4
  store i32 0, i32* %6, align 8
  %23 = tail call i32 (%struct.opj_event_mgr*, i32, i8*, ...) @opj_event_msg(%struct.opj_event_mgr* %2, i32 1, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0)) #4
  br label %34

24:                                               ; preds = %12
  store i8* %19, i8** %15, align 8
  %25 = bitcast i8* %19 to void ()**
  %26 = load i32, i32* %6, align 8
  br label %27

27:                                               ; preds = %9, %24
  %28 = phi i32 [ %7, %9 ], [ %26, %24 ]
  %29 = phi void ()** [ %11, %9 ], [ %25, %24 ]
  %30 = zext i32 %28 to i64
  %31 = getelementptr inbounds void ()*, void ()** %29, i64 %30
  store void ()* %1, void ()** %31, align 8
  %32 = load i32, i32* %6, align 8
  %33 = add i32 %32, 1
  store i32 %33, i32* %6, align 8
  br label %34

34:                                               ; preds = %21, %27
  %35 = phi i32 [ 1, %27 ], [ 0, %21 ]
  ret i32 %35
}

declare i8* @opj_realloc(i8*, i64) local_unnamed_addr #1

declare i32 @opj_event_msg(%struct.opj_event_mgr*, i32, i8*, ...) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @opj_procedure_list_get_nb_procedures(%struct.opj_procedure_list* nocapture readonly) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.opj_procedure_list, %struct.opj_procedure_list* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden void ()** @opj_procedure_list_get_first_procedure(%struct.opj_procedure_list* nocapture readonly) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.opj_procedure_list, %struct.opj_procedure_list* %0, i64 0, i32 2
  %3 = load void ()**, void ()*** %2, align 8
  ret void ()** %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @opj_procedure_list_clear(%struct.opj_procedure_list* nocapture) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.opj_procedure_list, %struct.opj_procedure_list* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
