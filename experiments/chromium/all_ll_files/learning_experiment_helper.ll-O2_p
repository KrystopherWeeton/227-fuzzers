; ModuleID = '../../media/blink/learning_experiment_helper.cc'
source_filename = "../../media/blink/learning_experiment_helper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::LearningExperimentHelper" = type { %"class.std::__1::unique_ptr", %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.media::learning::LearningTaskController"* }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.media::learning::LearningTaskController" = type { i32 (...)** }
%"class.media::learning::FeatureDictionary" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.media::learning::Value"*, %"class.media::learning::Value"*, %"class.std::__1::__compressed_pair.7" }
%"class.media::learning::Value" = type { double }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.media::learning::Value"* }
%"class.absl::optional.25" = type { %"class.absl::optional_internal::optional_data.26" }
%"class.absl::optional_internal::optional_data.26" = type { %"class.absl::optional_internal::optional_data_base.27" }
%"class.absl::optional_internal::optional_data_base.27" = type { %"class.absl::optional_internal::optional_data_dtor_base.28" }
%"class.absl::optional_internal::optional_data_dtor_base.28" = type { i8, %union.anon.29 }
%union.anon.29 = type { %"class.media::learning::Value" }
%"class.absl::optional.30" = type { %"class.absl::optional_internal::optional_data.31" }
%"class.absl::optional_internal::optional_data.31" = type { %"class.absl::optional_internal::optional_data_base.32" }
%"class.absl::optional_internal::optional_data_base.32" = type { %"class.absl::optional_internal::optional_data_dtor_base.33" }
%"class.absl::optional_internal::optional_data_dtor_base.33" = type { i8, %union.anon.34 }
%union.anon.34 = type { i64 }
%"struct.media::learning::LearningTask" = type { %"class.std::__1::basic_string", i32, %"class.std::__1::vector.17", %"struct.media::learning::LearningTask::ValueDescription", i64, double, %"class.absl::optional", i64, i8, double, i8, i8, i8, double, i32, i8, double, double }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"struct.media::learning::LearningTask::ValueDescription"*, %"struct.media::learning::LearningTask::ValueDescription"*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.media::learning::LearningTask::ValueDescription"* }
%"struct.media::learning::LearningTask::ValueDescription" = type { %"class.std::__1::basic_string", i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.24 }
%union.anon.24 = type { i32 }
%"struct.media::learning::ObservationCompletion" = type { %"class.media::learning::Value", i64 }

@_ZN5media24LearningExperimentHelperC1ENSt3__110unique_ptrINS_8learning22LearningTaskControllerENS1_14default_deleteIS4_EEEE = hidden unnamed_addr alias void (%"class.media::LearningExperimentHelper"*, %"class.media::learning::LearningTaskController"*), void (%"class.media::LearningExperimentHelper"*, %"class.media::learning::LearningTaskController"*)* @_ZN5media24LearningExperimentHelperC2ENSt3__110unique_ptrINS_8learning22LearningTaskControllerENS1_14default_deleteIS4_EEEE
@_ZN5media24LearningExperimentHelperD1Ev = hidden unnamed_addr alias void (%"class.media::LearningExperimentHelper"*), void (%"class.media::LearningExperimentHelper"*)* @_ZN5media24LearningExperimentHelperD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media24LearningExperimentHelperC2ENSt3__110unique_ptrINS_8learning22LearningTaskControllerENS1_14default_deleteIS4_EEEE(%"class.media::LearningExperimentHelper"* nocapture, %"class.media::learning::LearningTaskController"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.media::learning::LearningTaskController"* %1 to i64
  %4 = bitcast %"class.media::LearningExperimentHelper"* %0 to i64*
  store i64 %3, i64* %4, align 8
  %5 = getelementptr inbounds %"class.media::LearningExperimentHelper", %"class.media::LearningExperimentHelper"* %0, i64 0, i32 1
  %6 = bitcast %"class.base::UnguessableToken"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media24LearningExperimentHelperD2Ev(%"class.media::LearningExperimentHelper"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::LearningExperimentHelper", %"class.media::LearningExperimentHelper"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %2, i64 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.media::LearningExperimentHelper", %"class.media::LearningExperimentHelper"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = or i64 %6, %4
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %19, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.media::LearningExperimentHelper", %"class.media::LearningExperimentHelper"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.media::learning::LearningTaskController"*, %"class.media::learning::LearningTaskController"** %10, align 8
  %12 = bitcast %"class.media::learning::LearningTaskController"* %11 to void (%"class.media::learning::LearningTaskController"*, i64, i64)***
  %13 = load void (%"class.media::learning::LearningTaskController"*, i64, i64)**, void (%"class.media::learning::LearningTaskController"*, i64, i64)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.media::learning::LearningTaskController"*, i64, i64)*, void (%"class.media::learning::LearningTaskController"*, i64, i64)** %13, i64 4
  %15 = load void (%"class.media::learning::LearningTaskController"*, i64, i64)*, void (%"class.media::learning::LearningTaskController"*, i64, i64)** %14, align 8
  tail call void %15(%"class.media::learning::LearningTaskController"* %11, i64 %4, i64 %6) #4
  %16 = tail call dereferenceable(16) %"class.base::UnguessableToken"* @_ZN4base16UnguessableToken4NullEv() #4
  %17 = bitcast %"class.base::UnguessableToken"* %2 to i8*
  %18 = bitcast %"class.base::UnguessableToken"* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 16, i1 false) #4
  br label %19

19:                                               ; preds = %1, %9
  %20 = getelementptr inbounds %"class.media::LearningExperimentHelper", %"class.media::LearningExperimentHelper"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.media::learning::LearningTaskController"*, %"class.media::learning::LearningTaskController"** %20, align 8
  store %"class.media::learning::LearningTaskController"* null, %"class.media::learning::LearningTaskController"** %20, align 8
  %22 = icmp eq %"class.media::learning::LearningTaskController"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.media::learning::LearningTaskController"* %21 to void (%"class.media::learning::LearningTaskController"*)***
  %25 = load void (%"class.media::learning::LearningTaskController"*)**, void (%"class.media::learning::LearningTaskController"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.media::learning::LearningTaskController"*)*, void (%"class.media::learning::LearningTaskController"*)** %25, i64 1
  %27 = load void (%"class.media::learning::LearningTaskController"*)*, void (%"class.media::learning::LearningTaskController"*)** %26, align 8
  tail call void %27(%"class.media::learning::LearningTaskController"* nonnull %21) #4
  br label %28

28:                                               ; preds = %19, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media24LearningExperimentHelper25CancelObservationIfNeededEv(%"class.media::LearningExperimentHelper"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::LearningExperimentHelper", %"class.media::LearningExperimentHelper"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %2, i64 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.media::LearningExperimentHelper", %"class.media::LearningExperimentHelper"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = or i64 %4, %6
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %19, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.media::LearningExperimentHelper", %"class.media::LearningExperimentHelper"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.media::learning::LearningTaskController"*, %"class.media::learning::LearningTaskController"** %10, align 8
  %12 = bitcast %"class.media::learning::LearningTaskController"* %11 to void (%"class.media::learning::LearningTaskController"*, i64, i64)***
  %13 = load void (%"class.media::learning::LearningTaskController"*, i64, i64)**, void (%"class.media::learning::LearningTaskController"*, i64, i64)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.media::learning::LearningTaskController"*, i64, i64)*, void (%"class.media::learning::LearningTaskController"*, i64, i64)** %13, i64 4
  %15 = load void (%"class.media::learning::LearningTaskController"*, i64, i64)*, void (%"class.media::learning::LearningTaskController"*, i64, i64)** %14, align 8
  tail call void %15(%"class.media::learning::LearningTaskController"* %11, i64 %4, i64 %6) #4
  %16 = tail call dereferenceable(16) %"class.base::UnguessableToken"* @_ZN4base16UnguessableToken4NullEv() #4
  %17 = bitcast %"class.base::UnguessableToken"* %2 to i8*
  %18 = bitcast %"class.base::UnguessableToken"* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 16, i1 false)
  br label %19

19:                                               ; preds = %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media24LearningExperimentHelper16BeginObservationERKNS_8learning17FeatureDictionaryE(%"class.media::LearningExperimentHelper"* nocapture, %"class.media::learning::FeatureDictionary"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"class.absl::optional.25", align 8
  %5 = alloca %"class.absl::optional.30", align 8
  %6 = getelementptr inbounds %"class.media::LearningExperimentHelper", %"class.media::LearningExperimentHelper"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.media::learning::LearningTaskController"*, %"class.media::learning::LearningTaskController"** %6, align 8
  %8 = icmp eq %"class.media::learning::LearningTaskController"* %7, null
  br i1 %8, label %54, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.media::LearningExperimentHelper", %"class.media::LearningExperimentHelper"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %10, i64 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.media::LearningExperimentHelper", %"class.media::LearningExperimentHelper"* %0, i64 0, i32 1, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = or i64 %14, %12
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %9
  %18 = bitcast %"class.media::learning::LearningTaskController"* %7 to void (%"class.media::learning::LearningTaskController"*, i64, i64)***
  %19 = load void (%"class.media::learning::LearningTaskController"*, i64, i64)**, void (%"class.media::learning::LearningTaskController"*, i64, i64)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.media::learning::LearningTaskController"*, i64, i64)*, void (%"class.media::learning::LearningTaskController"*, i64, i64)** %19, i64 4
  %21 = load void (%"class.media::learning::LearningTaskController"*, i64, i64)*, void (%"class.media::learning::LearningTaskController"*, i64, i64)** %20, align 8
  tail call void %21(%"class.media::learning::LearningTaskController"* nonnull %7, i64 %12, i64 %14) #4
  %22 = tail call dereferenceable(16) %"class.base::UnguessableToken"* @_ZN4base16UnguessableToken4NullEv() #4
  %23 = bitcast %"class.base::UnguessableToken"* %10 to i8*
  %24 = bitcast %"class.base::UnguessableToken"* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false) #4
  %25 = load %"class.media::learning::LearningTaskController"*, %"class.media::learning::LearningTaskController"** %6, align 8
  br label %26

26:                                               ; preds = %9, %17
  %27 = phi %"class.media::learning::LearningTaskController"* [ %7, %9 ], [ %25, %17 ]
  %28 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #4
  %29 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 24, i1 false) #4
  %30 = bitcast %"class.media::learning::LearningTaskController"* %27 to %"struct.media::learning::LearningTask"* (%"class.media::learning::LearningTaskController"*)***
  %31 = load %"struct.media::learning::LearningTask"* (%"class.media::learning::LearningTaskController"*)**, %"struct.media::learning::LearningTask"* (%"class.media::learning::LearningTaskController"*)*** %30, align 8
  %32 = getelementptr inbounds %"struct.media::learning::LearningTask"* (%"class.media::learning::LearningTaskController"*)*, %"struct.media::learning::LearningTask"* (%"class.media::learning::LearningTaskController"*)** %31, i64 6
  %33 = load %"struct.media::learning::LearningTask"* (%"class.media::learning::LearningTaskController"*)*, %"struct.media::learning::LearningTask"* (%"class.media::learning::LearningTaskController"*)** %32, align 8
  %34 = tail call dereferenceable(176) %"struct.media::learning::LearningTask"* %33(%"class.media::learning::LearningTaskController"* %27) #4
  call void @_ZNK5media8learning17FeatureDictionary6LookupERKNS0_12LearningTaskEPNSt3__16vectorINS0_5ValueENS5_9allocatorIS7_EEEE(%"class.media::learning::FeatureDictionary"* %1, %"struct.media::learning::LearningTask"* dereferenceable(176) %34, %"class.std::__1::vector"* nonnull %3) #4
  %35 = call { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() #4
  %36 = extractvalue { i64, i64 } %35, 0
  %37 = extractvalue { i64, i64 } %35, 1
  %38 = getelementptr inbounds %"class.media::LearningExperimentHelper", %"class.media::LearningExperimentHelper"* %0, i64 0, i32 1, i32 0, i32 0
  store i64 %36, i64* %38, align 8
  store i64 %37, i64* %13, align 8
  %39 = load %"class.media::learning::LearningTaskController"*, %"class.media::learning::LearningTaskController"** %6, align 8
  %40 = getelementptr inbounds %"class.absl::optional.25", %"class.absl::optional.25"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #4
  store i8 0, i8* %40, align 8
  %41 = getelementptr inbounds %"class.absl::optional.30", %"class.absl::optional.30"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #4
  store i8 0, i8* %41, align 8
  %42 = bitcast %"class.media::learning::LearningTaskController"* %39 to void (%"class.media::learning::LearningTaskController"*, i64, i64, %"class.std::__1::vector"*, %"class.absl::optional.25"*, %"class.absl::optional.30"*)***
  %43 = load void (%"class.media::learning::LearningTaskController"*, i64, i64, %"class.std::__1::vector"*, %"class.absl::optional.25"*, %"class.absl::optional.30"*)**, void (%"class.media::learning::LearningTaskController"*, i64, i64, %"class.std::__1::vector"*, %"class.absl::optional.25"*, %"class.absl::optional.30"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.media::learning::LearningTaskController"*, i64, i64, %"class.std::__1::vector"*, %"class.absl::optional.25"*, %"class.absl::optional.30"*)*, void (%"class.media::learning::LearningTaskController"*, i64, i64, %"class.std::__1::vector"*, %"class.absl::optional.25"*, %"class.absl::optional.30"*)** %43, i64 2
  %45 = load void (%"class.media::learning::LearningTaskController"*, i64, i64, %"class.std::__1::vector"*, %"class.absl::optional.25"*, %"class.absl::optional.30"*)*, void (%"class.media::learning::LearningTaskController"*, i64, i64, %"class.std::__1::vector"*, %"class.absl::optional.25"*, %"class.absl::optional.30"*)** %44, align 8
  call void %45(%"class.media::learning::LearningTaskController"* %39, i64 %36, i64 %37, %"class.std::__1::vector"* nonnull dereferenceable(24) %3, %"class.absl::optional.25"* nonnull dereferenceable(16) %4, %"class.absl::optional.30"* nonnull dereferenceable(16) %5) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #4
  %46 = load %"class.media::learning::Value"*, %"class.media::learning::Value"** %29, align 8
  %47 = icmp eq %"class.media::learning::Value"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %26
  %49 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %50 = ptrtoint %"class.media::learning::Value"* %46 to i64
  %51 = bitcast %"class.media::learning::Value"** %49 to i64*
  store i64 %50, i64* %51, align 8
  %52 = bitcast %"class.media::learning::Value"* %46 to i8*
  call void @_ZdlPv(i8* %52) #5
  br label %53

53:                                               ; preds = %26, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #4
  br label %54

54:                                               ; preds = %2, %53
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNK5media8learning17FeatureDictionary6LookupERKNS0_12LearningTaskEPNSt3__16vectorINS0_5ValueENS5_9allocatorIS7_EEEE(%"class.media::learning::FeatureDictionary"*, %"struct.media::learning::LearningTask"* dereferenceable(176), %"class.std::__1::vector"*) local_unnamed_addr #2

declare { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media24LearningExperimentHelper27CompleteObservationIfNeededERKNS_8learning5ValueE(%"class.media::LearningExperimentHelper"* nocapture, %"class.media::learning::Value"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.media::learning::ObservationCompletion", align 8
  %4 = getelementptr inbounds %"class.media::LearningExperimentHelper", %"class.media::LearningExperimentHelper"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %4, i64 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.media::LearningExperimentHelper", %"class.media::LearningExperimentHelper"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = or i64 %6, %8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %24, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.media::LearningExperimentHelper", %"class.media::LearningExperimentHelper"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.media::learning::LearningTaskController"*, %"class.media::learning::LearningTaskController"** %12, align 8
  %14 = bitcast %"struct.media::learning::ObservationCompletion"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #4
  %15 = getelementptr inbounds %"struct.media::learning::ObservationCompletion", %"struct.media::learning::ObservationCompletion"* %3, i64 0, i32 0
  call void @_ZN5media8learning5ValueC1ERKS1_(%"class.media::learning::Value"* nonnull %15, %"class.media::learning::Value"* dereferenceable(8) %1) #4
  %16 = getelementptr inbounds %"struct.media::learning::ObservationCompletion", %"struct.media::learning::ObservationCompletion"* %3, i64 0, i32 1
  store i64 1, i64* %16, align 8
  %17 = bitcast %"class.media::learning::LearningTaskController"* %13 to void (%"class.media::learning::LearningTaskController"*, i64, i64, %"struct.media::learning::ObservationCompletion"*)***
  %18 = load void (%"class.media::learning::LearningTaskController"*, i64, i64, %"struct.media::learning::ObservationCompletion"*)**, void (%"class.media::learning::LearningTaskController"*, i64, i64, %"struct.media::learning::ObservationCompletion"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.media::learning::LearningTaskController"*, i64, i64, %"struct.media::learning::ObservationCompletion"*)*, void (%"class.media::learning::LearningTaskController"*, i64, i64, %"struct.media::learning::ObservationCompletion"*)** %18, i64 3
  %20 = load void (%"class.media::learning::LearningTaskController"*, i64, i64, %"struct.media::learning::ObservationCompletion"*)*, void (%"class.media::learning::LearningTaskController"*, i64, i64, %"struct.media::learning::ObservationCompletion"*)** %19, align 8
  call void %20(%"class.media::learning::LearningTaskController"* %13, i64 %6, i64 %8, %"struct.media::learning::ObservationCompletion"* nonnull dereferenceable(16) %3) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #4
  %21 = call dereferenceable(16) %"class.base::UnguessableToken"* @_ZN4base16UnguessableToken4NullEv() #4
  %22 = bitcast %"class.base::UnguessableToken"* %4 to i8*
  %23 = bitcast %"class.base::UnguessableToken"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 16, i1 false)
  br label %24

24:                                               ; preds = %2, %11
  ret void
}

declare dereferenceable(16) %"class.base::UnguessableToken"* @_ZN4base16UnguessableToken4NullEv() local_unnamed_addr #2

declare void @_ZN5media8learning5ValueC1ERKS1_(%"class.media::learning::Value"*, %"class.media::learning::Value"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
