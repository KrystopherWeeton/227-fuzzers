; ModuleID = '../../third_party/blink/renderer/core/svg/graphics/filters/svg_fe_image.cc'
source_filename = "../../third_party/blink/renderer/core/svg/graphics/filters/svg_fe_image.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%union.anon.1290 = type { %"class.blink::AffineTransform" }
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%class.scoped_refptr.1337 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1338", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1345" }
%"class.WTF::RefCounted.1338" = type { %"class.base::RefCounted.1339" }
%"class.base::RefCounted.1339" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1340", i32, [4 x i8] }>
%"class.WTF::Vector.1340" = type { %"class.WTF::VectorBuffer.1341" }
%"class.WTF::VectorBuffer.1341" = type { %"class.WTF::VectorBufferBase.1342" }
%"class.WTF::VectorBufferBase.1342" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1348", %"class.std::__1::unique_ptr.1364", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"class.blink::Color" = type { i32 }
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1152, %class.scoped_refptr.1206, %class.scoped_refptr.1205 }
%class.scoped_refptr.1152 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1150", i8, i8, %class.scoped_refptr.1152, i32, i32 }
%"class.WTF::RefCounted.1150" = type { %"class.base::RefCounted.1151" }
%"class.base::RefCounted.1151" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1206 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1236" }
%"class.blink::PaintPropertyNode.1236" = type { %"class.WTF::RefCounted.1237", i8, i8, %class.scoped_refptr.1206, i32, i32 }
%"class.WTF::RefCounted.1237" = type { %"class.base::RefCounted.1238" }
%"class.base::RefCounted.1238" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1205 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1202" }
%"class.blink::PaintPropertyNode.1202" = type { %"class.WTF::RefCounted.1203", i8, i8, %class.scoped_refptr.1205, i32, i32 }
%"class.WTF::RefCounted.1203" = type { %"class.base::RefCounted.1204" }
%"class.base::RefCounted.1204" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1348" = type { %"class.std::__1::__compressed_pair.1349" }
%"class.std::__1::__compressed_pair.1349" = type { %"struct.std::__1::__compressed_pair_elem.1350" }
%"struct.std::__1::__compressed_pair_elem.1350" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1351", %"class.WTF::Vector.1356", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1351" = type { %"class.WTF::VectorBuffer.1352" }
%"class.WTF::VectorBuffer.1352" = type { %"class.WTF::VectorBufferBase.1353" }
%"class.WTF::VectorBufferBase.1353" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1356" = type { %"class.WTF::VectorBuffer.1357" }
%"class.WTF::VectorBuffer.1357" = type { %"class.WTF::VectorBufferBase.1358" }
%"class.WTF::VectorBufferBase.1358" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1166" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1159, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1160", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1153" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1153" = type { %"class.std::__1::__compressed_pair.1154" }
%"class.std::__1::__compressed_pair.1154" = type { %"struct.std::__1::__compressed_pair_elem.1155" }
%"struct.std::__1::__compressed_pair_elem.1155" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1159 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1185", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1185" = type { %"class.WTF::RefCounted.1186", i8, i8, %class.scoped_refptr.1159, i32, i32 }
%"class.WTF::RefCounted.1186" = type { %"class.base::RefCounted.1187" }
%"class.base::RefCounted.1187" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1188" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1188" = type { %"class.absl::optional_internal::optional_data.1189" }
%"class.absl::optional_internal::optional_data.1189" = type { %"class.absl::optional_internal::optional_data_base.1190" }
%"class.absl::optional_internal::optional_data_base.1190" = type { %"class.absl::optional_internal::optional_data_dtor_base.1191" }
%"class.absl::optional_internal::optional_data_dtor_base.1191" = type { i8, %union.anon.1192 }
%union.anon.1192 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1193", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1193" = type { %"class.std::__1::__vector_base.1194" }
%"class.std::__1::__vector_base.1194" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1195" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1195" = type { %"struct.std::__1::__compressed_pair_elem.1196" }
%"struct.std::__1::__compressed_pair_elem.1196" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1160" = type { %"class.std::__1::__compressed_pair.1161" }
%"class.std::__1::__compressed_pair.1161" = type { %"struct.std::__1::__compressed_pair_elem.1162" }
%"struct.std::__1::__compressed_pair_elem.1162" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1166" = type { %"class.std::__1::__compressed_pair.1167" }
%"class.std::__1::__compressed_pair.1167" = type { %"struct.std::__1::__compressed_pair_elem.1168" }
%"struct.std::__1::__compressed_pair_elem.1168" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1169", %"class.std::__1::unique_ptr.1175", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1169" = type { %"class.std::__1::__compressed_pair.1170" }
%"class.std::__1::__compressed_pair.1170" = type { %"struct.std::__1::__compressed_pair_elem.1171" }
%"struct.std::__1::__compressed_pair_elem.1171" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1175" = type { %"class.std::__1::__compressed_pair.1176" }
%"class.std::__1::__compressed_pair.1176" = type { %"struct.std::__1::__compressed_pair_elem.1177" }
%"struct.std::__1::__compressed_pair_elem.1177" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1364" = type { %"class.std::__1::__compressed_pair.1365" }
%"class.std::__1::__compressed_pair.1365" = type { %"struct.std::__1::__compressed_pair_elem.1366" }
%"struct.std::__1::__compressed_pair_elem.1366" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1367", %"class.absl::optional.1367" }
%"class.absl::optional.1367" = type { %"class.absl::optional_internal::optional_data.1368" }
%"class.absl::optional_internal::optional_data.1368" = type { %"class.absl::optional_internal::optional_data_base.1369" }
%"class.absl::optional_internal::optional_data_base.1369" = type { %"class.absl::optional_internal::optional_data_dtor_base.1370" }
%"class.absl::optional_internal::optional_data_dtor_base.1370" = type { i8, [3 x i8], %union.anon.1371 }
%union.anon.1371 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%union.anon.1381 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1382", %"class.WTF::Vector.1387" }
%"class.WTF::Vector.1382" = type { %"class.WTF::VectorBuffer.1383" }
%"class.WTF::VectorBuffer.1383" = type { %"class.WTF::VectorBufferBase.1384", [128 x i8] }
%"class.WTF::VectorBufferBase.1384" = type { i32*, i32, i32 }
%"class.WTF::Vector.1387" = type { %"class.WTF::VectorBuffer.1388" }
%"class.WTF::VectorBuffer.1388" = type { %"class.WTF::VectorBufferBase.1389", [128 x i8] }
%"class.WTF::VectorBufferBase.1389" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1392" = type { %"class.WTF::VectorBuffer.1393" }
%"class.WTF::VectorBuffer.1393" = type { %"class.WTF::VectorBufferBase.1394" }
%"class.WTF::VectorBufferBase.1394" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1397" = type { %"class.WTF::HashTable.1398" }
%"class.WTF::HashTable.1398" = type <{ %"struct.WTF::KeyValuePair.1401"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1401" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr.218 }
%class.scoped_refptr.218 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.219" }
%"struct.std::__1::atomic.219" = type { %"struct.std::__1::__atomic_base.220" }
%"struct.std::__1::__atomic_base.220" = type { %"struct.std::__1::__atomic_base.221" }
%"struct.std::__1::__atomic_base.221" = type { %"struct.std::__1::__cxx_atomic_impl.222" }
%"struct.std::__1::__cxx_atomic_impl.222" = type { %"struct.std::__1::__cxx_atomic_base_impl.223" }
%"struct.std::__1::__cxx_atomic_base_impl.223" = type { i32 }
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1402", %"class.WTF::Vector.1407" }
%"class.WTF::HashMap.1402" = type { %"class.WTF::HashTable.1403" }
%"class.WTF::HashTable.1403" = type <{ %"struct.WTF::KeyValuePair.1406"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1406" = type opaque
%"class.WTF::Vector.1407" = type { %"class.WTF::VectorBuffer.1408" }
%"class.WTF::VectorBuffer.1408" = type { %"class.WTF::VectorBufferBase.1409" }
%"class.WTF::VectorBufferBase.1409" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1337, %class.scoped_refptr.1337, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1392", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1397", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1345"*, %"class.absl::optional.1377", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1377" = type { %"class.absl::optional_internal::optional_data.1378" }
%"class.absl::optional_internal::optional_data.1378" = type { %"class.absl::optional_internal::optional_data_base.1379" }
%"class.absl::optional_internal::optional_data_base.1379" = type { %"class.absl::optional_internal::optional_data_dtor_base.1380" }
%"class.absl::optional_internal::optional_data_dtor_base.1380" = type { i8, %union.anon.1381 }
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.WTF::Vector.1412" = type { %"class.WTF::VectorBuffer.1413" }
%"class.WTF::VectorBuffer.1413" = type { %"class.WTF::VectorBufferBase.1414" }
%"class.WTF::VectorBufferBase.1414" = type { %"class.std::__1::unique_ptr.1415"*, i32, i32 }
%"class.std::__1::unique_ptr.1415" = type { %"class.std::__1::__compressed_pair.1416" }
%"class.std::__1::__compressed_pair.1416" = type { %"struct.std::__1::__compressed_pair_elem.1417" }
%"struct.std::__1::__compressed_pair_elem.1417" = type { %"class.blink::GraphicsContextState"* }
%"class.blink::GraphicsContextState" = type <{ %"class.cc::PaintFlags", %"class.cc::PaintFlags", %"class.blink::StrokeData", i32, i32, i16, i8, [5 x i8] }>
%"class.cc::PaintFlags" = type <{ %class.sk_sp.1418, %class.sk_sp.1419, %class.sk_sp.1457, %class.sk_sp.1458, %class.sk_sp.1459, %class.sk_sp, i32, float, float, i32, %union.anon.1460, [4 x i8] }>
%class.sk_sp.1418 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.1419 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.1420", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.1428, i32, %"class.absl::optional.1444", %"class.std::__1::vector.1227", %"class.std::__1::vector.1449", %class.sk_sp.1456, %class.sk_sp.1425, i32, [4 x i8] }>
%"class.absl::optional.1420" = type { %"class.absl::optional_internal::optional_data.1421" }
%"class.absl::optional_internal::optional_data.1421" = type { %"class.absl::optional_internal::optional_data_base.1422" }
%"class.absl::optional_internal::optional_data_base.1422" = type { %"class.absl::optional_internal::optional_data_dtor_base.1423" }
%"class.absl::optional_internal::optional_data_dtor_base.1423" = type { i8, %union.anon.1424 }
%union.anon.1424 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.cc::PaintImage" = type { %class.sk_sp.1425, %class.sk_sp.1428, %"class.gfx::Rect", i32, %class.sk_sp.1433, %class.sk_sp.1441, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.1425, %class.scoped_refptr.1442 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.1433 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.1434" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.1426, i32, i32 }
%class.sk_sp.1426 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.1427, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.1427 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.371" }
%"struct.std::__1::atomic.371" = type { %"struct.std::__1::__atomic_base.372" }
%"struct.std::__1::__atomic_base.372" = type { %"struct.std::__1::__atomic_base.373" }
%"struct.std::__1::__atomic_base.373" = type { %"struct.std::__1::__cxx_atomic_impl.374" }
%"struct.std::__1::__cxx_atomic_impl.374" = type { %"struct.std::__1::__cxx_atomic_base_impl.375" }
%"struct.std::__1::__cxx_atomic_base_impl.375" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.1434" = type { %"class.std::__1::__vector_base.1435" }
%"class.std::__1::__vector_base.1435" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.1436" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.1436" = type { %"struct.std::__1::__compressed_pair_elem.1437" }
%"struct.std::__1::__compressed_pair_elem.1437" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.1441 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.scoped_refptr.1442 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1443", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1443" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%class.sk_sp.1428 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.1429", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1429" = type { %"class.std::__1::__compressed_pair.1430" }
%"class.std::__1::__compressed_pair.1430" = type { %"struct.std::__1::__compressed_pair_elem.1431" }
%"struct.std::__1::__compressed_pair_elem.1431" = type { i8* }
%"class.absl::optional.1444" = type { %"class.absl::optional_internal::optional_data.1445" }
%"class.absl::optional_internal::optional_data.1445" = type { %"class.absl::optional_internal::optional_data_base.1446" }
%"class.absl::optional_internal::optional_data_base.1446" = type { %"class.absl::optional_internal::optional_data_dtor_base.1447" }
%"class.absl::optional_internal::optional_data_dtor_base.1447" = type { i8, %union.anon.1448 }
%union.anon.1448 = type { %"class.gfx::SizeF" }
%"class.std::__1::vector.1227" = type { %"class.std::__1::__vector_base.1228" }
%"class.std::__1::__vector_base.1228" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1229" }
%"class.std::__1::__compressed_pair.1229" = type { %"struct.std::__1::__compressed_pair_elem.1230" }
%"struct.std::__1::__compressed_pair_elem.1230" = type { i32* }
%"class.std::__1::vector.1449" = type { %"class.std::__1::__vector_base.1450" }
%"class.std::__1::__vector_base.1450" = type { float*, float*, %"class.std::__1::__compressed_pair.1451" }
%"class.std::__1::__compressed_pair.1451" = type { %"struct.std::__1::__compressed_pair_elem.1452" }
%"struct.std::__1::__compressed_pair_elem.1452" = type { float* }
%class.sk_sp.1456 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.193", [7 x i8] }>
%"struct.std::__1::atomic.193" = type { %"struct.std::__1::__atomic_base.194" }
%"struct.std::__1::__atomic_base.194" = type { %"struct.std::__1::__cxx_atomic_impl.195" }
%"struct.std::__1::__cxx_atomic_impl.195" = type { %"struct.std::__1::__cxx_atomic_base_impl.196" }
%"struct.std::__1::__cxx_atomic_base_impl.196" = type { i8 }
%class.sk_sp.1425 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.sk_sp.1457 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.1458 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.1459 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.9, i32, %"class.absl::optional", i8, i32 }
%class.sk_sp.9 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %struct.SkRect }
%union.anon.1460 = type { i32 }
%"class.blink::StrokeData" = type { i32, float, i32, i32, float, %class.sk_sp.1418 }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.1302, %"class.std::__1::unique_ptr.1303" }
%class.scoped_refptr.1302 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.1303" = type { %"class.std::__1::__compressed_pair.1304" }
%"class.std::__1::__compressed_pair.1304" = type { %"struct.std::__1::__compressed_pair_elem.1305" }
%"struct.std::__1::__compressed_pair_elem.1305" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.1306", %struct.SkRect }
%"class.absl::optional.1306" = type { %"class.absl::optional_internal::optional_data.1307" }
%"class.absl::optional_internal::optional_data.1307" = type { %"class.absl::optional_internal::optional_data_base.1308" }
%"class.absl::optional_internal::optional_data_base.1308" = type { %"class.absl::optional_internal::optional_data_dtor_base.1309" }
%"class.absl::optional_internal::optional_data_dtor_base.1309" = type { i8, %union.anon.1310 }
%union.anon.1310 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.1311, [384 x i64], %class.sk_sp.1312, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.1313", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.1319" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.1311 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.1312 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.1313" = type { %"class.std::__1::__compressed_pair.1314" }
%"class.std::__1::__compressed_pair.1314" = type { %"struct.std::__1::__compressed_pair_elem.1315" }
%"struct.std::__1::__compressed_pair_elem.1315" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.1319" = type { %"class.std::__1::__compressed_pair.1320" }
%"class.std::__1::__compressed_pair.1320" = type { %"struct.std::__1::__compressed_pair_elem.1321" }
%"struct.std::__1::__compressed_pair_elem.1321" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%"class.std::__1::unique_ptr.1466" = type { %"class.std::__1::__compressed_pair.1467" }
%"class.std::__1::__compressed_pair.1467" = type { %"struct.std::__1::__compressed_pair_elem.1468" }
%"struct.std::__1::__compressed_pair_elem.1468" = type { %"class.blink::DarkModeFilter"* }
%"class.blink::DarkModeFilter" = type { %"struct.blink::DarkModeFilter::ImmutableData", %"class.absl::optional.1487", %"class.std::__1::unique_ptr.1492" }
%"struct.blink::DarkModeFilter::ImmutableData" = type { %"struct.blink::DarkModeSettings", %"class.std::__1::unique_ptr.1469", %"class.std::__1::unique_ptr.1469", %"class.std::__1::unique_ptr.1475", %"class.std::__1::unique_ptr.1481", %class.sk_sp.1458 }
%"struct.blink::DarkModeSettings" = type <{ i32, i8, [3 x i8], float, float, i32, i32, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DarkModeColorClassifier"* }
%"class.blink::DarkModeColorClassifier" = type opaque
%"class.std::__1::unique_ptr.1475" = type { %"class.std::__1::__compressed_pair.1476" }
%"class.std::__1::__compressed_pair.1476" = type { %"struct.std::__1::__compressed_pair_elem.1477" }
%"struct.std::__1::__compressed_pair_elem.1477" = type { %"class.blink::DarkModeImageClassifier"* }
%"class.blink::DarkModeImageClassifier" = type opaque
%"class.std::__1::unique_ptr.1481" = type { %"class.std::__1::__compressed_pair.1482" }
%"class.std::__1::__compressed_pair.1482" = type { %"struct.std::__1::__compressed_pair_elem.1483" }
%"struct.std::__1::__compressed_pair_elem.1483" = type { %"class.blink::DarkModeColorFilter"* }
%"class.blink::DarkModeColorFilter" = type opaque
%"class.absl::optional.1487" = type { %"class.absl::optional_internal::optional_data.1488" }
%"class.absl::optional_internal::optional_data.1488" = type { %"class.absl::optional_internal::optional_data_base.1489" }
%"class.absl::optional_internal::optional_data_base.1489" = type { %"class.absl::optional_internal::optional_data_dtor_base.1490" }
%"class.absl::optional_internal::optional_data_dtor_base.1490" = type { i8, %union.anon.1491 }
%union.anon.1491 = type { i32 }
%"class.std::__1::unique_ptr.1492" = type { %"class.std::__1::__compressed_pair.1493" }
%"class.std::__1::__compressed_pair.1493" = type { %"struct.std::__1::__compressed_pair_elem.1494" }
%"struct.std::__1::__compressed_pair_elem.1494" = type { %"class.blink::DarkModeInvertedColorCache"* }
%"class.blink::DarkModeInvertedColorCache" = type opaque
%"class.blink::FEImage" = type { %"class.blink::FilterEffect", %class.scoped_refptr, %"class.blink::Member.203", %"class.blink::Member.251" }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector", %"class.blink::Member.2", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp] }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::FilterEffect"* }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::Filter"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%class.scoped_refptr = type { %"class.blink::Image"* }
%"class.blink::Member.203" = type { %"class.blink::MemberBase.204" }
%"class.blink::MemberBase.204" = type { %"class.blink::SVGElement"* }
%"class.blink::SVGElement" = type { %"class.blink::Element", %"class.blink::HeapHashSet", %"class.blink::HeapHashMap", %"class.blink::Member.247", %"class.blink::Member.249" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.224" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.207", %"class.blink::Member.207" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.207", %"class.blink::Member.209", %"class.blink::Member.207", %"class.blink::Member.207", %"class.blink::Member.211" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.209" = type { %"class.blink::MemberBase.210" }
%"class.blink::MemberBase.210" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.255", %"class.blink::Member.257", %"class.blink::Member.209", %"class.blink::Member.259", %"class.blink::Member.259", %"class.blink::Member.283", %"class.blink::Member.285", %"class.blink::Member.287", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.292", %"class.blink::HeapVector.294" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.255" = type { %"class.blink::MemberBase.256" }
%"class.blink::MemberBase.256" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.257" = type { %"class.blink::MemberBase.258" }
%"class.blink::MemberBase.258" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.310", %"class.WTF::Vector.310", i8, i32, %"class.blink::Member.317", %"class.blink::Member.319", %"class.blink::Member.321", %"class.blink::Member.323", %"class.blink::Member.325", %"class.blink::Member.327", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.335", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.341", %"class.blink::Member.343", %"class.blink::Member.300", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.346", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.276", %"class.blink::Member.274", %"class.blink::Member.377", %"class.blink::Member.274", %"class.blink::Member.274", %"class.blink::Member.274", %"class.blink::UserActionElementSet", %"class.blink::Member.386", double, double, i64, i64, %"class.blink::HeapHashSet.388", %"class.blink::HeapHashSet.395", i16, i8, %"class.blink::Member.402", %"class.blink::Member.404", %"class.blink::Member.406", %"class.blink::Member.408", %"class.blink::TextLinkColors", %"class.blink::Member.410", i8, [7 x i8], %"class.blink::HeapHashMap.412", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.274", %"class.WTF::Vector.419", %"class.blink::Member.424", %"class.blink::Member.426", i8, %"class.blink::Member.274", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.428", %"class.blink::HeapVector.430", %"class.std::__1::unique_ptr.438", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.444", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.457", %"class.WTF::Vector.459", i8, i8, %"class.std::__1::unique_ptr.464", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.276", %"class.blink::HeapVector.470", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.478", i8, i32, %"class.blink::Member.480", %"class.blink::Member.482", %"class.blink::Member.484", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.486", %"class.WTF::HashMap.488", %"class.blink::Member.493", %"class.blink::Member.495", %"class.blink::Member.497", %"class.blink::Member.499", %"class.blink::Member.257", %"class.blink::Member.257", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.501", i8, i32, %"class.blink::Member.508", %"class.blink::Member.510", i32, %"class.blink::Member.512", %"class.blink::Member.514", %"class.blink::Member.516", %"class.std::__1::unique_ptr.518", i64, %"class.std::__1::unique_ptr.524", i32, i32, %"class.blink::Member.539", %"class.blink::Member.541", %"class.blink::Member.543", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.545", %"class.WTF::Vector.547", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.552", %"class.blink::Member.559", %"class.std::__1::unique_ptr.561", %"class.blink::Member.567", i8, i8, %"class.WTF::String", %"class.blink::Member.569", i8, [7 x i8], %"class.blink::HeapHashMap.571", %"class.blink::HeapObserverSet", %"class.blink::Member.585", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.587", i32, i8, i8, %"class.blink::WeakMember.589", %"class.blink::Member.590" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.303" }
%"class.blink::HeapHashMap.303" = type { %"class.WTF::HashMap.306" }
%"class.WTF::HashMap.306" = type { %"class.WTF::HashTable.307" }
%"class.WTF::HashTable.307" = type <{ %"struct.WTF::KeyValuePair.309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.309" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.310" = type { %"class.WTF::VectorBuffer.311" }
%"class.WTF::VectorBuffer.311" = type { %"class.WTF::VectorBufferBase.312" }
%"class.WTF::VectorBufferBase.312" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.313 }
%class.scoped_refptr.313 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.314", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.314" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.317" = type { %"class.blink::MemberBase.318" }
%"class.blink::MemberBase.318" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.319" = type { %"class.blink::MemberBase.320" }
%"class.blink::MemberBase.320" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.603", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.644", i32, i8, [3 x i8], %"class.blink::HeapVector.646", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.654", %"class.blink::Member.656", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.665", %"class.blink::Member.671", %"class.blink::Member.673", i8, [7 x i8] }>
%"class.blink::Supplementable.603" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.604" }
%"class.blink::HeapHashMap.604" = type { %"class.WTF::HashMap.607" }
%"class.WTF::HashMap.607" = type { %"class.WTF::HashTable.608" }
%"class.WTF::HashTable.608" = type <{ %"struct.WTF::KeyValuePair.610"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.610" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.619" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.611" }
%"class.blink::HeapObserverSet.611" = type { i32, [4 x i8], %"class.blink::HeapHashSet.612" }
%"class.blink::HeapHashSet.612" = type { %"class.WTF::HashSet.615" }
%"class.WTF::HashSet.615" = type { %"class.WTF::HashTable.616" }
%"class.WTF::HashTable.616" = type <{ %"class.blink::WeakMember.618"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.618" = type opaque
%"class.blink::Supplementable.619" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.620" }
%"class.blink::HeapHashMap.620" = type { %"class.WTF::HashMap.623" }
%"class.WTF::HashMap.623" = type { %"class.WTF::HashTable.624" }
%"class.WTF::HashTable.624" = type <{ %"struct.WTF::KeyValuePair.626"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.626" = type { i8*, %"class.blink::Member.1503" }
%"class.blink::Member.1503" = type { %"class.blink::MemberBase.1504" }
%"class.blink::MemberBase.1504" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1505" }
%"class.blink::Member.1505" = type { %"class.blink::MemberBase.1506" }
%"class.blink::MemberBase.1506" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.627, %"class.std::__1::unique_ptr.628", %"class.std::__1::unique_ptr.628", %"class.std::__1::unique_ptr.634", %"class.std::__1::unique_ptr.634", %"class.blink::Member.319", i32, [4 x i8], %"class.WTF::HashSet.640", i32, i32 }
%class.scoped_refptr.627 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.628" = type { %"class.std::__1::__compressed_pair.629" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"struct.std::__1::__compressed_pair_elem.630" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.634" = type { %"class.std::__1::__compressed_pair.635" }
%"class.std::__1::__compressed_pair.635" = type { %"struct.std::__1::__compressed_pair_elem.636" }
%"struct.std::__1::__compressed_pair_elem.636" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.640" = type { %"class.WTF::HashTable.641" }
%"class.WTF::HashTable.641" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.644" = type { %"class.blink::MemberBase.645" }
%"class.blink::MemberBase.645" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.646" = type { %"class.WTF::Vector.649" }
%"class.WTF::Vector.649" = type { %"class.WTF::VectorBuffer.650" }
%"class.WTF::VectorBuffer.650" = type { %"class.WTF::VectorBufferBase.651" }
%"class.WTF::VectorBufferBase.651" = type { %"class.blink::Member.652"*, i32, i32 }
%"class.blink::Member.652" = type opaque
%"class.blink::Member.654" = type { %"class.blink::MemberBase.655" }
%"class.blink::MemberBase.655" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.656" = type { %"class.blink::MemberBase.657" }
%"class.blink::MemberBase.657" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.658", i32, i32 }
%"class.blink::HeapHashMap.658" = type { %"class.WTF::HashMap.661" }
%"class.WTF::HashMap.661" = type { %"class.WTF::HashTable.662" }
%"class.WTF::HashTable.662" = type <{ %"struct.WTF::KeyValuePair.664"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.664" = type opaque
%"class.std::__1::unique_ptr.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.667" }
%"struct.std::__1::__compressed_pair_elem.667" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.671" = type { %"class.blink::MemberBase.672" }
%"class.blink::MemberBase.672" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.673" = type { %"class.blink::MemberBase.674" }
%"class.blink::MemberBase.674" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.321" = type { %"class.blink::MemberBase.322" }
%"class.blink::MemberBase.322" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.323" = type { %"class.blink::MemberBase.324" }
%"class.blink::MemberBase.324" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.325" = type { %"class.blink::MemberBase.326" }
%"class.blink::MemberBase.326" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.327" = type { %"class.blink::MemberBase.328" }
%"class.blink::MemberBase.328" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.329" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.blink::KURL"* }
%"class.blink::Member.341" = type { %"class.blink::MemberBase.342" }
%"class.blink::MemberBase.342" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.300" = type { %"class.blink::MemberBase.301" }
%"class.blink::MemberBase.301" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.346" = type { %"class.WTF::VectorBuffer.347" }
%"class.WTF::VectorBuffer.347" = type { %"class.WTF::VectorBufferBase.348" }
%"class.WTF::VectorBufferBase.348" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.349 }
%class.scoped_refptr.349 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.350", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.350" = type { %"class.base::RefCounted.351" }
%"class.base::RefCounted.351" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.352" }
%"class.blink::PersistentBase.352" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.364" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.355" }
%"class.blink::HeapHashMap.355" = type { %"class.WTF::HashMap.358" }
%"class.WTF::HashMap.358" = type { %"class.WTF::HashTable.359" }
%"class.WTF::HashTable.359" = type <{ %"struct.WTF::KeyValuePair.361"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.361" = type { %"class.blink::WeakMember.362", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.362" = type { %"class.blink::MemberBase.363" }
%"class.blink::MemberBase.363" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr.364" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.20", i32, [4 x i8], %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.152", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.168", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.186", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.193", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.102", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.132", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.52" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.52" = type { %"struct.std::__1::__atomic_base.53" }
%"struct.std::__1::__atomic_base.53" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__cxx_atomic_impl.55" }
%"struct.std::__1::__cxx_atomic_impl.55" = type { %"struct.std::__1::__cxx_atomic_base_impl.56" }
%"struct.std::__1::__cxx_atomic_base_impl.56" = type { i64 }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.52" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.52" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.52" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.52" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::Worklist.91"* }
%"class.blink::Worklist.91" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.52" }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.blink::Worklist.98"* }
%"class.blink::Worklist.98" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.52" }
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.blink::Worklist.105"* }
%"class.blink::Worklist.105" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.52" }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.112", %"class.std::__1::__compressed_pair.119", %"class.std::__1::__compressed_pair.124", %"class.std::__1::__compressed_pair.126", [4 x i8] }>
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114", %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { i64 }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { float }
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.135", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.144" }
%"class.WTF::Vector.144" = type { %"class.WTF::VectorBuffer.145" }
%"class.WTF::VectorBuffer.145" = type { %"class.WTF::VectorBufferBase.146" }
%"class.WTF::VectorBufferBase.146" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.160" }
%"class.WTF::VectorBuffer.160" = type { %"class.WTF::VectorBufferBase.161" }
%"class.WTF::VectorBufferBase.161" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.174" }
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.77"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.84"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.91"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.675" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.676" }
%"struct.std::__1::__compressed_pair_elem.676" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.192 }
%class.scoped_refptr.192 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.377" = type { %"class.blink::MemberBase.378" }
%"class.blink::MemberBase.378" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.379" }
%"class.blink::HeapHashMap.379" = type { %"class.WTF::HashMap.382" }
%"class.WTF::HashMap.382" = type { %"class.WTF::HashTable.383" }
%"class.WTF::HashTable.383" = type <{ %"struct.WTF::KeyValuePair.385"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.385" = type opaque
%"class.blink::Member.386" = type { %"class.blink::MemberBase.387" }
%"class.blink::MemberBase.387" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.388" = type { %"class.WTF::HashSet.391" }
%"class.WTF::HashSet.391" = type { %"class.WTF::HashTable.392" }
%"class.WTF::HashTable.392" = type <{ %"class.blink::WeakMember.394"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.394" = type opaque
%"class.blink::HeapHashSet.395" = type { %"class.WTF::HashSet.398" }
%"class.WTF::HashSet.398" = type { %"class.WTF::HashTable.399" }
%"class.WTF::HashTable.399" = type <{ %"class.blink::WeakMember.401"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.401" = type opaque
%"class.blink::Member.402" = type { %"class.blink::MemberBase.403" }
%"class.blink::MemberBase.403" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.404" = type { %"class.blink::MemberBase.405" }
%"class.blink::MemberBase.405" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.406" = type { %"class.blink::MemberBase.407" }
%"class.blink::MemberBase.407" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.408" = type { %"class.blink::MemberBase.409" }
%"class.blink::MemberBase.409" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.410" = type { %"class.blink::MemberBase.411" }
%"class.blink::MemberBase.411" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.412" = type { %"class.WTF::HashMap.415" }
%"class.WTF::HashMap.415" = type { %"class.WTF::HashTable.416" }
%"class.WTF::HashTable.416" = type <{ %"struct.WTF::KeyValuePair.418"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.418" = type opaque
%"class.WTF::Vector.419" = type { %"class.WTF::VectorBuffer.420" }
%"class.WTF::VectorBuffer.420" = type { %"class.WTF::VectorBufferBase.421" }
%"class.WTF::VectorBufferBase.421" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.424" = type { %"class.blink::MemberBase.425" }
%"class.blink::MemberBase.425" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.426" = type { %"class.blink::MemberBase.427" }
%"class.blink::MemberBase.427" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.274" = type { %"class.blink::MemberBase.275" }
%"class.blink::MemberBase.275" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.428" = type { %"class.blink::MemberBase.429" }
%"class.blink::MemberBase.429" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.430" = type { %"class.WTF::Vector.433" }
%"class.WTF::Vector.433" = type { %"class.WTF::VectorBuffer.434" }
%"class.WTF::VectorBuffer.434" = type { %"class.WTF::VectorBufferBase.435" }
%"class.WTF::VectorBufferBase.435" = type { %"class.blink::Member.436"*, i32, i32 }
%"class.blink::Member.436" = type opaque
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.444" = type { %"class.WTF::HashSet.447" }
%"class.WTF::HashSet.447" = type { %"class.WTF::HashTable.448" }
%"class.WTF::HashTable.448" = type <{ %"class.blink::WeakMember.450"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.450" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.451", i32, [4 x i8] }>
%"class.WTF::Vector.451" = type { %"class.WTF::VectorBuffer.452" }
%"class.WTF::VectorBuffer.452" = type { %"class.WTF::VectorBufferBase.453" }
%"class.WTF::VectorBufferBase.453" = type { %"struct.std::__1::pair.454"*, i32, i32 }
%"struct.std::__1::pair.454" = type opaque
%"class.blink::Member.457" = type { %"class.blink::MemberBase.458" }
%"class.blink::MemberBase.458" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.276" = type { %"class.WTF::Vector.279" }
%"class.WTF::Vector.279" = type { %"class.WTF::VectorBuffer.280" }
%"class.WTF::VectorBuffer.280" = type { %"class.WTF::VectorBufferBase.281" }
%"class.WTF::VectorBufferBase.281" = type { %"class.blink::Member.274"*, i32, i32 }
%"class.blink::HeapVector.470" = type { %"class.WTF::Vector.473" }
%"class.WTF::Vector.473" = type { %"class.WTF::VectorBuffer.474" }
%"class.WTF::VectorBuffer.474" = type { %"class.WTF::VectorBufferBase.475" }
%"class.WTF::VectorBufferBase.475" = type { %"class.blink::Member.476"*, i32, i32 }
%"class.blink::Member.476" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.257" }
%"class.blink::Member.478" = type { %"class.blink::MemberBase.479" }
%"class.blink::MemberBase.479" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.480" = type { %"class.blink::MemberBase.481" }
%"class.blink::MemberBase.481" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.482" = type { %"class.blink::MemberBase.483" }
%"class.blink::MemberBase.483" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.484" = type { %"class.blink::MemberBase.485" }
%"class.blink::MemberBase.485" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.486" = type { %"class.blink::MemberBase.487" }
%"class.blink::MemberBase.487" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.488" = type { %"class.WTF::HashTable.489" }
%"class.WTF::HashTable.489" = type <{ %"struct.WTF::KeyValuePair.492"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.492" = type opaque
%"class.blink::Member.493" = type { %"class.blink::MemberBase.494" }
%"class.blink::MemberBase.494" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.495" = type { %"class.blink::MemberBase.496" }
%"class.blink::MemberBase.496" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.497" = type { %"class.blink::MemberBase.498" }
%"class.blink::MemberBase.498" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.499" = type { %"class.blink::MemberBase.500" }
%"class.blink::MemberBase.500" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.376", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.367, %"class.base::WeakPtrFactory" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.367 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.368" }>
%"class.base::RefCountedThreadSafe.368" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.369 }
%class.scoped_refptr.369 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.370", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.370" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.371" }
%"class.blink::WeakMember.376" = type { %"class.blink::MemberBase.258" }
%"class.blink::HeapHashSet.501" = type { %"class.WTF::HashSet.504" }
%"class.WTF::HashSet.504" = type { %"class.WTF::HashTable.505" }
%"class.WTF::HashTable.505" = type <{ %"class.blink::Member.507"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.507" = type opaque
%"class.blink::Member.508" = type { %"class.blink::MemberBase.509" }
%"class.blink::MemberBase.509" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.510" = type { %"class.blink::MemberBase.511" }
%"class.blink::MemberBase.511" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.516" = type { %"class.blink::MemberBase.517" }
%"class.blink::MemberBase.517" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.518" = type { %"class.std::__1::__compressed_pair.519" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.524" = type { %"class.std::__1::__compressed_pair.525" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.527", %"class.WTF::HashSet.527", %"class.WTF::HashSet.527", %"class.WTF::HashSet.527", %"class.WTF::HashSet.527", %"class.WTF::HashSet.527", i32, [4 x i8], %"class.WTF::HashMap.531", %"class.WTF::HashMap.531", %"class.WTF::HashMap.531", %"class.WTF::HashMap.531", %"class.WTF::HashMap.531", %"class.WTF::HashMap.531", %"class.WTF::HashMap.531", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashSet.527" = type { %"class.WTF::HashTable.528" }
%"class.WTF::HashTable.528" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.531" = type { %"class.WTF::HashTable.532" }
%"class.WTF::HashTable.532" = type <{ %"struct.WTF::KeyValuePair.535"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.535" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.539" = type { %"class.blink::MemberBase.540" }
%"class.blink::MemberBase.540" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.541" = type { %"class.blink::MemberBase.542" }
%"class.blink::MemberBase.542" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.543" = type { %"class.blink::MemberBase.544" }
%"class.blink::MemberBase.544" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.545" = type { %"class.blink::MemberBase.546" }
%"class.blink::MemberBase.546" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.547" = type { %"class.WTF::VectorBuffer.548" }
%"class.WTF::VectorBuffer.548" = type { %"class.WTF::VectorBufferBase.549" }
%"class.WTF::VectorBufferBase.549" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.552" = type { %"class.WTF::HashMap.555" }
%"class.WTF::HashMap.555" = type { %"class.WTF::HashTable.556" }
%"class.WTF::HashTable.556" = type <{ %"struct.WTF::KeyValuePair.558"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.558" = type opaque
%"class.blink::Member.559" = type { %"class.blink::MemberBase.560" }
%"class.blink::MemberBase.560" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.563" }
%"struct.std::__1::__compressed_pair_elem.563" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.567" = type { %"class.blink::MemberBase.568" }
%"class.blink::MemberBase.568" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.569" = type { %"class.blink::MemberBase.570" }
%"class.blink::MemberBase.570" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.571" = type { %"class.WTF::HashMap.574" }
%"class.WTF::HashMap.574" = type { %"class.WTF::HashTable.575" }
%"class.WTF::HashTable.575" = type <{ %"struct.WTF::KeyValuePair.577"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.577" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.578" }
%"class.blink::HeapHashSet.578" = type { %"class.WTF::HashSet.581" }
%"class.WTF::HashSet.581" = type { %"class.WTF::HashTable.582" }
%"class.WTF::HashTable.582" = type <{ %"class.blink::WeakMember.584"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.584" = type opaque
%"class.blink::Member.585" = type { %"class.blink::MemberBase.586" }
%"class.blink::MemberBase.586" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.587" = type { %"class.blink::MemberBase.588" }
%"class.blink::MemberBase.588" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.257", %"class.blink::HeapHashSet.594", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.601", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.594" = type { %"class.WTF::HashSet.597" }
%"class.WTF::HashSet.597" = type { %"class.WTF::HashTable.598" }
%"class.WTF::HashTable.598" = type <{ %"class.blink::Member.600"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.600" = type opaque
%"class.blink::HeapTaskRunnerTimer.601" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.602", { i64, i64 } }
%"class.blink::WeakMember.602" = type { %"class.blink::MemberBase.588" }
%"class.blink::WeakMember.589" = type { %"class.blink::MemberBase.208" }
%"class.blink::MemberBase.208" = type { %"class.blink::Node"* }
%"class.blink::Member.590" = type { %"class.blink::MemberBase.591" }
%"class.blink::MemberBase.591" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.259" = type { %"class.blink::MemberBase.260" }
%"class.blink::MemberBase.260" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.263" }
%"class.blink::HeapHashMap.263" = type { %"class.WTF::HashMap.266" }
%"class.WTF::HashMap.266" = type { %"class.WTF::HashTable.267" }
%"class.WTF::HashTable.267" = type <{ %"struct.WTF::KeyValuePair.269"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.269" = type { %"class.WTF::AtomicString", %"class.blink::Member.270" }
%"class.blink::Member.270" = type { %"class.blink::MemberBase.271" }
%"class.blink::MemberBase.271" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.274", i32, %"class.blink::HeapVector.276" }
%"class.blink::Member.283" = type { %"class.blink::MemberBase.284" }
%"class.blink::MemberBase.284" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.285" = type { %"class.blink::MemberBase.286" }
%"class.blink::MemberBase.286" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.287" = type { %"class.blink::MemberBase.288" }
%"class.blink::MemberBase.288" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.289" }
%"class.blink::Member.289" = type { %"class.blink::MemberBase.290" }
%"class.blink::MemberBase.290" = type { %"class.blink::HeapHashMap.291"* }
%"class.blink::HeapHashMap.291" = type opaque
%"class.blink::Member.292" = type { %"class.blink::MemberBase.293" }
%"class.blink::MemberBase.293" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.294" = type { %"class.WTF::Vector.297" }
%"class.WTF::Vector.297" = type { %"class.WTF::VectorBuffer.298" }
%"class.WTF::VectorBuffer.298" = type { %"class.WTF::VectorBufferBase.299" }
%"class.WTF::VectorBufferBase.299" = type { %"class.blink::Member.300"*, i32, i32 }
%"class.blink::Member.211" = type { %"class.blink::MemberBase.212" }
%"class.blink::MemberBase.212" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.207" = type { %"class.blink::MemberBase.208" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.215 }
%class.scoped_refptr.215 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.216", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.216" = type { %"class.base::RefCounted.217" }
%"class.base::RefCounted.217" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.224" = type { %"class.blink::MemberBase.225" }
%"class.blink::MemberBase.225" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.228", %"class.blink::Member.230", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.228" = type { %"class.WTF::SingleThreadedBitField.229" }
%"class.WTF::SingleThreadedBitField.229" = type { i32 }
%"class.blink::Member.230" = type { %"class.blink::MemberBase.231" }
%"class.blink::MemberBase.231" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.232 }
%class.scoped_refptr.232 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.233", %"class.WTF::AtomicString", %"class.WTF::Vector.235" }
%"class.WTF::RefCounted.233" = type { %"class.base::RefCounted.234" }
%"class.base::RefCounted.234" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.235" = type { %"class.WTF::VectorBuffer.236" }
%"class.WTF::VectorBuffer.236" = type { %"class.WTF::VectorBufferBase.237", [32 x i8] }
%"class.WTF::VectorBufferBase.237" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.245" }
%"class.WTF::HashTable.245" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::Member.247" = type { %"class.blink::MemberBase.248" }
%"class.blink::MemberBase.248" = type { %"class.blink::SVGElementRareData"* }
%"class.blink::SVGElementRareData" = type opaque
%"class.blink::Member.249" = type { %"class.blink::MemberBase.250" }
%"class.blink::MemberBase.250" = type { %"class.blink::SVGAnimatedString"* }
%"class.blink::SVGAnimatedString" = type opaque
%"class.blink::Member.251" = type { %"class.blink::MemberBase.252" }
%"class.blink::MemberBase.252" = type { %"class.blink::SVGPreserveAspectRatio"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.6", %"class.blink::Member" }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i8, %class.scoped_refptr.10, %"class.blink::WeakPersistent", i32, i8, %"class.std::__1::unique_ptr.197" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.10 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted", i64, %"class.WTF::Vector.11", %"class.WTF::Vector.15" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.11" = type { %"class.WTF::VectorBuffer.12" }
%"class.WTF::VectorBuffer.12" = type { %"class.WTF::VectorBufferBase.13" }
%"class.WTF::VectorBufferBase.13" = type { i8*, i32, i32 }
%"class.WTF::Vector.15" = type { %"class.WTF::VectorBuffer.16" }
%"class.WTF::VectorBuffer.16" = type { %"class.WTF::VectorBufferBase.17" }
%"class.WTF::VectorBufferBase.17" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type opaque
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.blink::SVGPreserveAspectRatio" = type { %"class.blink::SVGPropertyHelper", i32, i32 }
%"class.blink::SVGPropertyHelper" = type { %"class.blink::SVGPropertyBase" }
%"class.blink::SVGPropertyBase" = type { i32 (...)** }
%"class.absl::optional.1286" = type { %"class.absl::optional_internal::optional_data.1287" }
%"class.absl::optional_internal::optional_data.1287" = type { %"class.absl::optional_internal::optional_data_base.1288" }
%"class.absl::optional_internal::optional_data_base.1288" = type { %"class.absl::optional_internal::optional_data_dtor_base.1289" }
%"class.absl::optional_internal::optional_data_dtor_base.1289" = type { i8, %union.anon.1290 }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.1531", %"class.blink::Member.1533", %"class.blink::Member.1535", %"class.blink::Member.1554", %"class.blink::Member.1556" }
%"class.blink::Member.1531" = type { %"class.blink::MemberBase.1532" }
%"class.blink::MemberBase.1532" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr.680 }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.680, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1136" }
%"class.blink::MemberBase.1136" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1137" }
%"class.std::__1::unique_ptr.1137" = type { %"class.std::__1::__compressed_pair.1138" }
%"class.std::__1::__compressed_pair.1138" = type { %"struct.std::__1::__compressed_pair_elem.1139" }
%"struct.std::__1::__compressed_pair_elem.1139" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.1140", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1146", %"class.std::__1::unique_ptr.1262", i8, %"class.absl::optional.1268", %class.scoped_refptr.1244, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1273" }
%"class.std::__1::unique_ptr.1140" = type { %"class.std::__1::__compressed_pair.1141" }
%"class.std::__1::__compressed_pair.1141" = type { %"struct.std::__1::__compressed_pair_elem.1142" }
%"struct.std::__1::__compressed_pair_elem.1142" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.1146" = type { %"class.std::__1::__compressed_pair.1147" }
%"class.std::__1::__compressed_pair.1147" = type { %"struct.std::__1::__compressed_pair_elem.1148" }
%"struct.std::__1::__compressed_pair_elem.1148" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1149, %class.scoped_refptr.1149, %class.scoped_refptr.1149, %class.scoped_refptr.1149, %class.scoped_refptr.1149, %class.scoped_refptr.1149, %class.scoped_refptr.1184, %class.scoped_refptr.1200, %class.scoped_refptr.1201, %class.scoped_refptr.1201, %class.scoped_refptr.1201, %class.scoped_refptr.1201, %class.scoped_refptr.1201, %class.scoped_refptr.1201, %class.scoped_refptr.1234, %class.scoped_refptr.1235, %class.scoped_refptr.1235, %class.scoped_refptr.1235, %class.scoped_refptr.1235, %class.scoped_refptr.1235, %class.scoped_refptr.1235, %class.scoped_refptr.1235, %class.scoped_refptr.1235, %class.scoped_refptr.1258 }
%class.scoped_refptr.1149 = type { %"class.blink::TransformPaintPropertyNode"* }
%class.scoped_refptr.1184 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1200 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1201 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1152, %class.scoped_refptr.1206, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1221", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.1207" }
%"class.std::__1::vector.1207" = type { %"class.std::__1::__vector_base.1208" }
%"class.std::__1::__vector_base.1208" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.1216" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.1209", i32, [4 x i8] }>
%"class.std::__1::vector.1209" = type { %"class.std::__1::__vector_base.1210" }
%"class.std::__1::__vector_base.1210" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.1211" }
%"class.std::__1::__compressed_pair.1211" = type { %"struct.std::__1::__compressed_pair_elem.1212" }
%"struct.std::__1::__compressed_pair_elem.1212" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.1216" = type { %"struct.std::__1::__compressed_pair_elem.1217" }
%"struct.std::__1::__compressed_pair_elem.1217" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.1221" = type { %"class.std::__1::__compressed_pair.1222" }
%"class.std::__1::__compressed_pair.1222" = type { %"struct.std::__1::__compressed_pair_elem.1223" }
%"struct.std::__1::__compressed_pair_elem.1223" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1227" }
%class.scoped_refptr.1234 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1235 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.1247" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1152, %"class.absl::optional.1239", %class.scoped_refptr.1244, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.1239" = type { %"class.absl::optional_internal::optional_data.1240" }
%"class.absl::optional_internal::optional_data.1240" = type { %"class.absl::optional_internal::optional_data_base.1241" }
%"class.absl::optional_internal::optional_data_base.1241" = type { %"class.absl::optional_internal::optional_data_dtor_base.1242" }
%"class.absl::optional_internal::optional_data_dtor_base.1242" = type { i8, [3 x i8], %union.anon.1243 }
%union.anon.1243 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1247" = type { %"class.std::__1::__compressed_pair.1248" }
%"class.std::__1::__compressed_pair.1248" = type { %"struct.std::__1::__compressed_pair_elem.1249" }
%"struct.std::__1::__compressed_pair_elem.1249" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.1250", i32, [4 x i8] }>
%"class.WTF::Vector.1250" = type { %"class.WTF::VectorBuffer.1251" }
%"class.WTF::VectorBuffer.1251" = type { %"class.WTF::VectorBufferBase.1252" }
%"class.WTF::VectorBufferBase.1252" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.1258 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.1262" = type { %"class.std::__1::__compressed_pair.1263" }
%"class.std::__1::__compressed_pair.1263" = type { %"struct.std::__1::__compressed_pair_elem.1264" }
%"struct.std::__1::__compressed_pair_elem.1264" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.absl::optional.1268" = type { %"class.absl::optional_internal::optional_data.1269" }
%"class.absl::optional_internal::optional_data.1269" = type { %"class.absl::optional_internal::optional_data_base.1270" }
%"class.absl::optional_internal::optional_data_base.1270" = type { %"class.absl::optional_internal::optional_data_dtor_base.1271" }
%"class.absl::optional_internal::optional_data_dtor_base.1271" = type { i8, %union.anon.1272 }
%union.anon.1272 = type { %"class.blink::IntRect" }
%class.scoped_refptr.1244 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.1245", [4 x i8] }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.1059, i32, %"struct.std::__1::atomic.371", %"struct.std::__1::atomic.371", i8, i8 }>
%class.sk_sp.1059 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1060, %class.SkTDArray.1061, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.1060 = type { i8*, i32, i32 }
%class.SkTDArray.1061 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.1062 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.1062 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.193", [3 x i8] }
%"class.WTF::RefCounted.1245" = type { %"class.base::RefCounted.1246" }
%"class.base::RefCounted.1246" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::FragmentData"* }
%class.scoped_refptr.680 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1121", %"class.std::__1::unique_ptr.1123" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.752", %"class.blink::DataRef.832", %"class.blink::DataRef.836", %"class.blink::DataRef.1037", %"class.blink::DataRef.1104", %"class.blink::DataRef.1108", %"class.blink::DataRef.1112", %"class.blink::DataRef.1116", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.681 }
%class.scoped_refptr.681 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.682", %"class.blink::DataRef.684", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.682" = type { %"class.base::RefCounted.683" }
%"class.base::RefCounted.683" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.684" = type { %class.scoped_refptr.685 }
%class.scoped_refptr.685 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.686", %"class.blink::Font" }
%"class.WTF::RefCounted.686" = type { %"class.base::RefCounted.687" }
%"class.base::RefCounted.687" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.720 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.689, %class.scoped_refptr.697, %class.scoped_refptr.707, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.719 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.688 }
%class.scoped_refptr.688 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1284", [4 x i8] }>
%"class.WTF::RefCounted.1284" = type { %"class.base::RefCounted.1285" }
%"class.base::RefCounted.1285" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.689 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.695", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.690" }
%"class.WTF::Vector.690" = type { %"class.WTF::VectorBuffer.691" }
%"class.WTF::VectorBuffer.691" = type { %"class.WTF::VectorBufferBase.692" }
%"class.WTF::VectorBufferBase.692" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.695" = type { %"class.base::RefCounted.696" }
%"class.base::RefCounted.696" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.697 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.698", %"class.WTF::RefCounted.705", [4 x i8] }>
%"class.blink::FontSettings.698" = type { %"class.WTF::Vector.699" }
%"class.WTF::Vector.699" = type { %"class.WTF::VectorBuffer.700" }
%"class.WTF::VectorBuffer.700" = type { %"class.WTF::VectorBufferBase.701" }
%"class.WTF::VectorBufferBase.701" = type { %"class.blink::FontTagValuePair.702"*, i32, i32 }
%"class.blink::FontTagValuePair.702" = type { i32, float }
%"class.WTF::RefCounted.705" = type { %"class.base::RefCounted.706" }
%"class.base::RefCounted.706" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.707 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.708", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.716, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.710" }
%"class.std::__1::__compressed_pair.710" = type { %"struct.std::__1::__compressed_pair_elem.711" }
%"struct.std::__1::__compressed_pair_elem.711" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.712 }
%union.anon.712 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.716 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.717", [4 x i8] }>
%"class.WTF::RefCounted.717" = type { %"class.base::RefCounted.718" }
%"class.base::RefCounted.718" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.719 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.720 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.721", %"class.WTF::Vector.723", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent.748", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.721" = type { %"class.base::RefCounted.722" }
%"class.base::RefCounted.722" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.723" = type { %"class.WTF::VectorBuffer.724" }
%"class.WTF::VectorBuffer.724" = type { %"class.WTF::VectorBufferBase.725", [8 x i8] }
%"class.WTF::VectorBufferBase.725" = type { %class.scoped_refptr.726*, i32, i32 }
%class.scoped_refptr.726 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.727", [4 x i8] }>
%"class.WTF::RefCounted.727" = type { %"class.base::RefCounted.728" }
%"class.base::RefCounted.728" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.738", %class.scoped_refptr.745, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.727" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.731", %"class.absl::optional.731", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.731" = type { %"class.absl::optional_internal::optional_data.732" }
%"class.absl::optional_internal::optional_data.732" = type { %"class.absl::optional_internal::optional_data_base.733" }
%"class.absl::optional_internal::optional_data_base.733" = type { %"class.absl::optional_internal::optional_data_dtor_base.734" }
%"class.absl::optional_internal::optional_data_dtor_base.734" = type { i8, %union.anon.735 }
%union.anon.735 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp.736, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.737, i8, [7 x i8] }>
%class.sk_sp.736 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.737 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp.736, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.741, %class.scoped_refptr.741 }
%class.scoped_refptr.741 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.745 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.746", [4 x i8] }>
%"class.WTF::RefCounted.746" = type { %"class.base::RefCounted.747" }
%"class.base::RefCounted.747" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent.748" = type { %"class.blink::PersistentBase.749" }
%"class.blink::PersistentBase.749" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.750 }
%class.scoped_refptr.750 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.751, i8, i8, i8, i8 }>
%union.anon.751 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.752" = type { %class.scoped_refptr.753 }
%class.scoped_refptr.753 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.754", [4 x i8], %"class.blink::DataRef.756", %"class.blink::DataRef.797", %"class.WTF::Vector.801", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.805, %class.scoped_refptr.814, %"class.blink::Persistent.822", %"class.blink::Persistent.824", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.754" = type { %"class.base::RefCounted.755" }
%"class.base::RefCounted.755" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.756" = type { %class.scoped_refptr.757 }
%class.scoped_refptr.757 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.758", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.760, %class.scoped_refptr.767, %"class.blink::Persistent.784", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.758" = type { %"class.base::RefCounted.759" }
%"class.base::RefCounted.759" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.760 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.761", %"class.WTF::Vector.762" }
%"class.base::RefCountedThreadSafe.761" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.762" = type { %"class.WTF::VectorBuffer.763" }
%"class.WTF::VectorBuffer.763" = type { %"class.WTF::VectorBufferBase.764" }
%"class.WTF::VectorBufferBase.764" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.767 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.768", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.768" = type { %"class.base::RefCounted.769" }
%"class.base::RefCounted.769" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.770", %"class.blink::Persistent.775" }
%"class.WTF::HashMap.770" = type { %"class.WTF::HashTable.771" }
%"class.WTF::HashTable.771" = type <{ %"struct.WTF::KeyValuePair.774"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.774" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1517 }
%class.scoped_refptr.1517 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1518", %"class.WTF::Vector.1020", %"class.WTF::Vector.1520", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1518" = type { %"class.base::RefCounted.1519" }
%"class.base::RefCounted.1519" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1020" = type { %"class.WTF::VectorBuffer.1021" }
%"class.WTF::VectorBuffer.1021" = type { %"class.WTF::VectorBufferBase.1022" }
%"class.WTF::VectorBufferBase.1022" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1520" = type { %"class.WTF::VectorBuffer.1521" }
%"class.WTF::VectorBuffer.1521" = type { %"class.WTF::VectorBufferBase.1522" }
%"class.WTF::VectorBufferBase.1522" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1523 }
%union.anon.1523 = type { double }
%"class.blink::Persistent.775" = type { %"class.blink::PersistentBase.776" }
%"class.blink::PersistentBase.776" = type { %"class.blink::HeapHashMap.777"*, %"class.blink::PersistentNodePtr.364" }
%"class.blink::HeapHashMap.777" = type { %"class.WTF::HashMap.780" }
%"class.WTF::HashMap.780" = type { %"class.WTF::HashTable.781" }
%"class.WTF::HashTable.781" = type <{ %"struct.WTF::KeyValuePair.783"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.783" = type opaque
%"class.blink::Persistent.784" = type { %"class.blink::PersistentBase.785" }
%"class.blink::PersistentBase.785" = type { %"class.blink::HeapVector.786"*, %"class.blink::PersistentNodePtr.364" }
%"class.blink::HeapVector.786" = type { %"class.WTF::Vector.789" }
%"class.WTF::Vector.789" = type { %"class.WTF::VectorBuffer.790" }
%"class.WTF::VectorBuffer.790" = type { %"class.WTF::VectorBufferBase.791" }
%"class.WTF::VectorBufferBase.791" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.792", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.792" = type { %"class.blink::MemberBase.793" }
%"class.blink::MemberBase.793" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.797" = type { %class.scoped_refptr.798 }
%class.scoped_refptr.798 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.799", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.799" = type { %"class.base::RefCounted.800" }
%"class.base::RefCounted.800" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.801" = type { %"class.WTF::VectorBuffer.802" }
%"class.WTF::VectorBuffer.802" = type { %"class.WTF::VectorBufferBase.237" }
%class.scoped_refptr.805 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.806", %"class.WTF::Vector.808" }
%"class.WTF::RefCounted.806" = type { %"class.base::RefCounted.807" }
%"class.base::RefCounted.807" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.808" = type { %"class.WTF::VectorBuffer.809" }
%"class.WTF::VectorBuffer.809" = type { %"class.WTF::VectorBufferBase.810" }
%"class.WTF::VectorBufferBase.810" = type { %"struct.std::__1::pair.811"*, i32, i32 }
%"struct.std::__1::pair.811" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.814 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.815", [4 x i8], %"class.WTF::Vector.817" }
%"class.WTF::RefCounted.815" = type { %"class.base::RefCounted.816" }
%"class.base::RefCounted.816" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.817" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.819", [28 x i8] }>
%"class.WTF::VectorBufferBase.819" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.822" = type { %"class.blink::PersistentBase.823" }
%"class.blink::PersistentBase.823" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.364" }
%"class.blink::Persistent.824" = type { %"class.blink::PersistentBase.825" }
%"class.blink::PersistentBase.825" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.364" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.828", %"class.blink::Member.830" }
%"class.blink::Member.828" = type { %"class.blink::MemberBase.829" }
%"class.blink::MemberBase.829" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.830" = type { %"class.blink::MemberBase.831" }
%"class.blink::MemberBase.831" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.832" = type { %class.scoped_refptr.833 }
%class.scoped_refptr.833 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.834", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.834" = type { %"class.base::RefCounted.835" }
%"class.base::RefCounted.835" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.836" = type { %class.scoped_refptr.837 }
%class.scoped_refptr.837 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.838", [4 x i8], %"class.blink::DataRef.840", %"class.blink::DataRef.906", %"class.blink::TransformOperations", %class.scoped_refptr.814, %"class.blink::Persistent.1031", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.838" = type { %"class.base::RefCounted.839" }
%"class.base::RefCounted.839" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.840" = type { %class.scoped_refptr.841 }
%class.scoped_refptr.841 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.842", [4 x i8], %"class.blink::DataRef.844", %"class.blink::Persistent.882", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.842" = type { %"class.base::RefCounted.843" }
%"class.base::RefCounted.843" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.844" = type { %class.scoped_refptr.845 }
%class.scoped_refptr.845 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.846", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.864, %class.scoped_refptr.867, %class.scoped_refptr.870, %class.scoped_refptr.873, %class.scoped_refptr.874, %class.scoped_refptr.875, %"class.blink::Persistent.882", %"class.blink::Persistent.897", %"class.absl::optional.901", %"class.absl::optional.901", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.846" = type { %"class.base::RefCounted.847" }
%"class.base::RefCounted.847" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.848", %"class.std::__1::unique_ptr.853" }
%"class.WTF::Vector.848" = type { %"class.WTF::VectorBuffer.849" }
%"class.WTF::VectorBuffer.849" = type { %"class.WTF::VectorBufferBase.850" }
%"class.WTF::VectorBufferBase.850" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.853" = type { %"class.std::__1::__compressed_pair.854" }
%"class.std::__1::__compressed_pair.854" = type { %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.856", %"class.WTF::Vector.848", i32, i32 }
%"class.WTF::Vector.856" = type { %"class.WTF::VectorBuffer.857" }
%"class.WTF::VectorBuffer.857" = type { %"class.WTF::VectorBufferBase.858" }
%"class.WTF::VectorBufferBase.858" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.864 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.865", [4 x i8] }>
%"class.WTF::RefCounted.865" = type { %"class.base::RefCounted.866" }
%"class.base::RefCounted.866" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.867 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.868", [4 x i8] }>
%"class.WTF::RefCounted.868" = type { %"class.base::RefCounted.869" }
%"class.base::RefCounted.869" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.870 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.871" }>
%"class.WTF::RefCounted.871" = type { %"class.base::RefCounted.872" }
%"class.base::RefCounted.872" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.873 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.874 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.875 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.876", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.876" = type { %"class.base::RefCounted.877" }
%"class.base::RefCounted.877" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.878" }
%"class.blink::DataRef.878" = type { %class.scoped_refptr.879 }
%class.scoped_refptr.879 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.822", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.880" }
%"class.WTF::RefCounted.880" = type { %"class.base::RefCounted.881" }
%"class.base::RefCounted.881" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.897" = type { %"class.blink::PersistentBase.898" }
%"class.blink::PersistentBase.898" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.364" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.867, %"class.blink::Member.792", i32, [4 x i8] }>
%"class.absl::optional.901" = type { %"class.absl::optional_internal::optional_data.902" }
%"class.absl::optional_internal::optional_data.902" = type { %"class.absl::optional_internal::optional_data_base.903" }
%"class.absl::optional_internal::optional_data_base.903" = type { %"class.absl::optional_internal::optional_data_dtor_base.904" }
%"class.absl::optional_internal::optional_data_dtor_base.904" = type { i8, [3 x i8], %union.anon.905 }
%union.anon.905 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.882" = type { %"class.blink::PersistentBase.883" }
%"class.blink::PersistentBase.883" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.364" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.886" }
%"class.blink::HeapVector.886" = type { %"class.WTF::Vector.889" }
%"class.WTF::Vector.889" = type { %"class.WTF::VectorBuffer.890" }
%"class.WTF::VectorBuffer.890" = type { %"class.WTF::VectorBufferBase.891" }
%"class.WTF::VectorBufferBase.891" = type { %"class.blink::Member.892"*, i32, i32 }
%"class.blink::Member.892" = type { %"class.blink::MemberBase.893" }
%"class.blink::MemberBase.893" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.906" = type { %class.scoped_refptr.907 }
%class.scoped_refptr.907 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.908", %"class.blink::DataRef.910", %"class.blink::DataRef.914", %"class.blink::DataRef.923", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.942", %"class.std::__1::unique_ptr.953", %"class.std::__1::unique_ptr.992", %"class.std::__1::unique_ptr.1003", %"class.std::__1::unique_ptr.1014", %"class.WTF::Vector.1020", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.908" = type { %"class.base::RefCounted.909" }
%"class.base::RefCounted.909" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.910" = type { %class.scoped_refptr.911 }
%class.scoped_refptr.911 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.912", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.912" = type { %"class.base::RefCounted.913" }
%"class.base::RefCounted.913" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.914" = type { %class.scoped_refptr.915 }
%class.scoped_refptr.915 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.916", [4 x i8], %"class.WTF::Vector.918", i8, [7 x i8] }>
%"class.WTF::RefCounted.916" = type { %"class.base::RefCounted.917" }
%"class.base::RefCounted.917" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.918" = type { %"class.WTF::VectorBuffer.919" }
%"class.WTF::VectorBuffer.919" = type { %"class.WTF::VectorBufferBase.920" }
%"class.WTF::VectorBufferBase.920" = type { i32*, i32, i32 }
%"class.blink::DataRef.923" = type { %class.scoped_refptr.924 }
%class.scoped_refptr.924 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.925", [4 x i8], %"class.WTF::HashMap.927", %"class.WTF::HashMap.927", %"class.WTF::HashMap.927", %"class.WTF::HashMap.927", %"class.WTF::HashMap.927", %"class.WTF::HashMap.927", %"class.WTF::HashMap.932", %"class.WTF::HashMap.932", %"class.WTF::HashMap.932", %"class.WTF::HashMap.932", %"class.WTF::HashMap.937", %"class.WTF::Vector.848", %"class.WTF::Vector.848", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.925" = type { %"class.base::RefCounted.926" }
%"class.base::RefCounted.926" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.927" = type { %"class.WTF::HashTable.928" }
%"class.WTF::HashTable.928" = type <{ %"struct.WTF::KeyValuePair.931"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.931" = type { %"class.WTF::String", %"class.WTF::Vector.1507" }
%"class.WTF::Vector.1507" = type { %"class.WTF::VectorBuffer.1508" }
%"class.WTF::VectorBuffer.1508" = type { %"class.WTF::VectorBufferBase.1509" }
%"class.WTF::VectorBufferBase.1509" = type { i64*, i32, i32 }
%"class.WTF::HashMap.932" = type { %"class.WTF::HashTable.933" }
%"class.WTF::HashTable.933" = type <{ %"struct.WTF::KeyValuePair.936"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.936" = type { i64, %"class.WTF::Vector.1020" }
%"class.WTF::HashMap.937" = type { %"class.WTF::HashTable.938" }
%"class.WTF::HashTable.938" = type <{ %"struct.WTF::KeyValuePair.941"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.941" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.942" = type { %"class.std::__1::__compressed_pair.943" }
%"class.std::__1::__compressed_pair.943" = type { %"struct.std::__1::__compressed_pair_elem.944" }
%"struct.std::__1::__compressed_pair_elem.944" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.945" }
%"class.WTF::HashMap.945" = type { %"class.WTF::HashTable.946" }
%"class.WTF::HashTable.946" = type <{ %"struct.WTF::KeyValuePair.949"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.949" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1512", %"class.absl::optional.1512", %"class.absl::optional.1512" }
%"class.absl::optional.1512" = type { %"class.absl::optional_internal::optional_data.1513" }
%"class.absl::optional_internal::optional_data.1513" = type { %"class.absl::optional_internal::optional_data_base.1514" }
%"class.absl::optional_internal::optional_data_base.1514" = type { %"class.absl::optional_internal::optional_data_dtor_base.1515" }
%"class.absl::optional_internal::optional_data_dtor_base.1515" = type { i8, %union.anon.1516 }
%union.anon.1516 = type { i32 }
%"class.std::__1::unique_ptr.953" = type { %"class.std::__1::__compressed_pair.954" }
%"class.std::__1::__compressed_pair.954" = type { %"struct.std::__1::__compressed_pair_elem.955" }
%"struct.std::__1::__compressed_pair_elem.955" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.801", %"class.WTF::Vector.969", %"class.WTF::Vector.956", %"class.WTF::Vector.974", %"class.WTF::Vector.979", %"class.WTF::Vector.984" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.956", %"class.WTF::Vector.956", %"class.WTF::Vector.961" }
%"class.WTF::Vector.961" = type { %"class.WTF::VectorBuffer.962" }
%"class.WTF::VectorBuffer.962" = type { %"class.WTF::VectorBufferBase.963" }
%"class.WTF::VectorBufferBase.963" = type { %class.scoped_refptr.964*, i32, i32 }
%class.scoped_refptr.964 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.965", i32 }
%"class.WTF::ThreadSafeRefCounted.965" = type { %"class.base::RefCountedThreadSafe.966" }
%"class.base::RefCountedThreadSafe.966" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.969" = type { %"class.WTF::VectorBuffer.970" }
%"class.WTF::VectorBuffer.970" = type { %"class.WTF::VectorBufferBase.971" }
%"class.WTF::VectorBufferBase.971" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.956" = type { %"class.WTF::VectorBuffer.957" }
%"class.WTF::VectorBuffer.957" = type { %"class.WTF::VectorBufferBase.958" }
%"class.WTF::VectorBufferBase.958" = type { double*, i32, i32 }
%"class.WTF::Vector.974" = type { %"class.WTF::VectorBuffer.975" }
%"class.WTF::VectorBuffer.975" = type { %"class.WTF::VectorBufferBase.976" }
%"class.WTF::VectorBufferBase.976" = type { i32*, i32, i32 }
%"class.WTF::Vector.979" = type { %"class.WTF::VectorBuffer.980" }
%"class.WTF::VectorBuffer.980" = type { %"class.WTF::VectorBufferBase.981" }
%"class.WTF::VectorBufferBase.981" = type { i32*, i32, i32 }
%"class.WTF::Vector.984" = type { %"class.WTF::VectorBuffer.985" }
%"class.WTF::VectorBuffer.985" = type { %"class.WTF::VectorBufferBase.986" }
%"class.WTF::VectorBufferBase.986" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.992" = type { %"class.std::__1::__compressed_pair.993" }
%"class.std::__1::__compressed_pair.993" = type { %"struct.std::__1::__compressed_pair_elem.994" }
%"struct.std::__1::__compressed_pair_elem.994" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.995" }
%"class.WTF::Vector.995" = type { %"class.WTF::VectorBuffer.996" }
%"class.WTF::VectorBuffer.996" = type { %"class.WTF::VectorBufferBase.997" }
%"class.WTF::VectorBufferBase.997" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1003" = type { %"class.std::__1::__compressed_pair.1004" }
%"class.std::__1::__compressed_pair.1004" = type { %"struct.std::__1::__compressed_pair_elem.1005" }
%"struct.std::__1::__compressed_pair_elem.1005" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.1006" }
%"class.WTF::Vector.1006" = type { %"class.WTF::VectorBuffer.1007" }
%"class.WTF::VectorBuffer.1007" = type { %"class.WTF::VectorBufferBase.1008" }
%"class.WTF::VectorBufferBase.1008" = type { %"class.blink::Persistent.822"*, i32, i32 }
%"class.std::__1::unique_ptr.1014" = type { %"class.std::__1::__compressed_pair.1015" }
%"class.std::__1::__compressed_pair.1015" = type { %"struct.std::__1::__compressed_pair_elem.1016" }
%"struct.std::__1::__compressed_pair_elem.1016" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.822", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.1025" }
%"class.WTF::Vector.1025" = type { %"class.WTF::VectorBuffer.1026" }
%"class.WTF::VectorBuffer.1026" = type { %"class.WTF::VectorBufferBase.1027" }
%"class.WTF::VectorBufferBase.1027" = type { %class.scoped_refptr.1028*, i32, i32 }
%class.scoped_refptr.1028 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.871", [4 x i8] }>
%"class.blink::Persistent.1031" = type { %"class.blink::PersistentBase.1032" }
%"class.blink::PersistentBase.1032" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.364" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1035" }
%"class.blink::Member.1035" = type { %"class.blink::MemberBase.1036" }
%"class.blink::MemberBase.1036" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1037" = type { %class.scoped_refptr.1038 }
%class.scoped_refptr.1038 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1039", [4 x i8], %"class.blink::DataRef.1041", %"class.blink::DataRef.1045", %"class.blink::DataRef.1066", %"class.blink::DataRef.1084", %"class.blink::DataRef.1096", %"class.blink::DataRef.1100", %class.scoped_refptr.1070, i32, [4 x i8] }>
%"class.WTF::RefCounted.1039" = type { %"class.base::RefCounted.1040" }
%"class.base::RefCounted.1040" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1041" = type { %class.scoped_refptr.1042 }
%class.scoped_refptr.1042 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1043", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1043" = type { %"class.base::RefCounted.1044" }
%"class.base::RefCounted.1044" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1045" = type { %class.scoped_refptr.1046 }
%class.scoped_refptr.1046 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1047", %class.scoped_refptr.1049, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1047" = type { %"class.base::RefCounted.1048" }
%"class.base::RefCounted.1048" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1049 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1050", %"class.std::__1::unique_ptr.1056", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.868" }>
%"class.std::__1::unique_ptr.1050" = type { %"class.std::__1::__compressed_pair.1051" }
%"class.std::__1::__compressed_pair.1051" = type { %"struct.std::__1::__compressed_pair_elem.1052" }
%"struct.std::__1::__compressed_pair_elem.1052" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1056" = type { %"class.std::__1::__compressed_pair.1057" }
%"class.std::__1::__compressed_pair.1057" = type { %"struct.std::__1::__compressed_pair_elem.1058" }
%"struct.std::__1::__compressed_pair_elem.1058" = type { %"class.blink::Path"* }
%"class.blink::DataRef.1066" = type { %class.scoped_refptr.1067 }
%class.scoped_refptr.1067 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1068", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1068" = type { %"class.base::RefCounted.1069" }
%"class.base::RefCounted.1069" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1070, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1084" = type { %class.scoped_refptr.1085 }
%class.scoped_refptr.1085 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1086", [4 x i8], %class.scoped_refptr.1088, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1086" = type { %"class.base::RefCounted.1087" }
%"class.base::RefCounted.1087" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1088 = type { %"class.base::RefCountedData.1089"* }
%"class.base::RefCountedData.1089" = type { %"class.base::RefCountedThreadSafe.1090", %"class.WTF::Vector.1091" }
%"class.base::RefCountedThreadSafe.1090" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1091" = type { %"class.WTF::VectorBuffer.1092" }
%"class.WTF::VectorBuffer.1092" = type { %"class.WTF::VectorBufferBase.1093" }
%"class.WTF::VectorBufferBase.1093" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1096" = type { %class.scoped_refptr.1097 }
%class.scoped_refptr.1097 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1098", %class.scoped_refptr.1070, %class.scoped_refptr.1070, %class.scoped_refptr.1070 }
%"class.WTF::RefCounted.1098" = type { %"class.base::RefCounted.1099" }
%"class.base::RefCounted.1099" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1100" = type { %class.scoped_refptr.1101 }
%class.scoped_refptr.1101 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1102", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1102" = type { %"class.base::RefCounted.1103" }
%"class.base::RefCounted.1103" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1070 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1071", %"class.blink::Persistent.1073", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1071" = type { %"class.base::RefCounted.1072" }
%"class.base::RefCounted.1072" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1073" = type { %"class.blink::PersistentBase.1074" }
%"class.blink::PersistentBase.1074" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.364" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.274", %"class.blink::HeapHashMap.1077" }
%"class.blink::HeapHashMap.1077" = type { %"class.WTF::HashMap.1080" }
%"class.WTF::HashMap.1080" = type { %"class.WTF::HashTable.1081" }
%"class.WTF::HashTable.1081" = type <{ %"struct.WTF::KeyValuePair.1083"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1083" = type opaque
%"class.blink::DataRef.1104" = type { %class.scoped_refptr.1105 }
%class.scoped_refptr.1105 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1106", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1106" = type { %"class.base::RefCounted.1107" }
%"class.base::RefCounted.1107" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1108" = type { %class.scoped_refptr.1109 }
%class.scoped_refptr.1109 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1110", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1110" = type { %"class.base::RefCounted.1111" }
%"class.base::RefCounted.1111" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1112" = type { %class.scoped_refptr.1113 }
%class.scoped_refptr.1113 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1114", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1114" = type { %"class.base::RefCounted.1115" }
%"class.base::RefCounted.1115" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1116" = type { %class.scoped_refptr.1117 }
%class.scoped_refptr.1117 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1118", %class.scoped_refptr.1120 }
%"class.WTF::RefCounted.1118" = type { %"class.base::RefCounted.1119" }
%"class.base::RefCounted.1119" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1120 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1282", %"class.blink::StyleVariables", %class.scoped_refptr.1120 }
%"class.WTF::RefCounted.1282" = type { %"class.base::RefCounted.1283" }
%"class.base::RefCounted.1283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1121" = type { %"class.base::RefCounted.1122" }
%"class.base::RefCounted.1122" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1123" = type { %"class.std::__1::__compressed_pair.1124" }
%"class.std::__1::__compressed_pair.1124" = type { %"struct.std::__1::__compressed_pair_elem.1125" }
%"struct.std::__1::__compressed_pair_elem.1125" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1126" }
%"class.std::__1::unique_ptr.1126" = type { %"class.std::__1::__compressed_pair.1127" }
%"class.std::__1::__compressed_pair.1127" = type { %"struct.std::__1::__compressed_pair_elem.1128" }
%"struct.std::__1::__compressed_pair_elem.1128" = type { %"class.WTF::Vector.1129"* }
%"class.WTF::Vector.1129" = type { %"class.WTF::VectorBuffer.1527" }
%"class.WTF::VectorBuffer.1527" = type { %"class.WTF::VectorBufferBase.1528", [32 x i8] }
%"class.WTF::VectorBufferBase.1528" = type { %class.scoped_refptr.680*, i32, i32 }
%"class.blink::Member.1533" = type { %"class.blink::MemberBase.1534" }
%"class.blink::MemberBase.1534" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.1535" = type { %"class.blink::MemberBase.1536" }
%"class.blink::MemberBase.1536" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.1539", %"class.blink::HeapHashSet.1548" }
%"class.blink::HeapVector.1539" = type { %"class.WTF::Vector.1542" }
%"class.WTF::Vector.1542" = type { %"class.WTF::VectorBuffer.1543" }
%"class.WTF::VectorBuffer.1543" = type { %"class.WTF::VectorBufferBase.1544" }
%"class.WTF::VectorBufferBase.1544" = type { %"class.blink::Member.1545"*, i32, i32 }
%"class.blink::Member.1545" = type { %"class.blink::MemberBase.1546" }
%"class.blink::MemberBase.1546" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.1548" = type { %"class.WTF::HashSet.1551" }
%"class.WTF::HashSet.1551" = type { %"class.WTF::HashTable.1552" }
%"class.WTF::HashTable.1552" = type <{ %"class.blink::Member.1545"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1554" = type { %"class.blink::MemberBase.1555" }
%"class.blink::MemberBase.1555" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.1556" = type { %"class.blink::MemberBase.1557" }
%"class.blink::MemberBase.1557" = type { %"class.blink::HeapHashSet.1558"* }
%"class.blink::HeapHashSet.1558" = type opaque
%"class.blink::SVGLengthContext" = type { %"class.blink::SVGElement"* }
%"class.WTF::TextStream" = type { %"class.WTF::StringBuilder" }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.1291, i32, i8, i8, [2 x i8] }>
%union.anon.1291 = type { %"class.WTF::Vector.1292" }
%"class.WTF::Vector.1292" = type { %"class.WTF::VectorBuffer.1293" }
%"class.WTF::VectorBuffer.1293" = type { %"class.WTF::VectorBufferBase.1294", [16 x i8] }
%"class.WTF::VectorBufferBase.1294" = type { i8*, i32, i32 }
%"class.blink::PaintRecordBuilder" = type { %"class.blink::DisplayItemClient.base", %"class.absl::optional.1332", %"class.blink::PaintController"*, %"class.blink::GraphicsContext" }
%"class.absl::optional.1332" = type { %"class.absl::optional_internal::optional_data.1333" }
%"class.absl::optional_internal::optional_data.1333" = type { %"class.absl::optional_internal::optional_data_base.1334" }
%"class.absl::optional_internal::optional_data_base.1334" = type { %"class.absl::optional_internal::optional_data_dtor_base.1335" }
%"class.absl::optional_internal::optional_data_dtor_base.1335" = type { i8, %union.anon.1336 }
%union.anon.1336 = type { %"class.blink::PaintController" }
%"class.blink::GraphicsContext" = type { %"class.cc::PaintCanvas"*, %"class.blink::PaintController"*, %"class.WTF::Vector.1412", i32, %"class.blink::GraphicsContextState"*, %"class.cc::PaintRecorder", %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"*, float, %"class.std::__1::unique_ptr.1466", i8, i8, i8, i32 }
%"class.blink::SVGObjectPainter" = type { %"class.blink::LayoutObject"* }
%"class.blink::PropertyTreeState" = type { %"class.blink::PropertyTreeStateOrAlias" }
%"class.cc::RecordPaintFilter" = type <{ %"class.cc::PaintFilter", %class.sk_sp.1428, %struct.SkRect, %"class.gfx::SizeF", i8, [7 x i8] }>
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.cc::ImagePaintFilter" = type <{ %"class.cc::PaintFilter", %"class.cc::PaintImage", %struct.SkRect, %struct.SkRect, i32, [4 x i8] }>

$_ZN5blink7FEImageD2Ev = comdat any

$_ZN5blink7FEImageD0Ev = comdat any

$_ZNK5blink7FEImage19GetFilterEffectTypeEv = comdat any

$_ZN5blink7FEImage30SetOperatingInterpolationSpaceENS_18InterpolationSpaceE = comdat any

$_ZNK5blink12FilterEffect24AffectsTransparentPixelsEv = comdat any

$_ZN5blink12FilterEffect36MayProduceInvalidPreMultipliedPixelsEv = comdat any

$_ZN5blink10TraceTraitINS_10SVGElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_22SVGPreserveAspectRatioEE5TraceEPNS_7VisitorEPKv = comdat any

@_ZTVN5blink7FEImageE = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::FEImage"*)* @_ZN5blink7FEImageD2Ev to i8*), i8* bitcast (void (%"class.blink::FEImage"*)* @_ZN5blink7FEImageD0Ev to i8*), i8* bitcast (void (%"class.blink::FEImage"*, %"class.blink::Visitor"*)* @_ZNK5blink7FEImage5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%class.sk_sp*, %"class.blink::FEImage"*)* @_ZN5blink7FEImage17CreateImageFilterEv to i8*), i8* bitcast (void (%class.sk_sp*, %"class.blink::FilterEffect"*)* @_ZN5blink12FilterEffect34CreateImageFilterWithoutValidationEv to i8*), i8* bitcast (i32 (%"class.blink::FEImage"*)* @_ZNK5blink7FEImage19GetFilterEffectTypeEv to i8*), i8* bitcast (%"class.WTF::TextStream"* (%"class.blink::FEImage"*, %"class.WTF::TextStream"*, i32)* @_ZNK5blink7FEImage22ExternalRepresentationERN3WTF10TextStreamEi to i8*), i8* bitcast (void (%"class.blink::FEImage"*, i32)* @_ZN5blink7FEImage30SetOperatingInterpolationSpaceENS_18InterpolationSpaceE to i8*), i8* bitcast (i1 (%"class.blink::FilterEffect"*)* @_ZNK5blink12FilterEffect24AffectsTransparentPixelsEv to i8*), i8* bitcast (i1 (%"class.blink::FilterEffect"*)* @_ZN5blink12FilterEffect36MayProduceInvalidPreMultipliedPixelsEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::FEImage"*, %"class.blink::FloatRect"*)* @_ZNK5blink7FEImage9MapInputsERKNS_9FloatRectE to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)* @_ZNK5blink12FilterEffect9MapEffectERKNS_9FloatRectE to i8*)] }, align 8
@.str = private unnamed_addr constant [9 x i8] c"[feImage\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c" image-size=\22\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"\22]\0A\00", align 1
@__const._ZN5blink7FEImage32CreateImageFilterForLayoutObjectERKNS_12LayoutObjectE.viewport_transform = private unnamed_addr constant { { { { i8, [7 x i8], %union.anon.1290 } } } } { { { { i8, [7 x i8], %union.anon.1290 } } } { { { i8, [7 x i8], %union.anon.1290 } } { { i8, [7 x i8], %union.anon.1290 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.1290 { %"class.blink::AffineTransform" { [6 x double] [double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF] } } } } } }, align 8
@__const._ZN5blink7FEImage32CreateImageFilterForLayoutObjectERKNS_12LayoutObjectE.builder = private unnamed_addr constant { %"class.blink::DisplayItemClient.base", [7 x i8], { { { { i8, [7 x i8], { { i32, [4 x i8], %class.scoped_refptr.1337, %class.scoped_refptr.1337, <{ %"class.WTF::Vector.1345"*, { { { { i8, [7 x i8], %union.anon.1381 } } } }, %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>, i8, i8, [6 x i8], %"class.WTF::Vector.1392", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1397", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 } } } } } }, %"class.blink::PaintController"*, { %"class.cc::PaintCanvas"*, %"class.blink::PaintController"*, %"class.WTF::Vector.1412", i32, [4 x i8], %"class.blink::GraphicsContextState"*, %"class.cc::PaintRecorder", %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"*, float, [4 x i8], %"class.std::__1::unique_ptr.1466", i8, i8, i8, [1 x i8], i32 } } { %"class.blink::DisplayItemClient.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8 -86 }>, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { { i8, [7 x i8], { { i32, [4 x i8], %class.scoped_refptr.1337, %class.scoped_refptr.1337, <{ %"class.WTF::Vector.1345"*, { { { { i8, [7 x i8], %union.anon.1381 } } } }, %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>, i8, i8, [6 x i8], %"class.WTF::Vector.1392", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1397", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 } } } } } } { { { { i8, [7 x i8], { { i32, [4 x i8], %class.scoped_refptr.1337, %class.scoped_refptr.1337, <{ %"class.WTF::Vector.1345"*, { { { { i8, [7 x i8], %union.anon.1381 } } } }, %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>, i8, i8, [6 x i8], %"class.WTF::Vector.1392", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1397", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 } } } } } { { { i8, [7 x i8], { { i32, [4 x i8], %class.scoped_refptr.1337, %class.scoped_refptr.1337, <{ %"class.WTF::Vector.1345"*, { { { { i8, [7 x i8], %union.anon.1381 } } } }, %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>, i8, i8, [6 x i8], %"class.WTF::Vector.1392", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1397", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 } } } } { { i8, [7 x i8], { { i32, [4 x i8], %class.scoped_refptr.1337, %class.scoped_refptr.1337, <{ %"class.WTF::Vector.1345"*, { { { { i8, [7 x i8], %union.anon.1381 } } } }, %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>, i8, i8, [6 x i8], %"class.WTF::Vector.1392", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1397", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { i32, [4 x i8], %class.scoped_refptr.1337, %class.scoped_refptr.1337, <{ %"class.WTF::Vector.1345"*, { { { { i8, [7 x i8], %union.anon.1381 } } } }, %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>, i8, i8, [6 x i8], %"class.WTF::Vector.1392", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1397", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 } } { { i32, [4 x i8], %class.scoped_refptr.1337, %class.scoped_refptr.1337, <{ %"class.WTF::Vector.1345"*, { { { { i8, [7 x i8], %union.anon.1381 } } } }, %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>, i8, i8, [6 x i8], %"class.WTF::Vector.1392", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1397", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.scoped_refptr.1337 { %"class.blink::PaintArtifact"* inttoptr (i64 -6148914691236517206 to %"class.blink::PaintArtifact"*) }, %class.scoped_refptr.1337 { %"class.blink::PaintArtifact"* inttoptr (i64 -6148914691236517206 to %"class.blink::PaintArtifact"*) }, <{ %"class.WTF::Vector.1345"*, { { { { i8, [7 x i8], %union.anon.1381 } } } }, %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }> <{ %"class.WTF::Vector.1345"* inttoptr (i64 -6148914691236517206 to %"class.WTF::Vector.1345"*), { { { { i8, [7 x i8], %union.anon.1381 } } } } { { { { i8, [7 x i8], %union.anon.1381 } } } { { { i8, [7 x i8], %union.anon.1381 } } { { i8, [7 x i8], %union.anon.1381 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.1381 { %"struct.blink::DisplayItem::Id" { %"class.blink::DisplayItemClient"* inttoptr (i64 -6148914691236517206 to %"class.blink::DisplayItemClient"*), i32 -1431655766, i32 -1431655766 } } } } } }, %"class.blink::PropertyTreeStateOrAlias" { %"class.blink::TransformPaintPropertyNodeOrAlias"* inttoptr (i64 -6148914691236517206 to %"class.blink::TransformPaintPropertyNodeOrAlias"*), %"class.blink::ClipPaintPropertyNodeOrAlias"* inttoptr (i64 -6148914691236517206 to %"class.blink::ClipPaintPropertyNodeOrAlias"*), %"class.blink::EffectPaintPropertyNodeOrAlias"* inttoptr (i64 -6148914691236517206 to %"class.blink::EffectPaintPropertyNodeOrAlias"*) }, %"class.blink::Region" { %"class.blink::IntRect" { %"class.blink::IntPoint" { i32 -1431655766, i32 -1431655766 }, %"class.blink::IntSize" { i32 -1431655766, i32 -1431655766 } }, %"class.blink::Region::Shape" { %"class.WTF::Vector.1382" { %"class.WTF::VectorBuffer.1383" { %"class.WTF::VectorBufferBase.1384" { i32* inttoptr (i64 -6148914691236517206 to i32*), i32 -1431655766, i32 -1431655766 }, [128 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, %"class.WTF::Vector.1387" { %"class.WTF::VectorBuffer.1388" { %"class.WTF::VectorBufferBase.1389" { %"struct.blink::Region::Span"* inttoptr (i64 -6148914691236517206 to %"struct.blink::Region::Span"*), i32 -1431655766, i32 -1431655766 }, [128 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } } } }, i8 -86, i8 -86, i8 -86, i8 -86, %"class.blink::Color" { i32 -1431655766 }, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA" }>, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::Vector.1392" { %"class.WTF::VectorBuffer.1393" { %"class.WTF::VectorBufferBase.1394" { %"struct.blink::FrameFirstPaint"* inttoptr (i64 -6148914691236517206 to %"struct.blink::FrameFirstPaint"*), i32 -1431655766, i32 -1431655766 } } }, i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.WTF::HashMap.1397" { %"class.WTF::HashTable.1398" <{ %"struct.WTF::KeyValuePair.1401"* inttoptr (i64 -6148914691236517206 to %"struct.WTF::KeyValuePair.1401"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, %"class.WTF::String" { %class.scoped_refptr.218 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"struct.blink::PaintController::SubsequencesData" { %"class.WTF::HashMap.1402" { %"class.WTF::HashTable.1403" <{ %"struct.WTF::KeyValuePair.1406"* inttoptr (i64 -6148914691236517206 to %"struct.WTF::KeyValuePair.1406"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.WTF::Vector.1407" { %"class.WTF::VectorBuffer.1408" { %"class.WTF::VectorBufferBase.1409" { %"struct.blink::PaintController::SubsequenceMarkers"* inttoptr (i64 -6148914691236517206 to %"struct.blink::PaintController::SubsequenceMarkers"*), i32 -1431655766, i32 -1431655766 } } } }, %"struct.blink::PaintController::SubsequencesData" { %"class.WTF::HashMap.1402" { %"class.WTF::HashTable.1403" <{ %"struct.WTF::KeyValuePair.1406"* inttoptr (i64 -6148914691236517206 to %"struct.WTF::KeyValuePair.1406"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.WTF::Vector.1407" { %"class.WTF::VectorBuffer.1408" { %"class.WTF::VectorBufferBase.1409" { %"struct.blink::PaintController::SubsequenceMarkers"* inttoptr (i64 -6148914691236517206 to %"struct.blink::PaintController::SubsequenceMarkers"*), i32 -1431655766, i32 -1431655766 } } } }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 } } } } } }, %"class.blink::PaintController"* inttoptr (i64 -6148914691236517206 to %"class.blink::PaintController"*), { %"class.cc::PaintCanvas"*, %"class.blink::PaintController"*, %"class.WTF::Vector.1412", i32, [4 x i8], %"class.blink::GraphicsContextState"*, %"class.cc::PaintRecorder", %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"*, float, [4 x i8], %"class.std::__1::unique_ptr.1466", i8, i8, i8, [1 x i8], i32 } { %"class.cc::PaintCanvas"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintCanvas"*), %"class.blink::PaintController"* inttoptr (i64 -6148914691236517206 to %"class.blink::PaintController"*), %"class.WTF::Vector.1412" { %"class.WTF::VectorBuffer.1413" { %"class.WTF::VectorBufferBase.1414" { %"class.std::__1::unique_ptr.1415"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.1415"*), i32 -1431655766, i32 -1431655766 } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.blink::GraphicsContextState"* inttoptr (i64 -6148914691236517206 to %"class.blink::GraphicsContextState"*), %"class.cc::PaintRecorder" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.scoped_refptr.1302 { %"class.cc::DisplayItemList"* inttoptr (i64 -6148914691236517206 to %"class.cc::DisplayItemList"*) }, %"class.std::__1::unique_ptr.1303" { %"class.std::__1::__compressed_pair.1304" { %"struct.std::__1::__compressed_pair_elem.1305" { %"class.cc::RecordPaintCanvas"* inttoptr (i64 -6148914691236517206 to %"class.cc::RecordPaintCanvas"*) } } } }, %"class.printing::MetafileSkia"* inttoptr (i64 -6148914691236517206 to %"class.printing::MetafileSkia"*), %"class.paint_preview::PaintPreviewTracker"* inttoptr (i64 -6148914691236517206 to %"class.paint_preview::PaintPreviewTracker"*), float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unique_ptr.1466" { %"class.std::__1::__compressed_pair.1467" { %"struct.std::__1::__compressed_pair_elem.1468" { %"class.blink::DarkModeFilter"* inttoptr (i64 -6148914691236517206 to %"class.blink::DarkModeFilter"*) } } }, i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA", i32 -1431655766 } }, align 8
@.ref.tmp = private constant %"class.gfx::SizeF" { float 1.000000e+00, float 1.000000e+00 }, align 4

@_ZN5blink7FEImageC1EPNS_6FilterE13scoped_refptrINS_5ImageEEPKNS_22SVGPreserveAspectRatioE = hidden unnamed_addr alias void (%"class.blink::FEImage"*, %"class.blink::Filter"*, %"class.blink::Image"*, %"class.blink::SVGPreserveAspectRatio"*), void (%"class.blink::FEImage"*, %"class.blink::Filter"*, %"class.blink::Image"*, %"class.blink::SVGPreserveAspectRatio"*)* @_ZN5blink7FEImageC2EPNS_6FilterE13scoped_refptrINS_5ImageEEPKNS_22SVGPreserveAspectRatioE
@_ZN5blink7FEImageC1EPNS_6FilterEPKNS_10SVGElementEPKNS_22SVGPreserveAspectRatioE = hidden unnamed_addr alias void (%"class.blink::FEImage"*, %"class.blink::Filter"*, %"class.blink::SVGElement"*, %"class.blink::SVGPreserveAspectRatio"*), void (%"class.blink::FEImage"*, %"class.blink::Filter"*, %"class.blink::SVGElement"*, %"class.blink::SVGPreserveAspectRatio"*)* @_ZN5blink7FEImageC2EPNS_6FilterEPKNS_10SVGElementEPKNS_22SVGPreserveAspectRatioE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7FEImageC2EPNS_6FilterE13scoped_refptrINS_5ImageEEPKNS_22SVGPreserveAspectRatioE(%"class.blink::FEImage"*, %"class.blink::Filter"*, %"class.blink::Image"*, %"class.blink::SVGPreserveAspectRatio"*) unnamed_addr #0 align 2 {
  %5 = ptrtoint %"class.blink::Image"* %2 to i64
  %6 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %0, i64 0, i32 0
  tail call void @_ZN5blink12FilterEffectC2EPNS_6FilterE(%"class.blink::FilterEffect"* %6, %"class.blink::Filter"* %1) #9
  %7 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink7FEImageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %0, i64 0, i32 1
  %9 = bitcast %class.scoped_refptr* %8 to i64*
  store i64 %5, i64* %9, align 8
  %10 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::SVGElement"* null, %"class.blink::SVGElement"** %10, align 8
  %11 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::SVGPreserveAspectRatio"* %3, %"class.blink::SVGPreserveAspectRatio"** %11, align 8
  %12 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %0, i64 0, i32 0, i32 6
  store i32 0, i32* %12, align 4
  ret void
}

declare void @_ZN5blink12FilterEffectC2EPNS_6FilterE(%"class.blink::FilterEffect"*, %"class.blink::Filter"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7FEImageC2EPNS_6FilterEPKNS_10SVGElementEPKNS_22SVGPreserveAspectRatioE(%"class.blink::FEImage"*, %"class.blink::Filter"*, %"class.blink::SVGElement"*, %"class.blink::SVGPreserveAspectRatio"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %0, i64 0, i32 0
  tail call void @_ZN5blink12FilterEffectC2EPNS_6FilterE(%"class.blink::FilterEffect"* %5, %"class.blink::Filter"* %1) #9
  %6 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink7FEImageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %0, i64 0, i32 1, i32 0
  store %"class.blink::Image"* null, %"class.blink::Image"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::SVGElement"* %2, %"class.blink::SVGElement"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::SVGPreserveAspectRatio"* %3, %"class.blink::SVGPreserveAspectRatio"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %0, i64 0, i32 0, i32 6
  store i32 0, i32* %10, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink7FEImage5TraceEPNS_7VisitorE(%"class.blink::FEImage"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member.203"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10SVGElementEE5TraceEPNS_7VisitorEPKv) #9
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %0, i64 0, i32 3
  %15 = bitcast %"class.blink::Member.251"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_22SVGPreserveAspectRatioEE5TraceEPNS_7VisitorEPKv) #9
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %0, i64 0, i32 0
  tail call void @_ZNK5blink12FilterEffect5TraceEPNS_7VisitorE(%"class.blink::FilterEffect"* %25, %"class.blink::Visitor"* %1) #9
  ret void
}

declare void @_ZNK5blink12FilterEffect5TraceEPNS_7VisitorE(%"class.blink::FilterEffect"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK5blink7FEImage9MapInputsERKNS_9FloatRectE(%"class.blink::FEImage"* nocapture readonly, %"class.blink::FloatRect"* nocapture readnone dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::AffineTransform", align 8
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = bitcast { <2 x float>, <2 x float> }* %5 to %"class.blink::FloatRect"*
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to %"class.blink::FloatRect"*
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = bitcast { <2 x float>, <2 x float> }* %9 to %"class.blink::FloatRect"*
  %11 = alloca %"class.absl::optional.1286", align 8
  %12 = alloca %"class.blink::FloatRect", align 4
  %13 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #9
  %14 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0, i64 0
  %15 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %6, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = load %"class.blink::Filter"*, %"class.blink::Filter"** %16, align 8
  %18 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %0, i64 0, i32 0, i32 3
  %20 = bitcast %"class.blink::FloatRect"* %19 to <2 x i64>*
  %21 = load <2 x i64>, <2 x i64>* %20, align 8
  store <2 x i64> %21, <2 x i64>* %7, align 16
  %22 = call { <2 x float>, <2 x float> } @_ZNK5blink6Filter26MapLocalRectToAbsoluteRectERKNS_9FloatRectE(%"class.blink::Filter"* %17, %"class.blink::FloatRect"* nonnull dereferenceable(16) %8) #9
  %23 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %24 = extractvalue { <2 x float>, <2 x float> } %22, 0
  store <2 x float> %24, <2 x float>* %23, align 8
  %25 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %26 = extractvalue { <2 x float>, <2 x float> } %22, 1
  store <2 x float> %26, <2 x float>* %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #9
  %27 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %0, i64 0, i32 2, i32 0, i32 0
  %28 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %27, align 8
  %29 = icmp eq %"class.blink::SVGElement"* %28, null
  br i1 %29, label %100, label %30

30:                                               ; preds = %2
  %31 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %28, i64 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %28, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %34, label %40, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.blink::NodeData"** %35 to %"class.blink::NodeRareData"**
  %38 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %38, i64 0, i32 1, i32 0, i32 0
  br label %42

40:                                               ; preds = %30
  %41 = bitcast %"class.blink::NodeData"** %35 to %"class.blink::NodeRenderingData"**
  br label %42

42:                                               ; preds = %36, %40
  %43 = phi %"class.blink::NodeRenderingData"** [ %39, %36 ], [ %41, %40 ]
  %44 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %44, i64 0, i32 1
  %46 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %45, align 8
  %47 = icmp eq %"class.blink::LayoutObject"* %46, null
  br i1 %47, label %100, label %48

48:                                               ; preds = %42
  %49 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #9
  %50 = bitcast { <2 x float>, <2 x float> }* %4 to %"class.blink::FloatRect"*
  %51 = bitcast %"class.blink::AffineTransform"* %3 to i8*
  %52 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %51) #9
  %53 = bitcast %"class.blink::LayoutObject"* %46 to void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)***
  %54 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %54, i64 42
  %56 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %55, align 8
  call void %56(%"class.blink::AffineTransform"* nonnull sret %3, %"class.blink::LayoutObject"* nonnull %46) #9
  %57 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57) #9
  %58 = bitcast %"class.blink::LayoutObject"* %46 to { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)***
  %59 = load { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)**, { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)*** %58, align 8
  %60 = getelementptr inbounds { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)*, { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)** %59, i64 39
  %61 = load { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)*, { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)** %60, align 8
  %62 = call { <2 x float>, <2 x float> } %61(%"class.blink::LayoutObject"* nonnull %46) #9
  %63 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %64 = extractvalue { <2 x float>, <2 x float> } %62, 0
  store <2 x float> %64, <2 x float>* %63, align 8
  %65 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %66 = extractvalue { <2 x float>, <2 x float> } %62, 1
  store <2 x float> %66, <2 x float>* %65, align 8
  %67 = call { <2 x float>, <2 x float> } @_ZNK5blink15AffineTransform7MapRectERKNS_9FloatRectE(%"class.blink::AffineTransform"* nonnull %3, %"class.blink::FloatRect"* nonnull dereferenceable(16) %50) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %51) #9
  %68 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  %69 = extractvalue { <2 x float>, <2 x float> } %67, 0
  store <2 x float> %69, <2 x float>* %68, align 8
  %70 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  %71 = extractvalue { <2 x float>, <2 x float> } %67, 1
  store <2 x float> %71, <2 x float>* %70, align 8
  %72 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %27, align 8
  %73 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %72, i64 0, i32 1, i32 0, i32 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %86, label %76

76:                                               ; preds = %48
  %77 = getelementptr inbounds %"class.absl::optional.1286", %"class.absl::optional.1286"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %77) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %77, i8* align 8 getelementptr inbounds ({ { { { i8, [7 x i8], %union.anon.1290 } } } }, { { { { i8, [7 x i8], %union.anon.1290 } } } }* @__const._ZN5blink7FEImage32CreateImageFilterForLayoutObjectERKNS_12LayoutObjectE.viewport_transform, i64 0, i32 0, i32 0, i32 0, i32 0), i64 56, i1 false)
  call fastcc void @_ZN5blinkL34ComputeViewportAdjustmentTransformEPKNS_10SVGElementERKNS_9FloatRectE(%"class.absl::optional.1286"* nonnull sret %11, %"class.blink::SVGElement"* %72, %"class.blink::FloatRect"* nonnull dereferenceable(16) %6)
  %78 = load i8, i8* %77, align 8, !range !2
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %85, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.absl::optional.1286", %"class.absl::optional.1286"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %82 = call { <2 x float>, <2 x float> } @_ZNK5blink15AffineTransform7MapRectERKNS_9FloatRectE(%"class.blink::AffineTransform"* %81, %"class.blink::FloatRect"* nonnull dereferenceable(16) %10) #9
  %83 = extractvalue { <2 x float>, <2 x float> } %82, 0
  %84 = extractvalue { <2 x float>, <2 x float> } %82, 1
  store <2 x float> %83, <2 x float>* %68, align 8
  store <2 x float> %84, <2 x float>* %70, align 8
  br label %85

85:                                               ; preds = %76, %80
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %77) #9
  br label %99

86:                                               ; preds = %48
  %87 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0, i64 0
  %88 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %10, i64 0, i32 0, i32 1
  %89 = load %"class.blink::Filter"*, %"class.blink::Filter"** %16, align 8
  %90 = call { <2 x float>, <2 x float> } @_ZNK5blink6Filter26MapLocalRectToAbsoluteRectERKNS_9FloatRectE(%"class.blink::Filter"* %89, %"class.blink::FloatRect"* nonnull dereferenceable(16) %10) #9
  %91 = extractvalue { <2 x float>, <2 x float> } %90, 0
  %92 = extractvalue { <2 x float>, <2 x float> } %90, 1
  store <2 x float> %92, <2 x float>* %70, align 8
  %93 = load float, float* %14, align 8
  %94 = load float, float* %15, align 4
  %95 = extractelement <2 x float> %91, i32 0
  %96 = fadd float %93, %95
  store float %96, float* %87, align 8
  %97 = extractelement <2 x float> %91, i32 1
  %98 = fadd float %94, %97
  store float %98, float* %88, align 4
  br label %99

99:                                               ; preds = %86, %85
  call void @_ZN5blink9FloatRect9IntersectERKS0_(%"class.blink::FloatRect"* nonnull %6, %"class.blink::FloatRect"* nonnull dereferenceable(16) %10) #9
  br label %124

100:                                              ; preds = %2, %42
  %101 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %0, i64 0, i32 1, i32 0
  %102 = load %"class.blink::Image"*, %"class.blink::Image"** %101, align 8
  %103 = icmp eq %"class.blink::Image"* %102, null
  br i1 %103, label %128, label %104

104:                                              ; preds = %100
  %105 = bitcast %"class.blink::FloatRect"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %105) #9
  %106 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %12, i64 0, i32 0, i32 1
  %107 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %12, i64 0, i32 1, i32 0
  %108 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %12, i64 0, i32 1, i32 1
  %109 = bitcast %"class.blink::Image"* %102 to i64 (%"class.blink::Image"*)***
  %110 = bitcast %"class.blink::FloatRect"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %110, i8 -1, i64 16, i1 false)
  %111 = load i64 (%"class.blink::Image"*)**, i64 (%"class.blink::Image"*)*** %109, align 8
  %112 = getelementptr inbounds i64 (%"class.blink::Image"*)*, i64 (%"class.blink::Image"*)** %111, i64 13
  %113 = load i64 (%"class.blink::Image"*)*, i64 (%"class.blink::Image"*)** %112, align 8
  %114 = call i64 %113(%"class.blink::Image"* nonnull %102) #9
  %115 = trunc i64 %114 to i32
  %116 = lshr i64 %114, 32
  %117 = trunc i64 %116 to i32
  %118 = sitofp i32 %115 to float
  %119 = sitofp i32 %117 to float
  %120 = bitcast %"class.blink::FloatRect"* %12 to i32*
  store i32 0, i32* %120, align 4
  %121 = bitcast float* %106 to i32*
  store i32 0, i32* %121, align 4
  store float %118, float* %107, align 4
  store float %119, float* %108, align 4
  %122 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %0, i64 0, i32 3, i32 0, i32 0
  %123 = load %"class.blink::SVGPreserveAspectRatio"*, %"class.blink::SVGPreserveAspectRatio"** %122, align 8
  call void @_ZNK5blink22SVGPreserveAspectRatio13TransformRectERNS_9FloatRectES2_(%"class.blink::SVGPreserveAspectRatio"* %123, %"class.blink::FloatRect"* nonnull dereferenceable(16) %6, %"class.blink::FloatRect"* nonnull dereferenceable(16) %12) #9
  br label %124

124:                                              ; preds = %104, %99
  %125 = phi i8* [ %49, %99 ], [ %105, %104 ]
  %126 = load <2 x float>, <2 x float>* %23, align 8
  %127 = load <2 x float>, <2 x float>* %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %125) #9
  br label %128

128:                                              ; preds = %124, %100
  %129 = phi <2 x float> [ zeroinitializer, %100 ], [ %126, %124 ]
  %130 = phi <2 x float> [ zeroinitializer, %100 ], [ %127, %124 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #9
  %131 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %129, 0
  %132 = insertvalue { <2 x float>, <2 x float> } %131, <2 x float> %130, 1
  ret { <2 x float>, <2 x float> } %132
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare { <2 x float>, <2 x float> } @_ZNK5blink6Filter26MapLocalRectToAbsoluteRectERKNS_9FloatRectE(%"class.blink::Filter"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::LayoutObject"* @_ZNK5blink7FEImage22ReferencedLayoutObjectEv(%"class.blink::FEImage"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %2, align 8
  %4 = icmp eq %"class.blink::SVGElement"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %3, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %9, label %15, label %11

11:                                               ; preds = %5
  %12 = bitcast %"class.blink::NodeData"** %10 to %"class.blink::NodeRareData"**
  %13 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %13, i64 0, i32 1, i32 0, i32 0
  br label %17

15:                                               ; preds = %5
  %16 = bitcast %"class.blink::NodeData"** %10 to %"class.blink::NodeRenderingData"**
  br label %17

17:                                               ; preds = %11, %15
  %18 = phi %"class.blink::NodeRenderingData"** [ %14, %11 ], [ %16, %15 ]
  %19 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %19, i64 0, i32 1
  %21 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %20, align 8
  br label %22

22:                                               ; preds = %1, %17
  %23 = phi %"class.blink::LayoutObject"* [ %21, %17 ], [ null, %1 ]
  ret %"class.blink::LayoutObject"* %23
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL34ComputeViewportAdjustmentTransformEPKNS_10SVGElementERKNS_9FloatRectE(%"class.absl::optional.1286"* noalias nocapture sret, %"class.blink::SVGElement"*, %"class.blink::FloatRect"* nocapture readonly dereferenceable(16)) unnamed_addr #0 {
  %4 = alloca %"class.blink::SVGLengthContext", align 8
  %5 = alloca %"class.blink::FloatSize", align 4
  %6 = alloca %"class.blink::AffineTransform", align 8
  %7 = bitcast %"class.blink::SVGLengthContext"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.blink::SVGLengthContext", %"class.blink::SVGLengthContext"* %4, i64 0, i32 0
  store %"class.blink::SVGElement"* inttoptr (i64 -6148914691236517206 to %"class.blink::SVGElement"*), %"class.blink::SVGElement"** %8, align 8
  call void @_ZN5blink16SVGLengthContextC1EPKNS_10SVGElementE(%"class.blink::SVGLengthContext"* nonnull %4, %"class.blink::SVGElement"* %1) #9
  %9 = bitcast %"class.blink::FloatSize"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %5, i64 0, i32 0
  %11 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %5, i64 0, i32 1
  store float 0.000000e+00, float* %10, align 4
  store float 0.000000e+00, float* %11, align 4
  %12 = call zeroext i1 @_ZNK5blink16SVGLengthContext17DetermineViewportERNS_9FloatSizeE(%"class.blink::SVGLengthContext"* nonnull %4, %"class.blink::FloatSize"* nonnull dereferenceable(8) %5) #9
  br i1 %12, label %16, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.absl::optional.1286", %"class.absl::optional.1286"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %15 = bitcast %union.anon.1290* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 48, i1 false) #9
  br label %38

16:                                               ; preds = %3
  %17 = bitcast %"class.blink::AffineTransform"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %17) #9
  %18 = load float, float* %10, align 4
  %19 = load float, float* %11, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -1, i64 48, i1 false) #9, !alias.scope !3
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* nonnull %6) #9
  %20 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 0, i32 0
  %21 = load float, float* %20, align 4, !noalias !3
  %22 = fpext float %21 to double
  %23 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 0, i32 1
  %24 = load float, float* %23, align 4, !noalias !3
  %25 = fpext float %24 to double
  %26 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform9TranslateEdd(%"class.blink::AffineTransform"* nonnull %6, double %22, double %25) #9
  %27 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 1, i32 0
  %28 = load float, float* %27, align 4, !noalias !3
  %29 = fdiv float %28, %18
  %30 = fpext float %29 to double
  %31 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 1, i32 1
  %32 = load float, float* %31, align 4, !noalias !3
  %33 = fdiv float %32, %19
  %34 = fpext float %33 to double
  %35 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform5ScaleEdd(%"class.blink::AffineTransform"* nonnull %6, double %30, double %34) #9
  %36 = getelementptr inbounds %"class.absl::optional.1286", %"class.absl::optional.1286"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %37 = bitcast %"class.blink::AffineTransform"* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* nonnull align 8 %17, i64 48, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %17) #9
  br label %38

38:                                               ; preds = %16, %13
  %39 = phi i8 [ 1, %16 ], [ 0, %13 ]
  %40 = getelementptr inbounds %"class.absl::optional.1286", %"class.absl::optional.1286"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 %39, i8* %40, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  ret void
}

declare { <2 x float>, <2 x float> } @_ZNK5blink15AffineTransform7MapRectERKNS_9FloatRectE(%"class.blink::AffineTransform"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN5blink9FloatRect9IntersectERKS0_(%"class.blink::FloatRect"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNK5blink22SVGPreserveAspectRatio13TransformRectERNS_9FloatRectES2_(%"class.blink::SVGPreserveAspectRatio"*, %"class.blink::FloatRect"* dereferenceable(16), %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"class.WTF::TextStream"* @_ZNK5blink7FEImage22ExternalRepresentationERN3WTF10TextStreamEi(%"class.blink::FEImage"*, %"class.WTF::TextStream"* returned dereferenceable(48), i32) unnamed_addr #4 align 2 {
  %4 = alloca %"class.blink::AffineTransform", align 8
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.blink::Image"*, %"class.blink::Image"** %6, align 8
  %8 = icmp eq %"class.blink::Image"* %7, null
  br i1 %8, label %18, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.blink::Image"* %7 to i64 (%"class.blink::Image"*)***
  %11 = load i64 (%"class.blink::Image"*)**, i64 (%"class.blink::Image"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.blink::Image"*)*, i64 (%"class.blink::Image"*)** %11, i64 13
  %13 = load i64 (%"class.blink::Image"*)*, i64 (%"class.blink::Image"*)** %12, align 8
  %14 = tail call i64 %13(%"class.blink::Image"* nonnull %7) #9
  %15 = trunc i64 %14 to i32
  %16 = lshr i64 %14, 32
  %17 = trunc i64 %16 to i32
  br label %114

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %0, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %19, align 8
  %21 = icmp eq %"class.blink::SVGElement"* %20, null
  br i1 %21, label %114, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %20, i64 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %20, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %26, label %32, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.blink::NodeData"** %27 to %"class.blink::NodeRareData"**
  %30 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %30, i64 0, i32 1, i32 0, i32 0
  br label %34

32:                                               ; preds = %22
  %33 = bitcast %"class.blink::NodeData"** %27 to %"class.blink::NodeRenderingData"**
  br label %34

34:                                               ; preds = %28, %32
  %35 = phi %"class.blink::NodeRenderingData"** [ %31, %28 ], [ %33, %32 ]
  %36 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %36, i64 0, i32 1
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = icmp eq %"class.blink::LayoutObject"* %38, null
  br i1 %39, label %114, label %40

40:                                               ; preds = %34
  %41 = bitcast { <2 x float>, <2 x float> }* %5 to %"class.blink::FloatRect"*
  %42 = bitcast %"class.blink::AffineTransform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %42) #9
  %43 = bitcast %"class.blink::LayoutObject"* %38 to void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)***
  %44 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %44, i64 42
  %46 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %45, align 8
  call void %46(%"class.blink::AffineTransform"* nonnull sret %4, %"class.blink::LayoutObject"* nonnull %38) #9
  %47 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #9
  %48 = bitcast %"class.blink::LayoutObject"* %38 to { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)***
  %49 = load { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)**, { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)*** %48, align 8
  %50 = getelementptr inbounds { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)*, { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)** %49, i64 39
  %51 = load { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)*, { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)** %50, align 8
  %52 = call { <2 x float>, <2 x float> } %51(%"class.blink::LayoutObject"* nonnull %38) #9
  %53 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %54 = extractvalue { <2 x float>, <2 x float> } %52, 0
  store <2 x float> %54, <2 x float>* %53, align 8
  %55 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %56 = extractvalue { <2 x float>, <2 x float> } %52, 1
  store <2 x float> %56, <2 x float>* %55, align 8
  %57 = call { <2 x float>, <2 x float> } @_ZNK5blink15AffineTransform7MapRectERKNS_9FloatRectE(%"class.blink::AffineTransform"* nonnull %4, %"class.blink::FloatRect"* nonnull dereferenceable(16) %41) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %42) #9
  %58 = extractvalue { <2 x float>, <2 x float> } %57, 0
  %59 = extractvalue { <2 x float>, <2 x float> } %57, 1
  %60 = extractelement <2 x float> %58, i32 0
  %61 = call float @llvm.floor.f32(float %60) #9
  %62 = fpext float %61 to double
  %63 = fcmp ult double %62, 0x41DFFFFFFFC00000
  br i1 %63, label %64, label %68

64:                                               ; preds = %40
  %65 = fcmp ugt float %61, 0xC1E0000000000000
  br i1 %65, label %66, label %68

66:                                               ; preds = %64
  %67 = fptosi float %61 to i32
  br label %68

68:                                               ; preds = %66, %64, %40
  %69 = phi i32 [ %67, %66 ], [ 2147483647, %40 ], [ -2147483648, %64 ]
  %70 = extractelement <2 x float> %58, i32 1
  %71 = call float @llvm.floor.f32(float %70) #9
  %72 = fpext float %71 to double
  %73 = fcmp ult double %72, 0x41DFFFFFFFC00000
  br i1 %73, label %74, label %78

74:                                               ; preds = %68
  %75 = fcmp ugt float %71, 0xC1E0000000000000
  br i1 %75, label %76, label %78

76:                                               ; preds = %74
  %77 = fptosi float %71 to i32
  br label %78

78:                                               ; preds = %76, %74, %68
  %79 = phi i32 [ %77, %76 ], [ 2147483647, %68 ], [ -2147483648, %74 ]
  %80 = extractelement <2 x float> %59, i32 0
  %81 = fadd float %60, %80
  %82 = extractelement <2 x float> %59, i32 1
  %83 = fadd float %70, %82
  %84 = call float @llvm.ceil.f32(float %81) #9
  %85 = fpext float %84 to double
  %86 = fcmp ult double %85, 0x41DFFFFFFFC00000
  br i1 %86, label %87, label %91

87:                                               ; preds = %78
  %88 = fcmp ugt float %84, 0xC1E0000000000000
  br i1 %88, label %89, label %91

89:                                               ; preds = %87
  %90 = fptosi float %84 to i32
  br label %91

91:                                               ; preds = %89, %87, %78
  %92 = phi i32 [ %90, %89 ], [ 2147483647, %78 ], [ -2147483648, %87 ]
  %93 = call float @llvm.ceil.f32(float %83) #9
  %94 = fpext float %93 to double
  %95 = fcmp ult double %94, 0x41DFFFFFFFC00000
  br i1 %95, label %96, label %100

96:                                               ; preds = %91
  %97 = fcmp ugt float %93, 0xC1E0000000000000
  br i1 %97, label %98, label %100

98:                                               ; preds = %96
  %99 = fptosi float %93 to i32
  br label %100

100:                                              ; preds = %91, %96, %98
  %101 = phi i32 [ %99, %98 ], [ 2147483647, %91 ], [ -2147483648, %96 ]
  %102 = icmp sgt i32 %69, -1
  %103 = select i1 %102, i32 -2147483648, i32 2147483647
  %104 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %92, i32 %69) #9
  %105 = extractvalue { i32, i1 } %104, 1
  %106 = extractvalue { i32, i1 } %104, 0
  %107 = select i1 %105, i32 %103, i32 %106, !prof !6
  %108 = icmp sgt i32 %79, -1
  %109 = select i1 %108, i32 -2147483648, i32 2147483647
  %110 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %101, i32 %79) #9
  %111 = extractvalue { i32, i1 } %110, 1
  %112 = extractvalue { i32, i1 } %110, 0
  %113 = select i1 %111, i32 %109, i32 %112, !prof !6
  br label %114

114:                                              ; preds = %18, %100, %34, %9
  %115 = phi i32 [ %15, %9 ], [ 0, %34 ], [ %107, %100 ], [ 0, %18 ]
  %116 = phi i32 [ %17, %9 ], [ 0, %34 ], [ %113, %100 ], [ 0, %18 ]
  call void @_ZN3WTF11WriteIndentERNS_10TextStreamEi(%"class.WTF::TextStream"* dereferenceable(48) %1, i32 %2) #9
  %117 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)) #9
  %118 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %0, i64 0, i32 0
  %119 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZNK5blink12FilterEffect22ExternalRepresentationERN3WTF10TextStreamEi(%"class.blink::FilterEffect"* %118, %"class.WTF::TextStream"* dereferenceable(48) %1, i32 0) #9
  %120 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0)) #9
  %121 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEi(%"class.WTF::TextStream"* %120, i32 %115) #9
  %122 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %121, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #9
  %123 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEi(%"class.WTF::TextStream"* %122, i32 %116) #9
  %124 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %123, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0)) #9
  ret %"class.WTF::TextStream"* %1
}

declare void @_ZN3WTF11WriteIndentERNS_10TextStreamEi(%"class.WTF::TextStream"* dereferenceable(48), i32) local_unnamed_addr #1

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"*, i8*) local_unnamed_addr #1

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZNK5blink12FilterEffect22ExternalRepresentationERN3WTF10TextStreamEi(%"class.blink::FilterEffect"*, %"class.WTF::TextStream"* dereferenceable(48), i32) unnamed_addr #1

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEi(%"class.WTF::TextStream"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7FEImage32CreateImageFilterForLayoutObjectERKNS_12LayoutObjectE(%class.sk_sp* noalias nocapture sret, %"class.blink::FEImage"* nocapture readonly, %"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = alloca %"class.blink::FloatRect", align 4
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = alloca %class.sk_sp.1428, align 8
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = alloca %"class.blink::AffineTransform", align 8
  %10 = alloca { <2 x float>, <2 x float> }, align 8
  %11 = alloca { <2 x float>, <2 x float> }, align 8
  %12 = bitcast { <2 x float>, <2 x float> }* %11 to %"class.blink::FloatRect"*
  %13 = alloca <2 x i64>, align 16
  %14 = bitcast <2 x i64>* %13 to %"class.blink::FloatRect"*
  %15 = alloca { <2 x float>, <2 x float> }, align 8
  %16 = bitcast { <2 x float>, <2 x float> }* %15 to %"class.blink::FloatRect"*
  %17 = alloca %"class.blink::AffineTransform", align 8
  %18 = alloca %"class.absl::optional.1286", align 8
  %19 = alloca %"class.cc::PaintRecorder", align 8
  %20 = alloca { <2 x float>, <2 x float> }, align 8
  %21 = bitcast { <2 x float>, <2 x float> }* %20 to %struct.SkRect*
  %22 = alloca %class.SkMatrix, align 4
  %23 = alloca %"class.blink::PaintRecordBuilder", align 8
  %24 = alloca %"class.blink::SVGObjectPainter", align 8
  %25 = alloca %class.sk_sp.1428, align 8
  %26 = bitcast { <2 x float>, <2 x float> }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #9
  %27 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %28 = load %"class.blink::Filter"*, %"class.blink::Filter"** %27, align 8
  %29 = bitcast <2 x i64>* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #9
  %30 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %1, i64 0, i32 0, i32 3
  %31 = bitcast %"class.blink::FloatRect"* %30 to <2 x i64>*
  %32 = load <2 x i64>, <2 x i64>* %31, align 8
  store <2 x i64> %32, <2 x i64>* %13, align 16
  %33 = call { <2 x float>, <2 x float> } @_ZNK5blink6Filter26MapLocalRectToAbsoluteRectERKNS_9FloatRectE(%"class.blink::Filter"* %28, %"class.blink::FloatRect"* nonnull dereferenceable(16) %14) #9
  %34 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 0
  %35 = extractvalue { <2 x float>, <2 x float> } %33, 0
  store <2 x float> %35, <2 x float>* %34, align 8
  %36 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 1
  %37 = extractvalue { <2 x float>, <2 x float> } %33, 1
  store <2 x float> %37, <2 x float>* %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #9
  %38 = bitcast { <2 x float>, <2 x float> }* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #9
  %39 = bitcast { <2 x float>, <2 x float> }* %10 to %"class.blink::FloatRect"*
  %40 = bitcast %"class.blink::AffineTransform"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %40) #9
  %41 = bitcast %"class.blink::LayoutObject"* %2 to void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)***
  %42 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %42, i64 42
  %44 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %43, align 8
  call void %44(%"class.blink::AffineTransform"* nonnull sret %9, %"class.blink::LayoutObject"* %2) #9
  %45 = bitcast { <2 x float>, <2 x float> }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #9
  %46 = bitcast %"class.blink::LayoutObject"* %2 to { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)***
  %47 = load { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)**, { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)*** %46, align 8
  %48 = getelementptr inbounds { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)*, { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)** %47, i64 39
  %49 = load { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)*, { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)** %48, align 8
  %50 = call { <2 x float>, <2 x float> } %49(%"class.blink::LayoutObject"* %2) #9
  %51 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %10, i64 0, i32 0
  %52 = extractvalue { <2 x float>, <2 x float> } %50, 0
  store <2 x float> %52, <2 x float>* %51, align 8
  %53 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %10, i64 0, i32 1
  %54 = extractvalue { <2 x float>, <2 x float> } %50, 1
  store <2 x float> %54, <2 x float>* %53, align 8
  %55 = call { <2 x float>, <2 x float> } @_ZNK5blink15AffineTransform7MapRectERKNS_9FloatRectE(%"class.blink::AffineTransform"* nonnull %9, %"class.blink::FloatRect"* nonnull dereferenceable(16) %39) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %40) #9
  %56 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %15, i64 0, i32 0
  %57 = extractvalue { <2 x float>, <2 x float> } %55, 0
  store <2 x float> %57, <2 x float>* %56, align 8
  %58 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %15, i64 0, i32 1
  %59 = extractvalue { <2 x float>, <2 x float> } %55, 1
  store <2 x float> %59, <2 x float>* %58, align 8
  %60 = bitcast %"class.blink::AffineTransform"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %60) #9
  %61 = bitcast %"class.blink::AffineTransform"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -1, i64 48, i1 false)
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* nonnull %17) #9
  %62 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %1, i64 0, i32 2, i32 0, i32 0
  %63 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %63, i64 0, i32 1, i32 0, i32 0, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %82, label %67

67:                                               ; preds = %3
  %68 = getelementptr inbounds %"class.absl::optional.1286", %"class.absl::optional.1286"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %68) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %68, i8* align 8 getelementptr inbounds ({ { { { i8, [7 x i8], %union.anon.1290 } } } }, { { { { i8, [7 x i8], %union.anon.1290 } } } }* @__const._ZN5blink7FEImage32CreateImageFilterForLayoutObjectERKNS_12LayoutObjectE.viewport_transform, i64 0, i32 0, i32 0, i32 0, i32 0), i64 56, i1 false)
  call fastcc void @_ZN5blinkL34ComputeViewportAdjustmentTransformEPKNS_10SVGElementERKNS_9FloatRectE(%"class.absl::optional.1286"* nonnull sret %18, %"class.blink::SVGElement"* %63, %"class.blink::FloatRect"* nonnull dereferenceable(16) %12)
  %69 = load i8, i8* %68, align 8, !range !2
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %81, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.absl::optional.1286", %"class.absl::optional.1286"* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %73 = call { <2 x float>, <2 x float> } @_ZNK5blink15AffineTransform7MapRectERKNS_9FloatRectE(%"class.blink::AffineTransform"* %72, %"class.blink::FloatRect"* nonnull dereferenceable(16) %16) #9
  %74 = extractvalue { <2 x float>, <2 x float> } %73, 0
  %75 = extractvalue { <2 x float>, <2 x float> } %73, 1
  store <2 x float> %74, <2 x float>* %56, align 8
  store <2 x float> %75, <2 x float>* %58, align 8
  %76 = load i8, i8* %68, align 8, !range !2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %79, !prof !6

78:                                               ; preds = %71
  call void @llvm.trap() #9
  unreachable

79:                                               ; preds = %71
  %80 = bitcast %"class.blink::AffineTransform"* %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %60, i8* align 8 %80, i64 48, i1 false)
  br label %81

81:                                               ; preds = %67, %79
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %68) #9
  br label %100

82:                                               ; preds = %3
  %83 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %15, i64 0, i32 0, i64 0
  %84 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %16, i64 0, i32 0, i32 1
  %85 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 0, i64 0
  %86 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %12, i64 0, i32 0, i32 1
  %87 = load %"class.blink::Filter"*, %"class.blink::Filter"** %27, align 8
  %88 = call { <2 x float>, <2 x float> } @_ZNK5blink6Filter26MapLocalRectToAbsoluteRectERKNS_9FloatRectE(%"class.blink::Filter"* %87, %"class.blink::FloatRect"* nonnull dereferenceable(16) %16) #9
  %89 = extractvalue { <2 x float>, <2 x float> } %88, 0
  %90 = extractvalue { <2 x float>, <2 x float> } %88, 1
  store <2 x float> %90, <2 x float>* %58, align 8
  %91 = load float, float* %85, align 8
  %92 = load float, float* %86, align 4
  %93 = extractelement <2 x float> %89, i32 0
  %94 = fadd float %91, %93
  store float %94, float* %83, align 8
  %95 = extractelement <2 x float> %89, i32 1
  %96 = fadd float %92, %95
  store float %96, float* %84, align 4
  %97 = fpext float %91 to double
  %98 = fpext float %92 to double
  %99 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform9TranslateEdd(%"class.blink::AffineTransform"* nonnull %17, double %97, double %98) #9
  br label %100

100:                                              ; preds = %82, %81
  call void @_ZN5blink9FloatRect9IntersectERKS0_(%"class.blink::FloatRect"* nonnull %12, %"class.blink::FloatRect"* nonnull dereferenceable(16) %16) #9
  %101 = load %"class.blink::Filter"*, %"class.blink::Filter"** %27, align 8
  %102 = bitcast %"class.blink::FloatRect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %102) #9
  %103 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %5, i64 0, i32 1, i32 0
  %104 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %5, i64 0, i32 1, i32 1
  %105 = getelementptr inbounds %"class.blink::Filter", %"class.blink::Filter"* %101, i64 0, i32 1
  %106 = bitcast %"class.blink::FloatRect"* %105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %102, i8* align 4 %106, i64 16, i1 false) #9
  %107 = load float, float* %103, align 4
  %108 = fcmp ole float %107, 0.000000e+00
  %109 = load float, float* %104, align 4
  %110 = fcmp ole float %109, 0.000000e+00
  %111 = or i1 %108, %110
  br i1 %111, label %112, label %115

112:                                              ; preds = %100
  %113 = load <2 x float>, <2 x float>* %34, align 8
  %114 = load <2 x float>, <2 x float>* %36, align 8
  br label %129

115:                                              ; preds = %100
  %116 = bitcast { <2 x float>, <2 x float> }* %6 to %"class.blink::FloatRect"*
  %117 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %117) #9
  %118 = call { <2 x float>, <2 x float> } @_ZNK5blink6Filter26MapLocalRectToAbsoluteRectERKNS_9FloatRectE(%"class.blink::Filter"* %101, %"class.blink::FloatRect"* nonnull dereferenceable(16) %5) #9
  %119 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  %120 = extractvalue { <2 x float>, <2 x float> } %118, 0
  store <2 x float> %120, <2 x float>* %119, align 8
  %121 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  %122 = extractvalue { <2 x float>, <2 x float> } %118, 1
  store <2 x float> %122, <2 x float>* %121, align 8
  %123 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %123) #9
  %124 = bitcast { <2 x float>, <2 x float> }* %4 to %"class.blink::FloatRect"*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %123, i8* nonnull align 8 %26, i64 16, i1 false) #9
  call void @_ZN5blink9FloatRect9IntersectERKS0_(%"class.blink::FloatRect"* nonnull %124, %"class.blink::FloatRect"* nonnull dereferenceable(16) %116) #9
  %125 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %126 = load <2 x float>, <2 x float>* %125, align 8
  %127 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %128 = load <2 x float>, <2 x float>* %127, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %123) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %117) #9
  br label %129

129:                                              ; preds = %112, %115
  %130 = phi <2 x float> [ %113, %112 ], [ %126, %115 ]
  %131 = phi <2 x float> [ %114, %112 ], [ %128, %115 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %102) #9
  %132 = bitcast %"class.cc::PaintRecorder"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %132) #9
  %133 = bitcast %"class.cc::PaintRecorder"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %133, i8 -86, i64 24, i1 false)
  call void @_ZN2cc13PaintRecorderC1Ev(%"class.cc::PaintRecorder"* nonnull %19) #9
  %134 = bitcast { <2 x float>, <2 x float> }* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %134) #9
  %135 = fadd <2 x float> %130, %131
  %136 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %20, i64 0, i32 0
  store <2 x float> %130, <2 x float>* %136, align 8
  %137 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %20, i64 0, i32 1
  store <2 x float> %135, <2 x float>* %137, align 8
  %138 = call %"class.cc::PaintCanvas"* @_ZN2cc13PaintRecorder14beginRecordingERK6SkRect(%"class.cc::PaintRecorder"* nonnull %19, %struct.SkRect* nonnull dereferenceable(16) %21) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %134) #9
  %139 = bitcast %class.SkMatrix* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %139) #9
  call void @_ZN5blink25AffineTransformToSkMatrixERKNS_15AffineTransformE(%class.SkMatrix* nonnull sret %22, %"class.blink::AffineTransform"* nonnull dereferenceable(48) %17) #9
  %140 = bitcast %"class.cc::PaintCanvas"* %138 to void (%"class.cc::PaintCanvas"*, %class.SkMatrix*)***
  %141 = load void (%"class.cc::PaintCanvas"*, %class.SkMatrix*)**, void (%"class.cc::PaintCanvas"*, %class.SkMatrix*)*** %140, align 8
  %142 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %class.SkMatrix*)*, void (%"class.cc::PaintCanvas"*, %class.SkMatrix*)** %141, i64 14
  %143 = load void (%"class.cc::PaintCanvas"*, %class.SkMatrix*)*, void (%"class.cc::PaintCanvas"*, %class.SkMatrix*)** %142, align 8
  call void %143(%"class.cc::PaintCanvas"* %138, %class.SkMatrix* nonnull dereferenceable(40) %22) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %139) #9
  %144 = bitcast %"class.blink::PaintRecordBuilder"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 728, i8* nonnull %144) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %144, i8* align 8 bitcast ({ %"class.blink::DisplayItemClient.base", [7 x i8], { { { { i8, [7 x i8], { { i32, [4 x i8], %class.scoped_refptr.1337, %class.scoped_refptr.1337, <{ %"class.WTF::Vector.1345"*, { { { { i8, [7 x i8], %union.anon.1381 } } } }, %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>, i8, i8, [6 x i8], %"class.WTF::Vector.1392", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1397", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 } } } } } }, %"class.blink::PaintController"*, { %"class.cc::PaintCanvas"*, %"class.blink::PaintController"*, %"class.WTF::Vector.1412", i32, [4 x i8], %"class.blink::GraphicsContextState"*, %"class.cc::PaintRecorder", %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"*, float, [4 x i8], %"class.std::__1::unique_ptr.1466", i8, i8, i8, [1 x i8], i32 } }* @__const._ZN5blink7FEImage32CreateImageFilterForLayoutObjectERKNS_12LayoutObjectE.builder to i8*), i64 728, i1 false)
  call void @_ZN5blink18PaintRecordBuilderC1Ev(%"class.blink::PaintRecordBuilder"* nonnull %23) #9
  %145 = bitcast %"class.blink::SVGObjectPainter"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %145) #9
  %146 = getelementptr inbounds %"class.blink::SVGObjectPainter", %"class.blink::SVGObjectPainter"* %24, i64 0, i32 0
  store %"class.blink::LayoutObject"* %2, %"class.blink::LayoutObject"** %146, align 8
  %147 = getelementptr inbounds %"class.blink::PaintRecordBuilder", %"class.blink::PaintRecordBuilder"* %23, i64 0, i32 3
  call void @_ZN5blink16SVGObjectPainter20PaintResourceSubtreeERNS_15GraphicsContextE(%"class.blink::SVGObjectPainter"* nonnull %24, %"class.blink::GraphicsContext"* dereferenceable(112) %147) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %145) #9
  %148 = call dereferenceable(24) %"class.blink::PropertyTreeState"* @_ZN5blink17PropertyTreeState4RootEv() #9
  call void @_ZN5blink18PaintRecordBuilder12EndRecordingERN2cc11PaintCanvasERKNS_17PropertyTreeStateE(%"class.blink::PaintRecordBuilder"* nonnull %23, %"class.cc::PaintCanvas"* dereferenceable(24) %138, %"class.blink::PropertyTreeState"* dereferenceable(24) %148) #9
  call void @_ZN5blink18PaintRecordBuilderD1Ev(%"class.blink::PaintRecordBuilder"* nonnull %23) #9
  call void @llvm.lifetime.end.p0i8(i64 728, i8* nonnull %144) #9
  %149 = bitcast %class.sk_sp.1428* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %149) #9
  call void @_ZN2cc13PaintRecorder24finishRecordingAsPictureEv(%class.sk_sp.1428* nonnull sret %25, %"class.cc::PaintRecorder"* nonnull %19) #9
  %150 = bitcast %class.sk_sp.1428* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %150)
  %151 = bitcast { <2 x float>, <2 x float> }* %8 to %struct.SkRect*
  %152 = call i8* @_Znwm(i64 96) #10, !noalias !7
  %153 = bitcast i8* %152 to %"class.cc::RecordPaintFilter"*
  %154 = getelementptr inbounds %class.sk_sp.1428, %class.sk_sp.1428* %25, i64 0, i32 0
  %155 = bitcast %class.sk_sp.1428* %25 to i64*
  %156 = load i64, i64* %155, align 8, !noalias !7
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %154, align 8, !noalias !7
  %157 = bitcast %class.sk_sp.1428* %7 to i64*
  store i64 %156, i64* %157, align 8, !noalias !7
  %158 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %158) #9, !noalias !7
  %159 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  store <2 x float> %130, <2 x float>* %159, align 8, !noalias !7
  %160 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  store <2 x float> %135, <2 x float>* %160, align 8, !noalias !7
  call void @_ZN2cc17RecordPaintFilterC1E5sk_spINS_13PaintOpBufferEERK6SkRectRKN3gfx5SizeFENS_11PaintShader15ScalingBehaviorE(%"class.cc::RecordPaintFilter"* nonnull %153, %class.sk_sp.1428* nonnull %7, %struct.SkRect* nonnull dereferenceable(16) %151, %"class.gfx::SizeF"* nonnull dereferenceable(8) @.ref.tmp, i8 zeroext 0) #9, !noalias !7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %158) #9, !noalias !7
  %161 = getelementptr inbounds %class.sk_sp.1428, %class.sk_sp.1428* %7, i64 0, i32 0
  %162 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %161, align 8, !noalias !7
  %163 = icmp eq %"class.cc::PaintOpBuffer"* %162, null
  br i1 %163, label %174, label %164

164:                                              ; preds = %129
  %165 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %162, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = atomicrmw add i32* %165, i32 -1 acq_rel, !noalias !7
  %167 = icmp eq i32 %166, 1
  br i1 %167, label %168, label %174

168:                                              ; preds = %164
  %169 = bitcast %"class.cc::PaintOpBuffer"* %162 to %class.SkRefCntBase*
  %170 = bitcast %"class.cc::PaintOpBuffer"* %162 to void (%class.SkRefCntBase*)***
  %171 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %170, align 8, !noalias !7
  %172 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %171, i64 2
  %173 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %172, align 8, !noalias !7
  call void %173(%class.SkRefCntBase* nonnull %169) #9, !noalias !7
  br label %174

174:                                              ; preds = %168, %164, %129
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %150)
  %175 = bitcast %class.sk_sp* %0 to i8**
  store i8* %152, i8** %175, align 8
  %176 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %154, align 8
  %177 = icmp eq %"class.cc::PaintOpBuffer"* %176, null
  br i1 %177, label %188, label %178

178:                                              ; preds = %174
  %179 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %176, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = atomicrmw add i32* %179, i32 -1 acq_rel
  %181 = icmp eq i32 %180, 1
  br i1 %181, label %182, label %188

182:                                              ; preds = %178
  %183 = bitcast %"class.cc::PaintOpBuffer"* %176 to %class.SkRefCntBase*
  %184 = bitcast %"class.cc::PaintOpBuffer"* %176 to void (%class.SkRefCntBase*)***
  %185 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %184, align 8
  %186 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %185, i64 2
  %187 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %186, align 8
  call void %187(%class.SkRefCntBase* nonnull %183) #9
  br label %188

188:                                              ; preds = %174, %178, %182
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %149) #9
  call void @_ZN2cc13PaintRecorderD1Ev(%"class.cc::PaintRecorder"* nonnull %19) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %132) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %60) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #9
  ret void
}

declare void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"*) unnamed_addr #1

declare dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform9TranslateEdd(%"class.blink::AffineTransform"*, double, double) local_unnamed_addr #1

declare void @_ZN2cc13PaintRecorderC1Ev(%"class.cc::PaintRecorder"*) unnamed_addr #1

declare %"class.cc::PaintCanvas"* @_ZN2cc13PaintRecorder14beginRecordingERK6SkRect(%"class.cc::PaintRecorder"*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN5blink25AffineTransformToSkMatrixERKNS_15AffineTransformE(%class.SkMatrix* sret, %"class.blink::AffineTransform"* dereferenceable(48)) local_unnamed_addr #1

declare void @_ZN5blink18PaintRecordBuilderC1Ev(%"class.blink::PaintRecordBuilder"*) unnamed_addr #1

declare void @_ZN5blink16SVGObjectPainter20PaintResourceSubtreeERNS_15GraphicsContextE(%"class.blink::SVGObjectPainter"*, %"class.blink::GraphicsContext"* dereferenceable(112)) local_unnamed_addr #1

declare void @_ZN5blink18PaintRecordBuilder12EndRecordingERN2cc11PaintCanvasERKNS_17PropertyTreeStateE(%"class.blink::PaintRecordBuilder"*, %"class.cc::PaintCanvas"* dereferenceable(24), %"class.blink::PropertyTreeState"* dereferenceable(24)) local_unnamed_addr #1

declare dereferenceable(24) %"class.blink::PropertyTreeState"* @_ZN5blink17PropertyTreeState4RootEv() local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink18PaintRecordBuilderD1Ev(%"class.blink::PaintRecordBuilder"*) unnamed_addr #5

declare void @_ZN2cc13PaintRecorder24finishRecordingAsPictureEv(%class.sk_sp.1428* sret, %"class.cc::PaintRecorder"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc13PaintRecorderD1Ev(%"class.cc::PaintRecorder"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7FEImage17CreateImageFilterEv(%class.sk_sp* noalias sret, %"class.blink::FEImage"*) unnamed_addr #4 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = alloca %"class.blink::FloatRect", align 4
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = alloca %"class.cc::PaintImage", align 8
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = alloca %"class.cc::PaintImage", align 8
  %10 = alloca %"class.blink::FloatRect", align 8
  %11 = alloca { <2 x float>, <2 x float> }, align 8
  %12 = bitcast { <2 x float>, <2 x float> }* %11 to %"class.blink::FloatRect"*
  %13 = alloca <2 x i64>, align 16
  %14 = bitcast <2 x i64>* %13 to %"class.blink::FloatRect"*
  %15 = alloca { <2 x float>, <2 x float> }, align 8
  %16 = bitcast { <2 x float>, <2 x float> }* %15 to %"class.blink::FloatRect"*
  %17 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %1, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %17, align 8
  %19 = icmp eq %"class.blink::SVGElement"* %18, null
  br i1 %19, label %39, label %20

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %18, i64 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %18, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %24, label %30, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::NodeData"** %25 to %"class.blink::NodeRareData"**
  %28 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %28, i64 0, i32 1, i32 0, i32 0
  br label %32

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::NodeData"** %25 to %"class.blink::NodeRenderingData"**
  br label %32

32:                                               ; preds = %26, %30
  %33 = phi %"class.blink::NodeRenderingData"** [ %29, %26 ], [ %31, %30 ]
  %34 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %34, i64 0, i32 1
  %36 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %37 = icmp eq %"class.blink::LayoutObject"* %36, null
  br i1 %37, label %39, label %38

38:                                               ; preds = %32
  tail call void @_ZN5blink7FEImage32CreateImageFilterForLayoutObjectERKNS_12LayoutObjectE(%class.sk_sp* sret %0, %"class.blink::FEImage"* %1, %"class.blink::LayoutObject"* nonnull dereferenceable(88) %36)
  br label %182

39:                                               ; preds = %2, %32
  %40 = bitcast %"class.cc::PaintImage"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %40) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 104, i1 false)
  %41 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %1, i64 0, i32 1, i32 0
  %42 = load %"class.blink::Image"*, %"class.blink::Image"** %41, align 8
  %43 = icmp eq %"class.blink::Image"* %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %39
  %45 = bitcast %"class.blink::Image"* %42 to void (%"class.cc::PaintImage"*, %"class.blink::Image"*)***
  %46 = load void (%"class.cc::PaintImage"*, %"class.blink::Image"*)**, void (%"class.cc::PaintImage"*, %"class.blink::Image"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.cc::PaintImage"*, %"class.blink::Image"*)*, void (%"class.cc::PaintImage"*, %"class.blink::Image"*)** %46, i64 30
  %48 = load void (%"class.cc::PaintImage"*, %"class.blink::Image"*)*, void (%"class.cc::PaintImage"*, %"class.blink::Image"*)** %47, align 8
  call void %48(%"class.cc::PaintImage"* nonnull sret %9, %"class.blink::Image"* nonnull %42) #9
  br label %50

49:                                               ; preds = %39
  call void @_ZN2cc10PaintImageC1Ev(%"class.cc::PaintImage"* nonnull %9) #9
  br label %50

50:                                               ; preds = %49, %44
  %51 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %9, i64 0, i32 15, i32 0
  %52 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %51, align 8
  %53 = icmp eq %"class.cc::PaintWorkletInput"* %52, null
  br i1 %53, label %54, label %62

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %9, i64 0, i32 14, i32 0
  %56 = load %class.SkImage*, %class.SkImage** %55, align 8
  %57 = icmp eq %class.SkImage* %56, null
  br i1 %57, label %58, label %62

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.cc::PaintImage", %"class.cc::PaintImage"* %9, i64 0, i32 5, i32 0
  %60 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %59, align 8
  %61 = icmp eq %"class.cc::TextureBacking"* %60, null
  br i1 %61, label %180, label %62

62:                                               ; preds = %58, %50, %54
  %63 = bitcast %"class.blink::FloatRect"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #9
  %64 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %10, i64 0, i32 0, i32 1
  %65 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %10, i64 0, i32 1, i32 0
  %66 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %10, i64 0, i32 1, i32 1
  %67 = bitcast %"class.blink::FloatRect"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -1, i64 16, i1 false)
  %68 = load %"class.blink::Image"*, %"class.blink::Image"** %41, align 8
  %69 = bitcast %"class.blink::Image"* %68 to i64 (%"class.blink::Image"*)***
  %70 = load i64 (%"class.blink::Image"*)**, i64 (%"class.blink::Image"*)*** %69, align 8
  %71 = getelementptr inbounds i64 (%"class.blink::Image"*)*, i64 (%"class.blink::Image"*)** %70, i64 13
  %72 = load i64 (%"class.blink::Image"*)*, i64 (%"class.blink::Image"*)** %71, align 8
  %73 = call i64 %72(%"class.blink::Image"* %68) #9
  %74 = trunc i64 %73 to i32
  %75 = lshr i64 %73, 32
  %76 = trunc i64 %75 to i32
  %77 = sitofp i32 %74 to float
  %78 = sitofp i32 %76 to float
  %79 = bitcast %"class.blink::FloatRect"* %10 to i32*
  store i32 0, i32* %79, align 8
  %80 = bitcast float* %64 to i32*
  store i32 0, i32* %80, align 4
  %81 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %10, i64 0, i32 1
  %82 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %81, i64 0, i32 0
  store float %77, float* %82, align 8
  store float %78, float* %66, align 4
  %83 = bitcast { <2 x float>, <2 x float> }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #9
  %84 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %85 = load %"class.blink::Filter"*, %"class.blink::Filter"** %84, align 8
  %86 = bitcast <2 x i64>* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %86) #9
  %87 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %1, i64 0, i32 0, i32 3
  %88 = bitcast %"class.blink::FloatRect"* %87 to <2 x i64>*
  %89 = load <2 x i64>, <2 x i64>* %88, align 8
  store <2 x i64> %89, <2 x i64>* %13, align 16
  %90 = call { <2 x float>, <2 x float> } @_ZNK5blink6Filter26MapLocalRectToAbsoluteRectERKNS_9FloatRectE(%"class.blink::Filter"* %85, %"class.blink::FloatRect"* nonnull dereferenceable(16) %14) #9
  %91 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 0
  %92 = extractvalue { <2 x float>, <2 x float> } %90, 0
  store <2 x float> %92, <2 x float>* %91, align 8
  %93 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 1
  %94 = extractvalue { <2 x float>, <2 x float> } %90, 1
  store <2 x float> %94, <2 x float>* %93, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %86) #9
  %95 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %1, i64 0, i32 3, i32 0, i32 0
  %96 = load %"class.blink::SVGPreserveAspectRatio"*, %"class.blink::SVGPreserveAspectRatio"** %95, align 8
  call void @_ZNK5blink22SVGPreserveAspectRatio13TransformRectERNS_9FloatRectES2_(%"class.blink::SVGPreserveAspectRatio"* %96, %"class.blink::FloatRect"* nonnull dereferenceable(16) %12, %"class.blink::FloatRect"* nonnull dereferenceable(16) %10) #9
  %97 = bitcast { <2 x float>, <2 x float> }* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97) #9
  %98 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %15, i64 0, i32 1, i64 0
  %99 = bitcast { <2 x float>, <2 x float> }* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %99, i8 -1, i64 16, i1 false)
  %100 = load %"class.blink::Filter"*, %"class.blink::Filter"** %84, align 8
  %101 = bitcast %"class.blink::FloatRect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %101) #9
  %102 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %4, i64 0, i32 1, i32 0
  %103 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %4, i64 0, i32 1, i32 1
  %104 = getelementptr inbounds %"class.blink::Filter", %"class.blink::Filter"* %100, i64 0, i32 1
  %105 = bitcast %"class.blink::FloatRect"* %104 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %101, i8* align 4 %105, i64 16, i1 false) #9
  %106 = load float, float* %102, align 4
  %107 = fcmp ole float %106, 0.000000e+00
  %108 = load float, float* %103, align 4
  %109 = fcmp ole float %108, 0.000000e+00
  %110 = or i1 %107, %109
  br i1 %110, label %111, label %114

111:                                              ; preds = %62
  %112 = load <2 x float>, <2 x float>* %91, align 8
  %113 = load <2 x float>, <2 x float>* %93, align 8
  br label %129

114:                                              ; preds = %62
  %115 = bitcast { <2 x float>, <2 x float> }* %5 to %"class.blink::FloatRect"*
  %116 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %116) #9
  %117 = call { <2 x float>, <2 x float> } @_ZNK5blink6Filter26MapLocalRectToAbsoluteRectERKNS_9FloatRectE(%"class.blink::Filter"* %100, %"class.blink::FloatRect"* nonnull dereferenceable(16) %4) #9
  %118 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %119 = extractvalue { <2 x float>, <2 x float> } %117, 0
  store <2 x float> %119, <2 x float>* %118, align 8
  %120 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %121 = extractvalue { <2 x float>, <2 x float> } %117, 1
  store <2 x float> %121, <2 x float>* %120, align 8
  %122 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %122) #9
  %123 = bitcast { <2 x float>, <2 x float> }* %3 to %"class.blink::FloatRect"*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %122, i8* nonnull align 8 %83, i64 16, i1 false) #9
  call void @_ZN5blink9FloatRect9IntersectERKS0_(%"class.blink::FloatRect"* nonnull %123, %"class.blink::FloatRect"* nonnull dereferenceable(16) %115) #9
  %124 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  %125 = load <2 x float>, <2 x float>* %124, align 8
  %126 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  %127 = load <2 x float>, <2 x float>* %126, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %122) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %116) #9
  %128 = load <2 x float>, <2 x float>* %91, align 8
  br label %129

129:                                              ; preds = %111, %114
  %130 = phi <2 x float> [ %112, %111 ], [ %128, %114 ]
  %131 = phi <2 x float> [ %112, %111 ], [ %125, %114 ]
  %132 = phi <2 x float> [ %113, %111 ], [ %127, %114 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %101) #9
  %133 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %15, i64 0, i32 0
  store <2 x float> %131, <2 x float>* %133, align 8
  %134 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %15, i64 0, i32 1
  store <2 x float> %132, <2 x float>* %134, align 8
  %135 = extractelement <2 x float> %131, i32 0
  %136 = extractelement <2 x float> %130, i32 0
  %137 = fcmp oeq float %135, %136
  br i1 %137, label %138, label %151

138:                                              ; preds = %129
  %139 = extractelement <2 x float> %131, i32 1
  %140 = extractelement <2 x float> %130, i32 1
  %141 = fcmp oeq float %139, %140
  br i1 %141, label %142, label %151

142:                                              ; preds = %138
  %143 = load <2 x float>, <2 x float>* %93, align 8
  %144 = extractelement <2 x float> %132, i32 0
  %145 = extractelement <2 x float> %143, i32 0
  %146 = fcmp oeq float %144, %145
  br i1 %146, label %147, label %151

147:                                              ; preds = %142
  %148 = extractelement <2 x float> %132, i32 1
  %149 = extractelement <2 x float> %143, i32 1
  %150 = fcmp une float %148, %149
  br i1 %150, label %151, label %157

151:                                              ; preds = %129, %142, %138, %147
  %152 = call { <2 x float>, <2 x float> } @_ZN5blink7MapRectERKNS_9FloatRectES2_S2_(%"class.blink::FloatRect"* nonnull dereferenceable(16) %16, %"class.blink::FloatRect"* nonnull dereferenceable(16) %12, %"class.blink::FloatRect"* nonnull dereferenceable(16) %10) #9
  %153 = extractvalue { <2 x float>, <2 x float> } %152, 0
  %154 = extractvalue { <2 x float>, <2 x float> } %152, 1
  %155 = bitcast %"class.blink::FloatRect"* %10 to <2 x float>*
  store <2 x float> %153, <2 x float>* %155, align 8
  %156 = bitcast %"class.blink::FloatSize"* %81 to <2 x float>*
  store <2 x float> %154, <2 x float>* %156, align 8
  br label %157

157:                                              ; preds = %147, %151
  %158 = bitcast %"class.cc::PaintImage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %158)
  %159 = bitcast { <2 x float>, <2 x float> }* %7 to %struct.SkRect*
  %160 = bitcast { <2 x float>, <2 x float> }* %8 to %struct.SkRect*
  %161 = call i8* @_Znwm(i64 200) #10, !noalias !10
  %162 = bitcast i8* %161 to %"class.cc::ImagePaintFilter"*
  call void @_ZN2cc10PaintImageC1EOS0_(%"class.cc::PaintImage"* nonnull %6, %"class.cc::PaintImage"* nonnull dereferenceable(104) %9) #9, !noalias !10
  %163 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %163) #9, !noalias !10
  %164 = bitcast %"class.blink::FloatRect"* %10 to <2 x float>*
  %165 = load <2 x float>, <2 x float>* %164, align 8, !noalias !10
  %166 = bitcast float* %65 to <2 x float>*
  %167 = load <2 x float>, <2 x float>* %166, align 8, !noalias !10
  %168 = fadd <2 x float> %165, %167
  %169 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  store <2 x float> %165, <2 x float>* %169, align 8, !noalias !10
  %170 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  store <2 x float> %168, <2 x float>* %170, align 8, !noalias !10
  %171 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %171) #9, !noalias !10
  %172 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %15, i64 0, i32 0
  %173 = load <2 x float>, <2 x float>* %172, align 8, !noalias !10
  %174 = bitcast float* %98 to <2 x float>*
  %175 = load <2 x float>, <2 x float>* %174, align 8, !noalias !10
  %176 = fadd <2 x float> %173, %175
  %177 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  store <2 x float> %173, <2 x float>* %177, align 8, !noalias !10
  %178 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  store <2 x float> %176, <2 x float>* %178, align 8, !noalias !10
  call void @_ZN2cc16ImagePaintFilterC1ENS_10PaintImageERK6SkRectS4_15SkFilterQuality(%"class.cc::ImagePaintFilter"* nonnull %162, %"class.cc::PaintImage"* nonnull %6, %struct.SkRect* nonnull dereferenceable(16) %159, %struct.SkRect* nonnull dereferenceable(16) %160, i32 3) #9, !noalias !10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %171) #9, !noalias !10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %163) #9, !noalias !10
  call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* nonnull %6) #9, !noalias !10
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %158)
  %179 = bitcast %class.sk_sp* %0 to i8**
  store i8* %161, i8** %179, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #9
  call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %40) #9
  br label %182

180:                                              ; preds = %58
  call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %40) #9
  %181 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %1, i64 0, i32 0
  call void @_ZNK5blink12FilterEffect22CreateTransparentBlackEv(%class.sk_sp* sret %0, %"class.blink::FilterEffect"* %181) #9
  br label %182

182:                                              ; preds = %157, %38, %180
  ret void
}

declare void @_ZN2cc10PaintImageC1Ev(%"class.cc::PaintImage"*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN5blink7MapRectERKNS_9FloatRectES2_S2_(%"class.blink::FloatRect"* dereferenceable(16), %"class.blink::FloatRect"* dereferenceable(16), %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"*) unnamed_addr #5

declare void @_ZNK5blink12FilterEffect22CreateTransparentBlackEv(%class.sk_sp* sret, %"class.blink::FilterEffect"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7FEImageD2Ev(%"class.blink::FEImage"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink7FEImageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.blink::Image"*, %"class.blink::Image"** %3, align 8
  %5 = icmp eq %"class.blink::Image"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::Image", %"class.blink::Image"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.blink::Image"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.blink::Image"*)***
  %15 = load void (%"class.blink::Image"*)**, void (%"class.blink::Image"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %15, i64 1
  %17 = load void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %16, align 8
  tail call void %17(%"class.blink::Image"* nonnull %13) #9
  br label %18

18:                                               ; preds = %1, %6, %11
  %19 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %0, i64 0, i32 0
  tail call void @_ZN5blink12FilterEffectD2Ev(%"class.blink::FilterEffect"* %19) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7FEImageD0Ev(%"class.blink::FEImage"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink7FEImageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.blink::Image"*, %"class.blink::Image"** %3, align 8
  %5 = icmp eq %"class.blink::Image"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::Image", %"class.blink::Image"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.blink::Image"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.blink::Image"*)***
  %15 = load void (%"class.blink::Image"*)**, void (%"class.blink::Image"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %15, i64 1
  %17 = load void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %16, align 8
  tail call void %17(%"class.blink::Image"* nonnull %13) #9
  br label %18

18:                                               ; preds = %1, %6, %11
  %19 = getelementptr inbounds %"class.blink::FEImage", %"class.blink::FEImage"* %0, i64 0, i32 0
  tail call void @_ZN5blink12FilterEffectD2Ev(%"class.blink::FilterEffect"* %19) #9
  ret void
}

declare void @_ZN5blink12FilterEffect34CreateImageFilterWithoutValidationEv(%class.sk_sp* sret, %"class.blink::FilterEffect"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink7FEImage19GetFilterEffectTypeEv(%"class.blink::FEImage"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7FEImage30SetOperatingInterpolationSpaceENS_18InterpolationSpaceE(%"class.blink::FEImage"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12FilterEffect24AffectsTransparentPixelsEv(%"class.blink::FilterEffect"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12FilterEffect36MayProduceInvalidPreMultipliedPixelsEv(%"class.blink::FilterEffect"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare { <2 x float>, <2 x float> } @_ZNK5blink12FilterEffect9MapEffectERKNS_9FloatRectE(%"class.blink::FilterEffect"*, %"class.blink::FloatRect"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink16SVGLengthContextC1EPKNS_10SVGElementE(%"class.blink::SVGLengthContext"*, %"class.blink::SVGElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink16SVGLengthContext17DetermineViewportERNS_9FloatSizeE(%"class.blink::SVGLengthContext"*, %"class.blink::FloatSize"* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform5ScaleEdd(%"class.blink::AffineTransform"*, double, double) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #6

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #6

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #6

; Function Attrs: nounwind
declare void @_ZN5blink12FilterEffectD2Ev(%"class.blink::FilterEffect"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10SVGElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGElement"*
  %4 = bitcast i8* %1 to void (%"class.blink::SVGElement"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SVGElement"*, %"class.blink::Visitor"*)**, void (%"class.blink::SVGElement"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SVGElement"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGElement"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::SVGElement"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGElement"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SVGElement"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_22SVGPreserveAspectRatioEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN2cc17RecordPaintFilterC1E5sk_spINS_13PaintOpBufferEERK6SkRectRKN3gfx5SizeFENS_11PaintShader15ScalingBehaviorE(%"class.cc::RecordPaintFilter"*, %class.sk_sp.1428*, %struct.SkRect* dereferenceable(16), %"class.gfx::SizeF"* dereferenceable(8), i8 zeroext) unnamed_addr #1

declare void @_ZN2cc10PaintImageC1EOS0_(%"class.cc::PaintImage"*, %"class.cc::PaintImage"* dereferenceable(104)) unnamed_addr #1

declare void @_ZN2cc16ImagePaintFilterC1ENS_10PaintImageERK6SkRectS4_15SkFilterQuality(%"class.cc::ImagePaintFilter"*, %"class.cc::PaintImage"*, %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), i32) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blinkL19MakeMapBetweenRectsERKNS_9FloatRectES2_: argument 0"}
!5 = distinct !{!5, !"_ZN5blinkL19MakeMapBetweenRectsERKNS_9FloatRectES2_"}
!6 = !{!"branch_weights", i32 1, i32 2000}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_Z10sk_make_spIN2cc17RecordPaintFilterEJ5sk_spINS0_13PaintOpBufferEERN5blink9FloatRectEEES2_IT_EDpOT0_: argument 0"}
!9 = distinct !{!9, !"_Z10sk_make_spIN2cc17RecordPaintFilterEJ5sk_spINS0_13PaintOpBufferEERN5blink9FloatRectEEES2_IT_EDpOT0_"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_Z10sk_make_spIN2cc16ImagePaintFilterEJNS0_10PaintImageERN5blink9FloatRectES5_15SkFilterQualityEE5sk_spIT_EDpOT0_: argument 0"}
!12 = distinct !{!12, !"_Z10sk_make_spIN2cc16ImagePaintFilterEJNS0_10PaintImageERN5blink9FloatRectES5_15SkFilterQualityEE5sk_spIT_EDpOT0_"}
